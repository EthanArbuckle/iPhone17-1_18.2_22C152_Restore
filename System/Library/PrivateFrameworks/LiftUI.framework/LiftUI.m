BOOL sub_1B58FF4F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1B58FF508()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B58FF550()
{
  return sub_1B5A1C7B8();
}

uint64_t sub_1B58FF57C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B58FF5C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B5A1A3C8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B58FF634()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6LiftUI26RemoteContentRefreshHelper__status;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62DF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v3, v4);
}

uint64_t sub_1B58FF6D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A1A358();
  *a1 = result;
  return result;
}

uint64_t RemoteContentView.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RemoteContentView.store.getter()
{
  return sub_1B58FF7A8(MEMORY[0x1E4F3C670]);
}

uint64_t type metadata accessor for RemoteContentView(uint64_t a1)
{
  return sub_1B59001B4(a1, (uint64_t *)&unk_1E9D62C38);
}

uint64_t RemoteContentView.$store.getter()
{
  return sub_1B58FF7A8(MEMORY[0x1E4F3C678]);
}

uint64_t sub_1B58FF7A8(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RemoteContentView(0) + 24));
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v5 = *((unsigned __int8 *)v2 + 16);
  uint64_t v6 = type metadata accessor for RemoteStateStore(0);
  uint64_t v7 = sub_1B58FF874((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  return a1(v3, v4, v5, v6, v7);
}

uint64_t RemoteContentView.localStore.getter()
{
  return sub_1B58FF8D4(MEMORY[0x1E4F3C670]);
}

uint64_t sub_1B58FF874(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RemoteContentView.$localStore.getter()
{
  return sub_1B58FF8D4(MEMORY[0x1E4F3C678]);
}

uint64_t sub_1B58FF8D4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RemoteContentView(0) + 28));
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v5 = *((unsigned __int8 *)v2 + 16);
  uint64_t v6 = type metadata accessor for LocalStateStore(0);
  uint64_t v7 = sub_1B58FF874(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
  return a1(v3, v4, v5, v6, v7);
}

uint64_t RemoteContentView.modifiers.getter()
{
  type metadata accessor for RemoteContentView(0);
  return swift_bridgeObjectRetain();
}

uint64_t RemoteContentView.modifiers.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for RemoteContentView(0) + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RemoteContentView.modifiers.modify())()
{
  return nullsub_1;
}

uint64_t RemoteContentView.init(id:url:stateStore:localStateStore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v10 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1F4188790](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
  uint64_t v14 = *(int *)(v13 + 48);
  uint64_t v15 = *(int *)(v13 + 64);
  uint64_t v16 = sub_1B5A1A258();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v12, a3, v16);
  v12[v14] = 8;
  *(_OWORD *)&v12[v15] = xmmword_1B5A1D190;
  swift_storeEnumTagMultiPayload();
  sub_1B58FFC10(a1, a2, (uint64_t)v12, v19, v20, a6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
}

uint64_t type metadata accessor for RemoteContent(uint64_t a1)
{
  return sub_1B59001B4(a1, (uint64_t *)&unk_1E9D62C08);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1B58FFC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  v12 = (int *)type metadata accessor for RemoteContentView(0);
  uint64_t v13 = (void *)((char *)a6 + v12[8]);
  type metadata accessor for RemoteContentRefreshHelper(0);
  swift_allocObject();
  sub_1B5A1A388();
  sub_1B58FF874(&qword_1E9D62BB0, (void (*)(uint64_t))type metadata accessor for RemoteContentRefreshHelper);
  *uint64_t v13 = sub_1B5A1A678();
  v13[1] = v14;
  *(void *)((char *)a6 + v12[9]) = MEMORY[0x1E4FBC860];
  uint64_t v15 = (char *)a6 + v12[11];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  uint64_t v16 = (char *)a6 + v12[12];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *((void *)v16 + 1) = 0;
  v16[16] = 0;
  uint64_t v17 = (char *)a6 + v12[13];
  *(void *)uint64_t v17 = swift_getKeyPath();
  v17[8] = 0;
  *a6 = a1;
  a6[1] = a2;
  uint64_t v18 = (uint64_t)a6 + v12[5];
  sub_1B5909084(a3, v18, type metadata accessor for RemoteContent);
  uint64_t v19 = type metadata accessor for RemoteContent(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  uint64_t v20 = (char *)a6 + v12[10];
  *(void *)uint64_t v20 = sub_1B59052B0;
  *((void *)v20 + 1) = a4;
  v20[16] = 0;
  v21 = (char *)a6 + v12[6];
  *(void *)v21 = sub_1B5903E34;
  *((void *)v21 + 1) = a4;
  v21[16] = 0;
  swift_retain();
  uint64_t result = sub_1B5905DE8(a3, type metadata accessor for RemoteContent);
  v23 = (char *)a6 + v12[7];
  *(void *)v23 = sub_1B5903E34;
  *((void *)v23 + 1) = a5;
  v23[16] = 0;
  return result;
}

uint64_t RemoteContentView.init(id:json:stateStore:localStateStore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  return sub_1B58FFE5C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t RemoteContentView.init(id:data:stateStore:localStateStore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  return sub_1B58FFE5C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1B58FFE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v14 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v16 = a3;
  v16[1] = a4;
  swift_storeEnumTagMultiPayload();
  return sub_1B58FFC10(a1, a2, (uint64_t)v16, a5, a6, a7);
}

uint64_t RemoteContentView.init(id:remoteLoader:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for RemoteContentView(0);
  v9 = (int *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = (void *)((char *)v11 + v9[10]);
  type metadata accessor for RemoteContentRefreshHelper(0);
  swift_allocObject();
  v23[15] = 0;
  sub_1B5A1A388();
  sub_1B58FF874(&qword_1E9D62BB0, (void (*)(uint64_t))type metadata accessor for RemoteContentRefreshHelper);
  uint64_t *v12 = sub_1B5A1A678();
  v12[1] = v13;
  *(void *)((char *)v11 + v9[11]) = MEMORY[0x1E4FBC860];
  uint64_t v14 = (char *)v11 + v9[13];
  *(void *)uint64_t v14 = swift_getKeyPath();
  *((void *)v14 + 1) = 0;
  v14[16] = 0;
  uint64_t v15 = (char *)v11 + v9[14];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  uint64_t v16 = (char *)v11 + v9[15];
  *(void *)uint64_t v16 = swift_getKeyPath();
  v16[8] = 0;
  *uint64_t v11 = a1;
  v11[1] = a2;
  uint64_t v17 = (char *)v11 + v9[12];
  *(void *)uint64_t v17 = sub_1B5903E34;
  *((void *)v17 + 1) = a3;
  v17[16] = 0;
  uint64_t v18 = (char *)v11 + v9[8];
  *(void *)uint64_t v18 = sub_1B5903E3C;
  *((void *)v18 + 1) = a3;
  v18[16] = 0;
  uint64_t v19 = (char *)v11 + v9[9];
  *(void *)uint64_t v19 = sub_1B590024C;
  *((void *)v19 + 1) = 0;
  v19[16] = 0;
  uint64_t v20 = (char *)v11 + v9[7];
  uint64_t v21 = type metadata accessor for RemoteContent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  sub_1B590901C((uint64_t)v11, a4, type metadata accessor for RemoteContentView);
  return swift_retain();
}

uint64_t type metadata accessor for RemoteContentRefreshHelper(uint64_t a1)
{
  return sub_1B59001B4(a1, (uint64_t *)&unk_1E9D62C18);
}

uint64_t sub_1B59001B4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B59001EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_remoteState);
  if (v1)
  {
    uint64_t v2 = v1;
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    swift_allocObject();
    uint64_t v2 = RemoteStateStore.init()();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1B5900250(char a1)
{
  return qword_1B5A1D6E8[a1];
}

uint64_t sub_1B5900270(char *a1, char *a2)
{
  return sub_1B59EE2E8(*a1, *a2);
}

uint64_t sub_1B590027C()
{
  return sub_1B59F0274();
}

uint64_t sub_1B5900284()
{
  return sub_1B59F3B00();
}

uint64_t sub_1B590028C()
{
  return sub_1B59F63D4();
}

uint64_t sub_1B5900294@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5905010();
  *a1 = result;
  return result;
}

uint64_t sub_1B59002C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5900250(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59002F0()
{
  return sub_1B5900250(*v0);
}

uint64_t sub_1B59002F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5905010();
  *a1 = result;
  return result;
}

uint64_t sub_1B5900320()
{
  return 0;
}

void sub_1B590032C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1B5900338(uint64_t a1)
{
  unint64_t v2 = sub_1B5903E88();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5900374(uint64_t a1)
{
  unint64_t v2 = sub_1B5903E88();
  return MEMORY[0x1F41862B0](a1, v2);
}

void RemoteContentView.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v3 = sub_1B5A1C4E8();
  uint64_t v77 = *(void *)(v3 - 8);
  uint64_t v78 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v76 = (uint64_t)v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B5A1A2A8();
  uint64_t v74 = *(void *)(v5 - 8);
  uint64_t v75 = v5;
  MEMORY[0x1F4188790](v5);
  v73 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BB8);
  uint64_t v79 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v9 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for RemoteContentView(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t *)&v13[*(int *)(v11 + 32)];
  type metadata accessor for RemoteContentRefreshHelper(0);
  swift_allocObject();
  LOBYTE(v85) = 0;
  sub_1B5A1A388();
  sub_1B58FF874(&qword_1E9D62BB0, (void (*)(uint64_t))type metadata accessor for RemoteContentRefreshHelper);
  *uint64_t v14 = sub_1B5A1A678();
  v14[1] = v15;
  v82 = v14;
  uint64_t v80 = v10[9];
  *(void *)&v13[v80] = MEMORY[0x1E4FBC860];
  uint64_t v16 = (uint64_t)&v13[v10[11]];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(void *)(v16 + 8) = 0;
  uint64_t v81 = v16;
  *(unsigned char *)(v16 + 16) = 0;
  uint64_t v17 = &v13[v10[12]];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *((void *)v17 + 1) = 0;
  v17[16] = 0;
  uint64_t v18 = (uint64_t *)v13;
  uint64_t v19 = (uint64_t)&v13[v10[13]];
  *(void *)uint64_t v19 = swift_getKeyPath();
  uint64_t v83 = v19;
  *(unsigned char *)(v19 + 8) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5903E88();
  uint64_t v20 = v84;
  sub_1B5A1C838();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v24 = v81;
LABEL_4:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B5903F2C(*(void *)v24, *(void *)(v24 + 8), *(unsigned char *)(v24 + 16));
    sub_1B5903F2C(*(void *)v17, *((void *)v17 + 1), v17[16]);
    sub_1B5903F38(*(id *)v83, *(unsigned char *)(v83 + 8));
    return;
  }
  uint64_t v21 = v79;
  v84 = a1;
  LOBYTE(v85) = 0;
  uint64_t v22 = sub_1B5A1C598();
  uint64_t v25 = v23;
  uint64_t v70 = v7;
  v71 = v9;
  v26 = v18;
  if (v23)
  {
    uint64_t v27 = v22;
  }
  else
  {
    v28 = v73;
    sub_1B5A1A298();
    uint64_t v27 = sub_1B5A1A288();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v28, v75);
  }
  uint64_t v30 = v76;
  uint64_t *v26 = v27;
  v26[1] = v25;
  __swift_project_boxed_opaque_existential_1(v84, v84[3]);
  uint64_t v31 = sub_1B5A1C828();
  if (qword_1E9D62B00 != -1) {
    swift_once();
  }
  uint64_t v32 = v78;
  uint64_t v33 = __swift_project_value_buffer(v78, (uint64_t)qword_1E9D91080);
  uint64_t v34 = v77;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v30, v33, v32);
  if (*(void *)(v31 + 16) && (unint64_t v35 = sub_1B59049D0(v30), (v36 & 1) != 0))
  {
    sub_1B59052CC(*(void *)(v31 + 56) + 32 * v35, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v30, v32);
  if (!*((void *)&v86 + 1))
  {
    sub_1B5908FC0((uint64_t)&v85, &qword_1E9D62BC8);
    goto LABEL_18;
  }
  uint64_t v37 = type metadata accessor for RemoteStateStore(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    v40 = v84;
    type metadata accessor for RemoteLoaderError(0);
    sub_1B58FF874((unint64_t *)&qword_1E9D62BD0, (void (*)(uint64_t))type metadata accessor for RemoteLoaderError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v71, v70);
    uint64_t v24 = v81;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  uint64_t v78 = v37;
  uint64_t v38 = v87;
  LOBYTE(v87) = 1;
  sub_1B5904A34();
  uint64_t v39 = v70;
  sub_1B5A1C5D8();
  uint64_t v75 = v38;
  uint64_t v76 = v85;
  uint64_t v41 = v86;
  uint64_t v74 = *((void *)&v85 + 1);
  LODWORD(v77) = BYTE8(v86);
  LOBYTE(v87) = 2;
  sub_1B5A1C5B8();
  uint64_t v67 = v41;
  long long v68 = v85;
  uint64_t v69 = v86;
  LODWORD(v73) = BYTE8(v86);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BE0);
  LOBYTE(v87) = 3;
  sub_1B59095C8((unint64_t *)&qword_1E9D62BE8, &qword_1E9D62BE0);
  sub_1B5A1C5B8();
  uint64_t v42 = v79;
  long long v43 = v85;
  v82 = (uint64_t *)*((void *)&v85 + 1);
  uint64_t v83 = v85;
  uint64_t v44 = v86;
  uint64_t v81 = v86;
  char v45 = BYTE8(v86);
  LODWORD(v80) = BYTE8(v86);
  v66 = v10;
  v46 = (char *)v26 + v10[5];
  uint64_t v47 = v74;
  *(void *)v46 = v76;
  *((void *)v46 + 1) = v47;
  uint64_t v48 = v67;
  *((void *)v46 + 2) = v67;
  v46[24] = v77;
  *((_OWORD *)v46 + 2) = v68;
  *((void *)v46 + 6) = v69;
  v46[56] = (char)v73;
  *((_OWORD *)v46 + 4) = v43;
  *((void *)v46 + 10) = v44;
  v46[88] = v45;
  *((void *)v46 + 12) = v75;
  uint64_t v49 = type metadata accessor for RemoteContent(0);
  v65[1] = 0;
  uint64_t v50 = v49;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v46, 0, 1, v50);
  swift_retain_n();
  sub_1B5904B60(v76, v47, v48, v77);
  sub_1B5904BDC(v68, *((uint64_t *)&v68 + 1), v69, v73);
  sub_1B5904BF0(v83, (uint64_t)v82, v81, v80);
  uint64_t v51 = MEMORY[0x1E4FBC860];
  unint64_t v52 = sub_1B5903244(MEMORY[0x1E4FBC860], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5904C60);
  v65[0] = sub_1B59030F0(v51, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5904C60);
  uint64_t v53 = v42;
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = qword_1E9D65378;
  swift_retain();
  *(void *)(v54 + v55) = sub_1B59030F0(v51, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5904C60);
  uint64_t v56 = v75;
  *(void *)(v54 + qword_1E9D65380) = v75;
  swift_retain_n();
  swift_release();
  uint64_t v57 = sub_1B59038C0(v56);
  swift_retain();
  sub_1B590505C(v52, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B5904C58);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v58 = (void *)(v57 + qword_1E9D65378);
  swift_beginAccess();
  void *v58 = v65[0];
  swift_bridgeObjectRelease();
  sub_1B5904A88(v76, v74, v67, v77);
  sub_1B5904B4C(v68, *((uint64_t *)&v68 + 1), v69, v73);
  sub_1B5905230(v83, (uint64_t)v82, v81, v80);
  swift_release();
  v59 = v66;
  v60 = (char *)v26 + v66[10];
  *(void *)v60 = sub_1B59052B0;
  *((void *)v60 + 1) = v57;
  v60[16] = 0;
  v61 = v59;
  v62 = (char *)v26 + v59[6];
  *(void *)v62 = sub_1B5903E34;
  *((void *)v62 + 1) = v57;
  v62[16] = 0;
  v63 = *(void (**)(char *, uint64_t))(v53 + 8);
  swift_retain();
  v63(v71, v39);
  v64 = (char *)v26 + v61[7];
  *(void *)v64 = sub_1B590024C;
  *((void *)v64 + 1) = 0;
  v64[16] = 0;
  sub_1B5909084((uint64_t)v26, v72, type metadata accessor for RemoteContentView);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  sub_1B5905DE8((uint64_t)v26, type metadata accessor for RemoteContentView);
}

uint64_t sub_1B5900F34(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for ContentRegistry());
  swift_retain();
  id v3 = objc_msgSend(v2, sel_init);
  return _s6LiftUI12RemoteLoaderC11remoteState15contentRegistryAcA0cF5StoreC_AA07ContentH0CtcfC_0(a1, v3);
}

uint64_t sub_1B5900F94()
{
  return LocalStateStore.init()();
}

uint64_t sub_1B5900FCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1B5A1AB28();
  MEMORY[0x1F4188790](v3 - 8);
  v125 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RemoteContentView(0);
  uint64_t v132 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v130 = (uint64_t)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v134 = (uint64_t)&v125 - v8;
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E58);
  MEMORY[0x1F4188790](v128);
  v127 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C30);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RemoteContent(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  v126 = (uint8_t *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  v131 = (char *)&v125 - v17;
  uint64_t v135 = v5;
  uint64_t v136 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1B5A1A3C8();
  swift_release();
  swift_release();
  swift_release();
  if (v149) {
    goto LABEL_4;
  }
  uint64_t v18 = v135;
  sub_1B5909890(v136 + *(int *)(v135 + 20), (uint64_t)v12, &qword_1E9D62C30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1B5908FC0((uint64_t)v12, &qword_1E9D62C30);
LABEL_4:
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1B5A1A328();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E9D910D0);
    uint64_t v20 = v130;
    sub_1B5909084(v136, v130, type metadata accessor for RemoteContentView);
    uint64_t v21 = sub_1B5A1A308();
    os_log_type_t v22 = sub_1B5A1C278();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = v135;
    uint64_t v129 = a1;
    if (v23)
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      v131 = (char *)swift_slowAlloc();
      *(void *)&long long v147 = v131;
      *(_DWORD *)uint64_t v25 = 136315138;
      v126 = v25 + 4;
      type metadata accessor for RemoteLoader(0);
      sub_1B58FF874(&qword_1E9D62E60, (void (*)(uint64_t))type metadata accessor for RemoteLoader);
      sub_1B5A1A508();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1B5A1A3C8();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v26 = sub_1B59A87C0();
      unint64_t v28 = v27;
      sub_1B5908F6C((uint64_t)&v149);
      *(void *)&long long v149 = sub_1B5928EE8(v26, v28, (uint64_t *)&v147);
      sub_1B5A1C2D8();
      uint64_t v24 = v135;
      swift_bridgeObjectRelease();
      sub_1B5905DE8(v20, type metadata accessor for RemoteContentView);
      _os_log_impl(&dword_1B58FD000, v21, v22, "Using loader status: %s", v25, 0xCu);
      uint64_t v29 = v131;
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v29, -1, -1);
      MEMORY[0x1BA9A4780](v25, -1, -1);
    }
    else
    {
      sub_1B5905DE8(v20, type metadata accessor for RemoteContentView);
    }

    uint64_t v30 = v136;
    type metadata accessor for RemoteLoader(0);
    sub_1B58FF874(&qword_1E9D62E60, (void (*)(uint64_t))type metadata accessor for RemoteLoader);
    sub_1B5A1A508();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B5A1A3C8();
    swift_release();
    swift_release();
    swift_release();
    if (v154)
    {
      if (v154 == 1)
      {
        uint64_t v31 = (char *)v153;
        int has_internal_content = os_variant_has_internal_content();
        uint64_t v33 = v30 + *(int *)(v24 + 48);
        uint64_t v34 = *(void *)v33;
        uint64_t v35 = *(void *)(v33 + 8);
        char v36 = *(unsigned char *)(v33 + 16);
        sub_1B59066A4(*(void *)v33, v35, v36);
        uint64_t v37 = sub_1B59041A0(v34, v35, v36);
        uint64_t v39 = v38;
        sub_1B5903F2C(v34, v35, v36);
        v131 = v31;
        if (has_internal_content)
        {
          uint64_t v40 = v132;
          if (!v37
            || (uint64_t ObjectType = swift_getObjectType(),
                uint64_t v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 8))(v31, ObjectType, v39),
                swift_unknownObjectRelease(),
                !v42))
          {
            sub_1B5A1AB18();
            sub_1B5A1AB08();
            *(void *)&long long v149 = v31;
            long long v43 = v31;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E68);
            sub_1B5A1BF48();
            sub_1B5A1AAF8();
            swift_bridgeObjectRelease();
            sub_1B5A1AB08();
            sub_1B5A1AB48();
            *(void *)&long long v149 = sub_1B5A1B328();
            *((void *)&v149 + 1) = v44;
            v150[0] = v45 & 1;
            *(void *)&v150[8] = v46;
            uint64_t v42 = sub_1B5A1BA88();
          }
          uint64_t v47 = v134;
          sub_1B5909084(v136, v134, type metadata accessor for RemoteContentView);
          unint64_t v48 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
          unint64_t v49 = (v133 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v50 = swift_allocObject();
          sub_1B590901C(v47, v50 + v48, type metadata accessor for RemoteContentView);
          *(void *)(v50 + v49) = v31;
          *(void *)&long long v147 = v42;
          *((void *)&v147 + 1) = sub_1B59087BC;
          v148[0] = (unint64_t)v50;
          *(void *)&v148[1] = 0;
          BYTE8(v148[1]) = 0;
        }
        else
        {
          uint64_t v114 = v132;
          if (!v37
            || (uint64_t v115 = swift_getObjectType(),
                uint64_t v116 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 8))(v31, v115, v39),
                swift_unknownObjectRelease(),
                !v116))
          {
            uint64_t v116 = sub_1B5A1BA88();
          }
          uint64_t v117 = v134;
          sub_1B5909084(v136, v134, type metadata accessor for RemoteContentView);
          unint64_t v118 = (*(unsigned __int8 *)(v114 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
          unint64_t v119 = (v133 + v118 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v120 = swift_allocObject();
          sub_1B590901C(v117, v120 + v118, type metadata accessor for RemoteContentView);
          *(void *)(v120 + v119) = v31;
          *(void *)&long long v147 = v116;
          *((void *)&v147 + 1) = sub_1B59087BC;
          v148[0] = (unint64_t)v120;
          *(void *)&v148[1] = 0;
          BYTE8(v148[1]) = 1;
        }
        v121 = v31;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C68);
        sub_1B5907D94();
        sub_1B5A1AE58();
        long long v122 = v149;
        long long v123 = *(_OWORD *)v150;
        long long v147 = v149;
        v148[0] = *(_OWORD *)v150;
        *(void *)&v148[1] = *(void *)&v150[16];
        *((void *)&v148[1] + 1) = v150[24];
        memset(&v148[2], 0, 41);
        BYTE9(v148[4]) = 1;
        sub_1B59087C0(v149, *((uint64_t *)&v149 + 1), *(uint64_t *)v150, *(uint64_t *)&v150[8]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C88);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62D08);
        sub_1B5907ECC();
        sub_1B5908164();
        sub_1B5A1AE58();

        sub_1B590882C(v122, *((uint64_t *)&v122 + 1), v123, *((uint64_t *)&v123 + 1));
      }
      else
      {
        uint64_t v101 = v30 + *(int *)(v24 + 48);
        uint64_t v102 = *(void *)v101;
        uint64_t v103 = *(void *)(v101 + 8);
        char v104 = *(unsigned char *)(v101 + 16);
        sub_1B59066A4(*(void *)v101, v103, v104);
        uint64_t v105 = sub_1B59041A0(v102, v103, v104);
        uint64_t v107 = v106;
        sub_1B5903F2C(v102, v103, v104);
        if (!v105
          || (uint64_t v108 = swift_getObjectType(),
              uint64_t v109 = (*(uint64_t (**)(uint64_t, uint64_t))(v107 + 16))(v108, v107),
              swift_unknownObjectRelease(),
              !v109))
        {
          sub_1B5A1A538();
          sub_1B59095C8(&qword_1E9D62E70, &qword_1E9D62E58);
          uint64_t v109 = sub_1B5A1BA88();
        }
        uint64_t v110 = v132;
        uint64_t v111 = v134;
        sub_1B5909084(v136, v134, type metadata accessor for RemoteContentView);
        unint64_t v112 = (*(unsigned __int8 *)(v110 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
        uint64_t v113 = swift_allocObject();
        sub_1B590901C(v111, v113 + v112, type metadata accessor for RemoteContentView);
        *(void *)&long long v149 = v109;
        *((void *)&v149 + 1) = sub_1B5908EE0;
        *(void *)v150 = v113;
        memset(&v150[8], 0, 64);
        LOBYTE(v151) = 0;
        swift_retain();
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C68);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C98);
        sub_1B5907D94();
        sub_1B5907F08();
        sub_1B5A1AE58();
        long long v147 = v137;
        v148[0] = v138;
        v148[1] = v139;
        v148[2] = v140;
        v148[3] = v141;
        *(void *)&v148[4] = v142;
        WORD4(v148[4]) = v143;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C88);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62D08);
        sub_1B5907ECC();
        sub_1B5908164();
        sub_1B5A1AE58();
        swift_release();
        swift_release();
      }
      uint64_t v100 = *((void *)&v149 + 1);
      uint64_t v99 = v149;
      uint64_t v98 = *(void *)&v150[8];
      uint64_t v97 = *(void *)v150;
      uint64_t v89 = *(void *)&v150[24];
      uint64_t v88 = *(void *)&v150[16];
      uint64_t v91 = *(void *)&v150[40];
      uint64_t v90 = *(void *)&v150[32];
      uint64_t v92 = *(void *)&v150[56];
      uint64_t v94 = *(void *)&v150[48];
      uint64_t v93 = *(void *)&v150[64];
      __int16 v95 = v151;
      int v96 = HIBYTE(v151);
    }
    else
    {
      sub_1B5908BE8(&v153, (uint64_t)v144);
      uint64_t v78 = v145;
      uint64_t v79 = v146;
      __swift_project_boxed_opaque_existential_1(v144, v145);
      v131 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v79 + 24))(v78, v79);
      type metadata accessor for RemoteStateStore(0);
      sub_1B58FF874((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
      uint64_t v128 = sub_1B5A1A508();
      uint64_t v130 = sub_1B5A1A348();
      uint64_t v80 = sub_1B5A1A508();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v82 = v136;
      type metadata accessor for LocalStateStore(0);
      sub_1B58FF874(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
      uint64_t v83 = sub_1B5A1A508();
      uint64_t v84 = sub_1B5A1A348();
      uint64_t v85 = v134;
      sub_1B5909084(v82, v134, type metadata accessor for RemoteContentView);
      unint64_t v86 = (*(unsigned __int8 *)(v132 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
      uint64_t v87 = swift_allocObject();
      sub_1B590901C(v85, v87 + v86, type metadata accessor for RemoteContentView);
      *(void *)&long long v149 = v131;
      *((void *)&v149 + 1) = v130;
      *(void *)v150 = v128;
      *(void *)&v150[8] = KeyPath;
      *(void *)&v150[16] = v80;
      *(void *)&v150[24] = v84;
      *(void *)&v150[32] = v83;
      *(void *)&v150[40] = sub_1B5908C0C;
      *(_OWORD *)&v150[48] = (unint64_t)v87;
      *(void *)&v150[64] = 0;
      LOBYTE(v151) = 1;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B590881C((uint64_t)sub_1B5908C0C);
      sub_1B590881C(0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C98);
      sub_1B5907D94();
      sub_1B5907F08();
      sub_1B5A1AE58();
      long long v147 = v137;
      v148[0] = v138;
      v148[1] = v139;
      v148[2] = v140;
      v148[3] = v141;
      *(void *)&v148[4] = v142;
      WORD4(v148[4]) = v143;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62D08);
      sub_1B5907ECC();
      sub_1B5908164();
      sub_1B5A1AE58();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_1B5908888((uint64_t)sub_1B5908C0C);
      sub_1B5908888(0);
      uint64_t v135 = *((void *)&v149 + 1);
      uint64_t v136 = v149;
      uint64_t v88 = *(void *)&v150[16];
      uint64_t v133 = *(void *)&v150[8];
      uint64_t v134 = *(void *)v150;
      uint64_t v89 = *(void *)&v150[24];
      uint64_t v91 = *(void *)&v150[40];
      uint64_t v90 = *(void *)&v150[32];
      uint64_t v92 = *(void *)&v150[56];
      uint64_t v94 = *(void *)&v150[48];
      uint64_t v93 = *(void *)&v150[64];
      __int16 v95 = v151;
      int v96 = HIBYTE(v151);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
      uint64_t v98 = v133;
      uint64_t v97 = v134;
      uint64_t v100 = v135;
      uint64_t v99 = v136;
    }
    if (v96) {
      __int16 v124 = 256;
    }
    else {
      __int16 v124 = 0;
    }
    *(void *)&long long v147 = v99;
    *((void *)&v147 + 1) = v100;
    *(void *)&v148[0] = v97;
    *((void *)&v148[0] + 1) = v98;
    *(void *)&v148[1] = v88;
    *((void *)&v148[1] + 1) = v89;
    *(void *)&v148[2] = v90;
    *((void *)&v148[2] + 1) = v91;
    *(void *)&v148[3] = v94;
    *((void *)&v148[3] + 1) = v92;
    *(void *)&v148[4] = v93;
    WORD4(v148[4]) = v124 | v95;
    BYTE10(v148[4]) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C78);
    sub_1B5907D94();
    sub_1B5907E08();
    uint64_t result = sub_1B5A1AE58();
    long long v70 = v149;
    long long v71 = *(_OWORD *)v150;
    long long v72 = *(_OWORD *)&v150[16];
    long long v73 = *(_OWORD *)&v150[32];
    long long v74 = *(_OWORD *)&v150[48];
    uint64_t v75 = *(void *)&v150[64];
    __int16 v76 = v151;
    char v77 = v152;
    a1 = v129;
    goto LABEL_39;
  }
  uint64_t v130 = v14;
  sub_1B590901C((uint64_t)v12, (uint64_t)v131, type metadata accessor for RemoteContent);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v51 = sub_1B5A1A328();
  __swift_project_value_buffer(v51, (uint64_t)qword_1E9D910D0);
  unint64_t v52 = sub_1B5A1A308();
  os_log_type_t v53 = sub_1B5A1C278();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v54 = 0;
    _os_log_impl(&dword_1B58FD000, v52, v53, "needs refresh and has content", v54, 2u);
    MEMORY[0x1BA9A4780](v54, -1, -1);
  }

  uint64_t v55 = v136 + *(int *)(v18 + 48);
  uint64_t v56 = *(void *)v55;
  uint64_t v57 = *(void *)(v55 + 8);
  char v58 = *(unsigned char *)(v55 + 16);
  sub_1B59066A4(*(void *)v55, v57, v58);
  uint64_t v59 = sub_1B59041A0(v56, v57, v58);
  uint64_t v61 = v60;
  sub_1B5903F2C(v56, v57, v58);
  if (!v59
    || (uint64_t v62 = swift_getObjectType(),
        uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 16))(v62, v61),
        swift_unknownObjectRelease(),
        !v63))
  {
    sub_1B5A1A538();
    sub_1B59095C8(&qword_1E9D62E70, &qword_1E9D62E58);
    uint64_t v63 = sub_1B5A1BA88();
  }
  uint64_t v135 = v63;
  uint64_t v64 = v134;
  sub_1B5909084(v136, v134, type metadata accessor for RemoteContentView);
  uint64_t v65 = (uint64_t)v126;
  sub_1B5909084((uint64_t)v131, (uint64_t)v126, type metadata accessor for RemoteContent);
  unint64_t v66 = (*(unsigned __int8 *)(v132 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
  unint64_t v67 = (v133 + *(unsigned __int8 *)(v130 + 80) + v66) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
  uint64_t v68 = swift_allocObject();
  sub_1B590901C(v64, v68 + v66, type metadata accessor for RemoteContentView);
  sub_1B590901C(v65, v68 + v67, type metadata accessor for RemoteContent);
  *(void *)&long long v147 = v135;
  *((void *)&v147 + 1) = sub_1B59094FC;
  *(void *)&v148[0] = v68;
  *(_OWORD *)((char *)v148 + 8) = 0u;
  *(_OWORD *)((char *)&v148[1] + 8) = 0u;
  *(_OWORD *)((char *)&v148[2] + 8) = 0u;
  *(_OWORD *)((char *)&v148[3] + 8) = 0u;
  *(_DWORD *)((char *)&v148[4] + 7) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C78);
  sub_1B5907D94();
  sub_1B5907E08();
  sub_1B5A1AE58();
  uint64_t result = sub_1B5905DE8((uint64_t)v131, type metadata accessor for RemoteContent);
  long long v70 = v149;
  long long v71 = *(_OWORD *)v150;
  long long v72 = *(_OWORD *)&v150[16];
  long long v73 = *(_OWORD *)&v150[32];
  long long v74 = *(_OWORD *)&v150[48];
  uint64_t v75 = *(void *)&v150[64];
  __int16 v76 = v151;
  char v77 = v152;
LABEL_39:
  *(_OWORD *)a1 = v70;
  *(_OWORD *)(a1 + 16) = v71;
  *(_OWORD *)(a1 + 32) = v72;
  *(_OWORD *)(a1 + 48) = v73;
  *(_OWORD *)(a1 + 64) = v74;
  *(void *)(a1 + 80) = v75;
  *(_WORD *)(a1 + 88) = v76;
  *(unsigned char *)(a1 + 90) = v77;
  return result;
}

uint64_t sub_1B59023DC(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_1B5A1C4E8();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RemoteContentView(0);
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v28[0]) = 1;
  swift_retain();
  sub_1B5A1A3D8();
  uint64_t v22 = a1;
  type metadata accessor for RemoteLoader(0);
  sub_1B58FF874(&qword_1E9D62E60, (void (*)(uint64_t))type metadata accessor for RemoteLoader);
  uint64_t v6 = sub_1B5A1A508();
  uint64_t v7 = a1 + *(int *)(v5 + 44);
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(void *)(v7 + 8);
  LOBYTE(a1) = *(unsigned char *)(v7 + 16);
  sub_1B59066A4(*(void *)v7, v9, a1);
  sub_1B5903F7C(v8, v9, a1);
  uint64_t v11 = v10;
  sub_1B5903F2C(v8, v9, a1);
  *(void *)(v6 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource + 8) = v11;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_unknownObjectRelease();
  sub_1B5A1A508();
  uint64_t v12 = v22 + *(int *)(v5 + 52);
  id v13 = *(id *)v12;
  LOBYTE(v6) = *(unsigned char *)(v12 + 8);
  sub_1B59066B0(*(id *)v12, v6);
  id v14 = sub_1B59043C4(v13, v6);
  sub_1B5903F38(v13, v6);
  if (qword_1E9D62B28 != -1) {
    swift_once();
  }
  uint64_t v15 = v24;
  uint64_t v16 = __swift_project_value_buffer(v24, (uint64_t)qword_1E9D910E8);
  uint64_t v17 = (uint64_t)v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v16, v15);
  v28[3] = type metadata accessor for ContentRegistry();
  v28[0] = v14;
  id v18 = v14;
  uint64_t v19 = (void (*)(unsigned char *, void))sub_1B5A1A0F8();
  sub_1B59A884C((uint64_t)v28, v17);
  v19(v27, 0);
  swift_release();

  sub_1B5A1A508();
  LOBYTE(v28[0]) = 2;
  RemoteLoader.reload(content:showLoading:reloadtype:)(v26, 1, (char *)v28);
  return swift_release();
}

uint64_t sub_1B5902744(uint64_t a1)
{
  uint64_t v2 = sub_1B5A1C4E8();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C30);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RemoteContent(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v36 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for RemoteContentView(0);
  uint64_t v11 = a1;
  uint64_t v12 = type metadata accessor for RemoteLoader(0);
  uint64_t v13 = sub_1B58FF874(&qword_1E9D62E60, (void (*)(uint64_t))type metadata accessor for RemoteLoader);
  uint64_t v31 = v12;
  uint64_t v35 = v13;
  LOBYTE(v12) = *(unsigned char *)(sub_1B5A1A508() + OBJC_IVAR____TtC6LiftUI12RemoteLoader_started);
  uint64_t result = swift_release();
  if ((v12 & 1) == 0)
  {
    sub_1B5909890(a1 + v10[5], (uint64_t)v6, &qword_1E9D62C30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      return sub_1B5908FC0((uint64_t)v6, &qword_1E9D62C30);
    }
    else
    {
      sub_1B590901C((uint64_t)v6, v36, type metadata accessor for RemoteContent);
      uint64_t v15 = sub_1B5A1A508();
      uint64_t v16 = a1 + v10[11];
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      char v19 = *(unsigned char *)(v16 + 16);
      sub_1B59066A4(*(void *)v16, v18, v19);
      sub_1B5903F7C(v17, v18, v19);
      uint64_t v21 = v20;
      sub_1B5903F2C(v17, v18, v19);
      *(void *)(v15 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource + 8) = v21;
      swift_unknownObjectWeakAssign();
      swift_release();
      swift_unknownObjectRelease();
      sub_1B5A1A508();
      uint64_t v22 = v11 + v10[13];
      id v23 = *(id *)v22;
      LOBYTE(v15) = *(unsigned char *)(v22 + 8);
      sub_1B59066B0(*(id *)v22, v15);
      id v24 = sub_1B59043C4(v23, v15);
      sub_1B5903F38(v23, v15);
      if (qword_1E9D62B28 != -1) {
        swift_once();
      }
      uint64_t v25 = v33;
      uint64_t v26 = __swift_project_value_buffer(v33, (uint64_t)qword_1E9D910E8);
      uint64_t v27 = (uint64_t)v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v26, v25);
      v38[3] = type metadata accessor for ContentRegistry();
      v38[0] = v24;
      id v28 = v24;
      uint64_t v29 = (void (*)(unsigned char *, void))sub_1B5A1A0F8();
      sub_1B59A884C((uint64_t)v38, v27);
      v29(v37, 0);
      swift_release();

      sub_1B5A1A508();
      LOBYTE(v38[0]) = 2;
      uint64_t v30 = v36;
      RemoteLoader.reload(content:showLoading:reloadtype:)(v36, 1, (char *)v38);
      swift_release();
      return sub_1B5905DE8(v30, type metadata accessor for RemoteContent);
    }
  }
  return result;
}

uint64_t sub_1B5902BE4(void *a1)
{
  uint64_t v2 = (char *)a1 + *(int *)(type metadata accessor for RemoteContentView(0) + 48);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *((void *)v2 + 1);
  char v5 = v2[16];
  sub_1B59066A4(*(void *)v2, v4, v5);
  uint64_t v6 = sub_1B59041A0(v3, v4, v5);
  uint64_t v8 = v7;
  uint64_t result = sub_1B5903F2C(v3, v4, v5);
  if (v6)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, void, uint64_t, uint64_t))(v8 + 24))(*a1, a1[1], ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B5902CB8(void *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(type metadata accessor for RemoteContentView(0) + 48);
  uint64_t v5 = *(void *)v4;
  uint64_t v6 = *((void *)v4 + 1);
  char v7 = v4[16];
  sub_1B59066A4(*(void *)v4, v6, v7);
  uint64_t v8 = sub_1B59041A0(v5, v6, v7);
  uint64_t v10 = v9;
  uint64_t result = sub_1B5903F2C(v5, v6, v7);
  if (v8)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(v10 + 32))(*a1, a1[1], a2, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

double RemoteContentView.unmodifiedBody.getter@<D0>(uint64_t a1@<X8>)
{
  sub_1B5900FCC((uint64_t)v10);
  uint64_t v2 = v11;
  __int16 v3 = v12;
  char v4 = v13;
  double result = *(double *)v10;
  long long v6 = v10[1];
  long long v7 = v10[2];
  long long v8 = v10[3];
  long long v9 = v10[4];
  *(_OWORD *)a1 = v10[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = v2;
  *(_WORD *)(a1 + 88) = v3;
  *(unsigned char *)(a1 + 90) = v4;
  return result;
}

uint64_t sub_1B5902E0C()
{
  return sub_1B5A1B498();
}

uint64_t sub_1B5902E28@<X0>(uint64_t *a1@<X8>)
{
  sub_1B5900FCC((uint64_t)&v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C58);
  sub_1B5907E44(&qword_1E9D62C50, &qword_1E9D62C58, (void (*)(void))sub_1B5907D94, (void (*)(void))sub_1B5907E08);
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

double sub_1B5902EF0@<D0>(uint64_t a1@<X8>)
{
  sub_1B5900FCC((uint64_t)v10);
  uint64_t v2 = v11;
  __int16 v3 = v12;
  char v4 = v13;
  double result = *(double *)v10;
  long long v6 = v10[1];
  long long v7 = v10[2];
  long long v8 = v10[3];
  long long v9 = v10[4];
  *(_OWORD *)a1 = v10[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = v2;
  *(_WORD *)(a1 + 88) = v3;
  *(unsigned char *)(a1 + 90) = v4;
  return result;
}

void sub_1B5902F50(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1B5902F68()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1B5902F98(uint64_t a1)
{
  return sub_1B59030F0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5904C60);
}

unint64_t sub_1B5902FB0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E48);
  uint64_t v2 = (void *)sub_1B5A1C538();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  char v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1B5904F8C(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5904C60);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B59030D8(uint64_t a1)
{
  return sub_1B5903244(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5904C60);
}

unint64_t sub_1B59030F0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E98);
  uint64_t v3 = (void *)sub_1B5A1C538();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (char *)(a1 + 72);
  while (1)
  {
    uint64_t v6 = *((void *)v5 - 5);
    uint64_t v7 = *((void *)v5 - 4);
    uint64_t v8 = *((void *)v5 - 3);
    uint64_t v9 = *((void *)v5 - 2);
    uint64_t v10 = *((void *)v5 - 1);
    char v11 = *v5;
    swift_bridgeObjectRetain();
    sub_1B5909638(v8, v9, v10, v11);
    unint64_t result = sub_1B5904F8C(v6, v7, a2);
    if (v13) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v14 = (uint64_t *)(v3[6] + 16 * result);
    *id v14 = v6;
    v14[1] = v7;
    uint64_t v15 = v3[7] + 32 * result;
    *(void *)uint64_t v15 = v8;
    *(void *)(v15 + 8) = v9;
    *(void *)(v15 + 16) = v10;
    *(unsigned char *)(v15 + 24) = v11;
    uint64_t v16 = v3[2];
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17) {
      goto LABEL_11;
    }
    v3[2] = v18;
    v5 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B5903244(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E50);
  uint64_t v4 = (void *)sub_1B5A1C538();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  uint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1B5904F8C(v7, v8, a2);
    if (v11) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v4[6] + 16 * result);
    uint64_t *v12 = v7;
    v12[1] = v8;
    *(void *)(v4[7] + 8 * result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B5903368(uint64_t a1)
{
  return sub_1B5903380(a1, &qword_1E9D62E18);
}

unint64_t sub_1B5903374(uint64_t a1)
{
  return sub_1B5903380(a1, &qword_1E9D62E20);
}

unint64_t sub_1B5903380(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_1B5A1C538();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *((void *)v5 - 2);
    uint64_t v7 = *((void *)v5 - 1);
    long long v14 = *v5;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1B5904F8C(v6, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5904C60);
    if (v9) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v10 = v6;
    v10[1] = v7;
    *(_OWORD *)(v3[7] + 16 * result) = v14;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B59034B0(uint64_t a1)
{
  return sub_1B5903380(a1, &qword_1E9D62E10);
}

unint64_t sub_1B59034BC(uint64_t a1)
{
  return sub_1B5903380(a1, &qword_1E9D62E00);
}

unint64_t sub_1B59034C8(uint64_t a1)
{
  return sub_1B5903380(a1, &qword_1E9D62E08);
}

unint64_t sub_1B59034D4(uint64_t a1)
{
  return sub_1B5903380(a1, &qword_1E9D62EE8);
}

unint64_t sub_1B59034E0(uint64_t a1)
{
  return sub_1B5903380(a1, &qword_1E9D62EF0);
}

unint64_t sub_1B59034EC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62EC8);
  uint64_t v2 = (void *)sub_1B5A1C538();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1B5904F8C(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5904C60);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B5903614(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED8);
  uint64_t v2 = sub_1B5A1C538();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B5909890(v6, (uint64_t)&v15, &qword_1E9D62EE0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1B5904F8C(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5904C60);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1B59098F4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

double sub_1B5903760@<D0>(_OWORD *a1@<X8>)
{
  sub_1B590974C();
  sub_1B5A1A998();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1B59037B0()
{
  return sub_1B5A1A9A8();
}

double sub_1B590380C@<D0>(_OWORD *a1@<X8>)
{
  sub_1B59096F8();
  sub_1B5A1A998();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1B590385C()
{
  return sub_1B5A1A9A8();
}

uint64_t sub_1B59038C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E78);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + *(void *)(*(void *)v2 + 104);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
  sub_1B5A1A388();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8, v7, v4);
  uint64_t v10 = *(void *)(*(void *)v2 + 112);
  *(void *)(v2 + v10) = sub_1B5902FB0(v9);
  *(void *)(v2 + *(void *)(*(void *)v2 + 128)) = 0;
  *(void *)(v2 + *(void *)(*(void *)v2 + 120)) = a1;
  if (a1)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E88);
    sub_1B59095C8(&qword_1E9D62E90, &qword_1E9D62E88);
    uint64_t v14 = sub_1B5A1A358();
    swift_allocObject();
    swift_weakInit();
    sub_1B5A1A378();
    uint64_t v11 = sub_1B5A1A3F8();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v11 = 0;
  }
  *(void *)(v2 + *(void *)(*(void *)v2 + 128)) = v11;
  swift_release();
  return v2;
}

uint64_t sub_1B5903B24(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E28);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + *(void *)(*(void *)v2 + 104);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E30);
  sub_1B5A1A388();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8, v7, v4);
  uint64_t v10 = *(void *)(*(void *)v2 + 112);
  *(void *)(v2 + v10) = sub_1B5902FB0(v9);
  *(void *)(v2 + *(void *)(*(void *)v2 + 128)) = 0;
  *(void *)(v2 + *(void *)(*(void *)v2 + 120)) = a1;
  if (a1)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E38);
    sub_1B59095C8(&qword_1E9D62E40, &qword_1E9D62E38);
    uint64_t v14 = sub_1B5A1A358();
    swift_allocObject();
    swift_weakInit();
    sub_1B5A1A378();
    uint64_t v11 = sub_1B5A1A3F8();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v11 = 0;
  }
  *(void *)(v2 + *(void *)(*(void *)v2 + 128)) = v11;
  swift_release();
  return v2;
}

uint64_t sub_1B5903D88@<X0>(void *a1@<X8>)
{
  sub_1B59096A4();
  uint64_t result = sub_1B5A1A998();
  *a1 = v3;
  return result;
}

uint64_t sub_1B5903DD8(void **a1)
{
  uint64_t v1 = *a1;
  sub_1B59096A4();
  id v2 = v1;
  return sub_1B5A1A9A8();
}

uint64_t sub_1B5903E34()
{
  return swift_retain();
}

uint64_t sub_1B5903E3C()
{
  return sub_1B59001EC(v0);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1B5903E88()
{
  unint64_t result = qword_1E9D62BC0;
  if (!qword_1E9D62BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62BC0);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1B5903F2C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_unknownObjectRelease();
  }
  else {
    return swift_release();
  }
}

void sub_1B5903F38(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1B5903F7C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_1B5A1A988();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v10 = sub_1B5A1C268();
    uint64_t v11 = sub_1B5A1B0D8();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v16[0] = v13 + 4;
      v16[1] = sub_1B5928EE8(0xD000000000000010, 0x80000001B5A32B30, &v17);
      sub_1B5A1C2D8();
      _os_log_impl(&dword_1B58FD000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v14, -1, -1);
      MEMORY[0x1BA9A4780](v13, -1, -1);
    }

    sub_1B5A1A978();
    swift_getAtKeyPath();
    sub_1B5903F2C(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v17;
  }
  return a1;
}

uint64_t sub_1B59041A0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_1B5A1A988();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v10 = sub_1B5A1C268();
    uint64_t v11 = sub_1B5A1B0D8();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v16[0] = v13 + 4;
      v16[1] = sub_1B5928EE8(0xD000000000000018, 0x80000001B5A32B50, &v17);
      sub_1B5A1C2D8();
      _os_log_impl(&dword_1B58FD000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v14, -1, -1);
      MEMORY[0x1BA9A4780](v13, -1, -1);
    }

    sub_1B5A1A978();
    swift_getAtKeyPath();
    sub_1B5903F2C(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v17;
  }
  return a1;
}

id sub_1B59043C4(void *a1, char a2)
{
  id v15 = a1;
  uint64_t v3 = sub_1B5A1A988();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v13 = v15;
    return v13;
  }
  else
  {
    swift_retain();
    os_log_type_t v7 = sub_1B5A1C268();
    uint64_t v8 = sub_1B5A1B0D8();
    os_log_type_t v9 = v7;
    if (os_log_type_enabled(v8, v7))
    {
      os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v17 = v11;
      *(_DWORD *)os_log_type_t v10 = 136315138;
      uint64_t v16 = sub_1B5928EE8(0x52746E65746E6F43, 0xEF79727473696765, &v17);
      sub_1B5A1C2D8();
      _os_log_impl(&dword_1B58FD000, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v11, -1, -1);
      MEMORY[0x1BA9A4780](v10, -1, -1);
    }

    sub_1B5A1A978();
    swift_getAtKeyPath();
    sub_1B5903F38(v15, 0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (id)v17;
  }
}

uint64_t sub_1B5904608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B5A1A988();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED0);
  MEMORY[0x1F4188790](v8);
  os_log_type_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5909890(v2, (uint64_t)v10, &qword_1E9D62ED0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1B5A1A4D8();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_1B5A1C268();
    uint64_t v14 = sub_1B5A1B0D8();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v19[1] = a1;
      uint64_t v18 = v17;
      uint64_t v20 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v19[2] = sub_1B5928EE8(0x686353726F6C6F43, 0xEB00000000656D65, &v20);
      sub_1B5A1C2D8();
      _os_log_impl(&dword_1B58FD000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v18, -1, -1);
      MEMORY[0x1BA9A4780](v16, -1, -1);
    }

    sub_1B5A1A978();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1B59048C4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B5A1A3C8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1B5904944()
{
  return sub_1B5A1A3D8();
}

uint64_t sub_1B59049B8(uint64_t a1, uint64_t a2)
{
  return sub_1B5904F8C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5904C60);
}

unint64_t sub_1B59049D0(uint64_t a1)
{
  sub_1B5A1C4E8();
  uint64_t v2 = sub_1B5A1BE98();
  return sub_1B5904D44(a1, v2);
}

unint64_t sub_1B5904A34()
{
  unint64_t result = qword_1E9D62BD8;
  if (!qword_1E9D62BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62BD8);
  }
  return result;
}

uint64_t sub_1B5904A88(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4 = a4 >> 6;
  if (v4 == 2) {
    return sub_1B5904AB4(result, a2, a3, a4 & 1);
  }
  if (v4 != 1)
  {
    if (a4 >> 6) {
      return result;
    }
    return sub_1B5904AB4(result, a2, a3, a4 & 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5904AB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a4)
  {
    return sub_1B5905298(a3);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1B5904B4C(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFDu) {
    return sub_1B5904A88(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_1B5904B60(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4 = a4 >> 6;
  if (v4 == 2) {
    return sub_1B5904B8C(result, a2, a3, a4 & 1);
  }
  if (v4 != 1)
  {
    if (a4 >> 6) {
      return result;
    }
    return sub_1B5904B8C(result, a2, a3, a4 & 1);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B5904B8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = swift_bridgeObjectRetain();
  if (a4)
  {
    return sub_1B590968C(a3);
  }
  return result;
}

uint64_t sub_1B5904BDC(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFDu) {
    return sub_1B5904B60(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_1B5904BF0(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1B5904C08(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_1B5904C08(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return sub_1B590968C(a3);
  }
  else
  {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1B5904C58(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B59C81B0(a1, a2, a3);
}

unint64_t sub_1B5904C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    os_log_type_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1B5A1C678() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        os_log_type_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1B5A1C678() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1B5904D44(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_1B5A1C4E8();
  MEMORY[0x1F4188790](v4);
  os_log_type_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    os_log_type_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    os_log_type_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_1B5A1BED8();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_1B5904EDC(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_1B59095C8(a4, a3);
    sub_1B5A1A358();
    swift_release();
    sub_1B5A1A368();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B5904F8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_1B5A1C7A8();
  sub_1B5A1BF88();
  uint64_t v5 = sub_1B5A1C7E8();
  return a3(a1, a2, v5);
}

uint64_t sub_1B5905010()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B590505C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v19 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v19 + 8 * v9);
      if (!v16)
      {
        int64_t v9 = v15 + 2;
        if (v15 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v19 + 8 * v9);
        if (!v16)
        {
          int64_t v9 = v15 + 3;
          if (v15 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v19 + 8 * v9);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * v11);
    swift_retain();
    swift_bridgeObjectRetain();
    a2(v13, v14, &v18);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v7) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v19 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v19 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B5905230(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1B5905248(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_1B5905248(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return sub_1B5905298(a3);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B5905298(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B59052B0()
{
  return sub_1B5900F34(v0);
}

uint64_t sub_1B59052CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1B5905328()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B59053E0(uint64_t a1)
{
  uint64_t result = sub_1B58FF874(&qword_1E9D62C00, (void (*)(uint64_t))type metadata accessor for RemoteContentView);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B5905438()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of LiftUIDelegate.view(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LiftUIDelegate.loadingView()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LiftUIDelegate.didFinishLoadingRemoteContentView(id:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of LiftUIDelegate.didFinishLoadingRemoteContentView(id:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

unint64_t initializeBufferWithCopyOfBuffer for RemoteContent(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v15 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v15;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v9 = sub_1B5A1A258();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
        *(unsigned char *)(a1 + *(int *)(v10 + 48)) = *(unsigned char *)(a2 + *(int *)(v10 + 48));
        uint64_t v11 = *(int *)(v10 + 64);
        uint64_t v12 = a1 + v11;
        uint64_t v13 = (uint64_t *)(a2 + v11);
        unint64_t v14 = v13[1];
        if (v14 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
        }
        else
        {
          uint64_t v21 = *v13;
          sub_1B5905744(*v13, v13[1]);
          *(void *)uint64_t v12 = v21;
          *(void *)(v12 + 8) = v14;
        }
        break;
      case 3u:
        uint64_t v16 = *(void *)a2;
        uint64_t v17 = *(void *)(a2 + 8);
        uint64_t v18 = *(void *)(a2 + 16);
        unsigned __int8 v19 = *(unsigned char *)(a2 + 24);
        sub_1B5904B60(*(void *)a2, v17, v18, v19);
        *(void *)a1 = v16;
        *(void *)(a1 + 8) = v17;
        *(void *)(a1 + 16) = v18;
        *(unsigned char *)(a1 + 24) = v19;
        unsigned int v20 = *(unsigned __int8 *)(a2 + 56);
        if (v20 <= 0xFD)
        {
          uint64_t v22 = *(void *)(a2 + 32);
          uint64_t v23 = *(void *)(a2 + 40);
          uint64_t v24 = *(void *)(a2 + 48);
          sub_1B5904B60(v22, v23, v24, *(unsigned char *)(a2 + 56));
          *(void *)(a1 + 32) = v22;
          *(void *)(a1 + 40) = v23;
          *(void *)(a1 + 48) = v24;
          *(unsigned char *)(a1 + 56) = v20;
        }
        else
        {
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
        }
        int v25 = *(unsigned __int8 *)(a2 + 88);
        if (v25 == 255)
        {
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
        }
        else
        {
          char v26 = v25 & 1;
          uint64_t v27 = *(void *)(a2 + 64);
          uint64_t v28 = *(void *)(a2 + 72);
          uint64_t v29 = *(void *)(a2 + 80);
          sub_1B5904C08(v27, v28, v29, v25 & 1);
          *(void *)(a1 + 64) = v27;
          *(void *)(a1 + 72) = v28;
          *(void *)(a1 + 80) = v29;
          *(unsigned char *)(a1 + 88) = v26;
        }
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        swift_retain();
        break;
      default:
        uint64_t v7 = *(void *)a2;
        unint64_t v6 = *(void *)(a2 + 8);
        sub_1B5905744(v7, v6);
        *(void *)a1 = v7;
        *(void *)(a1 + 8) = v6;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B5905744(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t destroy for RemoteContent(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = *(void *)a1;
      unint64_t v4 = *(void *)(a1 + 8);
      goto LABEL_16;
    case 1:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2:
      uint64_t v5 = sub_1B5A1A258();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
      unint64_t v6 = (uint64_t *)(a1 + *(int *)(result + 64));
      unint64_t v4 = v6[1];
      if (v4 >> 60 != 15)
      {
        uint64_t v3 = *v6;
LABEL_16:
        uint64_t result = sub_1B5905904(v3, v4);
      }
      break;
    case 3:
      sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
      unsigned int v7 = *(unsigned __int8 *)(a1 + 56);
      if (v7 <= 0xFD) {
        sub_1B5904A88(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v7);
      }
      int v8 = *(unsigned __int8 *)(a1 + 88);
      if (v8 != 255) {
        sub_1B5905248(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v8 & 1);
      }
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B5905904(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t initializeWithCopy for RemoteContent(uint64_t a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v17;
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v6 = sub_1B5A1A258();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
      *(unsigned char *)(a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
      uint64_t v8 = *(int *)(v7 + 64);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = (uint64_t *)((char *)a2 + v8);
      unint64_t v11 = v10[1];
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      }
      else
      {
        uint64_t v18 = *v10;
        sub_1B5905744(*v10, v10[1]);
        *(void *)uint64_t v9 = v18;
        *(void *)(v9 + 8) = v11;
      }
      break;
    case 3u:
      uint64_t v12 = *a2;
      uint64_t v13 = a2[1];
      uint64_t v14 = a2[2];
      unsigned __int8 v15 = *((unsigned char *)a2 + 24);
      sub_1B5904B60(*a2, v13, v14, v15);
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v13;
      *(void *)(a1 + 16) = v14;
      *(unsigned char *)(a1 + 24) = v15;
      unsigned int v16 = *((unsigned __int8 *)a2 + 56);
      if (v16 <= 0xFD)
      {
        uint64_t v19 = a2[4];
        uint64_t v20 = a2[5];
        uint64_t v21 = a2[6];
        sub_1B5904B60(v19, v20, v21, *((unsigned char *)a2 + 56));
        *(void *)(a1 + 32) = v19;
        *(void *)(a1 + 40) = v20;
        *(void *)(a1 + 48) = v21;
        *(unsigned char *)(a1 + 56) = v16;
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
      }
      int v22 = *((unsigned __int8 *)a2 + 88);
      if (v22 == 255)
      {
        *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
      }
      else
      {
        char v23 = v22 & 1;
        uint64_t v24 = a2[8];
        uint64_t v25 = a2[9];
        uint64_t v26 = a2[10];
        sub_1B5904C08(v24, v25, v26, v22 & 1);
        *(void *)(a1 + 64) = v24;
        *(void *)(a1 + 72) = v25;
        *(void *)(a1 + 80) = v26;
        *(unsigned char *)(a1 + 88) = v23;
      }
      *(void *)(a1 + 96) = a2[12];
      swift_retain();
      break;
    default:
      uint64_t v5 = *a2;
      unint64_t v4 = a2[1];
      sub_1B5905744(v5, v4);
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v4;
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for RemoteContent(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_1B5905DE8(a1, type metadata accessor for RemoteContent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v6 = sub_1B5A1A258();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
        *(unsigned char *)(a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
        uint64_t v8 = *(int *)(v7 + 64);
        uint64_t v9 = a1 + v8;
        uint64_t v10 = (uint64_t *)((char *)a2 + v8);
        unint64_t v11 = v10[1];
        if (v11 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        }
        else
        {
          uint64_t v18 = *v10;
          sub_1B5905744(*v10, v10[1]);
          *(void *)uint64_t v9 = v18;
          *(void *)(v9 + 8) = v11;
        }
        break;
      case 3u:
        uint64_t v12 = *a2;
        uint64_t v13 = a2[1];
        uint64_t v14 = a2[2];
        unsigned __int8 v15 = *((unsigned char *)a2 + 24);
        sub_1B5904B60(*a2, v13, v14, v15);
        *(void *)a1 = v12;
        *(void *)(a1 + 8) = v13;
        *(void *)(a1 + 16) = v14;
        *(unsigned char *)(a1 + 24) = v15;
        unsigned int v16 = *((unsigned __int8 *)a2 + 56);
        if (v16 <= 0xFD)
        {
          uint64_t v19 = a2[4];
          uint64_t v20 = a2[5];
          uint64_t v21 = a2[6];
          sub_1B5904B60(v19, v20, v21, *((unsigned char *)a2 + 56));
          *(void *)(a1 + 32) = v19;
          *(void *)(a1 + 40) = v20;
          *(void *)(a1 + 48) = v21;
          *(unsigned char *)(a1 + 56) = v16;
        }
        else
        {
          long long v17 = *((_OWORD *)a2 + 2);
          *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
          *(_OWORD *)(a1 + 32) = v17;
        }
        int v22 = *((unsigned __int8 *)a2 + 88);
        if (v22 == 255)
        {
          long long v23 = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
          *(_OWORD *)(a1 + 64) = v23;
        }
        else
        {
          char v24 = v22 & 1;
          uint64_t v25 = a2[8];
          uint64_t v26 = a2[9];
          uint64_t v27 = a2[10];
          sub_1B5904C08(v25, v26, v27, v22 & 1);
          *(void *)(a1 + 64) = v25;
          *(void *)(a1 + 72) = v26;
          *(void *)(a1 + 80) = v27;
          *(unsigned char *)(a1 + 88) = v24;
        }
        *(void *)(a1 + 96) = a2[12];
        swift_retain();
        break;
      default:
        uint64_t v5 = *a2;
        unint64_t v4 = a2[1];
        sub_1B5905744(v5, v4);
        *(void *)a1 = v5;
        *(void *)(a1 + 8) = v4;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B5905DE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *initializeWithTake for RemoteContent(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_1B5A1A258();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
    a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
    *(_OWORD *)&a1[*(int *)(v7 + 64)] = *(_OWORD *)&a2[*(int *)(v7 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for RemoteContent(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B5905DE8((uint64_t)a1, type metadata accessor for RemoteContent);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_1B5A1A258();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      *(_OWORD *)&a1[*(int *)(v7 + 64)] = *(_OWORD *)&a2[*(int *)(v7 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for RemoteContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1B5906078()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1B5906088()
{
  v2[4] = &unk_1B5A1D320;
  v2[5] = &unk_1B5A1D338;
  uint64_t result = sub_1B5A1A258();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[6] = v2;
    v2[7] = &unk_1B5A1D380;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1B5906148()
{
  return type metadata accessor for RemoteContentRefreshHelper(0);
}

void sub_1B5906150()
{
  sub_1B5909844(319, &qword_1E9D62C28, (uint64_t)&type metadata for RemoteContentRefreshHelper.Status, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteContentView(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for RemoteContent(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C30);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v24 = v10[1];
          uint64_t *v9 = *v10;
          v9[1] = v24;
          swift_bridgeObjectRetain();
          break;
        case 2u:
          uint64_t v18 = sub_1B5A1A258();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16))(v9, v10, v18);
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
          *((unsigned char *)v9 + *(int *)(v19 + 48)) = *((unsigned char *)v10 + *(int *)(v19 + 48));
          uint64_t v20 = *(int *)(v19 + 64);
          uint64_t v21 = (char *)v9 + v20;
          int v22 = (char *)v10 + v20;
          unint64_t v23 = *((void *)v22 + 1);
          if (v23 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
          }
          else
          {
            uint64_t v29 = *(void *)v22;
            sub_1B5905744(*(void *)v22, *((void *)v22 + 1));
            *(void *)uint64_t v21 = v29;
            *((void *)v21 + 1) = v23;
          }
          break;
        case 3u:
          uint64_t v25 = *v10;
          uint64_t v74 = v10[1];
          uint64_t v26 = v10[2];
          unsigned __int8 v27 = *((unsigned char *)v10 + 24);
          sub_1B5904B60(*v10, v74, v26, v27);
          uint64_t *v9 = v25;
          v9[1] = v74;
          v9[2] = v26;
          *((unsigned char *)v9 + 24) = v27;
          unsigned int v28 = *((unsigned __int8 *)v10 + 56);
          if (v28 <= 0xFD)
          {
            uint64_t v30 = v10[4];
            uint64_t v75 = v10[5];
            uint64_t v31 = v10[6];
            sub_1B5904B60(v30, v75, v31, v28);
            v9[4] = v30;
            v9[5] = v75;
            v9[6] = v31;
            *((unsigned char *)v9 + 56) = v28;
          }
          else
          {
            *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
            *(_OWORD *)((char *)v9 + 41) = *(_OWORD *)((char *)v10 + 41);
          }
          int v32 = *((unsigned __int8 *)v10 + 88);
          if (v32 == 255)
          {
            *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
            *(_OWORD *)((char *)v9 + 73) = *(_OWORD *)((char *)v10 + 73);
          }
          else
          {
            char v76 = v32 & 1;
            uint64_t v34 = v10[8];
            uint64_t v33 = v10[9];
            uint64_t v35 = v10[10];
            sub_1B5904C08(v34, v33, v35, v32 & 1);
            v9[8] = v34;
            v9[9] = v33;
            v9[10] = v35;
            *((unsigned char *)v9 + 88) = v76;
          }
          v9[12] = v10[12];
          swift_retain();
          break;
        default:
          uint64_t v17 = *v10;
          unint64_t v16 = v10[1];
          sub_1B5905744(v17, v16);
          uint64_t *v9 = v17;
          v9[1] = v16;
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v36 = a3[6];
    uint64_t v37 = (char *)v4 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = *(void *)v38;
    uint64_t v40 = *((void *)v38 + 1);
    char v41 = v38[16];
    sub_1B590669C();
    *(void *)uint64_t v37 = v39;
    *((void *)v37 + 1) = v40;
    v37[16] = v41;
    uint64_t v42 = a3[7];
    long long v43 = (char *)v4 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = *(void *)v44;
    uint64_t v46 = *((void *)v44 + 1);
    char v47 = v44[16];
    sub_1B590669C();
    *(void *)long long v43 = v45;
    *((void *)v43 + 1) = v46;
    v43[16] = v47;
    uint64_t v48 = a3[8];
    uint64_t v49 = a3[9];
    uint64_t v50 = (uint64_t *)((char *)v4 + v48);
    uint64_t v51 = (uint64_t *)((char *)a2 + v48);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    *(uint64_t *)((char *)v4 + v49) = *(uint64_t *)((char *)a2 + v49);
    uint64_t v53 = a3[10];
    uint64_t v54 = (char *)v4 + v53;
    uint64_t v55 = (char *)a2 + v53;
    uint64_t v56 = *(void *)v55;
    uint64_t v57 = *((void *)v55 + 1);
    LOBYTE(v43) = v55[16];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B590669C();
    *(void *)uint64_t v54 = v56;
    *((void *)v54 + 1) = v57;
    v54[16] = (char)v43;
    uint64_t v58 = a3[11];
    uint64_t v59 = (char *)v4 + v58;
    uint64_t v60 = (char *)a2 + v58;
    uint64_t v61 = *(void *)v60;
    uint64_t v62 = *((void *)v60 + 1);
    LOBYTE(v57) = v60[16];
    sub_1B59066A4(*(void *)v60, v62, v57);
    *(void *)uint64_t v59 = v61;
    *((void *)v59 + 1) = v62;
    v59[16] = v57;
    uint64_t v63 = a3[12];
    uint64_t v64 = (char *)v4 + v63;
    uint64_t v65 = (char *)a2 + v63;
    uint64_t v66 = *(void *)v65;
    uint64_t v67 = *((void *)v65 + 1);
    LOBYTE(v57) = v65[16];
    sub_1B59066A4(*(void *)v65, v67, v57);
    *(void *)uint64_t v64 = v66;
    *((void *)v64 + 1) = v67;
    v64[16] = v57;
    uint64_t v68 = a3[13];
    uint64_t v69 = (char *)v4 + v68;
    long long v70 = (char *)a2 + v68;
    id v71 = *(id *)v70;
    char v72 = v70[8];
    sub_1B59066B0(*(id *)v70, v72);
    *(void *)uint64_t v69 = v71;
    v69[8] = v72;
  }
  return v4;
}

uint64_t sub_1B590669C()
{
  return swift_retain();
}

uint64_t sub_1B59066A4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_unknownObjectRetain();
  }
  else {
    return swift_retain();
  }
}

id sub_1B59066B0(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

void destroy for RemoteContentView(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for RemoteContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_1B5905904(*(void *)v4, *(void *)(v4 + 8));
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        uint64_t v9 = sub_1B5A1A258();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v4, v9);
        uint64_t v10 = (uint64_t *)(v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0) + 64));
        unint64_t v11 = v10[1];
        if (v11 >> 60 != 15) {
          sub_1B5905904(*v10, v11);
        }
        break;
      case 3u:
        sub_1B5904A88(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(unsigned char *)(v4 + 24));
        unsigned int v12 = *(unsigned __int8 *)(v4 + 56);
        if (v12 <= 0xFD) {
          sub_1B5904A88(*(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), v12);
        }
        int v13 = *(unsigned __int8 *)(v4 + 88);
        if (v13 != 255) {
          sub_1B5905248(*(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), v13 & 1);
        }
        swift_release();
        break;
      default:
        break;
    }
  }
  sub_1B59068F4();
  sub_1B59068F4();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B59068F4();
  sub_1B5903F2C(*(void *)(a1 + a2[11]), *(void *)(a1 + a2[11] + 8), *(unsigned char *)(a1 + a2[11] + 16));
  sub_1B5903F2C(*(void *)(a1 + a2[12]), *(void *)(a1 + a2[12] + 8), *(unsigned char *)(a1 + a2[12] + 16));
  uint64_t v6 = a1 + a2[13];
  uint64_t v7 = *(void **)v6;
  char v8 = *(unsigned char *)(v6 + 8);
  sub_1B5903F38(v7, v8);
}

uint64_t sub_1B59068F4()
{
  return swift_release();
}

void *initializeWithCopy for RemoteContentView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  char v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for RemoteContent(0);
  uint64_t v11 = *(void *)(v10 - 8);
  unsigned int v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C30);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v22 = v9[1];
        *char v8 = *v9;
        v8[1] = v22;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v16 = sub_1B5A1A258();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(v8, v9, v16);
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
        *((unsigned char *)v8 + *(int *)(v17 + 48)) = *((unsigned char *)v9 + *(int *)(v17 + 48));
        uint64_t v18 = *(int *)(v17 + 64);
        uint64_t v19 = (char *)v8 + v18;
        uint64_t v20 = (char *)v9 + v18;
        unint64_t v21 = *((void *)v20 + 1);
        if (v21 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        }
        else
        {
          uint64_t v27 = *(void *)v20;
          sub_1B5905744(*(void *)v20, *((void *)v20 + 1));
          *(void *)uint64_t v19 = v27;
          *((void *)v19 + 1) = v21;
        }
        break;
      case 3u:
        uint64_t v23 = *v9;
        uint64_t v72 = v9[1];
        uint64_t v24 = v9[2];
        unsigned __int8 v25 = *((unsigned char *)v9 + 24);
        sub_1B5904B60(*v9, v72, v24, v25);
        *char v8 = v23;
        v8[1] = v72;
        v8[2] = v24;
        *((unsigned char *)v8 + 24) = v25;
        unsigned int v26 = *((unsigned __int8 *)v9 + 56);
        if (v26 <= 0xFD)
        {
          uint64_t v28 = v9[4];
          uint64_t v73 = v9[5];
          uint64_t v29 = v9[6];
          sub_1B5904B60(v28, v73, v29, v26);
          v8[4] = v28;
          v8[5] = v73;
          v8[6] = v29;
          *((unsigned char *)v8 + 56) = v26;
        }
        else
        {
          *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
          *(_OWORD *)((char *)v8 + 41) = *(_OWORD *)((char *)v9 + 41);
        }
        int v30 = *((unsigned __int8 *)v9 + 88);
        if (v30 == 255)
        {
          *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
          *(_OWORD *)((char *)v8 + 73) = *(_OWORD *)((char *)v9 + 73);
        }
        else
        {
          char v74 = v30 & 1;
          uint64_t v32 = v9[8];
          uint64_t v31 = v9[9];
          uint64_t v33 = v9[10];
          sub_1B5904C08(v32, v31, v33, v30 & 1);
          v8[8] = v32;
          v8[9] = v31;
          v8[10] = v33;
          *((unsigned char *)v8 + 88) = v74;
        }
        v8[12] = v9[12];
        swift_retain();
        break;
      default:
        uint64_t v15 = *v9;
        unint64_t v14 = v9[1];
        sub_1B5905744(v15, v14);
        *char v8 = v15;
        v8[1] = v14;
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v34 = a3[6];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)v36;
  uint64_t v38 = *((void *)v36 + 1);
  char v39 = v36[16];
  sub_1B590669C();
  *(void *)uint64_t v35 = v37;
  *((void *)v35 + 1) = v38;
  v35[16] = v39;
  uint64_t v40 = a3[7];
  char v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = *(void *)v42;
  uint64_t v44 = *((void *)v42 + 1);
  char v45 = v42[16];
  sub_1B590669C();
  *(void *)char v41 = v43;
  *((void *)v41 + 1) = v44;
  v41[16] = v45;
  uint64_t v46 = a3[8];
  uint64_t v47 = a3[9];
  uint64_t v48 = (void *)((char *)a1 + v46);
  uint64_t v49 = (void *)((char *)a2 + v46);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  *(void *)((char *)a1 + v47) = *(void *)((char *)a2 + v47);
  uint64_t v51 = a3[10];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = *(void *)v53;
  uint64_t v55 = *((void *)v53 + 1);
  LOBYTE(v41) = v53[16];
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B590669C();
  *(void *)uint64_t v52 = v54;
  *((void *)v52 + 1) = v55;
  v52[16] = (char)v41;
  uint64_t v56 = a3[11];
  uint64_t v57 = (char *)a1 + v56;
  uint64_t v58 = (char *)a2 + v56;
  uint64_t v59 = *(void *)v58;
  uint64_t v60 = *((void *)v58 + 1);
  LOBYTE(v55) = v58[16];
  sub_1B59066A4(*(void *)v58, v60, v55);
  *(void *)uint64_t v57 = v59;
  *((void *)v57 + 1) = v60;
  v57[16] = v55;
  uint64_t v61 = a3[12];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  uint64_t v64 = *(void *)v63;
  uint64_t v65 = *((void *)v63 + 1);
  LOBYTE(v55) = v63[16];
  sub_1B59066A4(*(void *)v63, v65, v55);
  *(void *)uint64_t v62 = v64;
  *((void *)v62 + 1) = v65;
  v62[16] = v55;
  uint64_t v66 = a3[13];
  uint64_t v67 = (char *)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  id v69 = *(id *)v68;
  char v70 = v68[8];
  sub_1B59066B0(*(id *)v68, v70);
  *(void *)uint64_t v67 = v69;
  v67[8] = v70;
  return a1;
}

void *assignWithCopy for RemoteContentView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (uint64_t)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for RemoteContent(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          swift_bridgeObjectRetain();
          break;
        case 2u:
          uint64_t v19 = sub_1B5A1A258();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v7, v8, v19);
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
          *(unsigned char *)(v7 + *(int *)(v20 + 48)) = v8[*(int *)(v20 + 48)];
          uint64_t v21 = *(int *)(v20 + 64);
          uint64_t v22 = v7 + v21;
          uint64_t v23 = &v8[v21];
          unint64_t v24 = *((void *)v23 + 1);
          if (v24 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
          }
          else
          {
            uint64_t v30 = *(void *)v23;
            sub_1B5905744(*(void *)v23, *((void *)v23 + 1));
            *(void *)uint64_t v22 = v30;
            *(void *)(v22 + 8) = v24;
          }
          break;
        case 3u:
          uint64_t v25 = *(void *)v8;
          uint64_t v107 = *((void *)v8 + 1);
          uint64_t v26 = *((void *)v8 + 2);
          unsigned __int8 v27 = v8[24];
          sub_1B5904B60(*(void *)v8, v107, v26, v27);
          *(void *)uint64_t v7 = v25;
          *(void *)(v7 + 8) = v107;
          *(void *)(v7 + 16) = v26;
          *(unsigned char *)(v7 + 24) = v27;
          unsigned int v28 = v8[56];
          if (v28 <= 0xFD)
          {
            uint64_t v31 = *((void *)v8 + 4);
            uint64_t v108 = *((void *)v8 + 5);
            uint64_t v32 = *((void *)v8 + 6);
            sub_1B5904B60(v31, v108, v32, v28);
            *(void *)(v7 + 32) = v31;
            *(void *)(v7 + 40) = v108;
            *(void *)(v7 + 48) = v32;
            *(unsigned char *)(v7 + 56) = v28;
          }
          else
          {
            long long v29 = *((_OWORD *)v8 + 2);
            *(_OWORD *)(v7 + 41) = *(_OWORD *)(v8 + 41);
            *(_OWORD *)(v7 + 32) = v29;
          }
          int v33 = v8[88];
          if (v33 == 255)
          {
            long long v34 = *((_OWORD *)v8 + 4);
            *(_OWORD *)(v7 + 73) = *(_OWORD *)(v8 + 73);
            *(_OWORD *)(v7 + 64) = v34;
          }
          else
          {
            char v109 = v33 & 1;
            uint64_t v36 = *((void *)v8 + 8);
            uint64_t v35 = *((void *)v8 + 9);
            uint64_t v37 = *((void *)v8 + 10);
            sub_1B5904C08(v36, v35, v37, v33 & 1);
            *(void *)(v7 + 64) = v36;
            *(void *)(v7 + 72) = v35;
            *(void *)(v7 + 80) = v37;
            *(unsigned char *)(v7 + 88) = v109;
          }
          *(void *)(v7 + 96) = *((void *)v8 + 12);
          swift_retain();
          break;
        default:
          uint64_t v15 = *(void *)v8;
          unint64_t v14 = *((void *)v8 + 1);
          sub_1B5905744(v15, v14);
          *(void *)uint64_t v7 = v15;
          *(void *)(v7 + 8) = v14;
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_23;
    }
LABEL_7:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C30);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_23;
  }
  if (v13)
  {
    sub_1B5905DE8(v7, type metadata accessor for RemoteContent);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1B5905DE8(v7, type metadata accessor for RemoteContent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *((void *)v8 + 1);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v85 = sub_1B5A1A258();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v7, v8, v85);
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
        *(unsigned char *)(v7 + *(int *)(v86 + 48)) = v8[*(int *)(v86 + 48)];
        uint64_t v87 = *(int *)(v86 + 64);
        uint64_t v88 = v7 + v87;
        uint64_t v89 = &v8[v87];
        unint64_t v90 = *((void *)v89 + 1);
        if (v90 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
        }
        else
        {
          uint64_t v97 = *(void *)v89;
          sub_1B5905744(*(void *)v89, *((void *)v89 + 1));
          *(void *)uint64_t v88 = v97;
          *(void *)(v88 + 8) = v90;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v91 = *(void *)v8;
        uint64_t v92 = *((void *)v8 + 1);
        uint64_t v93 = *((void *)v8 + 2);
        unsigned __int8 v94 = v8[24];
        sub_1B5904B60(*(void *)v8, v92, v93, v94);
        *(void *)uint64_t v7 = v91;
        *(void *)(v7 + 8) = v92;
        *(void *)(v7 + 16) = v93;
        *(unsigned char *)(v7 + 24) = v94;
        unsigned int v95 = v8[56];
        if (v95 <= 0xFD)
        {
          uint64_t v98 = *((void *)v8 + 4);
          uint64_t v99 = *((void *)v8 + 5);
          uint64_t v100 = *((void *)v8 + 6);
          sub_1B5904B60(v98, v99, v100, v8[56]);
          *(void *)(v7 + 32) = v98;
          *(void *)(v7 + 40) = v99;
          *(void *)(v7 + 48) = v100;
          *(unsigned char *)(v7 + 56) = v95;
        }
        else
        {
          long long v96 = *((_OWORD *)v8 + 2);
          *(_OWORD *)(v7 + 41) = *(_OWORD *)(v8 + 41);
          *(_OWORD *)(v7 + 32) = v96;
        }
        int v101 = v8[88];
        if (v101 == 255)
        {
          long long v102 = *((_OWORD *)v8 + 4);
          *(_OWORD *)(v7 + 73) = *(_OWORD *)(v8 + 73);
          *(_OWORD *)(v7 + 64) = v102;
        }
        else
        {
          char v103 = v101 & 1;
          uint64_t v104 = *((void *)v8 + 8);
          uint64_t v105 = *((void *)v8 + 9);
          uint64_t v106 = *((void *)v8 + 10);
          sub_1B5904C08(v104, v105, v106, v101 & 1);
          *(void *)(v7 + 64) = v104;
          *(void *)(v7 + 72) = v105;
          *(void *)(v7 + 80) = v106;
          *(unsigned char *)(v7 + 88) = v103;
        }
        *(void *)(v7 + 96) = *((void *)v8 + 12);
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v18 = *(void *)v8;
        unint64_t v17 = *((void *)v8 + 1);
        sub_1B5905744(v18, v17);
        *(void *)uint64_t v7 = v18;
        *(void *)(v7 + 8) = v17;
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_23:
  uint64_t v38 = a3[6];
  char v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = *(void *)v40;
  uint64_t v42 = *((void *)v40 + 1);
  char v43 = v40[16];
  sub_1B590669C();
  *(void *)char v39 = v41;
  *((void *)v39 + 1) = v42;
  v39[16] = v43;
  sub_1B59068F4();
  uint64_t v44 = a3[7];
  char v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = *(void *)v46;
  uint64_t v48 = *((void *)v46 + 1);
  char v49 = v46[16];
  sub_1B590669C();
  *(void *)char v45 = v47;
  *((void *)v45 + 1) = v48;
  v45[16] = v49;
  sub_1B59068F4();
  uint64_t v50 = a3[8];
  uint64_t v51 = (void *)((char *)a1 + v50);
  uint64_t v52 = (void *)((char *)a2 + v50);
  *uint64_t v51 = *v52;
  v51[1] = v52[1];
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[10];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  uint64_t v56 = *(void *)v55;
  uint64_t v57 = *((void *)v55 + 1);
  char v58 = v55[16];
  sub_1B590669C();
  *(void *)uint64_t v54 = v56;
  *((void *)v54 + 1) = v57;
  v54[16] = v58;
  sub_1B59068F4();
  uint64_t v59 = a3[11];
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = *(void *)v61;
  uint64_t v63 = *((void *)v61 + 1);
  char v64 = v61[16];
  sub_1B59066A4(*(void *)v61, v63, v64);
  uint64_t v65 = *(void *)v60;
  uint64_t v66 = *((void *)v60 + 1);
  char v67 = v60[16];
  *(void *)uint64_t v60 = v62;
  *((void *)v60 + 1) = v63;
  v60[16] = v64;
  sub_1B5903F2C(v65, v66, v67);
  uint64_t v68 = a3[12];
  id v69 = (char *)a1 + v68;
  char v70 = (char *)a2 + v68;
  uint64_t v71 = *(void *)v70;
  uint64_t v72 = *((void *)v70 + 1);
  char v73 = v70[16];
  sub_1B59066A4(*(void *)v70, v72, v73);
  uint64_t v74 = *(void *)v69;
  uint64_t v75 = *((void *)v69 + 1);
  char v76 = v69[16];
  *(void *)id v69 = v71;
  *((void *)v69 + 1) = v72;
  v69[16] = v73;
  sub_1B5903F2C(v74, v75, v76);
  uint64_t v77 = a3[13];
  uint64_t v78 = (char *)a1 + v77;
  uint64_t v79 = (char *)a2 + v77;
  id v80 = *(id *)v79;
  char v81 = v79[8];
  sub_1B59066B0(*(id *)v79, v81);
  uint64_t v82 = *(void **)v78;
  char v83 = v78[8];
  *(void *)uint64_t v78 = v80;
  v78[8] = v81;
  sub_1B5903F38(v82, v83);
  return a1;
}

_OWORD *initializeWithTake for RemoteContentView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for RemoteContent(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C30);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v12 = sub_1B5A1A258();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
      v7[*(int *)(v13 + 48)] = v8[*(int *)(v13 + 48)];
      *(_OWORD *)&v7[*(int *)(v13 + 64)] = *(_OWORD *)&v8[*(int *)(v13 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v14;
  unint64_t v17 = (char *)a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  uint64_t v18 = (char *)a1 + v15;
  uint64_t v19 = (char *)a2 + v15;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  uint64_t v20 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  uint64_t v21 = a3[10];
  uint64_t v22 = a3[11];
  uint64_t v23 = (char *)a1 + v21;
  unint64_t v24 = (char *)a2 + v21;
  long long v25 = *(_OWORD *)v24;
  unsigned char v23[16] = v24[16];
  *(_OWORD *)uint64_t v23 = v25;
  uint64_t v26 = (char *)a1 + v22;
  unsigned __int8 v27 = (char *)a2 + v22;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  uint64_t v28 = a3[12];
  uint64_t v29 = a3[13];
  uint64_t v30 = (char *)a1 + v28;
  uint64_t v31 = (char *)a2 + v28;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  v30[16] = v31[16];
  uint64_t v32 = (char *)a1 + v29;
  int v33 = (char *)a2 + v29;
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  return a1;
}

void *assignWithTake for RemoteContentView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  char v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for RemoteContent(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1B5905DE8((uint64_t)v8, type metadata accessor for RemoteContent);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v18 = sub_1B5A1A258();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
        v8[*(int *)(v19 + 48)] = v9[*(int *)(v19 + 48)];
        *(_OWORD *)&v8[*(int *)(v19 + 64)] = *(_OWORD *)&v9[*(int *)(v19 + 64)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v17 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1B5905DE8((uint64_t)v8, type metadata accessor for RemoteContent);
LABEL_7:
    size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C30) - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v17);
    goto LABEL_14;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v15 = sub_1B5A1A258();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
    v8[*(int *)(v16 + 48)] = v9[*(int *)(v16 + 48)];
    *(_OWORD *)&v8[*(int *)(v16 + 64)] = *(_OWORD *)&v9[*(int *)(v16 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  uint64_t v20 = a3[6];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  char v23 = v22[16];
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  v21[16] = v23;
  sub_1B59068F4();
  uint64_t v24 = a3[7];
  long long v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  char v27 = v26[16];
  *(_OWORD *)long long v25 = *(_OWORD *)v26;
  v25[16] = v27;
  sub_1B59068F4();
  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_release();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[10];
  long long v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  char v36 = v35[16];
  *(_OWORD *)long long v34 = *(_OWORD *)v35;
  v34[16] = v36;
  sub_1B59068F4();
  uint64_t v37 = a3[11];
  uint64_t v38 = (char *)a1 + v37;
  char v39 = (char *)a2 + v37;
  char v40 = v39[16];
  uint64_t v41 = *(void *)v38;
  uint64_t v42 = *((void *)v38 + 1);
  char v43 = v38[16];
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  v38[16] = v40;
  sub_1B5903F2C(v41, v42, v43);
  uint64_t v44 = a3[12];
  char v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  char v47 = v46[16];
  uint64_t v48 = *(void *)v45;
  uint64_t v49 = *((void *)v45 + 1);
  char v50 = v45[16];
  *(_OWORD *)char v45 = *(_OWORD *)v46;
  v45[16] = v47;
  sub_1B5903F2C(v48, v49, v50);
  uint64_t v51 = a3[13];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = *(void *)v53;
  LOBYTE(v53) = v53[8];
  uint64_t v55 = *(void **)v52;
  char v56 = v52[8];
  *(void *)uint64_t v52 = v54;
  v52[8] = (char)v53;
  sub_1B5903F38(v55, v56);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteContentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5907AB4);
}

uint64_t sub_1B5907AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C30);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RemoteContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5907B7C);
}

uint64_t sub_1B5907B7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C30);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1B5907C28()
{
  sub_1B5907CEC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1B5907CEC()
{
  if (!qword_1E9D62C48)
  {
    type metadata accessor for RemoteContent(255);
    unint64_t v0 = sub_1B5A1C2B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9D62C48);
    }
  }
}

uint64_t sub_1B5907D44()
{
  return sub_1B5907E44(&qword_1E9D62C50, &qword_1E9D62C58, (void (*)(void))sub_1B5907D94, (void (*)(void))sub_1B5907E08);
}

unint64_t sub_1B5907D94()
{
  unint64_t result = qword_1E9D62C60;
  if (!qword_1E9D62C60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D62C68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62C60);
  }
  return result;
}

uint64_t sub_1B5907E08()
{
  return sub_1B5907E44(&qword_1E9D62C70, &qword_1E9D62C78, (void (*)(void))sub_1B5907ECC, (void (*)(void))sub_1B5908164);
}

uint64_t sub_1B5907E44(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B5907ECC()
{
  return sub_1B5907E44(&qword_1E9D62C80, &qword_1E9D62C88, (void (*)(void))sub_1B5907D94, (void (*)(void))sub_1B5907F08);
}

unint64_t sub_1B5907F08()
{
  unint64_t result = qword_1E9D62C90;
  if (!qword_1E9D62C90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D62C98);
    sub_1B5907F84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62C90);
  }
  return result;
}

unint64_t sub_1B5907F84()
{
  unint64_t result = qword_1E9D62CA0;
  if (!qword_1E9D62CA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D62CA8);
    sub_1B5908024();
    sub_1B59095C8(&qword_1E9D62CF0, &qword_1E9D62CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62CA0);
  }
  return result;
}

unint64_t sub_1B5908024()
{
  unint64_t result = qword_1E9D62CB0;
  if (!qword_1E9D62CB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D62CB8);
    sub_1B59080C4();
    sub_1B59095C8(&qword_1E9D62CE0, &qword_1E9D62CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62CB0);
  }
  return result;
}

unint64_t sub_1B59080C4()
{
  unint64_t result = qword_1E9D62CC0;
  if (!qword_1E9D62CC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D62CC8);
    sub_1B59095C8(&qword_1E9D62CD0, &qword_1E9D62CD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62CC0);
  }
  return result;
}

unint64_t sub_1B5908164()
{
  unint64_t result = qword_1E9D62D00;
  if (!qword_1E9D62D00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D62D08);
    sub_1B5907D94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62D00);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for IntResolvable(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B590821C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B590823C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteContentView.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RemoteContentView.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59083F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1B5908420(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1B5908428(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for RemoteContentView.CodingKeys()
{
  return &type metadata for RemoteContentView.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RemoteContentRefreshHelper.Status(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RemoteContentRefreshHelper.Status(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B590859CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1B59085C4(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteContentRefreshHelper.Status()
{
  return &type metadata for RemoteContentRefreshHelper.Status;
}

unint64_t sub_1B59085E4()
{
  unint64_t result = qword_1E9D62DD8;
  if (!qword_1E9D62DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62DD8);
  }
  return result;
}

unint64_t sub_1B590863C()
{
  unint64_t result = qword_1E9D62DE0;
  if (!qword_1E9D62DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62DE0);
  }
  return result;
}

unint64_t sub_1B5908694()
{
  unint64_t result = qword_1E9D62DE8;
  if (!qword_1E9D62DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62DE8);
  }
  return result;
}

unint64_t sub_1B59086EC()
{
  unint64_t result = qword_1E9D62DF0;
  if (!qword_1E9D62DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62DF0);
  }
  return result;
}

uint64_t sub_1B5908740()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_1B590874C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B5908784(uint64_t a1)
{
  return sub_1B5904EDC(a1, v1, &qword_1E9D62E38, &qword_1E9D62E40);
}

uint64_t sub_1B59087C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  sub_1B590881C(a2);
  return sub_1B590881C(a4);
}

uint64_t sub_1B590881C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B590882C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_release();
  sub_1B5908888(a2);
  return sub_1B5908888(a4);
}

uint64_t sub_1B5908888(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t objectdestroy_218Tm()
{
  uint64_t v1 = (int *)type metadata accessor for RemoteContentView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[5];
  uint64_t v7 = type metadata accessor for RemoteContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_1B5905904(*(void *)v6, *(void *)(v6 + 8));
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        uint64_t v9 = sub_1B5A1A258();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
        uint64_t v10 = (uint64_t *)(v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0) + 64));
        unint64_t v11 = v10[1];
        if (v11 >> 60 != 15) {
          sub_1B5905904(*v10, v11);
        }
        break;
      case 3u:
        sub_1B5904A88(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(unsigned char *)(v6 + 24));
        unsigned int v12 = *(unsigned __int8 *)(v6 + 56);
        if (v12 <= 0xFD) {
          sub_1B5904A88(*(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), v12);
        }
        int v13 = *(unsigned __int8 *)(v6 + 88);
        if (v13 != 255) {
          sub_1B5905248(*(void *)(v6 + 64), *(void *)(v6 + 72), *(void *)(v6 + 80), v13 & 1);
        }
        swift_release();
        break;
      default:
        break;
    }
  }
  unint64_t v8 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1B59068F4();
  sub_1B59068F4();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B59068F4();
  sub_1B5903F2C(*(void *)(v5 + v1[11]), *(void *)(v5 + v1[11] + 8), *(unsigned char *)(v5 + v1[11] + 16));
  sub_1B5903F2C(*(void *)(v5 + v1[12]), *(void *)(v5 + v1[12] + 8), *(unsigned char *)(v5 + v1[12] + 16));
  sub_1B5903F38(*(id *)(v5 + v1[13]), *(unsigned char *)(v5 + v1[13] + 8));

  return MEMORY[0x1F4186498](v0, v8 + 8, v2 | 7);
}

uint64_t sub_1B5908B68()
{
  uint64_t v1 = *(void *)(type metadata accessor for RemoteContentView(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1B5902CB8((void *)(v0 + v2), *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1B5908BE8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1B5908C0C()
{
  return sub_1B5908EF8((uint64_t (*)(uint64_t))sub_1B5902BE4);
}

uint64_t objectdestroy_228Tm()
{
  uint64_t v1 = (int *)type metadata accessor for RemoteContentView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[5];
  uint64_t v7 = type metadata accessor for RemoteContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_1B5905904(*(void *)v6, *(void *)(v6 + 8));
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        uint64_t v8 = sub_1B5A1A258();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
        uint64_t v9 = (uint64_t *)(v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0) + 64));
        unint64_t v10 = v9[1];
        if (v10 >> 60 != 15) {
          sub_1B5905904(*v9, v10);
        }
        break;
      case 3u:
        sub_1B5904A88(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(unsigned char *)(v6 + 24));
        unsigned int v11 = *(unsigned __int8 *)(v6 + 56);
        if (v11 <= 0xFD) {
          sub_1B5904A88(*(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), v11);
        }
        int v12 = *(unsigned __int8 *)(v6 + 88);
        if (v12 != 255) {
          sub_1B5905248(*(void *)(v6 + 64), *(void *)(v6 + 72), *(void *)(v6 + 80), v12 & 1);
        }
        swift_release();
        break;
      default:
        break;
    }
  }
  sub_1B59068F4();
  sub_1B59068F4();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B59068F4();
  sub_1B5903F2C(*(void *)(v5 + v1[11]), *(void *)(v5 + v1[11] + 8), *(unsigned char *)(v5 + v1[11] + 16));
  sub_1B5903F2C(*(void *)(v5 + v1[12]), *(void *)(v5 + v1[12] + 8), *(unsigned char *)(v5 + v1[12] + 16));
  sub_1B5903F38(*(id *)(v5 + v1[13]), *(unsigned char *)(v5 + v1[13] + 8));
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1B5908EE0()
{
  return sub_1B5908EF8(sub_1B5902744);
}

uint64_t sub_1B5908EF8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for RemoteContentView(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

uint64_t sub_1B5908F6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5908FC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B590901C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B5909084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B59090EC()
{
  uint64_t v1 = (int *)type metadata accessor for RemoteContentView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = type metadata accessor for RemoteContent(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + v3 + v1[5];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v10 + v1[5], 1, v5))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_1B5905904(*(void *)v11, *(void *)(v11 + 8));
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        uint64_t v18 = sub_1B5A1A258();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v11, v18);
        uint64_t v19 = (uint64_t *)(v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0) + 64));
        unint64_t v20 = v19[1];
        if (v20 >> 60 != 15) {
          sub_1B5905904(*v19, v20);
        }
        break;
      case 3u:
        sub_1B5904A88(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(unsigned char *)(v11 + 24));
        unsigned int v21 = *(unsigned __int8 *)(v11 + 56);
        if (v21 <= 0xFD) {
          sub_1B5904A88(*(void *)(v11 + 32), *(void *)(v11 + 40), *(void *)(v11 + 48), v21);
        }
        int v22 = *(unsigned __int8 *)(v11 + 88);
        if (v22 != 255) {
          sub_1B5905248(*(void *)(v11 + 64), *(void *)(v11 + 72), *(void *)(v11 + 80), v22 & 1);
        }
        swift_release();
        break;
      default:
        break;
    }
  }
  sub_1B59068F4();
  sub_1B59068F4();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B59068F4();
  sub_1B5903F2C(*(void *)(v10 + v1[11]), *(void *)(v10 + v1[11] + 8), *(unsigned char *)(v10 + v1[11] + 16));
  sub_1B5903F2C(*(void *)(v10 + v1[12]), *(void *)(v10 + v1[12] + 8), *(unsigned char *)(v10 + v1[12] + 16));
  sub_1B5903F38(*(id *)(v10 + v1[13]), *(unsigned char *)(v10 + v1[13] + 8));
  uint64_t v12 = v0 + v8;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_1B5905904(*(void *)v12, *(void *)(v12 + 8));
      break;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      uint64_t v13 = sub_1B5A1A258();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v0 + v8, v13);
      int v14 = (uint64_t *)(v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0) + 64));
      unint64_t v15 = v14[1];
      if (v15 >> 60 != 15) {
        sub_1B5905904(*v14, v15);
      }
      break;
    case 3u:
      sub_1B5904A88(*(void *)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(unsigned char *)(v12 + 24));
      unsigned int v16 = *(unsigned __int8 *)(v12 + 56);
      if (v16 <= 0xFD) {
        sub_1B5904A88(*(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), v16);
      }
      int v17 = *(unsigned __int8 *)(v12 + 88);
      if (v17 != 255) {
        sub_1B5905248(*(void *)(v12 + 64), *(void *)(v12 + 72), *(void *)(v12 + 80), v17 & 1);
      }
      swift_release();
      break;
    default:
      break;
  }
  return MEMORY[0x1F4186498](v0, v8 + v9, v2 | v7 | 7);
}

uint64_t sub_1B59094FC()
{
  uint64_t v1 = *(void *)(type metadata accessor for RemoteContentView(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for RemoteContent(0) - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_1B59023DC(v0 + v2, v5);
}

uint64_t sub_1B59095C8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B590960C(uint64_t a1)
{
  return sub_1B5904EDC(a1, v1, &qword_1E9D62E88, &qword_1E9D62E90);
}

uint64_t sub_1B5909638(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return sub_1B590968C(a3);
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_1B590968C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_1B59096A4()
{
  unint64_t result = qword_1E9D62EA0;
  if (!qword_1E9D62EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62EA0);
  }
  return result;
}

unint64_t sub_1B59096F8()
{
  unint64_t result = qword_1E9D62EA8;
  if (!qword_1E9D62EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62EA8);
  }
  return result;
}

unint64_t sub_1B590974C()
{
  unint64_t result = qword_1E9D62EB0;
  if (!qword_1E9D62EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62EB0);
  }
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1B59097AC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B59097CC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_1B5909844(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B5909890(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_OWORD *sub_1B59098F4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t Shape.anyShape.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double (**a3)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  return sub_1B59099E8((uint64_t)v8, a1, a2, a3);
}

uint64_t sub_1B59099E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double (**a4)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_1B590D5B4;
  a4[1] = (double (*)@<D0>(uint64_t@<X8>))v10;
  return result;
}

double sub_1B5909AC8@<D0>(uint64_t a1@<X8>)
{
  return sub_1B5909AF8(MEMORY[0x1E4F3EE38], a1);
}

double sub_1B5909AE0@<D0>(uint64_t a1@<X8>)
{
  return sub_1B5909AF8(MEMORY[0x1E4F3CD80], a1);
}

double sub_1B5909AF8@<D0>(void (*a1)(_OWORD *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  a1(v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(unsigned char *)(a2 + 32) = v6;
  return result;
}

double AnyShape.path(in:)@<D0>(uint64_t a1@<X8>)
{
  void (**v1)(_OWORD *__return_ptr);
  double result;
  long long v4;
  _OWORD v5[2];
  char v6;

  (*v1)(v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v6;
  return result;
}

double sub_1B5909B90@<D0>(uint64_t a1@<X8>)
{
  void (**v1)(_OWORD *__return_ptr);
  double result;
  long long v4;
  _OWORD v5[2];
  char v6;

  (*v1)(v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v6;
  return result;
}

uint64_t sub_1B5909BE4()
{
  return MEMORY[0x1F40FC680]();
}

void (*sub_1B5909BFC(void *a1))(void *a1)
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B5A1A408();
  return sub_1B5909C6C;
}

void sub_1B5909C6C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1B5909CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B590D4D8();
  return MEMORY[0x1F40FC6D8](a1, a2, a3, v6);
}

uint64_t sub_1B5909D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B590D4D8();
  return MEMORY[0x1F40FC690](a1, a2, a3, v6);
}

uint64_t sub_1B5909D80(uint64_t a1)
{
  unint64_t v2 = sub_1B590D4D8();
  return MEMORY[0x1F40FC6B0](a1, v2);
}

uint64_t sub_1B5909DCC(char a1)
{
  return qword_1B5A1E2A0[a1];
}

uint64_t sub_1B5909DEC(char *a1, char *a2)
{
  return sub_1B59EE9E4(*a1, *a2);
}

uint64_t sub_1B5909DF8()
{
  return sub_1B59F02E0();
}

uint64_t sub_1B5909E00()
{
  return sub_1B59F3F74();
}

uint64_t sub_1B5909E08()
{
  return sub_1B59F5434();
}

uint64_t sub_1B5909E10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5909E48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5909DCC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5909E74()
{
  return sub_1B5909DCC(*v0);
}

uint64_t sub_1B5909E7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

void sub_1B5909EAC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1B5909EB8(uint64_t a1)
{
  unint64_t v2 = sub_1B590C9E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5909EF4(uint64_t a1)
{
  unint64_t v2 = sub_1B590C9E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ShapeContentBox.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62EF8);
  uint64_t v46 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F00);
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  unint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B5A1C4E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1B5A1C828();
  if (qword_1E9D62B28 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v7, (uint64_t)qword_1E9D910E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  if (*(void *)(v11 + 16) && (unint64_t v13 = sub_1B59049D0((uint64_t)v10), (v14 & 1) != 0))
  {
    sub_1B59052CC(*(void *)(v11 + 56) + 32 * v13, (uint64_t)&v55);
  }
  else
  {
    long long v55 = 0u;
    long long v56 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (!*((void *)&v56 + 1))
  {
    sub_1B5908FC0((uint64_t)&v55, &qword_1E9D62BC8);
    goto LABEL_12;
  }
  type metadata accessor for ContentRegistry();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    type metadata accessor for ContentRegistryError();
    sub_1B590EE18(&qword_1E9D62F08, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v15 = (void *)v52;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v16 = sub_1B590C798();
  sub_1B5A1C838();
  if (v2)
  {

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  id v44 = v15;
  uint64_t v18 = v50;
  uint64_t v19 = v6;
  uint64_t v20 = sub_1B5A1C5E8();
  if (!*(void *)(v20 + 16))
  {
    swift_bridgeObjectRelease();
    type metadata accessor for DynamicKeyError();
    sub_1B590EE18(&qword_1E9D62F40, (void (*)(uint64_t))type metadata accessor for DynamicKeyError);
    swift_allocError();
    sub_1B5A1C578();
    sub_1B5A1C3C8();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v49 + 8))(v6, v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = *(void *)(v20 + 32);
  uint64_t v22 = *(void *)(v20 + 40);
  uint64_t v23 = *(void *)(v20 + 48);
  int v42 = *(unsigned __int8 *)(v20 + 56);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  char v43 = v19;
  uint64_t v24 = sub_1B5A1C578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
  *(void *)(inited + 56) = &type metadata for DynamicKey;
  *(void *)(inited + 64) = v16;
  uint64_t v26 = swift_allocObject();
  *(void *)(inited + 32) = v26;
  *(void *)(v26 + 16) = v21;
  *(void *)(v26 + 24) = v22;
  uint64_t v41 = v23;
  *(void *)(v26 + 32) = v23;
  LOBYTE(v23) = v42;
  *(unsigned char *)(v26 + 40) = v42;
  *(void *)&long long v55 = v24;
  swift_bridgeObjectRetain();
  uint64_t v27 = inited;
  uint64_t v28 = v21;
  sub_1B590C864(v27, (uint64_t (*)(void))sub_1B59BA638, &qword_1E9D62F90);
  uint64_t v29 = sub_1B59DC15C(v21, v22);
  uint64_t v40 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v55 = v28;
  *((void *)&v55 + 1) = v22;
  *(void *)&long long v56 = v41;
  BYTE8(v56) = v23;
  sub_1B590C9E4();
  uint64_t v31 = v48;
  uint64_t v32 = v43;
  sub_1B5A1C568();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  LOBYTE(v52) = 1;
  uint64_t v34 = v47;
  sub_1B5A1C588();
  sub_1B590CA38((uint64_t)&v55, (uint64_t)v51);
  uint64_t v53 = v29;
  uint64_t v54 = v40;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v52);
  sub_1B5A1C1C8();
  sub_1B5908BE8(&v52, (uint64_t)v57);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F28);
  v51[0] = 2;
  sub_1B590CB54();
  sub_1B5A1C5B8();
  if ((void)v52) {
    uint64_t v35 = v52;
  }
  else {
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  uint64_t v36 = v18;
  uint64_t v37 = v58;
  uint64_t v38 = v59;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v57, v58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 64))(v35, v37, v38);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v34);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v36);
  sub_1B590CC6C((uint64_t)v57, v45);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B590CCCC((uint64_t)v57);
}

uint64_t sub_1B590A8E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShapeContentBox.init(from:)(a1, a2);
}

uint64_t sub_1B590A90C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B590A960@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B590FF3C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B590A98C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B590A9E4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1B590A9F0(uint64_t a1)
{
  unint64_t v2 = sub_1B590F594();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B590AA2C(uint64_t a1)
{
  unint64_t v2 = sub_1B590F594();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B590AA68(char a1)
{
  if (a1) {
    return 0x6F756E69746E6F63;
  }
  else {
    return 0x72616C7563726963;
  }
}

uint64_t sub_1B590AAA4@<X0>(uint64_t *a1@<X8>)
{
  sub_1B590F690();
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

void sub_1B590AADC(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  *a1 = sub_1B590EDB8;
  a1[1] = 0;
}

uint64_t sub_1B590AAF4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B590AAFC(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_1B590AB28())()
{
  return nullsub_1;
}

double sub_1B590AB48@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B590B868(a1, a2);
}

uint64_t sub_1B590AB60@<X0>(uint64_t *a1@<X8>)
{
  sub_1B590F63C();
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

void sub_1B590AB98(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  *a1 = sub_1B590EDD0;
  a1[1] = 0;
}

uint64_t sub_1B590ABB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1B5A1BAF8();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  unsigned __int8 v6 = *(unsigned char *)(v1 + 40);
  if (*(void *)(v1 + 56))
  {
    uint64_t v7 = swift_retain();
    sub_1B590AE00(v7, v14);
    uint64_t result = swift_release();
    uint64_t v9 = v14[1];
    *(double (**)@<D0>(uint64_t@<X8>, double@<D0>, double@<D1>, double@<D2>, double@<D3>))a1 = v14[0];
    *(void *)(a1 + 8) = v9;
  }
  else
  {
    uint64_t v10 = *(void *)(v1 + 16);
    uint64_t v11 = v4;
    uint64_t v12 = v5;
    unsigned __int8 v13 = v6;
    swift_bridgeObjectRetain();
    sub_1B5904BDC(v10, v11, v12, v13);
    type metadata accessor for RemoteStateStore(0);
    sub_1B590EE18((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    swift_bridgeObjectRetain();
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B590AE00@<X0>(uint64_t a1@<X0>, double (**a2)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v5 = sub_1B5A1AB78();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B5A1BAF8();
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v29 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  unsigned int v11 = *(unsigned __int8 *)(v2 + 40);
  if (v11 <= 0xFD)
  {
    uint64_t v21 = v8;
    uint64_t v22 = v5;
    uint64_t v23 = a2;
    uint64_t v12 = *(void *)(v2 + 16);
    uint64_t v13 = *(void *)(v2 + 24);
    uint64_t v14 = *(void *)(v2 + 32);
    uint64_t v25 = v12;
    uint64_t v26 = v13;
    uint64_t v27 = v14;
    char v28 = v11;
    sub_1B5904B60(v12, v13, v14, v11);
    unint64_t v15 = StringResolvable.resolved(with:)(v24);
    if (v3)
    {

      sub_1B5904B4C(v12, v13, v14, v11);
      uint64_t v5 = v22;
      a2 = v23;
      uint64_t v8 = v21;
    }
    else
    {
      uint64_t v24 = v15;
      sub_1B5904B4C(v12, v13, v14, v11);
      a2 = v23;
      uint64_t v8 = v21;
      uint64_t v5 = v22;
    }
  }
  uint64_t v16 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  int v17 = (unsigned int *)MEMORY[0x1E4F3D4A0];
  if (v16 != 1) {
    int v17 = (unsigned int *)MEMORY[0x1E4F3D4B0];
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v17, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8, v5);
  unint64_t v18 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t result = sub_1B590EFA0((uint64_t)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, MEMORY[0x1E4F3EE58]);
  *a2 = sub_1B590EDEC;
  a2[1] = (double (*)@<D0>(uint64_t@<X8>, double@<D0>, double@<D1>, double@<D2>, double@<D3>))v19;
  return result;
}

uint64_t sub_1B590B0C8(char a1)
{
  if (a1) {
    return 0x656C797473;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1B590B0F0(char *a1, char *a2)
{
  return sub_1B59EFB34(*a1, *a2);
}

uint64_t sub_1B590B0FC()
{
  return sub_1B59F034C();
}

uint64_t sub_1B590B104()
{
  return sub_1B59F49EC();
}

uint64_t sub_1B590B10C()
{
  return sub_1B59F52F4();
}

uint64_t sub_1B590B114@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B590B174@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B590B0C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B590B1A0()
{
  return sub_1B590B0C8(*v0);
}

uint64_t sub_1B590B1A8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B590B20C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1B590B218(uint64_t a1)
{
  unint64_t v2 = sub_1B590F5E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B590B254(uint64_t a1)
{
  unint64_t v2 = sub_1B590F5E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B590B290@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v35 = sub_1B5A1A2A8();
  uint64_t v32 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  char v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63070);
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B590EE18((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v8 = sub_1B5A1A918();
  uint64_t v10 = v9;
  uint64_t v11 = a1[3];
  uint64_t v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1B590F5E8();
  swift_retain();
  uint64_t v12 = v37;
  sub_1B5A1C838();
  if (v12)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    swift_release();
  }
  else
  {
    uint64_t v37 = v8;
    uint64_t v14 = v34;
    uint64_t v13 = v35;
    uint64_t v31 = v10;
    LOBYTE(v38) = 0;
    uint64_t v15 = sub_1B5A1C598();
    uint64_t v18 = v16;
    if (v16)
    {
      uint64_t v19 = v15;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v19 = sub_1B5A1A288();
      uint64_t v18 = v20;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v13);
    }
    char v42 = 1;
    sub_1B5904A34();
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v5);
    uint64_t v21 = v38;
    uint64_t v22 = v39;
    uint64_t v23 = v19;
    uint64_t v24 = v40;
    unsigned __int8 v25 = v41;
    swift_bridgeObjectRetain();
    sub_1B5904BDC(v21, v22, v24, v25);
    uint64_t v26 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v27 = v33;
    *uint64_t v33 = v23;
    v27[1] = v18;
    v27[2] = v21;
    v27[3] = v22;
    v27[4] = v24;
    *((unsigned char *)v27 + 40) = v25;
    uint64_t v28 = (uint64_t)v36;
    uint64_t v29 = v37;
    v27[6] = v26;
    v27[7] = v29;
    v27[8] = v31;
    __swift_destroy_boxed_opaque_existential_1(v28);
    swift_bridgeObjectRelease();
    sub_1B5904B4C(v21, v22, v24, v25);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B590B668@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = v1[3];
  long long v12 = v1[2];
  long long v13 = v3;
  uint64_t v14 = *((void *)v1 + 8);
  long long v4 = v1[1];
  long long v10 = *v1;
  long long v11 = v4;
  sub_1B59168D0(v8);
  uint64_t v5 = v9;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v6 = View.anyView.getter(v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  *a1 = v6;
  return result;
}

uint64_t sub_1B590B6F4@<X0>(uint64_t a1@<X0>, double (**a2)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)@<X8>)
{
  return sub_1B590AE00(a1, a2);
}

uint64_t sub_1B590B70C@<X0>(uint64_t a1@<X0>, double (**a2)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)@<X8>)
{
  return sub_1B590AE00(a1, a2);
}

uint64_t sub_1B590B768()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B590B770(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_1B590B79C())()
{
  return nullsub_1;
}

uint64_t sub_1B590B7BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B59170D4(a1);
}

uint64_t sub_1B590B800@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B590B290(a1, a2);
}

uint64_t sub_1B590B818@<X0>(uint64_t *a1@<X8>)
{
  sub_1B590F264();
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

void sub_1B590B850(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  *a1 = sub_1B590EF3C;
  a1[1] = 0;
}

double sub_1B590B868@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B590F2B8(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B590B8B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1B5A1A808();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  unsigned __int8 v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  unsigned __int8 v10 = *(unsigned char *)(v1 + 72);
  if (*(void *)(v1 + 88))
  {
    uint64_t v11 = swift_retain();
    sub_1B590BB50(v11, v19);
    uint64_t result = swift_release();
    long long v13 = v19[1];
    *(double (**)@<D0>(uint64_t@<X8>, double@<D0>, double@<D1>, double@<D2>, double@<D3>))a1 = v19[0];
    *(void *)(a1 + 8) = v13;
  }
  else
  {
    uint64_t v14 = *(void *)(v1 + 48);
    uint64_t v15 = v8;
    uint64_t v16 = v9;
    unsigned __int8 v17 = v10;
    uint64_t v18 = v4;
    swift_bridgeObjectRetain();
    sub_1B590F04C(v5, v18, v6, v7);
    sub_1B5904BDC(v14, v15, v16, v17);
    type metadata accessor for RemoteStateStore(0);
    sub_1B590EE18((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    swift_bridgeObjectRetain();
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B590BB50@<X0>(uint64_t a1@<X0>, double (**a2)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)@<X8>)
{
  uint64_t v4 = v3;
  char v42 = a2;
  uint64_t v6 = sub_1B5A1AB78();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unsigned __int8 v41 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1B5A1A808();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  long long v12 = (double *)&v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v13 = *(unsigned __int8 *)(v2 + 40);
  uint64_t v14 = *(void *)(v2 + 48);
  uint64_t v15 = *(void *)(v2 + 56);
  uint64_t v16 = *(void *)(v2 + 64);
  unsigned int v17 = *(unsigned __int8 *)(v2 + 72);
  uint64_t v39 = v18;
  uint64_t v40 = v11;
  uint64_t v38 = v10;
  uint64_t v43 = v14;
  if (v13 == 255)
  {
    double v23 = 0.0;
  }
  else
  {
    unsigned int v33 = v17;
    uint64_t v34 = v16;
    uint64_t v35 = v7;
    uint64_t v37 = v6;
    uint64_t v20 = *(void *)(v2 + 16);
    uint64_t v19 = *(void *)(v2 + 24);
    uint64_t v21 = *(void *)(v2 + 32);
    sub_1B590D634(v20, v19, v21, v13 & 1);
    uint64_t v36 = a1;
    double v22 = sub_1B59B4324(a1, v20, v19, v21, v13 & 1);
    if (v3)
    {

      uint64_t v4 = 0;
      double v23 = 0.0;
    }
    else
    {
      double v23 = v22;
    }
    sub_1B590F034(v20, v19, v21, v13);
    a1 = v36;
    uint64_t v6 = v37;
    uint64_t v16 = v34;
    uint64_t v7 = v35;
    unsigned int v17 = v33;
    uint64_t v14 = v43;
  }
  if (v17 <= 0xFD)
  {
    uint64_t v44 = v14;
    uint64_t v45 = v15;
    uint64_t v46 = v16;
    char v47 = v17;
    unsigned __int8 v24 = v17;
    sub_1B5904B60(v14, v15, v16, v17);
    StringResolvable.resolved(with:)(a1);
    if (v4) {

    }
    sub_1B5904B4C(v43, v15, v16, v24);
  }
  uint64_t v25 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  uint64_t v26 = (unsigned int *)MEMORY[0x1E4F3D4A0];
  if (v25 != 1) {
    uint64_t v26 = (unsigned int *)MEMORY[0x1E4F3D4B0];
  }
  uint64_t v27 = v41;
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v41, *v26, v6);
  double *v12 = v23;
  v12[1] = v23;
  (*(void (**)(char *, unsigned char *, uint64_t))(v7 + 32))((char *)v12 + *(int *)(v38 + 20), v27, v6);
  unint64_t v28 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v29 = swift_allocObject();
  uint64_t result = sub_1B590EFA0((uint64_t)v12, v29 + v28, MEMORY[0x1E4F3CDB8]);
  uint64_t v31 = v42;
  *char v42 = sub_1B590F008;
  v31[1] = (double (*)@<D0>(uint64_t@<X8>, double@<D0>, double@<D1>, double@<D2>, double@<D3>))v29;
  return result;
}

uint64_t sub_1B590BEF0(char a1)
{
  return qword_1B5A1E2D0[a1];
}

uint64_t sub_1B590BF10(char *a1, char *a2)
{
  return sub_1B59EDAE4(*a1, *a2);
}

uint64_t sub_1B590BF1C()
{
  return sub_1B59F03C0();
}

uint64_t sub_1B590BF24()
{
  return sub_1B59F361C();
}

uint64_t sub_1B590BF2C()
{
  return sub_1B59F6964();
}

uint64_t sub_1B590BF34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B590BF6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B590BEF0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B590BF98()
{
  return sub_1B590BEF0(*v0);
}

uint64_t sub_1B590BFA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B590BFD0(uint64_t a1)
{
  unint64_t v2 = sub_1B590F210();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B590C00C(uint64_t a1)
{
  unint64_t v2 = sub_1B590F210();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B590C048@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63040);
  uint64_t v47 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B590EE18((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v9 = sub_1B5A1A918();
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  uint64_t v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B590F210();
  swift_retain();
  uint64_t v13 = v51;
  sub_1B5A1C838();
  if (v13)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  }
  else
  {
    uint64_t v14 = v48;
    uint64_t v15 = v49;
    uint64_t v45 = v11;
    uint64_t v16 = v47;
    uint64_t v51 = v9;
    LOBYTE(v52) = 0;
    uint64_t v17 = sub_1B5A1C598();
    uint64_t v20 = v18;
    if (v18)
    {
      uint64_t v44 = v17;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v44 = sub_1B5A1A288();
      uint64_t v20 = v21;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v15);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F98);
    char v57 = 1;
    sub_1B59095C8((unint64_t *)&qword_1E9D63050, &qword_1E9D62F98);
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    uint64_t v22 = v52;
    uint64_t v23 = v54;
    char v57 = 2;
    uint64_t v49 = v53;
    LODWORD(v48) = v55;
    sub_1B590F04C(v52, v53, v54, v55);
    sub_1B5904A34();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    uint64_t v25 = v52;
    uint64_t v24 = v53;
    uint64_t v43 = v53;
    uint64_t v47 = v54;
    uint64_t v26 = v23;
    uint64_t v41 = v23;
    uint64_t v27 = v20;
    unsigned __int8 v28 = v55;
    int v56 = v55;
    swift_bridgeObjectRetain();
    uint64_t v29 = v49;
    unsigned __int8 v30 = v48;
    sub_1B590F04C(v22, v49, v26, v48);
    uint64_t v31 = v25;
    uint64_t v42 = v25;
    uint64_t v32 = v25;
    uint64_t v33 = v47;
    sub_1B5904BDC(v32, v24, v47, v28);
    uint64_t v34 = v29;
    swift_bridgeObjectRetain();
    uint64_t v35 = v41;
    sub_1B590F034(v22, v29, v41, v30);
    swift_bridgeObjectRelease();
    uint64_t v36 = v46;
    uint64_t *v46 = v44;
    v36[1] = v27;
    v36[2] = v22;
    v36[3] = v29;
    v36[4] = v35;
    *((unsigned char *)v36 + 40) = v30;
    v36[6] = v31;
    uint64_t v37 = v43;
    v36[7] = v43;
    v36[8] = v33;
    LOBYTE(v33) = v56;
    *((unsigned char *)v36 + 72) = v56;
    uint64_t v38 = (uint64_t)v50;
    uint64_t v39 = v51;
    v36[10] = MEMORY[0x1E4FBC860];
    v36[11] = v39;
    v36[12] = v45;
    __swift_destroy_boxed_opaque_existential_1(v38);
    swift_bridgeObjectRelease();
    sub_1B590F034(v22, v34, v35, v30);
    sub_1B5904B4C(v42, v37, v47, v33);
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B590C598@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = v1[5];
  long long v15 = v1[4];
  long long v16 = v3;
  uint64_t v17 = *((void *)v1 + 12);
  long long v4 = v1[1];
  long long v11 = *v1;
  long long v12 = v4;
  long long v5 = v1[3];
  long long v13 = v1[2];
  long long v14 = v5;
  sub_1B5916CF0(v9);
  uint64_t v6 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v7 = View.anyView.getter(v6);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  *a1 = v7;
  return result;
}

uint64_t sub_1B590C62C@<X0>(uint64_t a1@<X0>, double (**a2)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)@<X8>)
{
  return sub_1B590BB50(a1, a2);
}

uint64_t sub_1B590C644@<X0>(uint64_t a1@<X0>, double (**a2)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)@<X8>)
{
  return sub_1B590BB50(a1, a2);
}

uint64_t sub_1B590C6B8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B590C6C0(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*sub_1B590C6EC())()
{
  return nullsub_1;
}

uint64_t sub_1B590C70C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B590B8B0(a1);
}

uint64_t sub_1B590C780@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B590C048(a1, a2);
}

unint64_t sub_1B590C798()
{
  unint64_t result = qword_1E9D62F10;
  if (!qword_1E9D62F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F10);
  }
  return result;
}

uint64_t sub_1B590C7EC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1B590C824(uint64_t a1)
{
  return sub_1B590C864(a1, (uint64_t (*)(void))sub_1B59BA418, &qword_1E9D63090);
}

uint64_t sub_1B590C844(uint64_t a1)
{
  return sub_1B590C864(a1, (uint64_t (*)(void))sub_1B59BA638, &qword_1E9D62F90);
}

uint64_t sub_1B590C864(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v11 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v12 = v5 + 40 * v11 + 32;
  if (a1 + 32 < v12 + 40 * v10 && v12 < a1 + 32 + 40 * v10) {
    goto LABEL_21;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v14 = *(void *)(v5 + 16);
  BOOL v15 = __OFADD__(v14, v10);
  uint64_t v16 = v14 + v10;
  if (!v15)
  {
    *(void *)(v5 + 16) = v16;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *long long v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

unint64_t sub_1B590C9E4()
{
  unint64_t result = qword_1E9D62F20;
  if (!qword_1E9D62F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F20);
  }
  return result;
}

uint64_t sub_1B590CA38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x1BA9A4780);
  }
  return result;
}

unint64_t sub_1B590CB54()
{
  unint64_t result = qword_1E9D62F30;
  if (!qword_1E9D62F30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D62F28);
    sub_1B590CBC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F30);
  }
  return result;
}

unint64_t sub_1B590CBC8()
{
  unint64_t result = qword_1E9D62F38;
  if (!qword_1E9D62F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F38);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1B590CC6C(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1B590CCCC(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B590CCF8()
{
  unint64_t result = qword_1E9D62F48;
  if (!qword_1E9D62F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F48);
  }
  return result;
}

unint64_t sub_1B590CD50()
{
  unint64_t result = qword_1E9D62F50;
  if (!qword_1E9D62F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F50);
  }
  return result;
}

unint64_t sub_1B590CDA8()
{
  unint64_t result = qword_1E9D62F58;
  if (!qword_1E9D62F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F58);
  }
  return result;
}

uint64_t sub_1B590CDFC()
{
  return sub_1B59095C8(&qword_1E9D62F60, &qword_1E9D62F68);
}

uint64_t dispatch thunk of ShapeContent.shape.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ShapeContent.shape(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ShapeContent.shape(with:localStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ShapeContent.modifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ShapeContent.modifiers.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ShapeContent.modifiers.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

void *initializeBufferWithCopyOfBuffer for AnyShape(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for AnyShape()
{
  return swift_release();
}

void *assignWithCopy for AnyShape(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for AnyShape(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyShape(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyShape(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyShape()
{
  return &type metadata for AnyShape;
}

uint64_t initializeWithCopy for ShapeContentBox(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnyViewModifier(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnyViewModifier(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShapeContentBox(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShapeContentBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShapeContentBox()
{
  return &type metadata for ShapeContentBox;
}

ValueMetadata *type metadata accessor for ShapeContentBox.CodingKeys()
{
  return &type metadata for ShapeContentBox.CodingKeys;
}

unint64_t sub_1B590D3D4()
{
  unint64_t result = qword_1E9D62F70;
  if (!qword_1E9D62F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F70);
  }
  return result;
}

unint64_t sub_1B590D42C()
{
  unint64_t result = qword_1E9D62F78;
  if (!qword_1E9D62F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F78);
  }
  return result;
}

unint64_t sub_1B590D484()
{
  unint64_t result = qword_1E9D62F80;
  if (!qword_1E9D62F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F80);
  }
  return result;
}

unint64_t sub_1B590D4D8()
{
  unint64_t result = qword_1E9D62F88;
  if (!qword_1E9D62F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62F88);
  }
  return result;
}

uint64_t sub_1B590D52C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

double sub_1B590D5B4@<D0>(uint64_t a1@<X8>)
{
  sub_1B5A1B988();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

void sub_1B590D634(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1B590968C(a3);
  }
}

uint64_t destroy for RoundedRectangleView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 != 255) {
    sub_1B590D6F0(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v2 & 1);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), v3);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1B590D6F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    sub_1B5905298(a3);
  }
}

uint64_t initializeWithCopy for RoundedRectangleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    char v6 = v5 & 1;
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    uint64_t v9 = *(void *)(a2 + 32);
    sub_1B590D634(v7, v8, v9, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    *(unsigned char *)(a1 + 40) = v6;
  }
  unsigned int v10 = *(unsigned __int8 *)(a2 + 72);
  if (v10 <= 0xFD)
  {
    uint64_t v11 = *(void *)(a2 + 48);
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = *(void *)(a2 + 64);
    sub_1B5904B60(v11, v12, v13, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v13;
    *(unsigned char *)(a1 + 72) = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  }
  uint64_t v14 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RoundedRectangleView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 16);
  int v5 = (long long *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v6 == 255)
    {
      long long v8 = *v5;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      *uint64_t v4 = v8;
    }
    else
    {
      char v17 = v6 & 1;
      uint64_t v18 = *(void *)(a2 + 16);
      uint64_t v19 = *(void *)(a2 + 24);
      uint64_t v20 = *(void *)(a2 + 32);
      sub_1B590D634(v18, v19, v20, v6 & 1);
      *(void *)(a1 + 16) = v18;
      *(void *)(a1 + 24) = v19;
      *(void *)(a1 + 32) = v20;
      *(unsigned char *)(a1 + 40) = v17;
    }
  }
  else if (v6 == 255)
  {
    sub_1B5908FC0(a1 + 16, &qword_1E9D62F98);
    long long v7 = *(_OWORD *)(a2 + 25);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 25) = v7;
  }
  else
  {
    char v9 = v6 & 1;
    uint64_t v10 = *(void *)(a2 + 16);
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    sub_1B590D634(v10, v11, v12, v6 & 1);
    uint64_t v13 = *(void *)(a1 + 16);
    uint64_t v14 = *(void *)(a1 + 24);
    uint64_t v15 = *(void *)(a1 + 32);
    char v16 = *(unsigned char *)(a1 + 40);
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(unsigned char *)(a1 + 40) = v9;
    sub_1B590D6F0(v13, v14, v15, v16);
  }
  uint64_t v21 = (_OWORD *)(a1 + 48);
  uint64_t v22 = (_OWORD *)(a2 + 48);
  unsigned int v23 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) <= 0xFDu)
  {
    if (v23 <= 0xFD)
    {
      uint64_t v29 = *(void *)(a2 + 48);
      uint64_t v30 = *(void *)(a2 + 56);
      uint64_t v31 = *(void *)(a2 + 64);
      sub_1B5904B60(v29, v30, v31, *(unsigned char *)(a2 + 72));
      uint64_t v32 = *(void *)(a1 + 48);
      uint64_t v33 = *(void *)(a1 + 56);
      uint64_t v34 = *(void *)(a1 + 64);
      *(void *)(a1 + 48) = v29;
      *(void *)(a1 + 56) = v30;
      *(void *)(a1 + 64) = v31;
      unsigned __int8 v35 = *(unsigned char *)(a1 + 72);
      *(unsigned char *)(a1 + 72) = v23;
      sub_1B5904A88(v32, v33, v34, v35);
    }
    else
    {
      sub_1B590DA50(a1 + 48);
      long long v25 = *(_OWORD *)(a2 + 57);
      _OWORD *v21 = *v22;
      *(_OWORD *)(a1 + 57) = v25;
    }
  }
  else if (v23 <= 0xFD)
  {
    uint64_t v26 = *(void *)(a2 + 48);
    uint64_t v27 = *(void *)(a2 + 56);
    uint64_t v28 = *(void *)(a2 + 64);
    sub_1B5904B60(v26, v27, v28, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 48) = v26;
    *(void *)(a1 + 56) = v27;
    *(void *)(a1 + 64) = v28;
    *(unsigned char *)(a1 + 72) = v23;
  }
  else
  {
    long long v24 = *v22;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    _OWORD *v21 = v24;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

uint64_t sub_1B590DA50(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for RoundedRectangleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  int v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 == 255) {
    goto LABEL_4;
  }
  int v6 = *(unsigned __int8 *)(a2 + 40);
  if (v6 == 255)
  {
    sub_1B5908FC0(a1 + 16, &qword_1E9D62F98);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    goto LABEL_6;
  }
  char v7 = v5 & 1;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v6 & 1;
  sub_1B590D6F0(v9, v10, v11, v7);
LABEL_6:
  unsigned int v12 = *(unsigned __int8 *)(a1 + 72);
  if (v12 <= 0xFD)
  {
    unsigned int v13 = *(unsigned __int8 *)(a2 + 72);
    if (v13 <= 0xFD)
    {
      uint64_t v14 = *(void *)(a2 + 64);
      uint64_t v15 = *(void *)(a1 + 48);
      uint64_t v16 = *(void *)(a1 + 56);
      uint64_t v17 = *(void *)(a1 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(void *)(a1 + 64) = v14;
      *(unsigned char *)(a1 + 72) = v13;
      sub_1B5904A88(v15, v16, v17, v12);
      goto LABEL_11;
    }
    sub_1B590DA50(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
LABEL_11:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoundedRectangleView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoundedRectangleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoundedRectangleView()
{
  return &type metadata for RoundedRectangleView;
}

ValueMetadata *type metadata accessor for RectangleView()
{
  return &type metadata for RectangleView;
}

uint64_t destroy for CapsuleView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v2);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for CapsuleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    sub_1B5904B60(v6, v7, v8, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CapsuleView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unsigned int v5 = (_OWORD *)(a2 + 16);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = *(void *)(a2 + 32);
      sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 40));
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v16 = *(void *)(a1 + 24);
      uint64_t v17 = *(void *)(a1 + 32);
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 40);
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 16);
      long long v8 = *(_OWORD *)(a2 + 25);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 25) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 40));
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *uint64_t v4 = v7;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for CapsuleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unsigned int v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 <= 0xFD)
  {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 <= 0xFD)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v10 = *(void *)(a1 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = v7;
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B5904A88(v8, v9, v10, v5);
      goto LABEL_6;
    }
    sub_1B590DA50(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for CapsuleView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CapsuleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CapsuleView()
{
  return &type metadata for CapsuleView;
}

ValueMetadata *type metadata accessor for EllipseView()
{
  return &type metadata for EllipseView;
}

uint64_t destroy for DividerView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for DividerView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DividerView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for DividerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DividerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DividerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CircleView()
{
  return &type metadata for CircleView;
}

unint64_t sub_1B590E2F4(uint64_t a1)
{
  unint64_t result = sub_1B590E31C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B590E31C()
{
  unint64_t result = qword_1E9D62FA0;
  if (!qword_1E9D62FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FA0);
  }
  return result;
}

uint64_t sub_1B590E370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B590EA78(a1, a2, a3, (void (*)(void))sub_1B590E388);
}

unint64_t sub_1B590E388()
{
  unint64_t result = qword_1E9D62FA8;
  if (!qword_1E9D62FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FA8);
  }
  return result;
}

uint64_t sub_1B590E3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B590EB4C(a1, a2, a3, (void (*)(void))sub_1B590E408, (void (*)(void))sub_1B590E45C);
}

unint64_t sub_1B590E408()
{
  unint64_t result = qword_1E9D62FB0;
  if (!qword_1E9D62FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FB0);
  }
  return result;
}

unint64_t sub_1B590E45C()
{
  unint64_t result = qword_1E9D62FB8;
  if (!qword_1E9D62FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FB8);
  }
  return result;
}

unint64_t sub_1B590E4B0(uint64_t a1)
{
  unint64_t result = sub_1B590E4D8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B590E4D8()
{
  unint64_t result = qword_1E9D62FC0;
  if (!qword_1E9D62FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FC0);
  }
  return result;
}

uint64_t sub_1B590E52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B590EA78(a1, a2, a3, (void (*)(void))sub_1B590E544);
}

unint64_t sub_1B590E544()
{
  unint64_t result = qword_1E9D62FC8;
  if (!qword_1E9D62FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FC8);
  }
  return result;
}

uint64_t sub_1B590E598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B590EB4C(a1, a2, a3, (void (*)(void))sub_1B590E5C4, (void (*)(void))sub_1B590E618);
}

unint64_t sub_1B590E5C4()
{
  unint64_t result = qword_1E9D62FD0;
  if (!qword_1E9D62FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FD0);
  }
  return result;
}

unint64_t sub_1B590E618()
{
  unint64_t result = qword_1E9D62FD8;
  if (!qword_1E9D62FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FD8);
  }
  return result;
}

unint64_t sub_1B590E66C(uint64_t a1)
{
  unint64_t result = sub_1B590E694();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B590E694()
{
  unint64_t result = qword_1E9D62FE0;
  if (!qword_1E9D62FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FE0);
  }
  return result;
}

uint64_t sub_1B590E6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B590EA78(a1, a2, a3, (void (*)(void))sub_1B590E700);
}

unint64_t sub_1B590E700()
{
  unint64_t result = qword_1E9D62FE8;
  if (!qword_1E9D62FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FE8);
  }
  return result;
}

uint64_t sub_1B590E754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B590EB4C(a1, a2, a3, (void (*)(void))sub_1B590E780, (void (*)(void))sub_1B590E7D4);
}

unint64_t sub_1B590E780()
{
  unint64_t result = qword_1E9D62FF0;
  if (!qword_1E9D62FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FF0);
  }
  return result;
}

unint64_t sub_1B590E7D4()
{
  unint64_t result = qword_1E9D62FF8;
  if (!qword_1E9D62FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62FF8);
  }
  return result;
}

unint64_t sub_1B590E828(uint64_t a1)
{
  unint64_t result = sub_1B590E850();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B590E850()
{
  unint64_t result = qword_1E9D63000;
  if (!qword_1E9D63000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63000);
  }
  return result;
}

uint64_t sub_1B590E8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B590EA78(a1, a2, a3, (void (*)(void))sub_1B590E8BC);
}

unint64_t sub_1B590E8BC()
{
  unint64_t result = qword_1E9D63008;
  if (!qword_1E9D63008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63008);
  }
  return result;
}

uint64_t sub_1B590E910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B590EB4C(a1, a2, a3, (void (*)(void))sub_1B590E93C, (void (*)(void))sub_1B590E990);
}

unint64_t sub_1B590E93C()
{
  unint64_t result = qword_1E9D63010;
  if (!qword_1E9D63010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63010);
  }
  return result;
}

unint64_t sub_1B590E990()
{
  unint64_t result = qword_1E9D63018;
  if (!qword_1E9D63018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63018);
  }
  return result;
}

unint64_t sub_1B590E9E4(uint64_t a1)
{
  unint64_t result = sub_1B590EA0C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B590EA0C()
{
  unint64_t result = qword_1E9D63020;
  if (!qword_1E9D63020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63020);
  }
  return result;
}

uint64_t sub_1B590EA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B590EA78(a1, a2, a3, (void (*)(void))sub_1B590EACC);
}

uint64_t sub_1B590EA78(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B590EACC()
{
  unint64_t result = qword_1E9D63028;
  if (!qword_1E9D63028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63028);
  }
  return result;
}

uint64_t sub_1B590EB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B590EB4C(a1, a2, a3, (void (*)(void))sub_1B590EBBC, (void (*)(void))sub_1B590EC10);
}

uint64_t sub_1B590EB4C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B590EBBC()
{
  unint64_t result = qword_1E9D63030;
  if (!qword_1E9D63030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63030);
  }
  return result;
}

unint64_t sub_1B590EC10()
{
  unint64_t result = qword_1E9D63038;
  if (!qword_1E9D63038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63038);
  }
  return result;
}

uint64_t sub_1B590EC64()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B590EC80(uint64_t a1)
{
  unint64_t result = sub_1B590EBBC();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B590ECA8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B590ECC4(uint64_t a1)
{
  unint64_t result = sub_1B590E93C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B590ECEC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B590ED08(uint64_t a1)
{
  unint64_t result = sub_1B590E780();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B590ED30()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B590ED4C(uint64_t a1)
{
  unint64_t result = sub_1B590E5C4();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B590ED74()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B590ED90(uint64_t a1)
{
  unint64_t result = sub_1B590E408();
  *(void *)(a1 + 8) = result;
  return result;
}

double sub_1B590EDB8@<D0>(uint64_t a1@<X8>)
{
  return sub_1B590EF54(MEMORY[0x1E4F3ECF0], a1);
}

double sub_1B590EDD0@<D0>(uint64_t a1@<X8>)
{
  return sub_1B590EF54(MEMORY[0x1E4F3EE78], a1);
}

double sub_1B590EDEC@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1B590F148(MEMORY[0x1E4F3EE58], MEMORY[0x1E4F3EE38], a1, a2, a3, a4, a5);
}

uint64_t sub_1B590EE18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_35Tm()
{
  uint64_t v1 = *(void *)(sub_1B5A1BAF8() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1B5A1AB78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

double sub_1B590EF3C@<D0>(uint64_t a1@<X8>)
{
  return sub_1B590EF54(MEMORY[0x1E4F3F098], a1);
}

double sub_1B590EF54@<D0>(void (*a1)(_OWORD *__return_ptr)@<X0>, uint64_t a2@<X8>)
{
  a1(v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(unsigned char *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1B590EFA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_1B590F008@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1B590F148(MEMORY[0x1E4F3CDB8], MEMORY[0x1E4F3CD80], a1, a2, a3, a4, a5);
}

void sub_1B590F034(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    sub_1B590D6F0(a1, a2, a3, a4 & 1);
  }
}

void sub_1B590F04C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    sub_1B590D634(a1, a2, a3, a4 & 1);
  }
}

uint64_t objectdestroy_45Tm()
{
  uint64_t v1 = sub_1B5A1A808();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + *(int *)(v1 + 20) + v4;
  uint64_t v8 = sub_1B5A1AB78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

double sub_1B590F148@<D0>(void (*a1)(void)@<X0>, void (*a2)(_OWORD *__return_ptr, double, double, double, double)@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  a1(0);
  a2(v15, a4, a5, a6, a7);
  double result = *(double *)v15;
  long long v14 = v15[1];
  *(_OWORD *)a3 = v15[0];
  *(_OWORD *)(a3 + 16) = v14;
  *(unsigned char *)(a3 + 32) = v16;
  return result;
}

unint64_t sub_1B590F210()
{
  unint64_t result = qword_1E9D63048;
  if (!qword_1E9D63048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63048);
  }
  return result;
}

unint64_t sub_1B590F264()
{
  unint64_t result = qword_1E9D63058;
  if (!qword_1E9D63058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63058);
  }
  return result;
}

uint64_t sub_1B590F2B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v25 = a2;
  uint64_t v24 = sub_1B5A1A2A8();
  uint64_t v27 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63060);
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B590EE18((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v8 = sub_1B5A1A918();
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B590F594();
  swift_retain();
  sub_1B5A1C838();
  if (v2)
  {
    swift_release_n();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v23 = v8;
    uint64_t v12 = v26;
    uint64_t v11 = v27;
    uint64_t v13 = v28;
    uint64_t v14 = sub_1B5A1C598();
    uint64_t v17 = v16;
    if (v16)
    {
      uint64_t v18 = v14;
    }
    else
    {
      uint64_t v22 = v5;
      sub_1B5A1A298();
      uint64_t v18 = sub_1B5A1A288();
      uint64_t v17 = v19;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v22, v24);
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
    uint64_t v20 = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v21 = v23;
    uint64_t result = swift_release();
    *uint64_t v20 = v18;
    v20[1] = v17;
    v20[2] = MEMORY[0x1E4FBC860];
    v20[3] = v21;
    v20[4] = v10;
  }
  return result;
}

unint64_t sub_1B590F594()
{
  unint64_t result = qword_1E9D63068;
  if (!qword_1E9D63068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63068);
  }
  return result;
}

unint64_t sub_1B590F5E8()
{
  unint64_t result = qword_1E9D63078;
  if (!qword_1E9D63078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63078);
  }
  return result;
}

unint64_t sub_1B590F63C()
{
  unint64_t result = qword_1E9D63080;
  if (!qword_1E9D63080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63080);
  }
  return result;
}

unint64_t sub_1B590F690()
{
  unint64_t result = qword_1E9D63088;
  if (!qword_1E9D63088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63088);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CapsuleView.CapsuleCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B590F7B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CapsuleView.CapsuleCodingKeys()
{
  return &type metadata for CapsuleView.CapsuleCodingKeys;
}

uint64_t getEnumTagSinglePayload for BasicShapeCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for BasicShapeCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B590F8D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B590F900()
{
  return 0;
}

ValueMetadata *type metadata accessor for BasicShapeCodingKeys()
{
  return &type metadata for BasicShapeCodingKeys;
}

uint64_t getEnumTagSinglePayload for ViewContent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6LiftUI15ShapeContentBoxV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B590FA74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoundedRectangleView.RoundedRectangleCodingKeys()
{
  return &type metadata for RoundedRectangleView.RoundedRectangleCodingKeys;
}

unint64_t sub_1B590FAB0()
{
  unint64_t result = qword_1E9D63098;
  if (!qword_1E9D63098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63098);
  }
  return result;
}

unint64_t sub_1B590FB08()
{
  unint64_t result = qword_1E9D630A0;
  if (!qword_1E9D630A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630A0);
  }
  return result;
}

unint64_t sub_1B590FB64()
{
  unint64_t result = qword_1E9D630A8;
  if (!qword_1E9D630A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630A8);
  }
  return result;
}

uint64_t sub_1B590FBB8()
{
  return *(void *)(swift_getAssociatedConformanceWitness() + 16);
}

unint64_t sub_1B590FC28()
{
  unint64_t result = qword_1E9D630B0;
  if (!qword_1E9D630B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630B0);
  }
  return result;
}

unint64_t sub_1B590FC80()
{
  unint64_t result = qword_1E9D630B8;
  if (!qword_1E9D630B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630B8);
  }
  return result;
}

unint64_t sub_1B590FCD8()
{
  unint64_t result = qword_1E9D630C0;
  if (!qword_1E9D630C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630C0);
  }
  return result;
}

unint64_t sub_1B590FD30()
{
  unint64_t result = qword_1E9D630C8;
  if (!qword_1E9D630C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630C8);
  }
  return result;
}

unint64_t sub_1B590FD88()
{
  unint64_t result = qword_1E9D630D0;
  if (!qword_1E9D630D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630D0);
  }
  return result;
}

unint64_t sub_1B590FDE0()
{
  unint64_t result = qword_1E9D630D8;
  if (!qword_1E9D630D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630D8);
  }
  return result;
}

unint64_t sub_1B590FE38()
{
  unint64_t result = qword_1E9D630E0;
  if (!qword_1E9D630E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630E0);
  }
  return result;
}

unint64_t sub_1B590FE90()
{
  unint64_t result = qword_1E9D630E8;
  if (!qword_1E9D630E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630E8);
  }
  return result;
}

unint64_t sub_1B590FEE8()
{
  unint64_t result = qword_1E9D630F0;
  if (!qword_1E9D630F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630F0);
  }
  return result;
}

uint64_t sub_1B590FF3C()
{
  return 25705;
}

uint64_t sub_1B590FF48()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for ButtonStyleModifier()
{
  return &type metadata for ButtonStyleModifier;
}

uint64_t sub_1B590FFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5A1AE48();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_1B5A1AE58();
}

uint64_t sub_1B59100C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1B5A1AE48();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_1B5A1AE58();
}

uint64_t sub_1B59101B8@<X0>(void (*a1)(char *, uint64_t)@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v204 = a1;
  v205 = a2;
  uint64_t v203 = a5;
  uint64_t v7 = sub_1B5A1AA88();
  uint64_t v180 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v179 = (char *)&v169 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B5912180(&qword_1E9D63100, MEMORY[0x1E4F3D418]);
  uint64_t v258 = a3;
  uint64_t v259 = v7;
  uint64_t v218 = v9;
  uint64_t v219 = v7;
  uint64_t v260 = a4;
  uint64_t v261 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  v197 = *(void (**)(char *, uint64_t))(OpaqueTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](OpaqueTypeMetadata2);
  uint64_t v187 = (uint64_t)&v169 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  v186 = (char *)&v169 - v12;
  uint64_t v13 = sub_1B5A1AF88();
  uint64_t v177 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  v176 = (char *)&v169 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1B5912180(&qword_1E9D63108, MEMORY[0x1E4F3D8B0]);
  uint64_t v258 = a3;
  uint64_t v259 = v13;
  uint64_t v216 = v15;
  uint64_t v217 = v13;
  uint64_t v260 = a4;
  uint64_t v261 = v15;
  uint64_t v16 = swift_getOpaqueTypeMetadata2();
  uint64_t v195 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  v178 = (char *)&v169 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v184 = (char *)&v169 - v19;
  uint64_t v20 = sub_1B5A1A7F8();
  uint64_t v21 = sub_1B5912180(&qword_1E9D63110, MEMORY[0x1E4F3CD40]);
  uint64_t v258 = a3;
  uint64_t v259 = v20;
  uint64_t v260 = a4;
  uint64_t v261 = v21;
  uint64_t v214 = v21;
  uint64_t v22 = swift_getOpaqueTypeMetadata2();
  v198 = (void (*)(char *, uint64_t))v16;
  uint64_t v23 = sub_1B5A1AE68();
  uint64_t v188 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  v185 = (char *)&v169 - v24;
  uint64_t v213 = swift_checkMetadataState();
  uint64_t v174 = *(void *)(v213 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v213);
  v173 = (char *)&v169 - v26;
  uint64_t v196 = v22;
  uint64_t v193 = *(void *)(v22 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  v175 = (char *)&v169 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  v183 = (char *)&v169 - v29;
  uint64_t v30 = sub_1B5A1B0C8();
  uint64_t v172 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  v171 = (char *)&v169 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1B5912180(&qword_1E9D63118, MEMORY[0x1E4F3DEB8]);
  uint64_t v258 = a3;
  uint64_t v259 = v30;
  uint64_t v211 = v32;
  uint64_t v212 = v30;
  uint64_t v260 = a4;
  uint64_t v261 = v32;
  uint64_t v33 = swift_getOpaqueTypeMetadata2();
  uint64_t v190 = *(void *)(v33 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)&v169 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  v181 = (char *)&v169 - v37;
  uint64_t v38 = sub_1B5A1ACC8();
  uint64_t v39 = sub_1B5912180(&qword_1E9D63120, MEMORY[0x1E4F3D530]);
  uint64_t v258 = a3;
  uint64_t v259 = v38;
  uint64_t v40 = a4;
  uint64_t v260 = a4;
  uint64_t v261 = v39;
  uint64_t v210 = v39;
  uint64_t v41 = swift_getOpaqueTypeMetadata2();
  uint64_t v194 = v33;
  uint64_t v42 = sub_1B5A1AE68();
  uint64_t v182 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v192 = (uint64_t)&v169 - v43;
  uint64_t v207 = v23;
  uint64_t v208 = v44;
  uint64_t v45 = sub_1B5A1AE68();
  uint64_t v200 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  v199 = (char *)&v169 - v46;
  uint64_t v209 = swift_checkMetadataState();
  uint64_t v47 = *(void *)(v209 - 8);
  uint64_t v48 = MEMORY[0x1F4188790](v209);
  uint64_t v50 = (char *)&v169 - v49;
  uint64_t v191 = v41;
  uint64_t v189 = *(void *)(v41 - 8);
  uint64_t v51 = MEMORY[0x1F4188790](v48);
  uint64_t v53 = (char *)&v169 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v51);
  unsigned __int8 v55 = (char *)&v169 - v54;
  uint64_t v206 = v45;
  uint64_t v56 = sub_1B5A1AE68();
  uint64_t v201 = *(void *)(v56 - 8);
  uint64_t v202 = v56;
  MEMORY[0x1F4188790](v56);
  uint64_t v57 = v205;
  v205 = (char *)&v169 - v58;
  switch(v57)
  {
    case 1:
      uint64_t v79 = v171;
      sub_1B5A1B0B8();
      uint64_t v81 = v211;
      uint64_t v80 = v212;
      uint64_t v170 = v40;
      sub_1B5A1B3F8();
      (*(void (**)(char *, uint64_t))(v172 + 8))(v79, v80);
      uint64_t v258 = a3;
      uint64_t v259 = v80;
      uint64_t v260 = v40;
      uint64_t v261 = v81;
      v204 = (void (*)(char *, uint64_t))MEMORY[0x1E4F3E3C8];
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      char v83 = v181;
      uint64_t v84 = v194;
      sub_1B591656C(v36, v194, OpaqueTypeConformance2);
      uint64_t v85 = v190 + 8;
      uint64_t v86 = *(void (**)(char *, uint64_t))(v190 + 8);
      v86(v36, v84);
      uint64_t v87 = v86;
      v198 = v86;
      uint64_t v190 = v85;
      sub_1B591656C(v83, v84, OpaqueTypeConformance2);
      uint64_t v258 = a3;
      uint64_t v259 = v209;
      uint64_t v88 = v170;
      uint64_t v260 = v170;
      uint64_t v261 = v210;
      uint64_t v89 = swift_getOpaqueTypeConformance2();
      uint64_t v90 = v192;
      sub_1B59100C0((uint64_t)v36, v191, v84);
      v87(v36, v84);
      uint64_t v230 = v89;
      uint64_t v231 = OpaqueTypeConformance2;
      uint64_t v91 = v208;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v258 = a3;
      uint64_t v259 = v213;
      uint64_t v260 = v88;
      uint64_t v261 = v214;
      uint64_t v93 = swift_getOpaqueTypeConformance2();
      uint64_t v258 = a3;
      uint64_t v259 = v217;
      uint64_t v260 = v88;
      uint64_t v261 = v216;
      uint64_t v94 = swift_getOpaqueTypeConformance2();
      uint64_t v228 = v93;
      uint64_t v229 = v94;
      uint64_t v95 = swift_getWitnessTable();
      uint64_t v96 = (uint64_t)v199;
      sub_1B590FFC8(v90, v91);
      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v90, v91);
      uint64_t v226 = WitnessTable;
      uint64_t v227 = v95;
      uint64_t v76 = v88;
      uint64_t v97 = v206;
      swift_getWitnessTable();
      uint64_t v258 = a3;
      uint64_t v259 = v219;
      uint64_t v260 = v88;
      uint64_t v261 = v218;
      swift_getOpaqueTypeConformance2();
      uint64_t v77 = v205;
      sub_1B590FFC8(v96, v97);
      uint64_t v98 = v96;
      uint64_t v78 = v209;
      (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v98, v97);
      v198(v181, v194);
      break;
    case 2:
      uint64_t v99 = v173;
      sub_1B5A1A7E8();
      uint64_t v100 = (uint64_t)v175;
      uint64_t v101 = v213;
      uint64_t v102 = v214;
      uint64_t v103 = v40;
      sub_1B5A1B3F8();
      (*(void (**)(char *, uint64_t))(v174 + 8))(v99, v101);
      uint64_t v258 = a3;
      uint64_t v259 = v101;
      uint64_t v260 = v40;
      uint64_t v261 = v102;
      v204 = (void (*)(char *, uint64_t))MEMORY[0x1E4F3E3C8];
      uint64_t v104 = swift_getOpaqueTypeConformance2();
      uint64_t v105 = v183;
      uint64_t v106 = v196;
      sub_1B591656C(v100, v196, v104);
      uint64_t v107 = v193 + 8;
      uint64_t v108 = *(void (**)(uint64_t, uint64_t))(v193 + 8);
      v108(v100, v106);
      v197 = (void (*)(char *, uint64_t))v108;
      uint64_t v193 = v107;
      sub_1B591656C(v105, v106, v104);
      uint64_t v258 = a3;
      uint64_t v259 = v217;
      uint64_t v260 = v103;
      uint64_t v261 = v216;
      uint64_t v195 = swift_getOpaqueTypeConformance2();
      uint64_t v109 = (uint64_t)v185;
      sub_1B590FFC8(v100, v106);
      v108(v100, v106);
      uint64_t v258 = a3;
      uint64_t v259 = v209;
      uint64_t v260 = v103;
      uint64_t v261 = v210;
      uint64_t v110 = swift_getOpaqueTypeConformance2();
      uint64_t v258 = a3;
      uint64_t v259 = v212;
      uint64_t v260 = v103;
      uint64_t v261 = v211;
      uint64_t v111 = swift_getOpaqueTypeConformance2();
      uint64_t v236 = v110;
      uint64_t v237 = v111;
      uint64_t v112 = v208;
      uint64_t v113 = swift_getWitnessTable();
      uint64_t v234 = v104;
      uint64_t v235 = v195;
      uint64_t v114 = v207;
      uint64_t v115 = swift_getWitnessTable();
      uint64_t v116 = (uint64_t)v199;
      sub_1B59100C0(v109, v112, v114);
      (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v109, v114);
      uint64_t v232 = v113;
      uint64_t v233 = v115;
      uint64_t v76 = v103;
      uint64_t v78 = v209;
      uint64_t v117 = v206;
      swift_getWitnessTable();
      uint64_t v258 = a3;
      uint64_t v259 = v219;
      uint64_t v260 = v76;
      uint64_t v261 = v218;
      swift_getOpaqueTypeConformance2();
      uint64_t v77 = v205;
      sub_1B590FFC8(v116, v117);
      (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v116, v117);
      unint64_t v118 = v183;
      uint64_t v119 = v196;
      goto LABEL_6;
    case 3:
      uint64_t v120 = v176;
      sub_1B5A1AF78();
      uint64_t v121 = (uint64_t)v178;
      uint64_t v122 = v216;
      uint64_t v123 = v217;
      uint64_t v124 = v40;
      sub_1B5A1B3F8();
      (*(void (**)(char *, uint64_t))(v177 + 8))(v120, v123);
      uint64_t v258 = a3;
      uint64_t v259 = v123;
      uint64_t v260 = v40;
      uint64_t v261 = v122;
      v204 = (void (*)(char *, uint64_t))MEMORY[0x1E4F3E3C8];
      uint64_t v125 = swift_getOpaqueTypeConformance2();
      v126 = v184;
      uint64_t v127 = (uint64_t)v198;
      sub_1B591656C(v121, v198, v125);
      uint64_t v128 = v195 + 8;
      uint64_t v129 = *(void (**)(uint64_t, uint64_t))(v195 + 8);
      v129(v121, v127);
      v197 = (void (*)(char *, uint64_t))v129;
      uint64_t v195 = v128;
      sub_1B591656C(v126, v127, v125);
      uint64_t v258 = a3;
      uint64_t v259 = v213;
      uint64_t v260 = v124;
      uint64_t v261 = v214;
      uint64_t v194 = swift_getOpaqueTypeConformance2();
      uint64_t v130 = (uint64_t)v185;
      sub_1B59100C0(v121, v196, v127);
      v129(v121, v127);
      uint64_t v258 = a3;
      uint64_t v259 = v209;
      uint64_t v260 = v124;
      uint64_t v261 = v210;
      uint64_t v131 = swift_getOpaqueTypeConformance2();
      uint64_t v258 = a3;
      uint64_t v259 = v212;
      uint64_t v260 = v124;
      uint64_t v261 = v211;
      uint64_t v132 = swift_getOpaqueTypeConformance2();
      uint64_t v242 = v131;
      uint64_t v243 = v132;
      uint64_t v133 = v208;
      uint64_t v134 = swift_getWitnessTable();
      uint64_t v240 = v194;
      uint64_t v241 = v125;
      uint64_t v135 = v207;
      uint64_t v136 = swift_getWitnessTable();
      uint64_t v137 = (uint64_t)v199;
      sub_1B59100C0(v130, v133, v135);
      (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v130, v135);
      uint64_t v238 = v134;
      uint64_t v239 = v136;
      uint64_t v76 = v124;
      uint64_t v78 = v209;
      uint64_t v138 = v206;
      swift_getWitnessTable();
      uint64_t v258 = a3;
      uint64_t v259 = v219;
      uint64_t v260 = v76;
      uint64_t v261 = v218;
      swift_getOpaqueTypeConformance2();
      uint64_t v77 = v205;
      sub_1B590FFC8(v137, v138);
      (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v137, v138);
      unint64_t v118 = v184;
      uint64_t v119 = (uint64_t)v198;
LABEL_6:
      v197(v118, v119);
      break;
    case 4:
      long long v139 = v179;
      sub_1B5A1AA78();
      uint64_t v140 = v187;
      uint64_t v142 = v218;
      uint64_t v141 = v219;
      uint64_t v76 = v40;
      sub_1B5A1B3F8();
      (*(void (**)(char *, uint64_t))(v180 + 8))(v139, v141);
      uint64_t v258 = a3;
      uint64_t v259 = v141;
      uint64_t v260 = v40;
      uint64_t v261 = v142;
      uint64_t v143 = swift_getOpaqueTypeConformance2();
      v144 = v186;
      uint64_t v145 = OpaqueTypeMetadata2;
      uint64_t v200 = v143;
      sub_1B591656C(v140, OpaqueTypeMetadata2, v143);
      uint64_t v146 = (void (*)(char *, uint64_t))*((void *)v197 + 1);
      v197 = (void (*)(char *, uint64_t))((char *)v197 + 8);
      v204 = v146;
      v146((char *)v140, v145);
      sub_1B591656C(v144, v145, v143);
      uint64_t v147 = v209;
      uint64_t v258 = a3;
      uint64_t v259 = v209;
      uint64_t v260 = v76;
      uint64_t v261 = v210;
      uint64_t v148 = swift_getOpaqueTypeConformance2();
      uint64_t v258 = a3;
      uint64_t v259 = v212;
      uint64_t v260 = v76;
      uint64_t v261 = v211;
      uint64_t v149 = swift_getOpaqueTypeConformance2();
      uint64_t v256 = v148;
      uint64_t v257 = v149;
      v199 = (char *)swift_getWitnessTable();
      uint64_t v258 = a3;
      uint64_t v259 = v213;
      uint64_t v260 = v76;
      uint64_t v261 = v214;
      uint64_t v150 = swift_getOpaqueTypeConformance2();
      uint64_t v258 = a3;
      uint64_t v259 = v217;
      uint64_t v260 = v76;
      uint64_t v261 = v216;
      uint64_t v151 = swift_getOpaqueTypeConformance2();
      uint64_t v254 = v150;
      uint64_t v255 = v151;
      uint64_t v78 = v147;
      uint64_t v152 = swift_getWitnessTable();
      v252 = v199;
      uint64_t v253 = v152;
      uint64_t v153 = v206;
      swift_getWitnessTable();
      uint64_t v77 = v205;
      uint64_t v154 = v187;
      sub_1B59100C0(v187, v153, v145);
      uint64_t v155 = v154;
      v156 = v204;
      v204((char *)v155, v145);
      v156(v186, v145);
      break;
    default:
      sub_1B5A1ACB8();
      uint64_t v60 = v209;
      uint64_t v59 = v210;
      uint64_t v170 = v40;
      sub_1B5A1B3F8();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v60);
      uint64_t v258 = a3;
      uint64_t v259 = v60;
      uint64_t v260 = v40;
      uint64_t v261 = v59;
      uint64_t v61 = (void (*)(char *, uint64_t))MEMORY[0x1E4F3E3C8];
      uint64_t v62 = swift_getOpaqueTypeConformance2();
      uint64_t v63 = v191;
      sub_1B591656C(v53, v191, v62);
      uint64_t v64 = v189 + 8;
      uint64_t v65 = *(void (**)(char *, uint64_t))(v189 + 8);
      v65(v53, v63);
      v204 = v65;
      uint64_t v189 = v64;
      sub_1B591656C(v55, v63, v62);
      uint64_t v258 = a3;
      uint64_t v259 = v212;
      uint64_t v260 = v170;
      uint64_t v261 = v211;
      uint64_t v66 = swift_getOpaqueTypeConformance2();
      sub_1B590FFC8((uint64_t)v53, v63);
      v65(v53, v63);
      uint64_t v224 = v62;
      uint64_t v225 = v66;
      uint64_t v67 = v208;
      uint64_t v68 = swift_getWitnessTable();
      uint64_t v258 = a3;
      uint64_t v259 = v213;
      uint64_t v69 = v170;
      uint64_t v260 = v170;
      uint64_t v261 = v214;
      v198 = v61;
      uint64_t v70 = swift_getOpaqueTypeConformance2();
      uint64_t v258 = a3;
      uint64_t v259 = v217;
      uint64_t v260 = v69;
      uint64_t v261 = v216;
      uint64_t v71 = swift_getOpaqueTypeConformance2();
      uint64_t v222 = v70;
      uint64_t v223 = v71;
      uint64_t v72 = swift_getWitnessTable();
      uint64_t v73 = (uint64_t)v199;
      uint64_t v74 = v192;
      sub_1B590FFC8(v192, v67);
      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v74, v67);
      uint64_t v220 = v68;
      uint64_t v221 = v72;
      uint64_t v75 = v206;
      swift_getWitnessTable();
      uint64_t v258 = a3;
      uint64_t v259 = v219;
      uint64_t v76 = v170;
      uint64_t v260 = v170;
      uint64_t v261 = v218;
      swift_getOpaqueTypeConformance2();
      uint64_t v77 = v205;
      sub_1B590FFC8(v73, v75);
      (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v73, v75);
      uint64_t v78 = v209;
      v204(v55, v191);
      break;
  }
  uint64_t v258 = a3;
  uint64_t v259 = v78;
  uint64_t v260 = v76;
  uint64_t v261 = v210;
  uint64_t v157 = swift_getOpaqueTypeConformance2();
  uint64_t v258 = a3;
  uint64_t v259 = v212;
  uint64_t v260 = v76;
  uint64_t v261 = v211;
  uint64_t v158 = swift_getOpaqueTypeConformance2();
  uint64_t v250 = v157;
  uint64_t v251 = v158;
  uint64_t v159 = swift_getWitnessTable();
  uint64_t v258 = a3;
  uint64_t v259 = v213;
  uint64_t v260 = v76;
  uint64_t v261 = v214;
  uint64_t v160 = v76;
  uint64_t v161 = swift_getOpaqueTypeConformance2();
  uint64_t v258 = a3;
  uint64_t v259 = v217;
  uint64_t v260 = v160;
  uint64_t v261 = v216;
  uint64_t v162 = swift_getOpaqueTypeConformance2();
  uint64_t v248 = v161;
  uint64_t v249 = v162;
  uint64_t v163 = swift_getWitnessTable();
  uint64_t v246 = v159;
  uint64_t v247 = v163;
  uint64_t v164 = swift_getWitnessTable();
  uint64_t v258 = a3;
  uint64_t v259 = v219;
  uint64_t v260 = v160;
  uint64_t v261 = v218;
  uint64_t v165 = swift_getOpaqueTypeConformance2();
  uint64_t v244 = v164;
  uint64_t v245 = v165;
  uint64_t v166 = v202;
  uint64_t v167 = swift_getWitnessTable();
  sub_1B591656C(v77, v166, v167);
  return (*(uint64_t (**)(char *, uint64_t))(v201 + 8))(v77, v166);
}

unint64_t sub_1B5911990(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x6E69616C70;
      break;
    case 3:
      unint64_t result = 0x656C726564726F62;
      break;
    case 4:
      unint64_t result = 0x6974616D6F747561;
      break;
    default:
      unint64_t result = 0x6465726564726F62;
      break;
  }
  return result;
}

uint64_t sub_1B5911A48(unsigned __int8 *a1, char *a2)
{
  return sub_1B59EECCC(*a1, *a2);
}

uint64_t sub_1B5911A54()
{
  return sub_1B59F042C();
}

uint64_t sub_1B5911A5C()
{
  return sub_1B59F414C();
}

uint64_t sub_1B5911A64()
{
  return sub_1B59F5C74();
}

uint64_t sub_1B5911A6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59127A4();
  *a1 = result;
  return result;
}

unint64_t sub_1B5911A9C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B5911990(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5911AC8()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B5911B28()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B5911B84@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5911BD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59127F0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B5911C04@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5911C5C(uint64_t a1)
{
  unint64_t v2 = sub_1B5912334();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5911C98(uint64_t a1)
{
  unint64_t v2 = sub_1B5912334();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5911CD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  unsigned int v8 = *v2;
  uint64_t v7 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(a1, v4);
  sub_1B5A1ACC8();
  sub_1B5912180(&qword_1E9D63120, MEMORY[0x1E4F3D530]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1B0C8();
  sub_1B5912180(&qword_1E9D63118, MEMORY[0x1E4F3DEB8]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  sub_1B5A1A7F8();
  sub_1B5912180(&qword_1E9D63110, MEMORY[0x1E4F3CD40]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AF88();
  sub_1B5912180(&qword_1E9D63108, MEMORY[0x1E4F3D8B0]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  sub_1B5A1AE68();
  sub_1B5A1AA88();
  sub_1B5912180(&qword_1E9D63100, MEMORY[0x1E4F3D418]);
  swift_getOpaqueTypeMetadata2();
  a2[3] = sub_1B5A1AE68();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  a2[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B59101B8(v7, (char *)v8, v4, v3, (uint64_t)boxed_opaque_existential_1);
}

void *sub_1B59120D8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B59121C8(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

unint64_t sub_1B5912104(uint64_t a1)
{
  unint64_t result = sub_1B591212C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B591212C()
{
  unint64_t result = qword_1E9D630F8;
  if (!qword_1E9D630F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D630F8);
  }
  return result;
}

uint64_t sub_1B5912180(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1B59121C8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63128);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5912334();
  sub_1B5A1C838();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1B5912388();
    sub_1B5A1C5D8();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[15];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1B5912334()
{
  unint64_t result = qword_1E9D63130;
  if (!qword_1E9D63130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63130);
  }
  return result;
}

unint64_t sub_1B5912388()
{
  unint64_t result = qword_1E9D63138;
  if (!qword_1E9D63138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63138);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ButtonStyleModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5912478);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonStyleModifier.CodingKeys()
{
  return &type metadata for ButtonStyleModifier.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MathOperation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6LiftUI15ButtonStyleTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B591260CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonStyleType()
{
  return &type metadata for ButtonStyleType;
}

unint64_t sub_1B5912648()
{
  unint64_t result = qword_1E9D63140;
  if (!qword_1E9D63140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63140);
  }
  return result;
}

unint64_t sub_1B59126A0()
{
  unint64_t result = qword_1E9D63148;
  if (!qword_1E9D63148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63148);
  }
  return result;
}

unint64_t sub_1B59126F8()
{
  unint64_t result = qword_1E9D63150;
  if (!qword_1E9D63150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63150);
  }
  return result;
}

unint64_t sub_1B5912750()
{
  unint64_t result = qword_1E9D63158;
  if (!qword_1E9D63158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63158);
  }
  return result;
}

uint64_t sub_1B59127A4()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B59127F0()
{
  return 0x656C797473;
}

unint64_t sub_1B5912804()
{
  unint64_t result = qword_1E9D63160;
  if (!qword_1E9D63160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63160);
  }
  return result;
}

uint64_t initializeWithCopy for ToolbarModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for ToolbarModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ToolbarModifier(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolbarModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolbarModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolbarModifier()
{
  return &type metadata for ToolbarModifier;
}

uint64_t destroy for NavigationBarTitleDisplayModeModifier(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 24);
  if (v1 <= 0xFD) {
    return sub_1B5904A88(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), v1);
  }
  return result;
}

uint64_t initializeWithCopy for NavigationBarTitleDisplayModeModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 24);
  if (v3 <= 0xFD)
  {
    uint64_t v4 = *(void *)a2;
    uint64_t v5 = *(void *)(a2 + 8);
    uint64_t v6 = *(void *)(a2 + 16);
    sub_1B5904B60(*(void *)a2, v5, v6, v3);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = v3;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  return a1;
}

uint64_t assignWithCopy for NavigationBarTitleDisplayModeModifier(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) <= 0xFDu)
  {
    if (v4 <= 0xFD)
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      sub_1B5904B60(*(void *)a2, v11, v12, v4);
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = *(void *)(a1 + 16);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      unsigned __int8 v16 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v4;
      sub_1B5904A88(v13, v14, v15, v16);
    }
    else
    {
      sub_1B590DA50(a1);
      long long v6 = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 9) = v6;
    }
  }
  else if (v4 <= 0xFD)
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    uint64_t v9 = *((void *)a2 + 2);
    sub_1B5904B60(*(void *)a2, v8, v9, v4);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    long long v5 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v5;
  }
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NavigationBarTitleDisplayModeModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 <= 0xFD)
  {
    unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
    if (v5 <= 0xFD)
    {
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v7 = *(void *)a1;
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = v6;
      *(unsigned char *)(a1 + 24) = v5;
      sub_1B5904A88(v7, v8, v9, v4);
      return a1;
    }
    sub_1B590DA50(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationBarTitleDisplayModeModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (*(unsigned __int8 *)(a1 + 24) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1F));
  unsigned int v4 = v3 ^ 0x7F;
  int v5 = 126 - v3;
  if (v4 >= 0x7D) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NavigationBarTitleDisplayModeModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = ((a2 ^ 0x7F) >> 1) & 0xFE | ((a2 ^ 0x7F) << 6);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationBarTitleDisplayModeModifier()
{
  return &type metadata for NavigationBarTitleDisplayModeModifier;
}

uint64_t sub_1B5912CCC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v7 = sub_1B5A1A9D8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v11 = *(unsigned __int8 *)(v3 + 24);
  if (v11 <= 0xFD)
  {
    uint64_t v22 = v8;
    uint64_t v23 = v7;
    uint64_t v12 = *(void *)(v3 + 8);
    uint64_t v14 = *(void *)(v3 + 16);
    uint64_t v24 = *(void *)v3;
    uint64_t v13 = v24;
    uint64_t v25 = v12;
    uint64_t v26 = v14;
    char v27 = v11;
    sub_1B5904B60(v24, v12, v14, v11);
    StringResolvable.resolved(with:)(a2);
    if (v4) {

    }
    sub_1B5904B4C(v13, v12, v14, v11);
    uint64_t v8 = v22;
    uint64_t v7 = v23;
  }
  uint64_t v15 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  if (v15 == 2) {
    uint64_t v18 = 2;
  }
  else {
    uint64_t v18 = v15 == 1;
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, **((unsigned int **)&unk_1E6120E68 + v18), v7);
  uint64_t v24 = v16;
  uint64_t v25 = v17;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v20 = v28;
  v28[3] = OpaqueTypeMetadata2;
  uint64_t v24 = v16;
  uint64_t v25 = v17;
  v20[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v20);
  sub_1B5A1B618();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1B5912F44@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5912F98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5914834();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B5912FC4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B591301C(uint64_t a1)
{
  unint64_t v2 = sub_1B591420C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5913058(uint64_t a1)
{
  unint64_t v2 = sub_1B591420C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5913094@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D631B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B591420C();
  sub_1B5A1C838();
  if (!v2)
  {
    sub_1B5904A34();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5913210@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5912CCC(a1, a2, a3);
}

uint64_t sub_1B5913228@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5913094(a1, a2);
}

uint64_t sub_1B5913240(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t result = MEMORY[0x1F40FA110]();
      break;
    case 2:
      uint64_t result = MEMORY[0x1F40FA150]();
      break;
    case 3:
      uint64_t result = MEMORY[0x1F40FA140]();
      break;
    case 4:
      uint64_t result = MEMORY[0x1F40FA130]();
      break;
    case 5:
      uint64_t result = MEMORY[0x1F40FA198]();
      break;
    case 6:
      uint64_t result = MEMORY[0x1F40FA108]();
      break;
    case 7:
      uint64_t result = MEMORY[0x1F40FA158]();
      break;
    case 8:
      uint64_t result = MEMORY[0x1F40FA168]();
      break;
    case 9:
      uint64_t result = MEMORY[0x1F40FA190]();
      break;
    case 10:
      uint64_t result = MEMORY[0x1F40FA178]();
      break;
    case 11:
      uint64_t result = MEMORY[0x1F40FA128]();
      break;
    case 12:
      uint64_t result = MEMORY[0x1F40FA180]();
      break;
    default:
      uint64_t result = MEMORY[0x1F40FA188]();
      break;
  }
  return result;
}

unint64_t sub_1B59132CC(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x417972616D697270;
      break;
    case 2:
    case 3:
      return result;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x617069636E697270;
      break;
    case 6:
      unint64_t result = 0x697461676976616ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0x61426D6F74746F62;
      break;
    case 10:
      unint64_t result = 0x737574617473;
      break;
    case 11:
      unint64_t result = 0x7261646E6F636573;
      break;
    case 12:
      unint64_t result = 0x6472616F6279656BLL;
      break;
    default:
      unint64_t result = 0x6974616D6F747561;
      break;
  }
  return result;
}

uint64_t sub_1B5913470(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1B59132CC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B59132CC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B59134FC()
{
  char v1 = *v0;
  sub_1B5A1C7A8();
  sub_1B59132CC(v1);
  sub_1B5A1BF88();
  swift_bridgeObjectRelease();
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5913560()
{
  sub_1B59132CC(*v0);
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59135B4()
{
  char v1 = *v0;
  sub_1B5A1C7A8();
  sub_1B59132CC(v1);
  sub_1B5A1BF88();
  swift_bridgeObjectRelease();
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5913614@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5914154();
  *a1 = result;
  return result;
}

unint64_t sub_1B5913644@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B59132CC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5913670()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B59136D0()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B5913720(char a1)
{
  if (a1) {
    return 0x6E656D6563616C70;
  }
  else {
    return 0x746E65746E6F63;
  }
}

uint64_t sub_1B591375C(char *a1, char *a2)
{
  return sub_1B59EE93C(*a1, *a2);
}

uint64_t sub_1B5913768()
{
  return sub_1B59F052C();
}

uint64_t sub_1B5913770()
{
  return sub_1B59F3F04();
}

uint64_t sub_1B5913778()
{
  return sub_1B59F5ED8();
}

uint64_t sub_1B5913780@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59137E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5913720(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B591380C()
{
  return sub_1B5913720(*v0);
}

uint64_t sub_1B5913814@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5913878(uint64_t a1)
{
  unint64_t v2 = sub_1B5913FE0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59138B4(uint64_t a1)
{
  unint64_t v2 = sub_1B5913FE0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59138F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63198);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5913FE0();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v16[63] = 0;
  char v14 = &type metadata for ViewContent;
  unint64_t v15 = sub_1B5914034();
  *(void *)&long long v13 = swift_allocObject();
  sub_1B5914100();
  sub_1B5A1C5D8();
  sub_1B5908BE8(&v13, (uint64_t)v16);
  LOBYTE(v13) = 1;
  sub_1B5A1C5C8();
  char v10 = sub_1B5914154();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v10 == 13) {
    char v11 = 0;
  }
  else {
    char v11 = v10;
  }
  v16[40] = v11;
  sub_1B59141A0((uint64_t)v16, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B590CCCC((uint64_t)v16);
}

uint64_t sub_1B5913B38(uint64_t a1)
{
  uint64_t v2 = sub_1B5A1AF68();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63178);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B5913240(*(unsigned char *)(a1 + 40));
  uint64_t v10 = a1;
  sub_1B5A1A528();
  unint64_t v7 = sub_1B5913F7C();
  MEMORY[0x1BA9A27E0](v6, v3, v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1B5913CA8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63188);
  MEMORY[0x1F4188790](v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63190);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63178);
  sub_1B5913F7C();
  swift_getOpaqueTypeConformance2();
  sub_1B5A1B728();
  swift_getOpaqueTypeConformance2();
  return sub_1B5A1BA88();
}

uint64_t sub_1B5913E10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59138F0(a1, a2);
}

unint64_t sub_1B5913E28(uint64_t a1)
{
  unint64_t result = sub_1B5913E50();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5913E50()
{
  unint64_t result = qword_1E9D63168;
  if (!qword_1E9D63168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63168);
  }
  return result;
}

unint64_t sub_1B5913EA4(uint64_t a1)
{
  unint64_t result = sub_1B5913ECC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5913ECC()
{
  unint64_t result = qword_1E9D63170;
  if (!qword_1E9D63170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63170);
  }
  return result;
}

uint64_t sub_1B5913F20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  *a1 = result;
  return result;
}

unint64_t sub_1B5913F7C()
{
  unint64_t result = qword_1E9D63180;
  if (!qword_1E9D63180)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63178);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63180);
  }
  return result;
}

uint64_t sub_1B5913FD8()
{
  return sub_1B5913B38(*(void *)(v0 + 16));
}

unint64_t sub_1B5913FE0()
{
  unint64_t result = qword_1E9D631A0;
  if (!qword_1E9D631A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631A0);
  }
  return result;
}

unint64_t sub_1B5914034()
{
  unint64_t result = qword_1E9D631A8;
  if (!qword_1E9D631A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631A8);
  }
  return result;
}

uint64_t sub_1B5914088()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

unint64_t sub_1B5914100()
{
  unint64_t result = qword_1E9D631B0;
  if (!qword_1E9D631B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631B0);
  }
  return result;
}

uint64_t sub_1B5914154()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B59141A0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(unsigned char *)(a2 + 40) = *(unsigned char *)(a1 + 40);
  return a2;
}

unint64_t sub_1B591420C()
{
  unint64_t result = qword_1E9D631C0;
  if (!qword_1E9D631C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NavigationBarTitleDisplayModeModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59142FCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationBarTitleDisplayModeModifier.CodingKeys()
{
  return &type metadata for NavigationBarTitleDisplayModeModifier.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ToolbarModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5914400);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolbarModifier.CodingKeys()
{
  return &type metadata for ToolbarModifier.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ToolbarItemPlacementString(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ToolbarItemPlacementString(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5914594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolbarItemPlacementString()
{
  return &type metadata for ToolbarItemPlacementString;
}

unint64_t sub_1B59145D0()
{
  unint64_t result = qword_1E9D631C8;
  if (!qword_1E9D631C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631C8);
  }
  return result;
}

unint64_t sub_1B5914628()
{
  unint64_t result = qword_1E9D631D0;
  if (!qword_1E9D631D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631D0);
  }
  return result;
}

unint64_t sub_1B5914680()
{
  unint64_t result = qword_1E9D631D8;
  if (!qword_1E9D631D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631D8);
  }
  return result;
}

unint64_t sub_1B59146D8()
{
  unint64_t result = qword_1E9D631E0;
  if (!qword_1E9D631E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631E0);
  }
  return result;
}

unint64_t sub_1B5914730()
{
  unint64_t result = qword_1E9D631E8;
  if (!qword_1E9D631E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631E8);
  }
  return result;
}

unint64_t sub_1B5914788()
{
  unint64_t result = qword_1E9D631F0;
  if (!qword_1E9D631F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631F0);
  }
  return result;
}

unint64_t sub_1B59147E0()
{
  unint64_t result = qword_1E9D631F8;
  if (!qword_1E9D631F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D631F8);
  }
  return result;
}

uint64_t sub_1B5914834()
{
  return 0x4D79616C70736964;
}

unint64_t sub_1B5914854()
{
  unint64_t result = qword_1E9D63200;
  if (!qword_1E9D63200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63200);
  }
  return result;
}

void destroy for FixedSizeModifier(uint64_t a1)
{
  sub_1B590D6F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  char v5 = *(unsigned char *)(a1 + 56);
  sub_1B590D6F0(v2, v3, v4, v5);
}

uint64_t initializeWithCopy for FixedSizeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B590D634(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 48);
  LOBYTE(v2) = *(unsigned char *)(v2 + 56);
  sub_1B590D634(v8, v9, v10, v2);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v2;
  return a1;
}

uint64_t assignWithCopy for FixedSizeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B590D634(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B590D6F0(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v14 = *(void *)(v2 + 48);
  LOBYTE(v2) = *(unsigned char *)(v2 + 56);
  sub_1B590D634(v12, v13, v14, v2);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  char v18 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 56) = v2;
  sub_1B590D6F0(v15, v16, v17, v18);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FixedSizeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B590D6F0(v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B590D6F0(v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for FixedSizeModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FixedSizeModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FixedSizeModifier()
{
  return &type metadata for FixedSizeModifier;
}

void sub_1B5914B74(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63210);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59152B4();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    char v32 = 0;
    sub_1B5915308();
    sub_1B5A1C5D8();
    char v32 = 1;
    uint64_t v25 = v28;
    uint64_t v26 = v27;
    uint64_t v24 = v29;
    int v31 = v30;
    sub_1B590D634(v27, v28, v29, v30);
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v27;
    uint64_t v22 = v28;
    uint64_t v23 = v27;
    uint64_t v10 = v29;
    uint64_t v21 = v29;
    int v20 = v30;
    uint64_t v12 = v25;
    uint64_t v11 = v26;
    uint64_t v13 = v24;
    char v14 = v31;
    sub_1B590D634(v26, v25, v24, v31);
    uint64_t v15 = v9;
    uint64_t v16 = v22;
    uint64_t v17 = v10;
    LOBYTE(v10) = v20;
    sub_1B590D634(v15, v22, v17, v20);
    sub_1B590D6F0(v11, v12, v13, v14);
    *(void *)a2 = v11;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v13;
    *(unsigned char *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v23;
    *(void *)(a2 + 40) = v16;
    uint64_t v18 = v21;
    *(void *)(a2 + 48) = v21;
    *(unsigned char *)(a2 + 56) = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B590D6F0(v11, v12, v13, v14);
    sub_1B590D6F0(v23, v22, v18, v10);
  }
}

uint64_t sub_1B5914E4C(char a1)
{
  if (a1) {
    return 0x6C61636974726576;
  }
  else {
    return 0x746E6F7A69726F68;
  }
}

uint64_t sub_1B5914E88(char *a1, char *a2)
{
  return sub_1B59EE508(*a1, *a2);
}

uint64_t sub_1B5914E94()
{
  return sub_1B59F05B4();
}

uint64_t sub_1B5914E9C()
{
  return sub_1B59F3C50();
}

uint64_t sub_1B5914EA4()
{
  return sub_1B59F6280();
}

uint64_t sub_1B5914EAC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5914F0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5914E4C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5914F38()
{
  return sub_1B5914E4C(*v0);
}

uint64_t sub_1B5914F40@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5914FA4(uint64_t a1)
{
  unint64_t v2 = sub_1B59152B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5914FE0(uint64_t a1)
{
  unint64_t v2 = sub_1B59152B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B591501C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)v3;
  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t v8 = *(void *)(v3 + 16);
  char v9 = *(unsigned char *)(v3 + 24);
  uint64_t v11 = *(void *)(v3 + 32);
  uint64_t v10 = *(void *)(v3 + 40);
  uint64_t v14 = *(void *)(v3 + 48);
  char v12 = *(unsigned char *)(v3 + 56);
  sub_1B590D634(v7, v6, v8, v9);
  sub_1B59B4120(a2, v7, v6, v8, v9);
  if (v4)
  {

    sub_1B590D6F0(v7, v6, v8, v9);
    return sub_1B590CA38((uint64_t)a1, (uint64_t)a3);
  }
  else
  {
    sub_1B590D6F0(v7, v6, v8, v9);
    sub_1B590D634(v11, v10, v14, v12);
    sub_1B59B4120(a2, v11, v10, v14, v12);
    sub_1B590D6F0(v11, v10, v14, v12);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    a3[3] = sub_1B5A1A748();
    a3[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1B5A1B778();
  }
}

uint64_t sub_1B5915208@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B591501C(a1, a2, a3);
}

void sub_1B5915220(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B5915238(uint64_t a1)
{
  unint64_t result = sub_1B5915260();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5915260()
{
  unint64_t result = qword_1E9D63208;
  if (!qword_1E9D63208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63208);
  }
  return result;
}

unint64_t sub_1B59152B4()
{
  unint64_t result = qword_1E9D63218;
  if (!qword_1E9D63218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63218);
  }
  return result;
}

unint64_t sub_1B5915308()
{
  unint64_t result = qword_1E9D63228;
  if (!qword_1E9D63228)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63228);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FixedSizeModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5915430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FixedSizeModifier.CodingKeys()
{
  return &type metadata for FixedSizeModifier.CodingKeys;
}

unint64_t sub_1B591546C()
{
  unint64_t result = qword_1E9D63230;
  if (!qword_1E9D63230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63230);
  }
  return result;
}

unint64_t sub_1B59154C4()
{
  unint64_t result = qword_1E9D63238;
  if (!qword_1E9D63238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63238);
  }
  return result;
}

unint64_t sub_1B591551C()
{
  unint64_t result = qword_1E9D63240;
  if (!qword_1E9D63240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63240);
  }
  return result;
}

uint64_t sub_1B5915570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5A1A4E8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1B59155DC(uint64_t a1)
{
  uint64_t v2 = sub_1B5A1A4E8();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1B5915640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5A1A4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B59156A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5A1A4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B5915708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5A1A4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B591576C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5A1A4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B59157D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B59157E4);
}

uint64_t sub_1B59157E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5A1A4E8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1B5915850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5915864);
}

uint64_t sub_1B5915864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5A1A4E8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ControlSizeModifier()
{
  uint64_t result = qword_1E9D63248;
  if (!qword_1E9D63248) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B5915920()
{
  uint64_t result = sub_1B5A1A4E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B59159AC(char a1)
{
  return *(void *)&aMini_1[8 * a1];
}

uint64_t sub_1B59159CC(char *a1, char *a2)
{
  return sub_1B59EE5B0(*a1, *a2);
}

uint64_t sub_1B59159D8()
{
  return sub_1B59F063C();
}

uint64_t sub_1B59159E0()
{
  return sub_1B59F3CC0();
}

uint64_t sub_1B59159E8()
{
  return sub_1B59F6218();
}

uint64_t sub_1B59159F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59164BC();
  *a1 = result;
  return result;
}

uint64_t sub_1B5915A20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59159AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5915A4C()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B5915AAC()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B5915B08@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5915B5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5916508();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B5915B88@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5915BE0(uint64_t a1)
{
  unint64_t v2 = sub_1B5916078();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5915C1C(uint64_t a1)
{
  unint64_t v2 = sub_1B5916078();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5915C58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63270);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ControlSizeModifier();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5916078();
  sub_1B5A1C838();
  if (!v2)
  {
    uint64_t v11 = (uint64_t)v10;
    uint64_t v12 = v18;
    sub_1B59160CC();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    switch(v19)
    {
      case 1:
        uint64_t v13 = (unsigned int *)MEMORY[0x1E4F3C610];
        break;
      case 2:
        uint64_t v13 = (unsigned int *)MEMORY[0x1E4F3C618];
        break;
      case 3:
        uint64_t v13 = (unsigned int *)MEMORY[0x1E4F3C608];
        break;
      default:
        uint64_t v13 = (unsigned int *)MEMORY[0x1E4F3C5F8];
        break;
    }
    uint64_t v14 = *v13;
    uint64_t v15 = sub_1B5A1A4E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v11, v14, v15);
    sub_1B5916120(v11, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5915EBC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = sub_1B5A1A748();
  sub_1B591601C();
  a2[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B5A1B408();
}

uint64_t sub_1B5915F84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5915C58(a1, a2);
}

unint64_t sub_1B5915F9C(uint64_t a1)
{
  unint64_t result = sub_1B5915FC4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5915FC4()
{
  unint64_t result = qword_1E9D63258;
  if (!qword_1E9D63258)
  {
    type metadata accessor for ControlSizeModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63258);
  }
  return result;
}

unint64_t sub_1B591601C()
{
  unint64_t result = qword_1E9D63268;
  if (!qword_1E9D63268)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63268);
  }
  return result;
}

unint64_t sub_1B5916078()
{
  unint64_t result = qword_1E9D63278;
  if (!qword_1E9D63278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63278);
  }
  return result;
}

unint64_t sub_1B59160CC()
{
  unint64_t result = qword_1E9D63280;
  if (!qword_1E9D63280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63280);
  }
  return result;
}

uint64_t sub_1B5916120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlSizeModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for ControlSizeString(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5916250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlSizeString()
{
  return &type metadata for ControlSizeString;
}

unsigned char *storeEnumTagSinglePayload for ControlSizeModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5916324);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlSizeModifier.CodingKeys()
{
  return &type metadata for ControlSizeModifier.CodingKeys;
}

unint64_t sub_1B5916360()
{
  unint64_t result = qword_1E9D63288;
  if (!qword_1E9D63288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63288);
  }
  return result;
}

unint64_t sub_1B59163B8()
{
  unint64_t result = qword_1E9D63290;
  if (!qword_1E9D63290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63290);
  }
  return result;
}

unint64_t sub_1B5916410()
{
  unint64_t result = qword_1E9D63298;
  if (!qword_1E9D63298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63298);
  }
  return result;
}

unint64_t sub_1B5916468()
{
  unint64_t result = qword_1E9D632A0;
  if (!qword_1E9D632A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D632A0);
  }
  return result;
}

uint64_t sub_1B59164BC()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B5916508()
{
  return 1702521203;
}

unint64_t sub_1B5916518()
{
  unint64_t result = qword_1E9D632A8;
  if (!qword_1E9D632A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D632A8);
  }
  return result;
}

uint64_t sub_1B5916570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t AnyViewContent<>.body.getter@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(a1 + 40))(v6);
  uint64_t v3 = v7;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  uint64_t v4 = View.anyView.getter(v3);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  *a2 = v4;
  return result;
}

uint64_t sub_1B5916624(uint64_t a1, uint64_t a2)
{
  return sub_1B591A24C(a1, a2, (uint64_t)type metadata accessor for RemoteContentView, &qword_1E9D62BF8, (void (*)(uint64_t))type metadata accessor for RemoteContentView);
}

uint64_t AnyViewContent<>.anyView.getter(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1B5A1BA88();
}

uint64_t sub_1B5916734@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591A340(a1, &qword_1E9D62BF8, (void (*)(uint64_t))type metadata accessor for RemoteContentView, type metadata accessor for RemoteContentView, a2);
}

uint64_t View.view.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  a3[3] = a1;
  a3[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  unsigned int v6 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16);
  return v6(boxed_opaque_existential_1, v3, a1);
}

__n128 sub_1B59167E4@<Q0>(uint64_t *a1@<X8>)
{
  sub_1B5900FCC((uint64_t)v12);
  long long v10 = v12[1];
  long long v11 = v12[0];
  long long v8 = v12[3];
  long long v9 = v12[2];
  __n128 v7 = (__n128)v12[4];
  uint64_t v2 = v13;
  __int16 v3 = v14;
  char v4 = v15;
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62C58);
  a1[4] = sub_1B591D70C(&qword_1E9D62C50, &qword_1E9D62C58, (void (*)(void))sub_1B5907E08);
  uint64_t v5 = swift_allocObject();
  *a1 = v5;
  *(_OWORD *)(v5 + 16) = v11;
  *(_OWORD *)(v5 + 32) = v10;
  *(_OWORD *)(v5 + 48) = v9;
  *(_OWORD *)(v5 + 64) = v8;
  __n128 result = v7;
  *(__n128 *)(v5 + 80) = v7;
  *(void *)(v5 + 96) = v2;
  *(_WORD *)(v5 + 104) = v3;
  *(unsigned char *)(v5 + 106) = v4;
  return result;
}

unint64_t sub_1B59168D0@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)@<X8>)
{
  uint64_t v3 = sub_1B5A1BAF8();
  MEMORY[0x1F4188790](v3 - 8);
  if (*(void *)(v1 + 56))
  {
    uint64_t v4 = swift_retain();
    sub_1B590AE00(v4, v8);
    swift_release();
    unsigned int v6 = v8[0];
    uint64_t v5 = v8[1];
    a1[3] = (double (*)@<D0>(uint64_t@<X8>, double@<D0>, double@<D1>, double@<D2>, double@<D3>))&type metadata for AnyShape;
    unint64_t result = sub_1B590CD50();
    a1[4] = (double (*)@<D0>(uint64_t@<X8>, double@<D0>, double@<D1>, double@<D2>, double@<D3>))result;
    *a1 = v6;
    a1[1] = v5;
  }
  else
  {
    sub_1B59204D8(v1);
    type metadata accessor for RemoteStateStore(0);
    sub_1B5920204((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    unint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5916AF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63428);
  a1[4] = sub_1B591E498();
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1B5909890(v1 + 24, (uint64_t)v11, &qword_1E9D632B0);
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_1B5908FC0((uint64_t)v11, &qword_1E9D632B0);
    uint64_t v6 = 0;
  }
  uint64_t v14 = v6;
  sub_1B5909890(v2 + 64, (uint64_t)v11, &qword_1E9D632B0);
  uint64_t v7 = v12;
  if (v12)
  {
    uint64_t v8 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_1B5908FC0((uint64_t)v11, &qword_1E9D632B0);
    uint64_t v9 = 0;
  }
  v11[0] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63440);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
  sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  return sub_1B5A1BB38();
}

unint64_t sub_1B5916CF0@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)@<X8>)
{
  uint64_t v3 = sub_1B5A1A808();
  MEMORY[0x1F4188790](v3);
  if (*(void *)(v1 + 88))
  {
    uint64_t v4 = swift_retain();
    sub_1B590BB50(v4, v8);
    swift_release();
    uint64_t v6 = v8[0];
    uint64_t v5 = v8[1];
    a1[3] = (double (*)@<D0>(uint64_t@<X8>, double@<D0>, double@<D1>, double@<D2>, double@<D3>))&type metadata for AnyShape;
    unint64_t result = sub_1B590CD50();
    a1[4] = (double (*)@<D0>(uint64_t@<X8>, double@<D0>, double@<D1>, double@<D2>, double@<D3>))result;
    *a1 = v6;
    a1[1] = v5;
  }
  else
  {
    sub_1B59202A0(v1);
    type metadata accessor for RemoteStateStore(0);
    sub_1B5920204((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    unint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t AnyViewContent<>.partialBody.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  long long v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - v11;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v14(v12, v10, AssociatedTypeWitness);
  char v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, AssociatedTypeWitness);
  a3[3] = AssociatedTypeWitness;
  a3[4] = AssociatedConformanceWitness;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  v14((char *)boxed_opaque_existential_1, v12, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, AssociatedTypeWitness);
}

uint64_t sub_1B59170D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1B5A1BAF8();
  MEMORY[0x1F4188790](v3 - 8);
  if (*(void *)(v1 + 56))
  {
    uint64_t v4 = swift_retain();
    sub_1B590AE00(v4, v7);
    uint64_t result = swift_release();
    uint64_t v6 = v7[1];
    *(double (**)@<D0>(uint64_t@<X8>, double@<D0>, double@<D1>, double@<D2>, double@<D3>))a1 = v7[0];
    *(void *)(a1 + 8) = v6;
  }
  else
  {
    sub_1B59204D8(v1);
    type metadata accessor for RemoteStateStore(0);
    sub_1B5920204((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B59172E0(uint64_t a1, uint64_t a2)
{
  return sub_1B591AE40(a1, a2, (void (*)(void))sub_1B590E45C);
}

uint64_t sub_1B59172F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B591AEE8(a1, (uint64_t (*)(void))sub_1B590E45C, a2);
}

unint64_t sub_1B5917318@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = MEMORY[0x1E4F3ED28];
  unint64_t result = sub_1B590F690();
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1B591734C(uint64_t a1, uint64_t a2)
{
  return sub_1B591AE40(a1, a2, (void (*)(void))sub_1B590E618);
}

uint64_t sub_1B5917364@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B591AEE8(a1, (uint64_t (*)(void))sub_1B590E618, a2);
}

unint64_t sub_1B5917384@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = MEMORY[0x1E4F3EE90];
  unint64_t result = sub_1B590F63C();
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1B59173B8(uint64_t a1, uint64_t a2)
{
  return sub_1B5919F78(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5904BDC, (void (*)(uint64_t))sub_1B590E7D4);
}

uint64_t sub_1B59173E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591A080(a1, (uint64_t (*)(void))sub_1B590E7D4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5904BDC, a2);
}

unint64_t sub_1B5917418@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)@<X8>)
{
  return sub_1B59168D0(a1);
}

uint64_t sub_1B591745C(uint64_t a1, uint64_t a2)
{
  return sub_1B591AE40(a1, a2, (void (*)(void))sub_1B590E990);
}

uint64_t sub_1B5917474@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B591AEE8(a1, (uint64_t (*)(void))sub_1B590E990, a2);
}

unint64_t sub_1B5917494@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = MEMORY[0x1E4F3F0D0];
  unint64_t result = sub_1B590F264();
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1B59174C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  unsigned __int8 v7 = *(unsigned char *)(v0 + 40);
  unsigned __int8 v8 = *(unsigned char *)(v0 + 72);
  swift_bridgeObjectRetain();
  sub_1B590F04C(v1, v2, v3, v7);
  sub_1B5904BDC(v4, v5, v6, v8);
  sub_1B590EC10();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1B5A1BA88();
}

uint64_t sub_1B59175B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  uint64_t v14 = *v2;
  uint64_t v15 = v2[8];
  uint64_t v16 = v2[11];
  uint64_t v17 = v2[10];
  uint64_t v18 = v2[12];
  a2[3] = a1;
  unsigned __int8 v10 = *((unsigned char *)v2 + 40);
  unsigned __int8 v11 = *((unsigned char *)v2 + 72);
  a2[4] = sub_1B590EC10();
  uint64_t v12 = swift_allocObject();
  *a2 = v12;
  *(void *)(v12 + 16) = v14;
  *(void *)(v12 + 24) = v4;
  *(void *)(v12 + 32) = v5;
  *(void *)(v12 + 40) = v6;
  *(void *)(v12 + 48) = v7;
  *(unsigned char *)(v12 + 56) = v10;
  *(void *)(v12 + 64) = v8;
  *(void *)(v12 + 72) = v9;
  *(void *)(v12 + 80) = v15;
  *(unsigned char *)(v12 + 88) = v11;
  *(void *)(v12 + 96) = v17;
  *(void *)(v12 + 104) = v16;
  *(void *)(v12 + 112) = v18;
  swift_bridgeObjectRetain();
  sub_1B590F04C(v5, v6, v7, v10);
  sub_1B5904BDC(v8, v9, v15, v11);
  swift_retain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1B59176DC@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)@<X8>)
{
  return sub_1B5916CF0(a1);
}

uint64_t View.anyView.getter(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  return sub_1B5A1BA88();
}

uint64_t sub_1B59177F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  a6[3] = a4;
  a6[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a6);
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, v6, a4);
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v15 = (void *)(a1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v16 = v15[3];
      uint64_t v17 = v15[4];
      __swift_project_boxed_opaque_existential_1(v15, v16);
      (*(void (**)(long long *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 16))(&v18, a6, a2, a3, v16, v17);
      sub_1B5908BE8(&v18, (uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a6);
      sub_1B5908BE8(v19, (uint64_t)a6);
      v15 += 5;
      --v14;
    }
    while (v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ViewContent.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ViewContent.modifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ViewContent.modifiers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ViewContent.modifiers.modify())()
{
  return nullsub_1;
}

uint64_t ViewContent.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5909890(v1 + 40, a1, &qword_1E9D632B0);
}

uint64_t ViewContent.content.setter(uint64_t a1)
{
  return sub_1B5917A94(a1, v1 + 40, &qword_1E9D632B0);
}

uint64_t (*ViewContent.content.modify())()
{
  return nullsub_1;
}

uint64_t ViewContent.shapeContent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5909890(v1 + 80, a1, &qword_1E9D632B8);
}

uint64_t ViewContent.shapeContent.setter(uint64_t a1)
{
  return sub_1B5917A94(a1, v1 + 80, &qword_1E9D632B8);
}

uint64_t sub_1B5917A94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*ViewContent.shapeContent.modify())()
{
  return nullsub_1;
}

uint64_t ViewContent.store.getter()
{
  if (*(void *)(v0 + 120))
  {
    return swift_retain();
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B5920204((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t ViewContent.$store.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = type metadata accessor for RemoteStateStore(0);
  uint64_t v4 = sub_1B5920204((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  return MEMORY[0x1F40F90C0](v1, v2, v3, v4);
}

uint64_t ViewContent.localStore.getter()
{
  if (*(void *)(v0 + 136))
  {
    return swift_retain();
  }
  else
  {
    type metadata accessor for LocalStateStore(0);
    sub_1B5920204(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t ViewContent.$localStore.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = type metadata accessor for LocalStateStore(0);
  uint64_t v4 = sub_1B5920204(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
  return MEMORY[0x1F40F90C0](v1, v2, v3, v4);
}

uint64_t sub_1B5917D40(char a1)
{
  return qword_1B5A1F1D0[a1];
}

uint64_t sub_1B5917D60(char *a1, char *a2)
{
  return sub_1B59EF99C(*a1, *a2);
}

uint64_t sub_1B5917D6C()
{
  return sub_1B59F48F0();
}

uint64_t sub_1B5917D74@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B591D658();
  *a1 = result;
  return result;
}

uint64_t sub_1B5917DA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5917D40(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5917DD0()
{
  return sub_1B5917D40(*v0);
}

uint64_t sub_1B5917DD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B591D658();
  *a1 = result;
  return result;
}

uint64_t sub_1B5917E00(uint64_t a1)
{
  unint64_t v2 = sub_1B591CB4C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5917E3C(uint64_t a1)
{
  unint64_t v2 = sub_1B591CB4C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ViewContent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v87 = *MEMORY[0x1E4F143B8];
  uint64_t v69 = sub_1B5A1A2A8();
  *(void *)&long long v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v67 = &v57[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632C0);
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v72 = &v57[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F00);
  uint64_t v73 = *(void *)(v6 - 8);
  uint64_t v74 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v76 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1B5A1C4E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v11 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for RemoteStateStore(0);
  sub_1B5920204((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  memset(v82, 0, sizeof(v82));
  uint64_t v83 = sub_1B5A1A918();
  uint64_t v84 = v12;
  type metadata accessor for LocalStateStore(0);
  sub_1B5920204(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
  uint64_t v85 = sub_1B5A1A918();
  uint64_t v86 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = sub_1B5A1C828();
  if (qword_1E9D62B28 != -1) {
    swift_once();
  }
  uint64_t v15 = v82;
  uint64_t v16 = &v82[40];
  uint64_t v17 = __swift_project_value_buffer(v8, (uint64_t)qword_1E9D910E8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
  if (*(void *)(v14 + 16) && (unint64_t v18 = sub_1B59049D0((uint64_t)v11), (v19 & 1) != 0))
  {
    sub_1B59052CC(*(void *)(v14 + 56) + 32 * v18, (uint64_t)&v79);
  }
  else
  {
    long long v79 = 0u;
    long long v80 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  if (!*((void *)&v80 + 1))
  {
    sub_1B5908FC0((uint64_t)&v79, &qword_1E9D62BC8);
    goto LABEL_13;
  }
  type metadata accessor for ContentRegistry();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    type metadata accessor for ContentRegistryError();
    sub_1B5920204(&qword_1E9D62F08, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_14;
  }
  uint64_t v64 = a1;
  uint64_t v65 = &v82[40];
  int v20 = (void *)v78[0];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v21 = sub_1B590C798();
  id v22 = v75;
  uint64_t v23 = v76;
  sub_1B5A1C838();
  if (v22)
  {

    uint64_t v15 = v82;
    uint64_t v16 = v65;
LABEL_11:
    a1 = v64;
LABEL_14:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B5908FC0((uint64_t)v15, &qword_1E9D632B0);
    sub_1B5908FC0((uint64_t)v16, &qword_1E9D632B8);
    swift_release();
    return swift_release();
  }
  unint64_t v62 = v21;
  uint64_t v63 = v82;
  id v75 = v20;
  uint64_t v25 = v74;
  uint64_t v26 = sub_1B5A1C5E8();
  if (!*(void *)(v26 + 16))
  {
    swift_bridgeObjectRelease();
    type metadata accessor for DynamicKeyError();
    uint64_t v31 = v25;
    sub_1B5920204(&qword_1E9D62F40, (void (*)(uint64_t))type metadata accessor for DynamicKeyError);
    swift_allocError();
    sub_1B5A1C578();
    sub_1B5A1C3C8();
    uint64_t v16 = v65;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v23, v31);
    uint64_t v15 = v63;
    goto LABEL_11;
  }
  uint64_t v27 = *(void *)(v26 + 40);
  uint64_t v28 = *(void *)(v26 + 48);
  uint64_t v29 = *(void *)(v26 + 32);
  int v30 = *(unsigned __int8 *)(v26 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v81[2] = v29;
  v81[3] = v27;
  *(void *)&long long v79 = v29;
  *((void *)&v79 + 1) = v27;
  *(void *)&long long v80 = v28;
  BYTE8(v80) = v30;
  sub_1B591CB4C();
  swift_bridgeObjectRetain();
  sub_1B5A1C568();
  int v58 = v30;
  uint64_t v59 = v29;
  uint64_t v60 = v28;
  uint64_t v61 = v27;
  LOBYTE(v79) = 0;
  uint64_t v32 = sub_1B5A1C598();
  uint64_t v34 = v33;
  if (v33)
  {
    uint64_t v35 = v32;
  }
  else
  {
    uint64_t v36 = v67;
    sub_1B5A1A298();
    uint64_t v35 = sub_1B5A1A288();
    uint64_t v34 = v37;
    (*(void (**)(unsigned char *, uint64_t))(v68 + 8))(v36, v69);
  }
  uint64_t v38 = v61;
  char v39 = v58;
  v81[0] = v35;
  v81[1] = v34;
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1B5A1C578();
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F18);
  uint64_t inited = swift_initStackObject();
  long long v68 = xmmword_1B5A1D730;
  *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
  unint64_t v42 = v62;
  *(void *)(inited + 56) = &type metadata for DynamicKey;
  *(void *)(inited + 64) = v42;
  uint64_t v43 = swift_allocObject();
  *(void *)(inited + 32) = v43;
  uint64_t v45 = v59;
  uint64_t v44 = v60;
  *(void *)(v43 + 16) = v59;
  *(void *)(v43 + 24) = v38;
  *(void *)(v43 + 32) = v44;
  *(unsigned char *)(v43 + 40) = v39;
  *(void *)&long long v79 = v40;
  swift_bridgeObjectRetain();
  sub_1B590C844(inited);
  uint64_t v46 = sub_1B59DC15C(v45, v38);
  uint64_t v48 = v47;
  uint64_t v49 = v46;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  LOBYTE(v78[0]) = 1;
  uint64_t v50 = v71;
  sub_1B5A1C588();
  sub_1B590CA38((uint64_t)&v79, (uint64_t)&v77);
  v78[3] = v49;
  v78[4] = v48;
  __swift_allocate_boxed_opaque_existential_1(v78);
  sub_1B5A1C1C8();
  uint64_t v52 = (uint64_t)v64;
  uint64_t v51 = (uint64_t)v65;
  uint64_t v53 = v74;
  uint64_t v54 = v76;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
  sub_1B5917A94((uint64_t)v78, v51, &qword_1E9D632B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F28);
  LOBYTE(v78[0]) = 2;
  sub_1B591F138((unint64_t *)&qword_1E9D62F30, &qword_1E9D62F28, (void (*)(void))sub_1B590CBC8);
  unsigned __int8 v55 = v72;
  sub_1B5A1C5B8();
  uint64_t v56 = v79;

  if (!v56) {
    uint64_t v56 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(unsigned char *, uint64_t))(v70 + 8))(v55, v50);
  (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v54, v53);
  v81[4] = v56;
  sub_1B591CBD8((uint64_t)v81, v66);
  __swift_destroy_boxed_opaque_existential_1(v52);
  return sub_1B591CC10((uint64_t)v81);
}

uint64_t ViewContent.view.getter@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for ViewContent;
  a1[4] = sub_1B591CC40();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;
  return sub_1B591CBD8(v1, v3 + 16);
}

unint64_t ViewContent.partialBody.getter@<X0>(uint64_t a1@<X8>)
{
  void (*v21)(long long *__return_ptr, uint64_t, uint64_t, ValueMetadata *, unint64_t);
  long long v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  ValueMetadata *v31;
  uint64_t v32;
  unint64_t result;
  long long v34;
  uint64_t v35;
  long long v36;
  uint64_t v37;
  uint64_t v38;
  long long v39;
  ValueMetadata *v40;
  unint64_t v41;

  unint64_t v2 = v1;
  sub_1B5909890((uint64_t)(v1 + 5), (uint64_t)&v36, &qword_1E9D632B0);
  if (v37)
  {
    sub_1B5908BE8(&v36, (uint64_t)&v39);
    uint64_t v4 = v40;
    unint64_t v5 = v41;
    __swift_project_boxed_opaque_existential_1(&v39, (uint64_t)v40);
    (*(void (**)(long long *__return_ptr, ValueMetadata *, unint64_t))(v5 + 32))(&v36, v4, v5);
    uint64_t v6 = v37;
    uint64_t v7 = v38;
    __swift_project_boxed_opaque_existential_1(&v36, v37);
    uint64_t v8 = sub_1B591958C(v2[4]);
    uint64_t v9 = v2[15];
    if (v9)
    {
      uint64_t v10 = v2[17];
      if (v10)
      {
        uint64_t v11 = v8;
        swift_retain();
        swift_retain();
        sub_1B59177F0(v11, v9, v10, v6, v7, (uint64_t *)&v34);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v12 = v35;
        __swift_project_boxed_opaque_existential_1(&v34, v35);
        uint64_t v13 = View.anyView.getter(v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
        *(void *)&uint64_t v34 = v13;
        BYTE8(v34) = 0;
        swift_retain();
        sub_1B5A1AE58();
        *(void *)&uint64_t v34 = v36;
        WORD4(v34) = BYTE8(v36);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632D8);
        sub_1B591D6A4((unint64_t *)&qword_1E9D632E0, &qword_1E9D632D8);
        sub_1B5A1AE58();
        swift_release();
        uint64_t v14 = v36;
        char v15 = BYTE8(v36);
        char v16 = BYTE9(v36);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
LABEL_20:
        *(void *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632E8);
        uint64_t result = sub_1B591CD0C();
        *(void *)(a1 + 32) = result;
        *(void *)a1 = v14;
        *(unsigned char *)(a1 + 8) = v15;
        *(unsigned char *)(a1 + 9) = v16;
        return result;
      }
      goto LABEL_22;
    }
LABEL_21:
    type metadata accessor for RemoteStateStore(0);
    sub_1B5920204((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    sub_1B5A1A908();
    __break(1u);
LABEL_22:
    type metadata accessor for LocalStateStore(0);
    sub_1B5920204(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
    swift_retain();
    sub_1B5A1A908();
    __break(1u);
    goto LABEL_23;
  }
  sub_1B5908FC0((uint64_t)&v36, &qword_1E9D632B0);
  sub_1B5909890((uint64_t)(v1 + 10), (uint64_t)&v39, &qword_1E9D632B8);
  uint64_t v17 = v40;
  if (!v40)
  {
    sub_1B5908FC0((uint64_t)&v39, &qword_1E9D632B8);
    *(void *)&uint64_t v36 = 0;
    WORD4(v36) = 256;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632D8);
    sub_1B591D6A4((unint64_t *)&qword_1E9D632E0, &qword_1E9D632D8);
    sub_1B5A1AE58();
LABEL_19:
    uint64_t v14 = v39;
    char v15 = BYTE8(v39);
    char v16 = BYTE9(v39);
    goto LABEL_20;
  }
  unint64_t v18 = v41;
  __swift_project_boxed_opaque_existential_1(&v39, (uint64_t)v40);
  uint64_t v19 = v1[15];
  if (!v19) {
    goto LABEL_21;
  }
  uint64_t v20 = v1[17];
  if (v20)
  {
    unint64_t v21 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, ValueMetadata *, unint64_t))(v18 + 48);
    swift_retain();
    swift_retain();
    v21(&v36, v19, v20, v17, v18);
    swift_release();
    swift_release();
    id v22 = v36;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
    uint64_t v23 = sub_1B591958C(v1[4]);
    uint64_t v24 = v1[15];
    if (!v24) {
      goto LABEL_21;
    }
    uint64_t v25 = v1[17];
    if (v25)
    {
      uint64_t v26 = v23;
      uint64_t v40 = &type metadata for AnyShape;
      uint64_t v41 = sub_1B590CD50();
      char v39 = v22;
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        uint64_t v28 = (void *)(v26 + 32);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        do
        {
          int v30 = v28[3];
          uint64_t v29 = v28[4];
          __swift_project_boxed_opaque_existential_1(v28, v30);
          (*(void (**)(long long *__return_ptr, long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 16))(&v34, &v39, v24, v25, v30, v29);
          sub_1B5908BE8(&v34, (uint64_t)&v36);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
          sub_1B5908BE8(&v36, (uint64_t)&v39);
          v28 += 5;
          --v27;
        }
        while (v27);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = v40;
      __swift_project_boxed_opaque_existential_1(&v39, (uint64_t)v40);
      uint64_t v32 = View.anyView.getter((uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
      *(void *)&uint64_t v36 = v32;
      BYTE8(v36) = 1;
      swift_retain();
      sub_1B5A1AE58();
      *(void *)&uint64_t v36 = v39;
      WORD4(v36) = BYTE8(v39);
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632D8);
      sub_1B591D6A4((unint64_t *)&qword_1E9D632E0, &qword_1E9D632D8);
      sub_1B5A1AE58();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_19;
    }
  }
LABEL_23:
  type metadata accessor for LocalStateStore(0);
  sub_1B5920204(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
  swift_retain();
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B59193A4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B59692EC(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v19;
    do
    {
      sub_1B590CA38(v4, (uint64_t)v15);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63090);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63320);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B59692EC(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v19;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1) {
        sub_1B59692EC(v5 > 1, v6 + 1, 1);
      }
      uint64_t v7 = v17;
      uint64_t v8 = v18;
      uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
      MEMORY[0x1F4188790](v9);
      uint64_t v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(char *))(v12 + 16))(v11);
      sub_1B591D5C0(v6, (uint64_t)v11, &v19, v7, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      uint64_t v2 = v19;
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B591958C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1B59692EC(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1B591D9E4(v4, (uint64_t)v11);
      uint64_t v12 = v2;
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1B59692EC(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v12;
      }
      uint64_t v9 = &type metadata for AnyViewModifier;
      unint64_t v10 = sub_1B591DA40();
      *(void *)&long long v8 = swift_allocObject();
      sub_1B591D9E4((uint64_t)v11, v8 + 16);
      *(void *)(v2 + 16) = v6 + 1;
      sub_1B5908BE8(&v8, v2 + 40 * v6 + 32);
      sub_1B591DACC((uint64_t)v11);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B59196AC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1B596947C(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1B591CBD8(v4, (uint64_t)v11);
      uint64_t v12 = v2;
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1B596947C(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v12;
      }
      uint64_t v9 = &type metadata for ViewContent;
      unint64_t v10 = sub_1B5914034();
      *(void *)&long long v8 = swift_allocObject();
      sub_1B591CBD8((uint64_t)v11, v8 + 16);
      *(void *)(v2 + 16) = v6 + 1;
      sub_1B5908BE8(&v8, v2 + 40 * v6 + 32);
      sub_1B591CC10((uint64_t)v11);
      v4 += 152;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t ViewContent.body.getter@<X0>(uint64_t *a1@<X8>)
{
  ViewContent.partialBody.getter((uint64_t)v5);
  uint64_t v2 = v6;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v3 = View.anyView.getter(v2);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  *a1 = v3;
  return result;
}

uint64_t sub_1B5919840@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewContent.init(from:)(a1, a2);
}

uint64_t sub_1B5919858()
{
  sub_1B591CBD8(v0, (uint64_t)v2);
  sub_1B591CC40();
  return sub_1B5A1BA88();
}

uint64_t sub_1B59198A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591C5D0(a1, (uint64_t (*)(void))sub_1B591CC40, sub_1B591CBD8, a2);
}

uint64_t sub_1B59198D8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B59198E4@<X0>(uint64_t *a1@<X8>)
{
  ViewContent.partialBody.getter((uint64_t)v5);
  uint64_t v2 = v6;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v3 = View.anyView.getter(v2);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  *a1 = v3;
  return result;
}

unint64_t ViewContent.description.getter()
{
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_1B5A1C3A8();
  swift_bridgeObjectRelease();
  unint64_t v4 = 0xD000000000000016;
  unint64_t v5 = 0x80000001B5A32C10;
  sub_1B5909890(v0 + 40, (uint64_t)v3, &qword_1E9D632B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632B0);
  sub_1B5A1BF48();
  sub_1B5A1BFA8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  uint64_t v1 = swift_bridgeObjectRetain();
  MEMORY[0x1BA9A3890](v1, &type metadata for AnyViewModifier);
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  return v4;
}

uint64_t sub_1B5919A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B591ABE4(a1, a2, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))sub_1B591E440, a4, a5, a6);
}

uint64_t sub_1B5919A90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B591AC94(a1, (uint64_t (*)(void))sub_1B591E440, a2);
}

uint64_t sub_1B5919AB0@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63400);
  a1[4] = sub_1B59095C8(&qword_1E9D63408, &qword_1E9D63400);
  __swift_allocate_boxed_opaque_existential_1(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  return sub_1B5A1B308();
}

uint64_t sub_1B5919BA0()
{
  sub_1B591E628(v0, (uint64_t)&v2);
  sub_1B591E5BC();
  return sub_1B5A1BA88();
}

uint64_t sub_1B5919BE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591CA0C(a1, (uint64_t (*)(void))sub_1B591E5BC, sub_1B591E628, a2);
}

uint64_t sub_1B5919C20(uint64_t a1, uint64_t a2)
{
  return sub_1B591AE40(a1, a2, (void (*)(void))sub_1B591E684);
}

uint64_t sub_1B5919C38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B591AEE8(a1, (uint64_t (*)(void))sub_1B591E684, a2);
}

uint64_t sub_1B5919C58@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_1B5A1BB18();
  a1[4] = sub_1B5920204(&qword_1E9D63450, MEMORY[0x1E4F3EE70]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B5A1BB08();
}

uint64_t sub_1B5919CCC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_1B591DDB0(v1, v2, v3, v4);
  sub_1B591DCFC();
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1B5A1BA88();
}

uint64_t sub_1B5919D88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = v2[8];
  a2[3] = a1;
  char v12 = *((unsigned char *)v2 + 40);
  a2[4] = sub_1B591DCFC();
  uint64_t v13 = swift_allocObject();
  *a2 = v13;
  *(void *)(v13 + 16) = v5;
  *(void *)(v13 + 24) = v4;
  *(void *)(v13 + 32) = v6;
  *(void *)(v13 + 40) = v7;
  *(void *)(v13 + 48) = v8;
  *(unsigned char *)(v13 + 56) = v12;
  *(void *)(v13 + 64) = v9;
  *(void *)(v13 + 72) = v10;
  *(void *)(v13 + 80) = v11;
  swift_bridgeObjectRetain();
  sub_1B591DDB0(v6, v7, v8, v12);
  swift_retain();
  return swift_bridgeObjectRetain();
}

__n128 sub_1B5919E54@<Q0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[4];
  char v5 = *((unsigned char *)v1 + 40);
  uint64_t v6 = v1[8];
  uint64_t v19 = *v1;
  uint64_t v20 = v3;
  long long v21 = *((_OWORD *)v1 + 1);
  uint64_t v22 = v4;
  char v23 = v5;
  long long v24 = *((_OWORD *)v1 + 3);
  uint64_t v25 = v6;
  sub_1B593C004((uint64_t)&v14);
  __n128 v13 = v14;
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  char v9 = v17;
  char v10 = v18;
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63328);
  a1[4] = sub_1B591DB20((unint64_t *)&qword_1E9D63330, &qword_1E9D63328, (void (*)(void))sub_1B591DB9C);
  uint64_t v11 = swift_allocObject();
  *a1 = v11;
  __n128 result = v13;
  *(__n128 *)(v11 + 16) = v13;
  *(void *)(v11 + 32) = v7;
  *(void *)(v11 + 40) = v8;
  *(unsigned char *)(v11 + 48) = v9;
  *(unsigned char *)(v11 + 49) = v10;
  return result;
}

uint64_t sub_1B5919F4C(uint64_t a1, uint64_t a2)
{
  return sub_1B5919F78(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591DF74, (void (*)(uint64_t))sub_1B591EBE0);
}

uint64_t sub_1B5919F78(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t))
{
  uint64_t v7 = *(void *)(v4 + 16);
  uint64_t v8 = *(void *)(v4 + 24);
  uint64_t v9 = *(void *)(v4 + 32);
  uint64_t v10 = *(unsigned __int8 *)(v4 + 40);
  swift_bridgeObjectRetain();
  uint64_t v11 = a3(v7, v8, v9, v10);
  a4(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591A04C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591A080(a1, (uint64_t (*)(void))sub_1B591EBE0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591DF74, a2);
}

uint64_t sub_1B591A080@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X2>, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t v8 = v4[2];
  uint64_t v9 = v4[3];
  uint64_t v10 = v4[4];
  uint64_t v11 = v4[6];
  uint64_t v12 = v4[7];
  uint64_t v16 = v4[8];
  a4[3] = a1;
  uint64_t v13 = *((unsigned __int8 *)v4 + 40);
  a4[4] = a2();
  uint64_t v14 = swift_allocObject();
  *a4 = v14;
  *(void *)(v14 + 16) = v6;
  *(void *)(v14 + 24) = v7;
  *(void *)(v14 + 32) = v8;
  *(void *)(v14 + 40) = v9;
  *(void *)(v14 + 48) = v10;
  *(unsigned char *)(v14 + 56) = v13;
  *(void *)(v14 + 64) = v11;
  *(void *)(v14 + 72) = v12;
  *(void *)(v14 + 80) = v16;
  swift_bridgeObjectRetain();
  a3(v8, v9, v10, v13);
  swift_retain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1B591A168@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[4];
  char v5 = *((unsigned char *)v1 + 40);
  uint64_t v6 = v1[6];
  uint64_t v14 = *v1;
  uint64_t v15 = v3;
  long long v16 = *((_OWORD *)v1 + 1);
  uint64_t v17 = v4;
  char v18 = v5;
  uint64_t v19 = v6;
  long long v20 = *(_OWORD *)(v1 + 7);
  sub_1B593CF4C((uint64_t)&v11);
  uint64_t v7 = v11;
  char v8 = v12;
  char v9 = v13;
  *(void *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D634C8);
  unint64_t result = sub_1B591EB74();
  *(void *)(a1 + 32) = result;
  *(void *)a1 = v7;
  *(unsigned char *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 9) = v9;
  return result;
}

uint64_t sub_1B591A204(uint64_t a1, uint64_t a2)
{
  return sub_1B591A24C(a1, a2, (uint64_t)type metadata accessor for LinkView, &qword_1E9D63508, (void (*)(uint64_t))type metadata accessor for LinkView);
}

uint64_t sub_1B591A24C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  sub_1B591FC78(v8, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  sub_1B5920204(a4, a5);
  return sub_1B5A1BA88();
}

uint64_t sub_1B591A2F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591A340(a1, &qword_1E9D63508, (void (*)(uint64_t))type metadata accessor for LinkView, (uint64_t (*)(void))type metadata accessor for LinkView, a2);
}

uint64_t sub_1B591A340@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X2>, void (*a3)(uint64_t)@<X3>, uint64_t (*a4)(void)@<X5>, uint64_t *a5@<X8>)
{
  a5[3] = a1;
  a5[4] = sub_1B5920204(a2, a3);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a5);
  return sub_1B591FC78(v5, (uint64_t)boxed_opaque_existential_1, a4);
}

uint64_t sub_1B591A39C@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D634E8);
  a1[4] = sub_1B591ED74();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B593D708((uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B591A3E4(uint64_t a1, uint64_t a2)
{
  return sub_1B591AE40(a1, a2, (void (*)(void))sub_1B591EB1C);
}

uint64_t sub_1B591A3FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B591AEE8(a1, (uint64_t (*)(void))sub_1B591EB1C, a2);
}

uint64_t sub_1B591A41C@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E58);
  a1[4] = sub_1B59095C8(&qword_1E9D62E70, &qword_1E9D62E58);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B5A1A538();
}

uint64_t sub_1B591A488()
{
  sub_1B591EEC8(v0, (uint64_t)&v2);
  sub_1B591EE70();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591A4D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591BE28(a1, (uint64_t (*)(void))sub_1B591EE70, sub_1B591EEC8, a2);
}

uint64_t sub_1B591A504@<X0>(uint64_t *a1@<X8>)
{
  sub_1B591EE14(v1 + 16, (uint64_t)v10);
  uint64_t v3 = v11;
  uint64_t v4 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  if (*(void *)(v1 + 64))
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v6 = swift_retain();
    uint64_t v7 = v5(v6, v3, v4);
    swift_release();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    uint64_t v9 = MEMORY[0x1E4F3EB88];
    a1[3] = MEMORY[0x1E4F3EB98];
    a1[4] = v9;
    *a1 = v7;
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B5920204((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B591A61C()
{
  sub_1B591F6C0(v0, (uint64_t)v2);
  sub_1B591F61C();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591A664@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = a1;
  a2[4] = sub_1B591F61C();
  uint64_t v4 = swift_allocObject();
  *a2 = v4;
  return sub_1B591F6C0(v2, v4 + 16);
}

uint64_t sub_1B591A6C0@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D635E8);
  a1[4] = sub_1B59095C8(&qword_1E9D635F0, &qword_1E9D635E8);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B5A1A4B8();
}

uint64_t sub_1B591A774()
{
  sub_1B591F4A8(v0, (uint64_t)&v2);
  sub_1B591F3F4();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591A7BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591C850(a1, (uint64_t (*)(void))sub_1B591F3F4, sub_1B591F4A8, a2);
}

uint64_t sub_1B591A7F0@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D635B8);
  a1[4] = sub_1B59095C8(&qword_1E9D635C0, &qword_1E9D635B8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B593F8B8((uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B591A864()
{
  sub_1B591F5B8(v0, (uint64_t)v2);
  sub_1B591F50C();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591A8AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = a1;
  a2[4] = sub_1B591F50C();
  uint64_t v4 = swift_allocObject();
  *a2 = v4;
  return sub_1B591F5B8(v2, v4 + 16);
}

uint64_t sub_1B591A908@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D635D0);
  a1[4] = sub_1B59095C8(&qword_1E9D635D8, &qword_1E9D635D0);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B5A1B978();
}

uint64_t sub_1B591A9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B591ABE4(a1, a2, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))sub_1B591F7B4, a4, a5, a6);
}

uint64_t sub_1B591A9F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B591AC94(a1, (uint64_t (*)(void))sub_1B591F7B4, a2);
}

uint64_t sub_1B591AA10@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63600);
  a1[4] = sub_1B591F71C();
  __swift_allocate_boxed_opaque_existential_1(a1);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
  sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
  return sub_1B5A1BB28();
}

uint64_t sub_1B591AB08()
{
  sub_1B591FB6C(v0, (uint64_t)&v2);
  sub_1B591FAB0();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591AB50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591CA0C(a1, (uint64_t (*)(void))sub_1B591FAB0, sub_1B591FB6C, a2);
}

uint64_t sub_1B591AB84@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63620);
  a1[4] = sub_1B591F954();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B5941088((uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B591ABCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B591ABE4(a1, a2, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))sub_1B591FBD0, a4, a5, a6);
}

uint64_t sub_1B591ABE4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B5A1BA88();
}

uint64_t sub_1B591AC74@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B591AC94(a1, (uint64_t (*)(void))sub_1B591FBD0, a2);
}

uint64_t sub_1B591AC94@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X2>, void *a3@<X8>)
{
  uint64_t v6 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v10 = v3[4];
  uint64_t v9 = v3[5];
  a3[3] = a1;
  a3[4] = a2();
  uint64_t v11 = (void *)swift_allocObject();
  *a3 = v11;
  v11[2] = v6;
  void v11[3] = v5;
  v11[4] = v7;
  v11[5] = v8;
  v11[6] = v10;
  v11[7] = v9;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B591AD38@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63668);
  a1[4] = sub_1B59095C8(&qword_1E9D63670, &qword_1E9D63668);
  __swift_allocate_boxed_opaque_existential_1(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  return sub_1B5A1B2E8();
}

uint64_t sub_1B591AE28(uint64_t a1, uint64_t a2)
{
  return sub_1B591AE40(a1, a2, (void (*)(void))sub_1B591FF38);
}

uint64_t sub_1B591AE40(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_1B5A1BA88();
}

uint64_t sub_1B591AEC8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B591AEE8(a1, (uint64_t (*)(void))sub_1B591FF38, a2);
}

uint64_t sub_1B591AEE8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X2>, void *a3@<X8>)
{
  uint64_t v6 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  a3[3] = a1;
  a3[4] = a2();
  uint64_t v10 = (void *)swift_allocObject();
  *a3 = v10;
  v10[2] = v6;
  void v10[3] = v5;
  v10[4] = v7;
  _OWORD v10[5] = v8;
  v10[6] = v9;
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1B591AF84(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4F3F050];
  *(void *)(a1 + 24) = MEMORY[0x1E4F3F058];
  *(void *)(a1 + 32) = v1;
}

uint64_t sub_1B591AF9C()
{
  sub_1B591F8F8(v0, (uint64_t)&v2);
  sub_1B591F80C();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591AFE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591CA0C(a1, (uint64_t (*)(void))sub_1B591F80C, sub_1B591F8F8, a2);
}

uint64_t sub_1B591B018@<X0>(uint64_t a1@<X8>)
{
  sub_1B5946610((uint64_t)&v5);
  uint64_t v2 = v5;
  char v3 = v6;
  *(void *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632D8);
  uint64_t result = sub_1B591D6A4((unint64_t *)&qword_1E9D632E0, &qword_1E9D632D8);
  *(void *)(a1 + 32) = result;
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return result;
}

uint64_t sub_1B591B0A4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 48);
  swift_bridgeObjectRetain();
  sub_1B591DF74(v1, v2, v3, v4);
  sub_1B591DE50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591B170@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  char v15 = *((unsigned char *)v2 + 16);
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[7];
  uint64_t v10 = v2[8];
  uint64_t v11 = v2[9];
  uint64_t v16 = v2[10];
  a2[3] = a1;
  char v12 = *((unsigned char *)v2 + 48);
  a2[4] = sub_1B591DE50();
  uint64_t v13 = swift_allocObject();
  *a2 = v13;
  *(void *)(v13 + 16) = v5;
  *(void *)(v13 + 24) = v4;
  *(unsigned char *)(v13 + 32) = v15;
  *(void *)(v13 + 40) = v6;
  *(void *)(v13 + 48) = v7;
  *(void *)(v13 + 56) = v8;
  *(unsigned char *)(v13 + 64) = v12;
  *(void *)(v13 + 72) = v9;
  *(void *)(v13 + 80) = v10;
  *(void *)(v13 + 88) = v11;
  *(void *)(v13 + 96) = v16;
  swift_bridgeObjectRetain();
  sub_1B591DF74(v6, v7, v8, v12);
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B591B264@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63350);
  a1[4] = sub_1B591DDB8();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B596C0E8((uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B591B2EC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_1B591DF74(v1, v2, v3, v4);
  sub_1B591E078();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591B3B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  char v16 = *((unsigned char *)v2 + 41);
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = v2[8];
  uint64_t v15 = v2[9];
  a2[3] = a1;
  char v12 = *((unsigned char *)v2 + 40);
  a2[4] = sub_1B591E078();
  uint64_t v13 = swift_allocObject();
  *a2 = v13;
  *(void *)(v13 + 16) = v5;
  *(void *)(v13 + 24) = v4;
  *(void *)(v13 + 32) = v6;
  *(void *)(v13 + 40) = v7;
  *(void *)(v13 + 48) = v8;
  *(unsigned char *)(v13 + 56) = v12;
  *(unsigned char *)(v13 + 57) = v16;
  *(void *)(v13 + 64) = v9;
  *(void *)(v13 + 72) = v10;
  *(void *)(v13 + 80) = v11;
  *(void *)(v13 + 88) = v15;
  swift_bridgeObjectRetain();
  sub_1B591DF74(v6, v7, v8, v12);
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B591B4AC@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63378);
  a1[4] = sub_1B591DFE0();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B596CDCC((uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B591B528()
{
  return sub_1B5A1BA88();
}

uint64_t sub_1B591B5BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  a2[3] = a1;
  a2[4] = sub_1B591E138();
  char v12 = (void *)swift_allocObject();
  *a2 = v12;
  v12[2] = v5;
  v12[3] = v4;
  v12[4] = v6;
  _OWORD v12[5] = v7;
  v12[6] = v8;
  v12[7] = v9;
  v12[8] = v11;
  v12[9] = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B591B66C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633A0);
  a1[4] = sub_1B59095C8(&qword_1E9D633A8, &qword_1E9D633A0);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  uint64_t *boxed_opaque_existential_1 = v3;
  boxed_opaque_existential_1[1] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B0);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
  sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
  return sub_1B5A1BB28();
}

uint64_t sub_1B591B7AC(uint64_t a1, uint64_t a2)
{
  return sub_1B591B838(a1, a2, (void (*)(uint64_t))sub_1B591E1DC);
}

uint64_t sub_1B591B7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>)
{
  return sub_1B591B900(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_1B591E1DC, (uint64_t)&unk_1F0EA89A0, a3, a4, a5, a6, a7);
}

uint64_t sub_1B591B7E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B591B9EC(&qword_1E9D633D0, &qword_1E9D633D8, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_1B596DFA4, a1);
}

uint64_t sub_1B591B820(uint64_t a1, uint64_t a2)
{
  return sub_1B591B838(a1, a2, (void (*)(uint64_t))sub_1B591E29C);
}

uint64_t sub_1B591B838(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  long long v5 = *(_OWORD *)(v3 + 112);
  v11[6] = *(_OWORD *)(v3 + 96);
  v11[7] = v5;
  long long v6 = *(_OWORD *)(v3 + 48);
  v11[2] = *(_OWORD *)(v3 + 32);
  void v11[3] = v6;
  long long v7 = *(_OWORD *)(v3 + 80);
  v11[4] = *(_OWORD *)(v3 + 64);
  v11[5] = v7;
  long long v8 = *(_OWORD *)(v3 + 16);
  v11[0] = *(_OWORD *)v3;
  v11[1] = v8;
  uint64_t v12 = *(void *)(v3 + 128);
  uint64_t v9 = sub_1B591E388((uint64_t)v11);
  a3(v9);
  return sub_1B5A1BA88();
}

uint64_t sub_1B591B8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>)
{
  return sub_1B591B900(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_1B591E29C, (uint64_t)&unk_1F0EA89C8, a3, a4, a5, a6, a7);
}

uint64_t sub_1B591B900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  long long v11 = v9[7];
  long long v27 = v9[6];
  long long v28 = v11;
  uint64_t v29 = *((void *)v9 + 16);
  long long v12 = v9[3];
  long long v23 = v9[2];
  long long v24 = v12;
  long long v13 = v9[5];
  long long v25 = v9[4];
  long long v26 = v13;
  long long v14 = v9[1];
  long long v21 = *v9;
  long long v22 = v14;
  a9[3] = a1;
  a9[4] = a3(a1, a2, a3, a4, a5, a6, a7, a8, v21, *((void *)&v21 + 1), v22, *((void *)&v22 + 1), v23, *((void *)&v23 + 1), v24, *((void *)&v24 + 1), v25);
  uint64_t v15 = swift_allocObject();
  *a9 = v15;
  long long v16 = v9[7];
  *(_OWORD *)(v15 + 112) = v9[6];
  *(_OWORD *)(v15 + 128) = v16;
  *(void *)(v15 + 144) = *((void *)v9 + 16);
  long long v17 = v9[3];
  *(_OWORD *)(v15 + 48) = v9[2];
  *(_OWORD *)(v15 + 64) = v17;
  long long v18 = v9[5];
  *(_OWORD *)(v15 + 80) = v9[4];
  *(_OWORD *)(v15 + 96) = v18;
  long long v19 = v9[1];
  *(_OWORD *)(v15 + 16) = *v9;
  *(_OWORD *)(v15 + 32) = v19;
  return sub_1B591E388((uint64_t)&v21);
}

uint64_t sub_1B591B9B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B591B9EC(&qword_1E9D633E8, &qword_1E9D633F0, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_1B596E514, a1);
}

uint64_t sub_1B591B9EC@<X0>(uint64_t *a1@<X2>, unint64_t *a2@<X3>, uint64_t (*a3)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void)@<X5>, uint64_t *a4@<X8>)
{
  long long v20 = v4[2];
  long long v21 = v4[3];
  long long v22 = v4[4];
  long long v18 = *v4;
  long long v19 = v4[1];
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(a1);
  a4[4] = sub_1B59095C8(a2, a1);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4);
  return a3(boxed_opaque_existential_1, v10, v11, v12, v13, v14, v15, v16, v18, *((void *)&v18 + 1), v19, *((void *)&v19 + 1), v20, *((void *)&v20 + 1), v21, *((void *)&v21 + 1), v22);
}

uint64_t sub_1B591BA94()
{
  return sub_1B5A1BA88();
}

uint64_t sub_1B591BB2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  a2[3] = a1;
  a2[4] = sub_1B591EF80();
  uint64_t v10 = (void *)swift_allocObject();
  *a2 = v10;
  v10[2] = v5;
  void v10[3] = v4;
  v10[4] = v6;
  _OWORD v10[5] = v7;
  v10[6] = v9;
  v10[7] = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B591BBD4@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63518);
  a1[4] = sub_1B59095C8(&qword_1E9D63520, &qword_1E9D63518);
  __swift_allocate_boxed_opaque_existential_1(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63528);
  sub_1B5A1BA28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B59095C8(&qword_1E9D63530, &qword_1E9D62E80);
  sub_1B59095C8(&qword_1E9D63538, &qword_1E9D62E80);
  sub_1B59095C8(&qword_1E9D63540, &qword_1E9D62E80);
  sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  sub_1B591EF2C();
  return sub_1B5A1A758();
}

uint64_t sub_1B591BDAC()
{
  sub_1B591F0DC(v0, (uint64_t)&v2);
  sub_1B591F034();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591BDF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591BE28(a1, (uint64_t (*)(void))sub_1B591F034, sub_1B591F0DC, a2);
}

uint64_t sub_1B591BE28@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X2>, uint64_t (*a3)(uint64_t, uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  a4[3] = a1;
  a4[4] = a2();
  uint64_t v6 = swift_allocObject();
  *a4 = v6;
  return a3(v4, v6 + 16);
}

uint64_t sub_1B591BEA4@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63558);
  a1[4] = sub_1B59095C8(&qword_1E9D63560, &qword_1E9D63558);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B5A1A668();
}

uint64_t sub_1B591BF4C()
{
  sub_1B591F398(v0, (uint64_t)&v2);
  sub_1B591F264();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591BF94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = a1;
  a2[4] = sub_1B591F264();
  uint64_t v4 = swift_allocObject();
  *a2 = v4;
  return sub_1B591F398(v2, v4 + 16);
}

uint64_t sub_1B591BFF0@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63570);
  a1[4] = sub_1B591F138(&qword_1E9D63578, &qword_1E9D63570, (void (*)(void))sub_1B591F1A4);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B5971EA0((uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B591C078()
{
  sub_1B59201A8(v0, (uint64_t)v2);
  sub_1B59200CC();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591C0C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591C5D0(a1, (uint64_t (*)(void))sub_1B59200CC, sub_1B59201A8, a2);
}

uint64_t sub_1B591C0F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B591C680(&qword_1E9D636C0, (uint64_t (*)(void))sub_1B591FF90, (uint64_t (*)(void))sub_1B59763C4, a1);
}

uint64_t sub_1B591C128()
{
  sub_1B591ED18(v0, (uint64_t)v2);
  sub_1B591EC4C();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591C170@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = a1;
  a2[4] = sub_1B591EC4C();
  uint64_t v4 = swift_allocObject();
  *a2 = v4;
  return sub_1B591ED18(v2, v4 + 16);
}

uint64_t sub_1B591C1CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B597B968(&v5);
  uint64_t v3 = v5;
  uint64_t v4 = MEMORY[0x1E4F3EDF8];
  a1[3] = MEMORY[0x1E4F3EE00];
  a1[4] = v4;
  *a1 = v3;
  return result;
}

uint64_t sub_1B591C218()
{
  return sub_1B5A1BA88();
}

uint64_t sub_1B591C280@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v6 = v2[2];
  a2[3] = a1;
  a2[4] = sub_1B592024C();
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B591C2E0@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_1B5A1A488();
  a1[4] = sub_1B5920204(&qword_1E9D63708, MEMORY[0x1E4F3C4E8]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1B5A1A478();
}

uint64_t sub_1B591C354()
{
  long long v1 = v0[7];
  v6[6] = v0[6];
  v6[7] = v1;
  v6[8] = v0[8];
  long long v2 = v0[3];
  _OWORD v6[2] = v0[2];
  void v6[3] = v2;
  long long v3 = v0[5];
  v6[4] = v0[4];
  v6[5] = v3;
  long long v4 = v0[1];
  v6[0] = *v0;
  v6[1] = v4;
  sub_1B591E83C((uint64_t)v6);
  sub_1B591E750();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591C3E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v4 = v2[7];
  v14[6] = v2[6];
  v14[7] = v4;
  v14[8] = v2[8];
  long long v5 = v2[3];
  v14[2] = v2[2];
  v14[3] = v5;
  long long v6 = v2[5];
  v14[4] = v2[4];
  v14[5] = v6;
  long long v7 = v2[1];
  v14[0] = *v2;
  v14[1] = v7;
  a2[3] = a1;
  a2[4] = sub_1B591E750();
  uint64_t v8 = (_OWORD *)swift_allocObject();
  *a2 = v8;
  long long v9 = v2[7];
  v8[7] = v2[6];
  v8[8] = v9;
  v8[9] = v2[8];
  long long v10 = v2[3];
  v8[3] = v2[2];
  v8[4] = v10;
  long long v11 = v2[5];
  v8[5] = v2[4];
  v8[6] = v11;
  long long v12 = v2[1];
  v8[1] = *v2;
  v8[2] = v12;
  return sub_1B591E83C((uint64_t)v14);
}

uint64_t sub_1B591C48C@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[7];
  long long v20 = v1[6];
  long long v21 = v3;
  long long v22 = v1[8];
  long long v4 = v1[3];
  long long v16 = v1[2];
  long long v17 = v4;
  long long v5 = v1[5];
  long long v18 = v1[4];
  long long v19 = v5;
  long long v6 = v1[1];
  long long v14 = *v1;
  long long v15 = v6;
  sub_1B59E97B8((uint64_t)&v11);
  uint64_t v7 = v11;
  char v8 = v12;
  char v9 = v13;
  *(void *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63460);
  uint64_t result = sub_1B591DB20((unint64_t *)&qword_1E9D63468, &qword_1E9D63460, (void (*)(void))sub_1B591E6DC);
  *(void *)(a1 + 32) = result;
  *(void *)a1 = v7;
  *(unsigned char *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 9) = v9;
  return result;
}

uint64_t sub_1B591C554()
{
  sub_1B591EAC0(v0, (uint64_t)v2);
  sub_1B591E9E4();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591C59C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591C5D0(a1, (uint64_t (*)(void))sub_1B591E9E4, sub_1B591EAC0, a2);
}

uint64_t sub_1B591C5D0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X2>, uint64_t (*a3)(uint64_t, uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  a4[3] = a1;
  a4[4] = a2();
  uint64_t v6 = swift_allocObject();
  *a4 = v6;
  return a3(v4, v6 + 16);
}

uint64_t sub_1B591C64C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B591C680(&qword_1E9D63488, (uint64_t (*)(void))sub_1B591E924, (uint64_t (*)(void))sub_1B59EA920, a1);
}

uint64_t sub_1B591C680@<X0>(uint64_t *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(a1);
  a4[4] = a2();
  __swift_allocate_boxed_opaque_existential_1(a4);
  return a3();
}

uint64_t sub_1B591C6DC(uint64_t a1, uint64_t a2)
{
  return sub_1B591A24C(a1, a2, (uint64_t)type metadata accessor for ColorSchemeReader, &qword_1E9D63680, (void (*)(uint64_t))type metadata accessor for ColorSchemeReader);
}

uint64_t sub_1B591C724@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591A340(a1, &qword_1E9D63680, (void (*)(uint64_t))type metadata accessor for ColorSchemeReader, (uint64_t (*)(void))type metadata accessor for ColorSchemeReader, a2);
}

__n128 sub_1B591C76C@<Q0>(__n128 *a1@<X8>)
{
  sub_1B5A14144((uint64_t *)&v6);
  unint64_t v2 = v7;
  unint64_t v3 = sub_1B59080C4();
  __n128 v5 = v6;
  a1[1].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62CC8);
  a1[2].n128_u64[0] = v3;
  __n128 result = v5;
  *a1 = v5;
  a1[1].n128_u64[0] = v2;
  return result;
}

uint64_t sub_1B591C7D4()
{
  sub_1B591FCE0(v0, (uint64_t)&v2);
  sub_1B591FD48();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591C81C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591C850(a1, (uint64_t (*)(void))sub_1B591FD48, sub_1B591FCE0, a2);
}

uint64_t sub_1B591C850@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X2>, uint64_t (*a3)(uint64_t, uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  a4[3] = a1;
  a4[4] = a2();
  uint64_t v6 = swift_allocObject();
  *a4 = v6;
  return a3(v4, v6 + 16);
}

uint64_t sub_1B591C8CC@<X0>(uint64_t (**a1)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  sub_1B591FCE0(v1, (uint64_t)v8);
  unint64_t v3 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
  long long v4 = v8[5];
  *((_OWORD *)v3 + 5) = v8[4];
  *((_OWORD *)v3 + 6) = v4;
  *((_OWORD *)v3 + 7) = v8[6];
  long long v5 = v8[1];
  *((_OWORD *)v3 + 1) = v8[0];
  *((_OWORD *)v3 + 2) = v5;
  long long v6 = v8[3];
  *((_OWORD *)v3 + 3) = v8[2];
  *((_OWORD *)v3 + 4) = v6;
  a1[3] = (uint64_t (*)@<X0>(uint64_t *@<X8>))__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63688);
  uint64_t result = sub_1B59095C8(&qword_1E9D63690, &qword_1E9D63688);
  a1[4] = (uint64_t (*)@<X0>(uint64_t *@<X8>))result;
  *a1 = sub_1B591FD40;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B591C990()
{
  sub_1B591FE08(v0, (uint64_t)&v2);
  sub_1B591FE70();
  return sub_1B5A1BA88();
}

uint64_t sub_1B591C9D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B591CA0C(a1, (uint64_t (*)(void))sub_1B591FE70, sub_1B591FE08, a2);
}

uint64_t sub_1B591CA0C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X2>, uint64_t (*a3)(uint64_t, uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  a4[3] = a1;
  a4[4] = a2();
  uint64_t v6 = swift_allocObject();
  *a4 = v6;
  return a3(v4, v6 + 16);
}

uint64_t sub_1B591CA88@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)@<X8>)
{
  sub_1B591FE08(v1, (uint64_t)v9);
  unint64_t v3 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))swift_allocObject();
  long long v4 = v9[5];
  *((_OWORD *)v3 + 5) = v9[4];
  *((_OWORD *)v3 + 6) = v4;
  long long v5 = v9[7];
  *((_OWORD *)v3 + 7) = v9[6];
  *((_OWORD *)v3 + 8) = v5;
  long long v6 = v9[1];
  *((_OWORD *)v3 + 1) = v9[0];
  *((_OWORD *)v3 + 2) = v6;
  long long v7 = v9[3];
  *((_OWORD *)v3 + 3) = v9[2];
  *((_OWORD *)v3 + 4) = v7;
  a1[3] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D636A0);
  uint64_t result = sub_1B59095C8(&qword_1E9D636A8, &qword_1E9D636A0);
  a1[4] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))result;
  *a1 = sub_1B591FE68;
  a1[1] = v3;
  return result;
}

unint64_t sub_1B591CB4C()
{
  unint64_t result = qword_1E9D632C8;
  if (!qword_1E9D632C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D632C8);
  }
  return result;
}

uint64_t sub_1B591CBA0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1B591CBD8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B591CC10(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B591CC40()
{
  unint64_t result = qword_1E9D632D0;
  if (!qword_1E9D632D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D632D0);
  }
  return result;
}

uint64_t sub_1B591CC94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

unint64_t sub_1B591CD0C()
{
  unint64_t result = qword_1E9D632F0;
  if (!qword_1E9D632F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D632E8);
    sub_1B591D6A4((unint64_t *)&qword_1E9D632E0, &qword_1E9D632D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D632F0);
  }
  return result;
}

unint64_t sub_1B591CDA8(uint64_t a1)
{
  unint64_t result = sub_1B5914100();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B591CDD0()
{
  return MEMORY[0x1E4FBB1B0];
}

uint64_t sub_1B591CDDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of StringIdentified.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnyViewContent.anyView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyViewContent.view.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AnyViewContent.partialBody.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ModifiableView.unmodifiedBody.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for ViewContent(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  if (*(void *)(a1 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ViewContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = a2 + 40;
  uint64_t v7 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 40, v6, v7);
  }
  else
  {
    long long v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(void *)(a1 + 72) = *(void *)(v6 + 32);
  }
  long long v10 = (_OWORD *)(a1 + 80);
  uint64_t v11 = (_OWORD *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 104);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v12;
    *(void *)(a1 + 112) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 96);
    *long long v10 = *v11;
    *(_OWORD *)(a1 + 96) = v14;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  uint64_t v15 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v15;
  uint64_t v16 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v16;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ViewContent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  else if (v4)
  {
    *(void *)(a1 + 64) = v4;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 56) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 104);
  if (!*(void *)(a1 + 104))
  {
    if (v7)
    {
      *(void *)(a1 + 104) = v7;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 80, a2 + 80);
      goto LABEL_15;
    }
LABEL_14:
    long long v8 = *(_OWORD *)(a2 + 80);
    long long v9 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v8;
    *(_OWORD *)(a1 + 96) = v9;
    goto LABEL_15;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
LABEL_15:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ViewContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (*(void *)(a1 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_release();
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewContent()
{
  return &type metadata for ViewContent;
}

uint64_t sub_1B591D39C()
{
  return MEMORY[0x1E4F3EDF8];
}

uint64_t sub_1B591D3A8()
{
  return MEMORY[0x1E4F3EDF8];
}

unsigned char *storeEnumTagSinglePayload for ViewContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B591D480);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewContent.CodingKeys()
{
  return &type metadata for ViewContent.CodingKeys;
}

unint64_t sub_1B591D4BC()
{
  unint64_t result = qword_1E9D63300;
  if (!qword_1E9D63300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63300);
  }
  return result;
}

unint64_t sub_1B591D514()
{
  unint64_t result = qword_1E9D63308;
  if (!qword_1E9D63308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63308);
  }
  return result;
}

unint64_t sub_1B591D56C()
{
  unint64_t result = qword_1E9D63310;
  if (!qword_1E9D63310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63310);
  }
  return result;
}

uint64_t sub_1B591D5C0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1B5908BE8(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1B591D658()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B591D6A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B591D70C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_1B591D6A4((unint64_t *)&qword_1E9D62C60, &qword_1E9D62C68);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B591D7B8()
{
  sub_1B591D824(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(_WORD *)(v0 + 104), *(unsigned char *)(v0 + 106));
  return MEMORY[0x1F4186498](v0, 107, 7);
}

uint64_t sub_1B591D824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int16 a12, char a13)
{
  if (a13)
  {
    __int16 v17 = a12 & 0x1FF;
    return sub_1B591D8D8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, v17, SHIBYTE(v17));
  }
  else
  {
    swift_release();
    sub_1B5908888(a2);
    return sub_1B5908888(a4);
  }
}

uint64_t sub_1B591D8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13)
{
  if (a13) {
    return sub_1B590882C(a1, a2, a3, a4);
  }
  else {
    return sub_1B591D908(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1);
  }
}

uint64_t sub_1B591D908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  swift_release();
  if (a12)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1B5908888(a8);
  }
  else
  {
    sub_1B5908888(a2);
    a10 = a4;
  }
  return sub_1B5908888(a10);
}

uint64_t sub_1B591D9E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B591DA40()
{
  unint64_t result = qword_1E9D63318;
  if (!qword_1E9D63318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63318);
  }
  return result;
}

uint64_t sub_1B591DA94()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1B591DACC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B591DB20(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B591DB9C()
{
  unint64_t result = qword_1E9D63338;
  if (!qword_1E9D63338)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63338);
  }
  return result;
}

uint64_t sub_1B591DC08()
{
  sub_1B591DC4C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(unsigned char *)(v0 + 49));
  return MEMORY[0x1F4186498](v0, 50, 7);
}

uint64_t sub_1B591DC4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    return sub_1B591DCC0(a1, a2, a3);
  }
  else
  {
    sub_1B591DCB0(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B591DCB0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B591DCC0(uint64_t a1, uint64_t a2, char a3)
{
  sub_1B591DCB0(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B591DCFC()
{
  unint64_t result = qword_1E9D63348;
  if (!qword_1E9D63348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63348);
  }
  return result;
}

uint64_t sub_1B591DD50()
{
  swift_bridgeObjectRelease();
  sub_1B591DDA8(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1B591DDA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B5904A88(a1, a2, a3, a4 & 0xDF);
}

uint64_t sub_1B591DDB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B5904B60(a1, a2, a3, a4 & 0xDF);
}

unint64_t sub_1B591DDB8()
{
  unint64_t result = qword_1E9D63358;
  if (!qword_1E9D63358)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63350);
    sub_1B59095C8(&qword_1E9D63360, &qword_1E9D63368);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63358);
  }
  return result;
}

unint64_t sub_1B591DE50()
{
  unint64_t result = qword_1E9D63370;
  if (!qword_1E9D63370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63370);
  }
  return result;
}

uint64_t sub_1B591DEA4()
{
  swift_bridgeObjectRelease();
  unsigned int v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 <= 0xFD) {
    sub_1B591DF0C(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 104, 7);
}

void sub_1B591DF0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 < 0)
  {
    swift_release();
    swift_release();
  }
  else
  {
    char v4 = a4 & 1;
    sub_1B590D6F0(a1, a2, a3, v4);
  }
}

void sub_1B591DF74(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 <= 0xFDu) {
    sub_1B591DF88(a1, a2, a3, a4);
  }
}

void sub_1B591DF88(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 < 0)
  {
    swift_retain();
    swift_retain();
  }
  else
  {
    char v5 = a4 & 1;
    sub_1B590D634(a1, a2, a3, v5);
  }
}

unint64_t sub_1B591DFE0()
{
  unint64_t result = qword_1E9D63380;
  if (!qword_1E9D63380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63378);
    sub_1B59095C8(&qword_1E9D63388, &qword_1E9D63390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63380);
  }
  return result;
}

unint64_t sub_1B591E078()
{
  unint64_t result = qword_1E9D63398;
  if (!qword_1E9D63398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63398);
  }
  return result;
}

uint64_t sub_1B591E0CC()
{
  swift_bridgeObjectRelease();
  unsigned int v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 <= 0xFD) {
    sub_1B591DF0C(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

unint64_t sub_1B591E138()
{
  unint64_t result = qword_1E9D633C8;
  if (!qword_1E9D633C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D633C8);
  }
  return result;
}

uint64_t sub_1B591E18C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

unint64_t sub_1B591E1DC()
{
  unint64_t result = qword_1E9D633E0;
  if (!qword_1E9D633E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D633E0);
  }
  return result;
}

void sub_1B591E234(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  if (a4 != 254)
  {
    sub_1B590F04C(a1, a2, a3, a4);
    sub_1B590F04C(a5, a6, a7, a8);
  }
}

unint64_t sub_1B591E29C()
{
  unint64_t result = qword_1E9D633F8;
  if (!qword_1E9D633F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D633F8);
  }
  return result;
}

uint64_t objectdestroy_34Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v1 = *(void *)(v0 + 96);
  if (v1 != 254)
  {
    if (v1 != 255) {
      sub_1B590D6F0(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96) & 1);
    }
    int v2 = *(unsigned __int8 *)(v0 + 128);
    if (v2 != 255) {
      sub_1B590D6F0(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), v2 & 1);
    }
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, 152, 7);
}

uint64_t sub_1B591E388(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v10 = *(void *)(a1 + 56);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B591E234(v10, v2, v3, v4, v5, v6, v7, v8);
  swift_retain();
  return a1;
}

uint64_t sub_1B591E438()
{
  return sub_1B592E14C();
}

unint64_t sub_1B591E440()
{
  unint64_t result = qword_1E9D63420;
  if (!qword_1E9D63420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63420);
  }
  return result;
}

unint64_t sub_1B591E498()
{
  unint64_t result = qword_1E9D63430;
  if (!qword_1E9D63430)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63428);
    sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
    sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63430);
  }
  return result;
}

uint64_t sub_1B591E560(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B591E5BC()
{
  unint64_t result = qword_1E9D63448;
  if (!qword_1E9D63448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63448);
  }
  return result;
}

uint64_t sub_1B591E610()
{
  return objectdestroy_43Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1B591E628(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B591E684()
{
  unint64_t result = qword_1E9D63458;
  if (!qword_1E9D63458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63458);
  }
  return result;
}

unint64_t sub_1B591E6DC()
{
  unint64_t result = qword_1E9D63470;
  if (!qword_1E9D63470)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63470);
  }
  return result;
}

unint64_t sub_1B591E750()
{
  unint64_t result = qword_1E9D63480;
  if (!qword_1E9D63480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63480);
  }
  return result;
}

uint64_t sub_1B591E7A4()
{
  swift_bridgeObjectRelease();
  unsigned int v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), v1);
  }
  unsigned int v2 = *(unsigned __int8 *)(v0 + 88);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), v2);
  }
  unsigned int v3 = *(unsigned __int8 *)(v0 + 120);
  if (v3 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 160, 7);
}

uint64_t sub_1B591E83C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 96);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 72);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 104);
  swift_bridgeObjectRetain();
  sub_1B5904BDC(v2, v3, v4, v8);
  sub_1B5904BDC(v5, v6, v7, v9);
  sub_1B5904BDC(v14, v13, v12, v10);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1B591E924()
{
  unint64_t result = qword_1E9D63490;
  if (!qword_1E9D63490)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63488);
    sub_1B59095C8(&qword_1E9D63498, &qword_1E9D634A0);
    sub_1B59095C8(&qword_1E9D634A8, &qword_1E9D634B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63490);
  }
  return result;
}

unint64_t sub_1B591E9E4()
{
  unint64_t result = qword_1E9D634B8;
  if (!qword_1E9D634B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D634B8);
  }
  return result;
}

uint64_t sub_1B591EA38()
{
  swift_bridgeObjectRelease();
  unsigned int v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), v1);
  }
  sub_1B591DF0C(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 128)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B591EAC0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B591EB1C()
{
  unint64_t result = qword_1E9D634C0;
  if (!qword_1E9D634C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D634C0);
  }
  return result;
}

unint64_t sub_1B591EB74()
{
  unint64_t result = qword_1E9D634D0;
  if (!qword_1E9D634D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D634C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D634D0);
  }
  return result;
}

unint64_t sub_1B591EBE0()
{
  unint64_t result = qword_1E9D634D8;
  if (!qword_1E9D634D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D634D8);
  }
  return result;
}

uint64_t sub_1B591EC34()
{
  return objectdestroy_58Tm((void (*)(void, void, void))sub_1B591DF0C);
}

unint64_t sub_1B591EC4C()
{
  unint64_t result = qword_1E9D634E0;
  if (!qword_1E9D634E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D634E0);
  }
  return result;
}

uint64_t sub_1B591ECA0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  unsigned int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), v1);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 152, 7);
}

uint64_t sub_1B591ED18(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B591ED74()
{
  unint64_t result = qword_1E9D634F0;
  if (!qword_1E9D634F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D634E8);
    sub_1B59095C8(&qword_1E9D634F8, &qword_1E9D63500);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D634F0);
  }
  return result;
}

uint64_t sub_1B591EE14(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B591EE70()
{
  unint64_t result = qword_1E9D63510;
  if (!qword_1E9D63510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63510);
  }
  return result;
}

uint64_t sub_1B591EEC8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B591EF24()
{
  return sub_1B5971398();
}

unint64_t sub_1B591EF2C()
{
  unint64_t result = qword_1E9D63548;
  if (!qword_1E9D63548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63548);
  }
  return result;
}

unint64_t sub_1B591EF80()
{
  unint64_t result = qword_1E9D63550;
  if (!qword_1E9D63550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63550);
  }
  return result;
}

uint64_t sub_1B591EFD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B591F02C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B59402EC(*(void **)(v1 + 16), a1);
}

unint64_t sub_1B591F034()
{
  unint64_t result = qword_1E9D63568;
  if (!qword_1E9D63568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63568);
  }
  return result;
}

uint64_t objectdestroy_64Tm()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1B591F0DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B591F138(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B591F1A4()
{
  unint64_t result = qword_1E9D63580;
  if (!qword_1E9D63580)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63588);
    sub_1B59095C8(&qword_1E9D63590, &qword_1E9D63598);
    sub_1B59095C8(&qword_1E9D635A0, &qword_1E9D635A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63580);
  }
  return result;
}

unint64_t sub_1B591F264()
{
  unint64_t result = qword_1E9D635B0;
  if (!qword_1E9D635B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D635B0);
  }
  return result;
}

uint64_t sub_1B591F2B8()
{
  swift_bridgeObjectRelease();
  sub_1B5904A88(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  if (*(void *)(v0 + 88)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  }
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 136);
  if (v1 != 255) {
    sub_1B591F344(*(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), v1 & 1);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 176, 7);
}

uint64_t sub_1B591F344(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return sub_1B5905298(a3);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1B591F398(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B591F3F4()
{
  unint64_t result = qword_1E9D635C8;
  if (!qword_1E9D635C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D635C8);
  }
  return result;
}

uint64_t sub_1B591F448()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_bridgeObjectRelease();
  sub_1B590D6F0(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(unsigned char *)(v0 + 104));
  swift_release();
  return MEMORY[0x1F4186498](v0, 128, 7);
}

uint64_t sub_1B591F4A8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B591F504@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B594034C(*(void **)(v1 + 16), a1);
}

unint64_t sub_1B591F50C()
{
  unint64_t result = qword_1E9D635E0;
  if (!qword_1E9D635E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D635E0);
  }
  return result;
}

uint64_t sub_1B591F560()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 136, 7);
}

uint64_t sub_1B591F5B8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B591F614@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B593F064(*(void **)(v1 + 16), a1);
}

unint64_t sub_1B591F61C()
{
  unint64_t result = qword_1E9D635F8;
  if (!qword_1E9D635F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D635F8);
  }
  return result;
}

uint64_t sub_1B591F670()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1B591F6C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B591F71C()
{
  unint64_t result = qword_1E9D63608;
  if (!qword_1E9D63608)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63600);
    sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63608);
  }
  return result;
}

unint64_t sub_1B591F7B4()
{
  unint64_t result = qword_1E9D63610;
  if (!qword_1E9D63610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63610);
  }
  return result;
}

unint64_t sub_1B591F80C()
{
  unint64_t result = qword_1E9D63618;
  if (!qword_1E9D63618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63618);
  }
  return result;
}

uint64_t sub_1B591F860()
{
  return objectdestroy_43Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_43Tm(void (*a1)(void))
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1[8]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 5));
  }
  if (v1[13]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 10));
  }
  a1(v1[15]);
  swift_release();
  return MEMORY[0x1F4186498](v1, 144, 7);
}

uint64_t sub_1B591F8F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B591F954()
{
  unint64_t result = qword_1E9D63628;
  if (!qword_1E9D63628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63620);
    sub_1B591F138(&qword_1E9D63630, &qword_1E9D63638, (void (*)(void))sub_1B59080C4);
    sub_1B591F138(&qword_1E9D63640, &qword_1E9D63648, (void (*)(void))sub_1B591FA3C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63628);
  }
  return result;
}

unint64_t sub_1B591FA3C()
{
  unint64_t result = qword_1E9D63650;
  if (!qword_1E9D63650)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63658);
    sub_1B59080C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63650);
  }
  return result;
}

unint64_t sub_1B591FAB0()
{
  unint64_t result = qword_1E9D63660;
  if (!qword_1E9D63660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63660);
  }
  return result;
}

uint64_t sub_1B591FB04()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  sub_1B5905248(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 144, 7);
}

uint64_t sub_1B591FB6C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B591FBC8()
{
  return sub_1B594275C();
}

unint64_t sub_1B591FBD0()
{
  unint64_t result = qword_1E9D63678;
  if (!qword_1E9D63678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63678);
  }
  return result;
}

uint64_t objectdestroy_40Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B591FC78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B591FCE0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B591FD40@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B5A14D80((void *)(v1 + 16), a1);
}

unint64_t sub_1B591FD48()
{
  unint64_t result = qword_1E9D63698;
  if (!qword_1E9D63698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63698);
  }
  return result;
}

uint64_t objectdestroy_97Tm()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  unsigned int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 128, 7);
}

uint64_t sub_1B591FE08(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B591FE68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B5A15AE0(a1, (void *)(v2 + 16), a2);
}

unint64_t sub_1B591FE70()
{
  unint64_t result = qword_1E9D636B0;
  if (!qword_1E9D636B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D636B0);
  }
  return result;
}

uint64_t objectdestroy_103Tm()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  unsigned int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 144, 7);
}

unint64_t sub_1B591FF38()
{
  unint64_t result = qword_1E9D636B8;
  if (!qword_1E9D636B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D636B8);
  }
  return result;
}

unint64_t sub_1B591FF90()
{
  unint64_t result = qword_1E9D636C8;
  if (!qword_1E9D636C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D636C0);
    sub_1B592000C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D636C8);
  }
  return result;
}

unint64_t sub_1B592000C()
{
  unint64_t result = qword_1E9D636D0;
  if (!qword_1E9D636D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D636D8);
    sub_1B59095C8(&qword_1E9D636E0, &qword_1E9D636E8);
    sub_1B59095C8(&qword_1E9D636F0, &qword_1E9D636F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D636D0);
  }
  return result;
}

unint64_t sub_1B59200CC()
{
  unint64_t result = qword_1E9D63700;
  if (!qword_1E9D63700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63700);
  }
  return result;
}

uint64_t sub_1B5920120()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), v1);
  }
  if (*(void *)(v0 + 96)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  }
  swift_bridgeObjectRelease();
  sub_1B591F344(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(unsigned char *)(v0 + 144));
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B59201A8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5920204(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B592024C()
{
  unint64_t result = qword_1E9D63710;
  if (!qword_1E9D63710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63710);
  }
  return result;
}

uint64_t sub_1B59202A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 72);
  swift_bridgeObjectRetain();
  sub_1B590F04C(v2, v3, v4, v8);
  sub_1B5904BDC(v5, v6, v7, v9);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B592034C()
{
  uint64_t v1 = sub_1B5A1A808();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + *(int *)(v1 + 20) + v4;
  uint64_t v8 = sub_1B5A1AB78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1B592042C(double a1, double a2, double a3, double a4)
{
  return sub_1B59205EC(MEMORY[0x1E4F3CDB8], (uint64_t (*)(uint64_t, __n128, __n128, __n128, __n128))sub_1B5909AE0, a1, a2, a3, a4);
}

uint64_t sub_1B5920458()
{
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 != 255) {
    sub_1B590D6F0(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), v1 & 1);
  }
  unsigned int v2 = *(unsigned __int8 *)(v0 + 88);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), v2);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1B59204D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 40);
  swift_bridgeObjectRetain();
  sub_1B5904BDC(v2, v3, v4, v5);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B5920554(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B59205BC(double a1, double a2, double a3, double a4)
{
  return sub_1B59205EC(MEMORY[0x1E4F3EE58], (uint64_t (*)(uint64_t, __n128, __n128, __n128, __n128))sub_1B5909AC8, a1, a2, a3, a4);
}

uint64_t sub_1B59205EC(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, __n128, __n128, __n128, __n128), double a3, double a4, double a5, double a6)
{
  uint64_t v11 = *(void *)(a1(0) - 8);
  uint64_t v12 = v6 + ((*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v13.n128_f64[0] = a3;
  v14.n128_f64[0] = a4;
  v15.n128_f64[0] = a5;
  v16.n128_f64[0] = a6;
  return a2(v12, v13, v14, v15, v16);
}

uint64_t sub_1B59206A8()
{
  return objectdestroy_58Tm((void (*)(void, void, void))sub_1B5904A88);
}

uint64_t objectdestroy_58Tm(void (*a1)(void, void, void))
{
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v1 + 56) <= 0xFDu) {
    a1(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
  }
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v1, 88, 7);
}

uint64_t objectdestroy_46Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t destroy for MaskModifier(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 24)) {
    unint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
  }
  unsigned int v2 = *(unsigned __int8 *)(v1 + 64);
  if (v2 <= 0xFD)
  {
    uint64_t v3 = *(void *)(v1 + 40);
    uint64_t v4 = *(void *)(v1 + 48);
    uint64_t v5 = *(void *)(v1 + 56);
    return sub_1B5904A88(v3, v4, v5, v2);
  }
  return result;
}

uint64_t initializeWithCopy for MaskModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  unsigned int v7 = *(unsigned __int8 *)(a2 + 64);
  if (v7 <= 0xFD)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    uint64_t v10 = *(void *)(a2 + 56);
    sub_1B5904B60(v8, v9, v10, v7);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    *(unsigned char *)(a1 + 64) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  }
  return a1;
}

uint64_t assignWithCopy for MaskModifier(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v5 = *a2;
  long long v6 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  unsigned int v7 = (_OWORD *)(a1 + 40);
  uint64_t v8 = (long long *)((char *)a2 + 40);
  unsigned int v9 = *((unsigned __int8 *)a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) <= 0xFDu)
  {
    if (v9 <= 0xFD)
    {
      uint64_t v15 = *((void *)a2 + 5);
      uint64_t v16 = *((void *)a2 + 6);
      uint64_t v17 = *((void *)a2 + 7);
      sub_1B5904B60(v15, v16, v17, v9);
      uint64_t v18 = *(void *)(a1 + 40);
      uint64_t v19 = *(void *)(a1 + 48);
      uint64_t v20 = *(void *)(a1 + 56);
      *(void *)(a1 + 40) = v15;
      *(void *)(a1 + 48) = v16;
      *(void *)(a1 + 56) = v17;
      unsigned __int8 v21 = *(unsigned char *)(a1 + 64);
      *(unsigned char *)(a1 + 64) = v9;
      sub_1B5904A88(v18, v19, v20, v21);
    }
    else
    {
      sub_1B590DA50(a1 + 40);
      long long v11 = *(long long *)((char *)a2 + 49);
      *unsigned int v7 = *v8;
      *(_OWORD *)(a1 + 49) = v11;
    }
  }
  else if (v9 <= 0xFD)
  {
    uint64_t v12 = *((void *)a2 + 5);
    uint64_t v13 = *((void *)a2 + 6);
    uint64_t v14 = *((void *)a2 + 7);
    sub_1B5904B60(v12, v13, v14, v9);
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v14;
    *(unsigned char *)(a1 + 64) = v9;
  }
  else
  {
    long long v10 = *v8;
    *(_OWORD *)(a1 + 49) = *(long long *)((char *)a2 + 49);
    *unsigned int v7 = v10;
  }
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for MaskModifier(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 <= 0xFD)
  {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 64);
    if (v6 <= 0xFD)
    {
      uint64_t v7 = *(void *)(a2 + 56);
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v9 = *(void *)(a1 + 48);
      uint64_t v10 = *(void *)(a1 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = v7;
      *(unsigned char *)(a1 + 64) = v6;
      sub_1B5904A88(v8, v9, v10, v5);
      return a1;
    }
    sub_1B590DA50(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for MaskModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MaskModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaskModifier()
{
  return &type metadata for MaskModifier;
}

uint64_t sub_1B5920BCC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned int v6 = a3;
  unsigned int v7 = *(unsigned __int8 *)(v3 + 64);
  if (v7 > 0xFD) {
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(v3 + 40);
  uint64_t v9 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  sub_1B5904B60(v10, v9, v11, v7);
  StringResolvable.resolved(with:)(a2);
  if (v4)
  {

    sub_1B5904B4C(v10, v9, v11, v7);
LABEL_5:
    unsigned int v6 = a3;
LABEL_6:
    uint64_t v12 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    MEMORY[0x1F4188790](v12);
    sub_1B5A1BC48();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63720);
    void v6[3] = sub_1B5A1A748();
    sub_1B59213BC();
    v6[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63440);
    sub_1B5921418();
    return sub_1B5A1B648();
  }
  sub_1B5904B4C(v10, v9, v11, v7);
  if (sub_1B59E17E0() == 9) {
    goto LABEL_5;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  switch(v14)
  {
    case 1:
      uint64_t v15 = sub_1B5A1BC58();
      break;
    case 2:
      uint64_t v15 = sub_1B5A1BC68();
      break;
    case 3:
      uint64_t v15 = sub_1B5A1BC28();
      break;
    case 4:
      uint64_t v15 = sub_1B5A1BC38();
      break;
    case 5:
      uint64_t v15 = sub_1B5A1BBE8();
      break;
    case 6:
      uint64_t v15 = sub_1B5A1BBF8();
      break;
    case 7:
      uint64_t v15 = sub_1B5A1BC08();
      break;
    case 8:
      uint64_t v15 = sub_1B5A1BC18();
      break;
    default:
      uint64_t v15 = sub_1B5A1BC48();
      break;
  }
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63720);
  a3[3] = sub_1B5A1A748();
  sub_1B59213BC();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63440);
  sub_1B5921418();
  return sub_1B5A1B648();
}

uint64_t sub_1B5920F4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B5921484(a1, (uint64_t)v7);
  uint64_t v3 = v8;
  if (v8)
  {
    uint64_t v4 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    uint64_t result = sub_1B59214EC((uint64_t)v7);
    uint64_t v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1B5920FDC(char a1)
{
  if (a1) {
    return 0x6E656D6E67696C61;
  }
  else {
    return 1802723693;
  }
}

uint64_t sub_1B5921010()
{
  return sub_1B5920FDC(*v0);
}

uint64_t sub_1B5921018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B592187C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B5921040(uint64_t a1)
{
  unint64_t v2 = sub_1B592154C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B592107C(uint64_t a1)
{
  unint64_t v2 = sub_1B592154C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59210B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63730);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B592154C();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v8 = v5;
  uint64_t v9 = v21;
  v12[0] = 0;
  sub_1B5914100();
  sub_1B5A1C5D8();
  sub_1B5921484((uint64_t)&v16, (uint64_t)v12);
  sub_1B591CC10((uint64_t)&v13);
  sub_1B59215A0((uint64_t)v12, (uint64_t)v17);
  v12[0] = 1;
  sub_1B5904A34();
  sub_1B5A1C5B8();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v7, v4);
  long long v18 = v13;
  uint64_t v19 = v14;
  char v20 = v15;
  sub_1B5921608((uint64_t)v17, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B5921640((uint64_t)v17);
}

uint64_t sub_1B59212F4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5920BCC(a1, a2, a3);
}

uint64_t sub_1B592130C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59210B8(a1, a2);
}

unint64_t sub_1B5921324(uint64_t a1)
{
  unint64_t result = sub_1B592134C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B592134C()
{
  unint64_t result = qword_1E9D63718;
  if (!qword_1E9D63718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63718);
  }
  return result;
}

uint64_t sub_1B59213A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B5920F4C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1B59213BC()
{
  unint64_t result = qword_1E9D63728;
  if (!qword_1E9D63728)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63728);
  }
  return result;
}

unint64_t sub_1B5921418()
{
  unint64_t result = qword_1E9D63438;
  if (!qword_1E9D63438)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63438);
  }
  return result;
}

uint64_t sub_1B5921484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B59214EC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B592154C()
{
  unint64_t result = qword_1E9D63738;
  if (!qword_1E9D63738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63738);
  }
  return result;
}

uint64_t sub_1B59215A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5921608(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5921640(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for MaskModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B592173CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaskModifier.CodingKeys()
{
  return &type metadata for MaskModifier.CodingKeys;
}

unint64_t sub_1B5921778()
{
  unint64_t result = qword_1E9D63740;
  if (!qword_1E9D63740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63740);
  }
  return result;
}

unint64_t sub_1B59217D0()
{
  unint64_t result = qword_1E9D63748;
  if (!qword_1E9D63748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63748);
  }
  return result;
}

unint64_t sub_1B5921828()
{
  unint64_t result = qword_1E9D63750;
  if (!qword_1E9D63750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63750);
  }
  return result;
}

uint64_t sub_1B592187C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1802723693 && a2 == 0xE400000000000000;
  if (v3 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6E67696C61 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B5921964()
{
  return sub_1B592D24C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t RemoteAction.performAction()()
{
  return sub_1B592D24C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B59219D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9D63768 + dword_1E9D63768);
  char v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *char v6 = v3;
  v6[1] = sub_1B592D9C8;
  return v8(a2, a3);
}

uint64_t RemoteAction.performAction(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9D63768 + dword_1E9D63768);
  char v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *char v6 = v3;
  v6[1] = sub_1B592D9C8;
  return v8(a2, a3);
}

uint64_t sub_1B5921B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E9D63778 + dword_1E9D63778);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1B5921C08;
  return v10(a1, a3, a4);
}

uint64_t sub_1B5921C08()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t RemoteAction.performAction(with:localStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E9D63778 + dword_1E9D63778);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1B592D9C8;
  return v10(a1, a3, a4);
}

uint64_t sub_1B5921DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RemoteAction.performSynchronousAction(with:localStore:)(a1, a2, a3, a4);
}

uint64_t sub_1B5921DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B5A1A328();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
  uint64_t v10 = sub_1B5A1A308();
  os_log_type_t v11 = sub_1B5A1C258();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v20 = a2;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v21 = sub_1B5928EE8(0x6974634165766F4DLL, 0xEA00000000006E6FLL, &v22);
    a2 = v20;
    sub_1B5A1C2D8();
    _os_log_impl(&dword_1B58FD000, v10, v11, "%s has not implemented a synchronous action. Running async.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v13, -1, -1);
    MEMORY[0x1BA9A4780](v12, -1, -1);
  }

  uint64_t v14 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  long long v16 = v3[3];
  *(_OWORD *)(v15 + 64) = v3[2];
  *(_OWORD *)(v15 + 80) = v16;
  *(_OWORD *)(v15 + 96) = v3[4];
  *(_OWORD *)(v15 + 105) = *(_OWORD *)((char *)v3 + 73);
  long long v17 = v3[1];
  *(_OWORD *)(v15 + 32) = *v3;
  *(_OWORD *)(v15 + 48) = v17;
  *(void *)(v15 + 128) = a1;
  *(void *)(v15 + 136) = a2;
  sub_1B592D140((uint64_t)v3);
  swift_retain();
  swift_retain();
  sub_1B5923814((uint64_t)v8, (uint64_t)&unk_1E9D63A28, v15);
  return swift_release();
}

uint64_t sub_1B5922084(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B5A1A328();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
  uint64_t v10 = sub_1B5A1A308();
  os_log_type_t v11 = sub_1B5A1C258();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v19 = a2;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v20 = sub_1B5928EE8(0x63416574656C6544, 0xEC0000006E6F6974, &v21);
    a2 = v19;
    sub_1B5A1C2D8();
    _os_log_impl(&dword_1B58FD000, v10, v11, "%s has not implemented a synchronous action. Running async.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v13, -1, -1);
    MEMORY[0x1BA9A4780](v12, -1, -1);
  }

  uint64_t v14 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  long long v16 = v3[1];
  *(_OWORD *)(v15 + 32) = *v3;
  *(_OWORD *)(v15 + 48) = v16;
  *(_OWORD *)(v15 + 64) = v3[2];
  *(_OWORD *)(v15 + 73) = *(_OWORD *)((char *)v3 + 41);
  *(void *)(v15 + 96) = a1;
  *(void *)(v15 + 104) = a2;
  sub_1B592D3B0((uint64_t)v3);
  swift_retain();
  swift_retain();
  sub_1B5923814((uint64_t)v8, (uint64_t)&unk_1E9D63A48, v15);
  return swift_release();
}

uint64_t sub_1B592232C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B5A1A328();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
  uint64_t v10 = sub_1B5A1A308();
  os_log_type_t v11 = sub_1B5A1C258();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v23 = a2;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v24 = sub_1B5928EE8(0x634164616F6C6552, 0xEC0000006E6F6974, &v25);
    a2 = v23;
    sub_1B5A1C2D8();
    _os_log_impl(&dword_1B58FD000, v10, v11, "%s has not implemented a synchronous action. Running async.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v13, -1, -1);
    MEMORY[0x1BA9A4780](v12, -1, -1);
  }

  uint64_t v14 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  long long v16 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)(v15 + 160) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(v15 + 176) = v16;
  *(unsigned char *)(v15 + 192) = *(unsigned char *)(v3 + 160);
  long long v17 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(v15 + 112) = v17;
  long long v18 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(v15 + 128) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(v15 + 144) = v18;
  long long v19 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)v3;
  *(_OWORD *)(v15 + 48) = v19;
  long long v20 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v15 + 80) = v20;
  *(void *)(v15 + 200) = a1;
  *(void *)(v15 + 208) = a2;
  sub_1B592CAC8(v3);
  swift_retain();
  swift_retain();
  sub_1B5923814((uint64_t)v8, (uint64_t)&unk_1E9D639C8, v15);
  return swift_release();
}

uint64_t sub_1B59225EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1B5A1A328();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9D910D0);
  os_log_type_t v11 = sub_1B5A1A308();
  os_log_type_t v12 = sub_1B5A1C258();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v20 = v4;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = v3;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v22 = sub_1B5928EE8(0x417373696D736944, 0xED00006E6F697463, &v23);
    uint64_t v4 = v20;
    sub_1B5A1C2D8();
    _os_log_impl(&dword_1B58FD000, v11, v12, "%s has not implemented a synchronous action. Running async.", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v15, -1, -1);
    MEMORY[0x1BA9A4780](v14, -1, -1);
  }

  uint64_t v16 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
  long long v17 = (void *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v4;
  v17[5] = a1;
  v17[6] = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B5923814((uint64_t)v9, (uint64_t)&unk_1E9D63888, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1B5922894(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B5A1A328();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
  uint64_t v10 = sub_1B5A1A308();
  os_log_type_t v11 = sub_1B5A1C258();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v20 = a2;
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = v13;
    *(_DWORD *)os_log_type_t v12 = 136315138;
    uint64_t v21 = sub_1B5928EE8(0x6F6974616D696E41, 0xEF6E6F697463416ELL, &v22);
    a2 = v20;
    sub_1B5A1C2D8();
    _os_log_impl(&dword_1B58FD000, v10, v11, "%s has not implemented a synchronous action. Running async.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v13, -1, -1);
    MEMORY[0x1BA9A4780](v12, -1, -1);
  }

  uint64_t v14 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  long long v16 = v3[3];
  *(_OWORD *)(v15 + 64) = v3[2];
  *(_OWORD *)(v15 + 80) = v16;
  *(_OWORD *)(v15 + 89) = *(_OWORD *)((char *)v3 + 57);
  long long v17 = v3[1];
  *(_OWORD *)(v15 + 32) = *v3;
  *(_OWORD *)(v15 + 48) = v17;
  *(void *)(v15 + 112) = a1;
  *(void *)(v15 + 120) = a2;
  sub_1B592CE80((uint64_t)v3);
  swift_retain();
  swift_retain();
  sub_1B5923814((uint64_t)v8, (uint64_t)&unk_1E9D63A08, v15);
  return swift_release();
}

uint64_t sub_1B5922B40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B5A1A328();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
  uint64_t v10 = sub_1B5A1A308();
  os_log_type_t v11 = sub_1B5A1C258();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v20 = a2;
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = v13;
    uint64_t v19 = v8;
    *(_DWORD *)os_log_type_t v12 = 136315138;
    uint64_t v21 = sub_1B5928EE8(0xD000000000000010, 0x80000001B5A32EC0, &v22);
    uint64_t v8 = v19;
    a2 = v20;
    sub_1B5A1C2D8();
    _os_log_impl(&dword_1B58FD000, v10, v11, "%s has not implemented a synchronous action. Running async.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v13, -1, -1);
    MEMORY[0x1BA9A4780](v12, -1, -1);
  }

  uint64_t v14 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  long long v16 = v3[1];
  *(_OWORD *)(v15 + 32) = *v3;
  *(_OWORD *)(v15 + 48) = v16;
  *(_OWORD *)(v15 + 64) = v3[2];
  *(_OWORD *)(v15 + 73) = *(_OWORD *)((char *)v3 + 41);
  *(void *)(v15 + 96) = a1;
  *(void *)(v15 + 104) = a2;
  sub_1B592D580((uint64_t)v3);
  swift_retain();
  swift_retain();
  sub_1B5923814((uint64_t)v8, (uint64_t)&unk_1E9D63A68, v15);
  return swift_release();
}

uint64_t sub_1B5922DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B5A1A328();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
  uint64_t v10 = sub_1B5A1A308();
  os_log_type_t v11 = sub_1B5A1C258();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v24 = a2;
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v26 = v13;
    *(_DWORD *)os_log_type_t v12 = 136315138;
    uint64_t v25 = sub_1B5928EE8(0xD000000000000011, 0x80000001B5A32EA0, &v26);
    a2 = v24;
    sub_1B5A1C2D8();
    _os_log_impl(&dword_1B58FD000, v10, v11, "%s has not implemented a synchronous action. Running async.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v13, -1, -1);
    MEMORY[0x1BA9A4780](v12, -1, -1);
  }

  uint64_t v14 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  long long v16 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)(v15 + 160) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(v15 + 176) = v16;
  uint64_t v17 = *(void *)(v3 + 160);
  long long v18 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(v15 + 112) = v18;
  long long v19 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(v15 + 128) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(v15 + 144) = v19;
  long long v20 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)v3;
  *(_OWORD *)(v15 + 48) = v20;
  long long v21 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v15 + 80) = v21;
  *(void *)(v15 + 192) = v17;
  *(void *)(v15 + 200) = a1;
  *(void *)(v15 + 208) = a2;
  sub_1B592C66C(v3);
  swift_retain();
  swift_retain();
  sub_1B5923814((uint64_t)v8, (uint64_t)&unk_1E9D639A0, v15);
  return swift_release();
}

uint64_t sub_1B59230AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1B5A1A328();
  __swift_project_value_buffer(v14, (uint64_t)qword_1E9D910D0);
  uint64_t v15 = sub_1B5A1A308();
  os_log_type_t v16 = sub_1B5A1C258();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v27 = a1;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = a4;
    long long v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = v5;
    uint64_t v20 = v19;
    uint64_t v31 = v19;
    uint64_t v26 = v13;
    *(_DWORD *)long long v18 = 136315138;
    uint64_t v30 = sub_1B5928EE8(0x6E6F697463416649, 0xE800000000000000, &v31);
    uint64_t v13 = v26;
    a1 = v27;
    sub_1B5A1C2D8();
    _os_log_impl(&dword_1B58FD000, v15, v16, "%s has not implemented a synchronous action. Running async.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v20, -1, -1);
    long long v21 = v18;
    a4 = v28;
    MEMORY[0x1BA9A4780](v21, -1, -1);
  }

  uint64_t v22 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = a3;
  v23[5] = a4;
  v23[6] = a5;
  v23[7] = a1;
  v23[8] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B5923814((uint64_t)v13, (uint64_t)&unk_1E9D639E8, (uint64_t)v23);
  return swift_release();
}

uint64_t RemoteAction.performSynchronousAction(with:localStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a2;
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v38 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v37 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1B5A1A328();
  __swift_project_value_buffer(v13, (uint64_t)qword_1E9D910D0);
  uint64_t v14 = sub_1B5A1A308();
  os_log_type_t v15 = sub_1B5A1C258();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v36 = a4;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v34 = v10;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v19 = v18;
    uint64_t v41 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    v33[1] = v17 + 4;
    uint64_t v20 = sub_1B5A1C8B8();
    uint64_t v40 = sub_1B5928EE8(v20, v21, &v41);
    sub_1B5A1C2D8();
    a4 = v36;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B58FD000, v14, v15, "%s has not implemented a synchronous action. Running async.", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    uint64_t v5 = v35;
    MEMORY[0x1BA9A4780](v22, -1, -1);
    uint64_t v23 = v17;
    uint64_t v10 = v34;
    MEMORY[0x1BA9A4780](v23, -1, -1);
  }

  uint64_t v24 = sub_1B5A1C188();
  uint64_t v25 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v37, 1, 1, v24);
  uint64_t v26 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v38, v5, a3);
  unint64_t v27 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v28 = (v10 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (char *)swift_allocObject();
  uint64_t v30 = a3;
  uint64_t v31 = (uint64_t)v29;
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  *((void *)v29 + 4) = v30;
  *((void *)v29 + 5) = a4;
  (*(void (**)(char *, char *))(v9 + 32))(&v29[v27], v26);
  *(void *)(v31 + v28) = a1;
  *(void *)(v31 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8)) = v39;
  swift_retain();
  swift_retain();
  sub_1B5923814(v25, (uint64_t)&unk_1E9D63790, v31);
  return swift_release();
}

uint64_t sub_1B5923700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  os_log_type_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a8 + 32) + **(int **)(a8 + 32));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1B592D9C8;
  return v15(a5, a6, a7, a8);
}

uint64_t sub_1B5923814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1B5A1C188();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1B5A1C178();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1B5908FC0(a1, &qword_1E9D63780);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B5A1C148();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t RemoteAction.modifyView(_:with:localStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + 24))(a1, a2, a4);
}

uint64_t RemoteAction.modifyView(_:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B590CA38(a1, a2);
}

uint64_t Array<A>.performAllAsync(store:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a2;
  v8[5] = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B5924038((uint64_t)v6, (uint64_t)&unk_1E9D637A0, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1B5923B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  v5[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B5923B98, 0, 0);
}

uint64_t sub_1B5923B98()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v20 = (long long *)(v0 + 2);
    uint64_t v3 = v1 + 32;
    uint64_t v4 = sub_1B5A1C188();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v18 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v17 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = v0[12];
      uint64_t v6 = v0[13];
      v19(v6, 1, 1, v4);
      sub_1B590CA38(v3, (uint64_t)v20);
      uint64_t v8 = (void *)swift_allocObject();
      v8[2] = 0;
      uint64_t v9 = v8 + 2;
      v8[3] = 0;
      sub_1B5908BE8(v20, (uint64_t)(v8 + 4));
      v8[9] = v7;
      int v10 = (*v18)(v6, 1, v4);
      swift_retain();
      uint64_t v11 = v0[13];
      if (v10 == 1)
      {
        sub_1B5908FC0(v0[13], &qword_1E9D63780);
        if (*v9) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_1B5A1C178();
        (*v17)(v11, v4);
        if (*v9)
        {
LABEL_7:
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v12 = sub_1B5A1C148();
          uint64_t v14 = v13;
          swift_unknownObjectRelease();
          if (v14 | v12)
          {
            v0[7] = 0;
            v0[8] = 0;
            v0[9] = v12;
            v0[10] = v14;
          }
        }
      }
      swift_task_create();
      swift_release();
      v3 += 40;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_task_dealloc();
  os_log_type_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1B5923E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1B5923E3C, 0, 0);
}

uint64_t sub_1B5923E3C()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1B5923F44;
  uint64_t v5 = v0[3];
  return v7(v5, v2, v3);
}

uint64_t sub_1B5923F44()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1B5924038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B5A1C188();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1B5A1C178();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1B5908FC0(a1, &qword_1E9D63780);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B5A1C148();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t Array<A>.performAllAsync(store:localStore:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  int v10 = (void *)swift_allocObject();
  v10[2] = 0;
  void v10[3] = 0;
  v10[4] = a3;
  _OWORD v10[5] = a1;
  v10[6] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B5924038((uint64_t)v8, (uint64_t)&unk_1E9D637B0, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1B5924308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  v6[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B59243A0, 0, 0);
}

uint64_t sub_1B59243A0()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v23 = (long long *)(v0 + 2);
    uint64_t v3 = v1 + 32;
    uint64_t v4 = sub_1B5A1C188();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v21 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v19 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    uint64_t v20 = v4;
    while (1)
    {
      uint64_t v7 = v0[13];
      uint64_t v6 = v0[14];
      uint64_t v8 = v0[12];
      v22(v6, 1, 1, v4);
      sub_1B590CA38(v3, (uint64_t)v23);
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = 0;
      int v10 = v9 + 2;
      v9[3] = 0;
      sub_1B5908BE8(v23, (uint64_t)(v9 + 4));
      v9[9] = v8;
      v9[10] = v7;
      uint64_t v11 = v4;
      int v12 = (*v21)(v6, 1, v4);
      swift_retain();
      swift_retain();
      uint64_t v13 = v0[14];
      if (v12 == 1)
      {
        sub_1B5908FC0(v0[14], &qword_1E9D63780);
        if (!*v10) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_1B5A1C178();
        (*v19)(v13, v11);
        if (!*v10)
        {
LABEL_9:
          uint64_t v14 = 0;
          uint64_t v16 = 0;
          goto LABEL_10;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v14 = sub_1B5A1C148();
      uint64_t v16 = v15;
      swift_unknownObjectRelease();
LABEL_10:
      uint64_t v4 = v20;
      if (v16 | v14)
      {
        v0[7] = 0;
        v0[8] = 0;
        v0[9] = v14;
        v0[10] = v16;
      }
      swift_task_create();
      swift_release();
      v3 += 40;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1B5924630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x1F4188298](sub_1B5924654, 0, 0);
}

uint64_t sub_1B5924654()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1B592475C;
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];
  return v8(v6, v5, v2, v3);
}

uint64_t sub_1B592475C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t Array<A>.performAllSync(store:localStore:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v7 = result;
    uint64_t v8 = (void *)(a3 + 32);
    swift_bridgeObjectRetain();
    uint64_t v9 = v5 - 1;
    do
    {
      uint64_t v10 = v9;
      uint64_t v11 = v8[3];
      uint64_t v12 = v8[4];
      __swift_project_boxed_opaque_existential_1(v8, v11);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 40))(v7, a2, v11, v12);
      if (v4) {
        break;
      }
      uint64_t v9 = v10 - 1;
      v8 += 5;
    }
    while (v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t RemoteActionBox.action.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B590CA38(v1, a1);
}

uint64_t RemoteActionBox.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F00);
  uint64_t v36 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B5A1C4E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1B5A1C828();
  if (qword_1E9D62B28 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1E9D910E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  if (*(void *)(v10 + 16) && (unint64_t v12 = sub_1B59049D0((uint64_t)v9), (v13 & 1) != 0))
  {
    sub_1B59052CC(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v43);
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!*((void *)&v44 + 1))
  {
    sub_1B5908FC0((uint64_t)&v43, &qword_1E9D62BC8);
    goto LABEL_12;
  }
  type metadata accessor for ContentRegistry();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    type metadata accessor for ContentRegistryError();
    sub_1B592A820(&qword_1E9D62F08, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v42;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v15 = sub_1B590C798();
  sub_1B5A1C838();
  if (v2)
  {
  }
  else
  {
    id v34 = v14;
    uint64_t v17 = v37;
    uint64_t v18 = sub_1B5A1C5E8();
    if (*(void *)(v18 + 16))
    {
      uint64_t v19 = *(void *)(v18 + 40);
      uint64_t v32 = *(void *)(v18 + 32);
      uint64_t v31 = *(void *)(v18 + 48);
      int v33 = *(unsigned __int8 *)(v18 + 56);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_1B5A1C578();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F18);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
      *(void *)(inited + 56) = &type metadata for DynamicKey;
      *(void *)(inited + 64) = v15;
      uint64_t v22 = swift_allocObject();
      *(void *)(inited + 32) = v22;
      uint64_t v23 = v32;
      *(void *)(v22 + 16) = v32;
      *(void *)(v22 + 24) = v19;
      uint64_t v24 = v31;
      *(void *)(v22 + 32) = v31;
      *(unsigned char *)(v22 + 40) = v33;
      *(void *)&long long v43 = v20;
      swift_bridgeObjectRetain();
      sub_1B590C844(inited);
      uint64_t v25 = sub_1B59DC834(v23, v19);
      uint64_t v29 = v26;
      uint64_t v30 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = v23;
      uint64_t v39 = v19;
      uint64_t v40 = v24;
      char v41 = v33;
      sub_1B5A1C588();
      swift_bridgeObjectRelease();
      *((void *)&v44 + 1) = v30;
      uint64_t v45 = v29;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
      sub_1B5A1C1C8();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v17);

      sub_1B5908BE8(&v43, (uint64_t)v46);
      long long v27 = v46[1];
      unint64_t v28 = v35;
      *uint64_t v35 = v46[0];
      v28[1] = v27;
      *((void *)v28 + 4) = v47;
    }
    else
    {
      swift_bridgeObjectRelease();
      type metadata accessor for DynamicKeyError();
      sub_1B592A820(&qword_1E9D62F40, (void (*)(uint64_t))type metadata accessor for DynamicKeyError);
      swift_allocError();
      sub_1B5A1C578();
      sub_1B5A1C3C8();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v17);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5925020@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return RemoteActionBox.init(from:)(a1, a2);
}

uint64_t static DismissAction.== infix(_:_:)()
{
  return 0;
}

uint64_t sub_1B5925040(uint64_t a1, uint64_t a2)
{
  return sub_1B5927F58(a1, a2, MEMORY[0x1E4F3C820], (uint64_t)&unk_1F0EA8FE0, (uint64_t)sub_1B592B0AC, (uint64_t)&block_descriptor_43);
}

uint64_t sub_1B592507C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B5A1A588();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a1 + OBJC_IVAR____TtC6LiftUI13DismissAction_dismissAction;
  swift_beginAccess();
  sub_1B5917A94((uint64_t)v6, v9, &qword_1E9D638B0);
  return swift_endAccess();
}

uint64_t sub_1B59251B8()
{
  uint64_t v1 = sub_1B5A1BDC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1B5A1BDE8();
  uint64_t v5 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B592C400(0, (unint64_t *)&qword_1E9D63890);
  uint64_t v8 = (void *)sub_1B5A1C288();
  aBlock[4] = sub_1B592B074;
  uint64_t v14 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B59251B4;
  aBlock[3] = &block_descriptor_0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1B5A1BDD8();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1B592A820((unint64_t *)&qword_1E9D63898, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638A0);
  sub_1B59095C8((unint64_t *)&qword_1E9D638A8, &qword_1E9D638A0);
  sub_1B5A1C348();
  MEMORY[0x1BA9A3A90](0, v7, v4, v9);
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t sub_1B5925484(uint64_t a1)
{
  uint64_t v2 = sub_1B5A1A588();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1B5A1A328();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9D910D0);
  uint64_t v7 = sub_1B5A1A308();
  os_log_type_t v8 = sub_1B5A1C278();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1B58FD000, v7, v8, "Dismiss Action", v9, 2u);
    MEMORY[0x1BA9A4780](v9, -1, -1);
  }

  uint64_t v10 = a1 + OBJC_IVAR____TtC6LiftUI13DismissAction_dismissAction;
  swift_beginAccess();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2);
  if (!result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
    sub_1B5A1A578();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_1B5925674()
{
  sub_1B5908FC0(v0 + OBJC_IVAR____TtC6LiftUI13DismissAction_dismissAction, &qword_1E9D638B0);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1B59256E0()
{
  sub_1B59251B8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return sub_1B592D24C(v1);
}

uint64_t sub_1B5925764(uint64_t a1, uint64_t a2)
{
  return sub_1B59225EC(a1, a2);
}

uint64_t sub_1B5925788@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = swift_getOpaqueTypeMetadata2();
  a2[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a2);
  swift_retain();
  sub_1B5A1B598();
  swift_release();
  return swift_release();
}

uint64_t sub_1B59258E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v5 = v4 + OBJC_IVAR____TtC6LiftUI13DismissAction_dismissAction;
  uint64_t v6 = sub_1B5A1A588();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *a2 = v4;
  return result;
}

void sub_1B5925980(uint64_t a1)
{
  uint64_t v3 = 0;
  uint64_t v4 = sub_1B5A1A328();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)v1;
  os_log_type_t v8 = *(void **)(v1 + 8);
  uint64_t v10 = *(void **)(v1 + 16);
  uint64_t v11 = *(void **)(v1 + 24);
  int v12 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v13 = *(void *)(v1 + 48);
  uint64_t v50 = *(void *)(v1 + 40);
  uint64_t v51 = v13;
  uint64_t v52 = *(void *)(v1 + 56);
  int v14 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v48 = v8;
  uint64_t v49 = v10;
  if (v9)
  {
    int v46 = v14;
    uint64_t v47 = v11;
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v4, (uint64_t)qword_1E9D910D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_1B5A1A308();
    os_log_type_t v17 = sub_1B5A1C278();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v44 = a1;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      unint64_t v42 = v18;
      long long v43 = (void *)swift_slowAlloc();
      v53[0] = v43;
      int v45 = v12;
      *(_DWORD *)uint64_t v18 = 136315138;
      v56[0] = (id)sub_1B592609C(v9);
      v40[1] = v18 + 4;
      char v41 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63988);
      sub_1B59095C8(&qword_1E9D63990, &qword_1E9D63988);
      uint64_t v19 = sub_1B5A1BEB8();
      unint64_t v21 = v20;
      a1 = v44;
      swift_bridgeObjectRelease();
      v56[0] = (id)sub_1B5928EE8(v19, v21, (uint64_t *)v53);
      int v12 = v45;
      sub_1B5A1C2D8();
      swift_bridgeObjectRelease_n();
      uint64_t v3 = v41;
      swift_bridgeObjectRelease();
      os_log_type_t v22 = v17;
      uint64_t v23 = v42;
      _os_log_impl(&dword_1B58FD000, v16, v22, "Set Action: %s", v42, 0xCu);
      uint64_t v24 = v43;
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v24, -1, -1);
      MEMORY[0x1BA9A4780](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1B592BFB0(v9, (void (*)(uint64_t, uint64_t, void *))sub_1B592C454);
    uint64_t v11 = v47;
    os_log_type_t v8 = v48;
    int v14 = v46;
    uint64_t v10 = v49;
  }
  if (v12 != 255 && v14 != 255)
  {
    sub_1B592C3E8((uint64_t)v8, (uint64_t)v10, (uint64_t)v11, v12);
    sub_1B592C3E8(v50, v51, v52, v14);
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v4, (uint64_t)qword_1E9D910D0);
    uint64_t v25 = sub_1B5A1A308();
    os_log_type_t v26 = sub_1B5A1C278();
    if (os_log_type_enabled(v25, v26))
    {
      long long v27 = v3;
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v28 = 0;
      _os_log_impl(&dword_1B58FD000, v25, v26, "LiftUI Set Action with reference", v28, 2u);
      uint64_t v29 = v28;
      uint64_t v3 = v27;
      MEMORY[0x1BA9A4780](v29, -1, -1);
    }

    sub_1B59B3D0C(a1, v50, v51, v52, v14 & 1, (uint64_t *)v53);
    if (v3)
    {
      v53[0] = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E68);
      sub_1B592C400(0, &qword_1E9D63978);
      swift_dynamicCast();
      int v33 = v56[0];
      id v34 = sub_1B5A1A308();
      os_log_type_t v35 = sub_1B5A1C278();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v47 = v11;
        uint64_t v38 = (void *)v37;
        *(_DWORD *)uint64_t v36 = 138412290;
        unsigned __int8 v55 = v33;
        int v46 = v14;
        uint64_t v39 = v33;
        sub_1B5A1C2D8();
        *uint64_t v38 = v33;

        _os_log_impl(&dword_1B58FD000, v34, v35, "LiftUI Set Action failed with error %@", v36, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63980);
        swift_arrayDestroy();
        MEMORY[0x1BA9A4780](v38, -1, -1);
        MEMORY[0x1BA9A4780](v36, -1, -1);
        sub_1B592C43C((uint64_t)v48, (uint64_t)v49, (uint64_t)v47, v12);
        sub_1B592C43C(v50, v51, v52, v46);
      }
      else
      {
        sub_1B592C43C((uint64_t)v48, (uint64_t)v49, (uint64_t)v11, v12);
        sub_1B592C43C(v50, v51, v52, v14);

        id v34 = v33;
      }
    }
    else
    {
      id v30 = v53[0];
      uint64_t v32 = (uint64_t)v48;
      uint64_t v31 = (uint64_t)v49;
      v53[0] = v48;
      v53[1] = v49;
      v53[2] = v11;
      char v54 = v12 & 1;
      v56[0] = v30;
      RemoteStateStore.set(reference:value:)((uint64_t)v53, (uint64_t *)v56);
      sub_1B592C43C(v50, v51, v52, v14);
      swift_release();
      sub_1B592C43C(v32, v31, (uint64_t)v11, v12);
    }
  }
}

uint64_t sub_1B5925FFC()
{
  return 0;
}

uint64_t sub_1B592609C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_1B596928C(0, v1, 0);
  uint64_t v2 = v35;
  uint64_t result = sub_1B592A0D8(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v28 = v3;
  uint64_t v24 = v3 + 80;
  int64_t v25 = v1;
  int v26 = v5;
  uint64_t v27 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v29 = v7;
    uint64_t v12 = *(void *)(v3 + 56) + 32 * v6;
    uint64_t v13 = *(void *)v12;
    uint64_t v32 = *(void *)(v12 + 8);
    uint64_t v33 = *(void *)(v12 + 16);
    char v34 = *(unsigned char *)(v12 + 24);
    swift_bridgeObjectRetain();
    sub_1B5909638(v13, v32, v33, v34);
    swift_bridgeObjectRetain();
    sub_1B5909638(v13, v32, v33, v34);
    swift_bridgeObjectRelease();
    sub_1B591F344(v13, v32, v33, v34);
    uint64_t v14 = sub_1B5925FFC();
    uint64_t v30 = v15;
    uint64_t v31 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B591F344(v13, v32, v33, v34);
    unint64_t v17 = *(void *)(v35 + 16);
    unint64_t v16 = *(void *)(v35 + 24);
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_1B596928C(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v35 + 16) = v17 + 1;
    uint64_t v18 = v35 + 16 * v17;
    *(void *)(v18 + 32) = v31;
    *(void *)(v18 + 40) = v30;
    uint64_t v3 = v28;
    int64_t v9 = 1 << *(unsigned char *)(v28 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v27;
    uint64_t v19 = *(void *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v26;
    if (*(_DWORD *)(v28 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      int64_t v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v25;
    }
    else
    {
      unint64_t v21 = v11 + 1;
      unint64_t v22 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v25;
      if (v11 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            unint64_t v23 = *(void *)(v24 + 8 * v11++);
            if (v23)
            {
              unint64_t v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v29 + 1;
    uint64_t v6 = v9;
    if (v29 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B5926360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B59B3D0C(a4, *(void *)a3, *(void *)(a3 + 8), *(void *)(a3 + 16), *(unsigned char *)(a3 + 24), &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRetain();
  return sub_1B59C87D8(v6, a1, a2);
}

uint64_t sub_1B59263E8(uint64_t a1)
{
  uint64_t v3 = sub_1B5A1BDC8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1B5A1BDE8();
  uint64_t v7 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  int64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = v1[3];
  long long v23 = v1[2];
  long long v24 = v10;
  char v25 = *((unsigned char *)v1 + 64);
  long long v11 = v1[1];
  long long v21 = *v1;
  long long v22 = v11;
  sub_1B592C400(0, (unint64_t *)&qword_1E9D63890);
  uint64_t v12 = (void *)sub_1B5A1C288();
  uint64_t v13 = swift_allocObject();
  long long v14 = v24;
  *(_OWORD *)(v13 + 48) = v23;
  *(_OWORD *)(v13 + 64) = v14;
  *(unsigned char *)(v13 + 80) = v25;
  long long v15 = v22;
  *(_OWORD *)(v13 + 16) = v21;
  *(_OWORD *)(v13 + 32) = v15;
  *(void *)(v13 + 88) = a1;
  aBlock[4] = sub_1B592C4D4;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B59251B4;
  aBlock[3] = &block_descriptor_102;
  unint64_t v16 = _Block_copy(aBlock);
  sub_1B592C500((uint64_t)&v21);
  swift_retain();
  swift_release();
  sub_1B5A1BDD8();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1B592A820((unint64_t *)&qword_1E9D63898, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638A0);
  sub_1B59095C8((unint64_t *)&qword_1E9D638A8, &qword_1E9D638A0);
  sub_1B5A1C348();
  MEMORY[0x1BA9A3A90](0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v19);
}

uint64_t sub_1B5926704(char a1)
{
  if (a1) {
    return 0x636E657265666572;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_1B592673C(char *a1, char *a2)
{
  return sub_1B59EC894(*a1, *a2);
}

uint64_t sub_1B5926748()
{
  return sub_1B59F06A8();
}

uint64_t sub_1B5926750()
{
  return sub_1B59F2B30();
}

uint64_t sub_1B5926758()
{
  return sub_1B59F772C();
}

uint64_t sub_1B5926760@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59267C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5926704(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59267EC()
{
  return sub_1B5926704(*v0);
}

uint64_t sub_1B59267F4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5926858(uint64_t a1)
{
  unint64_t v2 = sub_1B592D74C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5926894(uint64_t a1)
{
  unint64_t v2 = sub_1B592D74C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59268D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F00);
  uint64_t v57 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v5 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63AA8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63AB0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1B592D74C();
  sub_1B5A1C838();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    sub_1B5908FC0((uint64_t)v8, &qword_1E9D63AA8);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    LOBYTE(v66) = 1;
    if (sub_1B5A1C5F8())
    {
      sub_1B590CA38((uint64_t)v58, (uint64_t)&v66);
      sub_1B5963070(&v66, (uint64_t *)&v70);
      uint64_t v46 = (uint64_t)v70;
      uint64_t v45 = v71;
      uint64_t v47 = v72;
      LODWORD(v74) = v73;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
      LOBYTE(v70) = 0;
      sub_1B59095C8((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
      sub_1B5A1C5D8();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v48 = 0;
      uint64_t v49 = v66;
      uint64_t v50 = v67;
      uint64_t v51 = v68;
      char v52 = v69;
      uint64_t v53 = v47;
      unsigned __int8 v54 = v74;
LABEL_21:
      uint64_t v74 = v48;
      unint64_t v42 = v56;
      *uint64_t v56 = v48;
      v42[1] = v46;
      v42[2] = v45;
      v42[3] = v53;
      *((unsigned char *)v42 + 32) = v54;
      v42[5] = v49;
      v42[6] = v50;
      v42[7] = v51;
      *((unsigned char *)v42 + 64) = v52;
      unsigned __int8 v43 = v52;
      swift_bridgeObjectRetain();
      sub_1B592C3E8(v46, v45, v53, v54);
      sub_1B592C3E8(v49, v50, v51, v43);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      swift_bridgeObjectRelease();
      sub_1B592C43C(v46, v45, v53, v54);
      return sub_1B592C43C(v49, v50, v51, v43);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  __swift_project_boxed_opaque_existential_1(v58, v58[3]);
  sub_1B590C798();
  sub_1B5A1C838();
  uint64_t v14 = sub_1B5A1C5E8();
  uint64_t v15 = *(void *)(v14 + 16);
  v55[1] = v14;
  if (!v15)
  {
    uint64_t v18 = MEMORY[0x1E4FBC868];
LABEL_20:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v5, v61);
    uint64_t v50 = 0;
    uint64_t v49 = 0;
    uint64_t v51 = 0;
    uint64_t v53 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    unsigned __int8 v54 = -1;
    char v52 = -1;
    uint64_t v48 = v18;
    goto LABEL_21;
  }
  uint64_t v16 = v14;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
  uint64_t v59 = sub_1B59095C8((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
  unint64_t v17 = (unsigned char *)(v16 + 56);
  uint64_t v18 = MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v22 = *((void *)v17 - 2);
    unsigned __int8 v23 = *v17;
    uint64_t v24 = *((void *)v17 - 1);
    uint64_t v70 = (void *)*((void *)v17 - 3);
    uint64_t v21 = (uint64_t)v70;
    uint64_t v71 = v22;
    uint64_t v72 = v24;
    unsigned __int8 v73 = v23;
    swift_bridgeObjectRetain_n();
    sub_1B5A1C5D8();
    uint64_t v62 = v15;
    swift_bridgeObjectRelease();
    uint64_t v63 = v66;
    uint64_t v64 = v67;
    uint64_t v65 = v68;
    LODWORD(v74) = v69;
    uint64_t v25 = v18;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v70 = (void *)v18;
    unint64_t v28 = sub_1B59049B8(v21, v22);
    uint64_t v29 = *(void *)(v18 + 16);
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (*(void *)(v25 + 24) >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1B5959624();
      }
    }
    else
    {
      sub_1B5957D04(v31, isUniquelyReferenced_nonNull_native);
      uint64_t v33 = sub_1B59049B8(v21, v22);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_24;
      }
      unint64_t v28 = v33;
    }
    uint64_t v35 = v70;
    if (v32)
    {
      uint64_t v18 = (uint64_t)v70;
      uint64_t v19 = v70[7] + 32 * v28;
      sub_1B591F344(*(void *)v19, *(void *)(v19 + 8), *(void *)(v19 + 16), *(unsigned char *)(v19 + 24));
      uint64_t v20 = v64;
      *(void *)uint64_t v19 = v63;
      *(void *)(v19 + 8) = v20;
      *(void *)(v19 + 16) = v65;
      *(unsigned char *)(v19 + 24) = v74;
    }
    else
    {
      v70[(v28 >> 6) + 8] |= 1 << v28;
      uint64_t v36 = (uint64_t *)(v35[6] + 16 * v28);
      *uint64_t v36 = v21;
      v36[1] = v22;
      uint64_t v37 = v35[7] + 32 * v28;
      uint64_t v38 = v64;
      *(void *)uint64_t v37 = v63;
      *(void *)(v37 + 8) = v38;
      *(void *)(v37 + 16) = v65;
      *(unsigned char *)(v37 + 24) = v74;
      uint64_t v39 = v35[2];
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_23;
      }
      uint64_t v18 = (uint64_t)v35;
      v35[2] = v41;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 += 32;
    uint64_t v15 = v62 - 1;
    if (v62 == 1) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1B5A1C738();
  __break(1u);
  return result;
}

uint64_t sub_1B5927044(uint64_t a1)
{
  sub_1B59263E8(a1);
  unint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return sub_1B592D24C(v2);
}

uint64_t sub_1B59270C4(uint64_t a1)
{
  sub_1B59263E8(a1);
  unint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return sub_1B592D24C(v2);
}

void sub_1B5927170(uint64_t a1)
{
}

uint64_t sub_1B5927198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B590CA38(a1, a2);
}

uint64_t sub_1B59271C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B59268D0(a1, a2);
}

uint64_t sub_1B59271DC()
{
  return 1;
}

uint64_t sub_1B59271E4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5927228()
{
  return sub_1B5A1C7B8();
}

uint64_t sub_1B5927250()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5927294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B592C360(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B59272C0(uint64_t a1)
{
  unint64_t v2 = sub_1B592B3AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59272FC(uint64_t a1)
{
  unint64_t v2 = sub_1B592B3AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5927338(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  uint64_t v3 = sub_1B5A1BDC8();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v4 = sub_1B5A1BDE8();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B5927454, 0, 0);
}

uint64_t sub_1B5927454()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v18 = *(void *)(v1 + 16);
  uint64_t v19 = *(void *)(v1 + 24);
  uint64_t v20 = *(void *)(v1 + 32);
  unsigned __int8 v21 = *(unsigned char *)(v1 + 40);
  sub_1B5904B60(v18, v19, v20, v21);
  unint64_t v3 = StringResolvable.resolved(with:)(v2);
  uint64_t v5 = v4;
  uint64_t v16 = v0[15];
  uint64_t v17 = v0[14];
  uint64_t v12 = v0[16];
  uint64_t v13 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v14 = v0[11];
  uint64_t v15 = v0[12];
  sub_1B5904A88(v18, v19, v20, v21);
  sub_1B592C400(0, (unint64_t *)&qword_1E9D63890);
  uint64_t v7 = (void *)sub_1B5A1C288();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v3;
  v8[3] = v5;
  v8[4] = v6;
  v0[6] = sub_1B592B440;
  v0[7] = v8;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1B59251B4;
  v0[5] = &block_descriptor_64;
  uint64_t v9 = _Block_copy(v0 + 2);
  swift_retain();
  sub_1B5A1BDD8();
  v0[8] = MEMORY[0x1E4FBC860];
  sub_1B592A820((unint64_t *)&qword_1E9D63898, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638A0);
  sub_1B59095C8((unint64_t *)&qword_1E9D638A8, &qword_1E9D638A0);
  sub_1B5A1C348();
  MEMORY[0x1BA9A3A90](0, v12, v13, v9);
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v17);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1B5927748(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v37 = a1;
  uint64_t v5 = sub_1B5A1A5C8();
  uint64_t v36 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638C8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B5A1A258();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v38 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1B5A1A328();
  __swift_project_value_buffer(v16, (uint64_t)qword_1E9D910D0);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1B5A1A308();
  os_log_type_t v18 = sub_1B5A1C278();
  if (os_log_type_enabled(v17, v18))
  {
    char v34 = v9;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v31 = v14;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v33 = a3;
    uint64_t v22 = v21;
    v40[0] = v21;
    uint64_t v32 = v13;
    *(_DWORD *)uint64_t v20 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1B5928EE8(v37, a2, v40);
    uint64_t v9 = v34;
    uint64_t v13 = v32;
    sub_1B5A1C2D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B58FD000, v17, v18, "Open URL Action: %s", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v22;
    a3 = v33;
    MEMORY[0x1BA9A4780](v23, -1, -1);
    uint64_t v24 = v20;
    uint64_t v14 = v31;
    MEMORY[0x1BA9A4780](v24, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1B5A1A248();
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  int v26 = v38;
  if (v25 == 1) {
    return sub_1B5908FC0((uint64_t)v12, &qword_1E9D638F0);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v38, v12, v13);
  uint64_t v28 = a3 + OBJC_IVAR____TtC6LiftUI13OpenURLAction_openURLAction;
  swift_beginAccess();
  sub_1B592B44C(v28, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v9, 1, v5))
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    return sub_1B5908FC0((uint64_t)v9, &qword_1E9D638C8);
  }
  else
  {
    BOOL v30 = v35;
    uint64_t v29 = v36;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v35, v9, v5);
    sub_1B5908FC0((uint64_t)v9, &qword_1E9D638C8);
    sub_1B5A1A5B8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v26, v13);
  }
}

uint64_t sub_1B5927C0C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1B5927C50(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC6LiftUI13OpenURLAction_openURLAction;
  uint64_t v10 = sub_1B5A1A5C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B592B3AC();
  sub_1B5A1C838();
  if (v2)
  {
    sub_1B5908FC0(v3 + OBJC_IVAR____TtC6LiftUI13OpenURLAction_openURLAction, &qword_1E9D638C8);
    type metadata accessor for OpenURLAction(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B5904A34();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = v15;
    char v13 = v16;
    *(_OWORD *)(v3 + 16) = v14;
    *(void *)(v3 + 32) = v12;
    *(unsigned char *)(v3 + 40) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1B5927E90(uint64_t a1)
{
  uint64_t v2 = sub_1B5A1A5C8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B5A1A968();
}

uint64_t sub_1B5927F58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  v23[1] = a4;
  uint64_t v24 = a2;
  uint64_t v8 = sub_1B5A1BDC8();
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B5A1BDE8();
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a3(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v23 - v16;
  sub_1B592C400(0, (unint64_t *)&qword_1E9D63890);
  os_log_type_t v18 = (void *)sub_1B5A1C288();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v20 + v19, v17, v14);
  aBlock[4] = v25;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B59251B4;
  aBlock[3] = v26;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1B5A1BDD8();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1B592A820((unint64_t *)&qword_1E9D63898, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638A0);
  sub_1B59095C8((unint64_t *)&qword_1E9D638A8, &qword_1E9D638A0);
  sub_1B5A1C348();
  MEMORY[0x1BA9A3A90](0, v13, v10, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v13, v28);
}

uint64_t sub_1B5928300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638C8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = sub_1B5A1A5C8();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a2, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  sub_1B592B344((uint64_t)v9, (uint64_t)v7);
  uint64_t v12 = a1 + OBJC_IVAR____TtC6LiftUI13OpenURLAction_openURLAction;
  swift_beginAccess();
  sub_1B5917A94((uint64_t)v7, v12, &qword_1E9D638C8);
  return swift_endAccess();
}

uint64_t sub_1B592846C()
{
  sub_1B5904A88(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_1B5908FC0(v0 + OBJC_IVAR____TtC6LiftUI13OpenURLAction_openURLAction, &qword_1E9D638C8);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1B59284E8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1B592D9C8;
  return sub_1B5927338(a1);
}

uint64_t sub_1B5928580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E9D63778 + dword_1E9D63778);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1B592D9C8;
  return v10(a1, a3, a4);
}

uint64_t sub_1B5928644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RemoteAction.modifyView(_:with:localStore:)(a1, a2, v8, a4, WitnessTable);
}

uint64_t sub_1B59286BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = swift_getOpaqueTypeMetadata2();
  a2[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a2);
  swift_retain();
  sub_1B5A1B598();
  swift_release();
  return swift_release();
}

uint64_t sub_1B5928814@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for OpenURLAction(0);
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1B5927C50(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B5928870(uint64_t a1, uint64_t a2)
{
  return sub_1B5922DF0(a1, a2);
}

uint64_t sub_1B59288CC(uint64_t a1, uint64_t a2)
{
  return sub_1B5922894(a1, a2);
}

uint64_t sub_1B5928910(uint64_t a1)
{
  long long v4 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v2 + 144) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v2 + 160) = v4;
  *(unsigned char *)(v2 + 176) = *(unsigned char *)(v1 + 160);
  long long v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v2 + 96) = v5;
  long long v6 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v2 + 128) = v6;
  long long v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v7;
  long long v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 184) = v9;
  void *v9 = v2;
  v9[1] = sub_1B59289E4;
  return sub_1B59FAAE8(a1);
}

uint64_t sub_1B59289E4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1B5928AD8(uint64_t a1, uint64_t a2)
{
  return sub_1B592232C(a1, a2);
}

uint64_t sub_1B5928B34(uint64_t a1, uint64_t a2)
{
  return sub_1B5922B40(a1, a2);
}

uint64_t sub_1B5928B78(uint64_t a1, uint64_t a2)
{
  return sub_1B59230AC(a1, a2, *v2, v2[1], v2[2]);
}

uint64_t sub_1B5928B98(uint64_t a1, uint64_t a2)
{
  return sub_1B5921DD8(a1, a2);
}

uint64_t sub_1B5928BE4(uint64_t a1, uint64_t a2)
{
  return sub_1B5922084(a1, a2);
}

uint64_t sub_1B5928C28(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1B5928C38(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1B5928C74(uint64_t a1, int *a2)
{
  long long v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1B5928D50;
  return v6(a1);
}

uint64_t sub_1B5928D50()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1B5928E48(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1B5928E70(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1B5928EE8(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1B5A1C2D8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1B5928EE8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1B5928FBC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1B59052CC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1B59052CC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1B5928FBC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1B5A1C2E8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1B5929178(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1B5A1C418();
  if (!v8)
  {
    sub_1B5A1C4F8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1B5A1C548();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1B5929178(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1B5929210(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B5929388(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1B5929388(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1B5929210(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1B59BA99C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1B5A1C3B8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1B5A1C4F8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1B5A1BFB8();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1B5A1C548();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1B5A1C4F8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B5929388(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63928);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

unsigned char **sub_1B59294D8(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void sub_1B59294E8(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_1B5A1C2D8();
  *a1 = v7;
  int64_t v8 = *a2;
  if (*a2)
  {
    *int64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_1B59295A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a4 + 16);
  char v8 = *(unsigned char *)(a4 + 24);
  uint64_t v9 = *(void *)(a4 + 48);
  char v10 = *(unsigned char *)(a4 + 56);
  uint64_t v11 = *(void *)(a4 + 80);
  char v12 = *(unsigned char *)(a4 + 88);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a4;
  *(void *)(v5 + 32) = v7;
  *(unsigned char *)(v5 + 40) = v8;
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a4 + 32);
  *(void *)(v5 + 64) = v9;
  *(unsigned char *)(v5 + 72) = v10;
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a4 + 64);
  *(void *)(v5 + 96) = v11;
  uint64_t v15 = (uint64_t (*)(uint64_t))((char *)&dword_1E9D663E8 + dword_1E9D663E8);
  *(unsigned char *)(v5 + 104) = v12;
  char v13 = (void *)swift_task_alloc();
  *(void *)(v5 + 112) = v13;
  *char v13 = v5;
  v13[1] = sub_1B5929698;
  return v15(a5);
}

uint64_t sub_1B5929698()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1B592978C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a4 + 16);
  char v8 = *(unsigned char *)(a4 + 24);
  uint64_t v9 = *(void *)(a4 + 48);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a4;
  char v10 = *(unsigned char *)(a4 + 56);
  *(void *)(v5 + 32) = v7;
  *(unsigned char *)(v5 + 40) = v8;
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a4 + 32);
  *(void *)(v5 + 64) = v9;
  *(unsigned char *)(v5 + 72) = v10;
  char v13 = (uint64_t (*)(uint64_t))((char *)&dword_1E9D66408 + dword_1E9D66408);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 80) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1B592986C;
  return v13(a5);
}

uint64_t sub_1B592986C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1B5929960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v7 = *(_OWORD *)(a4 + 144);
  *(_OWORD *)(v5 + 144) = *(_OWORD *)(a4 + 128);
  *(_OWORD *)(v5 + 160) = v7;
  *(unsigned char *)(v5 + 176) = *(unsigned char *)(a4 + 160);
  long long v8 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v5 + 96) = v8;
  long long v9 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v5 + 128) = v9;
  long long v10 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v5 + 32) = v10;
  long long v11 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v5 + 64) = v11;
  char v12 = (void *)swift_task_alloc();
  *(void *)(v5 + 184) = v12;
  void *v12 = v5;
  v12[1] = sub_1B592D9F0;
  return sub_1B59FAAE8(a5);
}

uint64_t sub_1B5929A28()
{
  sub_1B59251B8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return sub_1B592D24C(v1);
}

uint64_t sub_1B5929AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1B59CD4A4(a5, a6);
  long long v7 = *(uint64_t (**)(void))(v6 + 8);
  return sub_1B592D24C(v7);
}

uint64_t sub_1B5929B70(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5)
{
  *(void *)(v5 + 80) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  *(void *)(v5 + 88) = swift_task_alloc();
  long long v7 = a4[1];
  *(_OWORD *)(v5 + 16) = *a4;
  *(_OWORD *)(v5 + 32) = v7;
  *(_OWORD *)(v5 + 48) = a4[2];
  *(_OWORD *)(v5 + 57) = *(_OWORD *)((char *)a4 + 41);
  return MEMORY[0x1F4188298](sub_1B5929C20, 0, 0);
}

uint64_t sub_1B5929C20()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 40);
  sub_1B5904B8C(v1, v3, v4, v5);
  uint64_t v6 = sub_1B59B3EBC(v2, v1, v3, v4, v5);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = v6;
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v0 + 80);
  sub_1B5904AB4(v1, v3, v4, v5);
  uint64_t v12 = sub_1B5A1C188();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
  sub_1B5A1C168();
  sub_1B592D580(v0 + 16);
  swift_retain();
  uint64_t v13 = sub_1B5A1C158();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBCFD8];
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v15;
  long long v16 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v14 + 48) = v16;
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v14 + 73) = *(_OWORD *)(v0 + 57);
  *(void *)(v14 + 96) = v11;
  *(void *)(v14 + 104) = v8;
  *(void *)(v14 + 112) = v10;
  sub_1B5923814(v7, (uint64_t)&unk_1E9D63A70, v14);
  swift_release();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1B5929E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 184) = a5;
  *(void *)(v6 + 192) = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  *(void *)(v6 + 200) = swift_task_alloc();
  long long v8 = *(_OWORD *)(a4 + 144);
  *(_OWORD *)(v6 + 144) = *(_OWORD *)(a4 + 128);
  *(_OWORD *)(v6 + 160) = v8;
  *(void *)(v6 + 176) = *(void *)(a4 + 160);
  long long v9 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v6 + 96) = v9;
  long long v10 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v6 + 128) = v10;
  long long v11 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 32) = v11;
  long long v12 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 64) = v12;
  return MEMORY[0x1F4188298](sub_1B5929ECC, 0, 0);
}

uint64_t sub_1B5929ECC()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = sub_1B5A1C188();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  long long v6 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v5 + 160) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v5 + 176) = v6;
  uint64_t v7 = *(void *)(v0 + 176);
  long long v8 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v5 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v5 + 112) = v8;
  long long v9 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v5 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v5 + 144) = v9;
  long long v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v5 + 48) = v10;
  long long v11 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v5 + 80) = v11;
  *(void *)(v5 + 192) = v7;
  *(void *)(v5 + 200) = v3;
  *(void *)(v5 + 208) = v1;
  sub_1B592C66C(v0 + 16);
  swift_retain();
  swift_retain();
  sub_1B5923814(v2, (uint64_t)&unk_1E9D639A8, v5);
  swift_release();
  swift_task_dealloc();
  long long v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1B592A018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *a4;
  uint64_t v10 = a4[1];
  uint64_t v11 = a4[2];
  long long v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  void *v12 = v6;
  v12[1] = sub_1B592D9C8;
  return sub_1B5A0B0B8(a5, a6, v9, v10, v11);
}

uint64_t sub_1B592A0D8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1B592A160(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_1B592D9C8;
  return v7(a1, a2);
}

uint64_t sub_1B592A250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_1B592D9C8;
  return v9(a1, a2, a3);
}

uint64_t sub_1B592A354()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1B592A444()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  unint64_t v4 = (*(void *)(*(void *)(v2 - 8) + 64)
      + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + v4);
  uint64_t v6 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *unint64_t v7 = v1;
  v7[1] = sub_1B592D9C8;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
  uint64_t v8 = (void *)swift_task_alloc();
  v7[2] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_1B592D9C8;
  return v10(v5, v6, v2, v3);
}

uint64_t sub_1B592A600()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B592A648(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1B592D9C8;
  return sub_1B5923B04(a1, v4, v5, v7, v6);
}

uint64_t sub_1B592A708()
{
  return objectdestroy_11Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1B592A720(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1B5921C08;
  return sub_1B5924308(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1B592A7E8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1B592A820(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of RemoteAction.performAction()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1B592D9C8;
  return v7(a1, a2);
}

uint64_t dispatch thunk of RemoteAction.performAction(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1B592D9C8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of RemoteAction.performAction(with:localStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1B5921C08;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of RemoteAction.performSynchronousAction(with:localStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t destroy for RemoteActionBox(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

ValueMetadata *type metadata accessor for RemoteActionBox()
{
  return &type metadata for RemoteActionBox;
}

uint64_t sub_1B592ABB8()
{
  return type metadata accessor for DismissAction(0);
}

uint64_t type metadata accessor for DismissAction(uint64_t a1)
{
  return sub_1B59001B4(a1, (uint64_t *)&unk_1E9D637F0);
}

void sub_1B592ABE0()
{
  sub_1B592AD6C(319, &qword_1E9D63800, MEMORY[0x1E4F3C820]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1B592AC8C()
{
  return type metadata accessor for OpenURLAction(0);
}

uint64_t type metadata accessor for OpenURLAction(uint64_t a1)
{
  return sub_1B59001B4(a1, (uint64_t *)&unk_1E9D63810);
}

void sub_1B592ACB4()
{
  sub_1B592AD6C(319, &qword_1E9D63828, MEMORY[0x1E4F3C868]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1B592AD6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B5A1C2B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B592ADC0(uint64_t a1)
{
  uint64_t result = sub_1B592A820(qword_1E9D63830, (void (*)(uint64_t))type metadata accessor for OpenURLAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B592AE18(uint64_t a1)
{
  uint64_t result = sub_1B592A820(&qword_1E9D63850, (void (*)(uint64_t))type metadata accessor for OpenURLAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B592AE70(uint64_t a1)
{
  uint64_t result = sub_1B592A820(&qword_1E9D63858, (void (*)(uint64_t))type metadata accessor for DismissAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B592AEC8(uint64_t a1)
{
  uint64_t result = sub_1B592A820(&qword_1E9D63878, (void (*)(uint64_t))type metadata accessor for DismissAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B592AF20()
{
  return objectdestroy_11Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_11Tm(void (*a1)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v1 + 32));
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v1, 56, 7);
}

uint64_t sub_1B592AF98()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B592D9C8;
  uint64_t v2 = (uint64_t (__cdecl *)())((char *)&dword_1E9D63880 + dword_1E9D63880);
  return v2();
}

uint64_t sub_1B592B074()
{
  return sub_1B5925484(v0);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1B592B094()
{
  return objectdestroy_39Tm(MEMORY[0x1E4F3C820]);
}

uint64_t sub_1B592B0AC()
{
  return sub_1B592B2C4(MEMORY[0x1E4F3C820], sub_1B592507C);
}

uint64_t sub_1B592B0DC(uint64_t a1)
{
  return sub_1B5927F58(a1, v1, MEMORY[0x1E4F3C820], (uint64_t)&unk_1F0EA8FE0, (uint64_t)sub_1B592B0AC, (uint64_t)&block_descriptor_43);
}

uint64_t sub_1B592B130()
{
  return sub_1B5A1A958();
}

uint64_t sub_1B592B158(uint64_t a1)
{
  return sub_1B5927F58(a1, v1, MEMORY[0x1E4F3C868], (uint64_t)&unk_1F0EA9030, (uint64_t)sub_1B592B298, (uint64_t)&block_descriptor_57);
}

uint64_t sub_1B592B1AC()
{
  return objectdestroy_39Tm(MEMORY[0x1E4F3C868]);
}

uint64_t objectdestroy_39Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_1B592B298()
{
  return sub_1B592B2C4(MEMORY[0x1E4F3C868], sub_1B5928300);
}

uint64_t sub_1B592B2C4(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5);
}

uint64_t sub_1B592B344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B592B3AC()
{
  unint64_t result = qword_1E9D638D8[0];
  if (!qword_1E9D638D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9D638D8);
  }
  return result;
}

uint64_t sub_1B592B400()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B592B440()
{
  return sub_1B5927748(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1B592B44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B592B4B4()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1B592B504()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 72);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1B592D9C8;
  *(_OWORD *)(v2 + 24) = v3;
  *(void *)(v2 + 16) = v0 + 32;
  return MEMORY[0x1F4188298](sub_1B5924654, 0, 0);
}

uint64_t sub_1B592B5B8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B592B5F0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1B592D9C8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E9D63908 + dword_1E9D63908);
  return v6(a1, v4);
}

uint64_t sub_1B592B6A8()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1B592B6F0()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_1B592D9C8;
  return MEMORY[0x1F4188298](sub_1B5923E3C, 0, 0);
}

uint64_t destroy for SetAction(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 != 255) {
    uint64_t result = sub_1B591F344(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), v3 & 1);
  }
  int v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 != 255)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    return sub_1B591F344(v5, v6, v7, v4 & 1);
  }
  return result;
}

uint64_t initializeWithCopy for SetAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  int v4 = (_OWORD *)(a1 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *int v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  }
  else
  {
    char v6 = v5 & 1;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    sub_1B5909638(v7, v8, v9, v6);
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v6;
  }
  int v10 = *(unsigned __int8 *)(a2 + 64);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  }
  else
  {
    char v11 = v10 & 1;
    uint64_t v12 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    uint64_t v14 = *(void *)(a2 + 56);
    sub_1B5909638(v12, v13, v14, v10 & 1);
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v14;
    *(unsigned char *)(a1 + 64) = v11;
  }
  return a1;
}

uint64_t assignWithCopy for SetAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = (long long *)(a1 + 8);
  int v5 = (long long *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v6 == 255)
    {
      long long v8 = *v5;
      *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
      *int v4 = v8;
    }
    else
    {
      char v17 = v6 & 1;
      uint64_t v18 = *(void *)(a2 + 8);
      uint64_t v19 = *(void *)(a2 + 16);
      uint64_t v20 = *(void *)(a2 + 24);
      sub_1B5909638(v18, v19, v20, v6 & 1);
      *(void *)(a1 + 8) = v18;
      *(void *)(a1 + 16) = v19;
      *(void *)(a1 + 24) = v20;
      *(unsigned char *)(a1 + 32) = v17;
    }
  }
  else if (v6 == 255)
  {
    sub_1B5908FC0(a1 + 8, &qword_1E9D63930);
    long long v7 = *(_OWORD *)(a2 + 17);
    *int v4 = *v5;
    *(_OWORD *)(a1 + 17) = v7;
  }
  else
  {
    char v9 = v6 & 1;
    uint64_t v10 = *(void *)(a2 + 8);
    uint64_t v11 = *(void *)(a2 + 16);
    uint64_t v12 = *(void *)(a2 + 24);
    sub_1B5909638(v10, v11, v12, v6 & 1);
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = *(void *)(a1 + 16);
    uint64_t v15 = *(void *)(a1 + 24);
    char v16 = *(unsigned char *)(a1 + 32);
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v11;
    *(void *)(a1 + 24) = v12;
    *(unsigned char *)(a1 + 32) = v9;
    sub_1B591F344(v13, v14, v15, v16);
  }
  uint64_t v21 = (long long *)(a1 + 40);
  uint64_t v22 = (long long *)(a2 + 40);
  int v23 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v23 == 255)
    {
      long long v25 = *v22;
      *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
      long long *v21 = v25;
    }
    else
    {
      char v34 = v23 & 1;
      uint64_t v35 = *(void *)(a2 + 40);
      uint64_t v36 = *(void *)(a2 + 48);
      uint64_t v37 = *(void *)(a2 + 56);
      sub_1B5909638(v35, v36, v37, v23 & 1);
      *(void *)(a1 + 40) = v35;
      *(void *)(a1 + 48) = v36;
      *(void *)(a1 + 56) = v37;
      *(unsigned char *)(a1 + 64) = v34;
    }
  }
  else if (v23 == 255)
  {
    sub_1B5908FC0(a1 + 40, &qword_1E9D63930);
    long long v24 = *(_OWORD *)(a2 + 49);
    long long *v21 = *v22;
    *(_OWORD *)(a1 + 49) = v24;
  }
  else
  {
    char v26 = v23 & 1;
    uint64_t v27 = *(void *)(a2 + 40);
    uint64_t v28 = *(void *)(a2 + 48);
    uint64_t v29 = *(void *)(a2 + 56);
    sub_1B5909638(v27, v28, v29, v23 & 1);
    uint64_t v30 = *(void *)(a1 + 40);
    uint64_t v31 = *(void *)(a1 + 48);
    uint64_t v32 = *(void *)(a1 + 56);
    char v33 = *(unsigned char *)(a1 + 64);
    *(void *)(a1 + 40) = v27;
    *(void *)(a1 + 48) = v28;
    *(void *)(a1 + 56) = v29;
    *(unsigned char *)(a1 + 64) = v26;
    sub_1B591F344(v30, v31, v32, v33);
  }
  return a1;
}

uint64_t assignWithTake for SetAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  int v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 == 255) {
    goto LABEL_4;
  }
  int v5 = *(unsigned __int8 *)(a2 + 32);
  if (v5 == 255)
  {
    sub_1B5908FC0(a1 + 8, &qword_1E9D63930);
LABEL_4:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
    goto LABEL_6;
  }
  char v6 = v4 & 1;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v5 & 1;
  sub_1B591F344(v8, v9, v10, v6);
LABEL_6:
  int v11 = *(unsigned __int8 *)(a1 + 64);
  if (v11 != 255)
  {
    int v12 = *(unsigned __int8 *)(a2 + 64);
    if (v12 != 255)
    {
      char v13 = v11 & 1;
      uint64_t v14 = *(void *)(a2 + 56);
      uint64_t v15 = *(void *)(a1 + 40);
      uint64_t v16 = *(void *)(a1 + 48);
      uint64_t v17 = *(void *)(a1 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = v14;
      *(unsigned char *)(a1 + 64) = v12 & 1;
      sub_1B591F344(v15, v16, v17, v13);
      return a1;
    }
    sub_1B5908FC0(a1 + 40, &qword_1E9D63930);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for SetAction(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 65)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SetAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetAction()
{
  return &type metadata for SetAction;
}

unsigned char *storeEnumTagSinglePayload for OpenURLAction.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B592BD78);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenURLAction.CodingKeys()
{
  return &type metadata for OpenURLAction.CodingKeys;
}

unint64_t sub_1B592BDB4()
{
  unint64_t result = qword_1E9D63938;
  if (!qword_1E9D63938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63938);
  }
  return result;
}

unint64_t sub_1B592BE08(uint64_t a1)
{
  unint64_t result = sub_1B592BE30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B592BE30()
{
  unint64_t result = qword_1E9D63940[0];
  if (!qword_1E9D63940[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9D63940);
  }
  return result;
}

unint64_t sub_1B592BE84(uint64_t a1)
{
  unint64_t result = sub_1B592BEAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B592BEAC()
{
  unint64_t result = qword_1E9D63960;
  if (!qword_1E9D63960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63960);
  }
  return result;
}

unint64_t sub_1B592BF04()
{
  unint64_t result = qword_1E9D63968;
  if (!qword_1E9D63968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63968);
  }
  return result;
}

unint64_t sub_1B592BF5C()
{
  unint64_t result = qword_1E9D63970;
  if (!qword_1E9D63970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63970);
  }
  return result;
}

uint64_t sub_1B592BFB0(uint64_t a1, void (*a2)(uint64_t, uint64_t, void *))
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v21 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v25 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v8 = v7 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v21) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v20 + 8 * v17);
    ++v6;
    if (!v18)
    {
      int64_t v6 = v17 + 1;
      if (v17 + 1 >= v21) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v20 + 8 * v6);
      if (!v18)
      {
        int64_t v6 = v17 + 2;
        if (v17 + 2 >= v21) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v20 + 8 * v6);
        if (!v18)
        {
          int64_t v6 = v17 + 3;
          if (v17 + 3 >= v21) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v20 + 8 * v6);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v4 = (v18 - 1) & v18;
    unint64_t v8 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_5:
    uint64_t v9 = (uint64_t *)(*(void *)(v25 + 48) + 16 * v8);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = *(void *)(v25 + 56) + 32 * v8;
    uint64_t v14 = *(void *)(v12 + 8);
    uint64_t v15 = *(void *)(v12 + 16);
    char v16 = *(unsigned char *)(v12 + 24);
    v23[0] = *(void *)v12;
    uint64_t v13 = v23[0];
    v23[1] = v14;
    void v23[2] = v15;
    char v24 = v16;
    swift_bridgeObjectRetain();
    sub_1B5909638(v13, v14, v15, v16);
    a2(v10, v11, v23);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B591F344(v13, v14, v15, v16);
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v21) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v20 + 8 * v19);
  if (v18)
  {
    int64_t v6 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v6 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v6 >= v21) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v20 + 8 * v6);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1B592C1CC(uint64_t a1)
{
  if (objc_msgSend(self, sel_isMainThread))
  {
    sub_1B5925980(a1);
  }
  else
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1B5A1A328();
    __swift_project_value_buffer(v2, (uint64_t)qword_1E9D910D0);
    uint64_t v3 = sub_1B5A1A308();
    os_log_type_t v4 = sub_1B5A1C278();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v7 = a1;
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1B58FD000, v3, v4, "Synchronous call to SetAction is not on main thread, falling back to default performAction", v5, 2u);
      int64_t v6 = v5;
      a1 = v7;
      MEMORY[0x1BA9A4780](v6, -1, -1);
    }

    sub_1B59263E8(a1);
  }
}

uint64_t sub_1B592C360(uint64_t a1, uint64_t a2)
{
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B592C3D8()
{
  return 7107189;
}

uint64_t sub_1B592C3E8(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1B5909638(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_1B592C400(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B592C43C(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1B591F344(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_1B592C454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B5926360(a1, a2, a3, v3);
}

uint64_t sub_1B592C45C()
{
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255) {
    sub_1B591F344(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v1 & 1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255) {
    sub_1B591F344(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), v2 & 1);
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

void sub_1B592C4D4()
{
  sub_1B5925980(*(void *)(v0 + 88));
}

uint64_t sub_1B592C500(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRetain();
  sub_1B592C3E8(v2, v3, v4, v8);
  sub_1B592C3E8(v5, v6, v7, v9);
  return a1;
}

uint64_t sub_1B592C590(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v8 = v1[25];
  uint64_t v7 = v1[26];
  unsigned __int8 v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1B592D9C8;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9D63998
                                                                                     + dword_1E9D63998);
  return v10(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1B592C66C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 112);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 56);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 88);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 120);
  sub_1B5904B60(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_1B5904BDC(v2, v3, v4, v8);
  sub_1B5904BF0(v5, v6, v7, v9);
  sub_1B5904BF0(v14, v13, v12, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t objectdestroy_104Tm()
{
  swift_unknownObjectRelease();
  sub_1B5904A88(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  unsigned int v1 = *(unsigned __int8 *)(v0 + 88);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 120);
  if (v2 != 255) {
    sub_1B592D000(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), v2 & 1, sub_1B5905298);
  }
  int v3 = *(unsigned __int8 *)(v0 + 152);
  if (v3 != 255) {
    sub_1B592D000(*(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), v3 & 1, sub_1B5905298);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 216, 7);
}

uint64_t sub_1B592C85C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v8 = v1[25];
  uint64_t v7 = v1[26];
  unsigned __int8 v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1B592D9C8;
  return sub_1B594EB58(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1B592C924()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_1B5904A88(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  unsigned int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 128);
  if (v2 != 255) {
    sub_1B592D000(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), v2 & 1, sub_1B5905298);
  }
  sub_1B590D6F0(*(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(unsigned char *)(v0 + 160));
  sub_1B5904A88(*(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(unsigned char *)(v0 + 192));
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 216, 7);
}

uint64_t sub_1B592C9EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[25];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1B592D9C8;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9D639C0 + dword_1E9D639C0);
  return v8(a1, v4, v5, (uint64_t)(v1 + 4), v6);
}

uint64_t sub_1B592CAC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 112);
  uint64_t v19 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 120);
  uint64_t v21 = *(void *)(a1 + 144);
  uint64_t v22 = *(void *)(a1 + 136);
  uint64_t v20 = *(void *)(a1 + 152);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 64);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 96);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 160);
  char v16 = *(unsigned char *)(a1 + 128);
  swift_retain();
  sub_1B5904B60(v2, v3, v4, v8);
  sub_1B5904BDC(v5, v6, v7, v9);
  sub_1B5904BF0(v14, v13, v12, v10);
  sub_1B590D634(v19, v18, v17, v16);
  sub_1B5904B60(v22, v21, v20, v15);
  return a1;
}

uint64_t sub_1B592CBD8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B592CC38(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1 + 4;
  uint64_t v8 = v1[7];
  uint64_t v7 = v1[8];
  unsigned __int8 v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1B592D9C8;
  unsigned __int8 v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))((char *)&dword_1E9D639E0
                                                                                       + dword_1E9D639E0);
  return v10(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1B592CD14()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 104) != 254)
  {
    sub_1B5904A88(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
    int v1 = *(unsigned __int8 *)(v0 + 104);
    if (v1 != 255) {
      sub_1B590D6F0(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), v1 & 1);
    }
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 128, 7);
}

uint64_t sub_1B592CDA4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v8 = v1[14];
  uint64_t v7 = v1[15];
  unsigned __int8 v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1B592D9C8;
  unsigned __int8 v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9D63A00
                                                                                     + dword_1E9D63A00);
  return v10(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1B592CE80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B592CF0C(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

void sub_1B592CF0C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  if (a8 != 254)
  {
    sub_1B5904B60(a1, a2, a3, a4);
    sub_1B590F04C(a5, a6, a7, a8);
  }
}

uint64_t sub_1B592CF74()
{
  swift_unknownObjectRelease();
  sub_1B592D000(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56), sub_1B592D9F8);
  sub_1B591DF0C(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  sub_1B591F344(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(unsigned char *)(v0 + 120));
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 144, 7);
}

uint64_t sub_1B592D000(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(uint64_t))
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return a5(a3);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B592D064(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[16];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1B592D9C8;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9D63A20 + dword_1E9D63A20);
  return v8(a1, v4, v5, (uint64_t)(v1 + 4), v6);
}

uint64_t sub_1B592D140(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  char v8 = *(unsigned char *)(a1 + 88);
  char v9 = *(unsigned char *)(a1 + 56);
  sub_1B592D1E8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), sub_1B592D9F4);
  sub_1B591DF88(v2, v3, v4, v9);
  sub_1B5909638(v5, v6, v7, v8);
  return a1;
}

uint64_t sub_1B592D1E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(uint64_t))
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return a5(a3);
  }
  else
  {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1B592D24C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1B592D258()
{
  swift_unknownObjectRelease();
  sub_1B592D000(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56), sub_1B592D9F8);
  sub_1B591F344(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1B592D2D4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[12];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1B592D9C8;
  char v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9D63A40 + dword_1E9D63A40);
  return v8(a1, v4, v5, (uint64_t)(v1 + 4), v6);
}

uint64_t sub_1B592D3B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  char v5 = *(unsigned char *)(a1 + 56);
  sub_1B592D1E8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), sub_1B592D9F4);
  sub_1B5909638(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_1B592D428()
{
  swift_unknownObjectRelease();
  sub_1B5904AB4(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  sub_1B592D000(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88), sub_1B5905298);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1B592D4A4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 96);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1B592D9C8;
  char v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *, uint64_t))((char *)&dword_1E9D63A60 + dword_1E9D63A60);
  return v8(a1, v4, v5, (_OWORD *)(v1 + 32), v6);
}

uint64_t sub_1B592D580(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  char v5 = *(unsigned char *)(a1 + 56);
  sub_1B5904B8C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_1B592D1E8(v2, v3, v4, v5, sub_1B592D9F4);
  return a1;
}

uint64_t sub_1B592D5F8()
{
  swift_unknownObjectRelease();
  sub_1B5904AB4(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  sub_1B592D000(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88), sub_1B5905298);
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1B592D674(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[14];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1B592D9C8;
  return sub_1B5A0A598(a1, v4, v5, v6, v7, v8, v9);
}

unint64_t sub_1B592D74C()
{
  unint64_t result = qword_1E9D63AB8;
  if (!qword_1E9D63AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63AB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SetAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B592D86CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetAction.CodingKeys()
{
  return &type metadata for SetAction.CodingKeys;
}

unint64_t sub_1B592D8A8()
{
  unint64_t result = qword_1E9D63AC8;
  if (!qword_1E9D63AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63AC8);
  }
  return result;
}

unint64_t sub_1B592D900()
{
  unint64_t result = qword_1E9D63AD0;
  if (!qword_1E9D63AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63AD0);
  }
  return result;
}

unint64_t sub_1B592D958()
{
  unint64_t result = qword_1E9D63AD8;
  if (!qword_1E9D63AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63AD8);
  }
  return result;
}

uint64_t sub_1B592D9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5927198(a1, a2);
}

ValueMetadata *type metadata accessor for DividerView()
{
  return &type metadata for DividerView;
}

uint64_t destroy for SectionView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  }
  if (*(void *)(a1 + 88)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SectionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  uint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 24, v5, v6);
  }
  else
  {
    long long v8 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 40) = v8;
    *(void *)(a1 + 56) = *(void *)(v5 + 32);
  }
  uint64_t v9 = (_OWORD *)(a1 + 64);
  uint64_t v10 = (_OWORD *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 88);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v11;
    *(void *)(a1 + 96) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 80);
    _OWORD *v9 = *v10;
    *(_OWORD *)(a1 + 80) = v13;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
  }
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SectionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  }
  else if (v4)
  {
    *(void *)(a1 + 48) = v4;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (v7)
    {
      *(void *)(a1 + 88) = v7;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 64, a2 + 64);
      goto LABEL_15;
    }
LABEL_14:
    long long v8 = *(_OWORD *)(a2 + 64);
    long long v9 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 80) = v9;
    goto LABEL_15;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 64);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
LABEL_15:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for SectionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  if (*(void *)(a1 + 88)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  }
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for SectionView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SectionView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionView()
{
  return &type metadata for SectionView;
}

uint64_t destroy for ListView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for ListView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ListView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ListView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListView()
{
  return &type metadata for ListView;
}

uint64_t sub_1B592E14C()
{
  return sub_1B5A1BB28();
}

uint64_t sub_1B592E224(char a1)
{
  if (a1) {
    return 0x7377656976;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1B592E24C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B59ECB9C(*a1, *a2);
}

uint64_t sub_1B592E258()
{
  return sub_1B59F072C(*v0);
}

uint64_t sub_1B592E260(uint64_t a1)
{
  return sub_1B59F2CF4(a1, *v1);
}

uint64_t sub_1B592E268(uint64_t a1)
{
  return sub_1B59F6724(a1, *v1);
}

uint64_t sub_1B592E270@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B592E2D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B592E224(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B592E2FC()
{
  return sub_1B592E224(*v0);
}

uint64_t sub_1B592E304@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B592E368(uint64_t a1)
{
  unint64_t v2 = sub_1B592FF30();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B592E3A4(uint64_t a1)
{
  unint64_t v2 = sub_1B592FF30();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B592E3E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63400);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  long long v9 = &v13[-v8];
  long long v10 = v1[1];
  v15[0] = *v1;
  v15[1] = v10;
  _OWORD v15[2] = v1[2];
  uint64_t v14 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  sub_1B5A1B308();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_1B59095C8(&qword_1E9D63408, &qword_1E9D63400);
  uint64_t v11 = sub_1B5A1BA88();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  *a1 = v11;
  return result;
}

uint64_t sub_1B592E5AC()
{
  return sub_1B5A1B308();
}

double sub_1B592E654@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B592FB78(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1B592E698()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B592E6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B592F454(a1, a2, a3, (void (*)(void))sub_1B592E6E0, (void (*)(void))sub_1B591E440);
}

unint64_t sub_1B592E6E0()
{
  unint64_t result = qword_1E9D63AE0;
  if (!qword_1E9D63AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63AE0);
  }
  return result;
}

uint64_t sub_1B592E734()
{
  uint64_t v1 = v0;
  sub_1B5921484(v0 + 24, (uint64_t)v9);
  uint64_t v2 = v10;
  if (v10)
  {
    uint64_t v3 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    sub_1B5908FC0((uint64_t)v9, &qword_1E9D632B0);
    uint64_t v4 = 0;
  }
  uint64_t v12 = v4;
  sub_1B5921484(v1 + 64, (uint64_t)v9);
  uint64_t v5 = v10;
  if (v10)
  {
    uint64_t v6 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    sub_1B5908FC0((uint64_t)v9, &qword_1E9D632B0);
    uint64_t v7 = 0;
  }
  v9[0] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63440);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
  sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  return sub_1B5A1BB38();
}

uint64_t sub_1B592E8FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_1B592E954(char a1)
{
  return qword_1B5A1FEA0[a1];
}

uint64_t sub_1B592E974(char *a1, char *a2)
{
  return sub_1B59EFA24(*a1, *a2);
}

uint64_t sub_1B592E980()
{
  return sub_1B59F0730();
}

uint64_t sub_1B592E988()
{
  return sub_1B59F4944();
}

uint64_t sub_1B592E990()
{
  return sub_1B59F53CC();
}

uint64_t sub_1B592E998@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5930600();
  *a1 = result;
  return result;
}

uint64_t sub_1B592E9C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B592E954(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B592E9F4()
{
  return sub_1B592E954(*v0);
}

uint64_t sub_1B592E9FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5930600();
  *a1 = result;
  return result;
}

uint64_t sub_1B592EA24(uint64_t a1)
{
  unint64_t v2 = sub_1B592FA08();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B592EA60(uint64_t a1)
{
  unint64_t v2 = sub_1B592FA08();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B592EA9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  char v33 = *(char **)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B20);
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51[5] = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B592F96C((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  v51[6] = sub_1B5A1A918();
  v51[7] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B592FA08();
  uint64_t v10 = (uint64_t)v52;
  sub_1B5A1C838();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    char v52 = a1;
    LOBYTE(v36) = 0;
    uint64_t v11 = sub_1B5A1C598();
    uint64_t v14 = v12;
    if (v12)
    {
      uint64_t v15 = v11;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v15 = sub_1B5A1A288();
      uint64_t v14 = v16;
      (*((void (**)(char *, uint64_t))v33 + 1))(v5, v3);
    }
    v49[0] = v15;
    v49[1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    LOBYTE(v46) = 1;
    sub_1B592FA5C();
    sub_1B5A1C5B8();
    if ((void)v36) {
      uint64_t v17 = v36;
    }
    else {
      uint64_t v17 = MEMORY[0x1E4FBC860];
    }
    uint64_t v18 = sub_1B59196AC(v17);
    swift_bridgeObjectRelease();
    v49[2] = v18;
    char v35 = 2;
    sub_1B5914100();
    sub_1B5A1C5B8();
    char v33 = v8;
    if (*((void *)&v36 + 1))
    {
      *((void *)&v47 + 1) = &type metadata for ViewContent;
      unint64_t v48 = sub_1B5914034();
      uint64_t v19 = swift_allocObject();
      *(void *)&long long v46 = v19;
      long long v20 = v43;
      *(_OWORD *)(v19 + 112) = v42;
      *(_OWORD *)(v19 + 128) = v20;
      *(_OWORD *)(v19 + 144) = v44;
      *(void *)(v19 + 160) = v45;
      long long v21 = v39;
      *(_OWORD *)(v19 + 48) = v38;
      *(_OWORD *)(v19 + 64) = v21;
      long long v22 = v41;
      *(_OWORD *)(v19 + 80) = v40;
      *(_OWORD *)(v19 + 96) = v22;
      long long v23 = v37;
      *(_OWORD *)(v19 + 16) = v36;
      *(_OWORD *)(v19 + 32) = v23;
    }
    else
    {
      sub_1B5908FC0((uint64_t)&v36, &qword_1E9D63B40);
      long long v46 = 0u;
      long long v47 = 0u;
      unint64_t v48 = 0;
    }
    sub_1B59215A0((uint64_t)&v46, (uint64_t)&v50);
    char v35 = 3;
    sub_1B5A1C5B8();
    uint64_t v24 = v34;
    if (*((void *)&v36 + 1))
    {
      *((void *)&v47 + 1) = &type metadata for ViewContent;
      unint64_t v48 = sub_1B5914034();
      uint64_t v25 = swift_allocObject();
      *(void *)&long long v46 = v25;
      long long v26 = v43;
      *(_OWORD *)(v25 + 112) = v42;
      *(_OWORD *)(v25 + 128) = v26;
      *(_OWORD *)(v25 + 144) = v44;
      *(void *)(v25 + 160) = v45;
      long long v27 = v39;
      *(_OWORD *)(v25 + 48) = v38;
      *(_OWORD *)(v25 + 64) = v27;
      long long v28 = v41;
      *(_OWORD *)(v25 + 80) = v40;
      *(_OWORD *)(v25 + 96) = v28;
      long long v29 = v37;
      *(_OWORD *)(v25 + 16) = v36;
      *(_OWORD *)(v25 + 32) = v29;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v33, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v6);
      sub_1B5908FC0((uint64_t)&v36, &qword_1E9D63B40);
      long long v46 = 0u;
      long long v47 = 0u;
      unint64_t v48 = 0;
    }
    uint64_t v30 = v32;
    sub_1B59215A0((uint64_t)&v46, (uint64_t)v51);
    sub_1B591E628((uint64_t)v49, v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    return sub_1B592FAD0((uint64_t)v49);
  }
}

uint64_t sub_1B592F064@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5970E2C();
  *a1 = result;
  return result;
}

uint64_t sub_1B592F090@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B592EA9C(a1, a2);
}

uint64_t sub_1B592F0A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B592F0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B592F454(a1, a2, a3, (void (*)(void))sub_1B592F0F0, (void (*)(void))sub_1B591E5BC);
}

unint64_t sub_1B592F0F0()
{
  unint64_t result = qword_1E9D63AE8;
  if (!qword_1E9D63AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63AE8);
  }
  return result;
}

uint64_t sub_1B592F144@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B592F198@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B592F1F0(uint64_t a1)
{
  unint64_t v2 = sub_1B592F9B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B592F22C(uint64_t a1)
{
  unint64_t v2 = sub_1B592F9B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B592F268@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1BB18();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1B5A1BB08();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_1B592F96C(&qword_1E9D63450, MEMORY[0x1E4F3EE70]);
  uint64_t v9 = sub_1B5A1BA88();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  *a1 = v9;
  return result;
}

double sub_1B592F3C4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B592F690(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B592F40C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B592F428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B592F454(a1, a2, a3, (void (*)(void))sub_1B592F4C4, (void (*)(void))sub_1B591E684);
}

uint64_t sub_1B592F454(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B592F4C4()
{
  unint64_t result = qword_1E9D63AF0;
  if (!qword_1E9D63AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63AF0);
  }
  return result;
}

unint64_t sub_1B592F518(uint64_t a1)
{
  unint64_t result = sub_1B592F540();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B592F540()
{
  unint64_t result = qword_1E9D63AF8;
  if (!qword_1E9D63AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63AF8);
  }
  return result;
}

unint64_t sub_1B592F594(uint64_t a1)
{
  unint64_t result = sub_1B592F5BC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B592F5BC()
{
  unint64_t result = qword_1E9D63B00;
  if (!qword_1E9D63B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B00);
  }
  return result;
}

unint64_t sub_1B592F610(uint64_t a1)
{
  unint64_t result = sub_1B592F638();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B592F638()
{
  unint64_t result = qword_1E9D63B08;
  if (!qword_1E9D63B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B08);
  }
  return result;
}

uint64_t sub_1B592F690@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v24 = sub_1B5A1A2A8();
  uint64_t v27 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  long long v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B10);
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B592F96C((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v8 = sub_1B5A1A918();
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B592F9B4();
  swift_retain();
  sub_1B5A1C838();
  if (v2)
  {
    swift_release_n();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v23 = v8;
    uint64_t v12 = v26;
    uint64_t v11 = v27;
    uint64_t v13 = v28;
    uint64_t v14 = sub_1B5A1C598();
    uint64_t v17 = v16;
    if (v16)
    {
      uint64_t v18 = v14;
    }
    else
    {
      long long v22 = v5;
      sub_1B5A1A298();
      uint64_t v18 = sub_1B5A1A288();
      uint64_t v17 = v19;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v22, v24);
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
    long long v20 = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v21 = v23;
    uint64_t result = swift_release();
    *long long v20 = v18;
    v20[1] = v17;
    v20[2] = MEMORY[0x1E4FBC860];
    v20[3] = v21;
    v20[4] = v10;
  }
  return result;
}

uint64_t sub_1B592F96C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B592F9B4()
{
  unint64_t result = qword_1E9D63B18;
  if (!qword_1E9D63B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B18);
  }
  return result;
}

unint64_t sub_1B592FA08()
{
  unint64_t result = qword_1E9D63B28;
  if (!qword_1E9D63B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B28);
  }
  return result;
}

unint64_t sub_1B592FA5C()
{
  unint64_t result = qword_1E9D63B38;
  if (!qword_1E9D63B38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63B30);
    sub_1B5914100();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B38);
  }
  return result;
}

uint64_t sub_1B592FAD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B592FB00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B592FB78@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x1F4188790](v3);
  long long v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B48);
  uint64_t v33 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B592F96C((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v9 = sub_1B5A1A918();
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  long long v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B592FF30();
  swift_retain();
  uint64_t v13 = v37;
  sub_1B5A1C838();
  if (v13)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    return swift_release();
  }
  else
  {
    uint64_t v15 = v34;
    uint64_t v14 = v35;
    uint64_t v37 = v9;
    uint64_t v31 = v11;
    uint64_t v16 = v33;
    char v40 = 0;
    uint64_t v17 = sub_1B5A1C598();
    uint64_t v20 = v18;
    if (v18)
    {
      uint64_t v30 = v17;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v30 = sub_1B5A1A288();
      uint64_t v20 = v21;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v14);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    char v39 = 1;
    sub_1B592FA5C();
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    uint64_t v22 = MEMORY[0x1E4FBC860];
    if (v38) {
      uint64_t v23 = v38;
    }
    else {
      uint64_t v23 = MEMORY[0x1E4FBC860];
    }
    uint64_t v24 = v16;
    uint64_t v25 = sub_1B59196AC(v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    uint64_t v26 = v37;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v27 = v32;
    *uint64_t v32 = v30;
    v27[1] = v20;
    v27[2] = v25;
    v27[3] = v22;
    uint64_t v28 = v31;
    v27[4] = v26;
    v27[5] = v28;
  }
  return result;
}

unint64_t sub_1B592FF30()
{
  unint64_t result = qword_1E9D63B50;
  if (!qword_1E9D63B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ListView.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5930050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListView.CodingKeys()
{
  return &type metadata for ListView.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SectionView.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5930154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionView.CodingKeys()
{
  return &type metadata for SectionView.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DividerView.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5930228);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DividerView.CodingKeys()
{
  return &type metadata for DividerView.CodingKeys;
}

uint64_t sub_1B5930260()
{
  return sub_1B592F96C(&qword_1E9D63450, MEMORY[0x1E4F3EE70]);
}

uint64_t sub_1B59302AC()
{
  return sub_1B59095C8(&qword_1E9D63408, &qword_1E9D63400);
}

unint64_t sub_1B59302EC()
{
  unint64_t result = qword_1E9D63B58;
  if (!qword_1E9D63B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B58);
  }
  return result;
}

unint64_t sub_1B5930344()
{
  unint64_t result = qword_1E9D63B60;
  if (!qword_1E9D63B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B60);
  }
  return result;
}

unint64_t sub_1B593039C()
{
  unint64_t result = qword_1E9D63B68;
  if (!qword_1E9D63B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B68);
  }
  return result;
}

unint64_t sub_1B59303F4()
{
  unint64_t result = qword_1E9D63B70;
  if (!qword_1E9D63B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B70);
  }
  return result;
}

unint64_t sub_1B593044C()
{
  unint64_t result = qword_1E9D63B78;
  if (!qword_1E9D63B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B78);
  }
  return result;
}

unint64_t sub_1B59304A4()
{
  unint64_t result = qword_1E9D63B80;
  if (!qword_1E9D63B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B80);
  }
  return result;
}

unint64_t sub_1B59304FC()
{
  unint64_t result = qword_1E9D63B88;
  if (!qword_1E9D63B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B88);
  }
  return result;
}

unint64_t sub_1B5930554()
{
  unint64_t result = qword_1E9D63B90;
  if (!qword_1E9D63B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B90);
  }
  return result;
}

unint64_t sub_1B59305AC()
{
  unint64_t result = qword_1E9D63B98;
  if (!qword_1E9D63B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63B98);
  }
  return result;
}

uint64_t sub_1B5930600()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

void destroy for NavigationBarBackButtonHiddenModifier(uint64_t a1)
{
}

uint64_t initializeWithCopy for NavigationBarBackButtonHiddenModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B590D634(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for NavigationBarBackButtonHiddenModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B590D634(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B590D6F0(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for NavigationBarBackButtonHiddenModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B590D6F0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationBarBackButtonHiddenModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NavigationBarBackButtonHiddenModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationBarBackButtonHiddenModifier()
{
  return &type metadata for NavigationBarBackButtonHiddenModifier;
}

uint64_t sub_1B5930824@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    sub_1B5915308();
    sub_1B5A1C6C8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *(_OWORD *)a2 = v6;
    *(void *)(a2 + 16) = v7;
    *(unsigned char *)(a2 + 24) = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1B5930928(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v8 = *(void *)v3;
  uint64_t v9 = *(void *)(v3 + 8);
  uint64_t v10 = *(void *)(v3 + 16);
  char v11 = *(unsigned char *)(v3 + 24);
  sub_1B590D634(*(void *)v3, v9, v10, v11);
  sub_1B59B4120(a2, v8, v9, v10, v11);
  sub_1B590D6F0(v8, v9, v10, v11);
  if (!v4)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    a3[3] = swift_getOpaqueTypeMetadata2();
    a3[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B5A1B608();
  }
}

uint64_t sub_1B5930A5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5930824(a1, a2);
}

unint64_t sub_1B5930A74(uint64_t a1)
{
  unint64_t result = sub_1B5930A9C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5930A9C()
{
  unint64_t result = qword_1E9D63BA0;
  if (!qword_1E9D63BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BA0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ElementColorName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ElementColorName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5930C4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ElementColorName()
{
  return &type metadata for ElementColorName;
}

unint64_t sub_1B5930C84(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7261646E6F636573;
      break;
    case 2:
      unint64_t result = 0x7972616974726574;
      break;
    case 3:
      unint64_t result = 0x616E726574617571;
      break;
    case 4:
      unint64_t result = 0x69466D6574737973;
      break;
    case 5:
      return result;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0x6C6F686563616C70;
      break;
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0xD000000000000019;
      break;
    case 11:
      unint64_t result = 0xD000000000000018;
      break;
    case 12:
      unint64_t result = 0xD000000000000017;
      break;
    case 13:
      unint64_t result = 0xD000000000000020;
      break;
    case 14:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 15:
      unint64_t result = 0x6F74617261706573;
      break;
    case 16:
      unint64_t result = 0x655365757161706FLL;
      break;
    case 17:
      unint64_t result = 1802398060;
      break;
    case 18:
      unint64_t result = 0x747865546B726164;
      break;
    case 19:
      unint64_t result = 0x786554746867696CLL;
      break;
    default:
      unint64_t result = 0x6C6562616CLL;
      break;
  }
  return result;
}

uint64_t sub_1B5930EF4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1B5930C84(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B5930C84(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B5930F80()
{
  char v1 = *v0;
  sub_1B5A1C7A8();
  sub_1B5930C84(v1);
  sub_1B5A1BF88();
  swift_bridgeObjectRelease();
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5930FE4()
{
  sub_1B5930C84(*v0);
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5931038()
{
  char v1 = *v0;
  sub_1B5A1C7A8();
  sub_1B5930C84(v1);
  sub_1B5A1BF88();
  swift_bridgeObjectRelease();
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5931098@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59312A4();
  *a1 = result;
  return result;
}

unint64_t sub_1B59310C8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B5930C84(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59310F4()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B5931154()
{
  return sub_1B5A1C068();
}

unint64_t sub_1B59311A8()
{
  unint64_t result = qword_1E9D63BA8;
  if (!qword_1E9D63BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BA8);
  }
  return result;
}

id sub_1B59311FC(char a1)
{
  id v1 = objc_msgSend(self, *off_1E6120E80[a1]);
  return v1;
}

unint64_t sub_1B5931250()
{
  unint64_t result = qword_1E9D63BB0;
  if (!qword_1E9D63BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BB0);
  }
  return result;
}

uint64_t sub_1B59312A4()
{
  unint64_t v0 = sub_1B5A1C728();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

void destroy for UnitPointResolvable(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v2);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v3);
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 88);
  if (v4 <= 0xFD)
  {
    uint64_t v5 = *(void *)(a1 + 64);
    uint64_t v6 = *(void *)(a1 + 72);
    uint64_t v7 = *(void *)(a1 + 80);
    sub_1B591DF0C(v5, v6, v7, v4);
  }
}

uint64_t initializeWithCopy for UnitPointResolvable(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 <= 0xFD)
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    sub_1B5904B60(*(void *)a2, v6, v7, v4);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  unsigned int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a2 + 48);
    sub_1B591DF88(v9, v10, v11, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  unsigned int v12 = *(unsigned __int8 *)(a2 + 88);
  if (v12 <= 0xFD)
  {
    uint64_t v13 = *(void *)(a2 + 64);
    uint64_t v14 = *(void *)(a2 + 72);
    uint64_t v15 = *(void *)(a2 + 80);
    sub_1B591DF88(v13, v14, v15, v12);
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v14;
    *(void *)(a1 + 80) = v15;
    *(unsigned char *)(a1 + 88) = v12;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  return a1;
}

uint64_t assignWithCopy for UnitPointResolvable(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) <= 0xFDu)
  {
    if (v4 <= 0xFD)
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      sub_1B5904B60(*(void *)a2, v11, v12, v4);
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = *(void *)(a1 + 16);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      unsigned __int8 v16 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v4;
      sub_1B5904A88(v13, v14, v15, v16);
    }
    else
    {
      sub_1B590DA50(a1);
      long long v6 = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 9) = v6;
    }
  }
  else if (v4 <= 0xFD)
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    uint64_t v9 = *((void *)a2 + 2);
    sub_1B5904B60(*(void *)a2, v8, v9, v4);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    long long v5 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v5;
  }
  uint64_t v17 = (_OWORD *)(a1 + 32);
  uint64_t v18 = a2 + 2;
  unsigned int v19 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v19 <= 0xFD)
    {
      uint64_t v25 = *((void *)a2 + 4);
      uint64_t v26 = *((void *)a2 + 5);
      uint64_t v27 = *((void *)a2 + 6);
      sub_1B591DF88(v25, v26, v27, *((unsigned char *)a2 + 56));
      uint64_t v28 = *(void *)(a1 + 32);
      uint64_t v29 = *(void *)(a1 + 40);
      uint64_t v30 = *(void *)(a1 + 48);
      *(void *)(a1 + 32) = v25;
      *(void *)(a1 + 40) = v26;
      *(void *)(a1 + 48) = v27;
      char v31 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v19;
      sub_1B591DF0C(v28, v29, v30, v31);
    }
    else
    {
      sub_1B59316FC(a1 + 32);
      long long v21 = *(long long *)((char *)a2 + 41);
      *uint64_t v17 = *v18;
      *(_OWORD *)(a1 + 41) = v21;
    }
  }
  else if (v19 <= 0xFD)
  {
    uint64_t v22 = *((void *)a2 + 4);
    uint64_t v23 = *((void *)a2 + 5);
    uint64_t v24 = *((void *)a2 + 6);
    sub_1B591DF88(v22, v23, v24, *((unsigned char *)a2 + 56));
    *(void *)(a1 + 32) = v22;
    *(void *)(a1 + 40) = v23;
    *(void *)(a1 + 48) = v24;
    *(unsigned char *)(a1 + 56) = v19;
  }
  else
  {
    long long v20 = *v18;
    *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
    *uint64_t v17 = v20;
  }
  uint64_t v32 = (_OWORD *)(a1 + 64);
  uint64_t v33 = a2 + 4;
  unsigned int v34 = *((unsigned __int8 *)a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) <= 0xFDu)
  {
    if (v34 <= 0xFD)
    {
      uint64_t v40 = *((void *)a2 + 8);
      uint64_t v41 = *((void *)a2 + 9);
      uint64_t v42 = *((void *)a2 + 10);
      sub_1B591DF88(v40, v41, v42, v34);
      uint64_t v43 = *(void *)(a1 + 64);
      uint64_t v44 = *(void *)(a1 + 72);
      uint64_t v45 = *(void *)(a1 + 80);
      *(void *)(a1 + 64) = v40;
      *(void *)(a1 + 72) = v41;
      *(void *)(a1 + 80) = v42;
      char v46 = *(unsigned char *)(a1 + 88);
      *(unsigned char *)(a1 + 88) = v34;
      sub_1B591DF0C(v43, v44, v45, v46);
    }
    else
    {
      sub_1B59316FC(a1 + 64);
      long long v36 = *(long long *)((char *)a2 + 73);
      *uint64_t v32 = *v33;
      *(_OWORD *)(a1 + 73) = v36;
    }
  }
  else if (v34 <= 0xFD)
  {
    uint64_t v37 = *((void *)a2 + 8);
    uint64_t v38 = *((void *)a2 + 9);
    uint64_t v39 = *((void *)a2 + 10);
    sub_1B591DF88(v37, v38, v39, v34);
    *(void *)(a1 + 64) = v37;
    *(void *)(a1 + 72) = v38;
    *(void *)(a1 + 80) = v39;
    *(unsigned char *)(a1 + 88) = v34;
  }
  else
  {
    long long v35 = *v33;
    *(_OWORD *)(a1 + 73) = *(long long *)((char *)a2 + 73);
    *uint64_t v32 = v35;
  }
  return a1;
}

uint64_t sub_1B59316FC(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for UnitPointResolvable(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 > 0xFD)
  {
    sub_1B590DA50(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5904A88(v7, v8, v9, v4);
LABEL_6:
  unsigned int v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_11;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + 56);
  if (v11 > 0xFD)
  {
    sub_1B59316FC(a1 + 32);
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v12;
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B591DF0C(v13, v14, v15, v10);
LABEL_11:
  unsigned int v16 = *(unsigned __int8 *)(a1 + 88);
  if (v16 <= 0xFD)
  {
    unsigned int v17 = *(unsigned __int8 *)(a2 + 88);
    if (v17 <= 0xFD)
    {
      uint64_t v18 = *(void *)(a2 + 80);
      uint64_t v19 = *(void *)(a1 + 64);
      uint64_t v20 = *(void *)(a1 + 72);
      uint64_t v21 = *(void *)(a1 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(void *)(a1 + 80) = v18;
      *(unsigned char *)(a1 + 88) = v17;
      sub_1B591DF0C(v19, v20, v21, v16);
      return a1;
    }
    sub_1B59316FC(a1 + 64);
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnitPointResolvable(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if ((v3 & 0x7E) != 0) {
    int v4 = 126 - (v3 & 0x7E | (v3 >> 7));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UnitPointResolvable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 89) = 0;
    }
    if (a2)
    {
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 0;
      *(void *)(result + 48) = 0;
      *(unsigned char *)(result + 56) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnitPointResolvable()
{
  return &type metadata for UnitPointResolvable;
}

double sub_1B5931990(uint64_t a1)
{
  unsigned int v4 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  unsigned int v8 = *(unsigned __int8 *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = *(void *)(v1 + 80);
  unsigned int v32 = *(unsigned __int8 *)(v1 + 88);
  if (v4 <= 0xFD)
  {
    uint64_t v27 = *(void *)(v1 + 40);
    uint64_t v28 = *(void *)(v1 + 32);
    uint64_t v29 = *(void *)(v1 + 80);
    uint64_t v30 = *(void *)(v1 + 72);
    uint64_t v12 = *(void *)v1;
    uint64_t v13 = *(void *)(v1 + 8);
    uint64_t v14 = *(void *)(v1 + 16);
    sub_1B5904B60(*(void *)v1, v13, v14, v4);
    unint64_t v15 = StringResolvable.resolved(with:)(a1);
    if (!v2)
    {
      uint64_t v24 = v15;
      uint64_t v25 = v16;
      sub_1B5904B4C(v12, v13, v14, v4);
      sub_1B5931BB8(v24, v25);
      double v3 = v26;
      swift_bridgeObjectRelease();
      return v3;
    }

    sub_1B5904B4C(v12, v13, v14, v4);
    uint64_t v10 = v30;
    uint64_t v5 = v28;
    uint64_t v11 = v29;
    uint64_t v6 = v27;
  }
  if (v8 > 0xFD) {
    goto LABEL_9;
  }
  uint64_t v17 = v5;
  sub_1B591DF88(v5, v6, v7, v8);
  *(double *)&uint64_t v31 = COERCE_DOUBLE(sub_1B5963534(a1));
  char v19 = v18;
  sub_1B59325C0(v17, v6, v7, v8);
  if ((v19 & 1) == 0 && v32 <= 0xFD)
  {
    uint64_t v20 = v9;
    sub_1B591DF88(v9, v10, v11, v32);
    sub_1B5963534(a1);
    char v22 = v21;
    sub_1B59325C0(v20, v10, v11, v32);
    if ((v22 & 1) == 0) {
      return *(double *)&v31;
    }
  }
LABEL_9:
  sub_1B593256C();
  swift_allocError();
  swift_willThrow();
  return v3;
}

uint64_t sub_1B5931BB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7368564 && a2 == 0xE300000000000000;
  if (v2 || (sub_1B5A1C678() & 1) != 0)
  {
    return MEMORY[0x1F40FCEB0]();
  }
  if (a1 == 0x696461654C706F74 && a2 == 0xEA0000000000676ELL || (sub_1B5A1C678() & 1) != 0)
  {
    return MEMORY[0x1F40FCE88]();
  }
  if (a1 == 0x6C69617254706F74 && a2 == 0xEB00000000676E69 || (sub_1B5A1C678() & 1) != 0)
  {
    return MEMORY[0x1F40FCE90]();
  }
  if (a1 == 0x7265746E6563 && a2 == 0xE600000000000000 || (sub_1B5A1C678() & 1) != 0) {
    goto LABEL_24;
  }
  if (a1 == 0x676E696461656CLL && a2 == 0xE700000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    return MEMORY[0x1F40FCEE0]();
  }
  else if (a1 == 0x676E696C69617274 && a2 == 0xE800000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    return MEMORY[0x1F40FCEE8]();
  }
  else if (a1 == 0x6D6F74746F62 && a2 == 0xE600000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    return MEMORY[0x1F40FCEC0]();
  }
  else if (a1 == 0x654C6D6F74746F62 && a2 == 0xED0000676E696461 || (sub_1B5A1C678() & 1) != 0)
  {
    return MEMORY[0x1F40FCE98]();
  }
  else if (a1 == 0x72546D6F74746F62 && a2 == 0xEE00676E696C6961 || (sub_1B5A1C678() & 1) != 0)
  {
    return MEMORY[0x1F40FCEA0]();
  }
  else
  {
    if ((a1 != 1869768058 || a2 != 0xE400000000000000) && (sub_1B5A1C678() & 1) == 0)
    {
LABEL_24:
      return MEMORY[0x1F40FCED8]();
    }
    return MEMORY[0x1F40FCEB8]();
  }
}

uint64_t sub_1B5931FF4(char a1)
{
  if (!a1) {
    return 120;
  }
  if (a1 == 1) {
    return 121;
  }
  return 1701667182;
}

uint64_t sub_1B593202C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B59EDC9C(*a1, *a2);
}

uint64_t sub_1B5932038()
{
  return sub_1B59F079C();
}

uint64_t sub_1B5932040()
{
  return sub_1B59F3734();
}

uint64_t sub_1B5932048()
{
  return sub_1B59F67F8();
}

uint64_t sub_1B5932050@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5932088@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5931FF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59320B4()
{
  return sub_1B5931FF4(*v0);
}

uint64_t sub_1B59320BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B59320EC(uint64_t a1)
{
  unint64_t v2 = sub_1B5935894();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5932128(uint64_t a1)
{
  unint64_t v2 = sub_1B5935894();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5932164(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63BC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned int v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5935894();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B5904B4C(0, 0, 0, 0xFEu);
    sub_1B59325C0(0, 0, 0, 254);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    char v12 = -2;
  }
  else
  {
    LOBYTE(v45) = 2;
    if (sub_1B5A1C5F8())
    {
      char v50 = 2;
      sub_1B5904A34();
      sub_1B5A1C5D8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v43 = a2;
      uint64_t v14 = v45;
      uint64_t v13 = v46;
      uint64_t v15 = v47;
      int v16 = v48;
      int v49 = 254;
      sub_1B5904B4C(0, 0, 0, 0xFEu);
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      char v23 = -2;
    }
    else
    {
      char v50 = 0;
      sub_1B59358E8();
      sub_1B5A1C5D8();
      uint64_t v43 = a2;
      uint64_t v22 = v45;
      uint64_t v21 = v46;
      uint64_t v20 = v47;
      int v49 = v48;
      char v50 = 1;
      sub_1B5A1C5D8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v24 = v46;
      uint64_t v44 = v45;
      uint64_t v25 = v47;
      char v26 = v48;
      int v16 = 254;
      sub_1B59325C0(0, 0, 0, 254);
      char v23 = v26;
      uint64_t v19 = v25;
      uint64_t v18 = v44;
      uint64_t v17 = v24;
      uint64_t v15 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
    uint64_t v38 = v19;
    uint64_t v39 = v17;
    uint64_t v27 = v43;
    *uint64_t v43 = v14;
    v27[1] = v13;
    uint64_t v28 = v13;
    uint64_t v41 = v13;
    uint64_t v42 = v15;
    v27[2] = v15;
    uint64_t v29 = v15;
    *((unsigned char *)v27 + 24) = v16;
    unsigned __int8 v30 = v16;
    int v40 = v16;
    v27[4] = v22;
    v27[5] = v21;
    v27[6] = v20;
    int v31 = v49;
    *((unsigned char *)v27 + 56) = v49;
    int v49 = v31;
    v27[8] = v18;
    v27[9] = v17;
    v27[10] = v19;
    *((unsigned char *)v27 + 88) = v23;
    uint64_t v32 = v18;
    uint64_t v44 = v18;
    char v33 = v23;
    sub_1B5904BDC(v14, v28, v29, v30);
    sub_1B591DF74(v22, v21, v20, v31);
    uint64_t v34 = v32;
    uint64_t v36 = v38;
    uint64_t v35 = v39;
    sub_1B591DF74(v34, v39, v38, v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B5904B4C(v14, v41, v42, v40);
    sub_1B59325C0(v22, v21, v20, v49);
    uint64_t v9 = v44;
    uint64_t v10 = v35;
    uint64_t v11 = v36;
    char v12 = v33;
  }
  sub_1B59325C0(v9, v10, v11, v12);
}

void sub_1B5932554(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

unint64_t sub_1B593256C()
{
  unint64_t result = qword_1E9D63BB8;
  if (!qword_1E9D63BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BB8);
  }
  return result;
}

void sub_1B59325C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 <= 0xFDu) {
    sub_1B591DF0C(a1, a2, a3, a4);
  }
}

uint64_t sub_1B59325D4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  char v7 = *(unsigned char *)(v1 + 64);
  v19[0] = *(void *)(v1 + 40);
  v19[1] = v5;
  long long v19[2] = v6;
  char v20 = v7;
  sub_1B591DF88(v19[0], v5, v6, v7);
  sub_1B5963534(a1);
  LOBYTE(a1) = v8;
  sub_1B591DF0C(v19[0], v5, v6, v7);
  if ((a1 & 1) == 0) {
    return sub_1B5A1BB48();
  }
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1B5A1A328();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9D910D0);
  swift_retain_n();
  uint64_t v11 = sub_1B5A1A308();
  os_log_type_t v12 = sub_1B5A1C258();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v19[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315650;
    uint64_t v21 = sub_1B5928EE8(0xD000000000000071, 0x80000001B5A32EE0, v19);
    sub_1B5A1C2D8();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v21 = sub_1B5928EE8(0xD000000000000013, 0x80000001B5A32F60, v19);
    sub_1B5A1C2D8();
    *(_WORD *)(v13 + 22) = 2080;
    swift_retain();
    uint64_t v15 = sub_1B5A1B7C8();
    unint64_t v17 = v16;
    swift_release();
    uint64_t v21 = sub_1B5928EE8(v15, v17, v19);
    sub_1B5A1C2D8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B58FD000, v11, v12, "%s %s Unable to resolve location for gradient stop with color %s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v14, -1, -1);
    MEMORY[0x1BA9A4780](v13, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_1B5938558();
  swift_allocError();
  *uint64_t v18 = 0;
  swift_willThrow();
  return swift_release();
}

uint64_t sub_1B5932904(char a1)
{
  if (a1) {
    return 0x6E6F697461636F6CLL;
  }
  else {
    return 0x726F6C6F63;
  }
}

uint64_t sub_1B5932938(char *a1, char *a2)
{
  return sub_1B59ED6BC(*a1, *a2);
}

uint64_t sub_1B5932944()
{
  return sub_1B59F0820();
}

uint64_t sub_1B593294C()
{
  return sub_1B59F33DC();
}

uint64_t sub_1B5932954()
{
  return sub_1B59F6BDC();
}

uint64_t sub_1B593295C@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5932968@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5932904(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5932994()
{
  return sub_1B5932904(*v0);
}

uint64_t sub_1B593299C@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B59329A8(uint64_t a1)
{
  unint64_t v2 = sub_1B5939B24();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59329E4(uint64_t a1)
{
  unint64_t v2 = sub_1B5939B24();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5932A20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63D00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5939B24();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v10) = 0;
  sub_1B5939638();
  sub_1B5A1C5D8();
  sub_1B590CA38((uint64_t)v13, (uint64_t)v14);
  char v18 = 1;
  sub_1B59358E8();
  sub_1B5A1C5D8();
  sub_1B593968C((uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v15 = v10;
  uint64_t v16 = v11;
  char v17 = v12;
  sub_1B5939B78((uint64_t)v14, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B5939BB0((uint64_t)v14);
}

uint64_t sub_1B5932C3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5932A20(a1, a2);
}

uint64_t sub_1B5932C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    swift_retain();
    uint64_t v6 = sub_1B5935B84(a2, a1);
    uint64_t result = swift_release();
    if (!v3) {
      return MEMORY[0x1BA9A3350](v6);
    }
  }
  else if (a3)
  {
    swift_retain();
    uint64_t v9 = sub_1B5935C90(a3, a1);
    swift_release();
    return MEMORY[0x1BA9A3360](v9);
  }
  else
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1B5A1A328();
    __swift_project_value_buffer(v10, (uint64_t)qword_1E9D910D0);
    uint64_t v11 = sub_1B5A1A308();
    os_log_type_t v12 = sub_1B5A1C258();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v16 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      sub_1B5928EE8(0xD000000000000071, 0x80000001B5A32EE0, &v16);
      sub_1B5A1C2D8();
      *(_WORD *)(v13 + 12) = 2080;
      sub_1B5928EE8(0x746E656964617267, 0xEF293A6874697728, &v16);
      sub_1B5A1C2D8();
      _os_log_impl(&dword_1B58FD000, v11, v12, "%s %s Unable to resolve any stops or colors.", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v14, -1, -1);
      MEMORY[0x1BA9A4780](v13, -1, -1);
    }

    sub_1B5938558();
    swift_allocError();
    *long long v15 = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B5932EC0(char a1)
{
  if (a1) {
    return 0x73726F6C6F63;
  }
  else {
    return 0x73706F7473;
  }
}

uint64_t sub_1B5932EF0(char *a1, char *a2)
{
  return sub_1B59EE0B4(*a1, *a2);
}

uint64_t sub_1B5932EFC()
{
  return sub_1B59F08A0();
}

uint64_t sub_1B5932F04()
{
  return sub_1B59F39A0();
}

uint64_t sub_1B5932F0C()
{
  return sub_1B59F6574();
}

uint64_t sub_1B5932F14@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5932F20@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5932F7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5932EC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5932FA8()
{
  return sub_1B5932EC0(*v0);
}

uint64_t sub_1B5932FB0@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B5932FBC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B593301C(uint64_t a1)
{
  unint64_t v2 = sub_1B59395E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5933058(uint64_t a1)
{
  unint64_t v2 = sub_1B59395E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5933094@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B5935D74(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B59330C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v21 = *(void *)(v2 + 16);
  uint64_t v31 = *(void *)(v2 + 32);
  uint64_t v32 = *(void *)(v2 + 24);
  unsigned __int8 v30 = *(unsigned char *)(v2 + 40);
  uint64_t v24 = *(void *)(v2 + 56);
  uint64_t v25 = *(void *)(v2 + 48);
  uint64_t v23 = *(void *)(v2 + 64);
  char v22 = *(unsigned char *)(v2 + 72);
  uint64_t v27 = *(void *)(v2 + 88);
  uint64_t v28 = *(void *)(v2 + 80);
  uint64_t v36 = *(void *)(v2 + 96);
  char v26 = *(unsigned char *)(v2 + 104);
  uint64_t v18 = *(void *)(v2 + 112);
  uint64_t v19 = *(void *)(v2 + 120);
  uint64_t v20 = *(void *)(v2 + 128);
  unsigned __int8 v6 = *(unsigned char *)(v2 + 136);
  uint64_t v8 = *(void *)(v2 + 144);
  uint64_t v7 = *(void *)(v2 + 152);
  uint64_t v9 = *(void *)(v2 + 160);
  char v10 = *(unsigned char *)(v2 + 168);
  uint64_t v11 = *(void *)(v2 + 176);
  uint64_t v12 = *(void *)(v2 + 184);
  uint64_t v13 = *(void *)(v2 + 192);
  char v14 = *(unsigned char *)(v2 + 200);
  uint64_t result = sub_1B5932C54(a1, v4, v5);
  if (!v3)
  {
    sub_1B5904BDC(v21, v32, v31, v30);
    sub_1B591DF74(v25, v24, v23, v22);
    sub_1B591DF74(v28, v27, v36, v26);
    sub_1B5931990(a1);
    sub_1B5904B4C(v21, v32, v31, v30);
    sub_1B59325C0(v25, v24, v23, v22);
    sub_1B59325C0(v28, v27, v36, v26);
    sub_1B5904BDC(v18, v19, v20, v6);
    sub_1B591DF74(v8, v7, v9, v10);
    sub_1B591DF74(v11, v12, v13, v14);
    sub_1B5931990(a1);
    sub_1B5904B4C(v18, v19, v20, v6);
    sub_1B59325C0(v8, v7, v9, v10);
    sub_1B59325C0(v11, v12, v13, v14);
    sub_1B5A1A638();
    uint64_t v16 = MEMORY[0x1E4F3C9A0];
    a2[3] = MEMORY[0x1E4F3C9B0];
    a2[4] = v16;
    uint64_t result = swift_allocObject();
    *a2 = result;
    *(_OWORD *)(result + 16) = v33;
    *(_OWORD *)(result + 32) = v34;
    *(void *)(result + 48) = v35;
  }
  return result;
}

uint64_t sub_1B5933418(char a1)
{
  return *(void *)&aGradientstartp[8 * a1];
}

uint64_t sub_1B5933438(char *a1, char *a2)
{
  return sub_1B59ED3EC(*a1, *a2);
}

uint64_t sub_1B5933444()
{
  return sub_1B59F091C();
}

uint64_t sub_1B593344C()
{
  return sub_1B59F3214();
}

uint64_t sub_1B5933454()
{
  return sub_1B59F6E1C();
}

uint64_t sub_1B593345C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5933494@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5933418(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59334C0()
{
  return sub_1B5933418(*v0);
}

uint64_t sub_1B59334C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B59334F8(uint64_t a1)
{
  unint64_t v2 = sub_1B59389B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5933534(uint64_t a1)
{
  unint64_t v2 = sub_1B59389B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5933570@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63C48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  unsigned __int8 v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1B59389B8();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    return swift_bridgeObjectRelease();
  }
  uint64_t v72 = v6;
  uint64_t v65 = a2;
  LOBYTE(v74) = 1;
  sub_1B5938600();
  sub_1B5A1C5D8();
  long long v70 = v91;
  uint64_t v71 = v92;
  int v11 = v93;
  uint64_t v12 = v95;
  uint64_t v64 = v94;
  uint64_t v13 = v96;
  int v14 = v97;
  LOBYTE(v74) = 2;
  uint64_t v62 = v88;
  uint64_t v68 = v89;
  uint64_t v69 = *((void *)&v88 + 1);
  int v67 = v90;
  sub_1B5904BDC(v88, *((uint64_t *)&v88 + 1), v89, v90);
  int v112 = v11;
  char v15 = v11;
  uint64_t v16 = v64;
  sub_1B591DF74(v70, *((uint64_t *)&v70 + 1), v71, v15);
  uint64_t v63 = v12;
  uint64_t v61 = v13;
  sub_1B591DF74(v16, v12, v13, v14);
  sub_1B5A1C5D8();
  uint64_t v66 = 0;
  int v50 = v14;
  long long v17 = v91;
  uint64_t v18 = v92;
  int v60 = v93;
  uint64_t v20 = v94;
  uint64_t v19 = v95;
  uint64_t v21 = v96;
  int v53 = v90;
  int v54 = v97;
  char v113 = 0;
  long long v51 = v88;
  uint64_t v52 = v89;
  sub_1B5904BDC(v88, *((uint64_t *)&v88 + 1), v89, v90);
  long long v58 = v17;
  uint64_t v55 = v18;
  sub_1B591DF74(v17, *((uint64_t *)&v17 + 1), v18, v60);
  uint64_t v59 = v20;
  uint64_t v56 = v19;
  uint64_t v57 = v21;
  uint64_t v22 = v21;
  char v23 = v54;
  sub_1B591DF74(v20, v19, v22, v54);
  sub_1B59386B0();
  uint64_t v24 = v66;
  sub_1B5A1C5D8();
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v8, v5);
    sub_1B5904B4C(v51, *((uint64_t *)&v51 + 1), v52, v53);
    sub_1B59325C0(v58, *((uint64_t *)&v58 + 1), v55, v60);
    sub_1B59325C0(v59, v56, v57, v23);
    uint64_t v25 = v62;
    sub_1B5904B4C(v62, v69, v68, v67);
    uint64_t v26 = v70;
    sub_1B59325C0(v70, *((uint64_t *)&v70 + 1), v71, v112);
    uint64_t v28 = v63;
    uint64_t v27 = v64;
    uint64_t v29 = v61;
    char v30 = v50;
    sub_1B59325C0(v64, v63, v61, v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    sub_1B5904B4C(v25, v69, v68, v67);
    sub_1B59325C0(v26, *((uint64_t *)&v70 + 1), v71, v112);
    sub_1B59325C0(v27, v28, v29, v30);
    if (!v66)
    {
      sub_1B5904B4C(v51, *((uint64_t *)&v51 + 1), v52, v53);
      sub_1B59325C0(v58, *((uint64_t *)&v58 + 1), v55, v60);
      sub_1B59325C0(v59, v56, v57, v54);
    }
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v72 + 8))(v8, v5);
  uint64_t v72 = v111;
  long long v74 = v111;
  uint64_t v66 = *((void *)&v111 + 1);
  *(void *)&long long v75 = v62;
  *((void *)&v75 + 1) = v69;
  *(void *)&long long v76 = v68;
  BYTE8(v76) = v67;
  long long v77 = v70;
  *(void *)&long long v78 = v71;
  BYTE8(v78) = v112;
  *(void *)&long long v79 = v64;
  *((void *)&v79 + 1) = v63;
  *(void *)&long long v80 = v61;
  BYTE8(v80) = v50;
  long long v31 = v51;
  long long v81 = v51;
  uint64_t v32 = v52;
  *(void *)&long long v82 = v52;
  unsigned __int8 v33 = v53;
  BYTE8(v82) = v53;
  long long v83 = v58;
  uint64_t v34 = v55;
  uint64_t v35 = v56;
  *(void *)&long long v84 = v55;
  BYTE8(v84) = v60;
  *(void *)&long long v85 = v59;
  *((void *)&v85 + 1) = v56;
  *(void *)&long long v86 = v57;
  BYTE8(v86) = v23;
  uint64_t v87 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B5938A0C((uint64_t)&v74, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5904BDC, (void (*)(uint64_t, uint64_t, uint64_t, void))sub_1B591DF74);
  sub_1B5904B4C(v31, *((uint64_t *)&v31 + 1), v32, v33);
  sub_1B59325C0(v58, *((uint64_t *)&v58 + 1), v34, v60);
  sub_1B59325C0(v59, v35, v57, v23);
  sub_1B5904B4C(v62, v69, v68, v67);
  uint64_t v36 = *((void *)&v70 + 1);
  sub_1B59325C0(v70, *((uint64_t *)&v70 + 1), v71, v112);
  uint64_t v37 = v64;
  uint64_t v38 = v61;
  char v39 = v50;
  sub_1B59325C0(v64, v63, v61, v50);
  uint64_t v40 = v66;
  swift_bridgeObjectRelease();
  uint64_t v41 = v72;
  swift_bridgeObjectRelease();
  long long v42 = v85;
  uint64_t v43 = v65;
  *(_OWORD *)(v65 + 160) = v84;
  *(_OWORD *)(v43 + 176) = v42;
  *(_OWORD *)(v43 + 192) = v86;
  *(void *)(v43 + 208) = v87;
  long long v44 = v81;
  *(_OWORD *)(v43 + 96) = v80;
  *(_OWORD *)(v43 + 112) = v44;
  long long v45 = v83;
  *(_OWORD *)(v43 + 128) = v82;
  *(_OWORD *)(v43 + 144) = v45;
  long long v46 = v77;
  *(_OWORD *)(v43 + 32) = v76;
  *(_OWORD *)(v43 + 48) = v46;
  long long v47 = v79;
  *(_OWORD *)(v43 + 64) = v78;
  *(_OWORD *)(v43 + 80) = v47;
  long long v48 = v75;
  *(_OWORD *)uint64_t v43 = v74;
  *(_OWORD *)(v43 + 16) = v48;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  *(void *)&long long v88 = v41;
  *((void *)&v88 + 1) = v40;
  uint64_t v89 = v62;
  uint64_t v90 = v69;
  *(void *)&long long v91 = v68;
  BYTE8(v91) = v67;
  uint64_t v92 = v70;
  uint64_t v93 = v36;
  uint64_t v94 = v71;
  LOBYTE(v95) = v112;
  uint64_t v96 = v37;
  uint64_t v97 = v63;
  uint64_t v98 = v38;
  char v99 = v39;
  long long v100 = v51;
  uint64_t v101 = v52;
  char v102 = v53;
  long long v103 = v58;
  uint64_t v104 = v55;
  char v105 = v60;
  uint64_t v106 = v59;
  uint64_t v107 = v56;
  uint64_t v108 = v57;
  char v109 = v54;
  uint64_t v110 = MEMORY[0x1E4FBC860];
  return sub_1B5938B78((uint64_t)&v88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5904B4C, (void (*)(uint64_t, uint64_t, uint64_t, void))sub_1B59325C0);
}

uint64_t sub_1B5933CF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B59330C0(a1, a2);
}

uint64_t sub_1B5933D10()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B5933D18(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 208) = a1;
  return result;
}

uint64_t sub_1B5933D44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5933570(a1, a2);
}

void sub_1B5933D5C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v31 = *(void *)v2;
  uint64_t v32 = *(void *)(v2 + 8);
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 56);
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v29 = *(void *)(v2 + 120);
  uint64_t v30 = *(void *)(v2 + 112);
  uint64_t v28 = *(void *)(v2 + 128);
  int v33 = *(unsigned __int8 *)(v2 + 136);
  uint64_t v23 = *(void *)(v2 + 144);
  uint64_t v24 = *(void *)(v2 + 152);
  int v27 = *(unsigned __int8 *)(v2 + 168);
  uint64_t v22 = *(void *)(v2 + 176);
  uint64_t v25 = *(void *)(v2 + 160);
  uint64_t v26 = *(void *)(v2 + 184);
  uint64_t v20 = *(void *)(v2 + 192);
  int v21 = *(unsigned __int8 *)(v2 + 200);
  char v6 = *(unsigned char *)(v2 + 72);
  uint64_t v36 = *(void *)(v2 + 16);
  uint64_t v37 = *(void *)(v2 + 24);
  uint64_t v38 = *(void *)(v2 + 32);
  unsigned __int8 v39 = *(unsigned char *)(v2 + 40);
  uint64_t v40 = *(void *)(v2 + 80);
  uint64_t v41 = *(void *)(v2 + 88);
  uint64_t v42 = *(void *)(v2 + 96);
  char v43 = *(unsigned char *)(v2 + 104);
  sub_1B5904BDC(v36, v37, v38, v39);
  sub_1B591DF74(v3, v4, v5, v6);
  sub_1B591DF74(v40, v41, v42, v43);
  double v7 = sub_1B5931990(a1);
  double v9 = v8;
  sub_1B5904B4C(v36, v37, v38, v39);
  sub_1B59325C0(v3, v4, v5, v6);
  sub_1B59325C0(v40, v41, v42, v43);
  if (!v34)
  {
    if (v33 == 255)
    {
      double v10 = 0.0;
      if (v27 == 255)
      {
        double v13 = 0.0;
      }
      else
      {
        sub_1B590D634(v23, v24, v25, v27 & 1);
        double v12 = sub_1B59B4324(a1, v23, v24, v25, v27 & 1);
        sub_1B590F034(v23, v24, v25, v27);
        double v13 = v12 * 0.0174532925;
      }
      if (v21 != 255)
      {
        sub_1B590D634(v22, v26, v20, v21 & 1);
        double v14 = sub_1B59B4324(a1, v22, v26, v20, v21 & 1);
        sub_1B590F034(v22, v26, v20, v21);
        double v10 = v14 * 0.0174532925;
      }
      int v11 = (char *)v45;
      uint64_t v15 = sub_1B5932C54(a1, v31, v32);
      MEMORY[0x1BA9A1EF0](v45, v15, v7, v9, v13, v10);
    }
    else
    {
      sub_1B590D634(v30, v29, v28, v33 & 1);
      sub_1B59B4324(a1, v30, v29, v28, v33 & 1);
      sub_1B590F034(v30, v29, v28, v33);
      sub_1B5932C54(a1, v31, v32);
      int v11 = &v44;
      sub_1B5A1A708();
    }
    uint64_t v16 = MEMORY[0x1E4F3CAC0];
    a2[3] = MEMORY[0x1E4F3CAC8];
    a2[4] = v16;
    uint64_t v17 = swift_allocObject();
    *a2 = v17;
    long long v18 = *((_OWORD *)v11 + 1);
    *(_OWORD *)(v17 + 16) = *(_OWORD *)v11;
    *(_OWORD *)(v17 + 32) = v18;
    *(void *)(v17 + 48) = *((void *)v11 + 4);
  }
}

uint64_t sub_1B5934184(char a1)
{
  return *(void *)&aGradientcenter[8 * a1];
}

uint64_t sub_1B59341A4(char *a1, char *a2)
{
  return sub_1B59ED2DC(*a1, *a2);
}

uint64_t sub_1B59341B0()
{
  return sub_1B59F0988();
}

uint64_t sub_1B59341B8()
{
  return sub_1B59F316C();
}

uint64_t sub_1B59341C0()
{
  return sub_1B59F6EEC();
}

uint64_t sub_1B59341C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B593954C();
  *a1 = result;
  return result;
}

uint64_t sub_1B59341F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5934184(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5934224()
{
  return sub_1B5934184(*v0);
}

uint64_t sub_1B593422C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B593954C();
  *a1 = result;
  return result;
}

void sub_1B5934254(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1B5934260(uint64_t a1)
{
  unint64_t v2 = sub_1B5938964();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B593429C(uint64_t a1)
{
  unint64_t v2 = sub_1B5938964();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59342D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63C38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  v126 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1B5938964();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
    return swift_bridgeObjectRelease();
  }
  uint64_t v80 = v6;
  uint64_t v71 = a2;
  LOBYTE(v81) = 1;
  sub_1B5938600();
  sub_1B5A1C5D8();
  uint64_t v11 = v95;
  uint64_t v75 = v96;
  uint64_t v76 = *((void *)&v95 + 1);
  int v12 = v97;
  uint64_t v78 = v99;
  uint64_t v79 = v98;
  uint64_t v74 = v100;
  int v77 = v101;
  uint64_t v13 = v102;
  uint64_t v70 = v103;
  uint64_t v14 = v104;
  int v15 = v105;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F98);
  uint64_t v67 = 0;
  uint64_t v17 = v16;
  LOBYTE(v81) = 2;
  uint64_t v73 = v11;
  int v18 = v12;
  uint64_t v19 = v74;
  int v72 = v18;
  sub_1B5904BDC(v11, v76, v75, v18);
  sub_1B591DF74(v79, v78, v19, v77);
  uint64_t v68 = v13;
  uint64_t v69 = v14;
  uint64_t v20 = v13;
  uint64_t v21 = v70;
  sub_1B591DF74(v20, v70, v14, v15);
  sub_1B5938654();
  uint64_t v66 = v17;
  uint64_t v22 = v67;
  sub_1B5A1C5B8();
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
    sub_1B5904B4C(v73, v76, v75, v72);
    sub_1B59325C0(v79, v78, v19, v77);
    uint64_t v23 = v68;
    uint64_t v24 = v69;
    sub_1B59325C0(v68, v21, v69, v15);
    LODWORD(v80) = 0;
    LODWORD(v71) = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
    sub_1B5904B4C(v73, v76, v75, v72);
    sub_1B59325C0(v79, v78, v74, v77);
    sub_1B59325C0(v23, v21, v24, v15);
    uint64_t v27 = v66;
    uint64_t v29 = v62;
    uint64_t v28 = v63;
    unsigned __int8 v30 = v64;
    char v31 = v71;
    if (v80)
    {
      sub_1B590F034(v56, v59, v60, v55);
      if (v31) {
        goto LABEL_12;
      }
    }
    else if (v71)
    {
LABEL_12:
      sub_1B590F034(v28, v27, v29, v30);
    }
    return swift_bridgeObjectRelease();
  }
  int v58 = v15;
  uint64_t v25 = v96;
  LOBYTE(v81) = 3;
  long long v65 = v95;
  LODWORD(v67) = v97;
  sub_1B590F04C(v95, *((uint64_t *)&v95 + 1), v96, v97);
  uint64_t v57 = 0;
  sub_1B5A1C5B8();
  uint64_t v61 = v25;
  uint64_t v26 = v95;
  LODWORD(v25) = v97;
  LOBYTE(v81) = 4;
  uint64_t v59 = *((void *)&v95 + 1);
  uint64_t v60 = v96;
  sub_1B590F04C(v95, *((uint64_t *)&v95 + 1), v96, v97);
  sub_1B5A1C5B8();
  int v55 = v25;
  uint64_t v56 = v26;
  uint64_t v32 = v96;
  char v122 = 0;
  uint64_t v66 = *((void *)&v95 + 1);
  uint64_t v33 = v95;
  int v64 = v97;
  sub_1B590F04C(v95, *((uint64_t *)&v95 + 1), v96, v97);
  sub_1B59386B0();
  sub_1B5A1C5D8();
  uint64_t v34 = v79;
  uint64_t v35 = v61;
  uint64_t v62 = v32;
  uint64_t v63 = v33;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
  uint64_t v80 = v123;
  long long v81 = v123;
  uint64_t v57 = *((void *)&v123 + 1);
  *(void *)&long long v82 = v73;
  *((void *)&v82 + 1) = v76;
  *(void *)&long long v83 = v75;
  BYTE8(v83) = v72;
  *(void *)&long long v84 = v34;
  *((void *)&v84 + 1) = v78;
  *(void *)&long long v85 = v74;
  BYTE8(v85) = v77;
  *(void *)&long long v86 = v68;
  *((void *)&v86 + 1) = v70;
  *(void *)&long long v87 = v69;
  BYTE8(v87) = v58;
  long long v88 = v65;
  *(void *)&long long v89 = v35;
  BYTE8(v89) = v67;
  uint64_t v36 = v59;
  uint64_t v37 = v60;
  *(void *)&long long v90 = v56;
  *((void *)&v90 + 1) = v59;
  *(void *)&long long v91 = v60;
  unsigned __int8 v38 = v55;
  BYTE8(v91) = v55;
  uint64_t v39 = v33;
  uint64_t v40 = v66;
  *(void *)&long long v92 = v33;
  *((void *)&v92 + 1) = v66;
  *(void *)&long long v93 = v32;
  LOBYTE(v33) = v64;
  BYTE8(v93) = v64;
  uint64_t v94 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B5938A0C((uint64_t)&v81, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F04C, (void (*)(uint64_t, uint64_t, uint64_t, void))sub_1B590F04C);
  sub_1B590F034(v39, v40, v32, v33);
  sub_1B590F034(v56, v36, v37, v38);
  sub_1B590F034(v65, *((uint64_t *)&v65 + 1), v61, v67);
  sub_1B5904B4C(v73, v76, v75, v72);
  uint64_t v41 = v74;
  sub_1B59325C0(v79, v78, v74, v77);
  uint64_t v42 = v68;
  uint64_t v43 = v69;
  uint64_t v44 = v70;
  sub_1B59325C0(v68, v70, v69, v58);
  uint64_t v45 = v57;
  swift_bridgeObjectRelease();
  uint64_t v46 = v80;
  swift_bridgeObjectRelease();
  long long v47 = v92;
  uint64_t v48 = v71;
  *(_OWORD *)(v71 + 160) = v91;
  *(_OWORD *)(v48 + 176) = v47;
  *(_OWORD *)(v48 + 192) = v93;
  *(void *)(v48 + 208) = v94;
  long long v49 = v88;
  *(_OWORD *)(v48 + 96) = v87;
  *(_OWORD *)(v48 + 112) = v49;
  long long v50 = v90;
  *(_OWORD *)(v48 + 128) = v89;
  *(_OWORD *)(v48 + 144) = v50;
  long long v51 = v84;
  *(_OWORD *)(v48 + 32) = v83;
  *(_OWORD *)(v48 + 48) = v51;
  long long v52 = v86;
  *(_OWORD *)(v48 + 64) = v85;
  *(_OWORD *)(v48 + 80) = v52;
  long long v53 = v82;
  *(_OWORD *)uint64_t v48 = v81;
  *(_OWORD *)(v48 + 16) = v53;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
  *(void *)&long long v95 = v46;
  *((void *)&v95 + 1) = v45;
  uint64_t v96 = v73;
  uint64_t v97 = v76;
  uint64_t v98 = v75;
  LOBYTE(v99) = v72;
  uint64_t v100 = v79;
  uint64_t v101 = v78;
  uint64_t v102 = v41;
  LOBYTE(v103) = v77;
  uint64_t v104 = v42;
  uint64_t v105 = v44;
  uint64_t v106 = v43;
  char v107 = v58;
  long long v108 = v65;
  uint64_t v109 = v61;
  char v110 = v67;
  uint64_t v111 = v56;
  uint64_t v112 = v59;
  uint64_t v113 = v60;
  char v114 = v55;
  *(_DWORD *)uint64_t v115 = v125[0];
  *(_DWORD *)&v115[3] = *(_DWORD *)((char *)v125 + 3);
  uint64_t v116 = v63;
  uint64_t v117 = v66;
  uint64_t v118 = v62;
  char v119 = v64;
  *(_DWORD *)uint64_t v120 = *(_DWORD *)v124;
  *(_DWORD *)&v120[3] = *(_DWORD *)&v124[3];
  uint64_t v121 = MEMORY[0x1E4FBC860];
  return sub_1B5938B78((uint64_t)&v95, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F034, (void (*)(uint64_t, uint64_t, uint64_t, void))sub_1B590F034);
}

void sub_1B5934C28(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1B5934C40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59342D8(a1, a2);
}

void sub_1B5934C58(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v28 = *(void *)(v2 + 8);
  uint64_t v29 = *(void *)v2;
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 56);
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v30 = *(void *)(v2 + 128);
  uint64_t v31 = *(void *)(v2 + 120);
  int v32 = *(unsigned __int8 *)(v2 + 136);
  uint64_t v23 = *(void *)(v2 + 152);
  uint64_t v24 = *(void *)(v2 + 144);
  uint64_t v26 = *(void *)(v2 + 160);
  uint64_t v27 = *(void *)(v2 + 112);
  int v25 = *(unsigned __int8 *)(v2 + 168);
  char v6 = *(unsigned char *)(v2 + 72);
  uint64_t v34 = *(void *)(v2 + 16);
  uint64_t v35 = *(void *)(v2 + 24);
  uint64_t v36 = *(void *)(v2 + 32);
  unsigned __int8 v37 = *(unsigned char *)(v2 + 40);
  uint64_t v38 = *(void *)(v2 + 80);
  uint64_t v39 = *(void *)(v2 + 88);
  uint64_t v40 = *(void *)(v2 + 96);
  char v41 = *(unsigned char *)(v2 + 104);
  sub_1B5904BDC(v34, v35, v36, v37);
  sub_1B591DF74(v3, v4, v5, v6);
  sub_1B591DF74(v38, v39, v40, v41);
  double v7 = sub_1B5931990(v44);
  double v9 = v8;
  sub_1B5904B4C(v34, v35, v36, v37);
  sub_1B59325C0(v3, v4, v5, v6);
  sub_1B59325C0(v38, v39, v40, v41);
  if (!v33)
  {
    double v10 = 0.0;
    if (v32 == 255)
    {
      double v17 = 0.0;
      uint64_t v11 = v29;
      uint64_t v12 = v28;
      uint64_t v14 = v23;
      uint64_t v13 = v24;
      uint64_t v15 = v26;
      unsigned __int8 v16 = v25;
      if (v25 == 255) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_1B590D634(v27, v31, v30, v32 & 1);
      double v17 = sub_1B59B4324(v44, v27, v31, v30, v32 & 1);
      uint64_t v11 = v29;
      uint64_t v12 = v28;
      uint64_t v14 = v23;
      uint64_t v13 = v24;
      uint64_t v15 = v26;
      unsigned __int8 v16 = v25;
      sub_1B590F034(v27, v31, v30, v32);
      if (v25 == 255) {
        goto LABEL_8;
      }
    }
    sub_1B590D634(v13, v14, v15, v16 & 1);
    double v10 = sub_1B59B4324(v44, v13, v14, v15, v16 & 1);
    sub_1B590F034(v13, v14, v15, v16);
LABEL_8:
    uint64_t v18 = sub_1B5932C54(v44, v11, v12);
    MEMORY[0x1BA9A1EA0](v42, v18, v7, v9, v17, v10);
    uint64_t v19 = MEMORY[0x1E4F3CA18];
    a2[3] = MEMORY[0x1E4F3CA28];
    a2[4] = v19;
    uint64_t v20 = swift_allocObject();
    *a2 = v20;
    long long v21 = v42[1];
    *(_OWORD *)(v20 + 16) = v42[0];
    *(_OWORD *)(v20 + 32) = v21;
    *(void *)(v20 + 48) = v43;
  }
}

uint64_t sub_1B5934F80(char a1)
{
  return *(void *)&aGradientcenter_0[8 * a1];
}

uint64_t sub_1B5934FA0(char *a1, char *a2)
{
  return sub_1B59ED364(*a1, *a2);
}

uint64_t sub_1B5934FAC()
{
  return sub_1B59F09F4();
}

uint64_t sub_1B5934FB4()
{
  return sub_1B59F31C0();
}

uint64_t sub_1B5934FBC()
{
  return sub_1B59F6E84();
}

uint64_t sub_1B5934FC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5939598();
  *a1 = result;
  return result;
}

uint64_t sub_1B5934FF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5934F80(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5935020()
{
  return sub_1B5934F80(*v0);
}

uint64_t sub_1B5935028@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5939598();
  *a1 = result;
  return result;
}

uint64_t sub_1B5935050(uint64_t a1)
{
  unint64_t v2 = sub_1B59385AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B593508C(uint64_t a1)
{
  unint64_t v2 = sub_1B59385AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59350C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63C18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  int v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1B59385AC();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v57 = v6;
    uint64_t v48 = a2;
    LOBYTE(v59) = 1;
    sub_1B5938600();
    sub_1B5A1C5D8();
    uint64_t v10 = v71;
    uint64_t v53 = v73;
    uint64_t v54 = v72;
    int v11 = v74;
    uint64_t v52 = v75;
    uint64_t v55 = v77;
    uint64_t v56 = v76;
    int v12 = v78;
    uint64_t v47 = v79;
    uint64_t v13 = v81;
    uint64_t v49 = v80;
    int v14 = v82;
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F98);
    LOBYTE(v59) = 2;
    uint64_t v51 = v10;
    int v50 = v11;
    sub_1B5904BDC(v10, v54, v53, v11);
    uint64_t v15 = v47;
    int v95 = v12;
    sub_1B591DF74(v52, v56, v55, v12);
    uint64_t v46 = v13;
    int v45 = v14;
    sub_1B591DF74(v15, v49, v13, v14);
    sub_1B5938654();
    sub_1B5A1C5D8();
    uint64_t v16 = v72;
    LODWORD(v15) = v74;
    LOBYTE(v59) = 3;
    uint64_t v42 = v73;
    uint64_t v43 = v71;
    sub_1B590D634(v71, v72, v73, v74);
    uint64_t v38 = 0;
    sub_1B5A1C5D8();
    int v41 = v15;
    uint64_t v40 = v16;
    uint64_t v17 = v73;
    char v96 = 0;
    uint64_t v18 = v71;
    uint64_t v44 = v72;
    int v39 = v74;
    sub_1B590D634(v71, v72, v73, v74);
    sub_1B59386B0();
    sub_1B5A1C5D8();
    uint64_t v19 = v55;
    uint64_t v20 = v56;
    uint64_t v36 = v17;
    uint64_t v37 = v18;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v8, v5);
    uint64_t v57 = v94;
    long long v59 = v94;
    uint64_t v38 = *((void *)&v94 + 1);
    *(void *)&long long v60 = v51;
    *((void *)&v60 + 1) = v54;
    *(void *)&long long v61 = v53;
    BYTE8(v61) = v50;
    *(void *)&long long v62 = v52;
    *((void *)&v62 + 1) = v20;
    *(void *)&long long v63 = v19;
    BYTE8(v63) = v95;
    *(void *)&long long v64 = v47;
    *((void *)&v64 + 1) = v49;
    *(void *)&long long v65 = v46;
    BYTE8(v65) = v45;
    uint64_t v21 = v42;
    uint64_t v22 = v40;
    *(void *)&long long v66 = v43;
    *((void *)&v66 + 1) = v40;
    *(void *)&long long v67 = v42;
    LOBYTE(v20) = v41;
    BYTE8(v67) = v41;
    uint64_t v23 = v44;
    *(void *)&long long v68 = v18;
    *((void *)&v68 + 1) = v44;
    *(void *)&long long v69 = v17;
    LOBYTE(v10) = v39;
    BYTE8(v69) = v39;
    uint64_t v70 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B5938704((uint64_t)&v59);
    sub_1B590D6F0(v18, v23, v17, v10);
    sub_1B590D6F0(v43, v22, v21, v20);
    sub_1B5904B4C(v51, v54, v53, v50);
    sub_1B59325C0(v52, v56, v55, v95);
    uint64_t v24 = v46;
    uint64_t v25 = v47;
    uint64_t v26 = v49;
    LOBYTE(v10) = v45;
    sub_1B59325C0(v47, v49, v46, v45);
    uint64_t v27 = v38;
    swift_bridgeObjectRelease();
    uint64_t v28 = v57;
    swift_bridgeObjectRelease();
    long long v29 = v68;
    uint64_t v30 = v48;
    *(_OWORD *)(v48 + 128) = v67;
    *(_OWORD *)(v30 + 144) = v29;
    *(_OWORD *)(v30 + 160) = v69;
    *(void *)(v30 + 176) = v70;
    long long v31 = v64;
    *(_OWORD *)(v30 + 64) = v63;
    *(_OWORD *)(v30 + 80) = v31;
    long long v32 = v66;
    *(_OWORD *)(v30 + 96) = v65;
    *(_OWORD *)(v30 + 112) = v32;
    long long v33 = v60;
    *(_OWORD *)uint64_t v30 = v59;
    *(_OWORD *)(v30 + 16) = v33;
    long long v34 = v62;
    *(_OWORD *)(v30 + 32) = v61;
    *(_OWORD *)(v30 + 48) = v34;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    uint64_t v71 = v28;
    uint64_t v72 = v27;
    uint64_t v73 = v51;
    uint64_t v74 = v54;
    uint64_t v75 = v53;
    LOBYTE(v76) = v50;
    uint64_t v77 = v52;
    uint64_t v78 = v56;
    uint64_t v79 = v55;
    LOBYTE(v80) = v95;
    uint64_t v81 = v25;
    uint64_t v82 = v26;
    uint64_t v83 = v24;
    char v84 = v10;
    uint64_t v85 = v43;
    uint64_t v86 = v40;
    uint64_t v87 = v42;
    char v88 = v41;
    uint64_t v89 = v37;
    uint64_t v90 = v44;
    uint64_t v91 = v36;
    char v92 = v39;
    uint64_t v93 = MEMORY[0x1E4FBC860];
    return sub_1B5938834((uint64_t)&v71);
  }
}

void sub_1B5935830(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1B5935848()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B5935850(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 176) = a1;
  return result;
}

uint64_t sub_1B593587C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59350C8(a1, a2);
}

unint64_t sub_1B5935894()
{
  unint64_t result = qword_1E9D63BC8;
  if (!qword_1E9D63BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BC8);
  }
  return result;
}

unint64_t sub_1B59358E8()
{
  unint64_t result = qword_1E9D63BD0;
  if (!qword_1E9D63BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for UnitPointResolvable.CodingKeys()
{
  return &type metadata for UnitPointResolvable.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for UnitPointResolvableError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59359ECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnitPointResolvableError()
{
  return &type metadata for UnitPointResolvableError;
}

unint64_t sub_1B5935A28()
{
  unint64_t result = qword_1E9D63BD8;
  if (!qword_1E9D63BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BD8);
  }
  return result;
}

unint64_t sub_1B5935A80()
{
  unint64_t result = qword_1E9D63BE0;
  if (!qword_1E9D63BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BE0);
  }
  return result;
}

unint64_t sub_1B5935AD8()
{
  unint64_t result = qword_1E9D63BE8;
  if (!qword_1E9D63BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BE8);
  }
  return result;
}

unint64_t sub_1B5935B30()
{
  unint64_t result = qword_1E9D63BF0;
  if (!qword_1E9D63BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BF0);
  }
  return result;
}

uint64_t sub_1B5935B84(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1B59692AC(0, v3, 0);
    uint64_t v4 = v16;
    for (uint64_t i = a1 + 32; ; i += 72)
    {
      uint64_t v8 = sub_1B59325D4(a2);
      if (v2) {
        break;
      }
      uint64_t v10 = v8;
      uint64_t v11 = v9;
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_1B59692AC(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v10;
      *(void *)(v14 + 40) = v11;
      if (!--v3) {
        return v4;
      }
    }
    swift_release();
  }
  return v4;
}

uint64_t sub_1B5935C90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1B5A1C458();
    uint64_t v6 = (void *)(a1 + 32);
    do
    {
      uint64_t v7 = v6[3];
      uint64_t v8 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, v7, v8);
      sub_1B5A1C428();
      sub_1B5A1C468();
      sub_1B5A1C478();
      sub_1B5A1C438();
      v6 += 5;
      --v3;
    }
    while (v3);
    return v9;
  }
  return result;
}

uint64_t sub_1B5935D74(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63CA8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59395E4();
  sub_1B5A1C838();
  if (!v1)
  {
    LOBYTE(v23[0]) = 0;
    if (sub_1B5A1C5F8())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63CD0);
      LOBYTE(v22[0]) = 0;
      sub_1B59396E0(&qword_1E9D63CD8, &qword_1E9D63CD0, (void (*)(void))sub_1B5939758);
      sub_1B5A1C5D8();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      uint64_t v3 = *(void *)&v23[0];
    }
    else
    {
      LOBYTE(v23[0]) = 1;
      if (sub_1B5A1C5F8())
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63CB8);
        LOBYTE(v23[0]) = 1;
        sub_1B59396E0(&qword_1E9D63CC0, &qword_1E9D63CB8, (void (*)(void))sub_1B5939638);
        sub_1B5A1C5D8();
        int64_t v8 = *(void *)(v25 + 16);
        if (v8)
        {
          uint64_t v21 = v4;
          uint64_t v24 = MEMORY[0x1E4FBC860];
          uint64_t v9 = v25;
          sub_1B59694DC(0, v8, 0);
          v20[1] = v9;
          uint64_t v10 = v9 + 32;
          uint64_t v11 = v24;
          do
          {
            sub_1B591EE14(v10, (uint64_t)v22);
            sub_1B590CA38((uint64_t)v22, (uint64_t)v23);
            sub_1B593968C((uint64_t)v22);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B59694DC(0, *(void *)(v11 + 16) + 1, 1);
              uint64_t v11 = v24;
            }
            unint64_t v13 = *(void *)(v11 + 16);
            unint64_t v12 = *(void *)(v11 + 24);
            if (v13 >= v12 >> 1)
            {
              sub_1B59694DC(v12 > 1, v13 + 1, 1);
              uint64_t v11 = v24;
            }
            *(void *)(v11 + 16) = v13 + 1;
            sub_1B5908BE8(v23, v11 + 40 * v13 + 32);
            v10 += 40;
            --v8;
          }
          while (v8);
          swift_bridgeObjectRelease();
          uint64_t v4 = v21;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        uint64_t v3 = 0;
      }
      else
      {
        if (qword_1E9D62B20 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_1B5A1A328();
        __swift_project_value_buffer(v14, (uint64_t)qword_1E9D910D0);
        uint64_t v15 = sub_1B5A1A308();
        os_log_type_t v16 = sub_1B5A1C258();
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v17 = swift_slowAlloc();
          uint64_t v18 = swift_slowAlloc();
          *(void *)&v23[0] = v18;
          *(_DWORD *)uint64_t v17 = 136315394;
          uint64_t v21 = v4;
          v22[0] = sub_1B5928EE8(0xD000000000000071, 0x80000001B5A32EE0, (uint64_t *)v23);
          sub_1B5A1C2D8();
          *(_WORD *)(v17 + 12) = 2080;
          v22[0] = sub_1B5928EE8(0x6F72662874696E69, 0xEB00000000293A6DLL, (uint64_t *)v23);
          uint64_t v4 = v21;
          sub_1B5A1C2D8();
          _os_log_impl(&dword_1B58FD000, v15, v16, "%s %s Unable to decode any stops or colors.", (uint8_t *)v17, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1BA9A4780](v18, -1, -1);
          MEMORY[0x1BA9A4780](v17, -1, -1);
        }

        sub_1B5938558();
        swift_allocError();
        *uint64_t v19 = 1;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t destroy for RadialGradientShapeStyle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v2);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), v3);
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 104);
  if (v4 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 136);
  if (v5 != 255) {
    sub_1B590D6F0(*(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v5 & 1);
  }
  int v6 = *(unsigned __int8 *)(a1 + 168);
  if (v6 != 255) {
    sub_1B590D6F0(*(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), v6 & 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RadialGradientShapeStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    sub_1B5904B60(v6, v7, v8, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  unsigned int v9 = *(unsigned __int8 *)(a2 + 72);
  if (v9 <= 0xFD)
  {
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    sub_1B591DF88(v10, v11, v12, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(unsigned char *)(a1 + 72) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  }
  unsigned int v13 = *(unsigned __int8 *)(a2 + 104);
  if (v13 <= 0xFD)
  {
    uint64_t v14 = *(void *)(a2 + 80);
    uint64_t v15 = *(void *)(a2 + 88);
    uint64_t v16 = *(void *)(a2 + 96);
    sub_1B591DF88(v14, v15, v16, *(unsigned char *)(a2 + 104));
    *(void *)(a1 + 80) = v14;
    *(void *)(a1 + 88) = v15;
    *(void *)(a1 + 96) = v16;
    *(unsigned char *)(a1 + 104) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  }
  int v17 = *(unsigned __int8 *)(a2 + 136);
  if (v17 == 255)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  }
  else
  {
    char v18 = v17 & 1;
    uint64_t v19 = *(void *)(a2 + 112);
    uint64_t v20 = *(void *)(a2 + 120);
    uint64_t v21 = *(void *)(a2 + 128);
    sub_1B590D634(v19, v20, v21, v17 & 1);
    *(void *)(a1 + 112) = v19;
    *(void *)(a1 + 120) = v20;
    *(void *)(a1 + 128) = v21;
    *(unsigned char *)(a1 + 136) = v18;
  }
  int v22 = *(unsigned __int8 *)(a2 + 168);
  if (v22 == 255)
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
  }
  else
  {
    char v23 = v22 & 1;
    uint64_t v24 = *(void *)(a2 + 144);
    uint64_t v25 = *(void *)(a2 + 152);
    uint64_t v26 = *(void *)(a2 + 160);
    sub_1B590D634(v24, v25, v26, v22 & 1);
    *(void *)(a1 + 144) = v24;
    *(void *)(a1 + 152) = v25;
    *(void *)(a1 + 160) = v26;
    *(unsigned char *)(a1 + 168) = v23;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RadialGradientShapeStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unsigned int v5 = (_OWORD *)(a2 + 16);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = *(void *)(a2 + 32);
      sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 40));
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v16 = *(void *)(a1 + 24);
      uint64_t v17 = *(void *)(a1 + 32);
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 40);
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 16);
      long long v8 = *(_OWORD *)(a2 + 25);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 25) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 40));
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *uint64_t v4 = v7;
  }
  uint64_t v19 = (_OWORD *)(a1 + 48);
  uint64_t v20 = (_OWORD *)(a2 + 48);
  unsigned int v21 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) <= 0xFDu)
  {
    if (v21 <= 0xFD)
    {
      uint64_t v27 = *(void *)(a2 + 48);
      uint64_t v28 = *(void *)(a2 + 56);
      uint64_t v29 = *(void *)(a2 + 64);
      sub_1B591DF88(v27, v28, v29, *(unsigned char *)(a2 + 72));
      uint64_t v30 = *(void *)(a1 + 48);
      uint64_t v31 = *(void *)(a1 + 56);
      uint64_t v32 = *(void *)(a1 + 64);
      *(void *)(a1 + 48) = v27;
      *(void *)(a1 + 56) = v28;
      *(void *)(a1 + 64) = v29;
      char v33 = *(unsigned char *)(a1 + 72);
      *(unsigned char *)(a1 + 72) = v21;
      sub_1B591DF0C(v30, v31, v32, v33);
    }
    else
    {
      sub_1B59316FC(a1 + 48);
      long long v23 = *(_OWORD *)(a2 + 57);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 57) = v23;
    }
  }
  else if (v21 <= 0xFD)
  {
    uint64_t v24 = *(void *)(a2 + 48);
    uint64_t v25 = *(void *)(a2 + 56);
    uint64_t v26 = *(void *)(a2 + 64);
    sub_1B591DF88(v24, v25, v26, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 48) = v24;
    *(void *)(a1 + 56) = v25;
    *(void *)(a1 + 64) = v26;
    *(unsigned char *)(a1 + 72) = v21;
  }
  else
  {
    long long v22 = *v20;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *uint64_t v19 = v22;
  }
  long long v34 = (_OWORD *)(a1 + 80);
  uint64_t v35 = (_OWORD *)(a2 + 80);
  unsigned int v36 = *(unsigned __int8 *)(a2 + 104);
  if (*(unsigned __int8 *)(a1 + 104) <= 0xFDu)
  {
    if (v36 <= 0xFD)
    {
      uint64_t v42 = *(void *)(a2 + 80);
      uint64_t v43 = *(void *)(a2 + 88);
      uint64_t v44 = *(void *)(a2 + 96);
      sub_1B591DF88(v42, v43, v44, *(unsigned char *)(a2 + 104));
      uint64_t v45 = *(void *)(a1 + 80);
      uint64_t v46 = *(void *)(a1 + 88);
      uint64_t v47 = *(void *)(a1 + 96);
      *(void *)(a1 + 80) = v42;
      *(void *)(a1 + 88) = v43;
      *(void *)(a1 + 96) = v44;
      char v48 = *(unsigned char *)(a1 + 104);
      *(unsigned char *)(a1 + 104) = v36;
      sub_1B591DF0C(v45, v46, v47, v48);
    }
    else
    {
      sub_1B59316FC(a1 + 80);
      long long v38 = *(_OWORD *)(a2 + 89);
      *long long v34 = *v35;
      *(_OWORD *)(a1 + 89) = v38;
    }
  }
  else if (v36 <= 0xFD)
  {
    uint64_t v39 = *(void *)(a2 + 80);
    uint64_t v40 = *(void *)(a2 + 88);
    uint64_t v41 = *(void *)(a2 + 96);
    sub_1B591DF88(v39, v40, v41, *(unsigned char *)(a2 + 104));
    *(void *)(a1 + 80) = v39;
    *(void *)(a1 + 88) = v40;
    *(void *)(a1 + 96) = v41;
    *(unsigned char *)(a1 + 104) = v36;
  }
  else
  {
    long long v37 = *v35;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    *long long v34 = v37;
  }
  uint64_t v49 = (long long *)(a1 + 112);
  int v50 = (long long *)(a2 + 112);
  int v51 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 255)
  {
    if (v51 == 255)
    {
      long long v53 = *v50;
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *uint64_t v49 = v53;
    }
    else
    {
      char v62 = v51 & 1;
      uint64_t v63 = *(void *)(a2 + 112);
      uint64_t v64 = *(void *)(a2 + 120);
      uint64_t v65 = *(void *)(a2 + 128);
      sub_1B590D634(v63, v64, v65, v51 & 1);
      *(void *)(a1 + 112) = v63;
      *(void *)(a1 + 120) = v64;
      *(void *)(a1 + 128) = v65;
      *(unsigned char *)(a1 + 136) = v62;
    }
  }
  else if (v51 == 255)
  {
    sub_1B59369A8(a1 + 112);
    long long v52 = *(_OWORD *)(a2 + 121);
    *uint64_t v49 = *v50;
    *(_OWORD *)(a1 + 121) = v52;
  }
  else
  {
    char v54 = v51 & 1;
    uint64_t v55 = *(void *)(a2 + 112);
    uint64_t v56 = *(void *)(a2 + 120);
    uint64_t v57 = *(void *)(a2 + 128);
    sub_1B590D634(v55, v56, v57, v51 & 1);
    uint64_t v58 = *(void *)(a1 + 112);
    uint64_t v59 = *(void *)(a1 + 120);
    uint64_t v60 = *(void *)(a1 + 128);
    char v61 = *(unsigned char *)(a1 + 136);
    *(void *)(a1 + 112) = v55;
    *(void *)(a1 + 120) = v56;
    *(void *)(a1 + 128) = v57;
    *(unsigned char *)(a1 + 136) = v54;
    sub_1B590D6F0(v58, v59, v60, v61);
  }
  long long v66 = (long long *)(a1 + 144);
  long long v67 = (long long *)(a2 + 144);
  int v68 = *(unsigned __int8 *)(a2 + 168);
  if (*(unsigned __int8 *)(a1 + 168) == 255)
  {
    if (v68 == 255)
    {
      long long v70 = *v67;
      *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
      long long *v66 = v70;
    }
    else
    {
      char v79 = v68 & 1;
      uint64_t v80 = *(void *)(a2 + 144);
      uint64_t v81 = *(void *)(a2 + 152);
      uint64_t v82 = *(void *)(a2 + 160);
      sub_1B590D634(v80, v81, v82, v68 & 1);
      *(void *)(a1 + 144) = v80;
      *(void *)(a1 + 152) = v81;
      *(void *)(a1 + 160) = v82;
      *(unsigned char *)(a1 + 168) = v79;
    }
  }
  else if (v68 == 255)
  {
    sub_1B59369A8(a1 + 144);
    long long v69 = *(_OWORD *)(a2 + 153);
    long long *v66 = *v67;
    *(_OWORD *)(a1 + 153) = v69;
  }
  else
  {
    char v71 = v68 & 1;
    uint64_t v72 = *(void *)(a2 + 144);
    uint64_t v73 = *(void *)(a2 + 152);
    uint64_t v74 = *(void *)(a2 + 160);
    sub_1B590D634(v72, v73, v74, v68 & 1);
    uint64_t v75 = *(void *)(a1 + 144);
    uint64_t v76 = *(void *)(a1 + 152);
    uint64_t v77 = *(void *)(a1 + 160);
    char v78 = *(unsigned char *)(a1 + 168);
    *(void *)(a1 + 144) = v72;
    *(void *)(a1 + 152) = v73;
    *(void *)(a1 + 160) = v74;
    *(unsigned char *)(a1 + 168) = v71;
    sub_1B590D6F0(v75, v76, v77, v78);
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B59369A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy184_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for RadialGradientShapeStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
  if (v4 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  if (v5 > 0xFD)
  {
    sub_1B590DA50(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v5;
  sub_1B5904A88(v7, v8, v9, v4);
LABEL_6:
  unsigned int v10 = *(unsigned __int8 *)(a1 + 72);
  if (v10 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    goto LABEL_11;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + 72);
  if (v11 > 0xFD)
  {
    sub_1B59316FC(a1 + 48);
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 72) = v11;
  sub_1B591DF0C(v13, v14, v15, v10);
LABEL_11:
  unsigned int v16 = *(unsigned __int8 *)(a1 + 104);
  if (v16 > 0xFD)
  {
LABEL_14:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    goto LABEL_16;
  }
  unsigned int v17 = *(unsigned __int8 *)(a2 + 104);
  if (v17 > 0xFD)
  {
    sub_1B59316FC(a1 + 80);
    goto LABEL_14;
  }
  uint64_t v18 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = v18;
  *(unsigned char *)(a1 + 104) = v17;
  sub_1B591DF0C(v19, v20, v21, v16);
LABEL_16:
  int v22 = *(unsigned __int8 *)(a1 + 136);
  if (v22 == 255)
  {
LABEL_19:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    goto LABEL_21;
  }
  int v23 = *(unsigned __int8 *)(a2 + 136);
  if (v23 == 255)
  {
    sub_1B59369A8(a1 + 112);
    goto LABEL_19;
  }
  char v24 = v22 & 1;
  uint64_t v25 = *(void *)(a2 + 128);
  uint64_t v26 = *(void *)(a1 + 112);
  uint64_t v27 = *(void *)(a1 + 120);
  uint64_t v28 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = v25;
  *(unsigned char *)(a1 + 136) = v23 & 1;
  sub_1B590D6F0(v26, v27, v28, v24);
LABEL_21:
  int v29 = *(unsigned __int8 *)(a1 + 168);
  if (v29 != 255)
  {
    int v30 = *(unsigned __int8 *)(a2 + 168);
    if (v30 != 255)
    {
      char v31 = v29 & 1;
      uint64_t v32 = *(void *)(a2 + 160);
      uint64_t v33 = *(void *)(a1 + 144);
      uint64_t v34 = *(void *)(a1 + 152);
      uint64_t v35 = *(void *)(a1 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 160) = v32;
      *(unsigned char *)(a1 + 168) = v30 & 1;
      sub_1B590D6F0(v33, v34, v35, v31);
      goto LABEL_26;
    }
    sub_1B59369A8(a1 + 144);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
LABEL_26:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RadialGradientShapeStyle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 176);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RadialGradientShapeStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 176) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RadialGradientShapeStyle()
{
  return &type metadata for RadialGradientShapeStyle;
}

uint64_t destroy for AngularGradientShapeStyle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v2);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), v3);
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 104);
  if (v4 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 136);
  if (v5 != 255) {
    sub_1B590D6F0(*(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v5 & 1);
  }
  int v6 = *(unsigned __int8 *)(a1 + 168);
  if (v6 != 255) {
    sub_1B590D6F0(*(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), v6 & 1);
  }
  int v7 = *(unsigned __int8 *)(a1 + 200);
  if (v7 != 255) {
    sub_1B590D6F0(*(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), v7 & 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AngularGradientShapeStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    sub_1B5904B60(v6, v7, v8, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  unsigned int v9 = *(unsigned __int8 *)(a2 + 72);
  if (v9 <= 0xFD)
  {
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    sub_1B591DF88(v10, v11, v12, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(unsigned char *)(a1 + 72) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  }
  unsigned int v13 = *(unsigned __int8 *)(a2 + 104);
  if (v13 <= 0xFD)
  {
    uint64_t v14 = *(void *)(a2 + 80);
    uint64_t v15 = *(void *)(a2 + 88);
    uint64_t v16 = *(void *)(a2 + 96);
    sub_1B591DF88(v14, v15, v16, *(unsigned char *)(a2 + 104));
    *(void *)(a1 + 80) = v14;
    *(void *)(a1 + 88) = v15;
    *(void *)(a1 + 96) = v16;
    *(unsigned char *)(a1 + 104) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  }
  int v17 = *(unsigned __int8 *)(a2 + 136);
  if (v17 == 255)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  }
  else
  {
    char v18 = v17 & 1;
    uint64_t v19 = *(void *)(a2 + 112);
    uint64_t v20 = *(void *)(a2 + 120);
    uint64_t v21 = *(void *)(a2 + 128);
    sub_1B590D634(v19, v20, v21, v17 & 1);
    *(void *)(a1 + 112) = v19;
    *(void *)(a1 + 120) = v20;
    *(void *)(a1 + 128) = v21;
    *(unsigned char *)(a1 + 136) = v18;
  }
  int v22 = *(unsigned __int8 *)(a2 + 168);
  if (v22 == 255)
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
  }
  else
  {
    char v23 = v22 & 1;
    uint64_t v24 = *(void *)(a2 + 144);
    uint64_t v25 = *(void *)(a2 + 152);
    uint64_t v26 = *(void *)(a2 + 160);
    sub_1B590D634(v24, v25, v26, v22 & 1);
    *(void *)(a1 + 144) = v24;
    *(void *)(a1 + 152) = v25;
    *(void *)(a1 + 160) = v26;
    *(unsigned char *)(a1 + 168) = v23;
  }
  int v27 = *(unsigned __int8 *)(a2 + 200);
  if (v27 == 255)
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  }
  else
  {
    char v28 = v27 & 1;
    uint64_t v29 = *(void *)(a2 + 176);
    uint64_t v30 = *(void *)(a2 + 184);
    uint64_t v31 = *(void *)(a2 + 192);
    sub_1B590D634(v29, v30, v31, v27 & 1);
    *(void *)(a1 + 176) = v29;
    *(void *)(a1 + 184) = v30;
    *(void *)(a1 + 192) = v31;
    *(unsigned char *)(a1 + 200) = v28;
  }
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AngularGradientShapeStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unsigned int v5 = (_OWORD *)(a2 + 16);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = *(void *)(a2 + 32);
      sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 40));
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v16 = *(void *)(a1 + 24);
      uint64_t v17 = *(void *)(a1 + 32);
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 40);
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 16);
      long long v8 = *(_OWORD *)(a2 + 25);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 25) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 40));
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *uint64_t v4 = v7;
  }
  uint64_t v19 = (_OWORD *)(a1 + 48);
  uint64_t v20 = (_OWORD *)(a2 + 48);
  unsigned int v21 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) <= 0xFDu)
  {
    if (v21 <= 0xFD)
    {
      uint64_t v27 = *(void *)(a2 + 48);
      uint64_t v28 = *(void *)(a2 + 56);
      uint64_t v29 = *(void *)(a2 + 64);
      sub_1B591DF88(v27, v28, v29, *(unsigned char *)(a2 + 72));
      uint64_t v30 = *(void *)(a1 + 48);
      uint64_t v31 = *(void *)(a1 + 56);
      uint64_t v32 = *(void *)(a1 + 64);
      *(void *)(a1 + 48) = v27;
      *(void *)(a1 + 56) = v28;
      *(void *)(a1 + 64) = v29;
      char v33 = *(unsigned char *)(a1 + 72);
      *(unsigned char *)(a1 + 72) = v21;
      sub_1B591DF0C(v30, v31, v32, v33);
    }
    else
    {
      sub_1B59316FC(a1 + 48);
      long long v23 = *(_OWORD *)(a2 + 57);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 57) = v23;
    }
  }
  else if (v21 <= 0xFD)
  {
    uint64_t v24 = *(void *)(a2 + 48);
    uint64_t v25 = *(void *)(a2 + 56);
    uint64_t v26 = *(void *)(a2 + 64);
    sub_1B591DF88(v24, v25, v26, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 48) = v24;
    *(void *)(a1 + 56) = v25;
    *(void *)(a1 + 64) = v26;
    *(unsigned char *)(a1 + 72) = v21;
  }
  else
  {
    long long v22 = *v20;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *uint64_t v19 = v22;
  }
  uint64_t v34 = (_OWORD *)(a1 + 80);
  uint64_t v35 = (_OWORD *)(a2 + 80);
  unsigned int v36 = *(unsigned __int8 *)(a2 + 104);
  if (*(unsigned __int8 *)(a1 + 104) <= 0xFDu)
  {
    if (v36 <= 0xFD)
    {
      uint64_t v42 = *(void *)(a2 + 80);
      uint64_t v43 = *(void *)(a2 + 88);
      uint64_t v44 = *(void *)(a2 + 96);
      sub_1B591DF88(v42, v43, v44, *(unsigned char *)(a2 + 104));
      uint64_t v45 = *(void *)(a1 + 80);
      uint64_t v46 = *(void *)(a1 + 88);
      uint64_t v47 = *(void *)(a1 + 96);
      *(void *)(a1 + 80) = v42;
      *(void *)(a1 + 88) = v43;
      *(void *)(a1 + 96) = v44;
      char v48 = *(unsigned char *)(a1 + 104);
      *(unsigned char *)(a1 + 104) = v36;
      sub_1B591DF0C(v45, v46, v47, v48);
    }
    else
    {
      sub_1B59316FC(a1 + 80);
      long long v38 = *(_OWORD *)(a2 + 89);
      *uint64_t v34 = *v35;
      *(_OWORD *)(a1 + 89) = v38;
    }
  }
  else if (v36 <= 0xFD)
  {
    uint64_t v39 = *(void *)(a2 + 80);
    uint64_t v40 = *(void *)(a2 + 88);
    uint64_t v41 = *(void *)(a2 + 96);
    sub_1B591DF88(v39, v40, v41, *(unsigned char *)(a2 + 104));
    *(void *)(a1 + 80) = v39;
    *(void *)(a1 + 88) = v40;
    *(void *)(a1 + 96) = v41;
    *(unsigned char *)(a1 + 104) = v36;
  }
  else
  {
    long long v37 = *v35;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    *uint64_t v34 = v37;
  }
  uint64_t v49 = (long long *)(a1 + 112);
  int v50 = (long long *)(a2 + 112);
  int v51 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 255)
  {
    if (v51 == 255)
    {
      long long v53 = *v50;
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *uint64_t v49 = v53;
    }
    else
    {
      char v62 = v51 & 1;
      uint64_t v63 = *(void *)(a2 + 112);
      uint64_t v64 = *(void *)(a2 + 120);
      uint64_t v65 = *(void *)(a2 + 128);
      sub_1B590D634(v63, v64, v65, v51 & 1);
      *(void *)(a1 + 112) = v63;
      *(void *)(a1 + 120) = v64;
      *(void *)(a1 + 128) = v65;
      *(unsigned char *)(a1 + 136) = v62;
    }
  }
  else if (v51 == 255)
  {
    sub_1B59369A8(a1 + 112);
    long long v52 = *(_OWORD *)(a2 + 121);
    *uint64_t v49 = *v50;
    *(_OWORD *)(a1 + 121) = v52;
  }
  else
  {
    char v54 = v51 & 1;
    uint64_t v55 = *(void *)(a2 + 112);
    uint64_t v56 = *(void *)(a2 + 120);
    uint64_t v57 = *(void *)(a2 + 128);
    sub_1B590D634(v55, v56, v57, v51 & 1);
    uint64_t v58 = *(void *)(a1 + 112);
    uint64_t v59 = *(void *)(a1 + 120);
    uint64_t v60 = *(void *)(a1 + 128);
    char v61 = *(unsigned char *)(a1 + 136);
    *(void *)(a1 + 112) = v55;
    *(void *)(a1 + 120) = v56;
    *(void *)(a1 + 128) = v57;
    *(unsigned char *)(a1 + 136) = v54;
    sub_1B590D6F0(v58, v59, v60, v61);
  }
  long long v66 = (long long *)(a1 + 144);
  long long v67 = (long long *)(a2 + 144);
  int v68 = *(unsigned __int8 *)(a2 + 168);
  if (*(unsigned __int8 *)(a1 + 168) == 255)
  {
    if (v68 == 255)
    {
      long long v70 = *v67;
      *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
      long long *v66 = v70;
    }
    else
    {
      char v79 = v68 & 1;
      uint64_t v80 = *(void *)(a2 + 144);
      uint64_t v81 = *(void *)(a2 + 152);
      uint64_t v82 = *(void *)(a2 + 160);
      sub_1B590D634(v80, v81, v82, v68 & 1);
      *(void *)(a1 + 144) = v80;
      *(void *)(a1 + 152) = v81;
      *(void *)(a1 + 160) = v82;
      *(unsigned char *)(a1 + 168) = v79;
    }
  }
  else if (v68 == 255)
  {
    sub_1B59369A8(a1 + 144);
    long long v69 = *(_OWORD *)(a2 + 153);
    long long *v66 = *v67;
    *(_OWORD *)(a1 + 153) = v69;
  }
  else
  {
    char v71 = v68 & 1;
    uint64_t v72 = *(void *)(a2 + 144);
    uint64_t v73 = *(void *)(a2 + 152);
    uint64_t v74 = *(void *)(a2 + 160);
    sub_1B590D634(v72, v73, v74, v68 & 1);
    uint64_t v75 = *(void *)(a1 + 144);
    uint64_t v76 = *(void *)(a1 + 152);
    uint64_t v77 = *(void *)(a1 + 160);
    char v78 = *(unsigned char *)(a1 + 168);
    *(void *)(a1 + 144) = v72;
    *(void *)(a1 + 152) = v73;
    *(void *)(a1 + 160) = v74;
    *(unsigned char *)(a1 + 168) = v71;
    sub_1B590D6F0(v75, v76, v77, v78);
  }
  uint64_t v83 = (long long *)(a1 + 176);
  char v84 = (long long *)(a2 + 176);
  int v85 = *(unsigned __int8 *)(a2 + 200);
  if (*(unsigned __int8 *)(a1 + 200) == 255)
  {
    if (v85 == 255)
    {
      long long v87 = *v84;
      *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
      *uint64_t v83 = v87;
    }
    else
    {
      char v96 = v85 & 1;
      uint64_t v97 = *(void *)(a2 + 176);
      uint64_t v98 = *(void *)(a2 + 184);
      uint64_t v99 = *(void *)(a2 + 192);
      sub_1B590D634(v97, v98, v99, v85 & 1);
      *(void *)(a1 + 176) = v97;
      *(void *)(a1 + 184) = v98;
      *(void *)(a1 + 192) = v99;
      *(unsigned char *)(a1 + 200) = v96;
    }
  }
  else if (v85 == 255)
  {
    sub_1B59369A8(a1 + 176);
    long long v86 = *(_OWORD *)(a2 + 185);
    *uint64_t v83 = *v84;
    *(_OWORD *)(a1 + 185) = v86;
  }
  else
  {
    char v88 = v85 & 1;
    uint64_t v89 = *(void *)(a2 + 176);
    uint64_t v90 = *(void *)(a2 + 184);
    uint64_t v91 = *(void *)(a2 + 192);
    sub_1B590D634(v89, v90, v91, v85 & 1);
    uint64_t v92 = *(void *)(a1 + 176);
    uint64_t v93 = *(void *)(a1 + 184);
    uint64_t v94 = *(void *)(a1 + 192);
    char v95 = *(unsigned char *)(a1 + 200);
    *(void *)(a1 + 176) = v89;
    *(void *)(a1 + 184) = v90;
    *(void *)(a1 + 192) = v91;
    *(unsigned char *)(a1 + 200) = v88;
    sub_1B590D6F0(v92, v93, v94, v95);
  }
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy216_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for AngularGradientShapeStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
  if (v4 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  if (v5 > 0xFD)
  {
    sub_1B590DA50(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v5;
  sub_1B5904A88(v7, v8, v9, v4);
LABEL_6:
  unsigned int v10 = *(unsigned __int8 *)(a1 + 72);
  if (v10 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    goto LABEL_11;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + 72);
  if (v11 > 0xFD)
  {
    sub_1B59316FC(a1 + 48);
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 72) = v11;
  sub_1B591DF0C(v13, v14, v15, v10);
LABEL_11:
  unsigned int v16 = *(unsigned __int8 *)(a1 + 104);
  if (v16 > 0xFD)
  {
LABEL_14:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    goto LABEL_16;
  }
  unsigned int v17 = *(unsigned __int8 *)(a2 + 104);
  if (v17 > 0xFD)
  {
    sub_1B59316FC(a1 + 80);
    goto LABEL_14;
  }
  uint64_t v18 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = v18;
  *(unsigned char *)(a1 + 104) = v17;
  sub_1B591DF0C(v19, v20, v21, v16);
LABEL_16:
  int v22 = *(unsigned __int8 *)(a1 + 136);
  if (v22 == 255)
  {
LABEL_19:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    goto LABEL_21;
  }
  int v23 = *(unsigned __int8 *)(a2 + 136);
  if (v23 == 255)
  {
    sub_1B59369A8(a1 + 112);
    goto LABEL_19;
  }
  char v24 = v22 & 1;
  uint64_t v25 = *(void *)(a2 + 128);
  uint64_t v26 = *(void *)(a1 + 112);
  uint64_t v27 = *(void *)(a1 + 120);
  uint64_t v28 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = v25;
  *(unsigned char *)(a1 + 136) = v23 & 1;
  sub_1B590D6F0(v26, v27, v28, v24);
LABEL_21:
  int v29 = *(unsigned __int8 *)(a1 + 168);
  if (v29 == 255)
  {
LABEL_24:
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    goto LABEL_26;
  }
  int v30 = *(unsigned __int8 *)(a2 + 168);
  if (v30 == 255)
  {
    sub_1B59369A8(a1 + 144);
    goto LABEL_24;
  }
  char v31 = v29 & 1;
  uint64_t v32 = *(void *)(a2 + 160);
  uint64_t v33 = *(void *)(a1 + 144);
  uint64_t v34 = *(void *)(a1 + 152);
  uint64_t v35 = *(void *)(a1 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = v32;
  *(unsigned char *)(a1 + 168) = v30 & 1;
  sub_1B590D6F0(v33, v34, v35, v31);
LABEL_26:
  int v36 = *(unsigned __int8 *)(a1 + 200);
  if (v36 != 255)
  {
    int v37 = *(unsigned __int8 *)(a2 + 200);
    if (v37 != 255)
    {
      char v38 = v36 & 1;
      uint64_t v39 = *(void *)(a2 + 192);
      uint64_t v40 = *(void *)(a1 + 176);
      uint64_t v41 = *(void *)(a1 + 184);
      uint64_t v42 = *(void *)(a1 + 192);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(void *)(a1 + 192) = v39;
      *(unsigned char *)(a1 + 200) = v37 & 1;
      sub_1B590D6F0(v40, v41, v42, v38);
      goto LABEL_31;
    }
    sub_1B59369A8(a1 + 176);
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
LABEL_31:
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AngularGradientShapeStyle()
{
  return &type metadata for AngularGradientShapeStyle;
}

uint64_t destroy for LinearGradientShapeStyle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v2);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), v3);
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 104);
  if (v4 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), v4);
  }
  unsigned int v5 = *(unsigned __int8 *)(a1 + 136);
  if (v5 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v5);
  }
  unsigned int v6 = *(unsigned __int8 *)(a1 + 168);
  if (v6 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), v6);
  }
  unsigned int v7 = *(unsigned __int8 *)(a1 + 200);
  if (v7 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), v7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LinearGradientShapeStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    sub_1B5904B60(v6, v7, v8, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  unsigned int v9 = *(unsigned __int8 *)(a2 + 72);
  if (v9 <= 0xFD)
  {
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    sub_1B591DF88(v10, v11, v12, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(unsigned char *)(a1 + 72) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  }
  unsigned int v13 = *(unsigned __int8 *)(a2 + 104);
  if (v13 <= 0xFD)
  {
    uint64_t v14 = *(void *)(a2 + 80);
    uint64_t v15 = *(void *)(a2 + 88);
    uint64_t v16 = *(void *)(a2 + 96);
    sub_1B591DF88(v14, v15, v16, *(unsigned char *)(a2 + 104));
    *(void *)(a1 + 80) = v14;
    *(void *)(a1 + 88) = v15;
    *(void *)(a1 + 96) = v16;
    *(unsigned char *)(a1 + 104) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  }
  unsigned int v17 = *(unsigned __int8 *)(a2 + 136);
  if (v17 <= 0xFD)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = *(void *)(a2 + 120);
    uint64_t v20 = *(void *)(a2 + 128);
    sub_1B5904B60(v18, v19, v20, *(unsigned char *)(a2 + 136));
    *(void *)(a1 + 112) = v18;
    *(void *)(a1 + 120) = v19;
    *(void *)(a1 + 128) = v20;
    *(unsigned char *)(a1 + 136) = v17;
  }
  else
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  }
  unsigned int v21 = *(unsigned __int8 *)(a2 + 168);
  if (v21 <= 0xFD)
  {
    uint64_t v22 = *(void *)(a2 + 144);
    uint64_t v23 = *(void *)(a2 + 152);
    uint64_t v24 = *(void *)(a2 + 160);
    sub_1B591DF88(v22, v23, v24, *(unsigned char *)(a2 + 168));
    *(void *)(a1 + 144) = v22;
    *(void *)(a1 + 152) = v23;
    *(void *)(a1 + 160) = v24;
    *(unsigned char *)(a1 + 168) = v21;
  }
  else
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
  }
  unsigned int v25 = *(unsigned __int8 *)(a2 + 200);
  if (v25 <= 0xFD)
  {
    uint64_t v26 = *(void *)(a2 + 176);
    uint64_t v27 = *(void *)(a2 + 184);
    uint64_t v28 = *(void *)(a2 + 192);
    sub_1B591DF88(v26, v27, v28, *(unsigned char *)(a2 + 200));
    *(void *)(a1 + 176) = v26;
    *(void *)(a1 + 184) = v27;
    *(void *)(a1 + 192) = v28;
    *(unsigned char *)(a1 + 200) = v25;
  }
  else
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  }
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LinearGradientShapeStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unsigned int v5 = (_OWORD *)(a2 + 16);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = *(void *)(a2 + 32);
      sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 40));
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v16 = *(void *)(a1 + 24);
      uint64_t v17 = *(void *)(a1 + 32);
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 40);
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 16);
      long long v8 = *(_OWORD *)(a2 + 25);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 25) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 40));
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *uint64_t v4 = v7;
  }
  uint64_t v19 = (_OWORD *)(a1 + 48);
  uint64_t v20 = (_OWORD *)(a2 + 48);
  unsigned int v21 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) <= 0xFDu)
  {
    if (v21 <= 0xFD)
    {
      uint64_t v27 = *(void *)(a2 + 48);
      uint64_t v28 = *(void *)(a2 + 56);
      uint64_t v29 = *(void *)(a2 + 64);
      sub_1B591DF88(v27, v28, v29, *(unsigned char *)(a2 + 72));
      uint64_t v30 = *(void *)(a1 + 48);
      uint64_t v31 = *(void *)(a1 + 56);
      uint64_t v32 = *(void *)(a1 + 64);
      *(void *)(a1 + 48) = v27;
      *(void *)(a1 + 56) = v28;
      *(void *)(a1 + 64) = v29;
      char v33 = *(unsigned char *)(a1 + 72);
      *(unsigned char *)(a1 + 72) = v21;
      sub_1B591DF0C(v30, v31, v32, v33);
    }
    else
    {
      sub_1B59316FC(a1 + 48);
      long long v23 = *(_OWORD *)(a2 + 57);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 57) = v23;
    }
  }
  else if (v21 <= 0xFD)
  {
    uint64_t v24 = *(void *)(a2 + 48);
    uint64_t v25 = *(void *)(a2 + 56);
    uint64_t v26 = *(void *)(a2 + 64);
    sub_1B591DF88(v24, v25, v26, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 48) = v24;
    *(void *)(a1 + 56) = v25;
    *(void *)(a1 + 64) = v26;
    *(unsigned char *)(a1 + 72) = v21;
  }
  else
  {
    long long v22 = *v20;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *uint64_t v19 = v22;
  }
  uint64_t v34 = (_OWORD *)(a1 + 80);
  uint64_t v35 = (_OWORD *)(a2 + 80);
  unsigned int v36 = *(unsigned __int8 *)(a2 + 104);
  if (*(unsigned __int8 *)(a1 + 104) <= 0xFDu)
  {
    if (v36 <= 0xFD)
    {
      uint64_t v42 = *(void *)(a2 + 80);
      uint64_t v43 = *(void *)(a2 + 88);
      uint64_t v44 = *(void *)(a2 + 96);
      sub_1B591DF88(v42, v43, v44, *(unsigned char *)(a2 + 104));
      uint64_t v45 = *(void *)(a1 + 80);
      uint64_t v46 = *(void *)(a1 + 88);
      uint64_t v47 = *(void *)(a1 + 96);
      *(void *)(a1 + 80) = v42;
      *(void *)(a1 + 88) = v43;
      *(void *)(a1 + 96) = v44;
      char v48 = *(unsigned char *)(a1 + 104);
      *(unsigned char *)(a1 + 104) = v36;
      sub_1B591DF0C(v45, v46, v47, v48);
    }
    else
    {
      sub_1B59316FC(a1 + 80);
      long long v38 = *(_OWORD *)(a2 + 89);
      *uint64_t v34 = *v35;
      *(_OWORD *)(a1 + 89) = v38;
    }
  }
  else if (v36 <= 0xFD)
  {
    uint64_t v39 = *(void *)(a2 + 80);
    uint64_t v40 = *(void *)(a2 + 88);
    uint64_t v41 = *(void *)(a2 + 96);
    sub_1B591DF88(v39, v40, v41, *(unsigned char *)(a2 + 104));
    *(void *)(a1 + 80) = v39;
    *(void *)(a1 + 88) = v40;
    *(void *)(a1 + 96) = v41;
    *(unsigned char *)(a1 + 104) = v36;
  }
  else
  {
    long long v37 = *v35;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    *uint64_t v34 = v37;
  }
  uint64_t v49 = (_OWORD *)(a1 + 112);
  int v50 = (_OWORD *)(a2 + 112);
  unsigned int v51 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) <= 0xFDu)
  {
    if (v51 <= 0xFD)
    {
      uint64_t v57 = *(void *)(a2 + 112);
      uint64_t v58 = *(void *)(a2 + 120);
      uint64_t v59 = *(void *)(a2 + 128);
      sub_1B5904B60(v57, v58, v59, *(unsigned char *)(a2 + 136));
      uint64_t v60 = *(void *)(a1 + 112);
      uint64_t v61 = *(void *)(a1 + 120);
      uint64_t v62 = *(void *)(a1 + 128);
      *(void *)(a1 + 112) = v57;
      *(void *)(a1 + 120) = v58;
      *(void *)(a1 + 128) = v59;
      unsigned __int8 v63 = *(unsigned char *)(a1 + 136);
      *(unsigned char *)(a1 + 136) = v51;
      sub_1B5904A88(v60, v61, v62, v63);
    }
    else
    {
      sub_1B590DA50(a1 + 112);
      long long v53 = *(_OWORD *)(a2 + 121);
      *uint64_t v49 = *v50;
      *(_OWORD *)(a1 + 121) = v53;
    }
  }
  else if (v51 <= 0xFD)
  {
    uint64_t v54 = *(void *)(a2 + 112);
    uint64_t v55 = *(void *)(a2 + 120);
    uint64_t v56 = *(void *)(a2 + 128);
    sub_1B5904B60(v54, v55, v56, *(unsigned char *)(a2 + 136));
    *(void *)(a1 + 112) = v54;
    *(void *)(a1 + 120) = v55;
    *(void *)(a1 + 128) = v56;
    *(unsigned char *)(a1 + 136) = v51;
  }
  else
  {
    long long v52 = *v50;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    *uint64_t v49 = v52;
  }
  uint64_t v64 = (_OWORD *)(a1 + 144);
  uint64_t v65 = (_OWORD *)(a2 + 144);
  unsigned int v66 = *(unsigned __int8 *)(a2 + 168);
  if (*(unsigned __int8 *)(a1 + 168) <= 0xFDu)
  {
    if (v66 <= 0xFD)
    {
      uint64_t v72 = *(void *)(a2 + 144);
      uint64_t v73 = *(void *)(a2 + 152);
      uint64_t v74 = *(void *)(a2 + 160);
      sub_1B591DF88(v72, v73, v74, *(unsigned char *)(a2 + 168));
      uint64_t v75 = *(void *)(a1 + 144);
      uint64_t v76 = *(void *)(a1 + 152);
      uint64_t v77 = *(void *)(a1 + 160);
      *(void *)(a1 + 144) = v72;
      *(void *)(a1 + 152) = v73;
      *(void *)(a1 + 160) = v74;
      char v78 = *(unsigned char *)(a1 + 168);
      *(unsigned char *)(a1 + 168) = v66;
      sub_1B591DF0C(v75, v76, v77, v78);
    }
    else
    {
      sub_1B59316FC(a1 + 144);
      long long v68 = *(_OWORD *)(a2 + 153);
      _OWORD *v64 = *v65;
      *(_OWORD *)(a1 + 153) = v68;
    }
  }
  else if (v66 <= 0xFD)
  {
    uint64_t v69 = *(void *)(a2 + 144);
    uint64_t v70 = *(void *)(a2 + 152);
    uint64_t v71 = *(void *)(a2 + 160);
    sub_1B591DF88(v69, v70, v71, *(unsigned char *)(a2 + 168));
    *(void *)(a1 + 144) = v69;
    *(void *)(a1 + 152) = v70;
    *(void *)(a1 + 160) = v71;
    *(unsigned char *)(a1 + 168) = v66;
  }
  else
  {
    long long v67 = *v65;
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    _OWORD *v64 = v67;
  }
  char v79 = (_OWORD *)(a1 + 176);
  uint64_t v80 = (_OWORD *)(a2 + 176);
  unsigned int v81 = *(unsigned __int8 *)(a2 + 200);
  if (*(unsigned __int8 *)(a1 + 200) <= 0xFDu)
  {
    if (v81 <= 0xFD)
    {
      uint64_t v87 = *(void *)(a2 + 176);
      uint64_t v88 = *(void *)(a2 + 184);
      uint64_t v89 = *(void *)(a2 + 192);
      sub_1B591DF88(v87, v88, v89, *(unsigned char *)(a2 + 200));
      uint64_t v90 = *(void *)(a1 + 176);
      uint64_t v91 = *(void *)(a1 + 184);
      uint64_t v92 = *(void *)(a1 + 192);
      *(void *)(a1 + 176) = v87;
      *(void *)(a1 + 184) = v88;
      *(void *)(a1 + 192) = v89;
      char v93 = *(unsigned char *)(a1 + 200);
      *(unsigned char *)(a1 + 200) = v81;
      sub_1B591DF0C(v90, v91, v92, v93);
    }
    else
    {
      sub_1B59316FC(a1 + 176);
      long long v83 = *(_OWORD *)(a2 + 185);
      *char v79 = *v80;
      *(_OWORD *)(a1 + 185) = v83;
    }
  }
  else if (v81 <= 0xFD)
  {
    uint64_t v84 = *(void *)(a2 + 176);
    uint64_t v85 = *(void *)(a2 + 184);
    uint64_t v86 = *(void *)(a2 + 192);
    sub_1B591DF88(v84, v85, v86, *(unsigned char *)(a2 + 200));
    *(void *)(a1 + 176) = v84;
    *(void *)(a1 + 184) = v85;
    *(void *)(a1 + 192) = v86;
    *(unsigned char *)(a1 + 200) = v81;
  }
  else
  {
    long long v82 = *v80;
    *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
    *char v79 = v82;
  }
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LinearGradientShapeStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
  if (v4 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  if (v5 > 0xFD)
  {
    sub_1B590DA50(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v5;
  sub_1B5904A88(v7, v8, v9, v4);
LABEL_6:
  unsigned int v10 = *(unsigned __int8 *)(a1 + 72);
  if (v10 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    goto LABEL_11;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + 72);
  if (v11 > 0xFD)
  {
    sub_1B59316FC(a1 + 48);
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 72) = v11;
  sub_1B591DF0C(v13, v14, v15, v10);
LABEL_11:
  unsigned int v16 = *(unsigned __int8 *)(a1 + 104);
  if (v16 > 0xFD)
  {
LABEL_14:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    goto LABEL_16;
  }
  unsigned int v17 = *(unsigned __int8 *)(a2 + 104);
  if (v17 > 0xFD)
  {
    sub_1B59316FC(a1 + 80);
    goto LABEL_14;
  }
  uint64_t v18 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = v18;
  *(unsigned char *)(a1 + 104) = v17;
  sub_1B591DF0C(v19, v20, v21, v16);
LABEL_16:
  unsigned int v22 = *(unsigned __int8 *)(a1 + 136);
  if (v22 > 0xFD)
  {
LABEL_19:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    goto LABEL_21;
  }
  unsigned int v23 = *(unsigned __int8 *)(a2 + 136);
  if (v23 > 0xFD)
  {
    sub_1B590DA50(a1 + 112);
    goto LABEL_19;
  }
  uint64_t v24 = *(void *)(a2 + 128);
  uint64_t v25 = *(void *)(a1 + 112);
  uint64_t v26 = *(void *)(a1 + 120);
  uint64_t v27 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = v24;
  *(unsigned char *)(a1 + 136) = v23;
  sub_1B5904A88(v25, v26, v27, v22);
LABEL_21:
  unsigned int v28 = *(unsigned __int8 *)(a1 + 168);
  if (v28 > 0xFD)
  {
LABEL_24:
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    goto LABEL_26;
  }
  unsigned int v29 = *(unsigned __int8 *)(a2 + 168);
  if (v29 > 0xFD)
  {
    sub_1B59316FC(a1 + 144);
    goto LABEL_24;
  }
  uint64_t v30 = *(void *)(a2 + 160);
  uint64_t v31 = *(void *)(a1 + 144);
  uint64_t v32 = *(void *)(a1 + 152);
  uint64_t v33 = *(void *)(a1 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = v30;
  *(unsigned char *)(a1 + 168) = v29;
  sub_1B591DF0C(v31, v32, v33, v28);
LABEL_26:
  unsigned int v34 = *(unsigned __int8 *)(a1 + 200);
  if (v34 <= 0xFD)
  {
    unsigned int v35 = *(unsigned __int8 *)(a2 + 200);
    if (v35 <= 0xFD)
    {
      uint64_t v36 = *(void *)(a2 + 192);
      uint64_t v37 = *(void *)(a1 + 176);
      uint64_t v38 = *(void *)(a1 + 184);
      uint64_t v39 = *(void *)(a1 + 192);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(void *)(a1 + 192) = v36;
      *(unsigned char *)(a1 + 200) = v35;
      sub_1B591DF0C(v37, v38, v39, v34);
      goto LABEL_31;
    }
    sub_1B59316FC(a1 + 176);
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
LABEL_31:
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6LiftUI25AngularGradientShapeStyleVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 216)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 208);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B5938328(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 208) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LinearGradientShapeStyle()
{
  return &type metadata for LinearGradientShapeStyle;
}

unint64_t sub_1B59383AC(uint64_t a1)
{
  unint64_t result = sub_1B59383D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59383D4()
{
  unint64_t result = qword_1E9D63BF8;
  if (!qword_1E9D63BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63BF8);
  }
  return result;
}

unint64_t sub_1B5938428(uint64_t a1)
{
  unint64_t result = sub_1B5938450();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5938450()
{
  unint64_t result = qword_1E9D63C00;
  if (!qword_1E9D63C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C00);
  }
  return result;
}

unint64_t sub_1B59384A4(uint64_t a1)
{
  unint64_t result = sub_1B59384CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59384CC()
{
  unint64_t result = qword_1E9D63C08;
  if (!qword_1E9D63C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C08);
  }
  return result;
}

uint64_t sub_1B5938520()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

unint64_t sub_1B5938558()
{
  unint64_t result = qword_1E9D63C10;
  if (!qword_1E9D63C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C10);
  }
  return result;
}

unint64_t sub_1B59385AC()
{
  unint64_t result = qword_1E9D63C20;
  if (!qword_1E9D63C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C20);
  }
  return result;
}

unint64_t sub_1B5938600()
{
  unint64_t result = qword_1E9D63C28;
  if (!qword_1E9D63C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C28);
  }
  return result;
}

unint64_t sub_1B5938654()
{
  unint64_t result = qword_1E9D63050;
  if (!qword_1E9D63050)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D62F98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63050);
  }
  return result;
}

unint64_t sub_1B59386B0()
{
  unint64_t result = qword_1E9D63C30;
  if (!qword_1E9D63C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C30);
  }
  return result;
}

uint64_t sub_1B5938704(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 88);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v18 = *(void *)(a1 + 120);
  uint64_t v19 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 128);
  uint64_t v21 = *(void *)(a1 + 152);
  uint64_t v22 = *(void *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 160);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 72);
  char v9 = *(unsigned char *)(a1 + 104);
  unsigned __int8 v12 = *(unsigned char *)(a1 + 136);
  unsigned __int8 v16 = *(unsigned char *)(a1 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B5904BDC(v2, v3, v4, v7);
  sub_1B591DF74(v11, v5, v6, v8);
  sub_1B591DF74(v15, v14, v13, v9);
  sub_1B590F04C(v19, v18, v17, v12);
  sub_1B590F04C(v22, v21, v20, v16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B5938834(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 88);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v18 = *(void *)(a1 + 120);
  uint64_t v19 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 128);
  uint64_t v21 = *(void *)(a1 + 152);
  uint64_t v22 = *(void *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 160);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 72);
  char v9 = *(unsigned char *)(a1 + 104);
  unsigned __int8 v12 = *(unsigned char *)(a1 + 136);
  unsigned __int8 v16 = *(unsigned char *)(a1 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B5904B4C(v2, v3, v4, v7);
  sub_1B59325C0(v11, v5, v6, v8);
  sub_1B59325C0(v15, v14, v13, v9);
  sub_1B590F034(v19, v18, v17, v12);
  sub_1B590F034(v22, v21, v20, v16);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1B5938964()
{
  unint64_t result = qword_1E9D63C40;
  if (!qword_1E9D63C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C40);
  }
  return result;
}

unint64_t sub_1B59389B8()
{
  unint64_t result = qword_1E9D63C50;
  if (!qword_1E9D63C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C50);
  }
  return result;
}

uint64_t sub_1B5938A0C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 96);
  uint64_t v20 = *(void *)(a1 + 120);
  uint64_t v21 = *(void *)(a1 + 112);
  uint64_t v19 = *(void *)(a1 + 128);
  uint64_t v24 = *(void *)(a1 + 152);
  uint64_t v25 = *(void *)(a1 + 144);
  uint64_t v23 = *(void *)(a1 + 160);
  uint64_t v27 = *(void *)(a1 + 184);
  uint64_t v28 = *(void *)(a1 + 176);
  uint64_t v26 = *(void *)(a1 + 192);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 40);
  char v9 = *(unsigned char *)(a1 + 72);
  char v10 = *(unsigned char *)(a1 + 104);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 136);
  unsigned int v15 = *(unsigned __int8 *)(a1 + 168);
  unsigned int v22 = *(unsigned __int8 *)(a1 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B5904BDC(v4, v5, v6, v8);
  sub_1B591DF74(v14, v13, v7, v9);
  sub_1B591DF74(v18, v17, v16, v10);
  a2(v21, v20, v19, v11);
  a3(v25, v24, v23, v15);
  a3(v28, v27, v26, v22);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B5938B78(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 96);
  uint64_t v20 = *(void *)(a1 + 120);
  uint64_t v21 = *(void *)(a1 + 112);
  uint64_t v19 = *(void *)(a1 + 128);
  uint64_t v24 = *(void *)(a1 + 152);
  uint64_t v25 = *(void *)(a1 + 144);
  uint64_t v23 = *(void *)(a1 + 160);
  uint64_t v27 = *(void *)(a1 + 184);
  uint64_t v28 = *(void *)(a1 + 176);
  uint64_t v26 = *(void *)(a1 + 192);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 40);
  char v9 = *(unsigned char *)(a1 + 72);
  char v10 = *(unsigned char *)(a1 + 104);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 136);
  unsigned int v15 = *(unsigned __int8 *)(a1 + 168);
  unsigned int v22 = *(unsigned __int8 *)(a1 + 200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B5904B4C(v4, v5, v6, v8);
  sub_1B59325C0(v14, v13, v7, v9);
  sub_1B59325C0(v18, v17, v16, v10);
  a2(v21, v20, v19, v11);
  a3(v25, v24, v23, v15);
  a3(v28, v27, v26, v22);
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *_s6LiftUI19UnitPointResolvableV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5938DB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LinearGradientShapeStyle.CodingKeys()
{
  return &type metadata for LinearGradientShapeStyle.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AngularGradientShapeStyle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5938EB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AngularGradientShapeStyle.CodingKeys()
{
  return &type metadata for AngularGradientShapeStyle.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RadialGradientShapeStyle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5938FB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RadialGradientShapeStyle.CodingKeys()
{
  return &type metadata for RadialGradientShapeStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for GradientResolvableError()
{
  return &type metadata for GradientResolvableError;
}

uint64_t destroy for GradientResolvable()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s6LiftUI18GradientResolvableVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GradientResolvable(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for GradientResolvable(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientResolvable(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientResolvable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientResolvable()
{
  return &type metadata for GradientResolvable;
}

unint64_t sub_1B59391E0()
{
  unint64_t result = qword_1E9D63C58;
  if (!qword_1E9D63C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C58);
  }
  return result;
}

unint64_t sub_1B5939238()
{
  unint64_t result = qword_1E9D63C60;
  if (!qword_1E9D63C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C60);
  }
  return result;
}

unint64_t sub_1B5939290()
{
  unint64_t result = qword_1E9D63C68;
  if (!qword_1E9D63C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C68);
  }
  return result;
}

unint64_t sub_1B59392E8()
{
  unint64_t result = qword_1E9D63C70;
  if (!qword_1E9D63C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C70);
  }
  return result;
}

unint64_t sub_1B5939340()
{
  unint64_t result = qword_1E9D63C78;
  if (!qword_1E9D63C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C78);
  }
  return result;
}

unint64_t sub_1B5939398()
{
  unint64_t result = qword_1E9D63C80;
  if (!qword_1E9D63C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C80);
  }
  return result;
}

unint64_t sub_1B59393F0()
{
  unint64_t result = qword_1E9D63C88;
  if (!qword_1E9D63C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C88);
  }
  return result;
}

unint64_t sub_1B5939448()
{
  unint64_t result = qword_1E9D63C90;
  if (!qword_1E9D63C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C90);
  }
  return result;
}

unint64_t sub_1B59394A0()
{
  unint64_t result = qword_1E9D63C98;
  if (!qword_1E9D63C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63C98);
  }
  return result;
}

unint64_t sub_1B59394F8()
{
  unint64_t result = qword_1E9D63CA0;
  if (!qword_1E9D63CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63CA0);
  }
  return result;
}

uint64_t sub_1B593954C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B5939598()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B59395E4()
{
  unint64_t result = qword_1E9D63CB0;
  if (!qword_1E9D63CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63CB0);
  }
  return result;
}

unint64_t sub_1B5939638()
{
  unint64_t result = qword_1E9D63CC8;
  if (!qword_1E9D63CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63CC8);
  }
  return result;
}

uint64_t sub_1B593968C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B59396E0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B5939758()
{
  unint64_t result = qword_1E9D63CE0;
  if (!qword_1E9D63CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63CE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientResolvable.CodingKeys()
{
  return &type metadata for GradientResolvable.CodingKeys;
}

void destroy for GradientStopResolvable(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  char v5 = *(unsigned char *)(a1 + 64);
  sub_1B591DF0C(v2, v3, v4, v5);
}

uint64_t initializeWithCopy for GradientStopResolvable(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = *(void *)(v2 + 48);
  uint64_t v7 = *(void *)(v2 + 56);
  LOBYTE(v2) = *(unsigned char *)(v2 + 64);
  sub_1B591DF88(v5, v6, v7, v2);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v2;
  return a1;
}

uint64_t assignWithCopy for GradientStopResolvable(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, a2);
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  sub_1B591DF88(v4, v5, v6, (char)v2);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  char v10 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = (_BYTE)v2;
  sub_1B591DF0C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GradientStopResolvable(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  char v6 = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v5;
  char v10 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v6;
  sub_1B591DF0C(v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientStopResolvable(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientStopResolvable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientStopResolvable()
{
  return &type metadata for GradientStopResolvable;
}

unint64_t sub_1B5939A20()
{
  unint64_t result = qword_1E9D63CE8;
  if (!qword_1E9D63CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63CE8);
  }
  return result;
}

unint64_t sub_1B5939A78()
{
  unint64_t result = qword_1E9D63CF0;
  if (!qword_1E9D63CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63CF0);
  }
  return result;
}

unint64_t sub_1B5939AD0()
{
  unint64_t result = qword_1E9D63CF8;
  if (!qword_1E9D63CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63CF8);
  }
  return result;
}

unint64_t sub_1B5939B24()
{
  unint64_t result = qword_1E9D63D08;
  if (!qword_1E9D63D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D08);
  }
  return result;
}

uint64_t sub_1B5939B78(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5939BB0(uint64_t a1)
{
  return a1;
}

unsigned char *_s6LiftUI23GradientResolvableErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5939CB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientStopResolvable.CodingKeys()
{
  return &type metadata for GradientStopResolvable.CodingKeys;
}

unint64_t sub_1B5939CF0()
{
  unint64_t result = qword_1E9D63D10;
  if (!qword_1E9D63D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D10);
  }
  return result;
}

unint64_t sub_1B5939D48()
{
  unint64_t result = qword_1E9D63D18;
  if (!qword_1E9D63D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D18);
  }
  return result;
}

unint64_t sub_1B5939DA0()
{
  unint64_t result = qword_1E9D63D20;
  if (!qword_1E9D63D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D20);
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyViewView()
{
  return &type metadata for EmptyViewView;
}

ValueMetadata *type metadata accessor for FormView()
{
  return &type metadata for FormView;
}

uint64_t destroy for ForEachView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  sub_1B5905248(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ForEachView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  LOBYTE(v8) = *(unsigned char *)(a2 + 80);
  sub_1B5904C08(v9, v10, v11, (char)v8);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = (_BYTE)v8;
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ForEachView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  char v7 = *(unsigned char *)(a2 + 80);
  sub_1B5904C08(v4, v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  char v11 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = v7;
  sub_1B5905248(v8, v9, v10, v11);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t assignWithTake for ForEachView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  char v7 = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  char v11 = *(unsigned char *)(a1 + 80);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = v7;
  sub_1B5905248(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

ValueMetadata *type metadata accessor for ForEachView()
{
  return &type metadata for ForEachView;
}

ValueMetadata *type metadata accessor for GroupView()
{
  return &type metadata for GroupView;
}

uint64_t destroy for ScrollingView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ScrollingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 24, v5, v7);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScrollingView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ScrollingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrollingView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrollingView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollingView()
{
  return &type metadata for ScrollingView;
}

uint64_t destroy for LabelView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for LabelView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, a2 + 56);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LabelView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for LabelView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for LabelView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LabelView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LabelView()
{
  return &type metadata for LabelView;
}

uint64_t destroy for ToggleView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_bridgeObjectRelease();
  sub_1B590D6F0(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
  return swift_release();
}

uint64_t initializeWithCopy for ToggleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  LOBYTE(v8) = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  sub_1B590D634(v9, v10, v11, (char)v8);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = (_BYTE)v8;
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ToggleView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 80);
  char v7 = *(unsigned char *)(a2 + 88);
  sub_1B590D634(v4, v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  char v11 = *(unsigned char *)(a1 + 88);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 88) = v7;
  sub_1B590D6F0(v8, v9, v10, v11);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ToggleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  char v8 = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 80);
  char v12 = *(unsigned char *)(a1 + 88);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 88) = v8;
  sub_1B590D6F0(v9, v10, v11, v12);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToggleView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToggleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToggleView()
{
  return &type metadata for ToggleView;
}

uint64_t destroy for ColorView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ColorView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  char v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ColorView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ColorView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorView()
{
  return &type metadata for ColorView;
}

uint64_t *sub_1B593ADFC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1B5A1A258();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    long long v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)v4 + v16 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
    uint64_t v18 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    *uint64_t v19 = v22;
    v19[1] = v21;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1B593AFE4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B5A1A258();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
  swift_bridgeObjectRelease();
  return swift_release();
}

void *sub_1B593B0CC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B5A1A258();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  long long v15 = *(_OWORD *)((char *)a2 + v14 + 24);
  *(_OWORD *)((char *)a1 + v14 + 24) = v15;
  (**(void (***)(void))(v15 - 8))();
  uint64_t v16 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  long long v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *long long v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1B593B268(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B5A1A258();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[6]), (void *)((char *)a2 + a3[6]));
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  long long v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_retain();
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  return a1;
}

_OWORD *sub_1B593B460(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B5A1A258();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  long long v16 = *(_OWORD *)v15;
  long long v17 = *((_OWORD *)v15 + 1);
  *((void *)v14 + 4) = *((void *)v15 + 4);
  *(_OWORD *)uint64_t v14 = v16;
  *((_OWORD *)v14 + 1) = v17;
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_1B593B5B4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B5A1A258();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  long long v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v16);
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)long long v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (void *)((char *)a2 + v20);
  *(void *)((char *)a1 + v20) = *v22;
  swift_release();
  *((void *)v21 + 1) = v22[1];
  return a1;
}

uint64_t sub_1B593B7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B593B7B4);
}

uint64_t sub_1B593B7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1B593B868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B593B87C);
}

uint64_t sub_1B593B87C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LinkView()
{
  uint64_t result = qword_1E9D63D28;
  if (!qword_1E9D63D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B593B974()
{
  sub_1B593BA2C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1B593BA2C()
{
  if (!qword_1E9D63D38)
  {
    sub_1B5A1A258();
    unint64_t v0 = sub_1B5A1C2B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9D63D38);
    }
  }
}

uint64_t destroy for SpacerView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v2);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SpacerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    sub_1B591DF88(v6, v7, v8, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SpacerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unsigned int v5 = (_OWORD *)(a2 + 16);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = *(void *)(a2 + 32);
      sub_1B591DF88(v12, v13, v14, *(unsigned char *)(a2 + 40));
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v16 = *(void *)(a1 + 24);
      uint64_t v17 = *(void *)(a1 + 32);
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v14;
      char v18 = *(unsigned char *)(a1 + 40);
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B591DF0C(v15, v16, v17, v18);
    }
    else
    {
      sub_1B59316FC(a1 + 16);
      long long v8 = *(_OWORD *)(a2 + 25);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 25) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    sub_1B591DF88(v9, v10, v11, *(unsigned char *)(a2 + 40));
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *uint64_t v4 = v7;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for SpacerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unsigned int v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 <= 0xFD)
  {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 <= 0xFD)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v10 = *(void *)(a1 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = v7;
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B591DF0C(v8, v9, v10, v5);
      goto LABEL_6;
    }
    sub_1B59316FC(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for SpacerView()
{
  return &type metadata for SpacerView;
}

ValueMetadata *type metadata accessor for ProgressView()
{
  return &type metadata for ProgressView;
}

uint64_t destroy for TextView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B591DDA8(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_1B591DDB0(v5, v6, v7, v8);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  sub_1B591DDB0(v4, v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v7;
  sub_1B591DDA8(v8, v9, v10, v11);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TextView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v5;
  char v10 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v6;
  sub_1B591DDA8(v7, v8, v9, v10);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TextView()
{
  return &type metadata for TextView;
}

uint64_t sub_1B593C004@<X0>(uint64_t a1@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v2 = sub_1B5A1A188();
  uint64_t v72 = *(void *)(v2 - 8);
  uint64_t v73 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1B5A1A198();
  uint64_t v5 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B5A1A1B8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E08);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1B5A1A1D8();
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = *(void *)(v1 + 16);
  uint64_t v22 = *(void *)(v1 + 24);
  uint64_t v23 = *(void *)(v1 + 32);
  int v24 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v25 = *(void *)(v1 + 48);
  uint64_t v75 = v22;
  uint64_t v76 = v23;
  uint64_t v74 = v21;
  if ((v24 & 0x20) != 0)
  {
    uint64_t v66 = v20;
    long long v67 = (char *)&v65 - v18;
    uint64_t v68 = v19;
    uint64_t v69 = v17;
    *(void *)&long long v83 = v21;
    *((void *)&v83 + 1) = v22;
    *(void *)&long long v84 = v23;
    BYTE8(v84) = v24 & 0xDF;
    if (v25)
    {
      int v70 = v24;
      sub_1B591DDB0(v21, v22, v23, v24);
      uint64_t v28 = swift_retain();
      unint64_t v40 = StringResolvable.resolved(with:)(v28);
      uint64_t v42 = v41;
      swift_release();
      uint64_t v43 = sub_1B5A1A258();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v11, 1, 1, v43);
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F27310], v71);
      (*(void (**)(char *, void, uint64_t))(v72 + 104))(v4, *MEMORY[0x1E4F272E8], v73);
      swift_bridgeObjectRetain();
      sub_1B5A1A1A8();
      sub_1B5A1A1C8();
      uint64_t v44 = v68;
      uint64_t v45 = v69;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v14, 0, 1, v69);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v14, 1, v45) == 1)
      {
        sub_1B5908FC0((uint64_t)v14, &qword_1E9D63E08);
        *(void *)&long long v83 = v40;
        *((void *)&v83 + 1) = v42;
        sub_1B5943480();
        uint64_t v78 = sub_1B5A1B348();
        uint64_t v79 = v47;
        uint64_t v80 = v46 & 1;
        uint64_t v81 = v48;
        LOBYTE(v82) = 1;
        sub_1B5A1AE58();
        uint64_t v50 = *((void *)&v83 + 1);
        uint64_t v49 = v83;
        uint64_t v52 = *((void *)&v84 + 1);
        uint64_t v51 = v84;
        char v53 = v85;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v57 = v67;
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v67, v14, v45);
        (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v66, v57, v45);
        uint64_t v78 = sub_1B5A1B338();
        uint64_t v79 = v58;
        uint64_t v80 = v59 & 1;
        uint64_t v81 = v60;
        LOBYTE(v82) = 0;
        sub_1B5A1AE58();
        uint64_t v50 = *((void *)&v83 + 1);
        uint64_t v49 = v83;
        uint64_t v52 = *((void *)&v84 + 1);
        uint64_t v51 = v84;
        char v53 = v85;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v57, v45);
      }
      uint64_t v32 = v77;
      uint64_t v78 = v49;
      uint64_t v79 = v50;
      uint64_t v80 = v51;
      uint64_t v81 = v52;
      LOBYTE(v82) = v53;
      HIBYTE(v82) = 1;
      sub_1B59434D4(v49, v50, v51);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63340);
      sub_1B5944A30((unint64_t *)&qword_1E9D63338, &qword_1E9D63340);
      sub_1B5A1AE58();
      sub_1B591DDA8(v74, v75, v76, v70);
      uint64_t result = sub_1B591DCC0(v49, v50, v51);
      goto LABEL_8;
    }
  }
  else
  {
    *(void *)&long long v83 = v21;
    *((void *)&v83 + 1) = v22;
    *(void *)&long long v84 = v23;
    BYTE8(v84) = v24;
    if (v25)
    {
      char v26 = v24;
      sub_1B591DDB0(v21, v22, v23, v24);
      uint64_t v27 = swift_retain();
      unint64_t v29 = StringResolvable.resolved(with:)(v27);
      uint64_t v31 = v30;
      swift_release();
      uint64_t v32 = v77;
      *(void *)&long long v83 = v29;
      *((void *)&v83 + 1) = v31;
      sub_1B5943480();
      uint64_t v33 = sub_1B5A1B348();
      uint64_t v35 = v34;
      uint64_t v78 = v33;
      uint64_t v79 = v34;
      char v37 = v36 & 1;
      uint64_t v80 = v36 & 1;
      uint64_t v81 = v38;
      __int16 v82 = 0;
      sub_1B5943510(v33, v34, v36 & 1);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63340);
      sub_1B5944A30((unint64_t *)&qword_1E9D63338, &qword_1E9D63340);
      sub_1B5A1AE58();
      sub_1B591DDA8(v74, v75, v76, v26);
      sub_1B591DCB0(v33, v35, v37);
      uint64_t result = swift_bridgeObjectRelease();
LABEL_8:
      long long v54 = v84;
      char v55 = v85;
      char v56 = v86;
      *(_OWORD *)uint64_t v32 = v83;
      *(_OWORD *)(v32 + 16) = v54;
      *(unsigned char *)(v32 + 32) = v55;
      *(unsigned char *)(v32 + 33) = v56;
      return result;
    }
  }
  uint64_t v61 = v21;
  uint64_t v62 = v22;
  uint64_t v63 = v23;
  char v64 = v24;
  sub_1B591DDB0(v21, v22, v23, v24);
  swift_bridgeObjectRetain();
  sub_1B591DDB0(v61, v62, v63, v64);
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B593C844(char a1)
{
  return qword_1B5A22740[a1];
}

uint64_t sub_1B593C864(char *a1, char *a2)
{
  return sub_1B59ECC2C(*a1, *a2);
}

uint64_t sub_1B593C870()
{
  return sub_1B59F0A60();
}

uint64_t sub_1B593C878()
{
  return sub_1B59F2D50();
}

uint64_t sub_1B593C880()
{
  return sub_1B59F73EC();
}

uint64_t sub_1B593C888@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B593C8C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B593C844(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B593C8EC()
{
  return sub_1B593C844(*v0);
}

uint64_t sub_1B593C8F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B593C924(uint64_t a1)
{
  unint64_t v2 = sub_1B5944BCC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B593C960(uint64_t a1)
{
  unint64_t v2 = sub_1B5944BCC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B593C99C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63F18);
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v9 = sub_1B5A1A918();
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  uint64_t v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B5944BCC();
  swift_retain();
  uint64_t v13 = v40;
  sub_1B5A1C838();
  if (v13)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
  else
  {
    uint64_t v14 = v36;
    uint64_t v15 = v37;
    uint64_t v40 = v11;
    LOBYTE(v41) = 0;
    uint64_t v16 = sub_1B5A1C598();
    uint64_t v19 = v17;
    if (v17)
    {
      uint64_t v34 = v16;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v34 = sub_1B5A1A288();
      uint64_t v19 = v20;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v15);
    }
    char v45 = 2;
    sub_1B5904A34();
    swift_bridgeObjectRetain();
    uint64_t v21 = v8;
    sub_1B5A1C5B8();
    uint64_t v22 = v6;
    unsigned __int8 v23 = v44;
    if (v44 < 0xFEu)
    {
      uint64_t v26 = v42;
      uint64_t v27 = v43;
      uint64_t v25 = v41;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v22);
      char v28 = v23 | 0x20;
    }
    else
    {
      char v45 = 1;
      uint64_t v24 = v22;
      sub_1B5A1C5D8();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v24);
      uint64_t v25 = v41;
      uint64_t v26 = v42;
      uint64_t v27 = v43;
      char v28 = v44;
    }
    swift_bridgeObjectRetain();
    sub_1B591DDB0(v25, v26, v27, v28);
    uint64_t v29 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v30 = v35;
    *uint64_t v35 = v34;
    v30[1] = v19;
    v30[2] = v25;
    v30[3] = v26;
    v30[4] = v27;
    *((unsigned char *)v30 + 40) = v28;
    uint64_t v31 = (uint64_t)v39;
    uint64_t v32 = v40;
    v30[6] = v9;
    v30[7] = v32;
    v30[8] = v29;
    __swift_destroy_boxed_opaque_existential_1(v31);
    swift_bridgeObjectRelease();
    sub_1B591DDA8(v25, v26, v27, v28);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B593CDF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 32);
  char v5 = *(unsigned char *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 64);
  *(void *)&long long v10 = *(void *)v1;
  *((void *)&v10 + 1) = v3;
  long long v11 = *(_OWORD *)(v1 + 16);
  uint64_t v12 = v4;
  char v13 = v5;
  long long v14 = *(_OWORD *)(v1 + 48);
  uint64_t v15 = v6;
  sub_1B593C004((uint64_t)v8);
  long long v10 = v8[0];
  long long v11 = v8[1];
  LOWORD(v12) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63328);
  sub_1B5944B3C();
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

uint64_t sub_1B593CE98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B593C99C(a1, a2);
}

uint64_t sub_1B593CEB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B593CECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B593CEF8, (void (*)(void))sub_1B591DCFC);
}

unint64_t sub_1B593CEF8()
{
  unint64_t result = qword_1E9D63D40;
  if (!qword_1E9D63D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D40);
  }
  return result;
}

uint64_t sub_1B593CF4C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *(unsigned __int8 *)(v1 + 40);
  if (v3 > 0xFD) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v9 = v4;
  __int16 v10 = v6;
  if (v7)
  {
    swift_retain();
    sub_1B591DF74(v4, v6, v5, v3);
    sub_1B5963534(v7);
    swift_release();
    sub_1B59325C0(v4, v6, v5, v3);
LABEL_4:
    uint64_t result = sub_1B5A1AE58();
    *(void *)a1 = v9;
    *(_WORD *)(a1 + 8) = v10;
    return result;
  }
  sub_1B591DF74(v4, v6, v5, v3);
  swift_bridgeObjectRetain();
  sub_1B591DF74(v4, v6, v5, v3);
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B593D0FC(char a1)
{
  if (a1) {
    return 0x74676E654C6E696DLL;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1B593D12C(char *a1, char *a2)
{
  return sub_1B59EFEA8(*a1, *a2);
}

uint64_t sub_1B593D138()
{
  return sub_1B59F0ACC();
}

uint64_t sub_1B593D140()
{
  return sub_1B59F4BE0();
}

uint64_t sub_1B593D148()
{
  return sub_1B59F50AC();
}

uint64_t sub_1B593D150@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B593D15C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B593D0FC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B593D188()
{
  return sub_1B593D0FC(*v0);
}

uint64_t sub_1B593D190@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B593D19C(uint64_t a1)
{
  unint64_t v2 = sub_1B5944A94();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B593D1D8(uint64_t a1)
{
  unint64_t v2 = sub_1B5944A94();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B593D214@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v29 = sub_1B5A1A2A8();
  uint64_t v32 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63EF8);
  uint64_t v31 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v8 = sub_1B5A1A918();
  uint64_t v10 = v9;
  uint64_t v11 = a1[3];
  uint64_t v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1B5944A94();
  swift_retain();
  uint64_t v12 = v34;
  sub_1B5A1C838();
  if (v12)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    sub_1B59325C0(0, 0, 0, 254);
    swift_release();
  }
  else
  {
    uint64_t v13 = v31;
    uint64_t v14 = v32;
    uint64_t v34 = v10;
    LOBYTE(v35) = 0;
    uint64_t v15 = sub_1B5A1C598();
    uint64_t v18 = v16;
    if (v16)
    {
      uint64_t v28 = v15;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v28 = sub_1B5A1A288();
      uint64_t v18 = v19;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v29);
    }
    char v39 = 1;
    sub_1B59358E8();
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v5);
    uint64_t v20 = v35;
    uint64_t v21 = v36;
    uint64_t v22 = v37;
    char v23 = v38;
    sub_1B591DF74(v35, v36, v37, v38);
    sub_1B59325C0(0, 0, 0, 254);
    swift_bridgeObjectRetain();
    sub_1B591DF74(v20, v21, v22, v23);
    uint64_t v24 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B59325C0(v20, v21, v22, v23);
    swift_bridgeObjectRelease();
    uint64_t v25 = v30;
    *uint64_t v30 = v28;
    v25[1] = v18;
    v25[2] = v20;
    v25[3] = v21;
    v25[4] = v22;
    *((unsigned char *)v25 + 40) = v23;
    v25[6] = v24;
    v25[7] = v8;
    uint64_t v26 = (uint64_t)v33;
    v25[8] = v34;
    __swift_destroy_boxed_opaque_existential_1(v26);
    swift_bridgeObjectRelease();
    sub_1B59325C0(v20, v21, v22, v23);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B593D628@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[4];
  char v5 = *((unsigned char *)v1 + 40);
  uint64_t v6 = v1[6];
  uint64_t v10 = *v1;
  uint64_t v11 = v3;
  long long v12 = *((_OWORD *)v1 + 1);
  uint64_t v13 = v4;
  char v14 = v5;
  uint64_t v15 = v6;
  long long v16 = *(_OWORD *)(v1 + 7);
  sub_1B593CF4C((uint64_t)&v8);
  uint64_t v10 = v8;
  LOWORD(v11) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D634C8);
  sub_1B5944A30((unint64_t *)&qword_1E9D634D0, &qword_1E9D634C8);
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

uint64_t sub_1B593D6F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B593D214(a1, a2);
}

uint64_t sub_1B593D708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E18);
  MEMORY[0x1F4188790](v33);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63500);
  uint64_t v4 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
  MEMORY[0x1F4188790](v7 - 8);
  __int16 v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B5A1A258();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  char v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v16 = (char *)&v33 - v15;
  uint64_t v17 = type metadata accessor for LinkView();
  sub_1B5909890(v1 + *(int *)(v17 + 20), (uint64_t)v9, &qword_1E9D638F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1B5908FC0((uint64_t)v9, &qword_1E9D638F0);
    sub_1B5A1AB38();
    uint64_t v18 = sub_1B5A1B328();
    uint64_t v20 = v19;
    char v22 = v21 & 1;
    sub_1B5A1B7E8();
    uint64_t v23 = sub_1B5A1B318();
    uint64_t v25 = v24;
    char v27 = v26;
    uint64_t v29 = v28;
    swift_release();
    sub_1B591DCB0(v18, v20, v22);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v3 = v23;
    *((void *)v3 + 1) = v25;
    v3[16] = v27 & 1;
    *((void *)v3 + 3) = v29;
    swift_storeEnumTagMultiPayload();
    sub_1B59095C8(&qword_1E9D634F8, &qword_1E9D63500);
    return sub_1B5A1AE58();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    uint64_t v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    MEMORY[0x1F4188790](v31);
    sub_1B5A1B2F8();
    uint64_t v32 = v34;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v3, v6, v34);
    swift_storeEnumTagMultiPayload();
    sub_1B59095C8(&qword_1E9D634F8, &qword_1E9D63500);
    sub_1B5A1AE58();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v32);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

uint64_t sub_1B593DBB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + *(int *)(type metadata accessor for LinkView() + 24));
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  *a2 = result;
  return result;
}

uint64_t sub_1B593DC20(char a1)
{
  return qword_1B5A22770[a1];
}

uint64_t sub_1B593DC40(char *a1, char *a2)
{
  return sub_1B59ECCB4(*a1, *a2);
}

uint64_t sub_1B593DC4C()
{
  return sub_1B59F0B48();
}

uint64_t sub_1B593DC54()
{
  return sub_1B59F2DA4();
}

uint64_t sub_1B593DC5C()
{
  return sub_1B59F7384();
}

uint64_t sub_1B593DC64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5946154();
  *a1 = result;
  return result;
}

uint64_t sub_1B593DC9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B593DC20(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B593DCC8()
{
  return sub_1B593DC20(*v0);
}

uint64_t sub_1B593DCD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5946154();
  *a1 = result;
  return result;
}

uint64_t sub_1B593DD00(uint64_t a1)
{
  unint64_t v2 = sub_1B59448B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B593DD3C(uint64_t a1)
{
  unint64_t v2 = sub_1B59448B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B593DD78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B5A1A2A8();
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63EE8);
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LinkView();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  char v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = *(int *)(v12 + 28);
  char v38 = v14;
  *(uint64_t *)((char *)v14 + v37) = MEMORY[0x1E4FBC860];
  uint64_t v15 = (uint64_t *)((char *)v14 + *(int *)(v12 + 32));
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  *uint64_t v15 = sub_1B5A1A918();
  v15[1] = v16;
  uint64_t v36 = v15;
  uint64_t v17 = a1[3];
  char v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1B59448B4();
  uint64_t v18 = v40;
  sub_1B5A1C838();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v40 = v11;
    uint64_t v20 = v34;
    uint64_t v19 = v35;
    LOBYTE(v41) = 0;
    uint64_t v21 = sub_1B5A1C598();
    uint64_t v23 = v8;
    uint64_t v25 = v22;
    if (!v22)
    {
      char v26 = v7;
      sub_1B5A1A298();
      uint64_t v27 = sub_1B5A1A288();
      uint64_t v25 = v28;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v5);
      uint64_t v21 = v27;
    }
    uint64_t v29 = (uint64_t)v38;
    *char v38 = v21;
    *(void *)(v29 + 8) = v25;
    LOBYTE(v41) = 1;
    sub_1B5A1C5C8();
    uint64_t v30 = (uint64_t)v33;
    sub_1B5A1A248();
    swift_bridgeObjectRelease();
    uint64_t v31 = v40;
    sub_1B5944908(v30, v29 + *(int *)(v40 + 20));
    char v44 = 2;
    uint64_t v42 = &type metadata for ViewContent;
    unint64_t v43 = sub_1B5914034();
    *(void *)&long long v41 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v23);
    sub_1B5908BE8(&v41, v29 + *(int *)(v31 + 24));
    sub_1B5944970(v29, v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    return sub_1B59449D4(v29);
  }
}

uint64_t sub_1B593E238@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D634E8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1B593D708((uint64_t)&v10 - v6);
  sub_1B5909890((uint64_t)v7, (uint64_t)v5, &qword_1E9D634E8);
  sub_1B591ED74();
  uint64_t v8 = sub_1B5A1BA88();
  uint64_t result = sub_1B5908FC0((uint64_t)v7, &qword_1E9D634E8);
  *a1 = v8;
  return result;
}

uint64_t sub_1B593E324@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B593DD78(a1, a2);
}

uint64_t sub_1B593E33C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B593E348@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B593E354(uint64_t a1)
{
  unint64_t v2 = sub_1B5944AE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B593E390(uint64_t a1)
{
  unint64_t v2 = sub_1B5944AE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B593E3CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E58);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1B5A1A538();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_1B59095C8(&qword_1E9D62E70, &qword_1E9D62E58);
  uint64_t v9 = sub_1B5A1BA88();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  *a1 = v9;
  return result;
}

double sub_1B593E520@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5942D9C(a1, &qword_1E9D63F08, (void (*)(void))sub_1B5944AE8, a2);
}

uint64_t sub_1B593E55C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B593E578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B593E614, (void (*)(void))sub_1B591EB1C);
}

uint64_t sub_1B593E5A4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B593E614()
{
  unint64_t result = qword_1E9D63D48;
  if (!qword_1E9D63D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D48);
  }
  return result;
}

uint64_t sub_1B593E668()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B593E684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B593E6B0, (void (*)(void))sub_1B591EBE0);
}

unint64_t sub_1B593E6B0()
{
  unint64_t result = qword_1E9D63D50;
  if (!qword_1E9D63D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D50);
  }
  return result;
}

uint64_t sub_1B593E704()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B593E720()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B593E7D8(char a1)
{
  if (a1) {
    return 0x726F6C6F63;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1B593E800(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B59ECC28(*a1, *a2);
}

uint64_t sub_1B593E80C()
{
  return sub_1B59F0BB4(*v0);
}

uint64_t sub_1B593E814(uint64_t a1)
{
  return sub_1B59F2D4C(a1, *v1);
}

uint64_t sub_1B593E81C(uint64_t a1)
{
  return sub_1B59F5D70(a1, *v1);
}

uint64_t sub_1B593E824@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B593E830@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B593E7D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B593E85C()
{
  return sub_1B593E7D8(*v0);
}

uint64_t sub_1B593E864@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B593E870(uint64_t a1)
{
  unint64_t v2 = sub_1B5944830();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B593E8AC(uint64_t a1)
{
  unint64_t v2 = sub_1B5944830();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B593E8E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_1B5A1A2A8();
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63ED8);
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v33 = sub_1B5A1A918();
  uint64_t v34 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5944830();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v11 = v24;
    LOBYTE(v25) = 0;
    uint64_t v12 = sub_1B5A1C598();
    uint64_t v15 = v13;
    uint64_t v16 = v7;
    if (v13)
    {
      uint64_t v17 = v12;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v17 = sub_1B5A1A288();
      uint64_t v15 = v18;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
    }
    uint64_t v19 = v23;
    v28[0] = v17;
    v28[1] = v15;
    char v35 = 1;
    sub_1B5939638();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v16);
    long long v29 = v25;
    long long v30 = v26;
    uint64_t v31 = v27;
    sub_1B591EEC8((uint64_t)v28, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B5944884((uint64_t)v28);
  }
}

uint64_t sub_1B593EC34@<X0>(uint64_t *a1@<X8>)
{
  sub_1B591EE14(v1 + 16, (uint64_t)v9);
  uint64_t v3 = v10;
  uint64_t v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  if (*(void *)(v1 + 64))
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v6 = swift_retain();
    uint64_t v7 = v5(v6, v3, v4);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    v9[0] = v7;
    uint64_t result = sub_1B5A1BA88();
    *a1 = result;
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B593ED54@<X0>(uint64_t *a1@<X8>)
{
  sub_1B591EE14(v1 + 16, (uint64_t)v9);
  uint64_t v3 = v10;
  uint64_t v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  if (*(void *)(v1 + 64))
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v6 = swift_retain();
    uint64_t v7 = v5(v6, v3, v4);
    swift_release();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *a1 = v7;
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B593EE58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B593E8E8(a1, a2);
}

uint64_t sub_1B593EE70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B593EE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B593EEB8, (void (*)(void))sub_1B591EE70);
}

unint64_t sub_1B593EEB8()
{
  unint64_t result = qword_1E9D63D60;
  if (!qword_1E9D63D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D60);
  }
  return result;
}

uint64_t sub_1B593EF0C(char a1)
{
  return *(void *)&aHorizontvertic[8 * a1];
}

uint64_t sub_1B593EF2C(char *a1, char *a2)
{
  return sub_1B59ECDC4(*a1, *a2);
}

uint64_t sub_1B593EF38()
{
  return sub_1B59F0BB8();
}

uint64_t sub_1B593EF40()
{
  return sub_1B59F2E4C();
}

uint64_t sub_1B593EF48()
{
  return sub_1B59F72B4();
}

uint64_t sub_1B593EF50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B593EF88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B593EF0C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B593EFB4()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B593F014()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B593F064@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[6];
  uint64_t v4 = a1[7];
  __swift_project_boxed_opaque_existential_1(a1 + 3, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_1B593F0C4(char a1)
{
  return qword_1B5A227E0[a1];
}

uint64_t sub_1B593F0E4(char *a1, char *a2)
{
  return sub_1B59EF424(*a1, *a2);
}

uint64_t sub_1B593F0F0()
{
  return sub_1B59F0C24();
}

uint64_t sub_1B593F0F8()
{
  return sub_1B59F4580();
}

uint64_t sub_1B593F100()
{
  return sub_1B59F580C();
}

uint64_t sub_1B593F108@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5946154();
  *a1 = result;
  return result;
}

uint64_t sub_1B593F140@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B593F0C4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B593F16C()
{
  return sub_1B593F0C4(*v0);
}

uint64_t sub_1B593F174@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5946154();
  *a1 = result;
  return result;
}

uint64_t sub_1B593F1A4(uint64_t a1)
{
  unint64_t v2 = sub_1B594458C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B593F1E0(uint64_t a1)
{
  unint64_t v2 = sub_1B594458C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B593F21C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v28 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63EA0);
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[5] = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  v38[6] = sub_1B5A1A918();
  v38[7] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B594458C();
  uint64_t v10 = (uint64_t)v31;
  sub_1B5A1C838();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v11 = v5;
    uint64_t v31 = a1;
    uint64_t v12 = v29;
    uint64_t v13 = v30;
    LOBYTE(v32) = 0;
    uint64_t v14 = sub_1B5A1C598();
    uint64_t v16 = v15;
    uint64_t v17 = v6;
    if (v16)
    {
      uint64_t v19 = v14;
      uint64_t v20 = v8;
      uint64_t v21 = v17;
    }
    else
    {
      uint64_t v20 = v8;
      uint64_t v21 = v17;
      uint64_t v22 = v11;
      sub_1B5A1A298();
      uint64_t v19 = sub_1B5A1A288();
      uint64_t v24 = v23;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v3);
      uint64_t v16 = v24;
    }
    v35[0] = v19;
    v35[1] = v16;
    char v39 = 1;
    sub_1B59445E0();
    sub_1B5A1C5B8();
    switch((char)v32)
    {
      case 1:
      case 3:
        char v25 = sub_1B5A1B108();
        break;
      case 2:
        sub_1B5A1B0E8();
        sub_1B5A1B108();
        sub_1B5A1B0F8();
        char v25 = sub_1B5A1B0F8();
        break;
      default:
        char v25 = sub_1B5A1B0E8();
        break;
    }
    char v36 = v25;
    LOBYTE(v32) = 2;
    char v26 = sub_1B5A1C5A8();
    char v37 = (v26 == 2) | v26 & 1;
    char v39 = 3;
    uint64_t v33 = &type metadata for ViewContent;
    unint64_t v34 = sub_1B5914034();
    *(void *)&long long v32 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v21);
    sub_1B5908BE8(&v32, (uint64_t)v38);
    sub_1B591F6C0((uint64_t)v35, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    return sub_1B5944634((uint64_t)v35);
  }
}

uint64_t sub_1B593F6BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D635E8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v12[-v8];
  uint64_t v13 = v1;
  sub_1B5A1A4B8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_1B59095C8(&qword_1E9D635F0, &qword_1E9D635E8);
  uint64_t v10 = sub_1B5A1BA88();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  *a1 = v10;
  return result;
}

uint64_t sub_1B593F84C()
{
  return sub_1B5A1A4B8();
}

uint64_t sub_1B593F8A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B593F21C(a1, a2);
}

uint64_t sub_1B593F8B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D635B8);
  uint64_t v19 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v18 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  char v7 = *(unsigned char *)(v1 + 88);
  if (*(void *)(v1 + 96))
  {
    sub_1B590D634(*(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88));
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_1B59966F8(v8, v5, v4, v6, v7);
    uint64_t v11 = v10;
    char v13 = v12;
    swift_release();
    sub_1B590D6F0(v5, v4, v6, v7);
    uint64_t v22 = v9;
    uint64_t v23 = v11;
    char v24 = v13 & 1;
    MEMORY[0x1F4188790](v14);
    *(&v17 - 2) = v1;
    uint64_t v15 = v18;
    sub_1B5A1BA78();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(v21, v15, v20);
  }
  else
  {
    sub_1B590D634(*(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88));
    type metadata accessor for RemoteStateStore(0);
    sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B593FB38(char a1)
{
  return qword_1B5A22820[a1];
}

uint64_t sub_1B593FB58(char *a1, char *a2)
{
  return sub_1B59EFC60(*a1, *a2);
}

uint64_t sub_1B593FB64()
{
  return sub_1B59F0C90();
}

uint64_t sub_1B593FB6C()
{
  return sub_1B59F4AA8();
}

uint64_t sub_1B593FB74()
{
  return sub_1B59F5218();
}

uint64_t sub_1B593FB7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B593FBB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B593FB38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B593FBE0()
{
  return sub_1B593FB38(*v0);
}

uint64_t sub_1B593FBE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B593FC18(uint64_t a1)
{
  unint64_t v2 = sub_1B59447AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B593FC54(uint64_t a1)
{
  unint64_t v2 = sub_1B59447AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B593FC90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_1B5A1A2A8();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63EC8);
  uint64_t v20 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[5] = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v32 = sub_1B5A1A918();
  uint64_t v33 = v10;
  uint64_t v11 = a1[3];
  unint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1B59447AC();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v12 = v21;
    LOBYTE(v23) = 0;
    uint64_t v13 = sub_1B5A1C598();
    uint64_t v16 = v14;
    if (v14)
    {
      uint64_t v17 = v13;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v17 = sub_1B5A1A288();
      uint64_t v16 = v18;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
    }
    v27[0] = v17;
    v27[1] = v16;
    char v22 = 1;
    char v25 = &type metadata for ViewContent;
    unint64_t v26 = sub_1B5914034();
    *(void *)&long long v23 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    sub_1B5908BE8(&v23, (uint64_t)v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    char v22 = 2;
    sub_1B59095C8((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
    long long v29 = v23;
    uint64_t v30 = v24;
    char v31 = (char)v25;
    sub_1B591F4A8((uint64_t)v27, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return sub_1B5944800((uint64_t)v27);
  }
}

uint64_t sub_1B59400DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D635B8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1B593F8B8((uint64_t)&v11 - v7);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_1B59095C8(&qword_1E9D635C0, &qword_1E9D635B8);
  uint64_t v9 = sub_1B5A1BA88();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  *a1 = v9;
  return result;
}

uint64_t sub_1B5940238@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B593FC90(a1, a2);
}

uint64_t sub_1B5940250()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B594026C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B5940298, (void (*)(void))sub_1B591F3F4);
}

unint64_t sub_1B5940298()
{
  unint64_t result = qword_1E9D63D68;
  if (!qword_1E9D63D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D68);
  }
  return result;
}

uint64_t sub_1B59402EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_1B594034C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_1B59403AC(char a1)
{
  return qword_1B5A22838[a1];
}

uint64_t sub_1B59403CC(char *a1, char *a2)
{
  return sub_1B59ECB14(*a1, *a2);
}

uint64_t sub_1B59403D8()
{
  return sub_1B59F0CFC();
}

uint64_t sub_1B59403E0()
{
  return sub_1B59F2CA0();
}

uint64_t sub_1B59403E8()
{
  return sub_1B59F759C();
}

uint64_t sub_1B59403F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5940428@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59403AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5940454()
{
  return sub_1B59403AC(*v0);
}

uint64_t sub_1B594045C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B594048C(uint64_t a1)
{
  unint64_t v2 = sub_1B5944728();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59404C8(uint64_t a1)
{
  unint64_t v2 = sub_1B5944728();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5940504@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_1B5A1A2A8();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63EB8);
  uint64_t v22 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[5] = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  v30[6] = sub_1B5A1A918();
  v30[7] = v10;
  uint64_t v11 = a1[3];
  char v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1B5944728();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v12 = v23;
    LOBYTE(v25) = 0;
    uint64_t v13 = sub_1B5A1C598();
    uint64_t v16 = v14;
    if (v14)
    {
      uint64_t v17 = v13;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v17 = sub_1B5A1A288();
      uint64_t v16 = v18;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
    }
    v28[0] = v17;
    v28[1] = v16;
    char v24 = 1;
    unint64_t v26 = &type metadata for ViewContent;
    unint64_t v19 = sub_1B5914034();
    unint64_t v27 = v19;
    *(void *)&long long v25 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    sub_1B5908BE8(&v25, (uint64_t)&v29);
    char v24 = 2;
    unint64_t v26 = &type metadata for ViewContent;
    unint64_t v27 = v19;
    *(void *)&long long v25 = swift_allocObject();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
    sub_1B5908BE8(&v25, (uint64_t)v30);
    sub_1B591F5B8((uint64_t)v28, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    return sub_1B594477C((uint64_t)v28);
  }
}

uint64_t sub_1B5940928@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D635D0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v12[-v8];
  uint64_t v14 = v1;
  uint64_t v13 = v1;
  sub_1B5A1B978();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_1B59095C8(&qword_1E9D635D8, &qword_1E9D635D0);
  uint64_t v10 = sub_1B5A1BA88();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  *a1 = v10;
  return result;
}

uint64_t sub_1B5940AD4()
{
  return sub_1B5A1B978();
}

uint64_t sub_1B5940B44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5940504(a1, a2);
}

uint64_t sub_1B5940B5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5940B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B5940BA4, (void (*)(void))sub_1B591F50C);
}

unint64_t sub_1B5940BA4()
{
  unint64_t result = qword_1E9D63D70;
  if (!qword_1E9D63D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D70);
  }
  return result;
}

uint64_t sub_1B5940BF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5940C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B5940C40, (void (*)(void))sub_1B591F61C);
}

unint64_t sub_1B5940C40()
{
  unint64_t result = qword_1E9D63D78;
  if (!qword_1E9D63D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D78);
  }
  return result;
}

uint64_t sub_1B5940C94@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5940CA0@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B5940CAC(uint64_t a1)
{
  unint64_t v2 = sub_1B59444D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5940CE8(uint64_t a1)
{
  unint64_t v2 = sub_1B59444D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5940D24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63600);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v11 - v7;
  v11[1] = *(void *)(v1 + 16);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
  sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
  sub_1B5A1BB28();
  sub_1B5909890((uint64_t)v8, (uint64_t)v6, &qword_1E9D63600);
  sub_1B594407C((unint64_t *)&qword_1E9D63608, &qword_1E9D63600, (void (*)(void))sub_1B5943808);
  uint64_t v9 = sub_1B5A1BA88();
  uint64_t result = sub_1B5908FC0((uint64_t)v8, &qword_1E9D63600);
  *a1 = v9;
  return result;
}

uint64_t sub_1B5940EEC()
{
  return sub_1B5A1BB28();
}

double sub_1B5940FC0@<D0>(_OWORD *a1@<X8>)
{
  return sub_1B5942B10((void (*)(_OWORD *__return_ptr))sub_1B59440E8, a1);
}

uint64_t sub_1B5940FEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5941008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B5941034, (void (*)(void))sub_1B591F7B4);
}

unint64_t sub_1B5941034()
{
  unint64_t result = qword_1E9D63D80;
  if (!qword_1E9D63D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D80);
  }
  return result;
}

uint64_t sub_1B5941088@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63648);
  uint64_t v26 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  long long v25 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E20);
  MEMORY[0x1F4188790](v27);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63638);
  uint64_t v24 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v10 = *(void *)(v2 + 64);
  uint64_t v9 = *(void *)(v2 + 72);
  char v11 = *(unsigned char *)(v2 + 80);
  if (*(void *)(v2 + 112))
  {
    sub_1B5904C08(v8, *(void *)(v2 + 64), *(void *)(v2 + 72), *(unsigned char *)(v2 + 80));
    uint64_t v12 = swift_retain();
    uint64_t v13 = sub_1B59B4560(v12, v8, v10, v9, v11);
    swift_release();
    sub_1B5905248(v8, v10, v9, v11);
    uint64_t v14 = sub_1B594352C(v13);
    swift_bridgeObjectRelease();
    uint64_t v32 = v14;
    swift_getKeyPath();
    sub_1B591FB6C(v2, (uint64_t)v31);
    uint64_t v15 = (_OWORD *)swift_allocObject();
    long long v16 = v31[5];
    v15[5] = v31[4];
    v15[6] = v16;
    long long v17 = v31[7];
    v15[7] = v31[6];
    v15[8] = v17;
    long long v18 = v31[1];
    v15[1] = v31[0];
    _OWORD v15[2] = v18;
    long long v19 = v31[3];
    _OWORD v15[3] = v31[2];
    v15[4] = v19;
    uint64_t v20 = swift_allocObject();
    if (v11)
    {
      *(void *)(v20 + 16) = sub_1B59436CC;
      *(void *)(v20 + 24) = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63658);
      sub_1B59095C8(&qword_1E9D63E30, &qword_1E9D63E28);
      sub_1B591EF2C();
      sub_1B591FA3C();
      uint64_t v7 = v25;
      sub_1B5A1BB28();
      uint64_t v21 = v26;
      uint64_t v22 = v30;
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v5, v7, v30);
    }
    else
    {
      *(void *)(v20 + 16) = sub_1B59437A8;
      *(void *)(v20 + 24) = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62CC8);
      sub_1B59095C8(&qword_1E9D63E30, &qword_1E9D63E28);
      sub_1B591EF2C();
      sub_1B59080C4();
      sub_1B5A1BB28();
      uint64_t v21 = v24;
      uint64_t v22 = v28;
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v5, v7, v28);
    }
    swift_storeEnumTagMultiPayload();
    sub_1B594407C(&qword_1E9D63630, &qword_1E9D63638, (void (*)(void))sub_1B59080C4);
    sub_1B594407C(&qword_1E9D63640, &qword_1E9D63648, (void (*)(void))sub_1B591FA3C);
    sub_1B5A1AE58();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  }
  else
  {
    sub_1B5904C08(v8, *(void *)(v2 + 64), *(void *)(v2 + 72), *(unsigned char *)(v2 + 80));
    type metadata accessor for RemoteStateStore(0);
    sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5941738@<X0>(uint64_t *a1@<X1>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a2[5];
  uint64_t v7 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  uint64_t v9 = a2[14];
  if (v9)
  {
    uint64_t v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E38);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
    uint64_t v12 = a2[11];
    uint64_t v13 = a2[12];
    *(void *)(inited + 32) = v12;
    *(void *)(inited + 40) = v13;
    *(void *)(inited + 48) = v5;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1B59030D8(inited);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    unint64_t v16 = sub_1B5902F98(MEMORY[0x1E4FBC860]);
    type metadata accessor for RemoteStateStore(0);
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = qword_1E9D65378;
    swift_retain();
    *(void *)(v17 + v18) = sub_1B5902F98(v15);
    *(void *)(v17 + qword_1E9D65380) = v9;
    swift_retain_n();
    swift_release();
    uint64_t v19 = sub_1B59038C0(v9);
    swift_retain();
    sub_1B590505C(v14, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B5904C58);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v20 = (unint64_t *)(v19 + qword_1E9D65378);
    swift_beginAccess();
    *uint64_t v20 = v16;
    swift_bridgeObjectRelease();
    sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A348();
    *a3 = v10;
    a3[1] = result;
    a3[2] = v19;
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B59419A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *(void *)(a3 + 72);
  char v8 = *(unsigned char *)(a3 + 80);
  long long v46 = *(_OWORD *)(a3 + 56);
  uint64_t v47 = v7;
  char v48 = v8;
  v44[1] = 0;
  v44[2] = 0;
  v44[0] = a1;
  char v45 = 0;
  sub_1B59A3298((uint64_t)v44, (uint64_t)&v49);
  long long v9 = v49;
  uint64_t v43 = v50;
  int v10 = v51;
  uint64_t v11 = *(void *)(a3 + 40);
  uint64_t v12 = *(void *)(a3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
  uint64_t v14 = *(void *)(a3 + 112);
  if (v10 == 255)
  {
    if (v14)
    {
      uint64_t v29 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E38);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
      uint64_t v31 = *(void *)(a3 + 96);
      *(void *)(inited + 32) = *(void *)(a3 + 88);
      *(void *)(inited + 40) = v31;
      *(void *)(inited + 48) = v6;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_1B59030D8(inited);
      uint64_t v33 = MEMORY[0x1E4FBC860];
      unint64_t v34 = sub_1B5902F98(MEMORY[0x1E4FBC860]);
      type metadata accessor for RemoteStateStore(0);
      uint64_t v35 = swift_allocObject();
      uint64_t v36 = qword_1E9D65378;
      swift_retain();
      *(void *)(v35 + v36) = sub_1B5902F98(v33);
      *(void *)(v35 + qword_1E9D65380) = v14;
      swift_retain_n();
      swift_release();
      uint64_t v37 = sub_1B59038C0(v14);
      swift_retain();
      sub_1B590505C(v32, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B5904C58);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      char v38 = (unint64_t *)(v37 + qword_1E9D65378);
      swift_beginAccess();
      *char v38 = v34;
      swift_bridgeObjectRelease();
      sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
      uint64_t v39 = sub_1B5A1A348();
      *(void *)&long long v46 = v29;
      *((void *)&v46 + 1) = v39;
      uint64_t v47 = v37;
      char v48 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62CC8);
      sub_1B59080C4();
      uint64_t result = sub_1B5A1AE58();
      long long v26 = v49;
      uint64_t v27 = v50;
      unsigned __int8 v28 = v51;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v41 = v13;
    uint64_t v42 = a4;
    if (v14)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E38);
      uint64_t v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_1B5A1D730;
      uint64_t v17 = *(void *)(a3 + 88);
      uint64_t v16 = *(void *)(a3 + 96);
      *(void *)(v15 + 32) = v17;
      *(void *)(v15 + 40) = v16;
      *(void *)(v15 + 48) = v6;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v18 = sub_1B59030D8(v15);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E40);
      uint64_t v19 = swift_initStackObject();
      *(_OWORD *)(v19 + 16) = xmmword_1B5A1D730;
      *(void *)(v19 + 32) = v17;
      *(void *)(v19 + 40) = v16;
      *(_OWORD *)(v19 + 48) = v9;
      *(void *)(v19 + 64) = v43;
      *(unsigned char *)(v19 + 72) = v10 & 1;
      swift_bridgeObjectRetain();
      sub_1B592C3E8(v9, *((uint64_t *)&v9 + 1), v43, v10);
      unint64_t v40 = sub_1B5902F98(v19);
      type metadata accessor for RemoteStateStore(0);
      uint64_t v20 = swift_allocObject();
      uint64_t v21 = qword_1E9D65378;
      swift_retain();
      *(void *)(v20 + v21) = sub_1B5902F98(MEMORY[0x1E4FBC860]);
      *(void *)(v20 + qword_1E9D65380) = v14;
      swift_retain_n();
      swift_release();
      uint64_t v22 = sub_1B59038C0(v14);
      sub_1B590505C(v18, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B5904C58);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v23 = (unint64_t *)(v22 + qword_1E9D65378);
      swift_beginAccess();
      unint64_t *v23 = v40;
      swift_bridgeObjectRelease();
      sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
      uint64_t v24 = sub_1B5A1A348();
      *(void *)&long long v46 = v41;
      *((void *)&v46 + 1) = v24;
      uint64_t v47 = v22;
      char v48 = 0;
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62CC8);
      sub_1B59080C4();
      sub_1B5A1AE58();
      sub_1B592C43C(v9, *((uint64_t *)&v9 + 1), v43, v10);
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      long long v26 = v49;
      uint64_t v27 = v50;
      unsigned __int8 v28 = v51;
      a4 = v42;
LABEL_6:
      *(_OWORD *)a4 = v26;
      *(void *)(a4 + 16) = v27;
      *(unsigned char *)(a4 + 24) = v28;
      return result;
    }
  }
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B5941F24(char a1)
{
  return qword_1B5A22868[a1];
}

uint64_t sub_1B5941F44(char *a1, char *a2)
{
  return sub_1B59EFAAC(*a1, *a2);
}

uint64_t sub_1B5941F50()
{
  return sub_1B59F0D68();
}

uint64_t sub_1B5941F58()
{
  return sub_1B59F4998();
}

uint64_t sub_1B5941F60()
{
  return sub_1B59F5364();
}

uint64_t sub_1B5941F68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5946154();
  *a1 = result;
  return result;
}

uint64_t sub_1B5941FA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5941F24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5941FCC()
{
  return sub_1B5941F24(*v0);
}

uint64_t sub_1B5941FD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5946154();
  *a1 = result;
  return result;
}

uint64_t sub_1B5942004(uint64_t a1)
{
  unint64_t v2 = sub_1B5943F80();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5942040(uint64_t a1)
{
  unint64_t v2 = sub_1B5943F80();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B594207C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_1B5A1A2A8();
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E70);
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v37 = sub_1B5A1A918();
  uint64_t v38 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5943F80();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v11 = v39;
    uint64_t v22 = a1;
    LOBYTE(v26) = 0;
    uint64_t v12 = sub_1B5A1C598();
    uint64_t v14 = v9;
    uint64_t v16 = v13;
    if (v13)
    {
      uint64_t v17 = v12;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v17 = sub_1B5A1A288();
      uint64_t v16 = v18;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v4);
    }
    v30[0] = v17;
    v30[1] = v16;
    char v25 = 1;
    unsigned __int8 v28 = &type metadata for ViewContent;
    unint64_t v29 = sub_1B5914034();
    *(void *)&long long v26 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    sub_1B5908BE8(&v26, (uint64_t)v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E80);
    char v25 = 2;
    sub_1B59095C8(&qword_1E9D63E88, &qword_1E9D63E80);
    sub_1B5A1C5D8();
    *(_OWORD *)&v31[40] = v26;
    uint64_t v32 = v27;
    char v33 = (char)v28;
    LOBYTE(v26) = 3;
    uint64_t v19 = sub_1B5A1C5C8();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v7);
    uint64_t v34 = v19;
    uint64_t v35 = v21;
    sub_1B591FB6C((uint64_t)v30, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    return sub_1B594404C((uint64_t)v30);
  }
}

uint64_t sub_1B594256C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63620);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1B5941088((uint64_t)&v10 - v6);
  sub_1B5909890((uint64_t)v7, (uint64_t)v5, &qword_1E9D63620);
  sub_1B591F954();
  uint64_t v8 = sub_1B5A1BA88();
  uint64_t result = sub_1B5908FC0((uint64_t)v7, &qword_1E9D63620);
  *a1 = v8;
  return result;
}

void sub_1B5942658(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1B5942668@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B594207C(a1, a2);
}

uint64_t sub_1B5942684()
{
  return sub_1B59095C8(&qword_1E9D63D88, &qword_1E9D62E80);
}

uint64_t sub_1B59426C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B59426DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B5942708, (void (*)(void))sub_1B591FAB0);
}

unint64_t sub_1B5942708()
{
  unint64_t result = qword_1E9D63D90;
  if (!qword_1E9D63D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D90);
  }
  return result;
}

uint64_t sub_1B594275C()
{
  return sub_1B5A1BB28();
}

uint64_t sub_1B5942830@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B594283C@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B5942848(uint64_t a1)
{
  unint64_t v2 = sub_1B5943F2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5942884(uint64_t a1)
{
  unint64_t v2 = sub_1B5943F2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59428C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63668);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  long long v9 = &v13[-v8];
  long long v10 = v1[1];
  v15[0] = *v1;
  v15[1] = v10;
  _OWORD v15[2] = v1[2];
  uint64_t v14 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B5943808();
  sub_1B5A1B2E8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_1B59095C8(&qword_1E9D63670, &qword_1E9D63668);
  uint64_t v11 = sub_1B5A1BA88();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  *a1 = v11;
  return result;
}

uint64_t sub_1B5942A68()
{
  return sub_1B5A1B2E8();
}

double sub_1B5942AE4@<D0>(_OWORD *a1@<X8>)
{
  return sub_1B5942B10((void (*)(_OWORD *__return_ptr))sub_1B5943B44, a1);
}

double sub_1B5942B10@<D0>(void (*a1)(_OWORD *__return_ptr)@<X3>, _OWORD *a2@<X8>)
{
  a1(v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1B5942B58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5942B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B5942BA0, (void (*)(void))sub_1B591FBD0);
}

unint64_t sub_1B5942BA0()
{
  unint64_t result = qword_1E9D63D98;
  if (!qword_1E9D63D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63D98);
  }
  return result;
}

uint64_t sub_1B5942BF4@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B5942C00@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5942C50@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B5942C5C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5942CB0(uint64_t a1)
{
  unint64_t v2 = sub_1B59437B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5942CEC(uint64_t a1)
{
  unint64_t v2 = sub_1B59437B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5942D28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

double sub_1B5942D60@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5942D9C(a1, &qword_1E9D63E50, (void (*)(void))sub_1B59437B4, a2);
}

double sub_1B5942D9C@<D0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  sub_1B5943874(a1, a2, a3, (uint64_t *)v8);
  if (!v4)
  {
    double result = *(double *)v8;
    long long v7 = v8[1];
    *(_OWORD *)a4 = v8[0];
    *(_OWORD *)(a4 + 16) = v7;
    *(void *)(a4 + 32) = v9;
  }
  return result;
}

uint64_t sub_1B5942DF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5942E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B593E5A4(a1, a2, a3, (void (*)(void))sub_1B5942E38, (void (*)(void))sub_1B591FF38);
}

unint64_t sub_1B5942E38()
{
  unint64_t result = qword_1E9D63DA0;
  if (!qword_1E9D63DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DA0);
  }
  return result;
}

unint64_t sub_1B5942E8C(uint64_t a1)
{
  unint64_t result = sub_1B5942EB4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5942EB4()
{
  unint64_t result = qword_1E9D63DA8;
  if (!qword_1E9D63DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DA8);
  }
  return result;
}

unint64_t sub_1B5942F08(uint64_t a1)
{
  unint64_t result = sub_1B5942F30();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5942F30()
{
  unint64_t result = qword_1E9D63DB0;
  if (!qword_1E9D63DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DB0);
  }
  return result;
}

unint64_t sub_1B5942F84(uint64_t a1)
{
  unint64_t result = sub_1B5942FAC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5942FAC()
{
  unint64_t result = qword_1E9D63DB8;
  if (!qword_1E9D63DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DB8);
  }
  return result;
}

unint64_t sub_1B5943000(uint64_t a1)
{
  unint64_t result = sub_1B5943028();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5943028()
{
  unint64_t result = qword_1E9D63DC0;
  if (!qword_1E9D63DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DC0);
  }
  return result;
}

unint64_t sub_1B594307C(uint64_t a1)
{
  unint64_t result = sub_1B59430A4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B59430A4()
{
  unint64_t result = qword_1E9D63DC8;
  if (!qword_1E9D63DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DC8);
  }
  return result;
}

unint64_t sub_1B59430F8(uint64_t a1)
{
  unint64_t result = sub_1B5943120();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5943120()
{
  unint64_t result = qword_1E9D63DD0;
  if (!qword_1E9D63DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DD0);
  }
  return result;
}

unint64_t sub_1B5943174(uint64_t a1)
{
  unint64_t result = sub_1B594319C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B594319C()
{
  unint64_t result = qword_1E9D63DD8;
  if (!qword_1E9D63DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DD8);
  }
  return result;
}

unint64_t sub_1B59431F0(uint64_t a1)
{
  unint64_t result = sub_1B5943218();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5943218()
{
  unint64_t result = qword_1E9D63DE0;
  if (!qword_1E9D63DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DE0);
  }
  return result;
}

uint64_t sub_1B594326C(uint64_t a1)
{
  uint64_t result = sub_1B5943438(&qword_1E9D63DE8, (void (*)(uint64_t))type metadata accessor for LinkView);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B59432C4(uint64_t a1)
{
  unint64_t result = sub_1B59432EC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B59432EC()
{
  unint64_t result = qword_1E9D63DF0;
  if (!qword_1E9D63DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DF0);
  }
  return result;
}

unint64_t sub_1B5943340(uint64_t a1)
{
  unint64_t result = sub_1B5943368();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5943368()
{
  unint64_t result = qword_1E9D63DF8;
  if (!qword_1E9D63DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63DF8);
  }
  return result;
}

unint64_t sub_1B59433BC(uint64_t a1)
{
  unint64_t result = sub_1B59433E4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B59433E4()
{
  unint64_t result = qword_1E9D63E00;
  if (!qword_1E9D63E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63E00);
  }
  return result;
}

uint64_t sub_1B5943438(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B5943480()
{
  unint64_t result = qword_1E9D63E10;
  if (!qword_1E9D63E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63E10);
  }
  return result;
}

uint64_t sub_1B59434D4(uint64_t a1, uint64_t a2, char a3)
{
  sub_1B5943510(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B5943510(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1B5943520@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B593DBB4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1B594352C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  unint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v3 = result;
    unint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 4;
    while (1)
    {
      uint64_t v7 = *(void *)(v3 + 8 * v5 + 32);
      if (v4)
      {
        unint64_t result = swift_retain();
        BOOL v8 = __OFSUB__(v4--, 1);
        if (v8) {
          goto LABEL_30;
        }
      }
      else
      {
        unint64_t v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_31;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1) {
          uint64_t v11 = 1;
        }
        else {
          uint64_t v11 = v10;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E48);
        uint64_t v12 = (void *)swift_allocObject();
        int64_t v13 = _swift_stdlib_malloc_size(v12);
        uint64_t v14 = v13 - 32;
        if (v13 < 32) {
          uint64_t v14 = v13 - 17;
        }
        uint64_t v15 = v14 >> 4;
        v12[2] = v11;
        uint64_t v12[3] = 2 * (v14 >> 4);
        uint64_t v16 = v12 + 4;
        uint64_t v17 = v2[3] >> 1;
        uint64_t v6 = &v12[2 * v17 + 4];
        uint64_t v18 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (v2[2])
        {
          BOOL v19 = v12 < v2 || v16 >= &v2[2 * v17 + 4];
          if (v19 || v12 != v2) {
            memmove(v16, v2 + 4, 16 * v17);
          }
          swift_retain();
          v2[2] = 0;
        }
        else
        {
          swift_retain();
        }
        unint64_t result = swift_release();
        unint64_t v2 = v12;
        BOOL v8 = __OFSUB__(v18, 1);
        uint64_t v4 = v18 - 1;
        if (v8)
        {
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
      }
      *uint64_t v6 = v5;
      v6[1] = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        unint64_t result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_26:
  unint64_t v20 = v2[3];
  if (v20 >= 2)
  {
    unint64_t v21 = v20 >> 1;
    BOOL v8 = __OFSUB__(v21, v4);
    uint64_t v22 = v21 - v4;
    if (v8) {
      goto LABEL_32;
    }
    v2[2] = v22;
  }
  return (uint64_t)v2;
}

uint64_t sub_1B59436CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B59419A0(a1, a2, v3 + 16, a3);
}

uint64_t sub_1B59436D4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B594370C(void *a1)
{
  return (*(uint64_t (**)(void, void *))(v1 + 16))(*a1, a1 + 1);
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  sub_1B5905248(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 144, 7);
}

uint64_t sub_1B59437A8@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1B5941738(a1, (void *)(v2 + 16), a2);
}

unint64_t sub_1B59437B4()
{
  unint64_t result = qword_1E9D63E58;
  if (!qword_1E9D63E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63E58);
  }
  return result;
}

unint64_t sub_1B5943808()
{
  unint64_t result = qword_1E9D63418;
  if (!qword_1E9D63418)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63418);
  }
  return result;
}

uint64_t sub_1B5943874@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v32 = a3;
  unint64_t v29 = a4;
  uint64_t v6 = sub_1B5A1A2A8();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v12 = sub_1B5A1A918();
  uint64_t v14 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v32();
  swift_retain();
  uint64_t v15 = v33;
  sub_1B5A1C838();
  if (v15)
  {
    swift_release_n();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v16 = v8;
    uint64_t v17 = v30;
    uint64_t v18 = sub_1B5A1C598();
    uint64_t v21 = v20;
    if (v20)
    {
      uint64_t v22 = v18;
    }
    else
    {
      long long v26 = v16;
      sub_1B5A1A298();
      uint64_t v22 = sub_1B5A1A288();
      uint64_t v21 = v23;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v28);
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v31);
    uint64_t v24 = v29;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t result = swift_release();
    *uint64_t v24 = v22;
    v24[1] = v21;
    v24[2] = MEMORY[0x1E4FBC860];
    v24[3] = v12;
    v24[4] = v14;
  }
  return result;
}

uint64_t sub_1B5943B44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E60);
  uint64_t v33 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v9 = sub_1B5A1A918();
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B5943F2C();
  swift_retain();
  uint64_t v13 = v35;
  sub_1B5A1C838();
  if (v13)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return swift_release();
  }
  else
  {
    uint64_t v14 = v31;
    uint64_t v15 = v32;
    uint64_t v35 = v11;
    char v38 = 0;
    uint64_t v16 = sub_1B5A1C598();
    uint64_t v19 = v17;
    if (v17)
    {
      uint64_t v29 = v16;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v29 = sub_1B5A1A288();
      uint64_t v19 = v20;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v15);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    char v37 = 1;
    sub_1B594407C((unint64_t *)&qword_1E9D63B38, &qword_1E9D63B30, (void (*)(void))sub_1B5914100);
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    uint64_t v21 = v8;
    uint64_t v22 = v6;
    uint64_t v23 = v33;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    if (v36) {
      uint64_t v25 = v36;
    }
    else {
      uint64_t v25 = MEMORY[0x1E4FBC860];
    }
    uint64_t v26 = sub_1B59196AC(v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v27 = v30;
    *uint64_t v30 = v29;
    v27[1] = v19;
    void v27[2] = v26;
    v27[3] = v24;
    uint64_t v28 = v35;
    v27[4] = v9;
    v27[5] = v28;
  }
  return result;
}

unint64_t sub_1B5943F2C()
{
  unint64_t result = qword_1E9D63E68;
  if (!qword_1E9D63E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63E68);
  }
  return result;
}

unint64_t sub_1B5943F80()
{
  unint64_t result = qword_1E9D63E78;
  if (!qword_1E9D63E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63E78);
  }
  return result;
}

uint64_t sub_1B5943FD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B594404C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B594407C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B59440E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E90);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B5943438((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v9 = sub_1B5A1A918();
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  uint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B59444D4();
  swift_retain();
  uint64_t v13 = v33;
  sub_1B5A1C838();
  if (v13)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    return swift_release();
  }
  else
  {
    uint64_t v33 = v9;
    uint64_t v14 = v29;
    uint64_t v15 = v30;
    uint64_t v27 = v11;
    char v36 = 0;
    uint64_t v16 = sub_1B5A1C598();
    uint64_t v19 = v17;
    if (v17)
    {
      uint64_t v26 = v16;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v26 = sub_1B5A1A288();
      uint64_t v19 = v20;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v14);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    char v35 = 1;
    sub_1B594407C((unint64_t *)&qword_1E9D63B38, &qword_1E9D63B30, (void (*)(void))sub_1B5914100);
    swift_bridgeObjectRetain();
    sub_1B5A1C5D8();
    uint64_t v21 = sub_1B59196AC(v34);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    uint64_t v22 = v33;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v15 = v26;
    v15[1] = v19;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    _OWORD v15[2] = v21;
    _OWORD v15[3] = v23;
    uint64_t v24 = v27;
    v15[4] = v22;
    v15[5] = v24;
  }
  return result;
}

unint64_t sub_1B59444D4()
{
  unint64_t result = qword_1E9D63E98;
  if (!qword_1E9D63E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63E98);
  }
  return result;
}

uint64_t sub_1B594452C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = v3[6];
  uint64_t v5 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  *a1 = result;
  return result;
}

unint64_t sub_1B594458C()
{
  unint64_t result = qword_1E9D63EA8;
  if (!qword_1E9D63EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63EA8);
  }
  return result;
}

unint64_t sub_1B59445E0()
{
  unint64_t result = qword_1E9D63EB0;
  if (!qword_1E9D63EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63EB0);
  }
  return result;
}

uint64_t sub_1B5944634(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5944668@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = v3[5];
  uint64_t v5 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  *a1 = result;
  return result;
}

uint64_t sub_1B59446C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = v3[10];
  uint64_t v5 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  *a1 = result;
  return result;
}

unint64_t sub_1B5944728()
{
  unint64_t result = qword_1E9D63EC0;
  if (!qword_1E9D63EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63EC0);
  }
  return result;
}

uint64_t sub_1B594477C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B59447AC()
{
  unint64_t result = qword_1E9D63ED0;
  if (!qword_1E9D63ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63ED0);
  }
  return result;
}

uint64_t sub_1B5944800(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B5944830()
{
  unint64_t result = qword_1E9D63EE0;
  if (!qword_1E9D63EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63EE0);
  }
  return result;
}

uint64_t sub_1B5944884(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B59448B4()
{
  unint64_t result = qword_1E9D63EF0;
  if (!qword_1E9D63EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63EF0);
  }
  return result;
}

uint64_t sub_1B5944908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5944970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LinkView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B59449D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LinkView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B5944A30(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B5944A94()
{
  unint64_t result = qword_1E9D63F00;
  if (!qword_1E9D63F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F00);
  }
  return result;
}

unint64_t sub_1B5944AE8()
{
  unint64_t result = qword_1E9D63F10;
  if (!qword_1E9D63F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F10);
  }
  return result;
}

unint64_t sub_1B5944B3C()
{
  unint64_t result = qword_1E9D63330;
  if (!qword_1E9D63330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63328);
    sub_1B5944A30((unint64_t *)&qword_1E9D63338, &qword_1E9D63340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63330);
  }
  return result;
}

unint64_t sub_1B5944BCC()
{
  unint64_t result = qword_1E9D63F20;
  if (!qword_1E9D63F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F20);
  }
  return result;
}

ValueMetadata *type metadata accessor for TextView.TextViewCodingKeys()
{
  return &type metadata for TextView.TextViewCodingKeys;
}

ValueMetadata *type metadata accessor for ProgressView.CodingKeys()
{
  return &type metadata for ProgressView.CodingKeys;
}

ValueMetadata *type metadata accessor for SpacerView.SpacerViewCodingKeys()
{
  return &type metadata for SpacerView.SpacerViewCodingKeys;
}

ValueMetadata *type metadata accessor for LinkView.CodingKeys()
{
  return &type metadata for LinkView.CodingKeys;
}

ValueMetadata *type metadata accessor for ColorView.CodingKeys()
{
  return &type metadata for ColorView.CodingKeys;
}

ValueMetadata *type metadata accessor for ToggleView.CodingKeys()
{
  return &type metadata for ToggleView.CodingKeys;
}

ValueMetadata *type metadata accessor for LabelView.CodingKeys()
{
  return &type metadata for LabelView.CodingKeys;
}

unsigned char *_s6LiftUI8TextViewV18TextViewCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5944D74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AxesName()
{
  return &type metadata for AxesName;
}

ValueMetadata *type metadata accessor for ScrollingView.CodingKeys()
{
  return &type metadata for ScrollingView.CodingKeys;
}

ValueMetadata *type metadata accessor for GroupView.CodingKeys()
{
  return &type metadata for GroupView.CodingKeys;
}

unsigned char *_s6LiftUI8LinkViewV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5944E98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForEachView.CodingKeys()
{
  return &type metadata for ForEachView.CodingKeys;
}

unsigned char *_s6LiftUI10SpacerViewV20SpacerViewCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5944F9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormView.CodingKeys()
{
  return &type metadata for FormView.CodingKeys;
}

unsigned char *_s6LiftUI12ProgressViewV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5945070);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyViewView.CodingKeys()
{
  return &type metadata for EmptyViewView.CodingKeys;
}

uint64_t destroy for TextView.TextType(uint64_t a1)
{
  return sub_1B591DDA8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for TextView.TextType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B591DDB0(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for TextView.TextType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B591DDB0(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B591DDA8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for TextView.TextType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B591DDA8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextView.TextType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x1F && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 31);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 24) & 0x1E | (*(unsigned __int8 *)(a1 + 24) >> 5) & 1) ^ 0x1F;
  if (v3 >= 0x1E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TextView.TextType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 31;
    if (a3 >= 0x1F) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1F) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 2 * ((((-a2 >> 1) & 0xF) - 16 * a2) & 0x1F);
    }
  }
  return result;
}

uint64_t sub_1B5945288(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 24) >> 5) & 1;
}

uint64_t sub_1B5945294(uint64_t result)
{
  *(unsigned char *)(result + 24) &= ~0x20u;
  return result;
}

uint64_t sub_1B59452A4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 0xC1 | (32 * (a2 & 1));
  return result;
}

ValueMetadata *type metadata accessor for TextView.TextType()
{
  return &type metadata for TextView.TextType;
}

uint64_t sub_1B59452CC()
{
  return MEMORY[0x1E4F3F050];
}

uint64_t sub_1B59452D8()
{
  return sub_1B59095C8(&qword_1E9D63670, &qword_1E9D63668);
}

uint64_t sub_1B5945318()
{
  return sub_1B594407C((unint64_t *)&qword_1E9D63608, &qword_1E9D63600, (void (*)(void))sub_1B5943808);
}

uint64_t sub_1B5945368()
{
  return sub_1B59095C8(&qword_1E9D635F0, &qword_1E9D635E8);
}

uint64_t sub_1B59453A4()
{
  return sub_1B59095C8(&qword_1E9D635D8, &qword_1E9D635D0);
}

uint64_t sub_1B59453E0()
{
  return sub_1B59095C8(&qword_1E9D635C0, &qword_1E9D635B8);
}

uint64_t sub_1B594541C()
{
  return MEMORY[0x1E4F3EB88];
}

uint64_t sub_1B594542C()
{
  return sub_1B5944A30((unint64_t *)&qword_1E9D634D0, &qword_1E9D634C8);
}

uint64_t sub_1B594545C()
{
  return sub_1B59095C8(&qword_1E9D62E70, &qword_1E9D62E58);
}

unint64_t sub_1B59454A0()
{
  unint64_t result = qword_1E9D63F28;
  if (!qword_1E9D63F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F28);
  }
  return result;
}

unint64_t sub_1B59454F8()
{
  unint64_t result = qword_1E9D63F30;
  if (!qword_1E9D63F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F30);
  }
  return result;
}

unint64_t sub_1B5945550()
{
  unint64_t result = qword_1E9D63F38;
  if (!qword_1E9D63F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F38);
  }
  return result;
}

unint64_t sub_1B59455A8()
{
  unint64_t result = qword_1E9D63F40;
  if (!qword_1E9D63F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F40);
  }
  return result;
}

unint64_t sub_1B5945600()
{
  unint64_t result = qword_1E9D63F48;
  if (!qword_1E9D63F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F48);
  }
  return result;
}

unint64_t sub_1B5945658()
{
  unint64_t result = qword_1E9D63F50;
  if (!qword_1E9D63F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F50);
  }
  return result;
}

unint64_t sub_1B59456B0()
{
  unint64_t result = qword_1E9D63F58;
  if (!qword_1E9D63F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F58);
  }
  return result;
}

unint64_t sub_1B5945708()
{
  unint64_t result = qword_1E9D63F60;
  if (!qword_1E9D63F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F60);
  }
  return result;
}

unint64_t sub_1B5945760()
{
  unint64_t result = qword_1E9D63F68;
  if (!qword_1E9D63F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F68);
  }
  return result;
}

unint64_t sub_1B59457B8()
{
  unint64_t result = qword_1E9D63F70;
  if (!qword_1E9D63F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F70);
  }
  return result;
}

unint64_t sub_1B5945810()
{
  unint64_t result = qword_1E9D63F78;
  if (!qword_1E9D63F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F78);
  }
  return result;
}

unint64_t sub_1B5945868()
{
  unint64_t result = qword_1E9D63F80;
  if (!qword_1E9D63F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F80);
  }
  return result;
}

unint64_t sub_1B59458C0()
{
  unint64_t result = qword_1E9D63F88;
  if (!qword_1E9D63F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F88);
  }
  return result;
}

unint64_t sub_1B5945918()
{
  unint64_t result = qword_1E9D63F90;
  if (!qword_1E9D63F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F90);
  }
  return result;
}

unint64_t sub_1B5945970()
{
  unint64_t result = qword_1E9D63F98;
  if (!qword_1E9D63F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63F98);
  }
  return result;
}

unint64_t sub_1B59459C8()
{
  unint64_t result = qword_1E9D63FA0;
  if (!qword_1E9D63FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FA0);
  }
  return result;
}

unint64_t sub_1B5945A20()
{
  unint64_t result = qword_1E9D63FA8;
  if (!qword_1E9D63FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FA8);
  }
  return result;
}

unint64_t sub_1B5945A78()
{
  unint64_t result = qword_1E9D63FB0;
  if (!qword_1E9D63FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FB0);
  }
  return result;
}

unint64_t sub_1B5945AD0()
{
  unint64_t result = qword_1E9D63FB8;
  if (!qword_1E9D63FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FB8);
  }
  return result;
}

unint64_t sub_1B5945B28()
{
  unint64_t result = qword_1E9D63FC0;
  if (!qword_1E9D63FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FC0);
  }
  return result;
}

unint64_t sub_1B5945B80()
{
  unint64_t result = qword_1E9D63FC8;
  if (!qword_1E9D63FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FC8);
  }
  return result;
}

unint64_t sub_1B5945BD8()
{
  unint64_t result = qword_1E9D63FD0;
  if (!qword_1E9D63FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FD0);
  }
  return result;
}

unint64_t sub_1B5945C30()
{
  unint64_t result = qword_1E9D63FD8;
  if (!qword_1E9D63FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FD8);
  }
  return result;
}

unint64_t sub_1B5945C88()
{
  unint64_t result = qword_1E9D63FE0;
  if (!qword_1E9D63FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FE0);
  }
  return result;
}

unint64_t sub_1B5945CE0()
{
  unint64_t result = qword_1E9D63FE8;
  if (!qword_1E9D63FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FE8);
  }
  return result;
}

unint64_t sub_1B5945D38()
{
  unint64_t result = qword_1E9D63FF0;
  if (!qword_1E9D63FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FF0);
  }
  return result;
}

unint64_t sub_1B5945D90()
{
  unint64_t result = qword_1E9D63FF8;
  if (!qword_1E9D63FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63FF8);
  }
  return result;
}

unint64_t sub_1B5945DE8()
{
  unint64_t result = qword_1E9D64000;
  if (!qword_1E9D64000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64000);
  }
  return result;
}

unint64_t sub_1B5945E40()
{
  unint64_t result = qword_1E9D64008;
  if (!qword_1E9D64008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64008);
  }
  return result;
}

unint64_t sub_1B5945E98()
{
  unint64_t result = qword_1E9D64010;
  if (!qword_1E9D64010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64010);
  }
  return result;
}

unint64_t sub_1B5945EF0()
{
  unint64_t result = qword_1E9D64018;
  if (!qword_1E9D64018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64018);
  }
  return result;
}

unint64_t sub_1B5945F48()
{
  unint64_t result = qword_1E9D64020;
  if (!qword_1E9D64020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64020);
  }
  return result;
}

unint64_t sub_1B5945FA0()
{
  unint64_t result = qword_1E9D64028;
  if (!qword_1E9D64028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64028);
  }
  return result;
}

unint64_t sub_1B5945FF8()
{
  unint64_t result = qword_1E9D64030;
  if (!qword_1E9D64030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64030);
  }
  return result;
}

unint64_t sub_1B5946050()
{
  unint64_t result = qword_1E9D64038;
  if (!qword_1E9D64038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64038);
  }
  return result;
}

unint64_t sub_1B59460A8()
{
  unint64_t result = qword_1E9D64040;
  if (!qword_1E9D64040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64040);
  }
  return result;
}

unint64_t sub_1B5946100()
{
  unint64_t result = qword_1E9D64048;
  if (!qword_1E9D64048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64048);
  }
  return result;
}

uint64_t sub_1B5946154()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B594619C()
{
  unint64_t result = qword_1E9D64050;
  if (!qword_1E9D64050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64050);
  }
  return result;
}

uint64_t destroy for IfView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  }
  if (*(void *)(a1 + 88)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  }
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for IfView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  uint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 24, v5, v6);
  }
  else
  {
    long long v8 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 40) = v8;
    *(void *)(a1 + 56) = *(void *)(v5 + 32);
  }
  uint64_t v9 = (_OWORD *)(a1 + 64);
  char v10 = (_OWORD *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 88);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v11;
    *(void *)(a1 + 96) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 80);
    _OWORD *v9 = *v10;
    *(_OWORD *)(a1 + 80) = v13;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
  }
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for IfView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  }
  else if (v4)
  {
    *(void *)(a1 + 48) = v4;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (v7)
    {
      *(void *)(a1 + 88) = v7;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 64, a2 + 64);
      goto LABEL_15;
    }
LABEL_14:
    long long v8 = *(_OWORD *)(a2 + 64);
    long long v9 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 80) = v9;
    goto LABEL_15;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 64);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
LABEL_15:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t assignWithTake for IfView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  if (*(void *)(a1 + 88)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  }
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

ValueMetadata *type metadata accessor for IfView()
{
  return &type metadata for IfView;
}

uint64_t sub_1B5946610@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  if (*(void *)(v1 + 112))
  {
    uint64_t v4 = swift_retain();
    char v5 = sub_1B59F84BC(v4);
    swift_release();
    if (v5)
    {
      sub_1B5921484(v2 + 24, (uint64_t)&v10);
      uint64_t v6 = v12;
      if (v12)
      {
LABEL_4:
        uint64_t v7 = v13;
        __swift_project_boxed_opaque_existential_1(&v10, v12);
        (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
LABEL_7:
        uint64_t result = sub_1B5A1AE58();
        char v9 = v11;
        *(void *)a1 = v10;
        *(unsigned char *)(a1 + 8) = v9;
        return result;
      }
    }
    else
    {
      sub_1B5921484(v2 + 64, (uint64_t)&v10);
      uint64_t v6 = v12;
      if (v12) {
        goto LABEL_4;
      }
    }
    sub_1B5908FC0((uint64_t)&v10, &qword_1E9D632B0);
    sub_1B5A1BA88();
    goto LABEL_7;
  }
  type metadata accessor for RemoteStateStore(0);
  sub_1B59471B8((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B594680C(char a1)
{
  return qword_1B5A22AC8[a1];
}

uint64_t sub_1B594682C(char *a1, char *a2)
{
  return sub_1B59ECE4C(*a1, *a2);
}

uint64_t sub_1B5946838()
{
  return sub_1B59F0DD4();
}

uint64_t sub_1B5946840()
{
  return sub_1B59F2EA0();
}

uint64_t sub_1B5946848()
{
  return sub_1B59F724C();
}

uint64_t sub_1B5946850@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59474B8();
  *a1 = result;
  return result;
}

uint64_t sub_1B5946880@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B594680C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59468AC()
{
  return sub_1B594680C(*v0);
}

uint64_t sub_1B59468B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59474B8();
  *a1 = result;
  return result;
}

uint64_t sub_1B59468DC(uint64_t a1)
{
  unint64_t v2 = sub_1B5947164();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5946918(uint64_t a1)
{
  unint64_t v2 = sub_1B5947164();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5946954@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v33 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64068);
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49[2] = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B59471B8((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  v51[6] = sub_1B5A1A918();
  v51[7] = v9;
  uint64_t v10 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1B5947164();
  char v11 = v52;
  sub_1B5A1C838();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v12 = v33;
    uint64_t v52 = (char *)v3;
    LOBYTE(v36) = 0;
    uint64_t v13 = sub_1B5A1C598();
    uint64_t v16 = v14;
    if (v14)
    {
      uint64_t v17 = v13;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v17 = sub_1B5A1A288();
      uint64_t v16 = v18;
      (*(void (**)(char *, char *))(v12 + 8))(v5, v52);
    }
    v49[0] = v17;
    v49[1] = v16;
    char v35 = 1;
    sub_1B5914100();
    sub_1B5A1C5B8();
    uint64_t v52 = v8;
    if (*((void *)&v36 + 1))
    {
      *((void *)&v47 + 1) = &type metadata for ViewContent;
      unint64_t v48 = sub_1B5914034();
      uint64_t v19 = swift_allocObject();
      *(void *)&long long v46 = v19;
      long long v20 = v43;
      *(_OWORD *)(v19 + 112) = v42;
      *(_OWORD *)(v19 + 128) = v20;
      *(_OWORD *)(v19 + 144) = v44;
      *(void *)(v19 + 160) = v45;
      long long v21 = v39;
      *(_OWORD *)(v19 + 48) = v38;
      *(_OWORD *)(v19 + 64) = v21;
      long long v22 = v41;
      *(_OWORD *)(v19 + 80) = v40;
      *(_OWORD *)(v19 + 96) = v22;
      long long v23 = v37;
      *(_OWORD *)(v19 + 16) = v36;
      *(_OWORD *)(v19 + 32) = v23;
    }
    else
    {
      sub_1B5908FC0((uint64_t)&v36, &qword_1E9D63B40);
      long long v46 = 0u;
      long long v47 = 0u;
      unint64_t v48 = 0;
    }
    sub_1B59215A0((uint64_t)&v46, (uint64_t)&v50);
    char v35 = 2;
    sub_1B5A1C5B8();
    if (*((void *)&v36 + 1))
    {
      *((void *)&v47 + 1) = &type metadata for ViewContent;
      unint64_t v48 = sub_1B5914034();
      uint64_t v24 = swift_allocObject();
      *(void *)&long long v46 = v24;
      long long v25 = v43;
      *(_OWORD *)(v24 + 112) = v42;
      *(_OWORD *)(v24 + 128) = v25;
      *(_OWORD *)(v24 + 144) = v44;
      *(void *)(v24 + 160) = v45;
      long long v26 = v39;
      *(_OWORD *)(v24 + 48) = v38;
      *(_OWORD *)(v24 + 64) = v26;
      long long v27 = v41;
      *(_OWORD *)(v24 + 80) = v40;
      *(_OWORD *)(v24 + 96) = v27;
      long long v28 = v37;
      *(_OWORD *)(v24 + 16) = v36;
      *(_OWORD *)(v24 + 32) = v28;
    }
    else
    {
      sub_1B5908FC0((uint64_t)&v36, &qword_1E9D63B40);
      long long v46 = 0u;
      long long v47 = 0u;
      unint64_t v48 = 0;
    }
    uint64_t v29 = v31;
    sub_1B59215A0((uint64_t)&v46, (uint64_t)v51);
    type metadata accessor for Condition();
    LOBYTE(v46) = 3;
    sub_1B59471B8((unint64_t *)&qword_1E9D64078, (void (*)(uint64_t))type metadata accessor for Condition);
    uint64_t v30 = v52;
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v6);
    v51[5] = v36;
    sub_1B591F8F8((uint64_t)v49, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return sub_1B5947200((uint64_t)v49);
  }
}

uint64_t sub_1B5946F2C@<X0>(uint64_t *a1@<X8>)
{
  sub_1B5946610((uint64_t)&v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632D8);
  sub_1B59470F8();
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

uint64_t sub_1B5946F98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5946954(a1, a2);
}

uint64_t sub_1B5946FB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5946FCC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B5947028()
{
  unint64_t result = qword_1E9D64058;
  if (!qword_1E9D64058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64058);
  }
  return result;
}

unint64_t sub_1B594707C(uint64_t a1)
{
  unint64_t result = sub_1B59470A4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B59470A4()
{
  unint64_t result = qword_1E9D64060;
  if (!qword_1E9D64060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64060);
  }
  return result;
}

unint64_t sub_1B59470F8()
{
  unint64_t result = qword_1E9D632E0;
  if (!qword_1E9D632E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D632D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D632E0);
  }
  return result;
}

unint64_t sub_1B5947164()
{
  unint64_t result = qword_1E9D64070;
  if (!qword_1E9D64070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64070);
  }
  return result;
}

uint64_t sub_1B59471B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B5947200(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5947230()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

unsigned char *storeEnumTagSinglePayload for IfView.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5947374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IfView.CodingKeys()
{
  return &type metadata for IfView.CodingKeys;
}

unint64_t sub_1B59473B4()
{
  unint64_t result = qword_1E9D64080;
  if (!qword_1E9D64080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64080);
  }
  return result;
}

unint64_t sub_1B594740C()
{
  unint64_t result = qword_1E9D64088;
  if (!qword_1E9D64088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64088);
  }
  return result;
}

unint64_t sub_1B5947464()
{
  unint64_t result = qword_1E9D64090;
  if (!qword_1E9D64090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64090);
  }
  return result;
}

uint64_t sub_1B59474B8()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

void destroy for PinnedScrollableViewsOptions(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 != 255) {
    sub_1B590D6F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v2 & 1);
  }
  int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 != 255)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    sub_1B590D6F0(v4, v5, v6, v3 & 1);
  }
}

uint64_t initializeWithCopy for PinnedScrollableViewsOptions(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  }
  else
  {
    char v5 = v4 & 1;
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    uint64_t v8 = a2[2];
    sub_1B590D634(*a2, v7, v8, v4 & 1);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v5;
  }
  int v9 = *((unsigned __int8 *)a2 + 56);
  if (v9 == 255)
  {
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  else
  {
    char v10 = v9 & 1;
    uint64_t v11 = a2[4];
    uint64_t v12 = a2[5];
    uint64_t v13 = a2[6];
    sub_1B590D634(v11, v12, v13, v9 & 1);
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v13;
    *(unsigned char *)(a1 + 56) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for PinnedScrollableViewsOptions(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v4 == 255)
    {
      long long v6 = *a2;
      *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      char v15 = v4 & 1;
      uint64_t v16 = *(void *)a2;
      uint64_t v17 = *((void *)a2 + 1);
      uint64_t v18 = *((void *)a2 + 2);
      sub_1B590D634(*(void *)a2, v17, v18, v4 & 1);
      *(void *)a1 = v16;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = v18;
      *(unsigned char *)(a1 + 24) = v15;
    }
  }
  else if (v4 == 255)
  {
    sub_1B5947804(a1);
    long long v5 = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 9) = v5;
  }
  else
  {
    char v7 = v4 & 1;
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *((void *)a2 + 1);
    uint64_t v10 = *((void *)a2 + 2);
    sub_1B590D634(*(void *)a2, v9, v10, v4 & 1);
    uint64_t v11 = *(void *)a1;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 16);
    char v14 = *(unsigned char *)(a1 + 24);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(unsigned char *)(a1 + 24) = v7;
    sub_1B590D6F0(v11, v12, v13, v14);
  }
  uint64_t v19 = (long long *)(a1 + 32);
  long long v20 = a2 + 2;
  int v21 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v21 == 255)
    {
      long long v23 = *v20;
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *uint64_t v19 = v23;
    }
    else
    {
      char v32 = v21 & 1;
      uint64_t v33 = *((void *)a2 + 4);
      uint64_t v34 = *((void *)a2 + 5);
      uint64_t v35 = *((void *)a2 + 6);
      sub_1B590D634(v33, v34, v35, v21 & 1);
      *(void *)(a1 + 32) = v33;
      *(void *)(a1 + 40) = v34;
      *(void *)(a1 + 48) = v35;
      *(unsigned char *)(a1 + 56) = v32;
    }
  }
  else if (v21 == 255)
  {
    sub_1B5947804(a1 + 32);
    long long v22 = *(long long *)((char *)a2 + 41);
    *uint64_t v19 = *v20;
    *(_OWORD *)(a1 + 41) = v22;
  }
  else
  {
    char v24 = v21 & 1;
    uint64_t v25 = *((void *)a2 + 4);
    uint64_t v26 = *((void *)a2 + 5);
    uint64_t v27 = *((void *)a2 + 6);
    sub_1B590D634(v25, v26, v27, v21 & 1);
    uint64_t v28 = *(void *)(a1 + 32);
    uint64_t v29 = *(void *)(a1 + 40);
    uint64_t v30 = *(void *)(a1 + 48);
    char v31 = *(unsigned char *)(a1 + 56);
    *(void *)(a1 + 32) = v25;
    *(void *)(a1 + 40) = v26;
    *(void *)(a1 + 48) = v27;
    *(unsigned char *)(a1 + 56) = v24;
    sub_1B590D6F0(v28, v29, v30, v31);
  }
  return a1;
}

uint64_t sub_1B5947804(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for PinnedScrollableViewsOptions(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 == 255) {
    goto LABEL_4;
  }
  int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 == 255)
  {
    sub_1B5947804(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  char v6 = v4 & 1;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v5 & 1;
  sub_1B590D6F0(v8, v9, v10, v6);
LABEL_6:
  int v11 = *(unsigned __int8 *)(a1 + 56);
  if (v11 != 255)
  {
    int v12 = *(unsigned __int8 *)(a2 + 56);
    if (v12 != 255)
    {
      char v13 = v11 & 1;
      uint64_t v14 = *(void *)(a2 + 48);
      uint64_t v15 = *(void *)(a1 + 32);
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = v14;
      *(unsigned char *)(a1 + 56) = v12 & 1;
      sub_1B590D6F0(v15, v16, v17, v13);
      return a1;
    }
    sub_1B5947804(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for PinnedScrollableViewsOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PinnedScrollableViewsOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PinnedScrollableViewsOptions()
{
  return &type metadata for PinnedScrollableViewsOptions;
}

uint64_t sub_1B5947A04(char a1)
{
  return qword_1B5A22DB8[a1];
}

uint64_t sub_1B5947A24(char a1)
{
  if (a1) {
    return 0x65746F6F466E6970;
  }
  else {
    return 0x65646165486E6970;
  }
}

uint64_t sub_1B5947A58(char *a1, char *a2)
{
  return sub_1B59EF59C(*a1, *a2);
}

uint64_t sub_1B5947A64()
{
  return sub_1B59F56E0();
}

uint64_t sub_1B5947A70()
{
  return sub_1B59F4668();
}

uint64_t sub_1B5947A78()
{
  return sub_1B59F56E0();
}

uint64_t sub_1B5947A80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59485EC();
  *a1 = result;
  return result;
}

uint64_t sub_1B5947AB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5947A04(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5947ADC()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B5947B3C()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B5947B8C(char *a1, char *a2)
{
  return sub_1B59ED000(*a1, *a2);
}

uint64_t sub_1B5947B98()
{
  return sub_1B59F0E40();
}

uint64_t sub_1B5947BA0()
{
  return sub_1B59F2F94();
}

uint64_t sub_1B5947BA8()
{
  return sub_1B59F711C();
}

uint64_t sub_1B5947BB0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5947C10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5947A24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5947C3C()
{
  return sub_1B5947A24(*v0);
}

uint64_t sub_1B5947C44@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5947CA8(uint64_t a1)
{
  unint64_t v2 = sub_1B594867C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5947CE4(uint64_t a1)
{
  unint64_t v2 = sub_1B594867C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5947D20(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1B5A1AFD8();
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v27 = (char *)&v26 - v8;
  uint64_t v10 = *(void *)v2;
  uint64_t v9 = *(void *)(v2 + 8);
  uint64_t v11 = *(void *)(v2 + 16);
  int v12 = *(unsigned __int8 *)(v2 + 24);
  uint64_t v33 = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(v2 + 48);
  uint64_t v31 = *(void *)(v2 + 40);
  int v32 = *(unsigned __int8 *)(v2 + 56);
  int v34 = 0;
  sub_1B5948638(&qword_1E9D64098);
  uint64_t v29 = a2;
  sub_1B5A1C8A8();
  if (v12 == 255)
  {
    uint64_t v14 = v13;
    int v15 = v32;
    uint64_t v16 = v31;
  }
  else
  {
    sub_1B590D634(v10, v9, v11, v12 & 1);
    char v18 = sub_1B59B4120(a1, v10, v9, v11, v12 & 1);
    sub_1B590F034(v10, v9, v11, v12);
    uint64_t v14 = v13;
    int v15 = v32;
    uint64_t v16 = v31;
    if (v18)
    {
      uint64_t v19 = (uint64_t)v28;
      sub_1B5A1AFC8();
      long long v20 = v27;
      sub_1B5948024(v27, v19);
      int v21 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v21(v19, v5);
      v21((uint64_t)v20, v5);
    }
  }
  uint64_t v17 = v33;
  if (v15 != 255)
  {
    sub_1B590D634(v33, v16, v14, v15 & 1);
    char v22 = sub_1B59B4120(a1, v17, v16, v14, v15 & 1);
    sub_1B590F034(v17, v16, v14, v15);
    if (v22)
    {
      uint64_t v23 = (uint64_t)v28;
      sub_1B5A1AFB8();
      char v24 = v27;
      sub_1B5948024(v27, v23);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v25(v23, v5);
      v25((uint64_t)v24, v5);
    }
  }
}

uint64_t sub_1B5948024(char *a1, uint64_t a2)
{
  uint64_t v28 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D640A0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v26 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_1B5A1AFD8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  int v15 = (char *)&v23 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v25 = v2;
  v16(v13, v2, v9);
  uint64_t v23 = sub_1B5948638(&qword_1E9D640A8);
  sub_1B5A1C308();
  sub_1B5948638(&qword_1E9D640B0);
  uint64_t v24 = a2;
  char v17 = sub_1B5A1BED8() ^ 1;
  uint64_t v27 = v4;
  char v18 = &v8[*(int *)(v4 + 48)];
  *uint64_t v8 = v17 & 1;
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v20 = v24;
    v16(v18, v24, v9);
    v16(v13, v20, v9);
    sub_1B5A1C328();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v19(v18, v15, v9);
  }
  int v21 = &v26[*(int *)(v27 + 48)];
  v19(v21, v18, v9);
  v19(v28, v21, v9);
  return v17 & 1;
}

void sub_1B59482FC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D640B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B594867C();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    char v32 = 0;
    sub_1B5915308();
    sub_1B5A1C5B8();
    char v32 = 1;
    uint64_t v25 = v28;
    uint64_t v26 = v27;
    uint64_t v24 = v29;
    int v31 = v30;
    sub_1B590F04C(v27, v28, v29, v30);
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v27;
    uint64_t v22 = v28;
    uint64_t v23 = v27;
    uint64_t v10 = v29;
    uint64_t v21 = v29;
    int v20 = v30;
    uint64_t v12 = v25;
    uint64_t v11 = v26;
    uint64_t v13 = v24;
    unsigned __int8 v14 = v31;
    sub_1B590F04C(v26, v25, v24, v31);
    uint64_t v15 = v9;
    uint64_t v16 = v22;
    uint64_t v17 = v10;
    LOBYTE(v10) = v20;
    sub_1B590F04C(v15, v22, v17, v20);
    sub_1B590F034(v11, v12, v13, v14);
    *(void *)a2 = v11;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v13;
    *(unsigned char *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v23;
    *(void *)(a2 + 40) = v16;
    uint64_t v18 = v21;
    *(void *)(a2 + 48) = v21;
    *(unsigned char *)(a2 + 56) = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B590F034(v11, v12, v13, v14);
    sub_1B590F034(v23, v22, v18, v10);
  }
}

void sub_1B59485D4(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1B59485EC()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B5948638(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B5A1AFD8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B594867C()
{
  unint64_t result = qword_1E9D640C0;
  if (!qword_1E9D640C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D640C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EdgeSetString(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EdgeSetString(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B594882CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EdgeSetString()
{
  return &type metadata for EdgeSetString;
}

unsigned char *storeEnumTagSinglePayload for PinnedScrollableViewsOptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5948930);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PinnedScrollableViewsOptions.CodingKeys()
{
  return &type metadata for PinnedScrollableViewsOptions.CodingKeys;
}

unint64_t sub_1B594896C()
{
  unint64_t result = qword_1E9D640C8;
  if (!qword_1E9D640C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D640C8);
  }
  return result;
}

unint64_t sub_1B59489C4()
{
  unint64_t result = qword_1E9D640D0;
  if (!qword_1E9D640D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D640D0);
  }
  return result;
}

unint64_t sub_1B5948A1C()
{
  unint64_t result = qword_1E9D640D8;
  if (!qword_1E9D640D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D640D8);
  }
  return result;
}

unint64_t sub_1B5948A74()
{
  unint64_t result = qword_1E9D640E0;
  if (!qword_1E9D640E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D640E0);
  }
  return result;
}

unint64_t sub_1B5948AC8()
{
  unint64_t result = qword_1E9D640E8;
  if (!qword_1E9D640E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D640E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for BaselineOffsetModifier()
{
  return &type metadata for BaselineOffsetModifier;
}

ValueMetadata *type metadata accessor for TrackingModifier()
{
  return &type metadata for TrackingModifier;
}

ValueMetadata *type metadata accessor for KerningModifier()
{
  return &type metadata for KerningModifier;
}

ValueMetadata *type metadata accessor for MonospacedDigitModifier()
{
  return &type metadata for MonospacedDigitModifier;
}

ValueMetadata *type metadata accessor for MonospacedModifier()
{
  return &type metadata for MonospacedModifier;
}

uint64_t _s6LiftUI18MonospacedModifierVwca_0(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v4 == 255)
    {
      long long v6 = *a2;
      *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      char v15 = v4 & 1;
      uint64_t v16 = *(void *)a2;
      uint64_t v17 = *((void *)a2 + 1);
      uint64_t v18 = *((void *)a2 + 2);
      sub_1B590D634(*(void *)a2, v17, v18, v4 & 1);
      *(void *)a1 = v16;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = v18;
      *(unsigned char *)(a1 + 24) = v15;
    }
  }
  else if (v4 == 255)
  {
    sub_1B5908FC0(a1, &qword_1E9D63220);
    long long v5 = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 9) = v5;
  }
  else
  {
    char v7 = v4 & 1;
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *((void *)a2 + 1);
    uint64_t v10 = *((void *)a2 + 2);
    sub_1B590D634(*(void *)a2, v9, v10, v4 & 1);
    uint64_t v11 = *(void *)a1;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 16);
    char v14 = *(unsigned char *)(a1 + 24);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(unsigned char *)(a1 + 24) = v7;
    sub_1B590D6F0(v11, v12, v13, v14);
  }
  return a1;
}

uint64_t _s6LiftUI18MonospacedModifierVwta_0(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 != 255)
  {
    int v5 = *(unsigned __int8 *)(a2 + 24);
    if (v5 != 255)
    {
      char v6 = v4 & 1;
      uint64_t v7 = *(void *)(a2 + 16);
      uint64_t v8 = *(void *)a1;
      uint64_t v9 = *(void *)(a1 + 8);
      uint64_t v10 = *(void *)(a1 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = v7;
      *(unsigned char *)(a1 + 24) = v5 & 1;
      sub_1B590D6F0(v8, v9, v10, v6);
      return a1;
    }
    sub_1B5908FC0(a1, &qword_1E9D63220);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  return a1;
}

ValueMetadata *type metadata accessor for ItalicModifier()
{
  return &type metadata for ItalicModifier;
}

void destroy for ClippedModifier(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 24);
  if (v1 != 255) {
    sub_1B590D6F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v1 & 1);
  }
}

uint64_t initializeWithCopy for ClippedModifier(uint64_t a1, uint64_t *a2)
{
  int v3 = *((unsigned __int8 *)a2 + 24);
  if (v3 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  }
  else
  {
    char v4 = v3 & 1;
    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    uint64_t v7 = a2[2];
    sub_1B590D634(*a2, v6, v7, v3 & 1);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = v4;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ClippedModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClippedModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoldModifier()
{
  return &type metadata for BoldModifier;
}

void destroy for FontModifier(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v2);
  }
  uint64_t v3 = *(unsigned __int8 *)(a1 + 88);
  if (v3 != 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 <= 0xFD) {
      sub_1B591DF0C(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v4);
    }
    if (v3 != 255) {
      sub_1B5904AB4(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v3 & 1);
    }
    int v5 = *(unsigned __int8 *)(a1 + 120);
    if (v5 != 255) {
      sub_1B5904AB4(*(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v5 & 1);
    }
    int v6 = *(unsigned __int8 *)(a1 + 152);
    if (v6 != 255)
    {
      uint64_t v7 = *(void *)(a1 + 128);
      uint64_t v8 = *(void *)(a1 + 136);
      uint64_t v9 = *(void *)(a1 + 144);
      sub_1B5904AB4(v7, v8, v9, v6 & 1);
    }
  }
}

uint64_t initializeWithCopy for FontModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 <= 0xFD)
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    sub_1B5904B60(*(void *)a2, v6, v7, v4);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  uint64_t v8 = (_OWORD *)(a1 + 32);
  uint64_t v9 = (_OWORD *)(a2 + 32);
  uint64_t v10 = *(unsigned __int8 *)(a2 + 88);
  if (v10 == 254)
  {
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
    long long v12 = *(_OWORD *)(a2 + 48);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 48) = v12;
    long long v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    return a1;
  }
  unsigned int v14 = *(unsigned __int8 *)(a2 + 56);
  if (v14 <= 0xFD)
  {
    uint64_t v18 = *(void *)(a2 + 32);
    uint64_t v19 = *(void *)(a2 + 40);
    uint64_t v20 = *(void *)(a2 + 48);
    sub_1B591DF88(v18, v19, v20, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 32) = v18;
    *(void *)(a1 + 40) = v19;
    *(void *)(a1 + 48) = v20;
    *(unsigned char *)(a1 + 56) = v14;
    if (v10 != 255) {
      goto LABEL_8;
    }
LABEL_10:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    goto LABEL_11;
  }
  *uint64_t v8 = *v9;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  if (v10 == 255) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v15 = *(void *)(a2 + 64);
  uint64_t v16 = *(void *)(a2 + 72);
  uint64_t v17 = *(void *)(a2 + 80);
  sub_1B5904B8C(v15, v16, v17, v10 & 1);
  *(void *)(a1 + 64) = v15;
  *(void *)(a1 + 72) = v16;
  *(void *)(a1 + 80) = v17;
  *(unsigned char *)(a1 + 88) = v10 & 1;
LABEL_11:
  int v21 = *(unsigned __int8 *)(a2 + 120);
  if (v21 == 255)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  }
  else
  {
    char v22 = v21 & 1;
    uint64_t v23 = *(void *)(a2 + 96);
    uint64_t v24 = *(void *)(a2 + 104);
    uint64_t v25 = *(void *)(a2 + 112);
    sub_1B5904B8C(v23, v24, v25, v21 & 1);
    *(void *)(a1 + 96) = v23;
    *(void *)(a1 + 104) = v24;
    *(void *)(a1 + 112) = v25;
    *(unsigned char *)(a1 + 120) = v22;
  }
  int v26 = *(unsigned __int8 *)(a2 + 152);
  if (v26 == 255)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  }
  else
  {
    char v27 = v26 & 1;
    uint64_t v28 = *(void *)(a2 + 128);
    uint64_t v29 = *(void *)(a2 + 136);
    uint64_t v30 = *(void *)(a2 + 144);
    sub_1B5904B8C(v28, v29, v30, v26 & 1);
    *(void *)(a1 + 128) = v28;
    *(void *)(a1 + 136) = v29;
    *(void *)(a1 + 144) = v30;
    *(unsigned char *)(a1 + 152) = v27;
  }
  return a1;
}

uint64_t assignWithCopy for FontModifier(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) <= 0xFDu)
  {
    if (v4 <= 0xFD)
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      sub_1B5904B60(*(void *)a2, v11, v12, v4);
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = *(void *)(a1 + 16);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      unsigned __int8 v16 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v4;
      sub_1B5904A88(v13, v14, v15, v16);
    }
    else
    {
      sub_1B590DA50(a1);
      long long v6 = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 9) = v6;
    }
  }
  else if (v4 <= 0xFD)
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    uint64_t v9 = *((void *)a2 + 2);
    sub_1B5904B60(*(void *)a2, v8, v9, v4);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    long long v5 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v5;
  }
  uint64_t v17 = (long long *)(a1 + 32);
  uint64_t v18 = a2 + 2;
  uint64_t v19 = *((unsigned __int8 *)a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 254)
  {
    if (v19 == 254)
    {
      long long v20 = *v18;
      long long v21 = a2[3];
      long long v22 = a2[5];
      *(_OWORD *)(a1 + 64) = a2[4];
      *(_OWORD *)(a1 + 80) = v22;
      *uint64_t v17 = v20;
      *(_OWORD *)(a1 + 48) = v21;
      long long v23 = a2[6];
      long long v24 = a2[7];
      long long v25 = a2[8];
      *(_OWORD *)(a1 + 137) = *(long long *)((char *)a2 + 137);
      *(_OWORD *)(a1 + 112) = v24;
      *(_OWORD *)(a1 + 128) = v25;
      *(_OWORD *)(a1 + 96) = v23;
      return a1;
    }
    unsigned int v32 = *((unsigned __int8 *)a2 + 56);
    if (v32 <= 0xFD)
    {
      uint64_t v36 = *((void *)a2 + 4);
      uint64_t v37 = *((void *)a2 + 5);
      uint64_t v38 = *((void *)a2 + 6);
      sub_1B591DF88(v36, v37, v38, *((unsigned char *)a2 + 56));
      *(void *)(a1 + 32) = v36;
      *(void *)(a1 + 40) = v37;
      *(void *)(a1 + 48) = v38;
      *(unsigned char *)(a1 + 56) = v32;
    }
    else
    {
      long long v33 = *v18;
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *uint64_t v17 = v33;
    }
    int v39 = *((unsigned __int8 *)a2 + 88);
    if (v39 == 255)
    {
      long long v40 = a2[4];
      *(_OWORD *)(a1 + 73) = *(long long *)((char *)a2 + 73);
      *(_OWORD *)(a1 + 64) = v40;
    }
    else
    {
      char v42 = v39 & 1;
      uint64_t v43 = *((void *)a2 + 8);
      uint64_t v44 = *((void *)a2 + 9);
      uint64_t v45 = *((void *)a2 + 10);
      sub_1B5904B8C(v43, v44, v45, v39 & 1);
      *(void *)(a1 + 64) = v43;
      *(void *)(a1 + 72) = v44;
      *(void *)(a1 + 80) = v45;
      *(unsigned char *)(a1 + 88) = v42;
    }
    int v46 = *((unsigned __int8 *)a2 + 120);
    if (v46 == 255)
    {
      long long v47 = a2[6];
      *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
      *(_OWORD *)(a1 + 96) = v47;
    }
    else
    {
      char v48 = v46 & 1;
      uint64_t v49 = *((void *)a2 + 12);
      uint64_t v50 = *((void *)a2 + 13);
      uint64_t v51 = *((void *)a2 + 14);
      sub_1B5904B8C(v49, v50, v51, v46 & 1);
      *(void *)(a1 + 96) = v49;
      *(void *)(a1 + 104) = v50;
      *(void *)(a1 + 112) = v51;
      *(unsigned char *)(a1 + 120) = v48;
    }
    int v52 = *((unsigned __int8 *)a2 + 152);
    if (v52 == 255)
    {
      long long v53 = a2[8];
      *(_OWORD *)(a1 + 137) = *(long long *)((char *)a2 + 137);
      *(_OWORD *)(a1 + 128) = v53;
      return a1;
    }
LABEL_50:
    char v102 = v52 & 1;
    uint64_t v103 = *((void *)a2 + 16);
    uint64_t v104 = *((void *)a2 + 17);
    uint64_t v105 = *((void *)a2 + 18);
    sub_1B5904B8C(v103, v104, v105, v52 & 1);
    *(void *)(a1 + 128) = v103;
    *(void *)(a1 + 136) = v104;
    *(void *)(a1 + 144) = v105;
    *(unsigned char *)(a1 + 152) = v102;
    return a1;
  }
  if (v19 == 254)
  {
    sub_1B59496EC(a1 + 32);
    long long v26 = a2[5];
    long long v28 = *v18;
    long long v27 = a2[3];
    *(_OWORD *)(a1 + 64) = a2[4];
    *(_OWORD *)(a1 + 80) = v26;
    *uint64_t v17 = v28;
    *(_OWORD *)(a1 + 48) = v27;
    long long v30 = a2[7];
    long long v29 = a2[8];
    long long v31 = a2[6];
    *(_OWORD *)(a1 + 137) = *(long long *)((char *)a2 + 137);
    *(_OWORD *)(a1 + 112) = v30;
    *(_OWORD *)(a1 + 128) = v29;
    *(_OWORD *)(a1 + 96) = v31;
    return a1;
  }
  unsigned int v34 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v34 <= 0xFD)
    {
      uint64_t v57 = *((void *)a2 + 4);
      uint64_t v58 = *((void *)a2 + 5);
      uint64_t v59 = *((void *)a2 + 6);
      sub_1B591DF88(v57, v58, v59, *((unsigned char *)a2 + 56));
      uint64_t v60 = *(void *)(a1 + 32);
      uint64_t v61 = *(void *)(a1 + 40);
      uint64_t v62 = *(void *)(a1 + 48);
      *(void *)(a1 + 32) = v57;
      *(void *)(a1 + 40) = v58;
      *(void *)(a1 + 48) = v59;
      char v63 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v34;
      sub_1B591DF0C(v60, v61, v62, v63);
    }
    else
    {
      sub_1B59316FC(a1 + 32);
      long long v41 = *(long long *)((char *)a2 + 41);
      *uint64_t v17 = *v18;
      *(_OWORD *)(a1 + 41) = v41;
    }
  }
  else if (v34 <= 0xFD)
  {
    uint64_t v54 = *((void *)a2 + 4);
    uint64_t v55 = *((void *)a2 + 5);
    uint64_t v56 = *((void *)a2 + 6);
    sub_1B591DF88(v54, v55, v56, *((unsigned char *)a2 + 56));
    *(void *)(a1 + 32) = v54;
    *(void *)(a1 + 40) = v55;
    *(void *)(a1 + 48) = v56;
    *(unsigned char *)(a1 + 56) = v34;
  }
  else
  {
    long long v35 = *v18;
    *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
    *uint64_t v17 = v35;
  }
  char v64 = (long long *)(a1 + 64);
  uint64_t v65 = a2 + 4;
  int v66 = *((unsigned __int8 *)a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v66 == 255)
    {
      long long v68 = *v65;
      *(_OWORD *)(a1 + 73) = *(long long *)((char *)a2 + 73);
      long long *v64 = v68;
    }
    else
    {
      char v77 = v66 & 1;
      uint64_t v78 = *((void *)a2 + 8);
      uint64_t v79 = *((void *)a2 + 9);
      uint64_t v80 = *((void *)a2 + 10);
      sub_1B5904B8C(v78, v79, v80, v66 & 1);
      *(void *)(a1 + 64) = v78;
      *(void *)(a1 + 72) = v79;
      *(void *)(a1 + 80) = v80;
      *(unsigned char *)(a1 + 88) = v77;
    }
  }
  else if (v66 == 255)
  {
    sub_1B5908FC0(a1 + 64, &qword_1E9D640F0);
    long long v67 = *(long long *)((char *)a2 + 73);
    long long *v64 = *v65;
    *(_OWORD *)(a1 + 73) = v67;
  }
  else
  {
    char v69 = v66 & 1;
    uint64_t v70 = *((void *)a2 + 8);
    uint64_t v71 = *((void *)a2 + 9);
    uint64_t v72 = *((void *)a2 + 10);
    sub_1B5904B8C(v70, v71, v72, v66 & 1);
    uint64_t v73 = *(void *)(a1 + 64);
    uint64_t v74 = *(void *)(a1 + 72);
    uint64_t v75 = *(void *)(a1 + 80);
    char v76 = *(unsigned char *)(a1 + 88);
    *(void *)(a1 + 64) = v70;
    *(void *)(a1 + 72) = v71;
    *(void *)(a1 + 80) = v72;
    *(unsigned char *)(a1 + 88) = v69;
    sub_1B5904AB4(v73, v74, v75, v76);
  }
  uint64_t v81 = (long long *)(a1 + 96);
  __int16 v82 = a2 + 6;
  int v83 = *((unsigned __int8 *)a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) == 255)
  {
    if (v83 == 255)
    {
      long long v85 = *v82;
      *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
      *uint64_t v81 = v85;
    }
    else
    {
      char v94 = v83 & 1;
      uint64_t v95 = *((void *)a2 + 12);
      uint64_t v96 = *((void *)a2 + 13);
      uint64_t v97 = *((void *)a2 + 14);
      sub_1B5904B8C(v95, v96, v97, v83 & 1);
      *(void *)(a1 + 96) = v95;
      *(void *)(a1 + 104) = v96;
      *(void *)(a1 + 112) = v97;
      *(unsigned char *)(a1 + 120) = v94;
    }
  }
  else if (v83 == 255)
  {
    sub_1B5908FC0(a1 + 96, &qword_1E9D640F0);
    long long v84 = *(long long *)((char *)a2 + 105);
    *uint64_t v81 = *v82;
    *(_OWORD *)(a1 + 105) = v84;
  }
  else
  {
    char v86 = v83 & 1;
    uint64_t v87 = *((void *)a2 + 12);
    uint64_t v88 = *((void *)a2 + 13);
    uint64_t v89 = *((void *)a2 + 14);
    sub_1B5904B8C(v87, v88, v89, v83 & 1);
    uint64_t v90 = *(void *)(a1 + 96);
    uint64_t v91 = *(void *)(a1 + 104);
    uint64_t v92 = *(void *)(a1 + 112);
    char v93 = *(unsigned char *)(a1 + 120);
    *(void *)(a1 + 96) = v87;
    *(void *)(a1 + 104) = v88;
    *(void *)(a1 + 112) = v89;
    *(unsigned char *)(a1 + 120) = v86;
    sub_1B5904AB4(v90, v91, v92, v93);
  }
  uint64_t v98 = (long long *)(a1 + 128);
  uint64_t v99 = a2 + 8;
  int v52 = *((unsigned __int8 *)a2 + 152);
  if (*(unsigned __int8 *)(a1 + 152) == 255)
  {
    if (v52 == 255)
    {
      long long v101 = *v99;
      *(_OWORD *)(a1 + 137) = *(long long *)((char *)a2 + 137);
      *uint64_t v98 = v101;
      return a1;
    }
    goto LABEL_50;
  }
  if (v52 == 255)
  {
    sub_1B5908FC0(a1 + 128, &qword_1E9D640F0);
    long long v100 = *(long long *)((char *)a2 + 137);
    *uint64_t v98 = *v99;
    *(_OWORD *)(a1 + 137) = v100;
  }
  else
  {
    char v106 = v52 & 1;
    uint64_t v107 = *((void *)a2 + 16);
    uint64_t v108 = *((void *)a2 + 17);
    uint64_t v109 = *((void *)a2 + 18);
    sub_1B5904B8C(v107, v108, v109, v52 & 1);
    uint64_t v110 = *(void *)(a1 + 128);
    uint64_t v111 = *(void *)(a1 + 136);
    uint64_t v112 = *(void *)(a1 + 144);
    char v113 = *(unsigned char *)(a1 + 152);
    *(void *)(a1 + 128) = v107;
    *(void *)(a1 + 136) = v108;
    *(void *)(a1 + 144) = v109;
    *(unsigned char *)(a1 + 152) = v106;
    sub_1B5904AB4(v110, v111, v112, v113);
  }
  return a1;
}

uint64_t sub_1B59496EC(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy153_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for FontModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 > 0xFD)
  {
    sub_1B590DA50(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5904A88(v7, v8, v9, v4);
LABEL_6:
  uint64_t v10 = (_OWORD *)(a1 + 32);
  uint64_t v11 = (_OWORD *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 88) == 254)
  {
LABEL_9:
    long long v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
    long long v14 = *(_OWORD *)(a2 + 48);
    *uint64_t v10 = *v11;
    *(_OWORD *)(a1 + 48) = v14;
    long long v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    return a1;
  }
  uint64_t v12 = *(unsigned __int8 *)(a2 + 88);
  if (v12 == 254)
  {
    sub_1B59496EC(a1 + 32);
    goto LABEL_9;
  }
  unsigned int v16 = *(unsigned __int8 *)(a1 + 56);
  if (v16 > 0xFD) {
    goto LABEL_13;
  }
  unsigned int v17 = *(unsigned __int8 *)(a2 + 56);
  if (v17 > 0xFD)
  {
    sub_1B59316FC(a1 + 32);
LABEL_13:
    *uint64_t v10 = *v11;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_15;
  }
  uint64_t v18 = *(void *)(a2 + 48);
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v20 = *(void *)(a1 + 40);
  uint64_t v21 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v18;
  *(unsigned char *)(a1 + 56) = v17;
  sub_1B591DF0C(v19, v20, v21, v16);
LABEL_15:
  int v22 = *(unsigned __int8 *)(a1 + 88);
  if (v22 == 255)
  {
LABEL_18:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    goto LABEL_20;
  }
  if (v12 == 255)
  {
    sub_1B5908FC0(a1 + 64, &qword_1E9D640F0);
    goto LABEL_18;
  }
  char v23 = v22 & 1;
  uint64_t v24 = *(void *)(a2 + 80);
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v26 = *(void *)(a1 + 72);
  uint64_t v27 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v24;
  *(unsigned char *)(a1 + 88) = v12 & 1;
  sub_1B5904AB4(v25, v26, v27, v23);
LABEL_20:
  int v28 = *(unsigned __int8 *)(a1 + 120);
  if (v28 != 255)
  {
    int v29 = *(unsigned __int8 *)(a2 + 120);
    if (v29 != 255)
    {
      char v30 = v28 & 1;
      uint64_t v31 = *(void *)(a2 + 112);
      uint64_t v32 = *(void *)(a1 + 96);
      uint64_t v33 = *(void *)(a1 + 104);
      uint64_t v34 = *(void *)(a1 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(void *)(a1 + 112) = v31;
      *(unsigned char *)(a1 + 120) = v29 & 1;
      sub_1B5904AB4(v32, v33, v34, v30);
      goto LABEL_25;
    }
    sub_1B5908FC0(a1 + 96, &qword_1E9D640F0);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
LABEL_25:
  int v35 = *(unsigned __int8 *)(a1 + 152);
  if (v35 != 255)
  {
    int v36 = *(unsigned __int8 *)(a2 + 152);
    if (v36 != 255)
    {
      char v37 = v35 & 1;
      uint64_t v38 = *(void *)(a2 + 144);
      uint64_t v39 = *(void *)(a1 + 128);
      uint64_t v40 = *(void *)(a1 + 136);
      uint64_t v41 = *(void *)(a1 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(void *)(a1 + 144) = v38;
      *(unsigned char *)(a1 + 152) = v36 & 1;
      sub_1B5904AB4(v39, v40, v41, v37);
      return a1;
    }
    sub_1B5908FC0(a1 + 128, &qword_1E9D640F0);
  }
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  return a1;
}

uint64_t getEnumTagSinglePayload for FontModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 153)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 88);
  int v4 = v3 ^ 0xFF;
  if ((int)(v3 ^ 0xFF) <= 1) {
    int v4 = 1;
  }
  int v5 = v4 - 2;
  if (v3 <= 1) {
    int v6 = -1;
  }
  else {
    int v6 = v5;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FontModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 152) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 153) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 153) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 88) = -2 - a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontModifier()
{
  return &type metadata for FontModifier;
}

void destroy for SystemFontOptions(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 <= 0xFD) {
    sub_1B591DF0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v2);
  }
  int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 != 255) {
    sub_1B5904AB4(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v3 & 1);
  }
  int v4 = *(unsigned __int8 *)(a1 + 88);
  if (v4 != 255) {
    sub_1B5904AB4(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v4 & 1);
  }
  int v5 = *(unsigned __int8 *)(a1 + 120);
  if (v5 != 255)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    uint64_t v7 = *(void *)(a1 + 104);
    uint64_t v8 = *(void *)(a1 + 112);
    sub_1B5904AB4(v6, v7, v8, v5 & 1);
  }
}

uint64_t initializeWithCopy for SystemFontOptions(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 <= 0xFD)
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    sub_1B591DF88(*(void *)a2, v6, v7, v4);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  else
  {
    char v9 = v8 & 1;
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 48);
    sub_1B5904B8C(v10, v11, v12, v8 & 1);
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 56) = v9;
  }
  int v13 = *(unsigned __int8 *)(a2 + 88);
  if (v13 == 255)
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  else
  {
    char v14 = v13 & 1;
    uint64_t v15 = *(void *)(a2 + 64);
    uint64_t v16 = *(void *)(a2 + 72);
    uint64_t v17 = *(void *)(a2 + 80);
    sub_1B5904B8C(v15, v16, v17, v13 & 1);
    *(void *)(a1 + 64) = v15;
    *(void *)(a1 + 72) = v16;
    *(void *)(a1 + 80) = v17;
    *(unsigned char *)(a1 + 88) = v14;
  }
  int v18 = *(unsigned __int8 *)(a2 + 120);
  if (v18 == 255)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  }
  else
  {
    char v19 = v18 & 1;
    uint64_t v20 = *(void *)(a2 + 96);
    uint64_t v21 = *(void *)(a2 + 104);
    uint64_t v22 = *(void *)(a2 + 112);
    sub_1B5904B8C(v20, v21, v22, v18 & 1);
    *(void *)(a1 + 96) = v20;
    *(void *)(a1 + 104) = v21;
    *(void *)(a1 + 112) = v22;
    *(unsigned char *)(a1 + 120) = v19;
  }
  return a1;
}

uint64_t assignWithCopy for SystemFontOptions(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) <= 0xFDu)
  {
    if (v4 <= 0xFD)
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      sub_1B591DF88(*(void *)a2, v11, v12, v4);
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = *(void *)(a1 + 16);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      char v16 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v4;
      sub_1B591DF0C(v13, v14, v15, v16);
    }
    else
    {
      sub_1B59316FC(a1);
      long long v6 = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 9) = v6;
    }
  }
  else if (v4 <= 0xFD)
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    uint64_t v9 = *((void *)a2 + 2);
    sub_1B591DF88(*(void *)a2, v8, v9, v4);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    long long v5 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v5;
  }
  uint64_t v17 = (long long *)(a1 + 32);
  int v18 = a2 + 2;
  int v19 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v19 == 255)
    {
      long long v21 = *v18;
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *uint64_t v17 = v21;
    }
    else
    {
      char v30 = v19 & 1;
      uint64_t v31 = *((void *)a2 + 4);
      uint64_t v32 = *((void *)a2 + 5);
      uint64_t v33 = *((void *)a2 + 6);
      sub_1B5904B8C(v31, v32, v33, v19 & 1);
      *(void *)(a1 + 32) = v31;
      *(void *)(a1 + 40) = v32;
      *(void *)(a1 + 48) = v33;
      *(unsigned char *)(a1 + 56) = v30;
    }
  }
  else if (v19 == 255)
  {
    sub_1B5908FC0(a1 + 32, &qword_1E9D640F0);
    long long v20 = *(long long *)((char *)a2 + 41);
    *uint64_t v17 = *v18;
    *(_OWORD *)(a1 + 41) = v20;
  }
  else
  {
    char v22 = v19 & 1;
    uint64_t v23 = *((void *)a2 + 4);
    uint64_t v24 = *((void *)a2 + 5);
    uint64_t v25 = *((void *)a2 + 6);
    sub_1B5904B8C(v23, v24, v25, v19 & 1);
    uint64_t v26 = *(void *)(a1 + 32);
    uint64_t v27 = *(void *)(a1 + 40);
    uint64_t v28 = *(void *)(a1 + 48);
    char v29 = *(unsigned char *)(a1 + 56);
    *(void *)(a1 + 32) = v23;
    *(void *)(a1 + 40) = v24;
    *(void *)(a1 + 48) = v25;
    *(unsigned char *)(a1 + 56) = v22;
    sub_1B5904AB4(v26, v27, v28, v29);
  }
  uint64_t v34 = (long long *)(a1 + 64);
  int v35 = a2 + 4;
  int v36 = *((unsigned __int8 *)a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v36 == 255)
    {
      long long v38 = *v35;
      *(_OWORD *)(a1 + 73) = *(long long *)((char *)a2 + 73);
      *uint64_t v34 = v38;
    }
    else
    {
      char v47 = v36 & 1;
      uint64_t v48 = *((void *)a2 + 8);
      uint64_t v49 = *((void *)a2 + 9);
      uint64_t v50 = *((void *)a2 + 10);
      sub_1B5904B8C(v48, v49, v50, v36 & 1);
      *(void *)(a1 + 64) = v48;
      *(void *)(a1 + 72) = v49;
      *(void *)(a1 + 80) = v50;
      *(unsigned char *)(a1 + 88) = v47;
    }
  }
  else if (v36 == 255)
  {
    sub_1B5908FC0(a1 + 64, &qword_1E9D640F0);
    long long v37 = *(long long *)((char *)a2 + 73);
    *uint64_t v34 = *v35;
    *(_OWORD *)(a1 + 73) = v37;
  }
  else
  {
    char v39 = v36 & 1;
    uint64_t v40 = *((void *)a2 + 8);
    uint64_t v41 = *((void *)a2 + 9);
    uint64_t v42 = *((void *)a2 + 10);
    sub_1B5904B8C(v40, v41, v42, v36 & 1);
    uint64_t v43 = *(void *)(a1 + 64);
    uint64_t v44 = *(void *)(a1 + 72);
    uint64_t v45 = *(void *)(a1 + 80);
    char v46 = *(unsigned char *)(a1 + 88);
    *(void *)(a1 + 64) = v40;
    *(void *)(a1 + 72) = v41;
    *(void *)(a1 + 80) = v42;
    *(unsigned char *)(a1 + 88) = v39;
    sub_1B5904AB4(v43, v44, v45, v46);
  }
  uint64_t v51 = (long long *)(a1 + 96);
  int v52 = a2 + 6;
  int v53 = *((unsigned __int8 *)a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) == 255)
  {
    if (v53 == 255)
    {
      long long v55 = *v52;
      *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
      *uint64_t v51 = v55;
    }
    else
    {
      char v64 = v53 & 1;
      uint64_t v65 = *((void *)a2 + 12);
      uint64_t v66 = *((void *)a2 + 13);
      uint64_t v67 = *((void *)a2 + 14);
      sub_1B5904B8C(v65, v66, v67, v53 & 1);
      *(void *)(a1 + 96) = v65;
      *(void *)(a1 + 104) = v66;
      *(void *)(a1 + 112) = v67;
      *(unsigned char *)(a1 + 120) = v64;
    }
  }
  else if (v53 == 255)
  {
    sub_1B5908FC0(a1 + 96, &qword_1E9D640F0);
    long long v54 = *(long long *)((char *)a2 + 105);
    *uint64_t v51 = *v52;
    *(_OWORD *)(a1 + 105) = v54;
  }
  else
  {
    char v56 = v53 & 1;
    uint64_t v57 = *((void *)a2 + 12);
    uint64_t v58 = *((void *)a2 + 13);
    uint64_t v59 = *((void *)a2 + 14);
    sub_1B5904B8C(v57, v58, v59, v53 & 1);
    uint64_t v60 = *(void *)(a1 + 96);
    uint64_t v61 = *(void *)(a1 + 104);
    uint64_t v62 = *(void *)(a1 + 112);
    char v63 = *(unsigned char *)(a1 + 120);
    *(void *)(a1 + 96) = v57;
    *(void *)(a1 + 104) = v58;
    *(void *)(a1 + 112) = v59;
    *(unsigned char *)(a1 + 120) = v56;
    sub_1B5904AB4(v60, v61, v62, v63);
  }
  return a1;
}

__n128 __swift_memcpy121_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for SystemFontOptions(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 > 0xFD)
  {
    sub_1B59316FC(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B591DF0C(v7, v8, v9, v4);
LABEL_6:
  int v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 == 255)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_11;
  }
  int v11 = *(unsigned __int8 *)(a2 + 56);
  if (v11 == 255)
  {
    sub_1B5908FC0(a1 + 32, &qword_1E9D640F0);
    goto LABEL_9;
  }
  char v12 = v10 & 1;
  uint64_t v13 = *(void *)(a2 + 48);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v13;
  *(unsigned char *)(a1 + 56) = v11 & 1;
  sub_1B5904AB4(v14, v15, v16, v12);
LABEL_11:
  int v17 = *(unsigned __int8 *)(a1 + 88);
  if (v17 == 255)
  {
LABEL_14:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    goto LABEL_16;
  }
  int v18 = *(unsigned __int8 *)(a2 + 88);
  if (v18 == 255)
  {
    sub_1B5908FC0(a1 + 64, &qword_1E9D640F0);
    goto LABEL_14;
  }
  char v19 = v17 & 1;
  uint64_t v20 = *(void *)(a2 + 80);
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v22 = *(void *)(a1 + 72);
  uint64_t v23 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v20;
  *(unsigned char *)(a1 + 88) = v18 & 1;
  sub_1B5904AB4(v21, v22, v23, v19);
LABEL_16:
  int v24 = *(unsigned __int8 *)(a1 + 120);
  if (v24 != 255)
  {
    int v25 = *(unsigned __int8 *)(a2 + 120);
    if (v25 != 255)
    {
      char v26 = v24 & 1;
      uint64_t v27 = *(void *)(a2 + 112);
      uint64_t v28 = *(void *)(a1 + 96);
      uint64_t v29 = *(void *)(a1 + 104);
      uint64_t v30 = *(void *)(a1 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(void *)(a1 + 112) = v27;
      *(unsigned char *)(a1 + 120) = v25 & 1;
      sub_1B5904AB4(v28, v29, v30, v26);
      return a1;
    }
    sub_1B5908FC0(a1 + 96, &qword_1E9D640F0);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemFontOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 121)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemFontOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 121) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemFontOptions()
{
  return &type metadata for SystemFontOptions;
}

uint64_t sub_1B594A2BC(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t result = MEMORY[0x1F40FAF48]();
      break;
    case 2:
      uint64_t result = MEMORY[0x1F40FB068]();
      break;
    case 3:
      uint64_t result = MEMORY[0x1F40FB078]();
      break;
    case 4:
      uint64_t result = MEMORY[0x1F40FB130]();
      break;
    case 5:
      uint64_t result = MEMORY[0x1F40FAE68]();
      break;
    case 6:
      uint64_t result = MEMORY[0x1F40FAF00]();
      break;
    case 7:
      uint64_t result = MEMORY[0x1F40FB0D0]();
      break;
    case 8:
      uint64_t result = MEMORY[0x1F40FB120]();
      break;
    case 9:
      uint64_t result = MEMORY[0x1F40FB0E8]();
      break;
    case 10:
      uint64_t result = MEMORY[0x1F40FB108]();
      break;
    default:
      uint64_t result = MEMORY[0x1F40FAE58]();
      break;
  }
  return result;
}

uint64_t sub_1B594A338(char a1)
{
  return *(void *)&aSize_3[8 * a1];
}

uint64_t sub_1B594A358(char *a1, char *a2)
{
  return sub_1B59EE260(*a1, *a2);
}

uint64_t sub_1B594A364()
{
  return sub_1B59F0EC0();
}

uint64_t sub_1B594A36C()
{
  return sub_1B59F3AAC();
}

uint64_t sub_1B594A374()
{
  return sub_1B59F643C();
}

uint64_t sub_1B594A37C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B594DEF8();
  *a1 = result;
  return result;
}

uint64_t sub_1B594A3AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B594A338(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B594A3D8()
{
  return sub_1B594A338(*v0);
}

uint64_t sub_1B594A3E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B594DEF8();
  *a1 = result;
  return result;
}

uint64_t sub_1B594A408(uint64_t a1)
{
  unint64_t v2 = sub_1B594D254();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B594A444(uint64_t a1)
{
  unint64_t v2 = sub_1B594D254();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B594A480@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D641D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B594D254();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v37 = v5;
  long long v38 = a1;
  LOBYTE(v44) = 0;
  sub_1B59358E8();
  uint64_t v9 = v7;
  sub_1B5A1C5B8();
  uint64_t v10 = v52;
  uint64_t v42 = v51;
  uint64_t v11 = v53;
  int v12 = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D640F0);
  LOBYTE(v44) = 0;
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  sub_1B591DF74(v42, v10, v11, v12);
  sub_1B59095C8(&qword_1E9D641E0, &qword_1E9D640F0);
  uint64_t v35 = v4;
  int v36 = v9;
  sub_1B5A1C5B8();
  int v70 = v12;
  uint64_t v13 = v52;
  uint64_t v43 = v51;
  uint64_t v14 = v53;
  int v15 = v54;
  LOBYTE(v44) = 1;
  sub_1B594CD1C(v51, v52, v53, v54);
  uint64_t v17 = v35;
  uint64_t v16 = v36;
  sub_1B5A1C5B8();
  int v33 = v15;
  uint64_t v31 = v13;
  uint64_t v32 = v14;
  uint64_t v19 = v51;
  uint64_t v18 = v52;
  uint64_t v20 = v53;
  char v71 = 2;
  int v34 = v54;
  sub_1B594CD1C(v51, v52, v53, v54);
  sub_1B5A1C5B8();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v17);
  int v36 = (char *)*((void *)&v67 + 1);
  uint64_t v37 = v67;
  uint64_t v35 = v68;
  HIDWORD(v30) = v69;
  *(void *)&long long v44 = v42;
  *((void *)&v44 + 1) = v40;
  *(void *)&long long v45 = v39;
  BYTE8(v45) = v70;
  uint64_t v22 = v31;
  uint64_t v21 = v32;
  *(void *)&long long v46 = v43;
  *((void *)&v46 + 1) = v31;
  *(void *)&long long v47 = v32;
  LOBYTE(v17) = v33;
  LOBYTE(v10) = v34;
  BYTE8(v47) = v33;
  *(void *)&long long v48 = v19;
  *((void *)&v48 + 1) = v18;
  *(void *)&long long v49 = v20;
  BYTE8(v49) = v34;
  v50[0] = v67;
  *(void *)&v50[1] = v68;
  BYTE8(v50[1]) = v69;
  sub_1B594D2A8((uint64_t)&v44, (void (*)(void, void, void, void))sub_1B591DF74, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B594CD1C);
  sub_1B594CDC0(v19, v18, v20, v10);
  sub_1B594CDC0(v43, v22, v21, v17);
  uint64_t v23 = v42;
  uint64_t v25 = v39;
  uint64_t v24 = v40;
  LOBYTE(v10) = v70;
  sub_1B59325C0(v42, v40, v39, v70);
  long long v26 = v49;
  uint64_t v27 = v41;
  v41[4] = v48;
  v27[5] = v26;
  v27[6] = v50[0];
  *(_OWORD *)((char *)v27 + 105) = *(_OWORD *)((char *)v50 + 9);
  long long v28 = v45;
  *uint64_t v27 = v44;
  v27[1] = v28;
  long long v29 = v47;
  void v27[2] = v46;
  v27[3] = v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  uint64_t v51 = v23;
  uint64_t v52 = v24;
  uint64_t v53 = v25;
  unsigned __int8 v54 = v10;
  uint64_t v55 = v43;
  uint64_t v56 = v31;
  uint64_t v57 = v32;
  char v58 = v33;
  uint64_t v59 = v19;
  uint64_t v60 = v18;
  uint64_t v61 = v20;
  char v62 = v34;
  uint64_t v63 = v37;
  char v64 = v36;
  uint64_t v65 = v35;
  char v66 = BYTE4(v30);
  return sub_1B594D2A8((uint64_t)&v51, (void (*)(void, void, void, void))sub_1B59325C0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B594CDC0);
}

uint64_t sub_1B594AA30(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64150);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)v1;
  uint64_t v42 = *(void *)(v1 + 8);
  uint64_t v43 = v6;
  uint64_t v44 = *(void *)(v1 + 16);
  unsigned int v7 = *(unsigned __int8 *)(v1 + 24);
  int v8 = *(unsigned __int8 *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v11 = *(void *)(v1 + 80);
  int v51 = *(unsigned __int8 *)(v1 + 88);
  uint64_t v12 = *(void *)(v1 + 96);
  uint64_t v13 = *(void *)(v1 + 104);
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  uint64_t v46 = *(void *)(v1 + 112);
  long long v47 = v5;
  int v45 = *(unsigned __int8 *)(v1 + 120);
  uint64_t v48 = v13;
  if (v8 == 255)
  {
    uint64_t v23 = a1;
    uint64_t v24 = v10;
LABEL_4:
    if (v7 <= 0xFD)
    {
      uint64_t v17 = v24;
      uint64_t v18 = v42;
      uint64_t v19 = v43;
      uint64_t v52 = v43;
      uint64_t v53 = v42;
      uint64_t v20 = v44;
      uint64_t v54 = v44;
      char v55 = v7;
      sub_1B591DF88(v43, v42, v44, v7);
      sub_1B5963534(v23);
      uint64_t v21 = v19;
      uint64_t v24 = v17;
      uint64_t v13 = v48;
      sub_1B59325C0(v21, v18, v20, v7);
    }
  }
  else
  {
    uint64_t v41 = v9;
    uint64_t v14 = *(void *)(v1 + 32);
    uint64_t v15 = *(void *)(v1 + 40);
    uint64_t v16 = *(void *)(v1 + 48);
    sub_1B5904B8C(v14, v15, v16, v8 & 1);
    sub_1B59B3EBC(a1, v14, v15, v16, v8 & 1);
    sub_1B594CDC0(v14, v15, v16, v8);
    char v22 = sub_1B5946154();
    uint64_t v13 = v48;
    uint64_t v23 = a1;
    uint64_t v24 = v10;
    uint64_t v9 = v41;
    switch(v22)
    {
      case 1:
        objc_msgSend(self, sel_buttonFontSize);
        break;
      case 2:
        objc_msgSend(self, sel_smallSystemFontSize);
        break;
      case 3:
        objc_msgSend(self, sel_systemFontSize);
        break;
      case 4:
        goto LABEL_4;
      default:
        objc_msgSend(self, sel_labelFontSize);
        break;
    }
  }
  uint64_t v25 = v46;
  int v26 = v45;
  if (v51 != 255)
  {
    char v27 = v51 & 1;
    uint64_t v28 = v49;
    sub_1B5904B8C(v24, v9, v49, v51 & 1);
    sub_1B59B3EBC(v23, v24, v9, v28, v27);
    sub_1B594CDC0(v24, v9, v49, v51);
  }
  if (v26 != 255)
  {
    uint64_t v29 = v23;
    uint64_t v30 = v50;
    sub_1B5904B8C(v50, v13, v25, v26 & 1);
    sub_1B59B3EBC(v29, v30, v13, v25, v26 & 1);
    sub_1B594CDC0(v50, v13, v25, v26);
  }
  char v31 = sub_1B594CC84();
  if (v31 == 9) {
    char v32 = 5;
  }
  else {
    char v32 = v31;
  }
  char v33 = sub_1B5946154();
  if (v33 == 4) {
    char v34 = 0;
  }
  else {
    char v34 = v33;
  }
  uint64_t v35 = (uint64_t)v47;
  switch(v32)
  {
    case 1:
      sub_1B5A1B1E8();
      break;
    case 2:
      sub_1B5A1B218();
      break;
    case 3:
      sub_1B5A1B228();
      break;
    case 4:
      sub_1B5A1B238();
      break;
    case 5:
      sub_1B5A1B248();
      break;
    case 6:
      sub_1B5A1B258();
      break;
    case 7:
      sub_1B5A1B1F8();
      break;
    case 8:
      sub_1B5A1B1D8();
      break;
    default:
      sub_1B5A1B208();
      break;
  }
  switch(v34)
  {
    case 1:
      int v36 = (unsigned int *)MEMORY[0x1E4F3E070];
      break;
    case 2:
      int v36 = (unsigned int *)MEMORY[0x1E4F3E090];
      break;
    case 3:
      int v36 = (unsigned int *)MEMORY[0x1E4F3E078];
      break;
    default:
      int v36 = (unsigned int *)MEMORY[0x1E4F3E088];
      break;
  }
  uint64_t v37 = *v36;
  uint64_t v38 = sub_1B5A1B1C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v35, v37, v38);
  sub_1B5A1B1C8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v35, 0, 1, v38);
  uint64_t v39 = sub_1B5A1B268();
  sub_1B5908FC0(v35, &qword_1E9D64150);
  return v39;
}

uint64_t sub_1B594B010(char a1)
{
  if (a1) {
    return 0x6D6574737973;
  }
  else {
    return 0x656C797473;
  }
}

uint64_t sub_1B594B040@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B594A480(a1, a2);
}

uint64_t sub_1B594B058(char *a1, char *a2)
{
  return sub_1B59EF7BC(*a1, *a2);
}

uint64_t sub_1B594B064()
{
  return sub_1B59F0F2C();
}

uint64_t sub_1B594B06C()
{
  return sub_1B59F47B8();
}

uint64_t sub_1B594B074()
{
  return sub_1B59F5598();
}

uint64_t sub_1B594B07C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B594B0DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B594B010(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B594B108()
{
  return sub_1B594B010(*v0);
}

uint64_t sub_1B594B110@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B594B174(uint64_t a1)
{
  unint64_t v2 = sub_1B594CFD0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B594B1B0(uint64_t a1)
{
  unint64_t v2 = sub_1B594CFD0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B594B1EC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D641B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B594CFD0();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v20) = 0;
  sub_1B5904A34();
  sub_1B5A1C5B8();
  long long v8 = v24;
  long long v34 = v24;
  *(void *)&long long v35 = v25;
  BYTE8(v35) = BYTE8(v25);
  char v39 = 1;
  uint64_t v17 = v25;
  int v38 = BYTE8(v25);
  sub_1B5904BDC(v24, *((uint64_t *)&v24 + 1), v25, BYTE8(v25));
  sub_1B594D024();
  sub_1B5A1C5B8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1B594CC08((uint64_t)&v33, (uint64_t)v19);
  sub_1B594CC08((uint64_t)v19, (uint64_t)v36);
  long long v20 = v8;
  uint64_t v9 = v17;
  *(void *)&long long v21 = v17;
  unsigned __int8 v10 = v38;
  BYTE8(v21) = v38;
  sub_1B594CC08((uint64_t)v19, (uint64_t)v22);
  sub_1B594D16C((uint64_t)&v20, (void (*)(void, void, void, void))sub_1B5904BDC, (void (*)(void))sub_1B591DF74, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B594CD1C);
  sub_1B5904B4C(v8, *((uint64_t *)&v8 + 1), v9, v10);
  long long v11 = v22[5];
  uint64_t v12 = v18;
  v18[6] = v22[4];
  v12[7] = v11;
  v12[8] = v23[0];
  *(_OWORD *)((char *)v12 + 137) = *(_OWORD *)((char *)v23 + 9);
  long long v13 = v22[1];
  v12[2] = v22[0];
  uint64_t v12[3] = v13;
  long long v14 = v22[3];
  v12[4] = v22[2];
  _OWORD v12[5] = v14;
  long long v15 = v21;
  _OWORD *v12 = v20;
  v12[1] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  long long v30 = v36[4];
  long long v31 = v36[5];
  v32[0] = v37[0];
  *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)((char *)v37 + 9);
  long long v26 = v36[0];
  long long v27 = v36[1];
  long long v28 = v36[2];
  long long v29 = v36[3];
  long long v24 = v34;
  long long v25 = v35;
  return sub_1B594D16C((uint64_t)&v24, (void (*)(void, void, void, void))sub_1B5904B4C, (void (*)(void))sub_1B59325C0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B594CDC0);
}

uint64_t sub_1B594B598@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)v3;
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t v9 = *(void *)(v3 + 16);
  unsigned int v10 = *(unsigned __int8 *)(v3 + 24);
  sub_1B594CC08(v3 + 32, (uint64_t)v35);
  sub_1B594CC08((uint64_t)v35, (uint64_t)&v36);
  if (sub_1B594CC70((uint64_t)&v36) == 1)
  {
    if (v10 <= 0xFD)
    {
      v33[0] = v7;
      v33[1] = v8;
      void v33[2] = v9;
      char v34 = v10;
      sub_1B5904B60(v7, v8, v9, v10);
      long long v20 = v43;
      StringResolvable.resolved(with:)(a2);
      if (v20)
      {

        sub_1B5904B4C(v7, v8, v9, v10);
        uint64_t v43 = 0;
      }
      else
      {
        uint64_t v43 = 0;
        sub_1B5904B4C(v7, v8, v9, v10);
      }
    }
    char v21 = sub_1B594CCD0();
    if (v21 == 11) {
      char v22 = 6;
    }
    else {
      char v22 = v21;
    }
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1B594A2BC(v22);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64140);
    a3[3] = sub_1B5A1A748();
    sub_1B59095C8(&qword_1E9D64148, &qword_1E9D64140);
    a3[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B5A1B638();
    return swift_release();
  }
  else
  {
    uint64_t v11 = a1[4];
    v23[1] = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    long long v30 = v40;
    long long v31 = v41;
    v32[0] = v42[0];
    *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)((char *)v42 + 9);
    long long v24 = v36;
    uint64_t v25 = v37;
    uint64_t v28 = *((void *)&v38 + 1);
    long long v29 = v39;
    sub_1B594CC08((uint64_t)v35, (uint64_t)v33);
    sub_1B594D2A8((uint64_t)v33, (void (*)(void, void, void, void))sub_1B591DF74, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B594CD1C);
    sub_1B594AA30(a2);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64140);
    uint64_t v12 = sub_1B5A1A748();
    uint64_t v26 = v12;
    _OWORD v23[2] = v11;
    void v23[3] = sub_1B59095C8(&qword_1E9D64148, &qword_1E9D64140);
    uint64_t WitnessTable = swift_getWitnessTable();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
    sub_1B5A1B638();
    uint64_t v14 = swift_release();
    MEMORY[0x1F4188790](v14);
    (*(void (**)(char *, uint64_t *, uint64_t))(v16 + 16))((char *)v23 - v15, boxed_opaque_existential_1, v12);
    uint64_t v17 = sub_1B5A1BA88();
    uint64_t v18 = MEMORY[0x1E4F3EDF8];
    a3[3] = MEMORY[0x1E4F3EE00];
    a3[4] = v18;
    sub_1B594CD34((uint64_t)v35);
    *a3 = v17;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  }
}

uint64_t sub_1B594B998@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B594B598(a1, a2, a3);
}

uint64_t sub_1B594B9B0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B594B1EC(a1, a2);
}

uint64_t sub_1B594B9D4@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B594B9E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B594DF44();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B594BA0C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B594BA18(uint64_t a1)
{
  unint64_t v2 = sub_1B594CF7C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B594BA54(uint64_t a1)
{
  unint64_t v2 = sub_1B594CF7C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B594BA90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B594BBD8(a1, &qword_1E9D641A8, (void (*)(void))sub_1B594CF7C, a2);
}

void sub_1B594BACC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1B594BB0C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B594BB18@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B594BB24(uint64_t a1)
{
  unint64_t v2 = sub_1B594CF28();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B594BB60(uint64_t a1)
{
  unint64_t v2 = sub_1B594CF28();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B594BB9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B594BBD8(a1, &qword_1E9D64198, (void (*)(void))sub_1B594CF28, a2);
}

uint64_t sub_1B594BBD8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v15 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v19 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1B5A1C838();
  if (!v4)
  {
    uint64_t v10 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    sub_1B59095C8((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
    uint64_t v11 = v17;
    char v12 = v18;
    *(_OWORD *)uint64_t v10 = v16;
    *(void *)(v10 + 16) = v11;
    *(unsigned char *)(v10 + 24) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1B594BD90(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1B594BDD0@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B594BDDC@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B594BDE8(uint64_t a1)
{
  unint64_t v2 = sub_1B594CED4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B594BE24(uint64_t a1)
{
  unint64_t v2 = sub_1B594CED4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B594BE60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B594BBD8(a1, &qword_1E9D64188, (void (*)(void))sub_1B594CED4, a2);
}

void sub_1B594BE9C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

void sub_1B594BEDC(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  int v9 = *(unsigned __int8 *)(v4 + 24);
  if (v9 == 255)
  {
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    a4[3] = swift_getOpaqueTypeMetadata2();
    a4[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(a4);
    a3(1, v17, v18);
  }
  else
  {
    uint64_t v11 = *(void *)(v4 + 8);
    uint64_t v12 = *(void *)(v4 + 16);
    uint64_t v13 = *(void *)v4;
    sub_1B590D634(v13, v11, v12, v9 & 1);
    char v14 = sub_1B59B4120(a2, v13, v11, v12, v9 & 1);
    sub_1B590F034(v13, v11, v12, v9);
    if (!v5)
    {
      uint64_t v15 = a1[3];
      uint64_t v16 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v15);
      a4[3] = swift_getOpaqueTypeMetadata2();
      a4[4] = swift_getOpaqueTypeConformance2();
      __swift_allocate_boxed_opaque_existential_1(a4);
      a3(v14 & 1, v15, v16);
    }
  }
}

uint64_t sub_1B594C094@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = swift_getOpaqueTypeMetadata2();
  a2[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B5A1B508();
}

uint64_t sub_1B594C148(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1B594C17C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B594C188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B594DF5C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B594C1B4@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B594C1C0(uint64_t a1)
{
  unint64_t v2 = sub_1B594CE80();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B594C1FC(uint64_t a1)
{
  unint64_t v2 = sub_1B594CE80();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B594C238@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B594C3B8(a1, &qword_1E9D64178, (void (*)(void))sub_1B594CE80, a2);
}

void sub_1B594C274(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1B594C2C0@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B594C2CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B594DF74();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B594C2F8@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B594C304(uint64_t a1)
{
  unint64_t v2 = sub_1B594CE2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B594C340(uint64_t a1)
{
  unint64_t v2 = sub_1B594CE2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B594C37C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B594C3B8(a1, &qword_1E9D64168, (void (*)(void))sub_1B594CE2C, a2);
}

uint64_t sub_1B594C3B8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v15 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v19 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1B5A1C838();
  if (!v4)
  {
    uint64_t v10 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F98);
    sub_1B59095C8((unint64_t *)&qword_1E9D63050, &qword_1E9D62F98);
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
    uint64_t v11 = v17;
    char v12 = v18;
    *(_OWORD *)uint64_t v10 = v16;
    *(void *)(v10 + 16) = v11;
    *(unsigned char *)(v10 + 24) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1B594C570(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1B594C5BC@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B594C5C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B594DF8C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B594C5F4@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B594C600(uint64_t a1)
{
  unint64_t v2 = sub_1B594CDD8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B594C63C(uint64_t a1)
{
  unint64_t v2 = sub_1B594CDD8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B594C678@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B594C3B8(a1, &qword_1E9D64158, (void (*)(void))sub_1B594CDD8, a2);
}

void sub_1B594C6B4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

void sub_1B594C6F4(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, double)@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *(void *)v4;
  uint64_t v10 = *(void *)(v4 + 8);
  uint64_t v11 = *(void *)(v4 + 16);
  char v12 = *(unsigned char *)(v4 + 24);
  sub_1B590D634(v9, v10, v11, v12);
  double v13 = sub_1B59B4324(a2, v9, v10, v11, v12);
  sub_1B590D6F0(v9, v10, v11, v12);
  if (!v5)
  {
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v14);
    a4[3] = swift_getOpaqueTypeMetadata2();
    a4[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(a4);
    a3(v14, v15, v13);
  }
}

unint64_t sub_1B594C828(uint64_t a1)
{
  unint64_t result = sub_1B594C850();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B594C850()
{
  unint64_t result = qword_1E9D640F8;
  if (!qword_1E9D640F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D640F8);
  }
  return result;
}

unint64_t sub_1B594C8A4(uint64_t a1)
{
  unint64_t result = sub_1B594C8CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B594C8CC()
{
  unint64_t result = qword_1E9D64100;
  if (!qword_1E9D64100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64100);
  }
  return result;
}

unint64_t sub_1B594C920(uint64_t a1)
{
  unint64_t result = sub_1B594C948();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B594C948()
{
  unint64_t result = qword_1E9D64108;
  if (!qword_1E9D64108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64108);
  }
  return result;
}

unint64_t sub_1B594C99C(uint64_t a1)
{
  unint64_t result = sub_1B594C9C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B594C9C4()
{
  unint64_t result = qword_1E9D64110;
  if (!qword_1E9D64110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64110);
  }
  return result;
}

unint64_t sub_1B594CA18(uint64_t a1)
{
  unint64_t result = sub_1B594CA40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B594CA40()
{
  unint64_t result = qword_1E9D64118;
  if (!qword_1E9D64118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64118);
  }
  return result;
}

unint64_t sub_1B594CA94(uint64_t a1)
{
  unint64_t result = sub_1B594CABC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B594CABC()
{
  unint64_t result = qword_1E9D64120;
  if (!qword_1E9D64120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64120);
  }
  return result;
}

unint64_t sub_1B594CB10(uint64_t a1)
{
  unint64_t result = sub_1B594CB38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B594CB38()
{
  unint64_t result = qword_1E9D64128;
  if (!qword_1E9D64128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64128);
  }
  return result;
}

unint64_t sub_1B594CB8C(uint64_t a1)
{
  unint64_t result = sub_1B594CBB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B594CBB4()
{
  unint64_t result = qword_1E9D64130;
  if (!qword_1E9D64130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64130);
  }
  return result;
}

uint64_t sub_1B594CC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B594CC70(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 <= 1) {
    return 0;
  }
  else {
    return v1 ^ 0xFF;
  }
}

uint64_t sub_1B594CC84()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B594CCD0()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B594CD1C(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1B5904B8C(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_1B594CD34(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B594CDC0(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1B5904AB4(result, a2, a3, a4 & 1);
  }
  return result;
}

unint64_t sub_1B594CDD8()
{
  unint64_t result = qword_1E9D64160;
  if (!qword_1E9D64160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64160);
  }
  return result;
}

unint64_t sub_1B594CE2C()
{
  unint64_t result = qword_1E9D64170;
  if (!qword_1E9D64170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64170);
  }
  return result;
}

unint64_t sub_1B594CE80()
{
  unint64_t result = qword_1E9D64180;
  if (!qword_1E9D64180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64180);
  }
  return result;
}

unint64_t sub_1B594CED4()
{
  unint64_t result = qword_1E9D64190;
  if (!qword_1E9D64190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64190);
  }
  return result;
}

unint64_t sub_1B594CF28()
{
  unint64_t result = qword_1E9D641A0;
  if (!qword_1E9D641A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D641A0);
  }
  return result;
}

unint64_t sub_1B594CF7C()
{
  unint64_t result = qword_1E9D641B0;
  if (!qword_1E9D641B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D641B0);
  }
  return result;
}

unint64_t sub_1B594CFD0()
{
  unint64_t result = qword_1E9D641C0;
  if (!qword_1E9D641C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D641C0);
  }
  return result;
}

unint64_t sub_1B594D024()
{
  unint64_t result = qword_1E9D641C8;
  if (!qword_1E9D641C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D641C8);
  }
  return result;
}

void sub_1B594D078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16, void (*a17)(void), void (*a18)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a8 != 254)
  {
    a17();
    a18(a5, a6, a7, a8);
    a18(a9, a10, a11, a12);
    a18(a13, a14, a15, a16);
  }
}

uint64_t sub_1B594D16C(uint64_t a1, void (*a2)(void, void, void, void), void (*a3)(void), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 80);
  uint64_t v18 = *(void *)(a1 + 88);
  long long v16 = *(_OWORD *)(a1 + 112);
  long long v17 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 144);
  unsigned __int8 v13 = *(unsigned char *)(a1 + 152);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  sub_1B594D078(v5, v6, v7, v8, v9, v10, v11, v18, v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v12, v13, a3, a4);
  return a1;
}

unint64_t sub_1B594D254()
{
  unint64_t result = qword_1E9D641D8;
  if (!qword_1E9D641D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D641D8);
  }
  return result;
}

uint64_t sub_1B594D2A8(uint64_t a1, void (*a2)(void, void, void, void), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 88);
  unsigned int v14 = *(unsigned __int8 *)(a1 + 120);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  a3(v5, v6, v7, v11);
  a3(v8, v9, v10, v12);
  a3(v17, v16, v15, v14);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SystemFontOptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B594D454);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemFontOptions.CodingKeys()
{
  return &type metadata for SystemFontOptions.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FontModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B594D558);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontModifier.CodingKeys()
{
  return &type metadata for FontModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for BoldModifier.CodingKeys()
{
  return &type metadata for BoldModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for ItalicModifier.CodingKeys()
{
  return &type metadata for ItalicModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for MonospacedModifier.CodingKeys()
{
  return &type metadata for MonospacedModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for KerningModifier.CodingKeys()
{
  return &type metadata for KerningModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for TrackingModifier.CodingKeys()
{
  return &type metadata for TrackingModifier.CodingKeys;
}

unsigned char *_s6LiftUI12BoldModifierV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B594D680);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BaselineOffsetModifier.CodingKeys()
{
  return &type metadata for BaselineOffsetModifier.CodingKeys;
}

unint64_t sub_1B594D6BC()
{
  unint64_t result = qword_1E9D641E8;
  if (!qword_1E9D641E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D641E8);
  }
  return result;
}

unint64_t sub_1B594D714()
{
  unint64_t result = qword_1E9D641F0;
  if (!qword_1E9D641F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D641F0);
  }
  return result;
}

unint64_t sub_1B594D76C()
{
  unint64_t result = qword_1E9D641F8;
  if (!qword_1E9D641F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D641F8);
  }
  return result;
}

unint64_t sub_1B594D7C4()
{
  unint64_t result = qword_1E9D64200;
  if (!qword_1E9D64200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64200);
  }
  return result;
}

unint64_t sub_1B594D81C()
{
  unint64_t result = qword_1E9D64208;
  if (!qword_1E9D64208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64208);
  }
  return result;
}

unint64_t sub_1B594D874()
{
  unint64_t result = qword_1E9D64210;
  if (!qword_1E9D64210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64210);
  }
  return result;
}

unint64_t sub_1B594D8CC()
{
  unint64_t result = qword_1E9D64218;
  if (!qword_1E9D64218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64218);
  }
  return result;
}

unint64_t sub_1B594D924()
{
  unint64_t result = qword_1E9D64220;
  if (!qword_1E9D64220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64220);
  }
  return result;
}

unint64_t sub_1B594D97C()
{
  unint64_t result = qword_1E9D64228;
  if (!qword_1E9D64228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64228);
  }
  return result;
}

unint64_t sub_1B594D9D4()
{
  unint64_t result = qword_1E9D64230;
  if (!qword_1E9D64230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64230);
  }
  return result;
}

unint64_t sub_1B594DA2C()
{
  unint64_t result = qword_1E9D64238;
  if (!qword_1E9D64238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64238);
  }
  return result;
}

unint64_t sub_1B594DA84()
{
  unint64_t result = qword_1E9D64240;
  if (!qword_1E9D64240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64240);
  }
  return result;
}

unint64_t sub_1B594DADC()
{
  unint64_t result = qword_1E9D64248;
  if (!qword_1E9D64248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64248);
  }
  return result;
}

unint64_t sub_1B594DB34()
{
  unint64_t result = qword_1E9D64250;
  if (!qword_1E9D64250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64250);
  }
  return result;
}

unint64_t sub_1B594DB8C()
{
  unint64_t result = qword_1E9D64258;
  if (!qword_1E9D64258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64258);
  }
  return result;
}

unint64_t sub_1B594DBE4()
{
  unint64_t result = qword_1E9D64260;
  if (!qword_1E9D64260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64260);
  }
  return result;
}

unint64_t sub_1B594DC3C()
{
  unint64_t result = qword_1E9D64268;
  if (!qword_1E9D64268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64268);
  }
  return result;
}

unint64_t sub_1B594DC94()
{
  unint64_t result = qword_1E9D64270;
  if (!qword_1E9D64270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64270);
  }
  return result;
}

unint64_t sub_1B594DCEC()
{
  unint64_t result = qword_1E9D64278;
  if (!qword_1E9D64278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64278);
  }
  return result;
}

unint64_t sub_1B594DD44()
{
  unint64_t result = qword_1E9D64280;
  if (!qword_1E9D64280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64280);
  }
  return result;
}

unint64_t sub_1B594DD9C()
{
  unint64_t result = qword_1E9D64288;
  if (!qword_1E9D64288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64288);
  }
  return result;
}

unint64_t sub_1B594DDF4()
{
  unint64_t result = qword_1E9D64290;
  if (!qword_1E9D64290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64290);
  }
  return result;
}

unint64_t sub_1B594DE4C()
{
  unint64_t result = qword_1E9D64298;
  if (!qword_1E9D64298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64298);
  }
  return result;
}

unint64_t sub_1B594DEA4()
{
  unint64_t result = qword_1E9D642A0;
  if (!qword_1E9D642A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D642A0);
  }
  return result;
}

uint64_t sub_1B594DEF8()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B594DF44()
{
  return 0x6576697463417369;
}

uint64_t sub_1B594DF5C()
{
  return 0x676E696E72656BLL;
}

uint64_t sub_1B594DF74()
{
  return 0x676E696B63617274;
}

uint64_t sub_1B594DF8C()
{
  return 0x656E696C65736162;
}

LiftUI::HTTPRequestMethod_optional __swiftcall HTTPRequestMethod.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1B5A1C558();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t HTTPRequestMethod.rawValue.getter()
{
  return qword_1B5A23E78[*v0];
}

uint64_t sub_1B594E038(char *a1, char *a2)
{
  return sub_1B59EE3F8(*a1, *a2);
}

unint64_t sub_1B594E048()
{
  unint64_t result = qword_1E9D642A8;
  if (!qword_1E9D642A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D642A8);
  }
  return result;
}

uint64_t sub_1B594E09C()
{
  return sub_1B59F636C();
}

uint64_t sub_1B594E0A8()
{
  return sub_1B59F3BA8();
}

uint64_t sub_1B594E0B0()
{
  return sub_1B59F636C();
}

LiftUI::HTTPRequestMethod_optional sub_1B594E0B8(Swift::String *a1)
{
  return HTTPRequestMethod.init(rawValue:)(*a1);
}

uint64_t sub_1B594E0C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HTTPRequestMethod.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B594E0EC()
{
  return sub_1B5A1C078();
}

ValueMetadata *type metadata accessor for HTTPRequestMethod()
{
  return &type metadata for HTTPRequestMethod;
}

unint64_t sub_1B594E164()
{
  unint64_t result = qword_1E9D642B0;
  if (!qword_1E9D642B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D642B0);
  }
  return result;
}

uint64_t destroy for HTTPRequestAction(uint64_t a1)
{
  sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v2);
  }
  int v3 = *(unsigned __int8 *)(a1 + 88);
  if (v3 != 255) {
    sub_1B5905248(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v3 & 1);
  }
  int v4 = *(unsigned __int8 *)(a1 + 120);
  if (v4 != 255) {
    sub_1B5905248(*(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v4 & 1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for HTTPRequestAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  unsigned int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a2 + 48);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  int v12 = *(unsigned __int8 *)(a2 + 88);
  if (v12 == 255)
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  else
  {
    char v13 = v12 & 1;
    uint64_t v14 = *(void *)(a2 + 64);
    uint64_t v15 = *(void *)(a2 + 72);
    uint64_t v16 = *(void *)(a2 + 80);
    sub_1B5904C08(v14, v15, v16, v12 & 1);
    *(void *)(a1 + 64) = v14;
    *(void *)(a1 + 72) = v15;
    *(void *)(a1 + 80) = v16;
    *(unsigned char *)(a1 + 88) = v13;
  }
  int v17 = *(unsigned __int8 *)(a2 + 120);
  if (v17 == 255)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  }
  else
  {
    char v18 = v17 & 1;
    uint64_t v19 = *(void *)(a2 + 96);
    uint64_t v20 = *(void *)(a2 + 104);
    uint64_t v21 = *(void *)(a2 + 112);
    sub_1B5904C08(v19, v20, v21, v17 & 1);
    *(void *)(a1 + 96) = v19;
    *(void *)(a1 + 104) = v20;
    *(void *)(a1 + 112) = v21;
    *(unsigned char *)(a1 + 120) = v18;
  }
  uint64_t v22 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v22;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HTTPRequestAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B5904A88(v8, v9, v10, v11);
  int v12 = (_OWORD *)(a1 + 32);
  char v13 = (_OWORD *)(a2 + 32);
  unsigned int v14 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v14 <= 0xFD)
    {
      uint64_t v20 = *(void *)(a2 + 32);
      uint64_t v21 = *(void *)(a2 + 40);
      uint64_t v22 = *(void *)(a2 + 48);
      sub_1B5904B60(v20, v21, v22, *(unsigned char *)(a2 + 56));
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v24 = *(void *)(a1 + 40);
      uint64_t v25 = *(void *)(a1 + 48);
      *(void *)(a1 + 32) = v20;
      *(void *)(a1 + 40) = v21;
      *(void *)(a1 + 48) = v22;
      unsigned __int8 v26 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v14;
      sub_1B5904A88(v23, v24, v25, v26);
    }
    else
    {
      sub_1B590DA50(a1 + 32);
      long long v16 = *(_OWORD *)(a2 + 41);
      _OWORD *v12 = *v13;
      *(_OWORD *)(a1 + 41) = v16;
    }
  }
  else if (v14 <= 0xFD)
  {
    uint64_t v17 = *(void *)(a2 + 32);
    uint64_t v18 = *(void *)(a2 + 40);
    uint64_t v19 = *(void *)(a2 + 48);
    sub_1B5904B60(v17, v18, v19, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 32) = v17;
    *(void *)(a1 + 40) = v18;
    *(void *)(a1 + 48) = v19;
    *(unsigned char *)(a1 + 56) = v14;
  }
  else
  {
    long long v15 = *v13;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    _OWORD *v12 = v15;
  }
  long long v27 = (long long *)(a1 + 64);
  uint64_t v28 = (long long *)(a2 + 64);
  int v29 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v29 == 255)
    {
      long long v31 = *v28;
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      *long long v27 = v31;
    }
    else
    {
      char v40 = v29 & 1;
      uint64_t v41 = *(void *)(a2 + 64);
      uint64_t v42 = *(void *)(a2 + 72);
      uint64_t v43 = *(void *)(a2 + 80);
      sub_1B5904C08(v41, v42, v43, v29 & 1);
      *(void *)(a1 + 64) = v41;
      *(void *)(a1 + 72) = v42;
      *(void *)(a1 + 80) = v43;
      *(unsigned char *)(a1 + 88) = v40;
    }
  }
  else if (v29 == 255)
  {
    sub_1B5908FC0(a1 + 64, &qword_1E9D62BE0);
    long long v30 = *(_OWORD *)(a2 + 73);
    *long long v27 = *v28;
    *(_OWORD *)(a1 + 73) = v30;
  }
  else
  {
    char v32 = v29 & 1;
    uint64_t v33 = *(void *)(a2 + 64);
    uint64_t v34 = *(void *)(a2 + 72);
    uint64_t v35 = *(void *)(a2 + 80);
    sub_1B5904C08(v33, v34, v35, v29 & 1);
    uint64_t v36 = *(void *)(a1 + 64);
    uint64_t v37 = *(void *)(a1 + 72);
    uint64_t v38 = *(void *)(a1 + 80);
    char v39 = *(unsigned char *)(a1 + 88);
    *(void *)(a1 + 64) = v33;
    *(void *)(a1 + 72) = v34;
    *(void *)(a1 + 80) = v35;
    *(unsigned char *)(a1 + 88) = v32;
    sub_1B5905248(v36, v37, v38, v39);
  }
  uint64_t v44 = (long long *)(a1 + 96);
  int v45 = (long long *)(a2 + 96);
  int v46 = *(unsigned __int8 *)(a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) == 255)
  {
    if (v46 == 255)
    {
      long long v48 = *v45;
      *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
      *uint64_t v44 = v48;
    }
    else
    {
      char v57 = v46 & 1;
      uint64_t v58 = *(void *)(a2 + 96);
      uint64_t v59 = *(void *)(a2 + 104);
      uint64_t v60 = *(void *)(a2 + 112);
      sub_1B5904C08(v58, v59, v60, v46 & 1);
      *(void *)(a1 + 96) = v58;
      *(void *)(a1 + 104) = v59;
      *(void *)(a1 + 112) = v60;
      *(unsigned char *)(a1 + 120) = v57;
    }
  }
  else if (v46 == 255)
  {
    sub_1B5908FC0(a1 + 96, &qword_1E9D62BE0);
    long long v47 = *(_OWORD *)(a2 + 105);
    *uint64_t v44 = *v45;
    *(_OWORD *)(a1 + 105) = v47;
  }
  else
  {
    char v49 = v46 & 1;
    uint64_t v50 = *(void *)(a2 + 96);
    uint64_t v51 = *(void *)(a2 + 104);
    uint64_t v52 = *(void *)(a2 + 112);
    sub_1B5904C08(v50, v51, v52, v46 & 1);
    uint64_t v53 = *(void *)(a1 + 96);
    uint64_t v54 = *(void *)(a1 + 104);
    uint64_t v55 = *(void *)(a1 + 112);
    char v56 = *(unsigned char *)(a1 + 120);
    *(void *)(a1 + 96) = v50;
    *(void *)(a1 + 104) = v51;
    *(void *)(a1 + 112) = v52;
    *(unsigned char *)(a1 + 120) = v49;
    sub_1B5905248(v53, v54, v55, v56);
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 160) = v61;
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for HTTPRequestAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5904A88(v6, v7, v8, v9);
  unsigned int v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + 56);
  if (v11 > 0xFD)
  {
    sub_1B590DA50(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v12;
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B5904A88(v13, v14, v15, v10);
LABEL_6:
  int v16 = *(unsigned __int8 *)(a1 + 88);
  if (v16 == 255)
  {
LABEL_9:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    goto LABEL_11;
  }
  int v17 = *(unsigned __int8 *)(a2 + 88);
  if (v17 == 255)
  {
    sub_1B5908FC0(a1 + 64, &qword_1E9D62BE0);
    goto LABEL_9;
  }
  char v18 = v16 & 1;
  uint64_t v19 = *(void *)(a2 + 80);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  uint64_t v22 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v19;
  *(unsigned char *)(a1 + 88) = v17 & 1;
  sub_1B5905248(v20, v21, v22, v18);
LABEL_11:
  int v23 = *(unsigned __int8 *)(a1 + 120);
  if (v23 != 255)
  {
    int v24 = *(unsigned __int8 *)(a2 + 120);
    if (v24 != 255)
    {
      char v25 = v23 & 1;
      uint64_t v26 = *(void *)(a2 + 112);
      uint64_t v27 = *(void *)(a1 + 96);
      uint64_t v28 = *(void *)(a1 + 104);
      uint64_t v29 = *(void *)(a1 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(void *)(a1 + 112) = v26;
      *(unsigned char *)(a1 + 120) = v24 & 1;
      sub_1B5905248(v27, v28, v29, v25);
      goto LABEL_16;
    }
    sub_1B5908FC0(a1 + 96, &qword_1E9D62BE0);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
LABEL_16:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(a2 + 152);
  uint64_t v31 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = v30;
  swift_unknownObjectRelease();
  *(void *)(a1 + 160) = v31;
  return a1;
}

uint64_t getEnumTagSinglePayload for HTTPRequestAction(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 128);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HTTPRequestAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 128) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPRequestAction()
{
  return &type metadata for HTTPRequestAction;
}

uint64_t sub_1B594E9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)&v19[0] = *(void *)(v4 + 136);
  swift_bridgeObjectRetain();
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1B590C824(v10);
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_1B590C824(v11);
  uint64_t v12 = *(void *)&v19[0];
  sub_1B590CA38(a1, (uint64_t)v19);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v20 = a4;
    uint64_t v14 = (void *)(v12 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v16 = v14[3];
      uint64_t v15 = v14[4];
      __swift_project_boxed_opaque_existential_1(v14, v16);
      (*(void (**)(long long *__return_ptr, long long *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 8) + 16))(v18, v19, a2, a3, v16);
      if (v5) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_1B5908BE8(v18, (uint64_t)v19);
      v14 += 5;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        a4 = v20;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
LABEL_6:
    sub_1B5908BE8(v19, a4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B594EB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[21] = a5;
  v6[22] = a6;
  v6[20] = a4;
  uint64_t v7 = sub_1B5A1A0D8();
  v6[23] = v7;
  v6[24] = *(void *)(v7 - 8);
  v6[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  v6[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
  v6[27] = swift_task_alloc();
  uint64_t v8 = sub_1B5A1A258();
  v6[28] = v8;
  v6[29] = *(void *)(v8 - 8);
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B594ECF4, 0, 0);
}

uint64_t sub_1B594ECF4()
{
  uint64_t v89 = v0;
  uint64_t v1 = v0[21];
  sub_1B5951704(v0[20], (uint64_t)(v0 + 2));
  sub_1B5951704((uint64_t)(v0 + 2), (uint64_t)(v0 + 6));
  sub_1B5951760((uint64_t)(v0 + 2));
  StringResolvable.resolved(with:)(v1);
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[27];
  sub_1B5951794((uint64_t)(v0 + 2));
  sub_1B5A1A248();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    uint64_t v5 = v0[26];
    uint64_t v7 = v0[21];
    uint64_t v6 = v0[22];
    uint64_t v8 = v0[20];
    sub_1B5908FC0(v0[27], &qword_1E9D638F0);
    uint64_t v9 = *(void *)(v8 + 136);
    uint64_t v10 = sub_1B5A1C188();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    v11(v5, 1, 1, v10);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = 0;
    uint64_t v12[3] = 0;
    v12[4] = v9;
    _OWORD v12[5] = v7;
    v12[6] = v6;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1B5924038(v5, (uint64_t)&unk_1E9D637B0, (uint64_t)v12);
    swift_release();
    uint64_t v13 = *(void *)(v8 + 144);
    v11(v5, 1, 1, v10);
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v13;
    v14[5] = v7;
    v14[6] = v6;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B5924038(v5, (uint64_t)&unk_1E9D642D8, (uint64_t)v14);
    swift_release();
    type metadata accessor for RemoteLoaderError(0);
    sub_1B59518A0((unint64_t *)&qword_1E9D62BD0, (void (*)(uint64_t))type metadata accessor for RemoteLoaderError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_4:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  uint64_t v15 = v0[32];
  uint64_t v16 = v0[20];
  (*(void (**)(uint64_t, void, void))(v0[29] + 32))(v15, v0[27], v0[28]);
  uint64_t v17 = *(void *)(v16 + 160);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 8))(v15, ObjectType, v17);
  uint64_t v80 = ObjectType;
  uint64_t v21 = v0[20];
  unsigned int v22 = *(unsigned __int8 *)(v21 + 56);
  if (v22 <= 0xFD)
  {
    uint64_t v23 = *(void *)(v21 + 40);
    uint64_t v24 = *(void *)(v21 + 48);
    uint64_t v25 = v0[21];
    uint64_t v85 = *(void *)(v21 + 32);
    unint64_t v86 = v23;
    uint64_t v87 = v24;
    char v88 = v22;
    sub_1B5904B60(v85, v23, v24, v22);
    unint64_t v26 = StringResolvable.resolved(with:)(v25);
    uint64_t v28 = v27;
    sub_1B5904B4C(v85, v23, v24, v22);
    v29._countAndFlagsBits = v26;
    v29._object = v28;
    HTTPRequestMethod.init(rawValue:)(v29);
    switch((char)v85)
    {
      case 8:
        break;
      default:
        sub_1B5A1A058();
        break;
    }
  }
  uint64_t v30 = v0[20];
  int v31 = *(unsigned __int8 *)(v30 + 88);
  if (v31 == 255)
  {
LABEL_37:
    int v47 = *(unsigned __int8 *)(v30 + 120);
    if (v47 != 255)
    {
      uint64_t v48 = *(void *)(v30 + 96);
      uint64_t v49 = *(void *)(v30 + 104);
      uint64_t v50 = *(void *)(v30 + 112);
      uint64_t v51 = v0[21];
      sub_1B5904C08(v48, v49, v50, v47 & 1);
      uint64_t v52 = sub_1B59B4750(v51, v48, v49, v50, v47 & 1);
      sub_1B5905230(v48, v49, v50, v47);
      sub_1B5A1A168();
      swift_allocObject();
      sub_1B5A1A158();
      v0[17] = v52;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
      sub_1B5951940();
      sub_1B5A1A148();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B5A1A0B8();
    }
    uint64_t v79 = v17;
    if (qword_1E9D62B20 != -1) {
      goto LABEL_49;
    }
    goto LABEL_41;
  }
  uint64_t v32 = *(void *)(v30 + 64);
  uint64_t v33 = *(void *)(v30 + 72);
  uint64_t v34 = *(void *)(v30 + 80);
  uint64_t v35 = v0[21];
  sub_1B5904C08(v32, v33, v34, v31 & 1);
  uint64_t v36 = sub_1B59B4750(v35, v32, v33, v34, v31 & 1);
  uint64_t v79 = v17;
  sub_1B5905230(v32, v33, v34, v31);
  int64_t v37 = 0;
  uint64_t v81 = v36 + 64;
  uint64_t v38 = -1;
  uint64_t v39 = -1 << *(unsigned char *)(v36 + 32);
  if (-v39 < 64) {
    uint64_t v38 = ~(-1 << -(char)v39);
  }
  unint64_t v40 = v38 & *(void *)(v36 + 64);
  int64_t v83 = (unint64_t)(63 - v39) >> 6;
  while (1)
  {
    if (v40)
    {
      unint64_t v41 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      unint64_t v42 = v41 | (v37 << 6);
      goto LABEL_32;
    }
    int64_t v43 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v43 >= v83) {
      goto LABEL_36;
    }
    unint64_t v44 = *(void *)(v81 + 8 * v43);
    ++v37;
    if (!v44)
    {
      int64_t v37 = v43 + 1;
      if (v43 + 1 >= v83) {
        goto LABEL_36;
      }
      unint64_t v44 = *(void *)(v81 + 8 * v37);
      if (!v44)
      {
        int64_t v37 = v43 + 2;
        if (v43 + 2 >= v83) {
          goto LABEL_36;
        }
        unint64_t v44 = *(void *)(v81 + 8 * v37);
        if (!v44) {
          break;
        }
      }
    }
LABEL_31:
    unint64_t v40 = (v44 - 1) & v44;
    unint64_t v42 = __clz(__rbit64(v44)) + (v37 << 6);
LABEL_32:
    unint64_t v46 = *(void *)(*(void *)(v36 + 56) + 8 * v42);
    switch(v46 >> 61)
    {
      case 1uLL:
        v0[19] = *(void *)((v46 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1B5A1C638();
        break;
      case 2uLL:
        v0[12] = 0;
        v0[13] = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1B5A1C1B8();
        break;
      case 3uLL:
        uint64_t v85 = 0;
        unint64_t v86 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1B5A1BFA8();
        swift_bridgeObjectRelease();
        break;
      case 4uLL:
      case 5uLL:
        uint64_t v84 = v0[32];
        uint64_t v53 = v0[28];
        uint64_t v54 = v0[29];
        uint64_t v55 = v0[24];
        uint64_t v56 = v0[25];
        uint64_t v57 = v0[23];
        sub_1B5951A10();
        swift_allocError();
        unint64_t v58 = MEMORY[0x1E4FBB1A0];
        unint64_t *v59 = v46;
        v59[1] = v58;
        swift_retain_n();
        swift_willThrow();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v57);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v84, v53);
        swift_release();
        goto LABEL_4;
      default:
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    sub_1B5A1A0C8();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  int64_t v45 = v43 + 3;
  if (v45 >= v83)
  {
LABEL_36:
    swift_release();
    uint64_t v30 = v0[20];
    uint64_t v17 = v79;
    goto LABEL_37;
  }
  unint64_t v44 = *(void *)(v81 + 8 * v45);
  if (v44)
  {
    int64_t v37 = v45;
    goto LABEL_31;
  }
  while (1)
  {
    int64_t v37 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      break;
    }
    if (v37 >= v83) {
      goto LABEL_36;
    }
    unint64_t v44 = *(void *)(v81 + 8 * v37);
    ++v45;
    if (v44) {
      goto LABEL_31;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  swift_once();
LABEL_41:
  uint64_t v61 = v0[31];
  uint64_t v60 = v0[32];
  uint64_t v63 = v0[28];
  uint64_t v62 = v0[29];
  uint64_t v64 = sub_1B5A1A328();
  v0[33] = __swift_project_value_buffer(v64, (uint64_t)qword_1E9D910D0);
  uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
  v0[34] = v65;
  v0[35] = (v62 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v65(v61, v60, v63);
  char v66 = sub_1B5A1A308();
  os_log_type_t v67 = sub_1B5A1C278();
  BOOL v68 = os_log_type_enabled(v66, v67);
  uint64_t v69 = v0[31];
  uint64_t v71 = v0[28];
  uint64_t v70 = v0[29];
  if (v68)
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    uint64_t v85 = v73;
    *(_DWORD *)uint64_t v72 = 136315138;
    sub_1B59518A0(&qword_1E9D642F0, MEMORY[0x1E4F276F0]);
    uint64_t v74 = sub_1B5A1C638();
    v0[16] = sub_1B5928EE8(v74, v75, &v85);
    sub_1B5A1C2D8();
    swift_bridgeObjectRelease();
    char v76 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v76(v69, v71);
    _os_log_impl(&dword_1B58FD000, v66, v67, "HTTP Request Action: %s", v72, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v73, -1, -1);
    MEMORY[0x1BA9A4780](v72, -1, -1);
  }
  else
  {
    char v76 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v76(v0[31], v0[28]);
  }

  v0[36] = v76;
  __int16 v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 + 16) + **(int **)(v79 + 16));
  char v77 = (void *)swift_task_alloc();
  v0[37] = v77;
  *char v77 = v0;
  v77[1] = sub_1B594FAB4;
  uint64_t v78 = v0[25];
  return v82(v78, v80, v79);
}

uint64_t sub_1B594FAB4(uint64_t a1, unint64_t a2)
{
  *(void *)(*(void *)v3 + 304) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = sub_1B594FE08;
  }
  else
  {
    sub_1B5905904(a1, a2);
    uint64_t v6 = sub_1B594FBE4;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1B594FBE4()
{
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v4 = v0[20];
  uint64_t v5 = *(void *)(v4 + 128);
  uint64_t v6 = sub_1B5A1C188();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v1, 1, 1, v6);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = 0;
  v8[3] = 0;
  v8[4] = v5;
  v8[5] = v3;
  v8[6] = v2;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B5924038(v1, (uint64_t)&unk_1E9D642F8, (uint64_t)v8);
  swift_release();
  uint64_t v9 = *(void *)(v4 + 144);
  v7(v1, 1, 1, v6);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  void v10[3] = 0;
  v10[4] = v9;
  _OWORD v10[5] = v3;
  v10[6] = v2;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B5924038(v1, (uint64_t)&unk_1E9D64300, (uint64_t)v10);
  swift_release();
  uint64_t v11 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v12 = v0[32];
  uint64_t v13 = v0[28];
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  v11(v12, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1B594FE08()
{
  uint64_t v33 = v0;
  v0[18] = v0[38];
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[34];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[28];
  v0[10] = 0;
  v0[11] = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E68);
  sub_1B5A1C4C8();
  uint64_t v5 = v0[10];
  unint64_t v6 = v0[11];
  v1(v3, v2, v4);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1B5A1A308();
  os_log_type_t v8 = sub_1B5A1C278();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = v0[30];
    Swift::String v29 = (void (*)(uint64_t, uint64_t))v0[36];
    uint64_t v10 = v0[28];
    uint64_t v11 = swift_slowAlloc();
    id v30 = (id)swift_slowAlloc();
    id v32 = v30;
    *(_DWORD *)uint64_t v11 = 136315394;
    sub_1B59518A0(&qword_1E9D642F0, MEMORY[0x1E4F276F0]);
    uint64_t v12 = sub_1B5A1C638();
    v0[14] = sub_1B5928EE8(v12, v13, (uint64_t *)&v32);
    sub_1B5A1C2D8();
    swift_bridgeObjectRelease();
    v29(v9, v10);
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[15] = sub_1B5928EE8(v5, v6, (uint64_t *)&v32);
    sub_1B5A1C2D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B58FD000, v7, v8, "Network request failed with url: %s | Error: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v30, -1, -1);
    MEMORY[0x1BA9A4780](v11, -1, -1);
  }
  else
  {
    ((void (*)(void, void))v0[36])(v0[30], v0[28]);
    swift_bridgeObjectRelease_n();
  }

  id v31 = (id)v0[38];
  uint64_t v14 = v0[26];
  uint64_t v16 = v0[21];
  uint64_t v15 = v0[22];
  uint64_t v17 = v0[20];
  uint64_t v18 = *(void *)(v17 + 136);
  uint64_t v19 = sub_1B5A1C188();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v14, 1, 1, v19);
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = 0;
  v21[3] = 0;
  v21[4] = v18;
  v21[5] = v16;
  v21[6] = v15;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B5924038(v14, (uint64_t)&unk_1E9D642E0, (uint64_t)v21);
  swift_release();
  uint64_t v22 = *(void *)(v17 + 144);
  v20(v14, 1, 1, v19);
  uint64_t v23 = (void *)swift_allocObject();
  _OWORD v23[2] = 0;
  void v23[3] = 0;
  void v23[4] = v22;
  v23[5] = v16;
  v23[6] = v15;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B5924038(v14, (uint64_t)&unk_1E9D642E8, (uint64_t)v23);
  swift_release();

  uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v25 = v0[32];
  uint64_t v26 = v0[28];
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  v24(v25, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_1B595027C(char a1)
{
  return qword_1B5A23EF8[a1];
}

uint64_t sub_1B595029C(char *a1, char *a2)
{
  return sub_1B59EE480(*a1, *a2);
}

uint64_t sub_1B59502A8()
{
  return sub_1B59F6304();
}

uint64_t sub_1B59502B4()
{
  return sub_1B59F3BFC();
}

uint64_t sub_1B59502BC()
{
  return sub_1B59F6304();
}

uint64_t sub_1B59502C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59521B4();
  *a1 = result;
  return result;
}

uint64_t sub_1B59502F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B595027C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5950320()
{
  return sub_1B595027C(*v0);
}

uint64_t sub_1B5950328@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59521B4();
  *a1 = result;
  return result;
}

void sub_1B5950350(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1B595035C(uint64_t a1)
{
  unint64_t v2 = sub_1B5951BF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5950398(uint64_t a1)
{
  unint64_t v2 = sub_1B5951BF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59503D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64328);
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v94 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v131 = (char *)v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B5A1C4E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1B5A1C828();
  if (qword_1E9D62B08 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1E9D91098);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  if (*(void *)(v10 + 16) && (unint64_t v12 = sub_1B59049D0((uint64_t)v9), (v13 & 1) != 0))
  {
    sub_1B59052CC(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!*((void *)&v107 + 1))
  {
    sub_1B5908FC0((uint64_t)&v106, &qword_1E9D62BC8);
    goto LABEL_18;
  }
  type metadata accessor for AnyWeakRemoteLoader();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    type metadata accessor for RemoteLoaderError(0);
    sub_1B59518A0((unint64_t *)&qword_1E9D62BD0, (void (*)(uint64_t))type metadata accessor for RemoteLoaderError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v95;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_17;
  }
  uint64_t v16 = Strong;
  uint64_t v17 = Strong + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource;
  uint64_t v18 = MEMORY[0x1BA9A4850](Strong + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource);
  if (!v18)
  {
    swift_release();
LABEL_17:
    swift_release();
    goto LABEL_18;
  }
  uint64_t v19 = v18;
  uint64_t v90 = v16;
  uint64_t v91 = v14;
  uint64_t v20 = *(void *)(v17 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5951BF4();
  swift_unknownObjectRetain();
  sub_1B5A1C838();
  if (v2)
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v89 = v19;
    uint64_t v87 = v20;
    LOBYTE(v95) = 0;
    sub_1B5904A34();
    sub_1B5A1C5D8();
    uint64_t v22 = *((void *)&v106 + 1);
    int v23 = BYTE8(v107);
    LOBYTE(v95) = 1;
    uint64_t v24 = v106;
    uint64_t v88 = v107;
    sub_1B5904B60(v106, *((uint64_t *)&v106 + 1), v107, BYTE8(v107));
    sub_1B5A1C5B8();
    int v86 = v23;
    uint64_t v83 = v22;
    uint64_t v76 = v24;
    long long v25 = v106;
    uint64_t v26 = v107;
    LODWORD(v22) = BYTE8(v107);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BE0);
    LOBYTE(v95) = 3;
    uint64_t v82 = *((void *)&v25 + 1);
    sub_1B5904BDC(v25, *((uint64_t *)&v25 + 1), v26, v22);
    sub_1B5951C48();
    uint64_t v81 = v27;
    sub_1B5A1C5B8();
    int v79 = v22;
    uint64_t v77 = v25;
    uint64_t v78 = v26;
    uint64_t v71 = 0;
    long long v28 = v106;
    int v29 = BYTE8(v107);
    LOBYTE(v95) = 7;
    uint64_t v85 = v107;
    sub_1B5904BF0(v106, *((uint64_t *)&v106 + 1), v107, BYTE8(v107));
    sub_1B5A1C5B8();
    int v75 = v29;
    long long v84 = v28;
    long long v30 = v106;
    uint64_t v31 = v107;
    int v74 = BYTE8(v107);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
    LOBYTE(v95) = 4;
    long long v80 = v30;
    uint64_t v81 = v31;
    sub_1B5904BF0(v30, *((uint64_t *)&v30 + 1), v31, v74);
    unint64_t v33 = sub_1B5951CA4();
    uint64_t v73 = v32;
    sub_1B5A1C5B8();
    v70[1] = v33;
    if ((void)v106) {
      uint64_t v34 = v106;
    }
    else {
      uint64_t v34 = MEMORY[0x1E4FBC860];
    }
    int64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      uint64_t v126 = MEMORY[0x1E4FBC860];
      int64_t v36 = v35;
      sub_1B596931C(0, v35, 0);
      int64_t v37 = v36;
      uint64_t v72 = v34;
      uint64_t v38 = v34 + 32;
      do
      {
        uint64_t v39 = v38;
        sub_1B5951D6C(v38, (uint64_t)&v95);
        sub_1B590CA38((uint64_t)&v95, (uint64_t)&v106);
        sub_1B5951DC8((uint64_t)&v95);
        uint64_t v40 = v126;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B596931C(0, *(void *)(v40 + 16) + 1, 1);
          uint64_t v40 = v126;
        }
        unint64_t v42 = *(void *)(v40 + 16);
        unint64_t v41 = *(void *)(v40 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_1B596931C(v41 > 1, v42 + 1, 1);
          uint64_t v40 = v126;
        }
        *(void *)(v40 + 16) = v42 + 1;
        sub_1B5908BE8(&v106, v40 + 40 * v42 + 32);
        uint64_t v38 = v39 + 40;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = MEMORY[0x1E4FBC860];
    }
    LOBYTE(v95) = 5;
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    uint64_t v73 = v40;
    if ((void)v106) {
      uint64_t v43 = v106;
    }
    else {
      uint64_t v43 = MEMORY[0x1E4FBC860];
    }
    int64_t v44 = *(void *)(v43 + 16);
    if (v44)
    {
      uint64_t v126 = MEMORY[0x1E4FBC860];
      sub_1B596931C(0, v44, 0);
      v70[0] = v43;
      uint64_t v45 = v43 + 32;
      do
      {
        uint64_t v46 = v45;
        sub_1B5951D6C(v45, (uint64_t)&v95);
        sub_1B590CA38((uint64_t)&v95, (uint64_t)&v106);
        sub_1B5951DC8((uint64_t)&v95);
        uint64_t v47 = v126;
        int64_t v48 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B596931C(0, *(void *)(v47 + 16) + 1, 1);
          uint64_t v47 = v126;
        }
        unint64_t v50 = *(void *)(v47 + 16);
        unint64_t v49 = *(void *)(v47 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_1B596931C(v49 > 1, v50 + 1, 1);
          uint64_t v47 = v126;
        }
        *(void *)(v47 + 16) = v50 + 1;
        sub_1B5908BE8(&v106, v47 + 40 * v50 + 32);
        uint64_t v45 = v46 + 40;
        int64_t v44 = v48 - 1;
      }
      while (v48 != 1);
      uint64_t v72 = v47;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v72 = MEMORY[0x1E4FBC860];
    }
    LOBYTE(v95) = 6;
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    uint64_t v51 = v106;
    if (!(void)v106) {
      uint64_t v51 = MEMORY[0x1E4FBC860];
    }
    uint64_t v71 = v51;
    int64_t v52 = *(void *)(v51 + 16);
    if (v52)
    {
      uint64_t v126 = MEMORY[0x1E4FBC860];
      sub_1B596931C(0, v52, 0);
      uint64_t v53 = v71 + 32;
      do
      {
        uint64_t v54 = v53;
        sub_1B5951D6C(v53, (uint64_t)&v95);
        sub_1B590CA38((uint64_t)&v95, (uint64_t)&v106);
        sub_1B5951DC8((uint64_t)&v95);
        uint64_t v55 = v126;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B596931C(0, *(void *)(v55 + 16) + 1, 1);
          uint64_t v55 = v126;
        }
        unint64_t v57 = *(void *)(v55 + 16);
        unint64_t v56 = *(void *)(v55 + 24);
        if (v57 >= v56 >> 1)
        {
          sub_1B596931C(v56 > 1, v57 + 1, 1);
          uint64_t v55 = v126;
        }
        *(void *)(v55 + 16) = v57 + 1;
        sub_1B5908BE8(&v106, v55 + 40 * v57 + 32);
        uint64_t v53 = v54 + 40;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v55 = MEMORY[0x1E4FBC860];
    }
    (*(void (**)(char *, uint64_t))(v93 + 8))(v131, v94);
    *(void *)&long long v95 = v76;
    *((void *)&v95 + 1) = v83;
    *(void *)&long long v96 = v88;
    BYTE8(v96) = v86;
    *(void *)&long long v97 = v77;
    *((void *)&v97 + 1) = v82;
    *(void *)&long long v98 = v78;
    BYTE8(v98) = v79;
    long long v99 = v84;
    *(void *)&long long v100 = v85;
    BYTE8(v100) = v75;
    long long v58 = v80;
    long long v101 = v80;
    *(void *)&long long v102 = v81;
    BYTE8(v102) = v74;
    *(void *)&long long v103 = v73;
    *((void *)&v103 + 1) = v72;
    *(void *)&long long v104 = v55;
    *((void *)&v104 + 1) = v89;
    uint64_t v105 = v87;
    sub_1B592C66C((uint64_t)&v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_1B5905230(v58, *((uint64_t *)&v58 + 1), v81, v74);
    sub_1B5905230(v84, *((uint64_t *)&v84 + 1), v85, v75);
    uint64_t v59 = v77;
    sub_1B5904B4C(v77, v82, v78, v79);
    uint64_t v60 = v76;
    uint64_t v61 = v83;
    uint64_t v62 = v88;
    char v63 = v86;
    sub_1B5904A88(v76, v83, v88, v86);
    long long v64 = v104;
    uint64_t v65 = v92;
    *(_OWORD *)(v92 + 128) = v103;
    *(_OWORD *)(v65 + 144) = v64;
    *(void *)(v65 + 160) = v105;
    long long v66 = v100;
    *(_OWORD *)(v65 + 64) = v99;
    *(_OWORD *)(v65 + 80) = v66;
    long long v67 = v102;
    *(_OWORD *)(v65 + 96) = v101;
    *(_OWORD *)(v65 + 112) = v67;
    long long v68 = v96;
    *(_OWORD *)uint64_t v65 = v95;
    *(_OWORD *)(v65 + 16) = v68;
    long long v69 = v98;
    *(_OWORD *)(v65 + 32) = v97;
    *(_OWORD *)(v65 + 48) = v69;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *(void *)&long long v106 = v60;
    *((void *)&v106 + 1) = v61;
    *(void *)&long long v107 = v62;
    BYTE8(v107) = v63;
    *(_DWORD *)((char *)&v107 + 9) = v130[0];
    HIDWORD(v107) = *(_DWORD *)((char *)v130 + 3);
    uint64_t v108 = v59;
    uint64_t v109 = v82;
    uint64_t v110 = v78;
    char v111 = v79;
    *(_DWORD *)uint64_t v112 = *(_DWORD *)v129;
    *(_DWORD *)&v112[3] = *(_DWORD *)&v129[3];
    long long v113 = v84;
    uint64_t v114 = v85;
    char v115 = v75;
    *(_DWORD *)uint64_t v116 = *(_DWORD *)v128;
    *(_DWORD *)&v116[3] = *(_DWORD *)&v128[3];
    long long v117 = v80;
    uint64_t v118 = v81;
    char v119 = v74;
    *(_DWORD *)uint64_t v120 = *(_DWORD *)v127;
    *(_DWORD *)&v120[3] = *(_DWORD *)&v127[3];
    uint64_t v121 = v73;
    uint64_t v122 = v72;
    uint64_t v123 = v55;
    uint64_t v124 = v89;
    uint64_t v125 = v87;
    return sub_1B5951E1C((uint64_t)&v106);
  }
}

uint64_t sub_1B59513CC(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 184) = a1;
  *(void *)(v3 + 192) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  *(void *)(v3 + 200) = swift_task_alloc();
  long long v4 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v3 + 144) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v3 + 160) = v4;
  *(void *)(v3 + 176) = *(void *)(v2 + 160);
  long long v5 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v3 + 96) = v5;
  long long v6 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v3 + 128) = v6;
  long long v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v7;
  long long v8 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 64) = v8;
  return MEMORY[0x1F4188298](sub_1B5951490, 0, 0);
}

uint64_t sub_1B5951490()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = sub_1B5A1C188();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  long long v6 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v5 + 160) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v5 + 176) = v6;
  uint64_t v7 = *(void *)(v0 + 176);
  long long v8 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v5 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v5 + 112) = v8;
  long long v9 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v5 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v5 + 144) = v9;
  long long v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v5 + 48) = v10;
  long long v11 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v5 + 80) = v11;
  *(void *)(v5 + 192) = v7;
  *(void *)(v5 + 200) = v3;
  *(void *)(v5 + 208) = v1;
  sub_1B592C66C(v0 + 16);
  swift_retain();
  swift_retain();
  sub_1B5923814(v2, (uint64_t)&unk_1E9D639A8, v5);
  swift_release();
  swift_task_dealloc();
  unint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1B59515DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1B594E9FC(a1, a2, a3, a4);
}

uint64_t sub_1B59515F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59503D4(a1, a2);
}

unint64_t sub_1B595160C(uint64_t a1)
{
  unint64_t result = sub_1B5951634();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5951634()
{
  unint64_t result = qword_1E9D642B8;
  if (!qword_1E9D642B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D642B8);
  }
  return result;
}

unint64_t sub_1B5951688(uint64_t a1)
{
  unint64_t result = sub_1B59516B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59516B0()
{
  unint64_t result = qword_1E9D642C8;
  if (!qword_1E9D642C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9D642C8);
  }
  return result;
}

uint64_t sub_1B5951704(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5951760(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5951794(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B59517CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1B592D9C8;
  return sub_1B5924308(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1B59518A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

unint64_t sub_1B5951940()
{
  unint64_t result = qword_1E9D64310;
  if (!qword_1E9D64310)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64308);
    sub_1B59519BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64310);
  }
  return result;
}

unint64_t sub_1B59519BC()
{
  unint64_t result = qword_1E9D64318;
  if (!qword_1E9D64318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64318);
  }
  return result;
}

unint64_t sub_1B5951A10()
{
  unint64_t result = qword_1E9D64320;
  if (!qword_1E9D64320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64320);
  }
  return result;
}

uint64_t sub_1B5951A64()
{
  swift_unknownObjectRelease();
  sub_1B5904A88(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  unsigned int v1 = *(unsigned __int8 *)(v0 + 88);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 120);
  if (v2 != 255) {
    sub_1B5905248(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), v2 & 1);
  }
  int v3 = *(unsigned __int8 *)(v0 + 152);
  if (v3 != 255) {
    sub_1B5905248(*(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), v3 & 1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 216, 7);
}

uint64_t sub_1B5951B2C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v8 = v1[25];
  uint64_t v7 = v1[26];
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1B5921C08;
  return sub_1B594EB58(a1, v4, v5, v6, v8, v7);
}

unint64_t sub_1B5951BF4()
{
  unint64_t result = qword_1E9D64330;
  if (!qword_1E9D64330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64330);
  }
  return result;
}

unint64_t sub_1B5951C48()
{
  unint64_t result = qword_1E9D62BE8;
  if (!qword_1E9D62BE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D62BE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62BE8);
  }
  return result;
}

unint64_t sub_1B5951CA4()
{
  unint64_t result = qword_1E9D64340;
  if (!qword_1E9D64340)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64338);
    sub_1B5951D18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64340);
  }
  return result;
}

unint64_t sub_1B5951D18()
{
  unint64_t result = qword_1E9D64348;
  if (!qword_1E9D64348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64348);
  }
  return result;
}

uint64_t sub_1B5951D6C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5951DC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5951E1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 112);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 56);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 88);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 120);
  sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_1B5904B4C(v2, v3, v4, v8);
  sub_1B5905230(v5, v6, v7, v9);
  sub_1B5905230(v14, v13, v12, v10);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6LiftUI17HTTPRequestMethodOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6LiftUI17HTTPRequestMethodOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5952074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPRequestAction.CodingKeys()
{
  return &type metadata for HTTPRequestAction.CodingKeys;
}

unint64_t sub_1B59520B0()
{
  unint64_t result = qword_1E9D64350;
  if (!qword_1E9D64350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64350);
  }
  return result;
}

unint64_t sub_1B5952108()
{
  unint64_t result = qword_1E9D64358;
  if (!qword_1E9D64358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64358);
  }
  return result;
}

unint64_t sub_1B5952160()
{
  unint64_t result = qword_1E9D64360;
  if (!qword_1E9D64360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64360);
  }
  return result;
}

uint64_t sub_1B59521B4()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t *sub_1B5952200(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64368) + 48);
      int v8 = (char *)a1 + v7;
      unsigned __int8 v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1B5A1C3F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      uint64_t v12 = sub_1B5A1C3F8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B59523A8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 2)
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64368) + 48);
    }
    else if (result)
    {
      return result;
    }
  }
  uint64_t v3 = sub_1B5A1C3F8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(a1, v3);
}

void *sub_1B595244C(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
    uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64368) + 48);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1B5A1C3F8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    uint64_t v9 = sub_1B5A1C3F8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1B59525A4(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1B5952714((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64368) + 48);
      uint64_t v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = sub_1B5A1C3F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      uint64_t v8 = sub_1B5A1C3F8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B5952714(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DynamicKeyError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DynamicKeyError()
{
  uint64_t result = qword_1E9D64370;
  if (!qword_1E9D64370) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1B59527BC(_OWORD *a1, _OWORD *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64368) + 48);
    uint64_t v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    uint64_t v7 = sub_1B5A1C3F8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  }
  else
  {
    uint64_t v8 = sub_1B5A1C3F8();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_1B59528B4(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1B5952714((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64368) + 48);
      uint64_t v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = sub_1B5A1C3F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    }
    else
    {
      uint64_t v8 = sub_1B5A1C3F8();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B59529BC()
{
  uint64_t result = sub_1B5A1C3F8();
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v2;
    uint64_t v5 = v3;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for DynamicKey()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DynamicKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DynamicKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for DynamicKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicKey()
{
  return &type metadata for DynamicKey;
}

uint64_t sub_1B5952BF4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_1B5952C08()
{
  return *(void *)(v0 + 16);
}

void sub_1B5952C14(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_1B5952C24(uint64_t a1)
{
  unint64_t v2 = sub_1B590C798();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5952C60(uint64_t a1)
{
  unint64_t v2 = sub_1B590C798();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5952C9C(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1B5A1C678();
  }
}

uint64_t sub_1B5952CCC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DynamicKeyError();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B5A1C3F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5952F34(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = &v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64368) + 48)];
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v12(v10, v11, v7);
  }
  else
  {
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v12(v10, v6, v7);
  }
  v12(a1, v10, v7);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
}

unint64_t sub_1B5952E88()
{
  unint64_t result = qword_1E9D64380;
  if (!qword_1E9D64380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64380);
  }
  return result;
}

unint64_t sub_1B5952EE0()
{
  unint64_t result = qword_1E9D64388;
  if (!qword_1E9D64388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64388);
  }
  return result;
}

uint64_t sub_1B5952F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DynamicKeyError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for DisabledModifier()
{
  return &type metadata for DisabledModifier;
}

uint64_t sub_1B5952FA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    sub_1B59095C8((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
    sub_1B5A1C6C8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *(_OWORD *)a2 = v6;
    *(void *)(a2 + 16) = v7;
    *(unsigned char *)(a2 + 24) = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1B59530D0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v8 = *(void *)v3;
  uint64_t v9 = *(void *)(v3 + 8);
  uint64_t v10 = *(void *)(v3 + 16);
  char v11 = *(unsigned char *)(v3 + 24);
  sub_1B590D634(*(void *)v3, v9, v10, v11);
  sub_1B59B4120(a2, v8, v9, v10, v11);
  sub_1B590D6F0(v8, v9, v10, v11);
  if (!v4)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64398);
    a3[3] = sub_1B5A1A748();
    sub_1B59095C8(&qword_1E9D643A0, &qword_1E9D64398);
    a3[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B5A1B738();
  }
}

uint64_t sub_1B5953230@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5952FA8(a1, a2);
}

unint64_t sub_1B5953248(uint64_t a1)
{
  unint64_t result = sub_1B5953270();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5953270()
{
  unint64_t result = qword_1E9D64390;
  if (!qword_1E9D64390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64390);
  }
  return result;
}

uint64_t sub_1B59532C4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1B596924C(0, v2, 0);
    uint64_t v3 = v10;
    uint64_t v5 = a1 + 32;
    while (1)
    {
      v5 += 8;
      swift_retain();
      sub_1B5954744(v9);
      if (v1) {
        break;
      }
      swift_release();
      uint64_t v10 = v3;
      unint64_t v7 = *(void *)(v3 + 16);
      unint64_t v6 = *(void *)(v3 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_1B596924C(v6 > 1, v7 + 1, 1);
        uint64_t v3 = v10;
      }
      *(void *)(v3 + 16) = v7 + 1;
      sub_1B59098F4(v9, (_OWORD *)(v3 + 32 * v7 + 32));
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_release();
  }
  return v3;
}

uint64_t sub_1B59533D8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1B5A1C1E8();
  if (!v18) {
    return sub_1B5A1C0C8();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1B5A1C498();
  uint64_t v32 = sub_1B5A1C4A8();
  sub_1B5A1C448();
  uint64_t v36 = v8;
  uint64_t result = sub_1B5A1C1D8();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    int64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_1B5A1C208();
      uint64_t v22 = v12;
      int v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1B5A1C488();
      sub_1B5A1C1F8();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_1B59537D8()
{
  unint64_t v1 = *v0;
  switch(v1 >> 61)
  {
    case 1uLL:
      uint64_t v5 = sub_1B5A1C638();
      break;
    case 2uLL:
      sub_1B5A1C1B8();
      goto LABEL_7;
    case 3uLL:
      sub_1B5A1BFA8();
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t v5 = 0;
      break;
    case 4uLL:
    case 5uLL:
      sub_1B5951A10();
      uint64_t v2 = swift_allocError();
      unint64_t v3 = MEMORY[0x1E4FBB1A0];
      *uint64_t v4 = v1;
      v4[1] = v3;
      swift_retain();
      uint64_t v5 = v2;
      swift_willThrow();
      break;
    default:
      uint64_t v5 = *(void *)(v1 + 16);
      swift_bridgeObjectRetain();
      break;
  }
  return v5;
}

uint64_t DecodableState.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D643A8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F00);
  MEMORY[0x1F4188790](v21);
  uint64_t v20 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (v2)
  {

    uint64_t v23 = 0;
    memset(v22, 0, sizeof(v22));
    sub_1B5908FC0((uint64_t)v22, &qword_1E9D643B0);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1B5A1C808();
    uint64_t v19 = a2;
    sub_1B5908BE8(v22, (uint64_t)&v24);
    __swift_project_boxed_opaque_existential_1(&v24, v25);
    char v7 = sub_1B5A1C658();
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    if ((v7 & 1) == 0)
    {
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v24, v25);
        sub_1B5958CA4();
        sub_1B5A1C648();
        uint64_t v14 = *(void *)&v22[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_1B59BA308(0, v8[2] + 1, 1, v8);
        }
        unint64_t v16 = v8[2];
        unint64_t v15 = v8[3];
        if (v16 >= v15 >> 1) {
          uint64_t v8 = sub_1B59BA308((void *)(v15 > 1), v16 + 1, 1, v8);
        }
        _OWORD v8[2] = v16 + 1;
        v8[v16 + 4] = v14;
        __swift_project_boxed_opaque_existential_1(&v24, v25);
      }
      while ((sub_1B5A1C658() & 1) == 0);
    }
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    unint64_t v13 = v9 | 0x8000000000000000;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    a2 = v19;
  }
  else
  {
    sub_1B5908BE8(v22, (uint64_t)&v24);
    __swift_project_boxed_opaque_existential_1(&v24, v25);
    uint64_t v10 = sub_1B5A1C688();
    uint64_t v12 = v11;
    unint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    *(void *)(v13 + 24) = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  }
  *a2 = v13;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t DecodableState.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D643C8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1B5A1C858();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
      sub_1B5A1C708();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    case 2uLL:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1B5A1C858();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
      sub_1B5A1C6F8();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    case 3uLL:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1B5A1C858();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
      sub_1B5A1C6E8();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    case 4uLL:
      uint64_t v9 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1B5A1C848();
      uint64_t v31 = v9;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
      sub_1B595AE48(&qword_1E9D643D0);
      sub_1B59519BC();
      sub_1B5A1C668();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    case 5uLL:
      uint64_t v26 = v5;
      uint64_t v11 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1B590C798();
      swift_bridgeObjectRetain();
      sub_1B5A1C868();
      int64_t v12 = 0;
      uint64_t v13 = *(void *)(v11 + 64);
      uint64_t v27 = v11 + 64;
      uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
      uint64_t v15 = -1;
      if (v14 < 64) {
        uint64_t v15 = ~(-1 << v14);
      }
      unint64_t v16 = v15 & v13;
      int64_t v28 = (unint64_t)(v14 + 63) >> 6;
      if ((v15 & v13) != 0) {
        goto LABEL_11;
      }
      break;
    default:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1B5A1C858();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
      sub_1B5A1C6D8();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
LABEL_12:
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v12 >= v28) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v27 + 8 * v12);
  if (v20) {
    goto LABEL_22;
  }
  int64_t v21 = v12 + 1;
  if (v12 + 1 >= v28)
  {
LABEL_31:
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v4);
  }
  unint64_t v20 = *(void *)(v27 + 8 * v21);
  if (!v20)
  {
    int64_t v21 = v12 + 2;
    if (v12 + 2 >= v28) {
      goto LABEL_31;
    }
    unint64_t v20 = *(void *)(v27 + 8 * v21);
    if (!v20)
    {
      int64_t v21 = v12 + 3;
      if (v12 + 3 < v28)
      {
        unint64_t v20 = *(void *)(v27 + 8 * v21);
        if (v20) {
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v12 = v21 + 1;
          if (__OFADD__(v21, 1)) {
            break;
          }
          if (v12 >= v28) {
            goto LABEL_31;
          }
          unint64_t v20 = *(void *)(v27 + 8 * v12);
          ++v21;
          if (v20) {
            goto LABEL_22;
          }
        }
LABEL_33:
        __break(1u);
        JUMPOUT(0x1B59546E4);
      }
      goto LABEL_31;
    }
  }
LABEL_21:
  int64_t v12 = v21;
LABEL_22:
  unint64_t v16 = (v20 - 1) & v20;
  for (unint64_t i = __clz(__rbit64(v20)) + (v12 << 6); ; unint64_t i = v17 | (v12 << 6))
  {
    uint64_t v22 = (uint64_t *)(*(void *)(v11 + 48) + 16 * i);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v31 = *(void *)(*(void *)(v11 + 56) + 8 * i);
    v29[0] = v23;
    v29[1] = v24;
    v29[2] = 0;
    LOBYTE(v30) = 1;
    sub_1B59519BC();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B5A1C628();
    if (v2) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    if (!v16) {
      goto LABEL_12;
    }
LABEL_11:
    unint64_t v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
  }
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v4);
  return swift_release();
}

uint64_t sub_1B59546FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  return (*(uint64_t (**)(uint64_t *))(a2 + 16))(&v4);
}

void sub_1B5954744(uint64_t *a1@<X8>)
{
  uint64_t v4 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v7 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      a1[3] = MEMORY[0x1E4FBB550];
      *a1 = v7;
      break;
    case 2uLL:
      uint64_t v8 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      a1[3] = MEMORY[0x1E4FBB3D0];
      *a1 = v8;
      break;
    case 3uLL:
      char v9 = *(unsigned char *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      a1[3] = MEMORY[0x1E4FBB390];
      *(unsigned char *)a1 = v9;
      break;
    case 4uLL:
      uint64_t v10 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      int64_t v11 = *(void *)(v10 + 16);
      uint64_t v12 = MEMORY[0x1E4FBC860];
      if (v11)
      {
        uint64_t v20 = MEMORY[0x1E4FBC860];
        sub_1B596924C(0, v11, 0);
        uint64_t v12 = v20;
        uint64_t v13 = v10 + 32;
        while (1)
        {
          v13 += 8;
          uint64_t v14 = swift_retain();
          sub_1B5954744(v19, v14);
          if (v2) {
            break;
          }
          swift_release();
          uint64_t v20 = v12;
          unint64_t v16 = *(void *)(v12 + 16);
          unint64_t v15 = *(void *)(v12 + 24);
          if (v16 >= v15 >> 1)
          {
            sub_1B596924C(v15 > 1, v16 + 1, 1);
            uint64_t v12 = v20;
          }
          *(void *)(v12 + 16) = v16 + 1;
          sub_1B59098F4(v19, (_OWORD *)(v12 + 32 * v16 + 32));
          if (!--v11) {
            goto LABEL_15;
          }
        }
        swift_release();
        swift_release();
      }
      else
      {
LABEL_15:
        a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E30);
        *a1 = v12;
      }
      break;
    case 5uLL:
      uint64_t v17 = sub_1B5959A18(*(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
      if (!v2)
      {
        uint64_t v18 = v17;
        a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64408);
        *a1 = v18;
      }
      break;
    default:
      uint64_t v6 = *(void *)(v4 + 16);
      uint64_t v5 = *(void *)(v4 + 24);
      a1[3] = MEMORY[0x1E4FBB1A0];
      *a1 = v6;
      a1[1] = v5;
      swift_bridgeObjectRetain();
      break;
  }
}

uint64_t sub_1B5954958@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return DecodableState.init(from:)(a1, a2);
}

uint64_t sub_1B5954970(void *a1)
{
  return DecodableState.encode(to:)(a1);
}

uint64_t sub_1B595498C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    unint64_t v3 = (unint64_t *)(a1 + 32);
    uint64_t v4 = (unint64_t *)(a2 + 32);
    while (2)
    {
      unint64_t v10 = *v3++;
      unint64_t v9 = v10;
      unint64_t v12 = *v4++;
      unint64_t v11 = v12;
      switch(v9 >> 61)
      {
        case 1uLL:
          if (v11 >> 61 != 1
            || *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
          {
            return 0;
          }
          goto LABEL_8;
        case 2uLL:
          if (v11 >> 61 != 2
            || *(double *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(double *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
          {
            return 0;
          }
          goto LABEL_8;
        case 3uLL:
          if (v11 >> 61 != 3
            || *(unsigned __int8 *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(unsigned __int8 *)((v11 & 0x1FFFFFFFFFFFFFFFLL)
                                                                                              + 0x10))
          {
            return 0;
          }
          goto LABEL_8;
        case 4uLL:
          if (v11 >> 61 != 4) {
            return 0;
          }
          uint64_t v5 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v6 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          swift_retain_n();
          swift_retain_n();
          char v7 = sub_1B595498C(v5, v6);
          goto LABEL_7;
        case 5uLL:
          if (v11 >> 61 != 5) {
            return 0;
          }
          uint64_t v14 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v15 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          swift_retain_n();
          swift_retain_n();
          char v7 = sub_1B5954B88(v14, v15);
LABEL_7:
          char v8 = v7;
          swift_release_n();
          swift_release_n();
          if (v8) {
            goto LABEL_8;
          }
          return 0;
        default:
          if (v11 >> 61) {
            return 0;
          }
          BOOL v13 = *(void *)(v9 + 16) == *(void *)(v11 + 16) && *(void *)(v9 + 24) == *(void *)(v11 + 24);
          if (!v13 && (sub_1B5A1C678() & 1) == 0) {
            return 0;
          }
LABEL_8:
          if (--v2) {
            continue;
          }
          return 1;
      }
    }
  }
  return 1;
}

uint64_t sub_1B5954B88(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v89 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v86 = a1 + 64;
LABEL_6:
  while (2)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
    }
    else
    {
      int64_t v11 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_149;
      }
      if (v11 >= v89) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v11);
      ++v4;
      if (!v12)
      {
        int64_t v4 = v11 + 1;
        if (v11 + 1 >= v89) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 2;
          if (v11 + 2 >= v89) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12)
          {
            int64_t v4 = v11 + 3;
            if (v11 + 3 >= v89) {
              return 1;
            }
            unint64_t v12 = *(void *)(v5 + 8 * v4);
            if (!v12)
            {
              int64_t v13 = v11 + 4;
              if (v13 >= v89) {
                return 1;
              }
              unint64_t v12 = *(void *)(v5 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v4 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_152;
                  }
                  if (v4 >= v89) {
                    return 1;
                  }
                  unint64_t v12 = *(void *)(v5 + 8 * v4);
                  ++v13;
                  if (v12) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v4 = v13;
            }
          }
        }
      }
LABEL_23:
      unint64_t v8 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    }
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1B59049B8(v15, v16);
    char v20 = v19;
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      goto LABEL_146;
    }
    unint64_t v21 = *(void *)(*(void *)(a2 + 56) + 8 * v18);
    switch(v21 >> 61)
    {
      case 1uLL:
        if (v17 >> 61 != 1) {
          goto LABEL_146;
        }
        uint64_t v24 = *(void *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v25 = *(void *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_release();
        if (v24 != v25) {
          return 0;
        }
        continue;
      case 2uLL:
        if (v17 >> 61 != 2) {
          goto LABEL_146;
        }
        double v26 = *(double *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        double v27 = *(double *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_release();
        if (v26 != v27) {
          return 0;
        }
        continue;
      case 3uLL:
        if (v17 >> 61 != 3) {
          goto LABEL_146;
        }
        int v28 = *(unsigned __int8 *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        int v29 = *(unsigned __int8 *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_release();
        if (v28 != v29) {
          return 0;
        }
        continue;
      case 4uLL:
        if (v17 >> 61 != 4) {
          goto LABEL_146;
        }
        uint64_t v30 = *(void *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v31 = *(void *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v32 = *(void *)(v30 + 16);
        if (v32 != *(void *)(v31 + 16)) {
          goto LABEL_146;
        }
        if (v32) {
          BOOL v33 = v30 == v31;
        }
        else {
          BOOL v33 = 1;
        }
        if (v33) {
          goto LABEL_54;
        }
        uint64_t v87 = v31 + 32;
        uint64_t v88 = v30 + 32;
        swift_retain_n();
        swift_retain();
        unint64_t v36 = 0;
        uint64_t v82 = v32;
        uint64_t v83 = v31;
LABEL_57:
        if (v36 >= *(void *)(v31 + 16))
        {
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          JUMPOUT(0x1B59555B8);
        }
        uint64_t v37 = v36++;
        unint64_t v38 = *(void *)(v88 + 8 * v37);
        unint64_t v39 = *(void *)(v87 + 8 * v37);
        switch(v38 >> 61)
        {
          case 1uLL:
            if (v39 >> 61 != 1
              || *(void *)((v38 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(void *)((v39 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
            {
              goto LABEL_145;
            }
            goto LABEL_56;
          case 2uLL:
            if (v39 >> 61 != 2
              || *(double *)((v38 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(double *)((v39 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
            {
              goto LABEL_145;
            }
            goto LABEL_56;
          case 3uLL:
            if (v39 >> 61 != 3
              || *(unsigned __int8 *)((v38 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(unsigned __int8 *)((v39 & 0x1FFFFFFFFFFFFFFFLL)
                                                                                                 + 0x10))
            {
              goto LABEL_145;
            }
            goto LABEL_56;
          case 4uLL:
            if (v39 >> 61 != 4) {
              goto LABEL_145;
            }
            uint64_t v41 = *(void *)((v38 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v42 = *(void *)((v39 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v43 = *(void *)(v41 + 16);
            if (v43 != *(void *)(v42 + 16)) {
              goto LABEL_145;
            }
            if (v43) {
              BOOL v44 = v41 == v42;
            }
            else {
              BOOL v44 = 1;
            }
            if (v44) {
              goto LABEL_56;
            }
            uint64_t v85 = v41 + 32;
            uint64_t v84 = v42 + 32;
            uint64_t v79 = *(void *)(v41 + 16);
            uint64_t v80 = *(void *)((v39 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            swift_retain_n();
            swift_retain_n();
            uint64_t v46 = v79;
            uint64_t v45 = v80;
            unint64_t v47 = 0;
            break;
          case 5uLL:
            if (v39 >> 61 != 5) {
              goto LABEL_145;
            }
            uint64_t v48 = *(void *)((v38 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v49 = *(void *)((v39 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            swift_retain_n();
            swift_retain_n();
            uint64_t v50 = v49;
            uint64_t v5 = v86;
            LOBYTE(v48) = sub_1B5954B88(v48, v50);
            uint64_t v32 = v82;
            swift_release_n();
            uint64_t v31 = v83;
            swift_release_n();
            if ((v48 & 1) == 0) {
              goto LABEL_145;
            }
            goto LABEL_56;
          default:
            if (v39 >> 61) {
              goto LABEL_145;
            }
            BOOL v40 = *(void *)(v38 + 16) == *(void *)(v39 + 16) && *(void *)(v38 + 24) == *(void *)(v39 + 24);
            if (!v40 && (sub_1B5A1C678() & 1) == 0) {
              goto LABEL_145;
            }
            goto LABEL_56;
        }
LABEL_87:
        if (v47 >= *(void *)(v45 + 16)) {
          goto LABEL_150;
        }
        uint64_t v51 = v47++;
        unint64_t v52 = *(void *)(v85 + 8 * v51);
        unint64_t v53 = *(void *)(v84 + 8 * v51);
        switch(v52 >> 61)
        {
          case 1uLL:
            if (v53 >> 61 != 1
              || *(void *)((v52 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(void *)((v53 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
            {
              goto LABEL_144;
            }
            goto LABEL_86;
          case 2uLL:
            if (v53 >> 61 != 2
              || *(double *)((v52 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(double *)((v53 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
            {
              goto LABEL_144;
            }
            goto LABEL_86;
          case 3uLL:
            if (v53 >> 61 != 3
              || *(unsigned __int8 *)((v52 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(unsigned __int8 *)((v53 & 0x1FFFFFFFFFFFFFFFLL)
                                                                                                 + 0x10))
            {
              goto LABEL_144;
            }
            goto LABEL_86;
          case 4uLL:
            if (v53 >> 61 != 4) {
              goto LABEL_144;
            }
            uint64_t v57 = *(void *)((v52 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v58 = *(void *)((v53 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v59 = *(void *)(v57 + 16);
            if (v59 != *(void *)(v58 + 16)) {
              goto LABEL_144;
            }
            if (v59) {
              BOOL v60 = v57 == v58;
            }
            else {
              BOOL v60 = 1;
            }
            if (v60) {
              goto LABEL_86;
            }
            uint64_t v76 = *(void *)(v57 + 16);
            unint64_t v77 = v47;
            uint64_t v81 = v57 + 32;
            swift_retain_n();
            swift_retain_n();
            uint64_t v61 = v76;
            unint64_t v62 = 0;
            break;
          case 5uLL:
            if (v53 >> 61 != 5) {
              goto LABEL_144;
            }
            uint64_t v68 = *(void *)((v52 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v69 = *(void *)((v53 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            unint64_t v78 = v47;
            swift_retain_n();
            swift_retain_n();
            LOBYTE(v68) = sub_1B5954B88(v68, v69);
            uint64_t v31 = v83;
            swift_release_n();
            uint64_t v32 = v82;
            swift_release_n();
            unint64_t v47 = v78;
            uint64_t v46 = v79;
            uint64_t v45 = v80;
            if ((v68 & 1) == 0) {
              goto LABEL_144;
            }
            goto LABEL_86;
          default:
            if (v53 >> 61) {
              goto LABEL_144;
            }
            if (*(void *)(v52 + 16) != *(void *)(v53 + 16) || *(void *)(v52 + 24) != *(void *)(v53 + 24))
            {
              unint64_t v55 = v47;
              char v56 = sub_1B5A1C678();
              unint64_t v47 = v55;
              uint64_t v46 = v79;
              uint64_t v45 = v80;
              if ((v56 & 1) == 0) {
                goto LABEL_144;
              }
            }
            goto LABEL_86;
        }
        while (1)
        {
          if (v62 >= *(void *)(v58 + 16)) {
            goto LABEL_151;
          }
          uint64_t v63 = v62++;
          unint64_t v64 = *(void *)(v81 + 8 * v63);
          unint64_t v65 = *(void *)(v58 + 32 + 8 * v63);
          switch(v64 >> 61)
          {
            case 1uLL:
              if (v65 >> 61 != 1
                || *(void *)((v64 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(void *)((v65 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
              {
                goto LABEL_143;
              }
              goto LABEL_113;
            case 2uLL:
              if (v65 >> 61 != 2
                || *(double *)((v64 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(double *)((v65 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
              {
                goto LABEL_143;
              }
              goto LABEL_113;
            case 3uLL:
              if (v65 >> 61 != 3
                || *(unsigned __int8 *)((v64 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(unsigned __int8 *)((v65 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
              {
                goto LABEL_143;
              }
              goto LABEL_113;
            case 4uLL:
              if (v65 >> 61 != 4) {
                goto LABEL_143;
              }
              uint64_t v71 = *(void *)((v65 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v73 = *(void *)((v64 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
              swift_retain_n();
              swift_retain_n();
              char v74 = sub_1B595498C(v73, v71);
              uint64_t v32 = v82;
              swift_release_n();
              uint64_t v31 = v83;
              break;
            case 5uLL:
              if (v65 >> 61 != 5) {
                goto LABEL_143;
              }
              uint64_t v72 = *(void *)((v65 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v75 = *(void *)((v64 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
              swift_retain_n();
              swift_retain_n();
              char v74 = sub_1B5954B88(v75, v72);
              uint64_t v31 = v83;
              swift_release_n();
              uint64_t v32 = v82;
              break;
            default:
              if (v65 >> 61) {
                goto LABEL_143;
              }
              if (*(void *)(v64 + 16) != *(void *)(v65 + 16) || *(void *)(v64 + 24) != *(void *)(v65 + 24))
              {
                char v67 = sub_1B5A1C678();
                uint64_t v61 = v76;
                if ((v67 & 1) == 0) {
                  goto LABEL_143;
                }
              }
              goto LABEL_113;
          }
          swift_release_n();
          uint64_t v61 = v76;
          if ((v74 & 1) == 0) {
            break;
          }
LABEL_113:
          if (v61 == v62)
          {
            swift_release_n();
            swift_release_n();
            uint64_t v46 = v79;
            uint64_t v45 = v80;
            unint64_t v47 = v77;
LABEL_86:
            uint64_t v5 = v86;
            if (v47 != v46) {
              goto LABEL_87;
            }
            swift_release_n();
            swift_release_n();
LABEL_56:
            if (v36 == v32)
            {
              swift_release_n();
              swift_release_n();
              goto LABEL_6;
            }
            goto LABEL_57;
          }
        }
LABEL_143:
        swift_release_n();
        swift_release();
        swift_release();
LABEL_144:
        swift_release();
        swift_release();
        swift_release();
        swift_release();
LABEL_145:
        swift_release();
        swift_release();
        swift_release();
LABEL_146:
        swift_release();
        return 0;
      case 5uLL:
        if (v17 >> 61 != 5) {
          goto LABEL_146;
        }
        uint64_t v34 = *(void *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v35 = *(void *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain_n();
        swift_retain();
        LOBYTE(v34) = sub_1B5954B88(v34, v35);
        swift_release_n();
        swift_release_n();
        if ((v34 & 1) == 0) {
          return 0;
        }
        continue;
      default:
        if (v17 >> 61) {
          goto LABEL_146;
        }
        if (*(void *)(v21 + 16) == *(void *)(v17 + 16) && *(void *)(v21 + 24) == *(void *)(v17 + 24))
        {
          swift_retain();
          swift_release();
LABEL_54:
          swift_release();
          continue;
        }
        char v23 = sub_1B5A1C678();
        swift_retain();
        swift_release();
        swift_release();
        if (v23) {
          continue;
        }
        return 0;
    }
  }
}

uint64_t DecodableState.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      sub_1B5A1C7B8();
      uint64_t result = sub_1B5A1C7B8();
      break;
    case 2uLL:
      sub_1B5A1C7B8();
      uint64_t result = sub_1B5A1C7D8();
      break;
    case 3uLL:
      sub_1B5A1C7B8();
      uint64_t result = sub_1B5A1C7C8();
      break;
    case 4uLL:
      uint64_t v5 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1B5A1C7B8();
      uint64_t result = sub_1B595AA80(a1, v5);
      break;
    case 5uLL:
      uint64_t v6 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1B5A1C7B8();
      uint64_t result = sub_1B5959C54(a1, v6);
      break;
    default:
      sub_1B5A1C7B8();
      uint64_t result = sub_1B5A1BF88();
      break;
  }
  return result;
}

uint64_t DecodableState.hashValue.getter()
{
  v2[9] = *v0;
  sub_1B5A1C7A8();
  DecodableState.hash(into:)((uint64_t)v2);
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59557E4()
{
  v2[9] = *v0;
  sub_1B5A1C7A8();
  DecodableState.hash(into:)((uint64_t)v2);
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5955834()
{
  v2[9] = *v0;
  sub_1B5A1C7A8();
  DecodableState.hash(into:)((uint64_t)v2);
  return sub_1B5A1C7E8();
}

uint64_t DecodableState.id.getter()
{
  uint64_t v0 = sub_1B5A1A2A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5A1A298();
  uint64_t v4 = sub_1B5A1A288();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1B5955958@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1A2A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5A1A298();
  uint64_t v6 = sub_1B5A1A288();
  uint64_t v8 = v7;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  a1[1] = v8;
  return result;
}

uint64_t String.asDecodable.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *a3 = v6;
  return swift_bridgeObjectRetain();
}

uint64_t static String.create(with:)()
{
  return sub_1B59537D8();
}

uint64_t sub_1B5955AC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a1 = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B5955B1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59537D8();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t Int.asDecodable.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *a2 = result | 0x2000000000000000;
  return result;
}

uint64_t static Int.create(with:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >> 61 == 1) {
    return *(void *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  }
  sub_1B5951A10();
  swift_allocError();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *uint64_t v4 = v1;
  v4[1] = v3;
  swift_retain();
  return swift_willThrow();
}

uint64_t sub_1B5955C1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *a1 = result | 0x2000000000000000;
  return result;
}

uint64_t *sub_1B5955C60@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if ((unint64_t)*result >> 61 == 1)
  {
    *a2 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  }
  else
  {
    sub_1B5951A10();
    swift_allocError();
    *uint64_t v4 = v3;
    v4[1] = v2;
    swift_retain();
    return (uint64_t *)swift_willThrow();
  }
  return result;
}

uint64_t *static Double.create(with:)(uint64_t *a1)
{
  return sub_1B5956630(a1);
}

uint64_t sub_1B5955CF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *a1 = result | 0x4000000000000000;
  return result;
}

uint64_t *sub_1B5955D3C@<X0>(uint64_t *result@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *result;
  unint64_t v4 = (unint64_t)*result >> 61;
  if (v4 == 1)
  {
    double v5 = (double)*(uint64_t *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    double v5 = *(double *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_5:
    *a2 = v5;
    return result;
  }
  sub_1B5951A10();
  swift_allocError();
  *uint64_t v6 = v3;
  v6[1] = v2;
  swift_retain();
  return (uint64_t *)swift_willThrow();
}

uint64_t Bool.asDecodable.getter@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  *a2 = result | 0x6000000000000000;
  return result;
}

uint64_t static Bool.create(with:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >> 61 == 3)
  {
    char v2 = *(unsigned char *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  }
  else
  {
    sub_1B5951A10();
    swift_allocError();
    uint64_t v3 = MEMORY[0x1E4FBB390];
    *unint64_t v4 = v1;
    v4[1] = v3;
    swift_retain();
    swift_willThrow();
  }
  return v2 & 1;
}

uint64_t sub_1B5955E90@<X0>(uint64_t *a1@<X8>)
{
  char v3 = *v1;
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v3;
  *a1 = result | 0x6000000000000000;
  return result;
}

uint64_t *sub_1B5955ED4@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *result;
  if ((unint64_t)*result >> 61 == 3)
  {
    *a2 = *(unsigned char *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  }
  else
  {
    sub_1B5951A10();
    swift_allocError();
    *unint64_t v4 = v3;
    v4[1] = v2;
    swift_retain();
    return (uint64_t *)swift_willThrow();
  }
  return result;
}

uint64_t Array<A>.asDecodable.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v8 = swift_allocObject();
  v13[5] = a1;
  v13[2] = a2;
  v13[3] = a3;
  uint64_t v9 = sub_1B5A1C108();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_1B59533D8((void (*)(char *, char *))sub_1B595ADA8, (uint64_t)v13, v9, (uint64_t)&type metadata for DecodableState, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v11);
  *(void *)(v8 + 16) = result;
  *a4 = v8 | 0x8000000000000000;
  return result;
}

uint64_t static Array<A>.create(with:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >> 61 == 4)
  {
    uint64_t v14 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    MEMORY[0x1F4188790](v14);
    v12[2] = v4;
    uint64_t v12[3] = v5;
    swift_bridgeObjectRetain();
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E68);
    uint64_t v8 = sub_1B595AE48(&qword_1E9D63D88);
    uint64_t v9 = sub_1B59533D8((void (*)(char *, char *))sub_1B595ADEC, (uint64_t)v12, v6, a2, v7, v8, MEMORY[0x1E4FBC0F0], (uint64_t)&v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
    sub_1B5951A10();
    swift_allocError();
    *uint64_t v10 = v2;
    v10[1] = v9;
    swift_retain();
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_1B59561AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  return Array<A>.asDecodable.getter(*v3, *(void *)(a1 + 16), *(void *)(a2 - 8), a3);
}

uint64_t sub_1B59561C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = static Array<A>.create(with:)(a1, *(void *)(a2 + 16));
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t Dictionary<>.asDecodable.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  uint64_t result = sub_1B5A1BE58();
  *(void *)(v2 + 16) = result;
  *a1 = v2 | 0xA000000000000000;
  return result;
}

uint64_t static Dictionary<>.create(with:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >> 61 == 5)
  {
    MEMORY[0x1F4188790](a1);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1B5A1BE58();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
    sub_1B5951A10();
    swift_allocError();
    *uint64_t v3 = v1;
    v3[1] = v2;
    swift_retain();
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1B59563BC@<X0>(unint64_t *a1@<X8>)
{
  return Dictionary<>.asDecodable.getter(a1);
}

uint64_t sub_1B59563D0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = static Dictionary<>.create(with:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t DecodableState.asDecodable.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t static DecodableState.create(with:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1B5956438@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t sub_1B5956448@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t NSString.asDecodable.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  uint64_t result = sub_1B5A1BEF8();
  *(void *)(v2 + 16) = result;
  *(void *)(v2 + 24) = v4;
  *a1 = v2;
  return result;
}

uint64_t static NSString.create(with:)()
{
  uint64_t result = sub_1B59537D8();
  if (!v0)
  {
    uint64_t v2 = sub_1B5A1BEE8();
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

uint64_t sub_1B5956514@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  uint64_t result = sub_1B5A1BEF8();
  *(void *)(v2 + 16) = result;
  *(void *)(v2 + 24) = v4;
  *a1 = v2;
  return result;
}

uint64_t sub_1B5956568@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59537D8();
  if (!v1)
  {
    uint64_t v4 = sub_1B5A1BEE8();
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = v4;
  }
  return result;
}

uint64_t CGFloat.asDecodable.getter@<X0>(uint64_t *a1@<X8>, double a2@<D0>)
{
  uint64_t result = swift_allocObject();
  *(double *)(result + 16) = a2;
  *a1 = result | 0x4000000000000000;
  return result;
}

uint64_t *static CGFloat.create(with:)(uint64_t *a1)
{
  return sub_1B5956630(a1);
}

uint64_t *sub_1B5956630(uint64_t *result)
{
  uint64_t v1 = *result;
  unint64_t v2 = (unint64_t)*result >> 61;
  if (v2 != 1 && v2 != 2)
  {
    sub_1B5951A10();
    swift_allocError();
    uint64_t v3 = MEMORY[0x1E4FBB3D0];
    *uint64_t v4 = v1;
    v4[1] = v3;
    swift_retain();
    return (uint64_t *)swift_willThrow();
  }
  return result;
}

uint64_t *sub_1B59566C4@<X0>(uint64_t *result@<X0>, double *a2@<X8>)
{
  uint64_t v2 = *result;
  unint64_t v3 = (unint64_t)*result >> 61;
  if (v3 == 1)
  {
    double v4 = (double)*(uint64_t *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    double v4 = *(double *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_5:
    *a2 = v4;
    return result;
  }
  sub_1B5951A10();
  swift_allocError();
  uint64_t v5 = MEMORY[0x1E4FBB3D0];
  *uint64_t v6 = v2;
  v6[1] = v5;
  swift_retain();
  return (uint64_t *)swift_willThrow();
}

uint64_t NSDictionary.asDecodable.getter@<X0>(unint64_t *a1@<X8>)
{
  sub_1B5A1C228();
  swift_retain();
  sub_1B5A1C238();
  sub_1B595AED4((uint64_t)&v34, (uint64_t)&v37);
  if (!v38)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4FBC868];
LABEL_24:
    swift_release_n();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v1;
    *a1 = result | 0xA000000000000000;
    return result;
  }
  uint64_t v1 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = &v39;
  uint64_t v3 = MEMORY[0x1E4FBC840];
  while (1)
  {
    sub_1B59098F4(v2, v33);
    sub_1B59098F4(&v37, &v34);
    if (swift_dynamicCast()) {
      break;
    }
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    sub_1B5A1C238();
    sub_1B595AED4((uint64_t)&v34, (uint64_t)&v37);
    if (!v38) {
      goto LABEL_24;
    }
  }
  uint64_t v4 = v32[0];
  uint64_t v5 = v32[1];
  sub_1B59052CC((uint64_t)v33, (uint64_t)v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D643E0);
  if (!swift_dynamicCast())
  {
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
    sub_1B5908FC0((uint64_t)&v34, &qword_1E9D643E8);
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1B59049B8(v4, v5);
    char v22 = v21;
    swift_bridgeObjectRelease();
    if (v22)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v34 = v1;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B59593D8();
        uint64_t v1 = (void *)v34;
      }
      swift_bridgeObjectRelease();
      sub_1B595861C(v20, (uint64_t)v1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    goto LABEL_4;
  }
  uint64_t v6 = v3;
  uint64_t v7 = v2;
  uint64_t v8 = *((void *)&v35 + 1);
  uint64_t v9 = v36;
  __swift_project_boxed_opaque_existential_1(&v34, *((uint64_t *)&v35 + 1));
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v9 + 8))(&v31, v8, v9);
  uint64_t v10 = v31;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
  char v11 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v34 = v1;
  unint64_t v13 = sub_1B59049B8(v4, v5);
  uint64_t v14 = v1[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (!__OFADD__(v14, v15))
  {
    char v17 = v12;
    if (v1[3] < v16)
    {
      sub_1B59579F0(v16, v11);
      uint64_t v18 = sub_1B59049B8(v4, v5);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_27;
      }
      unint64_t v13 = v18;
      uint64_t v1 = (void *)v34;
      if ((v17 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_18:
      uint64_t v24 = v1[7];
      swift_release();
      *(void *)(v24 + 8 * v13) = v10;
LABEL_22:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v7;
      uint64_t v3 = v6;
      goto LABEL_4;
    }
    if (v11)
    {
      uint64_t v1 = (void *)v34;
      if (v12) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_1B59593D8();
      uint64_t v1 = (void *)v34;
      if (v17) {
        goto LABEL_18;
      }
    }
LABEL_20:
    v1[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v25 = (uint64_t *)(v1[6] + 16 * v13);
    *uint64_t v25 = v4;
    v25[1] = v5;
    *(void *)(v1[7] + 8 * v13) = v10;
    uint64_t v26 = v1[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_26;
    }
    v1[2] = v28;
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_1B5A1C738();
  __break(1u);
  return result;
}

uint64_t static NSDictionary.create(with:)(uint64_t *a1)
{
  return sub_1B595AF3C(a1);
}

uint64_t sub_1B5956B2C@<X0>(unint64_t *a1@<X8>)
{
  return NSDictionary.asDecodable.getter(a1);
}

uint64_t sub_1B5956B50@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B595AF3C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t NSArray.asDecodable.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v2 = sub_1B5A1A208();
  uint64_t v15 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = v1;
  sub_1B5A1C2A8();

  sub_1B595B018();
  sub_1B5A1C2C8();
  if (v24)
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1B59098F4(&v23, v22);
      sub_1B59052CC((uint64_t)v22, (uint64_t)v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D643E0);
      if (swift_dynamicCast())
      {
        uint64_t v8 = *((void *)&v20 + 1);
        uint64_t v7 = v21;
        __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 8))(&v17, v8, v7);
        uint64_t v9 = v17;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_1B59BA308(0, v6[2] + 1, 1, v6);
        }
        unint64_t v11 = v6[2];
        unint64_t v10 = v6[3];
        if (v11 >= v10 >> 1) {
          uint64_t v6 = sub_1B59BA308((void *)(v10 > 1), v11 + 1, 1, v6);
        }
        _OWORD v6[2] = v11 + 1;
        v6[v11 + 4] = v9;
      }
      else
      {
        uint64_t v21 = 0;
        long long v19 = 0u;
        long long v20 = 0u;
        sub_1B5908FC0((uint64_t)&v19, &qword_1E9D643E8);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      }
      sub_1B5A1C2C8();
    }
    while (v24);
  }
  else
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = swift_allocObject();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v4, v2);
  *(void *)(v12 + 16) = v6;
  *uint64_t v16 = v12 | 0x8000000000000000;
  return result;
}

int64_t static NSArray.create(with:)(uint64_t *a1)
{
  return sub_1B595B070(a1);
}

uint64_t sub_1B5956E2C@<X0>(unint64_t *a1@<X8>)
{
  return NSArray.asDecodable.getter(a1);
}

int64_t sub_1B5956E50@<X0>(uint64_t *a1@<X0>, int64_t *a2@<X8>)
{
  int64_t result = sub_1B595B070(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

id NSNumber.asDecodable.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = swift_allocObject();
  id result = objc_msgSend(v1, sel_doubleValue);
  *(void *)(v3 + 16) = v5;
  *a1 = v3 | 0x4000000000000000;
  return result;
}

uint64_t static NSNumber.create(with:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = (unint64_t)*a1 >> 61;
  if (v2 == 1)
  {
    double v3 = (double)*(uint64_t *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  }
  else
  {
    if (v2 != 2)
    {
      sub_1B5951A10();
      swift_allocError();
      uint64_t v7 = MEMORY[0x1E4FBB3D0];
      *uint64_t v8 = v1;
      v8[1] = v7;
      swift_retain();
      return swift_willThrow();
    }
    double v3 = *(double *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  }
  id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v3);
  uint64_t result = swift_dynamicCastUnknownClass();
  if (result) {
    return result;
  }

  sub_1B5951A10();
  swift_allocError();
  *uint64_t v6 = xmmword_1B5A24140;
  return swift_willThrow();
}

id sub_1B5956FD0@<X0>(uint64_t *a1@<X8>)
{
  double v3 = *v1;
  uint64_t v4 = swift_allocObject();
  id result = objc_msgSend(v3, sel_doubleValue);
  *(void *)(v4 + 16) = v6;
  *a1 = v4 | 0x4000000000000000;
  return result;
}

uint64_t sub_1B5957030@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = static NSNumber.create(with:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B595705C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_1B5957064(int64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      int64_t v5 = a1;
    }
    else {
      int64_t v5 = *(void *)(v3 + 16);
    }
    return sub_1B596924C(result, v5, 0);
  }
  return result;
}

double sub_1B59570DC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1B59049D0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1B5958F80();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1B5A1C4E8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_1B59098F4((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1B5958364(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1B5957208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1B59049B8(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1B59593D8();
      uint64_t v12 = v13;
    }
    swift_bridgeObjectRelease();
    *a3 = *(void *)(*(void *)(v12 + 56) + 8 * v8);
    sub_1B595861C(v8, v12);
    *uint64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a3 = 0xF000000000000007;
  }
  return result;
}

uint64_t sub_1B59572E8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_1B5A1C4E8();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  char v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64400);
  int v45 = a2;
  uint64_t v9 = sub_1B5A1C528();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    BOOL v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      BOOL v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        sub_1B59098F4((_OWORD *)(*(void *)(v8 + 56) + 32 * v20), v47);
      }
      else
      {
        (*v41)(v43, v26, v44);
        sub_1B59052CC(*(void *)(v8 + 56) + 32 * v20, (uint64_t)v47);
      }
      uint64_t result = sub_1B5A1BE98();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      (*v46)((char *)(*(void *)(v10 + 48) + v25 * v18), (unint64_t)v27, v28);
      uint64_t result = (uint64_t)sub_1B59098F4(v47, (_OWORD *)(*(void *)(v10 + 56) + 32 * v18));
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1B59576E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E48);
  char v37 = a2;
  uint64_t v6 = sub_1B5A1C528();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1B5A1C7A8();
    sub_1B5A1BF88();
    uint64_t result = sub_1B5A1C7E8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B59579F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E50);
  char v37 = a2;
  uint64_t v6 = sub_1B5A1C528();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_1B5A1C7A8();
    sub_1B5A1BF88();
    uint64_t result = sub_1B5A1C7E8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B5957D04(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E98);
  char v44 = a2;
  uint64_t v6 = sub_1B5A1C528();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v42 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v43 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v45 = v13;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v41) {
      break;
    }
    unint64_t v23 = v42;
    unint64_t v24 = v42[v22];
    int64_t v25 = v13 + 1;
    if (!v24)
    {
      int64_t v25 = v13 + 2;
      if (v13 + 2 >= v41) {
        goto LABEL_33;
      }
      unint64_t v24 = v42[v25];
      if (!v24)
      {
        uint64_t v26 = v13 + 3;
        if (v13 + 3 >= v41)
        {
LABEL_33:
          swift_release();
          if ((v44 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v42[v26];
        if (!v24)
        {
          while (1)
          {
            int64_t v25 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v25 >= v41) {
              goto LABEL_33;
            }
            unint64_t v24 = v42[v25];
            ++v26;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v25 = v13 + 3;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    int64_t v45 = v25;
    unint64_t v21 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_31:
    uint64_t v31 = *(void *)(v5 + 56);
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = v31 + 32 * v21;
    uint64_t v37 = *(void *)v35;
    uint64_t v36 = *(void *)(v35 + 8);
    uint64_t v38 = *(void *)(v35 + 16);
    char v39 = *(unsigned char *)(v35 + 24);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1B5909638(v37, v36, v38, v39);
    }
    sub_1B5A1C7A8();
    sub_1B5A1BF88();
    uint64_t result = sub_1B5A1C7E8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v34;
    v18[1] = v33;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
    *(void *)uint64_t v19 = v37;
    *(void *)(v19 + 8) = v36;
    *(void *)(v19 + 16) = v38;
    *(unsigned char *)(v19 + 24) = v39;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v43;
    int64_t v13 = v45;
  }
  swift_release();
  unint64_t v23 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B5958058(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v7 = sub_1B5A1C528();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v23 = v22 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v12) {
      break;
    }
    int64_t v25 = (void *)(v6 + 64);
    unint64_t v26 = *(void *)(v38 + 8 * v24);
    ++v15;
    if (!v26)
    {
      int64_t v15 = v24 + 1;
      if (v24 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v38 + 8 * v15);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v15 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v38 + 8 * v15);
            ++v27;
            if (v26) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v27;
      }
    }
LABEL_30:
    unint64_t v11 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_31:
    uint64_t v32 = 16 * v23;
    uint64_t v33 = (uint64_t *)(*(void *)(v6 + 48) + v32);
    uint64_t v35 = *v33;
    uint64_t v34 = v33[1];
    long long v40 = *(_OWORD *)(*(void *)(v6 + 56) + v32);
    if ((v39 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1B5A1C7A8();
    sub_1B5A1BF88();
    uint64_t result = sub_1B5A1C7E8();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v18 == v29;
        if (v18 == v29) {
          unint64_t v18 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v13 + 8 * v18);
      }
      while (v31 == -1);
      unint64_t v19 = __clz(__rbit64(~v31)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 16 * v19;
    unint64_t v21 = (void *)(*(void *)(v8 + 48) + v20);
    void *v21 = v35;
    v21[1] = v34;
    *(_OWORD *)(*(void *)(v8 + 56) + v20) = v40;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  int64_t v25 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

unint64_t sub_1B5958364(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5A1C4E8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v38 = a2 + 64;
    unint64_t result = sub_1B5A1C358();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v36 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v35(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        uint64_t v18 = sub_1B5A1BE98();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            unint64_t v26 = (_OWORD *)(v25 + 32 * a1);
            int64_t v27 = (_OWORD *)(v25 + 32 * v10);
            uint64_t v12 = v38;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 2))
            {
              long long v28 = v27[1];
              _OWORD *v26 = *v27;
              v26[1] = v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    unint64_t v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *unint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1B595861C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1B5A1C358();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B5A1C7A8();
        swift_bridgeObjectRetain();
        sub_1B5A1BF88();
        uint64_t v9 = sub_1B5A1C7E8();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_1B59587F4(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1B5A1C4E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1B59049D0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1B5958F80();
      goto LABEL_7;
    }
    sub_1B59572E8(v17, a3 & 1);
    unint64_t v23 = sub_1B59049D0(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1B5958EC0(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    unint64_t result = (_OWORD *)sub_1B5A1C738();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  BOOL v21 = (_OWORD *)(v20[7] + 32 * v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_1B59098F4(a1, v21);
}

uint64_t sub_1B59589CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1B59049B8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B5959228();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1B59576E4(result, a4 & 1);
  uint64_t result = sub_1B59049B8(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1B5A1C738();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B5958B30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1B59049B8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1B59593D8();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1B59579F0(v15, a4 & 1);
  uint64_t v21 = sub_1B59049B8(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1B5A1C738();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v18[2] = v26;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1B5958CA4()
{
  unint64_t result = qword_1E9D643C0;
  if (!qword_1E9D643C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D643C0);
  }
  return result;
}

uint64_t sub_1B5958CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_1B5958D10(a1, a2, a3, a4, a5, &qword_1E9D62E20);
}

uint64_t sub_1B5958D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_1B5958D10(a1, a2, a3, a4, a5, &qword_1E9D62E18);
}

uint64_t sub_1B5958D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6)
{
  uint64_t v8 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1B59049B8(a3, a4);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= result && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= result && (a5 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B5959818(a6);
LABEL_7:
    char v22 = (void *)*v8;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = (void *)(v22[7] + 16 * v16);
      void *v23 = a1;
      v23[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1B5958058(result, a5 & 1, a6);
  uint64_t result = sub_1B59049B8(a3, a4);
  if ((v20 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1B5A1C738();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
  char v22 = (void *)*v8;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  BOOL v25 = (uint64_t *)(v22[6] + 16 * v16);
  *BOOL v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v22[7] + 16 * v16);
  void *v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v22[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v22[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B5958E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_1B5958D10(a1, a2, a3, a4, a5, &qword_1E9D62E10);
}

uint64_t sub_1B5958EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_1B5958D10(a1, a2, a3, a4, a5, &qword_1E9D62E08);
}

uint64_t sub_1B5958EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_1B5958D10(a1, a2, a3, a4, a5, &qword_1E9D62E00);
}

_OWORD *sub_1B5958EC0(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1B5A1C4E8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_1B59098F4(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_1B5958F80()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B5A1C4E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64400);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1B5A1C518();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  char v22 = v1;
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v23 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v25 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 32 * v16;
    sub_1B59052CC(*(void *)(v6 + 56) + v18, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    uint64_t result = sub_1B59098F4(v26, (_OWORD *)(*(void *)(v8 + 56) + v18));
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v24)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1B5959228()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E48);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5A1C518();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    char v22 = (void *)(*(void *)(v4 + 48) + v16);
    *char v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B59593D8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5A1C518();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    char v22 = (void *)(*(void *)(v4 + 48) + v16);
    *char v22 = v18;
    v22[1] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_retain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B5959594()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B59595CC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1B59595DC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B59595EC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1B5959624()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E98);
  uint64_t v29 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1B5A1C518();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v29 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v12) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v5 + 8 * v26);
    ++v8;
    if (!v27)
    {
      int64_t v8 = v26 + 1;
      if (v26 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v5 + 8 * v8);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v27 - 1) & v27;
    unint64_t v14 = __clz(__rbit64(v27)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = *(void *)(v1 + 56);
    unint64_t v17 = (void *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v18 = v17[1];
    uint64_t v19 = 32 * v14;
    uint64_t v20 = *(void *)(v16 + v19);
    uint64_t v21 = *(void *)(v16 + v19 + 8);
    uint64_t v22 = *(void *)(v16 + v19 + 16);
    char v23 = *(unsigned char *)(v16 + v19 + 24);
    unint64_t v24 = (void *)(*(void *)(v3 + 48) + v15);
    *unint64_t v24 = *v17;
    v24[1] = v18;
    uint64_t v25 = *(void *)(v3 + 56) + v19;
    *(void *)uint64_t v25 = v20;
    *(void *)(v25 + 8) = v21;
    *(void *)(v25 + 16) = v22;
    *(unsigned char *)(v25 + 24) = v23;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1B5909638(v20, v21, v22, v23);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v12) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v5 + 8 * v28);
  if (v27)
  {
    int64_t v8 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v5 + 8 * v8);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B5959818(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B5A1C518();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + v17);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    long long v21 = *(_OWORD *)(*(void *)(v3 + 56) + v17);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = v20;
    v22[1] = v19;
    *(_OWORD *)(*(void *)(v5 + 56) + v17) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B59599BC()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0)
  {
    int64_t v3 = *(void *)(v1 + 16) + 1;
    return sub_1B596924C(0, v3, 1);
  }
  return result;
}

uint64_t sub_1B5959A18(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED8);
  uint64_t result = sub_1B5A1C518();
  uint64_t v4 = (void *)result;
  int64_t v5 = 0;
  uint64_t v26 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v7 = a1 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  uint64_t v23 = v7;
  int64_t v24 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v25 = result + 64;
  if ((v10 & v6) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v26 + 48) + 16 * i);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v28 = *(void *)(*(void *)(v26 + 56) + 8 * i);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B5954744(v27);
    swift_release();
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v4;
    }
    *(void *)(v25 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v20 = (void *)(v4[6] + 16 * i);
    *uint64_t v20 = v19;
    v20[1] = v18;
    uint64_t result = (uint64_t)sub_1B59098F4(v27, (_OWORD *)(v4[7] + 32 * i));
    uint64_t v21 = v4[2];
    BOOL v14 = __OFADD__(v21, 1);
    uint64_t v22 = v21 + 1;
    if (v14)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v4[2] = v22;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v14 = __OFADD__(v5++, 1);
    if (v14) {
      goto LABEL_27;
    }
    if (v5 >= v24) {
      return (uint64_t)v4;
    }
    unint64_t v15 = *(void *)(v23 + 8 * v5);
    if (!v15) {
      break;
    }
LABEL_15:
    unint64_t v11 = (v15 - 1) & v15;
  }
  int64_t v16 = v5 + 1;
  if (v5 + 1 >= v24) {
    return (uint64_t)v4;
  }
  unint64_t v15 = *(void *)(v23 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v5 + 2;
  if (v5 + 2 >= v24) {
    return (uint64_t)v4;
  }
  unint64_t v15 = *(void *)(v23 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v5 + 3;
  if (v5 + 3 >= v24) {
    return (uint64_t)v4;
  }
  unint64_t v15 = *(void *)(v23 + 8 * v16);
  if (v15)
  {
LABEL_14:
    int64_t v5 = v16;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v24) {
      return (uint64_t)v4;
    }
    unint64_t v15 = *(void *)(v23 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B5959C54(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v63 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  int64_t v6 = 0;
  while (1)
  {
    uint64_t v68 = v5;
    if (v4)
    {
      int64_t v66 = v6;
      uint64_t v67 = (v4 - 1) & v4;
      unint64_t v8 = __clz(__rbit64(v4)) | (v6 << 6);
      goto LABEL_20;
    }
    int64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_120;
    }
    if (v9 >= v63) {
      goto LABEL_118;
    }
    unint64_t v10 = *(void *)(v62 + 8 * v9);
    int64_t v11 = v6 + 1;
    if (!v10)
    {
      int64_t v11 = v6 + 2;
      if (v6 + 2 >= v63) {
        goto LABEL_118;
      }
      unint64_t v10 = *(void *)(v62 + 8 * v11);
      if (!v10) {
        break;
      }
    }
LABEL_19:
    int64_t v66 = v11;
    uint64_t v67 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
    unint64_t v13 = *(void *)(*(void *)(a2 + 56) + 8 * v8);
    uint64_t v14 = *(void *)(a1 + 64);
    long long v15 = *(_OWORD *)(a1 + 16);
    v87[0] = *(_OWORD *)a1;
    v87[1] = v15;
    long long v16 = *(_OWORD *)(a1 + 48);
    v87[2] = *(_OWORD *)(a1 + 32);
    v87[3] = v16;
    uint64_t v88 = v14;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B5A1BF88();
    swift_bridgeObjectRelease();
    switch(v13 >> 61)
    {
      case 1uLL:
        sub_1B5A1C7B8();
        sub_1B5A1C7B8();
        break;
      case 2uLL:
        sub_1B5A1C7B8();
        sub_1B5A1C7D8();
        break;
      case 3uLL:
        sub_1B5A1C7B8();
        sub_1B5A1C7C8();
        break;
      case 4uLL:
        uint64_t v17 = *(void *)((v13 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1B5A1C7B8();
        sub_1B5A1C7B8();
        uint64_t v70 = *(void *)(v17 + 16);
        if (v70)
        {
          uint64_t v18 = 0;
          uint64_t v69 = v17 + 32;
          do
          {
            unint64_t v20 = *(void *)(v69 + 8 * v18);
            uint64_t v71 = v18;
            switch(v20 >> 61)
            {
              case 1uLL:
                sub_1B5A1C7B8();
                sub_1B5A1C7B8();
                break;
              case 2uLL:
                sub_1B5A1C7B8();
                sub_1B5A1C7D8();
                break;
              case 3uLL:
                sub_1B5A1C7B8();
                sub_1B5A1C7C8();
                break;
              case 4uLL:
                uint64_t v21 = *(void *)((v20 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                sub_1B5A1C7B8();
                sub_1B5A1C7B8();
                uint64_t v73 = *(void *)(v21 + 16);
                if (v73)
                {
                  uint64_t v72 = v21 + 32;
                  swift_retain();
                  uint64_t v22 = 0;
                  do
                  {
                    unint64_t v24 = *(void *)(v72 + 8 * v22);
                    uint64_t v74 = v22;
                    switch(v24 >> 61)
                    {
                      case 1uLL:
                        sub_1B5A1C7B8();
                        sub_1B5A1C7B8();
                        break;
                      case 2uLL:
                        sub_1B5A1C7B8();
                        sub_1B5A1C7D8();
                        break;
                      case 3uLL:
                        sub_1B5A1C7B8();
                        sub_1B5A1C7C8();
                        break;
                      case 4uLL:
                        uint64_t v25 = *(void *)((v24 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                        sub_1B5A1C7B8();
                        sub_1B5A1C7B8();
                        uint64_t v76 = *(void *)(v25 + 16);
                        if (v76)
                        {
                          uint64_t v75 = v25 + 32;
                          swift_retain();
                          uint64_t v26 = 0;
                          do
                          {
                            unint64_t v28 = *(void *)(v75 + 8 * v26);
                            uint64_t v81 = v26;
                            switch(v28 >> 61)
                            {
                              case 1uLL:
                                sub_1B5A1C7B8();
                                sub_1B5A1C7B8();
                                break;
                              case 2uLL:
                                sub_1B5A1C7B8();
                                sub_1B5A1C7D8();
                                break;
                              case 3uLL:
                                sub_1B5A1C7B8();
                                sub_1B5A1C7C8();
                                break;
                              case 4uLL:
                                uint64_t v29 = *(void *)((v28 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                                sub_1B5A1C7B8();
                                sub_1B5A1C7B8();
                                uint64_t v30 = *(void *)(v29 + 16);
                                if (v30)
                                {
                                  uint64_t v31 = v29 + 32;
                                  swift_retain();
                                  uint64_t v32 = 0;
                                  uint64_t v77 = v29 + 32;
                                  uint64_t v78 = v30;
                                  do
                                  {
                                    unint64_t v34 = *(void *)(v31 + 8 * v32);
                                    switch(v34 >> 61)
                                    {
                                      case 1uLL:
                                        sub_1B5A1C7B8();
                                        sub_1B5A1C7B8();
                                        break;
                                      case 2uLL:
                                        sub_1B5A1C7B8();
                                        sub_1B5A1C7D8();
                                        break;
                                      case 3uLL:
                                        sub_1B5A1C7B8();
                                        sub_1B5A1C7C8();
                                        break;
                                      case 4uLL:
                                        uint64_t v35 = *(void *)((v34 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                                        sub_1B5A1C7B8();
                                        sub_1B5A1C7B8();
                                        uint64_t v36 = *(void *)(v35 + 16);
                                        if (v36)
                                        {
                                          uint64_t v84 = v35 + 32;
                                          swift_retain();
                                          uint64_t v37 = 0;
                                          uint64_t v79 = v36;
                                          uint64_t v80 = v32;
                                          do
                                          {
                                            unint64_t v39 = *(void *)(v84 + 8 * v37);
                                            uint64_t v86 = v37;
                                            switch(v39 >> 61)
                                            {
                                              case 1uLL:
                                                sub_1B5A1C7B8();
                                                sub_1B5A1C7B8();
                                                break;
                                              case 2uLL:
                                                sub_1B5A1C7B8();
                                                sub_1B5A1C7D8();
                                                break;
                                              case 3uLL:
                                                sub_1B5A1C7B8();
                                                sub_1B5A1C7C8();
                                                break;
                                              case 4uLL:
                                                uint64_t v40 = *(void *)((v39 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                                                sub_1B5A1C7B8();
                                                sub_1B5A1C7B8();
                                                uint64_t v83 = *(void *)(v40 + 16);
                                                if (v83)
                                                {
                                                  uint64_t v41 = v40 + 32;
                                                  swift_retain();
                                                  uint64_t v42 = 0;
                                                  uint64_t v43 = v83;
                                                  uint64_t v82 = v40 + 32;
                                                  do
                                                  {
                                                    unint64_t v45 = *(void *)(v41 + 8 * v42);
                                                    switch(v45 >> 61)
                                                    {
                                                      case 1uLL:
                                                        sub_1B5A1C7B8();
                                                        sub_1B5A1C7B8();
                                                        break;
                                                      case 2uLL:
                                                        sub_1B5A1C7B8();
                                                        sub_1B5A1C7D8();
                                                        break;
                                                      case 3uLL:
                                                        sub_1B5A1C7B8();
                                                        sub_1B5A1C7C8();
                                                        break;
                                                      case 4uLL:
                                                        uint64_t v46 = *(void *)((v45 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                                                        sub_1B5A1C7B8();
                                                        sub_1B5A1C7B8();
                                                        uint64_t v47 = *(void *)(v46 + 16);
                                                        if (v47)
                                                        {
                                                          uint64_t v48 = v46 + 32;
                                                          swift_retain();
                                                          uint64_t v49 = 0;
                                                          uint64_t v85 = v46 + 32;
                                                          do
                                                          {
                                                            unint64_t v51 = *(void *)(v48 + 8 * v49);
                                                            switch(v51 >> 61)
                                                            {
                                                              case 1uLL:
                                                                sub_1B5A1C7B8();
                                                                sub_1B5A1C7B8();
                                                                break;
                                                              case 2uLL:
                                                                sub_1B5A1C7B8();
                                                                sub_1B5A1C7D8();
                                                                break;
                                                              case 3uLL:
                                                                sub_1B5A1C7B8();
                                                                sub_1B5A1C7C8();
                                                                break;
                                                              case 4uLL:
                                                                uint64_t v52 = *(void *)((v51 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                                                                sub_1B5A1C7B8();
                                                                sub_1B5A1C7B8();
                                                                uint64_t v53 = *(void *)(v52 + 16);
                                                                if (v53)
                                                                {
                                                                  uint64_t v54 = v52 + 32;
                                                                  swift_retain();
                                                                  for (uint64_t i = 0; i != v53; ++i)
                                                                  {
                                                                    unint64_t v57 = *(void *)(v54 + 8 * i);
                                                                    switch(v57 >> 61)
                                                                    {
                                                                      case 1uLL:
                                                                        sub_1B5A1C7B8();
                                                                        sub_1B5A1C7B8();
                                                                        break;
                                                                      case 2uLL:
                                                                        sub_1B5A1C7B8();
                                                                        sub_1B5A1C7D8();
                                                                        break;
                                                                      case 3uLL:
                                                                        sub_1B5A1C7B8();
                                                                        sub_1B5A1C7C8();
                                                                        break;
                                                                      case 4uLL:
                                                                        uint64_t v58 = *(void *)((v57 & 0x1FFFFFFFFFFFFFFFLL)
                                                                                        + 0x10);
                                                                        sub_1B5A1C7B8();
                                                                        sub_1B5A1C7B8();
                                                                        uint64_t v59 = *(void *)(v58 + 16);
                                                                        if (v59)
                                                                        {
                                                                          uint64_t v60 = v58 + 32;
                                                                          swift_retain();
                                                                          do
                                                                          {
                                                                            v60 += 8;
                                                                            DecodableState.hash(into:)(v87);
                                                                            --v59;
                                                                          }
                                                                          while (v59);
                                                                          goto LABEL_99;
                                                                        }
                                                                        break;
                                                                      case 5uLL:
                                                                        uint64_t v56 = *(void *)((v57 & 0x1FFFFFFFFFFFFFFFLL)
                                                                                        + 0x10);
                                                                        sub_1B5A1C7B8();
                                                                        swift_retain();
                                                                        sub_1B5959C54(v87, v56);
                                                                        goto LABEL_99;
                                                                      default:
                                                                        sub_1B5A1C7B8();
                                                                        swift_retain();
                                                                        sub_1B5A1BF88();
LABEL_99:
                                                                        swift_release();
                                                                        break;
                                                                    }
                                                                  }
                                                                  swift_release();
                                                                  uint64_t v48 = v85;
                                                                }
                                                                break;
                                                              case 5uLL:
                                                                uint64_t v50 = *(void *)((v51 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                                                                sub_1B5A1C7B8();
                                                                swift_retain();
                                                                sub_1B5959C54(v87, v50);
                                                                goto LABEL_89;
                                                              default:
                                                                sub_1B5A1C7B8();
                                                                swift_retain();
                                                                sub_1B5A1BF88();
LABEL_89:
                                                                swift_release();
                                                                break;
                                                            }
                                                            ++v49;
                                                          }
                                                          while (v49 != v47);
                                                          swift_release();
                                                          uint64_t v41 = v82;
                                                          uint64_t v43 = v83;
                                                        }
                                                        break;
                                                      case 5uLL:
                                                        uint64_t v44 = *(void *)((v45 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                                                        sub_1B5A1C7B8();
                                                        swift_retain();
                                                        sub_1B5959C54(v87, v44);
                                                        goto LABEL_79;
                                                      default:
                                                        sub_1B5A1C7B8();
                                                        swift_retain();
                                                        sub_1B5A1BF88();
LABEL_79:
                                                        swift_release();
                                                        break;
                                                    }
                                                    ++v42;
                                                  }
                                                  while (v42 != v43);
                                                  swift_release();
                                                  uint64_t v31 = v77;
                                                  uint64_t v30 = v78;
                                                  uint64_t v36 = v79;
                                                  uint64_t v32 = v80;
                                                }
                                                break;
                                              case 5uLL:
                                                uint64_t v38 = *(void *)((v39 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                                                sub_1B5A1C7B8();
                                                swift_retain();
                                                sub_1B5959C54(v87, v38);
                                                goto LABEL_69;
                                              default:
                                                sub_1B5A1C7B8();
                                                swift_retain();
                                                sub_1B5A1BF88();
LABEL_69:
                                                swift_release();
                                                break;
                                            }
                                            uint64_t v37 = v86 + 1;
                                          }
                                          while (v86 + 1 != v36);
                                          goto LABEL_59;
                                        }
                                        break;
                                      case 5uLL:
                                        uint64_t v33 = *(void *)((v34 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                                        sub_1B5A1C7B8();
                                        swift_retain();
                                        sub_1B5959C54(v87, v33);
                                        goto LABEL_59;
                                      default:
                                        sub_1B5A1C7B8();
                                        swift_retain();
                                        sub_1B5A1BF88();
LABEL_59:
                                        swift_release();
                                        break;
                                    }
                                    ++v32;
                                  }
                                  while (v32 != v30);
                                  goto LABEL_49;
                                }
                                break;
                              case 5uLL:
                                uint64_t v27 = *(void *)((v28 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                                sub_1B5A1C7B8();
                                swift_retain();
                                sub_1B5959C54(v87, v27);
                                goto LABEL_49;
                              default:
                                sub_1B5A1C7B8();
                                swift_retain();
                                sub_1B5A1BF88();
LABEL_49:
                                swift_release();
                                break;
                            }
                            uint64_t v26 = v81 + 1;
                          }
                          while (v81 + 1 != v76);
                          goto LABEL_39;
                        }
                        break;
                      case 5uLL:
                        uint64_t v23 = *(void *)((v24 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                        sub_1B5A1C7B8();
                        swift_retain();
                        sub_1B5959C54(v87, v23);
                        goto LABEL_39;
                      default:
                        sub_1B5A1C7B8();
                        swift_retain();
                        sub_1B5A1BF88();
LABEL_39:
                        swift_release();
                        break;
                    }
                    uint64_t v22 = v74 + 1;
                  }
                  while (v74 + 1 != v73);
                  goto LABEL_29;
                }
                break;
              case 5uLL:
                uint64_t v19 = *(void *)((v20 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                sub_1B5A1C7B8();
                swift_retain();
                sub_1B5959C54(v87, v19);
                goto LABEL_29;
              default:
                sub_1B5A1C7B8();
                swift_retain();
                sub_1B5A1BF88();
LABEL_29:
                swift_release();
                break;
            }
            uint64_t v18 = v71 + 1;
          }
          while (v71 + 1 != v70);
        }
        break;
      case 5uLL:
        uint64_t v7 = *(void *)((v13 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1B5A1C7B8();
        sub_1B5959C54(v87, v7);
        break;
      default:
        sub_1B5A1C7B8();
        sub_1B5A1BF88();
        break;
    }
    swift_release();
    int64_t v6 = v66;
    uint64_t v5 = sub_1B5A1C7E8() ^ v68;
    unint64_t v4 = v67;
  }
  uint64_t v12 = v6 + 3;
  if (v6 + 3 < v63)
  {
    unint64_t v10 = *(void *)(v62 + 8 * v12);
    if (!v10)
    {
      while (1)
      {
        int64_t v11 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          break;
        }
        if (v11 >= v63) {
          goto LABEL_118;
        }
        unint64_t v10 = *(void *)(v62 + 8 * v11);
        ++v12;
        if (v10) {
          goto LABEL_19;
        }
      }
LABEL_120:
      __break(1u);
      JUMPOUT(0x1B595A9A8);
    }
    int64_t v11 = v6 + 3;
    goto LABEL_19;
  }
LABEL_118:
  swift_release();
  return sub_1B5A1C7B8();
}

uint64_t sub_1B595AA80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_1B5A1C7B8();
  if (v4)
  {
    int64_t v6 = (unint64_t *)(a2 + 32);
    while (2)
    {
      unint64_t v9 = *v6++;
      unint64_t v8 = v9;
      switch(v9 >> 61)
      {
        case 1uLL:
          sub_1B5A1C7B8();
          uint64_t result = sub_1B5A1C7B8();
          goto LABEL_5;
        case 2uLL:
          sub_1B5A1C7B8();
          uint64_t result = sub_1B5A1C7D8();
          goto LABEL_5;
        case 3uLL:
          sub_1B5A1C7B8();
          uint64_t result = sub_1B5A1C7C8();
          goto LABEL_5;
        case 4uLL:
          uint64_t v10 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B5A1C7B8();
          swift_retain();
          sub_1B595AA80(a1, v10);
          goto LABEL_4;
        case 5uLL:
          uint64_t v7 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B5A1C7B8();
          swift_retain();
          sub_1B5959C54(a1, v7);
          goto LABEL_4;
        default:
          sub_1B5A1C7B8();
          swift_retain();
          sub_1B5A1BF88();
LABEL_4:
          uint64_t result = swift_release();
LABEL_5:
          if (--v4) {
            continue;
          }
          return result;
      }
    }
  }
  return result;
}

uint64_t _s6LiftUI14DecodableStateO2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 61)
  {
    case 1uLL:
      if (v3 >> 61 != 1) {
        goto LABEL_24;
      }
      BOOL v6 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_18;
    case 2uLL:
      if (v3 >> 61 != 2) {
        goto LABEL_24;
      }
      BOOL v6 = *(double *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) == *(double *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_18:
      char v7 = v6;
      return v7 & 1;
    case 3uLL:
      if (v3 >> 61 != 3) {
        goto LABEL_24;
      }
      char v7 = *(unsigned char *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) ^ *(unsigned char *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) ^ 1;
      return v7 & 1;
    case 4uLL:
      if (v3 >> 61 != 4) {
        goto LABEL_24;
      }
      uint64_t v8 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v9 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      char v10 = sub_1B595498C(v8, v9);
      goto LABEL_23;
    case 5uLL:
      if (v3 >> 61 != 5) {
        goto LABEL_24;
      }
      uint64_t v11 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      char v10 = sub_1B5954B88(v11, v12);
LABEL_23:
      char v13 = v10;
      swift_release();
      swift_release();
      return v13 & 1;
    default:
      if (v3 >> 61)
      {
LABEL_24:
        char v7 = 0;
        return v7 & 1;
      }
      if (*(void *)(v2 + 16) == *(void *)(v3 + 16) && *(void *)(v2 + 24) == *(void *)(v3 + 24))
      {
        char v7 = 1;
        return v7 & 1;
      }
      return sub_1B5A1C678();
  }
}

uint64_t sub_1B595ADA8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1B595ADEC(uint64_t *a1, void *a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v7 = *a1;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v5 + 16))(&v7);
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_1B595AE48(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D62E80);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B595AE90(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = *a1;
  return (*(uint64_t (**)(uint64_t *))(v2 + 16))(&v4);
}

uint64_t sub_1B595AED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D643D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B595AF3C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >> 61 == 5)
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1B5959A18(v3);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v1)
    {
      uint64_t v5 = sub_1B5A1BE18();
      swift_release();
      return v5;
    }
  }
  else
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
    sub_1B5951A10();
    swift_allocError();
    *uint64_t v7 = v2;
    v7[1] = v6;
    swift_retain();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1B595B018()
{
  unint64_t result = qword_1E9D643F0;
  if (!qword_1E9D643F0)
  {
    sub_1B5A1A208();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D643F0);
  }
  return result;
}

int64_t sub_1B595B070(uint64_t *a1)
{
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >> 61 != 4)
  {
    uint64_t v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
    sub_1B5951A10();
    swift_allocError();
    void *v308 = v3;
    v308[1] = v307;
    swift_retain();
    swift_willThrow();
    return v2;
  }
  uint64_t v4 = v1;
  uint64_t v5 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  int64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    sub_1B59CC174(0);
    goto LABEL_367;
  }
  uint64_t v387 = MEMORY[0x1E4FBC860];
  uint64_t v7 = v5;
  swift_bridgeObjectRetain();
  int64_t v329 = v6;
  sub_1B5957064(v6);
  uint64_t v8 = 0;
  uint64_t v352 = v7 + 32;
  while (2)
  {
    unint64_t v9 = *(void *)(v352 + 8 * v8);
    uint64_t v363 = v8 + 1;
    switch(v9 >> 61)
    {
      case 1uLL:
        uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v386 = MEMORY[0x1E4FBB550];
        *(void *)&long long v385 = v12;
        goto LABEL_360;
      case 2uLL:
        uint64_t v13 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v386 = MEMORY[0x1E4FBB3D0];
        *(void *)&long long v385 = v13;
        goto LABEL_360;
      case 3uLL:
        char v14 = *(unsigned char *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v386 = MEMORY[0x1E4FBB390];
        LOBYTE(v385) = v14;
        goto LABEL_360;
      case 4uLL:
        uint64_t v15 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        int64_t v16 = *(void *)(v15 + 16);
        if (!v16)
        {
          swift_retain();
          uint64_t v172 = sub_1B59CC174(0);
LABEL_359:
          uint64_t v386 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E30);
          swift_release();
          *(void *)&long long v385 = v172;
LABEL_360:
          sub_1B59599BC();
          uint64_t v304 = v387;
          unint64_t v306 = *(void *)(v387 + 16);
          unint64_t v305 = *(void *)(v387 + 24);
          if (v306 >= v305 >> 1)
          {
            sub_1B596924C(v305 > 1, v306 + 1, 1);
            uint64_t v304 = v387;
          }
          *(void *)(v304 + 16) = v306 + 1;
          sub_1B59098F4(&v385, (_OWORD *)(v304 + 32 * v306 + 32));
          uint64_t v8 = v363;
          if (v363 == v329)
          {
            swift_bridgeObjectRelease();
LABEL_367:
            int64_t v2 = sub_1B5A1C088();
            swift_bridgeObjectRelease();
            return v2;
          }
          continue;
        }
        uint64_t v378 = MEMORY[0x1E4FBC860];
        swift_retain();
        int64_t v335 = v16;
        sub_1B5957064(v16);
        uint64_t v17 = 0;
        uint64_t v338 = v15 + 32;
        while (2)
        {
          unint64_t v18 = *(void *)(v338 + 8 * v17);
          uint64_t v341 = v17 + 1;
          switch(v18 >> 61)
          {
            case 1uLL:
              uint64_t v21 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v384 = MEMORY[0x1E4FBB550];
              *(void *)&long long v383 = v21;
              goto LABEL_193;
            case 2uLL:
              uint64_t v22 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v384 = MEMORY[0x1E4FBB3D0];
              *(void *)&long long v383 = v22;
              goto LABEL_193;
            case 3uLL:
              char v23 = *(unsigned char *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v384 = MEMORY[0x1E4FBB390];
              LOBYTE(v383) = v23;
              goto LABEL_193;
            case 4uLL:
              uint64_t v24 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
              int64_t v25 = *(void *)(v24 + 16);
              if (!v25)
              {
                swift_retain();
                uint64_t v105 = sub_1B59CC174(0);
LABEL_192:
                uint64_t v384 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E30);
                swift_release();
                *(void *)&long long v383 = v105;
LABEL_193:
                sub_1B59599BC();
                uint64_t v172 = v378;
                unint64_t v174 = *(void *)(v378 + 16);
                unint64_t v173 = *(void *)(v378 + 24);
                if (v174 >= v173 >> 1)
                {
                  sub_1B596924C(v173 > 1, v174 + 1, 1);
                  uint64_t v172 = v378;
                }
                *(void *)(v172 + 16) = v174 + 1;
                sub_1B59098F4(&v383, (_OWORD *)(v172 + 32 * v174 + 32));
                uint64_t v17 = v341;
                if (v341 == v335) {
                  goto LABEL_359;
                }
                continue;
              }
              uint64_t v377 = MEMORY[0x1E4FBC860];
              swift_retain();
              int64_t v331 = v25;
              sub_1B5957064(v25);
              uint64_t v26 = 0;
              uint64_t v346 = v24 + 32;
              while (2)
              {
                unint64_t v27 = *(void *)(v346 + 8 * v26);
                uint64_t v349 = v26 + 1;
                switch(v27 >> 61)
                {
                  case 1uLL:
                    uint64_t v30 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v382 = MEMORY[0x1E4FBB550];
                    *(void *)&long long v381 = v30;
                    goto LABEL_110;
                  case 2uLL:
                    uint64_t v31 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v382 = MEMORY[0x1E4FBB3D0];
                    *(void *)&long long v381 = v31;
                    goto LABEL_110;
                  case 3uLL:
                    char v32 = *(unsigned char *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v382 = MEMORY[0x1E4FBB390];
                    LOBYTE(v381) = v32;
                    goto LABEL_110;
                  case 4uLL:
                    uint64_t v33 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                    int64_t v34 = *(void *)(v33 + 16);
                    if (!v34)
                    {
                      swift_retain();
                      uint64_t v74 = (void *)sub_1B59CC174(0);
LABEL_108:
                      uint64_t v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E30);
LABEL_109:
                      swift_release();
                      *(void *)&long long v381 = v74;
LABEL_110:
                      sub_1B59599BC();
                      uint64_t v105 = v377;
                      unint64_t v107 = *(void *)(v377 + 16);
                      unint64_t v106 = *(void *)(v377 + 24);
                      if (v107 >= v106 >> 1)
                      {
                        sub_1B596924C(v106 > 1, v107 + 1, 1);
                        uint64_t v105 = v377;
                      }
                      *(void *)(v105 + 16) = v107 + 1;
                      sub_1B59098F4(&v381, (_OWORD *)(v105 + 32 * v107 + 32));
                      uint64_t v26 = v349;
                      if (v349 == v331) {
                        goto LABEL_192;
                      }
                      continue;
                    }
                    v376 = (void *)MEMORY[0x1E4FBC860];
                    swift_retain();
                    sub_1B5957064(v34);
                    uint64_t v35 = 0;
                    uint64_t v326 = v33 + 32;
                    while (2)
                    {
                      unint64_t v36 = *(void *)(v326 + 8 * v35);
                      uint64_t v343 = v35 + 1;
                      switch(v36 >> 61)
                      {
                        case 1uLL:
                          uint64_t v39 = *(void *)((v36 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                          uint64_t v380 = MEMORY[0x1E4FBB550];
                          *(void *)&long long v379 = v39;
                          goto LABEL_66;
                        case 2uLL:
                          uint64_t v40 = *(void *)((v36 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                          uint64_t v380 = MEMORY[0x1E4FBB3D0];
                          *(void *)&long long v379 = v40;
                          goto LABEL_66;
                        case 3uLL:
                          char v41 = *(unsigned char *)((v36 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                          uint64_t v380 = MEMORY[0x1E4FBB390];
                          LOBYTE(v379) = v41;
                          goto LABEL_66;
                        case 4uLL:
                          int64_t v42 = v34;
                          uint64_t v43 = v4;
                          uint64_t v44 = *(void *)((v36 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                          int64_t v45 = *(void *)(v44 + 16);
                          if (v45)
                          {
                            uint64_t v374 = MEMORY[0x1E4FBC860];
                            swift_retain();
                            sub_1B5957064(v45);
                            uint64_t v46 = (uint64_t *)(v44 + 32);
                            while (1)
                            {
                              uint64_t v47 = *v46++;
                              int64_t v2 = v47 & 0x1FFFFFFFFFFFFFFFLL;
                              swift_retain();
                              uint64_t v388 = v47;
                              sub_1B5954744((uint64_t *)v375);
                              if (v43) {
                                break;
                              }
                              swift_release();
                              sub_1B59599BC();
                              uint64_t v48 = v374;
                              unint64_t v50 = *(void *)(v374 + 16);
                              unint64_t v49 = *(void *)(v374 + 24);
                              if (v50 >= v49 >> 1)
                              {
                                sub_1B596924C(v49 > 1, v50 + 1, 1);
                                uint64_t v48 = v374;
                              }
                              *(void *)(v48 + 16) = v50 + 1;
                              sub_1B59098F4(v375, (_OWORD *)(v48 + 32 * v50 + 32));
                              if (!--v45) {
                                goto LABEL_65;
                              }
                            }
                            swift_release();
                            swift_release();
                            goto LABEL_378;
                          }
                          swift_retain();
                          uint64_t v48 = sub_1B59CC174(0);
LABEL_65:
                          uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E30);
                          swift_release();
                          *(void *)&long long v379 = v48;
                          uint64_t v4 = v43;
                          int64_t v34 = v42;
                          goto LABEL_66;
                        case 5uLL:
                          int64_t v319 = v34;
                          uint64_t v51 = v4;
                          uint64_t v52 = *(void *)((v36 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED8);
                          uint64_t v53 = sub_1B5A1C518();
                          uint64_t v54 = (void *)v53;
                          uint64_t v55 = 1 << *(unsigned char *)(v52 + 32);
                          uint64_t v369 = v52;
                          uint64_t v58 = *(void *)(v52 + 64);
                          uint64_t v57 = v52 + 64;
                          uint64_t v56 = v58;
                          if (v55 < 64) {
                            uint64_t v59 = ~(-1 << v55);
                          }
                          else {
                            uint64_t v59 = -1;
                          }
                          unint64_t v60 = v59 & v56;
                          uint64_t v353 = v57;
                          int64_t v358 = (unint64_t)(v55 + 63) >> 6;
                          uint64_t v364 = v53 + 64;
                          swift_retain();
                          int64_t v61 = 0;
                          if (v60) {
                            goto LABEL_41;
                          }
LABEL_42:
                          BOOL v64 = __OFADD__(v61++, 1);
                          if (v64) {
                            goto LABEL_398;
                          }
                          if (v61 >= v358) {
                            goto LABEL_63;
                          }
                          unint64_t v65 = *(void *)(v353 + 8 * v61);
                          if (v65) {
                            goto LABEL_54;
                          }
                          int64_t v66 = v61 + 1;
                          if (v61 + 1 >= v358) {
                            goto LABEL_63;
                          }
                          unint64_t v65 = *(void *)(v353 + 8 * v66);
                          if (v65) {
                            goto LABEL_53;
                          }
                          int64_t v66 = v61 + 2;
                          if (v61 + 2 >= v358) {
                            goto LABEL_63;
                          }
                          unint64_t v65 = *(void *)(v353 + 8 * v66);
                          if (v65) {
                            goto LABEL_53;
                          }
                          int64_t v66 = v61 + 3;
                          if (v61 + 3 >= v358) {
                            goto LABEL_63;
                          }
                          unint64_t v65 = *(void *)(v353 + 8 * v66);
                          if (v65) {
                            goto LABEL_53;
                          }
                          int64_t v66 = v61 + 4;
                          if (v61 + 4 >= v358) {
                            goto LABEL_63;
                          }
                          unint64_t v65 = *(void *)(v353 + 8 * v66);
                          if (!v65)
                          {
                            while (1)
                            {
                              int64_t v61 = v66 + 1;
                              if (__OFADD__(v66, 1)) {
                                goto LABEL_405;
                              }
                              if (v61 >= v358) {
                                break;
                              }
                              unint64_t v65 = *(void *)(v353 + 8 * v61);
                              ++v66;
                              if (v65) {
                                goto LABEL_54;
                              }
                            }
LABEL_63:
                            uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64408);
                            swift_release();
                            *(void *)&long long v379 = v54;
                            uint64_t v4 = v51;
                            int64_t v34 = v319;
LABEL_66:
                            sub_1B59599BC();
                            uint64_t v74 = v376;
                            unint64_t v76 = v376[2];
                            unint64_t v75 = v376[3];
                            if (v76 >= v75 >> 1)
                            {
                              sub_1B596924C(v75 > 1, v76 + 1, 1);
                              uint64_t v74 = v376;
                            }
                            v74[2] = v76 + 1;
                            sub_1B59098F4(&v379, &v74[4 * v76 + 4]);
                            uint64_t v35 = v343;
                            if (v343 == v34) {
                              goto LABEL_108;
                            }
                            continue;
                          }
LABEL_53:
                          int64_t v61 = v66;
LABEL_54:
                          unint64_t v60 = (v65 - 1) & v65;
                          for (unint64_t i = __clz(__rbit64(v65)) + (v61 << 6); ; unint64_t i = v62 | (v61 << 6))
                          {
                            uint64_t v67 = (uint64_t *)(*(void *)(v369 + 48) + 16 * i);
                            uint64_t v68 = *v67;
                            uint64_t v69 = v67[1];
                            uint64_t v70 = *(void *)(*(void *)(v369 + 56) + 8 * i);
                            int64_t v2 = v70 & 0x1FFFFFFFFFFFFFFFLL;
                            swift_bridgeObjectRetain();
                            swift_retain();
                            uint64_t v388 = v70;
                            sub_1B5954744((uint64_t *)v375);
                            if (v51) {
                              break;
                            }
                            swift_release();
                            *(void *)(v364 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
                            uint64_t v71 = (void *)(v54[6] + 16 * i);
                            void *v71 = v68;
                            v71[1] = v69;
                            sub_1B59098F4(v375, (_OWORD *)(v54[7] + 32 * i));
                            uint64_t v72 = v54[2];
                            BOOL v64 = __OFADD__(v72, 1);
                            uint64_t v73 = v72 + 1;
                            if (v64) {
                              goto LABEL_393;
                            }
                            v54[2] = v73;
                            if (!v60) {
                              goto LABEL_42;
                            }
LABEL_41:
                            unint64_t v62 = __clz(__rbit64(v60));
                            v60 &= v60 - 1;
                          }
                          swift_release();
                          swift_release();
                          swift_bridgeObjectRelease();
LABEL_378:
                          swift_release();
                          swift_release();
                          swift_release();
LABEL_379:
                          swift_release();
                          swift_release();
LABEL_380:
                          swift_release();
                          swift_release();
LABEL_381:
                          swift_bridgeObjectRelease();
                          swift_release();
                          return v2;
                        default:
                          uint64_t v38 = *(void *)(v36 + 16);
                          uint64_t v37 = *(void *)(v36 + 24);
                          uint64_t v380 = MEMORY[0x1E4FBB1A0];
                          *(void *)&long long v379 = v38;
                          *((void *)&v379 + 1) = v37;
                          swift_bridgeObjectRetain();
                          goto LABEL_66;
                      }
                    }
                  case 5uLL:
                    uint64_t v77 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED8);
                    uint64_t v78 = sub_1B5A1C518();
                    uint64_t v74 = (void *)v78;
                    uint64_t v79 = 1 << *(unsigned char *)(v77 + 32);
                    uint64_t v365 = v77 + 64;
                    if (v79 < 64) {
                      uint64_t v80 = ~(-1 << v79);
                    }
                    else {
                      uint64_t v80 = -1;
                    }
                    unint64_t v81 = v80 & *(void *)(v77 + 64);
                    int64_t v370 = (unint64_t)(v79 + 63) >> 6;
                    uint64_t v82 = v78 + 64;
                    swift_retain();
                    int64_t v2 = 0;
                    uint64_t v354 = v82;
                    uint64_t v359 = v77;
                    if (v81) {
                      goto LABEL_74;
                    }
LABEL_75:
                    BOOL v64 = __OFADD__(v2++, 1);
                    if (v64) {
                      goto LABEL_392;
                    }
                    if (v2 >= v370) {
                      goto LABEL_106;
                    }
                    unint64_t v85 = *(void *)(v365 + 8 * v2);
                    if (v85) {
                      goto LABEL_87;
                    }
                    int64_t v86 = v2 + 1;
                    if (v2 + 1 >= v370) {
                      goto LABEL_106;
                    }
                    unint64_t v85 = *(void *)(v365 + 8 * v86);
                    if (v85) {
                      goto LABEL_86;
                    }
                    int64_t v86 = v2 + 2;
                    if (v2 + 2 >= v370) {
                      goto LABEL_106;
                    }
                    unint64_t v85 = *(void *)(v365 + 8 * v86);
                    if (v85) {
                      goto LABEL_86;
                    }
                    int64_t v86 = v2 + 3;
                    if (v2 + 3 >= v370) {
                      goto LABEL_106;
                    }
                    unint64_t v85 = *(void *)(v365 + 8 * v86);
                    if (v85) {
                      goto LABEL_86;
                    }
                    int64_t v86 = v2 + 4;
                    if (v2 + 4 >= v370) {
                      goto LABEL_106;
                    }
                    unint64_t v85 = *(void *)(v365 + 8 * v86);
                    if (v85)
                    {
LABEL_86:
                      int64_t v2 = v86;
LABEL_87:
                      unint64_t v81 = (v85 - 1) & v85;
                      unint64_t v84 = __clz(__rbit64(v85)) + (v2 << 6);
                      while (1)
                      {
                        uint64_t v87 = (uint64_t *)(*(void *)(v77 + 48) + 16 * v84);
                        uint64_t v89 = *v87;
                        uint64_t v88 = v87[1];
                        unint64_t v90 = *(void *)(*(void *)(v77 + 56) + 8 * v84);
                        switch(v90 >> 61)
                        {
                          case 1uLL:
                            uint64_t v93 = *(void *)((v90 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v380 = MEMORY[0x1E4FBB550];
                            *(void *)&long long v379 = v93;
                            goto LABEL_93;
                          case 2uLL:
                            uint64_t v94 = *(void *)((v90 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v380 = MEMORY[0x1E4FBB3D0];
                            *(void *)&long long v379 = v94;
                            goto LABEL_93;
                          case 3uLL:
                            char v95 = *(unsigned char *)((v90 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v380 = MEMORY[0x1E4FBB390];
                            LOBYTE(v379) = v95;
                            goto LABEL_93;
                          case 4uLL:
                            uint64_t v96 = *(void *)((v90 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                            swift_bridgeObjectRetain();
                            swift_retain();
                            uint64_t v97 = sub_1B59532C4(v96);
                            if (v4) {
                              goto LABEL_373;
                            }
                            uint64_t v98 = v97;
                            long long v99 = &qword_1E9D62E30;
                            goto LABEL_98;
                          case 5uLL:
                            uint64_t v100 = *(void *)((v90 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                            swift_bridgeObjectRetain();
                            swift_retain();
                            uint64_t v101 = sub_1B5959A18(v100);
                            if (v4)
                            {
LABEL_373:
                              swift_bridgeObjectRelease();
                              swift_release();
                              swift_release();
                              swift_release();
                              goto LABEL_379;
                            }
                            uint64_t v98 = v101;
                            long long v99 = &qword_1E9D64408;
LABEL_98:
                            uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(v99);
                            swift_release();
                            *(void *)&long long v379 = v98;
                            uint64_t v4 = 0;
                            uint64_t v82 = v354;
                            uint64_t v77 = v359;
LABEL_99:
                            *(void *)(v82 + ((v84 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v84;
                            long long v102 = (void *)(v74[6] + 16 * v84);
                            *long long v102 = v89;
                            v102[1] = v88;
                            sub_1B59098F4(&v379, (_OWORD *)(v74[7] + 32 * v84));
                            uint64_t v103 = v74[2];
                            BOOL v64 = __OFADD__(v103, 1);
                            uint64_t v104 = v103 + 1;
                            if (v64) {
                              goto LABEL_386;
                            }
                            v74[2] = v104;
                            if (!v81) {
                              goto LABEL_75;
                            }
LABEL_74:
                            unint64_t v83 = __clz(__rbit64(v81));
                            v81 &= v81 - 1;
                            unint64_t v84 = v83 | (v2 << 6);
                            break;
                          default:
                            uint64_t v91 = *(void *)(v90 + 16);
                            uint64_t v92 = *(void *)(v90 + 24);
                            uint64_t v380 = MEMORY[0x1E4FBB1A0];
                            *(void *)&long long v379 = v91;
                            *((void *)&v379 + 1) = v92;
                            swift_bridgeObjectRetain();
LABEL_93:
                            swift_bridgeObjectRetain();
                            goto LABEL_99;
                        }
                      }
                    }
                    while (2)
                    {
                      int64_t v2 = v86 + 1;
                      if (__OFADD__(v86, 1)) {
                        goto LABEL_402;
                      }
                      if (v2 < v370)
                      {
                        unint64_t v85 = *(void *)(v365 + 8 * v2);
                        ++v86;
                        if (v85) {
                          goto LABEL_87;
                        }
                        continue;
                      }
                      break;
                    }
LABEL_106:
                    uint64_t v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64408);
                    goto LABEL_109;
                  default:
                    uint64_t v29 = *(void *)(v27 + 16);
                    uint64_t v28 = *(void *)(v27 + 24);
                    uint64_t v382 = MEMORY[0x1E4FBB1A0];
                    *(void *)&long long v381 = v29;
                    *((void *)&v381 + 1) = v28;
                    swift_bridgeObjectRetain();
                    goto LABEL_110;
                }
              }
            case 5uLL:
              uint64_t v108 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED8);
              uint64_t v109 = sub_1B5A1C518();
              int64_t v2 = v109;
              uint64_t v110 = 1 << *(unsigned char *)(v108 + 32);
              uint64_t v111 = v108 + 64;
              if (v110 < 64) {
                uint64_t v112 = ~(-1 << v110);
              }
              else {
                uint64_t v112 = -1;
              }
              unint64_t v113 = v112 & *(void *)(v108 + 64);
              int64_t v114 = (unint64_t)(v110 + 63) >> 6;
              uint64_t v115 = v109 + 64;
              swift_retain();
              int64_t v116 = 0;
              uint64_t v332 = v108 + 64;
              uint64_t v324 = v115;
              int64_t v327 = v114;
              int64_t v317 = v2;
              uint64_t v314 = v108;
              if (v113) {
                goto LABEL_118;
              }
LABEL_119:
              BOOL v64 = __OFADD__(v116++, 1);
              if (v64) {
                goto LABEL_397;
              }
              if (v116 >= v114) {
                goto LABEL_191;
              }
              unint64_t v120 = *(void *)(v111 + 8 * v116);
              if (v120) {
                goto LABEL_131;
              }
              int64_t v121 = v116 + 1;
              if (v116 + 1 >= v114) {
                goto LABEL_191;
              }
              unint64_t v120 = *(void *)(v111 + 8 * v121);
              if (v120) {
                goto LABEL_130;
              }
              int64_t v121 = v116 + 2;
              if (v116 + 2 >= v114) {
                goto LABEL_191;
              }
              unint64_t v120 = *(void *)(v111 + 8 * v121);
              if (v120) {
                goto LABEL_130;
              }
              int64_t v121 = v116 + 3;
              if (v116 + 3 >= v114) {
                goto LABEL_191;
              }
              unint64_t v120 = *(void *)(v111 + 8 * v121);
              if (v120) {
                goto LABEL_130;
              }
              int64_t v121 = v116 + 4;
              if (v116 + 4 >= v114) {
                goto LABEL_191;
              }
              unint64_t v120 = *(void *)(v111 + 8 * v121);
              if (v120)
              {
LABEL_130:
                int64_t v116 = v121;
LABEL_131:
                uint64_t v118 = (v120 - 1) & v120;
                for (unint64_t j = __clz(__rbit64(v120)) + (v116 << 6); ; unint64_t j = v117 | (v116 << 6))
                {
                  uint64_t v122 = (uint64_t *)(*(void *)(v108 + 48) + 16 * j);
                  uint64_t v124 = *v122;
                  uint64_t v123 = v122[1];
                  unint64_t v125 = *(void *)(*(void *)(v108 + 56) + 8 * j);
                  unint64_t v344 = v118;
                  int64_t v347 = v116;
                  unint64_t v355 = j;
                  uint64_t v350 = v124;
                  switch(v125 >> 61)
                  {
                    case 1uLL:
                      uint64_t v129 = *(void *)((v125 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v382 = MEMORY[0x1E4FBB550];
                      *(void *)&long long v381 = v129;
                      goto LABEL_137;
                    case 2uLL:
                      uint64_t v130 = *(void *)((v125 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v382 = MEMORY[0x1E4FBB3D0];
                      *(void *)&long long v381 = v130;
                      goto LABEL_137;
                    case 3uLL:
                      char v131 = *(unsigned char *)((v125 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v382 = MEMORY[0x1E4FBB390];
                      LOBYTE(v381) = v131;
LABEL_137:
                      uint64_t v128 = v123;
                      swift_bridgeObjectRetain();
                      goto LABEL_183;
                    case 4uLL:
                      uint64_t v132 = *(void *)((v125 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      int64_t v133 = *(void *)(v132 + 16);
                      if (v133)
                      {
                        *(void *)&v375[0] = MEMORY[0x1E4FBC860];
                        uint64_t v128 = v123;
                        swift_bridgeObjectRetain();
                        swift_retain();
                        sub_1B5957064(v133);
                        uint64_t v134 = (unint64_t *)(v132 + 32);
                        while (2)
                        {
                          unint64_t v136 = *v134++;
                          unint64_t v135 = v136;
                          switch(v136 >> 61)
                          {
                            case 1uLL:
                              uint64_t v139 = *(void *)((v135 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                              uint64_t v380 = MEMORY[0x1E4FBB550];
                              *(void *)&long long v379 = v139;
                              goto LABEL_150;
                            case 2uLL:
                              uint64_t v140 = *(void *)((v135 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                              uint64_t v380 = MEMORY[0x1E4FBB3D0];
                              *(void *)&long long v379 = v140;
                              goto LABEL_150;
                            case 3uLL:
                              char v141 = *(unsigned char *)((v135 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                              uint64_t v380 = MEMORY[0x1E4FBB390];
                              LOBYTE(v379) = v141;
                              goto LABEL_150;
                            case 4uLL:
                              uint64_t v142 = *(void *)((v135 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                              swift_retain();
                              uint64_t v143 = sub_1B59532C4(v142);
                              if (v4) {
                                goto LABEL_374;
                              }
                              uint64_t v144 = v143;
                              uint64_t v145 = &qword_1E9D62E30;
                              goto LABEL_149;
                            case 5uLL:
                              uint64_t v146 = *(void *)((v135 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                              swift_retain();
                              uint64_t v147 = sub_1B5959A18(v146);
                              if (v4)
                              {
LABEL_374:
                                swift_release();
                                swift_release();
                                swift_release();
                                swift_bridgeObjectRelease();
                                goto LABEL_379;
                              }
                              uint64_t v144 = v147;
                              uint64_t v145 = &qword_1E9D64408;
LABEL_149:
                              uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(v145);
                              swift_release();
                              *(void *)&long long v379 = v144;
LABEL_150:
                              sub_1B59599BC();
                              uint64_t v148 = *(void *)&v375[0];
                              unint64_t v150 = *(void *)(*(void *)&v375[0] + 16);
                              unint64_t v149 = *(void *)(*(void *)&v375[0] + 24);
                              if (v150 >= v149 >> 1)
                              {
                                sub_1B596924C(v149 > 1, v150 + 1, 1);
                                uint64_t v148 = *(void *)&v375[0];
                              }
                              *(void *)(v148 + 16) = v150 + 1;
                              sub_1B59098F4(&v379, (_OWORD *)(v148 + 32 * v150 + 32));
                              if (--v133) {
                                continue;
                              }
                              uint64_t v108 = v314;
                              break;
                            default:
                              uint64_t v138 = *(void *)(v135 + 16);
                              uint64_t v137 = *(void *)(v135 + 24);
                              uint64_t v380 = MEMORY[0x1E4FBB1A0];
                              *(void *)&long long v379 = v138;
                              *((void *)&v379 + 1) = v137;
                              swift_bridgeObjectRetain();
                              goto LABEL_150;
                          }
                          break;
                        }
                      }
                      else
                      {
                        uint64_t v128 = v123;
                        swift_bridgeObjectRetain();
                        swift_retain();
                        uint64_t v148 = sub_1B59CC174(0);
                      }
                      uint64_t v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E30);
                      swift_release();
                      *(void *)&long long v381 = v148;
                      uint64_t v111 = v332;
                      uint64_t v115 = v324;
                      int64_t v114 = v327;
                      goto LABEL_183;
                    case 5uLL:
                      uint64_t v151 = *(void *)((v125 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v152 = v123;
                      uint64_t v153 = sub_1B5A1C518();
                      uint64_t v154 = (void *)v153;
                      uint64_t v155 = 1 << *(unsigned char *)(v151 + 32);
                      uint64_t v360 = v151 + 64;
                      if (v155 < 64) {
                        uint64_t v156 = ~(-1 << v155);
                      }
                      else {
                        uint64_t v156 = -1;
                      }
                      int64_t v2 = v156 & *(void *)(v151 + 64);
                      int64_t v366 = (unint64_t)(v155 + 63) >> 6;
                      uint64_t v371 = v153 + 64;
                      uint64_t v322 = v152;
                      swift_bridgeObjectRetain();
                      swift_retain();
                      int64_t v157 = 0;
                      if (v2) {
                        goto LABEL_158;
                      }
                      break;
                    default:
                      uint64_t v126 = *(void *)(v125 + 16);
                      uint64_t v127 = *(void *)(v125 + 24);
                      uint64_t v382 = MEMORY[0x1E4FBB1A0];
                      *(void *)&long long v381 = v126;
                      *((void *)&v381 + 1) = v127;
                      uint64_t v128 = v123;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      goto LABEL_183;
                  }
LABEL_159:
                  BOOL v64 = __OFADD__(v157++, 1);
                  if (v64) {
                    goto LABEL_388;
                  }
                  if (v157 < v366)
                  {
                    unint64_t v161 = *(void *)(v360 + 8 * v157);
                    if (v161) {
                      goto LABEL_171;
                    }
                    int64_t v162 = v157 + 1;
                    if (v157 + 1 < v366)
                    {
                      unint64_t v161 = *(void *)(v360 + 8 * v162);
                      if (v161) {
                        goto LABEL_170;
                      }
                      int64_t v162 = v157 + 2;
                      if (v157 + 2 < v366)
                      {
                        unint64_t v161 = *(void *)(v360 + 8 * v162);
                        if (v161) {
                          goto LABEL_170;
                        }
                        int64_t v162 = v157 + 3;
                        if (v157 + 3 < v366)
                        {
                          unint64_t v161 = *(void *)(v360 + 8 * v162);
                          if (v161) {
                            goto LABEL_170;
                          }
                          int64_t v162 = v157 + 4;
                          if (v157 + 4 < v366) {
                            break;
                          }
                        }
                      }
                    }
                  }
LABEL_180:
                  int64_t v2 = v317;
                  uint64_t v108 = v314;
                  uint64_t v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64408);
                  swift_release();
                  *(void *)&long long v381 = v154;
                  uint64_t v111 = v332;
                  uint64_t v115 = v324;
                  int64_t v114 = v327;
                  uint64_t v128 = v322;
LABEL_183:
                  *(void *)(v115 + ((v355 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v355;
                  uint64_t v169 = (void *)(*(void *)(v2 + 48) + 16 * v355);
                  *uint64_t v169 = v350;
                  v169[1] = v128;
                  sub_1B59098F4(&v381, (_OWORD *)(*(void *)(v2 + 56) + 32 * v355));
                  uint64_t v170 = *(void *)(v2 + 16);
                  BOOL v64 = __OFADD__(v170, 1);
                  uint64_t v171 = v170 + 1;
                  if (v64) {
                    goto LABEL_394;
                  }
                  *(void *)(v2 + 16) = v171;
                  unint64_t v113 = v344;
                  int64_t v116 = v347;
                  if (!v344) {
                    goto LABEL_119;
                  }
LABEL_118:
                  unint64_t v117 = __clz(__rbit64(v113));
                  uint64_t v118 = (v113 - 1) & v113;
                }
                unint64_t v161 = *(void *)(v360 + 8 * v162);
                if (v161)
                {
LABEL_170:
                  int64_t v157 = v162;
LABEL_171:
                  uint64_t v158 = v4;
                  int64_t v2 = (v161 - 1) & v161;
                  for (unint64_t k = __clz(__rbit64(v161)) + (v157 << 6); ; unint64_t k = v159 | (v157 << 6))
                  {
                    uint64_t v163 = (uint64_t *)(*(void *)(v151 + 48) + 16 * k);
                    uint64_t v164 = *v163;
                    uint64_t v165 = v163[1];
                    *(void *)&v375[0] = *(void *)(*(void *)(v151 + 56) + 8 * k);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    sub_1B5954744((uint64_t *)&v379);
                    if (v158)
                    {
                      swift_release();
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_release();
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_release();
                      goto LABEL_380;
                    }
                    swift_release();
                    *(void *)(v371 + ((k >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << k;
                    uint64_t v166 = (void *)(v154[6] + 16 * k);
                    *uint64_t v166 = v164;
                    v166[1] = v165;
                    sub_1B59098F4(&v379, (_OWORD *)(v154[7] + 32 * k));
                    uint64_t v167 = v154[2];
                    BOOL v64 = __OFADD__(v167, 1);
                    uint64_t v168 = v167 + 1;
                    if (v64) {
                      break;
                    }
                    v154[2] = v168;
                    uint64_t v4 = 0;
                    if (!v2) {
                      goto LABEL_159;
                    }
LABEL_158:
                    uint64_t v158 = v4;
                    unint64_t v159 = __clz(__rbit64(v2));
                    v2 &= v2 - 1;
                  }
LABEL_384:
                  __break(1u);
LABEL_385:
                  __break(1u);
LABEL_386:
                  __break(1u);
LABEL_387:
                  __break(1u);
LABEL_388:
                  __break(1u);
LABEL_389:
                  __break(1u);
LABEL_390:
                  __break(1u);
LABEL_391:
                  __break(1u);
LABEL_392:
                  __break(1u);
LABEL_393:
                  __break(1u);
LABEL_394:
                  __break(1u);
LABEL_395:
                  __break(1u);
LABEL_396:
                  __break(1u);
LABEL_397:
                  __break(1u);
LABEL_398:
                  __break(1u);
LABEL_399:
                  __break(1u);
                }
                else
                {
                  while (1)
                  {
                    int64_t v157 = v162 + 1;
                    if (__OFADD__(v162, 1)) {
                      break;
                    }
                    if (v157 >= v366) {
                      goto LABEL_180;
                    }
                    unint64_t v161 = *(void *)(v360 + 8 * v157);
                    ++v162;
                    if (v161) {
                      goto LABEL_171;
                    }
                  }
                }
                __break(1u);
LABEL_401:
                __break(1u);
LABEL_402:
                __break(1u);
LABEL_403:
                __break(1u);
LABEL_404:
                __break(1u);
LABEL_405:
                __break(1u);
LABEL_406:
                __break(1u);
                JUMPOUT(0x1B595D4A8);
              }
              while (1)
              {
                int64_t v116 = v121 + 1;
                if (__OFADD__(v121, 1)) {
                  goto LABEL_406;
                }
                if (v116 >= v114) {
                  break;
                }
                unint64_t v120 = *(void *)(v111 + 8 * v116);
                ++v121;
                if (v120) {
                  goto LABEL_131;
                }
              }
LABEL_191:
              uint64_t v384 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64408);
              swift_release();
              *(void *)&long long v383 = v2;
              goto LABEL_193;
            default:
              uint64_t v20 = *(void *)(v18 + 16);
              uint64_t v19 = *(void *)(v18 + 24);
              uint64_t v384 = MEMORY[0x1E4FBB1A0];
              *(void *)&long long v383 = v20;
              *((void *)&v383 + 1) = v19;
              swift_bridgeObjectRetain();
              goto LABEL_193;
          }
        }
      case 5uLL:
        uint64_t v175 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED8);
        uint64_t v176 = sub_1B5A1C518();
        uint64_t v177 = (void *)v176;
        uint64_t v178 = 1 << *(unsigned char *)(v175 + 32);
        uint64_t v320 = v175 + 64;
        if (v178 < 64) {
          uint64_t v179 = ~(-1 << v178);
        }
        else {
          uint64_t v179 = -1;
        }
        unint64_t v180 = v179 & *(void *)(v175 + 64);
        int64_t v321 = (unint64_t)(v178 + 63) >> 6;
        uint64_t v325 = v176 + 64;
        swift_retain();
        int64_t v181 = 0;
        v318 = v177;
        uint64_t v312 = v175;
        if (v180) {
          goto LABEL_201;
        }
LABEL_202:
        BOOL v64 = __OFADD__(v181++, 1);
        if (v64) {
          goto LABEL_395;
        }
        if (v181 >= v321) {
          goto LABEL_364;
        }
        unint64_t v185 = *(void *)(v320 + 8 * v181);
        if (v185) {
          goto LABEL_214;
        }
        int64_t v186 = v181 + 1;
        if (v181 + 1 >= v321) {
          goto LABEL_364;
        }
        unint64_t v185 = *(void *)(v320 + 8 * v186);
        if (v185) {
          goto LABEL_213;
        }
        int64_t v186 = v181 + 2;
        if (v181 + 2 >= v321) {
          goto LABEL_364;
        }
        unint64_t v185 = *(void *)(v320 + 8 * v186);
        if (v185) {
          goto LABEL_213;
        }
        int64_t v186 = v181 + 3;
        if (v181 + 3 >= v321) {
          goto LABEL_364;
        }
        unint64_t v185 = *(void *)(v320 + 8 * v186);
        if (v185) {
          goto LABEL_213;
        }
        int64_t v186 = v181 + 4;
        if (v181 + 4 >= v321) {
          goto LABEL_364;
        }
        unint64_t v185 = *(void *)(v320 + 8 * v186);
        if (v185)
        {
LABEL_213:
          int64_t v181 = v186;
LABEL_214:
          uint64_t v183 = (v185 - 1) & v185;
          unint64_t v184 = __clz(__rbit64(v185)) + (v181 << 6);
          while (1)
          {
            uint64_t v187 = (uint64_t *)(*(void *)(v175 + 48) + 16 * v184);
            uint64_t v189 = *v187;
            uint64_t v188 = v187[1];
            unint64_t v190 = *(void *)(*(void *)(v175 + 56) + 8 * v184);
            unint64_t v342 = v183;
            int64_t v345 = v181;
            uint64_t v348 = v189;
            unint64_t v351 = v184;
            switch(v190 >> 61)
            {
              case 1uLL:
                uint64_t v194 = *(void *)((v190 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v384 = MEMORY[0x1E4FBB550];
                *(void *)&long long v383 = v194;
                goto LABEL_220;
              case 2uLL:
                uint64_t v195 = *(void *)((v190 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v384 = MEMORY[0x1E4FBB3D0];
                *(void *)&long long v383 = v195;
                goto LABEL_220;
              case 3uLL:
                char v196 = *(unsigned char *)((v190 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v384 = MEMORY[0x1E4FBB390];
                LOBYTE(v383) = v196;
LABEL_220:
                uint64_t v193 = v188;
                goto LABEL_221;
              case 4uLL:
                uint64_t v200 = *(void *)((v190 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                int64_t v201 = *(void *)(v200 + 16);
                uint64_t v313 = v188;
                if (!v201)
                {
                  swift_bridgeObjectRetain();
                  swift_retain();
                  uint64_t v247 = sub_1B59CC174(0);
                  goto LABEL_356;
                }
                *(void *)&v375[0] = MEMORY[0x1E4FBC860];
                swift_bridgeObjectRetain();
                swift_retain();
                sub_1B5957064(v201);
                uint64_t v202 = 0;
                int64_t v333 = v201;
                uint64_t v336 = v200 + 32;
                do
                {
                  unint64_t v203 = *(void *)(v336 + 8 * v202);
                  uint64_t v339 = v202 + 1;
                  switch(v203 >> 61)
                  {
                    case 1uLL:
                      uint64_t v206 = *(void *)((v203 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v382 = MEMORY[0x1E4FBB550];
                      *(void *)&long long v381 = v206;
                      goto LABEL_278;
                    case 2uLL:
                      uint64_t v207 = *(void *)((v203 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v382 = MEMORY[0x1E4FBB3D0];
                      *(void *)&long long v381 = v207;
                      goto LABEL_278;
                    case 3uLL:
                      char v208 = *(unsigned char *)((v203 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v382 = MEMORY[0x1E4FBB390];
                      LOBYTE(v381) = v208;
                      goto LABEL_278;
                    case 4uLL:
                      uint64_t v209 = *(void *)((v203 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      int64_t v210 = *(void *)(v209 + 16);
                      if (v210)
                      {
                        uint64_t v388 = MEMORY[0x1E4FBC860];
                        swift_retain();
                        sub_1B5957064(v210);
                        int64_t v2 = v209 + 32;
                        while (1)
                        {
                          unint64_t v212 = *(void *)v2;
                          v2 += 8;
                          unint64_t v211 = v212;
                          switch(v212 >> 61)
                          {
                            case 1uLL:
                              uint64_t v215 = *(void *)((v211 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                              uint64_t v380 = MEMORY[0x1E4FBB550];
                              *(void *)&long long v379 = v215;
                              goto LABEL_244;
                            case 2uLL:
                              uint64_t v216 = *(void *)((v211 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                              uint64_t v380 = MEMORY[0x1E4FBB3D0];
                              *(void *)&long long v379 = v216;
                              goto LABEL_244;
                            case 3uLL:
                              char v217 = *(unsigned char *)((v211 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                              uint64_t v380 = MEMORY[0x1E4FBB390];
                              LOBYTE(v379) = v217;
                              goto LABEL_244;
                            case 4uLL:
                              uint64_t v218 = *(void *)((v211 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                              swift_retain();
                              uint64_t v219 = sub_1B59532C4(v218);
                              if (v4) {
                                goto LABEL_375;
                              }
                              uint64_t v220 = v219;
                              uint64_t v221 = &qword_1E9D62E30;
                              goto LABEL_243;
                            case 5uLL:
                              uint64_t v222 = *(void *)((v211 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                              swift_retain();
                              uint64_t v223 = sub_1B5959A18(v222);
                              if (v4)
                              {
LABEL_375:
                                swift_release();
                                swift_release();
                                swift_release();
                                goto LABEL_376;
                              }
                              uint64_t v220 = v223;
                              uint64_t v221 = &qword_1E9D64408;
LABEL_243:
                              uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(v221);
                              swift_release();
                              *(void *)&long long v379 = v220;
LABEL_244:
                              sub_1B59599BC();
                              uint64_t v224 = v388;
                              unint64_t v226 = *(void *)(v388 + 16);
                              unint64_t v225 = *(void *)(v388 + 24);
                              if (v226 >= v225 >> 1)
                              {
                                sub_1B596924C(v225 > 1, v226 + 1, 1);
                                uint64_t v224 = v388;
                              }
                              *(void *)(v224 + 16) = v226 + 1;
                              sub_1B59098F4(&v379, (_OWORD *)(v224 + 32 * v226 + 32));
                              if (!--v210) {
                                goto LABEL_276;
                              }
                              break;
                            default:
                              uint64_t v214 = *(void *)(v211 + 16);
                              uint64_t v213 = *(void *)(v211 + 24);
                              uint64_t v380 = MEMORY[0x1E4FBB1A0];
                              *(void *)&long long v379 = v214;
                              *((void *)&v379 + 1) = v213;
                              swift_bridgeObjectRetain();
                              goto LABEL_244;
                          }
                        }
                      }
                      swift_retain();
                      uint64_t v224 = sub_1B59CC174(0);
LABEL_276:
                      uint64_t v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E30);
                      swift_release();
                      *(void *)&long long v381 = v224;
                      goto LABEL_277;
                    case 5uLL:
                      uint64_t v227 = v4;
                      uint64_t v228 = *(void *)((v203 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v229 = sub_1B5A1C518();
                      uint64_t v230 = (void *)v229;
                      uint64_t v231 = 1 << *(unsigned char *)(v228 + 32);
                      uint64_t v372 = v228;
                      uint64_t v234 = *(void *)(v228 + 64);
                      uint64_t v233 = v228 + 64;
                      uint64_t v232 = v234;
                      if (v231 < 64) {
                        uint64_t v235 = ~(-1 << v231);
                      }
                      else {
                        uint64_t v235 = -1;
                      }
                      unint64_t v236 = v235 & v232;
                      uint64_t v356 = v233;
                      int64_t v361 = (unint64_t)(v231 + 63) >> 6;
                      uint64_t v367 = v229 + 64;
                      swift_retain();
                      int64_t v237 = 0;
                      if (v236) {
                        goto LABEL_252;
                      }
                      break;
                    default:
                      uint64_t v205 = *(void *)(v203 + 16);
                      uint64_t v204 = *(void *)(v203 + 24);
                      uint64_t v382 = MEMORY[0x1E4FBB1A0];
                      *(void *)&long long v381 = v205;
                      *((void *)&v381 + 1) = v204;
                      swift_bridgeObjectRetain();
                      goto LABEL_278;
                  }
                  while (1)
                  {
                    BOOL v64 = __OFADD__(v237++, 1);
                    if (v64) {
                      goto LABEL_389;
                    }
                    if (v237 >= v361) {
                      break;
                    }
                    unint64_t v240 = *(void *)(v356 + 8 * v237);
                    if (!v240)
                    {
                      int64_t v241 = v237 + 1;
                      if (v237 + 1 >= v361) {
                        break;
                      }
                      unint64_t v240 = *(void *)(v356 + 8 * v241);
                      if (!v240)
                      {
                        int64_t v241 = v237 + 2;
                        if (v237 + 2 >= v361) {
                          break;
                        }
                        unint64_t v240 = *(void *)(v356 + 8 * v241);
                        if (!v240)
                        {
                          int64_t v241 = v237 + 3;
                          if (v237 + 3 >= v361) {
                            break;
                          }
                          unint64_t v240 = *(void *)(v356 + 8 * v241);
                          if (!v240)
                          {
                            int64_t v241 = v237 + 4;
                            if (v237 + 4 >= v361) {
                              break;
                            }
                            unint64_t v240 = *(void *)(v356 + 8 * v241);
                            if (!v240)
                            {
                              while (1)
                              {
                                int64_t v237 = v241 + 1;
                                if (__OFADD__(v241, 1)) {
                                  goto LABEL_401;
                                }
                                if (v237 >= v361) {
                                  goto LABEL_274;
                                }
                                unint64_t v240 = *(void *)(v356 + 8 * v237);
                                ++v241;
                                if (v240) {
                                  goto LABEL_265;
                                }
                              }
                            }
                          }
                        }
                      }
                      int64_t v237 = v241;
                    }
LABEL_265:
                    unint64_t v236 = (v240 - 1) & v240;
                    for (unint64_t m = __clz(__rbit64(v240)) + (v237 << 6); ; unint64_t m = v238 | (v237 << 6))
                    {
                      uint64_t v242 = (int64_t *)(*(void *)(v372 + 48) + 16 * m);
                      int64_t v2 = *v242;
                      int64_t v243 = v242[1];
                      uint64_t v388 = *(void *)(*(void *)(v372 + 56) + 8 * m);
                      swift_retain();
                      swift_bridgeObjectRetain();
                      sub_1B5954744((uint64_t *)&v379);
                      if (v227)
                      {
                        swift_release();
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release();
LABEL_376:
                        swift_release();
                        swift_release();
                        swift_bridgeObjectRelease();
                        goto LABEL_380;
                      }
                      swift_release();
                      *(void *)(v367 + ((m >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << m;
                      uint64_t v244 = (int64_t *)(v230[6] + 16 * m);
                      *uint64_t v244 = v2;
                      v244[1] = v243;
                      sub_1B59098F4(&v379, (_OWORD *)(v230[7] + 32 * m));
                      uint64_t v245 = v230[2];
                      BOOL v64 = __OFADD__(v245, 1);
                      uint64_t v246 = v245 + 1;
                      if (v64) {
                        goto LABEL_385;
                      }
                      v230[2] = v246;
                      if (!v236) {
                        break;
                      }
LABEL_252:
                      unint64_t v238 = __clz(__rbit64(v236));
                      v236 &= v236 - 1;
                    }
                  }
LABEL_274:
                  uint64_t v4 = v227;
                  uint64_t v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64408);
                  swift_release();
                  *(void *)&long long v381 = v230;
LABEL_277:
                  uint64_t v177 = v318;
                  uint64_t v175 = v312;
LABEL_278:
                  sub_1B59599BC();
                  uint64_t v247 = *(void *)&v375[0];
                  unint64_t v249 = *(void *)(*(void *)&v375[0] + 16);
                  unint64_t v248 = *(void *)(*(void *)&v375[0] + 24);
                  if (v249 >= v248 >> 1)
                  {
                    sub_1B596924C(v248 > 1, v249 + 1, 1);
                    uint64_t v247 = *(void *)&v375[0];
                  }
                  *(void *)(v247 + 16) = v249 + 1;
                  sub_1B59098F4(&v381, (_OWORD *)(v247 + 32 * v249 + 32));
                  uint64_t v202 = v339;
                }
                while (v339 != v333);
LABEL_356:
                uint64_t v384 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E30);
                swift_release();
                *(void *)&long long v383 = v247;
                goto LABEL_357;
              case 5uLL:
                uint64_t v250 = *(void *)((v190 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v251 = v188;
                uint64_t v252 = sub_1B5A1C518();
                uint64_t v253 = (void *)v252;
                uint64_t v254 = 1 << *(unsigned char *)(v250 + 32);
                uint64_t v328 = v250;
                uint64_t v257 = *(void *)(v250 + 64);
                uint64_t v256 = v250 + 64;
                uint64_t v255 = v257;
                if (v254 < 64) {
                  uint64_t v258 = ~(-1 << v254);
                }
                else {
                  uint64_t v258 = -1;
                }
                unint64_t v259 = v258 & v255;
                uint64_t v315 = v256;
                int64_t v316 = (unint64_t)(v254 + 63) >> 6;
                uint64_t v323 = v252 + 64;
                uint64_t v313 = v251;
                swift_bridgeObjectRetain();
                swift_retain();
                int64_t v260 = 0;
                if (v259) {
                  goto LABEL_286;
                }
LABEL_287:
                BOOL v64 = __OFADD__(v260++, 1);
                if (v64) {
                  goto LABEL_396;
                }
                if (v260 >= v316) {
                  goto LABEL_355;
                }
                unint64_t v264 = *(void *)(v315 + 8 * v260);
                if (v264) {
                  goto LABEL_299;
                }
                int64_t v265 = v260 + 1;
                if (v260 + 1 >= v316) {
                  goto LABEL_355;
                }
                unint64_t v264 = *(void *)(v315 + 8 * v265);
                if (v264) {
                  goto LABEL_298;
                }
                int64_t v265 = v260 + 2;
                if (v260 + 2 >= v316) {
                  goto LABEL_355;
                }
                unint64_t v264 = *(void *)(v315 + 8 * v265);
                if (v264) {
                  goto LABEL_298;
                }
                int64_t v265 = v260 + 3;
                if (v260 + 3 >= v316) {
                  goto LABEL_355;
                }
                unint64_t v264 = *(void *)(v315 + 8 * v265);
                if (v264) {
                  goto LABEL_298;
                }
                int64_t v265 = v260 + 4;
                if (v260 + 4 >= v316) {
                  goto LABEL_355;
                }
                unint64_t v264 = *(void *)(v315 + 8 * v265);
                if (v264)
                {
LABEL_298:
                  int64_t v260 = v265;
LABEL_299:
                  uint64_t v262 = (v264 - 1) & v264;
                  unint64_t v263 = __clz(__rbit64(v264)) + (v260 << 6);
LABEL_300:
                  v266 = (uint64_t *)(*(void *)(v328 + 48) + 16 * v263);
                  uint64_t v268 = *v266;
                  uint64_t v267 = v266[1];
                  unint64_t v269 = *(void *)(*(void *)(v328 + 56) + 8 * v263);
                  unint64_t v330 = v262;
                  int64_t v334 = v260;
                  uint64_t v337 = v268;
                  unint64_t v340 = v263;
                  switch(v269 >> 61)
                  {
                    case 1uLL:
                      uint64_t v273 = *(void *)((v269 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v382 = MEMORY[0x1E4FBB550];
                      *(void *)&long long v381 = v273;
                      goto LABEL_305;
                    case 2uLL:
                      uint64_t v274 = *(void *)((v269 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v382 = MEMORY[0x1E4FBB3D0];
                      *(void *)&long long v381 = v274;
                      goto LABEL_305;
                    case 3uLL:
                      char v275 = *(unsigned char *)((v269 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v382 = MEMORY[0x1E4FBB390];
                      LOBYTE(v381) = v275;
LABEL_305:
                      uint64_t v272 = v267;
                      goto LABEL_306;
                    case 4uLL:
                      uint64_t v279 = *(void *)((v269 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      int64_t v280 = *(void *)(v279 + 16);
                      if (v280)
                      {
                        uint64_t v388 = MEMORY[0x1E4FBC860];
                        uint64_t v272 = v267;
                        swift_bridgeObjectRetain();
                        swift_retain();
                        sub_1B5957064(v280);
                        int64_t v2 = v279 + 32;
                        do
                        {
                          unint64_t v281 = *(void *)v2;
                          v2 += 8;
                          swift_retain();
                          *(void *)&v375[0] = v281;
                          sub_1B5954744((uint64_t *)&v379);
                          if (v4)
                          {
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_bridgeObjectRelease();
                            swift_release();
                            swift_release();
                            swift_bridgeObjectRelease();
                            goto LABEL_380;
                          }
                          swift_release();
                          sub_1B59599BC();
                          uint64_t v282 = v388;
                          unint64_t v284 = *(void *)(v388 + 16);
                          unint64_t v283 = *(void *)(v388 + 24);
                          if (v284 >= v283 >> 1)
                          {
                            sub_1B596924C(v283 > 1, v284 + 1, 1);
                            uint64_t v282 = v388;
                          }
                          *(void *)(v282 + 16) = v284 + 1;
                          sub_1B59098F4(&v379, (_OWORD *)(v282 + 32 * v284 + 32));
                          --v280;
                        }
                        while (v280);
                      }
                      else
                      {
                        uint64_t v272 = v267;
                        swift_bridgeObjectRetain();
                        swift_retain();
                        uint64_t v282 = sub_1B59CC174(0);
                      }
                      uint64_t v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E30);
                      swift_release();
                      *(void *)&long long v381 = v282;
                      uint64_t v177 = v318;
                      uint64_t v175 = v312;
                      goto LABEL_307;
                    case 5uLL:
                      v311 = v253;
                      uint64_t v285 = v4;
                      uint64_t v286 = *(void *)((v269 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v287 = v267;
                      uint64_t v288 = sub_1B5A1C518();
                      v289 = (void *)v288;
                      uint64_t v290 = 1 << *(unsigned char *)(v286 + 32);
                      uint64_t v373 = v286;
                      uint64_t v357 = v286 + 64;
                      if (v290 < 64) {
                        uint64_t v291 = ~(-1 << v290);
                      }
                      else {
                        uint64_t v291 = -1;
                      }
                      unint64_t v292 = v291 & *(void *)(v286 + 64);
                      int64_t v362 = (unint64_t)(v290 + 63) >> 6;
                      uint64_t v368 = v288 + 64;
                      uint64_t v310 = v287;
                      swift_bridgeObjectRetain();
                      swift_retain();
                      int64_t v293 = 0;
                      if (v292) {
                        goto LABEL_321;
                      }
                      break;
                    default:
                      uint64_t v270 = *(void *)(v269 + 16);
                      uint64_t v271 = *(void *)(v269 + 24);
                      uint64_t v382 = MEMORY[0x1E4FBB1A0];
                      *(void *)&long long v381 = v270;
                      *((void *)&v381 + 1) = v271;
                      uint64_t v272 = v267;
                      swift_bridgeObjectRetain();
LABEL_306:
                      swift_bridgeObjectRetain();
                      goto LABEL_307;
                  }
                  while (1)
                  {
                    BOOL v64 = __OFADD__(v293++, 1);
                    if (v64) {
                      goto LABEL_387;
                    }
                    if (v293 >= v362) {
                      goto LABEL_343;
                    }
                    unint64_t v296 = *(void *)(v357 + 8 * v293);
                    if (!v296)
                    {
                      int64_t v297 = v293 + 1;
                      if (v293 + 1 >= v362) {
                        goto LABEL_343;
                      }
                      unint64_t v296 = *(void *)(v357 + 8 * v297);
                      if (!v296)
                      {
                        int64_t v297 = v293 + 2;
                        if (v293 + 2 >= v362) {
                          goto LABEL_343;
                        }
                        unint64_t v296 = *(void *)(v357 + 8 * v297);
                        if (!v296)
                        {
                          int64_t v297 = v293 + 3;
                          if (v293 + 3 >= v362) {
                            goto LABEL_343;
                          }
                          unint64_t v296 = *(void *)(v357 + 8 * v297);
                          if (!v296)
                          {
                            int64_t v297 = v293 + 4;
                            if (v293 + 4 >= v362) {
                              goto LABEL_343;
                            }
                            unint64_t v296 = *(void *)(v357 + 8 * v297);
                            if (!v296)
                            {
                              while (1)
                              {
                                int64_t v293 = v297 + 1;
                                if (__OFADD__(v297, 1)) {
                                  goto LABEL_399;
                                }
                                if (v293 >= v362) {
                                  break;
                                }
                                unint64_t v296 = *(void *)(v357 + 8 * v293);
                                ++v297;
                                if (v296) {
                                  goto LABEL_334;
                                }
                              }
LABEL_343:
                              uint64_t v4 = v285;
                              uint64_t v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64408);
                              swift_release();
                              *(void *)&long long v381 = v289;
                              uint64_t v177 = v318;
                              uint64_t v175 = v312;
                              uint64_t v253 = v311;
                              uint64_t v272 = v310;
LABEL_307:
                              *(void *)(v323 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v340;
                              v276 = (void *)(v253[6] + 16 * v340);
                              void *v276 = v337;
                              v276[1] = v272;
                              sub_1B59098F4(&v381, (_OWORD *)(v253[7] + 32 * v340));
                              uint64_t v277 = v253[2];
                              BOOL v64 = __OFADD__(v277, 1);
                              uint64_t v278 = v277 + 1;
                              if (v64) {
                                goto LABEL_390;
                              }
                              v253[2] = v278;
                              unint64_t v259 = v330;
                              int64_t v260 = v334;
                              if (!v330) {
                                goto LABEL_287;
                              }
LABEL_286:
                              unint64_t v261 = __clz(__rbit64(v259));
                              uint64_t v262 = (v259 - 1) & v259;
                              unint64_t v263 = v261 | (v260 << 6);
                              goto LABEL_300;
                            }
                          }
                        }
                      }
                      int64_t v293 = v297;
                    }
LABEL_334:
                    unint64_t v292 = (v296 - 1) & v296;
                    for (unint64_t n = __clz(__rbit64(v296)) + (v293 << 6); ; unint64_t n = v294 | (v293 << 6))
                    {
                      v298 = (int64_t *)(*(void *)(v373 + 48) + 16 * n);
                      int64_t v2 = *v298;
                      int64_t v299 = v298[1];
                      uint64_t v300 = *(void *)(*(void *)(v373 + 56) + 8 * n);
                      swift_bridgeObjectRetain();
                      swift_retain();
                      *(void *)&v375[0] = v300;
                      sub_1B5954744((uint64_t *)&v379);
                      if (v285)
                      {
                        swift_release();
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release();
                        goto LABEL_381;
                      }
                      swift_release();
                      *(void *)(v368 + ((n >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << n;
                      v301 = (int64_t *)(v289[6] + 16 * n);
                      int64_t *v301 = v2;
                      v301[1] = v299;
                      sub_1B59098F4(&v379, (_OWORD *)(v289[7] + 32 * n));
                      uint64_t v302 = v289[2];
                      BOOL v64 = __OFADD__(v302, 1);
                      uint64_t v303 = v302 + 1;
                      if (v64)
                      {
                        __break(1u);
                        goto LABEL_384;
                      }
                      v289[2] = v303;
                      if (!v292) {
                        break;
                      }
LABEL_321:
                      unint64_t v294 = __clz(__rbit64(v292));
                      v292 &= v292 - 1;
                    }
                  }
                }
                while (1)
                {
                  int64_t v260 = v265 + 1;
                  if (__OFADD__(v265, 1)) {
                    goto LABEL_403;
                  }
                  if (v260 >= v316) {
                    break;
                  }
                  unint64_t v264 = *(void *)(v315 + 8 * v260);
                  ++v265;
                  if (v264) {
                    goto LABEL_299;
                  }
                }
LABEL_355:
                uint64_t v384 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64408);
                swift_release();
                *(void *)&long long v383 = v253;
LABEL_357:
                uint64_t v193 = v313;
LABEL_222:
                *(void *)(v325 + ((v351 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v351;
                v197 = (void *)(v177[6] + 16 * v351);
                void *v197 = v348;
                v197[1] = v193;
                sub_1B59098F4(&v383, (_OWORD *)(v177[7] + 32 * v351));
                uint64_t v198 = v177[2];
                BOOL v64 = __OFADD__(v198, 1);
                uint64_t v199 = v198 + 1;
                if (v64) {
                  goto LABEL_391;
                }
                v177[2] = v199;
                unint64_t v180 = v342;
                int64_t v181 = v345;
                if (!v342) {
                  goto LABEL_202;
                }
LABEL_201:
                unint64_t v182 = __clz(__rbit64(v180));
                uint64_t v183 = (v180 - 1) & v180;
                unint64_t v184 = v182 | (v181 << 6);
                break;
              default:
                uint64_t v191 = *(void *)(v190 + 16);
                uint64_t v192 = *(void *)(v190 + 24);
                uint64_t v384 = MEMORY[0x1E4FBB1A0];
                *(void *)&long long v383 = v191;
                *((void *)&v383 + 1) = v192;
                uint64_t v193 = v188;
                swift_bridgeObjectRetain();
LABEL_221:
                swift_bridgeObjectRetain();
                goto LABEL_222;
            }
          }
        }
        while (1)
        {
          int64_t v181 = v186 + 1;
          if (__OFADD__(v186, 1)) {
            goto LABEL_404;
          }
          if (v181 >= v321) {
            break;
          }
          unint64_t v185 = *(void *)(v320 + 8 * v181);
          ++v186;
          if (v185) {
            goto LABEL_214;
          }
        }
LABEL_364:
        uint64_t v386 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64408);
        swift_release();
        *(void *)&long long v385 = v177;
        goto LABEL_360;
      default:
        uint64_t v11 = *(void *)(v9 + 16);
        uint64_t v10 = *(void *)(v9 + 24);
        uint64_t v386 = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v385 = v11;
        *((void *)&v385 + 1) = v10;
        swift_bridgeObjectRetain();
        goto LABEL_360;
    }
  }
}

unint64_t sub_1B595D5B4()
{
  unint64_t result = qword_1E9D643F8;
  if (!qword_1E9D643F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D643F8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DecodableState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for DecodableState()
{
  return swift_release();
}

void *assignWithCopy for DecodableState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for DecodableState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DecodableState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7B && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 123);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DecodableState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(void *)unint64_t result = a2 - 123;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B595D77C(void *a1)
{
  return *a1 >> 61;
}

void *sub_1B595D788(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1B595D798(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for DecodableState()
{
  return &type metadata for DecodableState;
}

uint64_t dispatch thunk of StateDecodable.asDecodable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static StateDecodable.create(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t destroy for DecodableStateError(uint64_t result)
{
  if (*(void *)(result + 8) >= 0xFFFFFFFFuLL) {
    return swift_release();
  }
  return result;
}

uint64_t _s6LiftUI19DecodableStateErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

void *assignWithCopy for DecodableStateError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t assignWithTake for DecodableStateError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for DecodableStateError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DecodableStateError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1B595DA54(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1B595DA6C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DecodableStateError()
{
  return &type metadata for DecodableStateError;
}

void destroy for LineLimitModifier(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 24);
  if (v1 <= 0xFD) {
    sub_1B591DF0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v1);
  }
}

uint64_t initializeWithCopy for LineLimitModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 24);
  if (v3 <= 0xFD)
  {
    uint64_t v4 = *(void *)a2;
    uint64_t v5 = *(void *)(a2 + 8);
    uint64_t v6 = *(void *)(a2 + 16);
    sub_1B591DF88(*(void *)a2, v5, v6, v3);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = v3;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  return a1;
}

uint64_t assignWithCopy for LineLimitModifier(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) <= 0xFDu)
  {
    if (v4 <= 0xFD)
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      sub_1B591DF88(*(void *)a2, v11, v12, v4);
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = *(void *)(a1 + 16);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      char v16 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v4;
      sub_1B591DF0C(v13, v14, v15, v16);
    }
    else
    {
      sub_1B595DC30(a1);
      long long v6 = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 9) = v6;
    }
  }
  else if (v4 <= 0xFD)
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    uint64_t v9 = *((void *)a2 + 2);
    sub_1B591DF88(*(void *)a2, v8, v9, v4);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    long long v5 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v5;
  }
  return a1;
}

uint64_t sub_1B595DC30(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for LineLimitModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 <= 0xFD)
  {
    unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
    if (v5 <= 0xFD)
    {
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v7 = *(void *)a1;
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = v6;
      *(unsigned char *)(a1 + 24) = v5;
      sub_1B591DF0C(v7, v8, v9, v4);
      return a1;
    }
    sub_1B595DC30(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for LineLimitModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if ((v3 & 0x7E) != 0) {
    int v4 = 126 - (v3 & 0x7E | (v3 >> 7));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LineLimitModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LineLimitModifier()
{
  return &type metadata for LineLimitModifier;
}

uint64_t sub_1B595DDBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64428);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B595E208();
  sub_1B5A1C838();
  if (!v2)
  {
    sub_1B595E25C();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B595DF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B595E48C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B595DF68(uint64_t a1)
{
  unint64_t v2 = sub_1B595E208();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B595DFA4(uint64_t a1)
{
  unint64_t v2 = sub_1B595E208();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B595DFE0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)v3;
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v8 = *(void *)(v3 + 16);
  unsigned int v9 = *(unsigned __int8 *)(v3 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v9 <= 0xFD)
  {
    sub_1B591DF88(v6, v7, v8, v9);
    sub_1B5963948(a2);
    sub_1B59325C0(v6, v7, v8, v9);
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64418);
  a3[3] = sub_1B5A1A748();
  sub_1B595E1AC();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B798();
}

uint64_t sub_1B595E118@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B595DDBC(a1, a2);
}

unint64_t sub_1B595E130(uint64_t a1)
{
  unint64_t result = sub_1B595E158();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B595E158()
{
  unint64_t result = qword_1E9D64410;
  if (!qword_1E9D64410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64410);
  }
  return result;
}

unint64_t sub_1B595E1AC()
{
  unint64_t result = qword_1E9D64420;
  if (!qword_1E9D64420)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64420);
  }
  return result;
}

unint64_t sub_1B595E208()
{
  unint64_t result = qword_1E9D64430;
  if (!qword_1E9D64430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64430);
  }
  return result;
}

unint64_t sub_1B595E25C()
{
  unint64_t result = qword_1E9D64438;
  if (!qword_1E9D64438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64438);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LineLimitModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B595E34CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LineLimitModifier.CodingKeys()
{
  return &type metadata for LineLimitModifier.CodingKeys;
}

unint64_t sub_1B595E388()
{
  unint64_t result = qword_1E9D64440;
  if (!qword_1E9D64440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64440);
  }
  return result;
}

unint64_t sub_1B595E3E0()
{
  unint64_t result = qword_1E9D64448;
  if (!qword_1E9D64448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64448);
  }
  return result;
}

unint64_t sub_1B595E438()
{
  unint64_t result = qword_1E9D64450;
  if (!qword_1E9D64450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64450);
  }
  return result;
}

uint64_t sub_1B595E48C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x73656E696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B595E50C()
{
  return 0x73656E696CLL;
}

void sub_1B595E520(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, long double a4@<D0>, long double a5@<D1>)
{
  double v7 = *(double *)a1;
  double v8 = *(double *)a2;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    a4 = *(double *)a1;
    a5 = *(double *)a2;
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      a5 = (double)*(uint64_t *)&v8;
    }
LABEL_7:
    switch(*v5)
    {
      case 1:
        goto LABEL_13;
      case 2:
        double v9 = a5 * a4;
        break;
      case 3:
        double v9 = a4 / a5;
        break;
      case 4:
        double v9 = fmod(a4, a5);
        break;
      default:
        double v9 = a5 + a4;
        break;
    }
LABEL_17:
    uint64_t v10 = *(void *)&v9;
    char v11 = 1;
    goto LABEL_18;
  }
  if (*(unsigned char *)(a2 + 8))
  {
    a4 = (double)*(uint64_t *)&v7;
    a5 = *(double *)a2;
    goto LABEL_7;
  }
  switch(*v5)
  {
    case 1:
      uint64_t v10 = *(void *)&v7 - *(void *)&v8;
      if (!__OFSUB__(*(void *)&v7, *(void *)&v8)) {
        goto LABEL_23;
      }
      __break(1u);
LABEL_22:
      uint64_t v10 = *(void *)&v7 * *(void *)&v8;
      if ((unsigned __int128)(*(uint64_t *)&v7 * (__int128)*(uint64_t *)&v8) >> 64 != (uint64_t)(*(void *)&v7
                                                                                             * *(void *)&v8) >> 63)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1B595E67CLL);
      }
LABEL_23:
      char v11 = 0;
      break;
    case 2:
      goto LABEL_22;
    case 3:
      if (v8 == 0.0) {
        goto LABEL_37;
      }
      if (v7 == -0.0 && *(void *)&v8 == -1) {
        goto LABEL_39;
      }
      char v11 = 0;
      uint64_t v10 = *(void *)&v7 / *(uint64_t *)&v8;
      break;
    case 4:
      if (v8 == 0.0) {
        goto LABEL_38;
      }
      if (v7 == -0.0 && *(void *)&v8 == -1) {
        goto LABEL_40;
      }
      char v11 = 0;
      uint64_t v10 = *(uint64_t *)&v7 % *(void *)&v8;
      break;
    default:
      uint64_t v10 = *(void *)&v7 + *(void *)&v8;
      if (!__OFADD__(*(void *)&v7, *(void *)&v8)) {
        goto LABEL_23;
      }
      __break(1u);
LABEL_13:
      double v9 = a4 - a5;
      goto LABEL_17;
  }
LABEL_18:
  *(void *)a3 = v10;
  *(unsigned char *)(a3 + 8) = v11;
}

LiftUI::MathOperation_optional __swiftcall MathOperation.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1B5A1C558();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t MathOperation.rawValue.getter()
{
  return qword_1B5A246D8[*v0];
}

uint64_t sub_1B595E718(char *a1, char *a2)
{
  return sub_1B59EF4AC(*a1, *a2);
}

uint64_t sub_1B595E724()
{
  return sub_1B59F0FA8();
}

uint64_t sub_1B595E72C()
{
  return sub_1B59F45D4();
}

uint64_t sub_1B595E734()
{
  return sub_1B59F57B0();
}

LiftUI::MathOperation_optional sub_1B595E73C(Swift::String *a1)
{
  return MathOperation.init(rawValue:)(*a1);
}

uint64_t sub_1B595E748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MathOperation.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_1B595E774()
{
  return sub_1B5A1C078();
}

uint64_t NumericValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (v2)
  {

    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
    sub_1B595E940((uint64_t)v8);
    sub_1B5951A10();
    swift_allocError();
    *char v5 = 0;
    v5[1] = 0;
    swift_willThrow();
  }
  else
  {
    sub_1B5908BE8(v8, (uint64_t)v10);
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    uint64_t v6 = sub_1B5A1C6B8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    *(void *)a2 = v6;
    *(unsigned char *)(a2 + 8) = 0;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B595E940(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D643B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B595E9A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NumericValue.init(from:)(a1, a2);
}

uint64_t *static NumericValue.create(with:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  unint64_t v3 = (unint64_t)*result >> 61;
  if (v3 == 2)
  {
    *(void *)a2 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    *(unsigned char *)(a2 + 8) = 1;
  }
  else if (v3 == 1)
  {
    *(void *)a2 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    *(unsigned char *)(a2 + 8) = 0;
  }
  else
  {
    sub_1B5951A10();
    swift_allocError();
    uint64_t v4 = MEMORY[0x1E4FBB3D0];
    *char v5 = v2;
    v5[1] = v4;
    swift_retain();
    return (uint64_t *)swift_willThrow();
  }
  return result;
}

uint64_t NumericValue.asDecodable.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  int v4 = *((unsigned __int8 *)v1 + 8);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  uint64_t v6 = 0x2000000000000000;
  if (v4) {
    uint64_t v6 = 0x4000000000000000;
  }
  *a1 = v6 | result;
  return result;
}

uint64_t sub_1B595EABC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1B595EAD0()
{
  unint64_t result = qword_1E9D64458;
  if (!qword_1E9D64458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64458);
  }
  return result;
}

uint64_t sub_1B595EB24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  int v4 = *((unsigned __int8 *)v1 + 8);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  uint64_t v6 = 0x2000000000000000;
  if (v4) {
    uint64_t v6 = 0x4000000000000000;
  }
  *a1 = v6 | result;
  return result;
}

uint64_t *sub_1B595EB84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return static NumericValue.create(with:)(a1, a2);
}

unsigned char *storeEnumTagSinglePayload for MathOperation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B595EC68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MathOperation()
{
  return &type metadata for MathOperation;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for NumericValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NumericValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B595ED40(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1B595ED48(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NumericValue()
{
  return &type metadata for NumericValue;
}

unint64_t sub_1B595ED64()
{
  unint64_t result = qword_1E9D64460;
  if (!qword_1E9D64460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64460);
  }
  return result;
}

uint64_t destroy for StringResolvable(uint64_t a1)
{
  return sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for StringResolvable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for StringResolvable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B5904A88(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for StringResolvable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B5904A88(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StringResolvable(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 24) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for StringResolvable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageScaleModifier()
{
  return &type metadata for ImageScaleModifier;
}

void destroy for ScaleEffectModifier(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 != 255) {
    sub_1B590D6F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v2 & 1);
  }
  int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 != 255) {
    sub_1B590D6F0(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v3 & 1);
  }
  int v4 = *(unsigned __int8 *)(a1 + 88);
  if (v4 != 255) {
    sub_1B590D6F0(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v4 & 1);
  }
  int v5 = *(unsigned __int8 *)(a1 + 120);
  if (v5 != 255)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    uint64_t v7 = *(void *)(a1 + 104);
    uint64_t v8 = *(void *)(a1 + 112);
    sub_1B590D6F0(v6, v7, v8, v5 & 1);
  }
}

uint64_t initializeWithCopy for ScaleEffectModifier(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  }
  else
  {
    char v5 = v4 & 1;
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    uint64_t v8 = a2[2];
    sub_1B590D634(*a2, v7, v8, v4 & 1);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v5;
  }
  int v9 = *((unsigned __int8 *)a2 + 56);
  if (v9 == 255)
  {
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  else
  {
    char v10 = v9 & 1;
    uint64_t v11 = a2[4];
    uint64_t v12 = a2[5];
    uint64_t v13 = a2[6];
    sub_1B590D634(v11, v12, v13, v9 & 1);
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v13;
    *(unsigned char *)(a1 + 56) = v10;
  }
  int v14 = *((unsigned __int8 *)a2 + 88);
  if (v14 == 255)
  {
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
  }
  else
  {
    char v15 = v14 & 1;
    uint64_t v16 = a2[8];
    uint64_t v17 = a2[9];
    uint64_t v18 = a2[10];
    sub_1B590D634(v16, v17, v18, v14 & 1);
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v17;
    *(void *)(a1 + 80) = v18;
    *(unsigned char *)(a1 + 88) = v15;
  }
  int v19 = *((unsigned __int8 *)a2 + 120);
  if (v19 == 255)
  {
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)((char *)a2 + 105);
  }
  else
  {
    char v20 = v19 & 1;
    uint64_t v21 = a2[12];
    uint64_t v22 = a2[13];
    uint64_t v23 = a2[14];
    sub_1B590D634(v21, v22, v23, v19 & 1);
    *(void *)(a1 + 96) = v21;
    *(void *)(a1 + 104) = v22;
    *(void *)(a1 + 112) = v23;
    *(unsigned char *)(a1 + 120) = v20;
  }
  return a1;
}

uint64_t assignWithCopy for ScaleEffectModifier(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v4 == 255)
    {
      long long v6 = *a2;
      *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      char v15 = v4 & 1;
      uint64_t v16 = *(void *)a2;
      uint64_t v17 = *((void *)a2 + 1);
      uint64_t v18 = *((void *)a2 + 2);
      sub_1B590D634(*(void *)a2, v17, v18, v4 & 1);
      *(void *)a1 = v16;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = v18;
      *(unsigned char *)(a1 + 24) = v15;
    }
  }
  else if (v4 == 255)
  {
    sub_1B59369A8(a1);
    long long v5 = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 9) = v5;
  }
  else
  {
    char v7 = v4 & 1;
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *((void *)a2 + 1);
    uint64_t v10 = *((void *)a2 + 2);
    sub_1B590D634(*(void *)a2, v9, v10, v4 & 1);
    uint64_t v11 = *(void *)a1;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 16);
    char v14 = *(unsigned char *)(a1 + 24);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(unsigned char *)(a1 + 24) = v7;
    sub_1B590D6F0(v11, v12, v13, v14);
  }
  int v19 = (long long *)(a1 + 32);
  char v20 = a2 + 2;
  int v21 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v21 == 255)
    {
      long long v23 = *v20;
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *int v19 = v23;
    }
    else
    {
      char v32 = v21 & 1;
      uint64_t v33 = *((void *)a2 + 4);
      uint64_t v34 = *((void *)a2 + 5);
      uint64_t v35 = *((void *)a2 + 6);
      sub_1B590D634(v33, v34, v35, v21 & 1);
      *(void *)(a1 + 32) = v33;
      *(void *)(a1 + 40) = v34;
      *(void *)(a1 + 48) = v35;
      *(unsigned char *)(a1 + 56) = v32;
    }
  }
  else if (v21 == 255)
  {
    sub_1B59369A8(a1 + 32);
    long long v22 = *(long long *)((char *)a2 + 41);
    *int v19 = *v20;
    *(_OWORD *)(a1 + 41) = v22;
  }
  else
  {
    char v24 = v21 & 1;
    uint64_t v25 = *((void *)a2 + 4);
    uint64_t v26 = *((void *)a2 + 5);
    uint64_t v27 = *((void *)a2 + 6);
    sub_1B590D634(v25, v26, v27, v21 & 1);
    uint64_t v28 = *(void *)(a1 + 32);
    uint64_t v29 = *(void *)(a1 + 40);
    uint64_t v30 = *(void *)(a1 + 48);
    char v31 = *(unsigned char *)(a1 + 56);
    *(void *)(a1 + 32) = v25;
    *(void *)(a1 + 40) = v26;
    *(void *)(a1 + 48) = v27;
    *(unsigned char *)(a1 + 56) = v24;
    sub_1B590D6F0(v28, v29, v30, v31);
  }
  unint64_t v36 = (long long *)(a1 + 64);
  uint64_t v37 = a2 + 4;
  int v38 = *((unsigned __int8 *)a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v38 == 255)
    {
      long long v40 = *v37;
      *(_OWORD *)(a1 + 73) = *(long long *)((char *)a2 + 73);
      *unint64_t v36 = v40;
    }
    else
    {
      char v49 = v38 & 1;
      uint64_t v50 = *((void *)a2 + 8);
      uint64_t v51 = *((void *)a2 + 9);
      uint64_t v52 = *((void *)a2 + 10);
      sub_1B590D634(v50, v51, v52, v38 & 1);
      *(void *)(a1 + 64) = v50;
      *(void *)(a1 + 72) = v51;
      *(void *)(a1 + 80) = v52;
      *(unsigned char *)(a1 + 88) = v49;
    }
  }
  else if (v38 == 255)
  {
    sub_1B59369A8(a1 + 64);
    long long v39 = *(long long *)((char *)a2 + 73);
    *unint64_t v36 = *v37;
    *(_OWORD *)(a1 + 73) = v39;
  }
  else
  {
    char v41 = v38 & 1;
    uint64_t v42 = *((void *)a2 + 8);
    uint64_t v43 = *((void *)a2 + 9);
    uint64_t v44 = *((void *)a2 + 10);
    sub_1B590D634(v42, v43, v44, v38 & 1);
    uint64_t v45 = *(void *)(a1 + 64);
    uint64_t v46 = *(void *)(a1 + 72);
    uint64_t v47 = *(void *)(a1 + 80);
    char v48 = *(unsigned char *)(a1 + 88);
    *(void *)(a1 + 64) = v42;
    *(void *)(a1 + 72) = v43;
    *(void *)(a1 + 80) = v44;
    *(unsigned char *)(a1 + 88) = v41;
    sub_1B590D6F0(v45, v46, v47, v48);
  }
  uint64_t v53 = (long long *)(a1 + 96);
  uint64_t v54 = a2 + 6;
  int v55 = *((unsigned __int8 *)a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) == 255)
  {
    if (v55 == 255)
    {
      long long v57 = *v54;
      *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
      *uint64_t v53 = v57;
    }
    else
    {
      char v66 = v55 & 1;
      uint64_t v67 = *((void *)a2 + 12);
      uint64_t v68 = *((void *)a2 + 13);
      uint64_t v69 = *((void *)a2 + 14);
      sub_1B590D634(v67, v68, v69, v55 & 1);
      *(void *)(a1 + 96) = v67;
      *(void *)(a1 + 104) = v68;
      *(void *)(a1 + 112) = v69;
      *(unsigned char *)(a1 + 120) = v66;
    }
  }
  else if (v55 == 255)
  {
    sub_1B59369A8(a1 + 96);
    long long v56 = *(long long *)((char *)a2 + 105);
    *uint64_t v53 = *v54;
    *(_OWORD *)(a1 + 105) = v56;
  }
  else
  {
    char v58 = v55 & 1;
    uint64_t v59 = *((void *)a2 + 12);
    uint64_t v60 = *((void *)a2 + 13);
    uint64_t v61 = *((void *)a2 + 14);
    sub_1B590D634(v59, v60, v61, v55 & 1);
    uint64_t v62 = *(void *)(a1 + 96);
    uint64_t v63 = *(void *)(a1 + 104);
    uint64_t v64 = *(void *)(a1 + 112);
    char v65 = *(unsigned char *)(a1 + 120);
    *(void *)(a1 + 96) = v59;
    *(void *)(a1 + 104) = v60;
    *(void *)(a1 + 112) = v61;
    *(unsigned char *)(a1 + 120) = v58;
    sub_1B590D6F0(v62, v63, v64, v65);
  }
  return a1;
}

uint64_t assignWithTake for ScaleEffectModifier(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 == 255) {
    goto LABEL_4;
  }
  int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 == 255)
  {
    sub_1B59369A8(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  char v6 = v4 & 1;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v5 & 1;
  sub_1B590D6F0(v8, v9, v10, v6);
LABEL_6:
  int v11 = *(unsigned __int8 *)(a1 + 56);
  if (v11 == 255)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_11;
  }
  int v12 = *(unsigned __int8 *)(a2 + 56);
  if (v12 == 255)
  {
    sub_1B59369A8(a1 + 32);
    goto LABEL_9;
  }
  char v13 = v11 & 1;
  uint64_t v14 = *(void *)(a2 + 48);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 56) = v12 & 1;
  sub_1B590D6F0(v15, v16, v17, v13);
LABEL_11:
  int v18 = *(unsigned __int8 *)(a1 + 88);
  if (v18 == 255)
  {
LABEL_14:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    goto LABEL_16;
  }
  int v19 = *(unsigned __int8 *)(a2 + 88);
  if (v19 == 255)
  {
    sub_1B59369A8(a1 + 64);
    goto LABEL_14;
  }
  char v20 = v18 & 1;
  uint64_t v21 = *(void *)(a2 + 80);
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = *(void *)(a1 + 72);
  uint64_t v24 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v21;
  *(unsigned char *)(a1 + 88) = v19 & 1;
  sub_1B590D6F0(v22, v23, v24, v20);
LABEL_16:
  int v25 = *(unsigned __int8 *)(a1 + 120);
  if (v25 != 255)
  {
    int v26 = *(unsigned __int8 *)(a2 + 120);
    if (v26 != 255)
    {
      char v27 = v25 & 1;
      uint64_t v28 = *(void *)(a2 + 112);
      uint64_t v29 = *(void *)(a1 + 96);
      uint64_t v30 = *(void *)(a1 + 104);
      uint64_t v31 = *(void *)(a1 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(void *)(a1 + 112) = v28;
      *(unsigned char *)(a1 + 120) = v26 & 1;
      sub_1B590D6F0(v29, v30, v31, v27);
      return a1;
    }
    sub_1B59369A8(a1 + 96);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScaleEffectModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 121)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScaleEffectModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 121) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScaleEffectModifier()
{
  return &type metadata for ScaleEffectModifier;
}

void sub_1B595F78C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a2;
  int v6 = *(unsigned __int8 *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  uint64_t v9 = *(void *)(v3 + 48);
  int v10 = *(unsigned __int8 *)(v3 + 56);
  uint64_t v24 = *(void *)(v3 + 72);
  uint64_t v25 = *(void *)(v3 + 64);
  uint64_t v23 = *(void *)(v3 + 80);
  int v26 = *(unsigned __int8 *)(v3 + 88);
  uint64_t v21 = *(void *)(v3 + 104);
  uint64_t v22 = *(void *)(v3 + 96);
  uint64_t v20 = *(void *)(v3 + 112);
  int v27 = *(unsigned __int8 *)(v3 + 120);
  if (v6 == 255)
  {
    if (v10 == 255) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v3 + 32);
    uint64_t v13 = *(void *)(v3 + 8);
    uint64_t v12 = *(void *)(v3 + 16);
    uint64_t v14 = *(void *)v3;
    sub_1B590D634(v14, v13, v12, v6 & 1);
    sub_1B59B4324(a2, v14, v13, v12, v6 & 1);
    uint64_t v15 = v13;
    uint64_t v5 = a2;
    sub_1B590F034(v14, v15, v12, v6);
    if (v4) {
      return;
    }
    uint64_t v7 = v17;
    if (v10 == 255) {
      goto LABEL_7;
    }
  }
  sub_1B590D634(v7, v8, v9, v10 & 1);
  sub_1B59B4324(v5, v7, v8, v9, v10 & 1);
  sub_1B590F034(v7, v8, v9, v10);
  if (v4) {
    return;
  }
LABEL_7:
  unsigned __int8 v16 = v27;
  if (v26 != 255)
  {
    sub_1B590D634(v25, v24, v23, v26 & 1);
    sub_1B59B4324(v5, v25, v24, v23, v26 & 1);
    sub_1B590F034(v25, v24, v23, v26);
    if (v4) {
      return;
    }
    unsigned __int8 v16 = v27;
    if (v27 == 255) {
      goto LABEL_13;
    }
LABEL_12:
    sub_1B590D634(v22, v21, v20, v16 & 1);
    sub_1B59B4324(v5, v22, v21, v20, v16 & 1);
    sub_1B590F034(v22, v21, v20, v16);
    if (v4) {
      return;
    }
    goto LABEL_13;
  }
  if (v27 != 255) {
    goto LABEL_12;
  }
LABEL_13:
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3[3] = sub_1B5A1A748();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B5A1B438();
}

uint64_t sub_1B595FA8C(char a1)
{
  uint64_t result = 120;
  switch(a1)
  {
    case 1:
      uint64_t result = 121;
      break;
    case 2:
      uint64_t result = 0x58726F68636E61;
      break;
    case 3:
      uint64_t result = 0x59726F68636E61;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1B595FB04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1B595FB18()
{
  return sub_1B595FA8C(*v0);
}

uint64_t sub_1B595FB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5960DB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B595FB48(uint64_t a1)
{
  unint64_t v2 = sub_1B596089C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B595FB84(uint64_t a1)
{
  unint64_t v2 = sub_1B596089C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B595FBC0(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64498);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1B596089C();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  else
  {
    uint64_t v42 = a2;
    uint64_t v43 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F98);
    LOBYTE(v45) = 0;
    sub_1B59095C8((unint64_t *)&qword_1E9D63050, &qword_1E9D62F98);
    sub_1B5A1C5B8();
    uint64_t v10 = v52;
    uint64_t v11 = v53;
    LOBYTE(v45) = 1;
    uint64_t v41 = v54;
    int v71 = v55;
    sub_1B590F04C(v52, v53, v54, v55);
    sub_1B5A1C5B8();
    uint64_t v33 = v11;
    uint64_t v34 = v10;
    uint64_t v12 = v54;
    LOBYTE(v45) = 2;
    uint64_t v13 = v52;
    uint64_t v38 = v53;
    int v39 = v55;
    sub_1B590F04C(v52, v53, v54, v55);
    uint64_t v32 = 0;
    sub_1B5A1C5B8();
    uint64_t v36 = v13;
    uint64_t v37 = v12;
    LODWORD(v12) = v55;
    char v72 = 3;
    uint64_t v35 = v52;
    uint64_t v40 = v53;
    uint64_t v30 = v54;
    sub_1B590F04C(v52, v53, v54, v55);
    sub_1B5A1C5B8();
    int v31 = v12;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v5);
    uint64_t v32 = *((void *)&v68 + 1);
    uint64_t v43 = v68;
    uint64_t v29 = v69;
    HIDWORD(v28) = v70;
    uint64_t v14 = v35;
    *(void *)&long long v45 = v34;
    *((void *)&v45 + 1) = v33;
    uint64_t v15 = v40;
    *(void *)&long long v46 = v41;
    BYTE8(v46) = v71;
    uint64_t v16 = v36;
    uint64_t v17 = v38;
    *(void *)&long long v47 = v36;
    *((void *)&v47 + 1) = v38;
    *(void *)&long long v48 = v37;
    unsigned __int8 v18 = v39;
    BYTE8(v48) = v39;
    *(void *)&long long v49 = v35;
    *((void *)&v49 + 1) = v40;
    uint64_t v19 = v30;
    *(void *)&long long v50 = v30;
    BYTE8(v50) = v12;
    v51[0] = v68;
    *(void *)&v51[1] = v69;
    BYTE8(v51[1]) = v70;
    sub_1B59608F0((uint64_t)&v45, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F04C);
    sub_1B590F034(v14, v15, v19, v12);
    sub_1B590F034(v16, v17, v37, v18);
    uint64_t v21 = v33;
    uint64_t v20 = v34;
    uint64_t v22 = v41;
    unsigned __int8 v23 = v71;
    sub_1B590F034(v34, v33, v41, v71);
    long long v24 = v50;
    uint64_t v25 = v42;
    v42[4] = v49;
    v25[5] = v24;
    v25[6] = v51[0];
    *(_OWORD *)((char *)v25 + 105) = *(_OWORD *)((char *)v51 + 9);
    long long v26 = v46;
    *uint64_t v25 = v45;
    v25[1] = v26;
    long long v27 = v48;
    v25[2] = v47;
    v25[3] = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    uint64_t v52 = v20;
    uint64_t v53 = v21;
    uint64_t v54 = v22;
    unsigned __int8 v55 = v23;
    uint64_t v56 = v16;
    uint64_t v57 = v17;
    uint64_t v58 = v37;
    char v59 = v39;
    uint64_t v60 = v35;
    uint64_t v61 = v40;
    uint64_t v62 = v30;
    char v63 = v31;
    uint64_t v64 = v43;
    uint64_t v65 = v32;
    uint64_t v66 = v29;
    char v67 = BYTE4(v28);
    sub_1B59608F0((uint64_t)&v52, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F034);
  }
}

void sub_1B5960180(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

void sub_1B5960198(void *a1@<X0>, _OWORD *a2@<X8>)
{
}

uint64_t sub_1B59601BC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5960210@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5960F34();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B596023C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5960294(uint64_t a1)
{
  unint64_t v2 = sub_1B5960848();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59602D0(uint64_t a1)
{
  unint64_t v2 = sub_1B5960848();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B596030C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64488);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5960848();
  sub_1B5A1C838();
  if (!v2)
  {
    sub_1B5904A34();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5960488@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  long long v24 = a3;
  uint64_t v32 = sub_1B5A1B948();
  uint64_t v25 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v3 + 8);
  uint64_t v11 = *(void *)(v3 + 16);
  unsigned __int8 v12 = *(unsigned char *)(v3 + 24);
  uint64_t v28 = *(void *)v3;
  uint64_t v9 = v28;
  uint64_t v29 = v10;
  uint64_t v30 = v11;
  unsigned __int8 v31 = v12;
  sub_1B5904B60(v28, v10, v11, v12);
  StringResolvable.resolved(with:)(a2);
  if (v4) {

  }
  sub_1B5904A88(v9, v10, v11, v12);
  uint64_t v13 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  uint64_t v14 = a1[4];
  v23[1] = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = (unsigned int *)MEMORY[0x1E4F3EC60];
  uint64_t v16 = (unsigned int *)MEMORY[0x1E4F3EC48];
  if (v13 != 2) {
    uint64_t v16 = (unsigned int *)MEMORY[0x1E4F3EC70];
  }
  if (v13) {
    uint64_t v15 = v16;
  }
  uint64_t v17 = v25;
  uint64_t v18 = v32;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v8, *v15, v32);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64478);
  uint64_t v19 = sub_1B5A1A748();
  uint64_t v20 = v24;
  v24[3] = v19;
  uint64_t v21 = sub_1B59095C8(&qword_1E9D64480, &qword_1E9D64478);
  uint64_t v26 = v14;
  uint64_t v27 = v21;
  v20[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v20);
  sub_1B5A1B3C8();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v8, v18);
}

uint64_t sub_1B5960720@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5960488(a1, a2, a3);
}

uint64_t sub_1B5960738@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B596030C(a1, a2);
}

unint64_t sub_1B5960750(uint64_t a1)
{
  unint64_t result = sub_1B5960778();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5960778()
{
  unint64_t result = qword_1E9D64468;
  if (!qword_1E9D64468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64468);
  }
  return result;
}

unint64_t sub_1B59607CC(uint64_t a1)
{
  unint64_t result = sub_1B59607F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59607F4()
{
  unint64_t result = qword_1E9D64470;
  if (!qword_1E9D64470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64470);
  }
  return result;
}

unint64_t sub_1B5960848()
{
  unint64_t result = qword_1E9D64490;
  if (!qword_1E9D64490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64490);
  }
  return result;
}

unint64_t sub_1B596089C()
{
  unint64_t result = qword_1E9D644A0;
  if (!qword_1E9D644A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644A0);
  }
  return result;
}

uint64_t sub_1B59608F0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 96);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 88);
  unsigned int v13 = *(unsigned __int8 *)(a1 + 120);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  a2(v4, v5, v6, v10);
  a2(v7, v8, v9, v11);
  a2(v16, v15, v14, v13);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ScaleEffectModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5960A98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScaleEffectModifier.CodingKeys()
{
  return &type metadata for ScaleEffectModifier.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ImageScaleModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5960B6CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageScaleModifier.CodingKeys()
{
  return &type metadata for ImageScaleModifier.CodingKeys;
}

unint64_t sub_1B5960BA8()
{
  unint64_t result = qword_1E9D644A8;
  if (!qword_1E9D644A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644A8);
  }
  return result;
}

unint64_t sub_1B5960C00()
{
  unint64_t result = qword_1E9D644B0;
  if (!qword_1E9D644B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644B0);
  }
  return result;
}

unint64_t sub_1B5960C58()
{
  unint64_t result = qword_1E9D644B8;
  if (!qword_1E9D644B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644B8);
  }
  return result;
}

unint64_t sub_1B5960CB0()
{
  unint64_t result = qword_1E9D644C0;
  if (!qword_1E9D644C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644C0);
  }
  return result;
}

unint64_t sub_1B5960D08()
{
  unint64_t result = qword_1E9D644C8;
  if (!qword_1E9D644C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644C8);
  }
  return result;
}

unint64_t sub_1B5960D60()
{
  unint64_t result = qword_1E9D644D0;
  if (!qword_1E9D644D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644D0);
  }
  return result;
}

uint64_t sub_1B5960DB4(uint64_t a1, uint64_t a2)
{
  if (a1 == 120 && a2 == 0xE100000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 121 && a2 == 0xE100000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x58726F68636E61 && a2 == 0xE700000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x59726F68636E61 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1B5960F34()
{
  return 0x656C616373;
}

void destroy for SwiftUIAnimation(uint64_t a1)
{
  sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  int v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 != 255)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    sub_1B590D6F0(v3, v4, v5, v2 & 1);
  }
}

uint64_t initializeWithCopy for SwiftUIAnimation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  else
  {
    char v9 = v8 & 1;
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 48);
    sub_1B590D634(v10, v11, v12, v8 & 1);
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 56) = v9;
  }
  return a1;
}

uint64_t assignWithCopy for SwiftUIAnimation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B5904A88(v8, v9, v10, v11);
  uint64_t v12 = (long long *)(a1 + 32);
  unsigned int v13 = (long long *)(a2 + 32);
  int v14 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v14 == 255)
    {
      long long v16 = *v13;
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
      long long *v12 = v16;
    }
    else
    {
      char v25 = v14 & 1;
      uint64_t v26 = *(void *)(a2 + 32);
      uint64_t v27 = *(void *)(a2 + 40);
      uint64_t v28 = *(void *)(a2 + 48);
      sub_1B590D634(v26, v27, v28, v14 & 1);
      *(void *)(a1 + 32) = v26;
      *(void *)(a1 + 40) = v27;
      *(void *)(a1 + 48) = v28;
      *(unsigned char *)(a1 + 56) = v25;
    }
  }
  else if (v14 == 255)
  {
    sub_1B59369A8(a1 + 32);
    long long v15 = *(_OWORD *)(a2 + 41);
    long long *v12 = *v13;
    *(_OWORD *)(a1 + 41) = v15;
  }
  else
  {
    char v17 = v14 & 1;
    uint64_t v18 = *(void *)(a2 + 32);
    uint64_t v19 = *(void *)(a2 + 40);
    uint64_t v20 = *(void *)(a2 + 48);
    sub_1B590D634(v18, v19, v20, v14 & 1);
    uint64_t v21 = *(void *)(a1 + 32);
    uint64_t v22 = *(void *)(a1 + 40);
    uint64_t v23 = *(void *)(a1 + 48);
    char v24 = *(unsigned char *)(a1 + 56);
    *(void *)(a1 + 32) = v18;
    *(void *)(a1 + 40) = v19;
    *(void *)(a1 + 48) = v20;
    *(unsigned char *)(a1 + 56) = v17;
    sub_1B590D6F0(v21, v22, v23, v24);
  }
  return a1;
}

uint64_t assignWithTake for SwiftUIAnimation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5904A88(v6, v7, v8, v9);
  int v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 != 255)
  {
    int v11 = *(unsigned __int8 *)(a2 + 56);
    if (v11 != 255)
    {
      char v12 = v10 & 1;
      uint64_t v13 = *(void *)(a2 + 48);
      uint64_t v14 = *(void *)(a1 + 32);
      uint64_t v15 = *(void *)(a1 + 40);
      uint64_t v16 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = v13;
      *(unsigned char *)(a1 + 56) = v11 & 1;
      sub_1B590D6F0(v14, v15, v16, v12);
      return a1;
    }
    sub_1B59369A8(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for SwiftUIAnimation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SwiftUIAnimation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SwiftUIAnimation()
{
  return &type metadata for SwiftUIAnimation;
}

void sub_1B5961308(uint64_t a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  unsigned __int8 v7 = *(unsigned char *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + 40);
  uint64_t v14 = *(void *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 48);
  int v8 = *(unsigned __int8 *)(v1 + 56);
  sub_1B5904B60(*(void *)v1, v5, v6, v7);
  StringResolvable.resolved(with:)(a1);
  if (v2)
  {
    sub_1B5904A88(v4, v5, v6, v7);
  }
  else
  {
    sub_1B5904A88(v4, v5, v6, v7);
    char v9 = sub_1B5961960();
    if (v9 == 5)
    {
      sub_1B59619AC();
      swift_allocError();
      *(_OWORD *)uint64_t v10 = 0u;
      *(_OWORD *)(v10 + 16) = 0u;
      *(unsigned char *)(v10 + 32) = 5;
      swift_willThrow();
    }
    else
    {
      char v11 = v9;
      sub_1B590D634(v14, v13, v12, v8 & 1);
      sub_1B59B4324(a1, v14, v13, v12, v8 & 1);
      sub_1B590F034(v14, v13, v12, v8);
      switch(v11)
      {
        case 1:
          if (v8 == 255) {
            sub_1B5A1BCA8();
          }
          else {
            sub_1B5A1BC98();
          }
          break;
        case 2:
          if (v8 == 255) {
            sub_1B5A1BC88();
          }
          else {
            sub_1B5A1BC78();
          }
          break;
        case 3:
          if (v8 == 255) {
            sub_1B5A1BCD8();
          }
          else {
            sub_1B5A1BCC8();
          }
          break;
        case 4:
          if (v8 == 255) {
            sub_1B5A1BCF8();
          }
          else {
            sub_1B5A1BCE8();
          }
          break;
        default:
          sub_1B5A1BCB8();
          break;
      }
    }
  }
}

uint64_t sub_1B5961568(char a1)
{
  if (a1) {
    return 0x6E6F697461727564;
  }
  else {
    return 0x6F6974616D696E61;
  }
}

void sub_1B59615AC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D644E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5961A00();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v37 = 0;
    sub_1B5904A34();
    sub_1B5A1C5D8();
    uint64_t v9 = v32;
    uint64_t v29 = v33;
    uint64_t v10 = v34;
    int v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F98);
    char v37 = 1;
    uint64_t v30 = v9;
    uint64_t v31 = v10;
    uint64_t v11 = v9;
    uint64_t v12 = v29;
    uint64_t v13 = v10;
    LOBYTE(v10) = v36;
    sub_1B5904B60(v11, v29, v13, v36);
    sub_1B5938654();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v14 = v32;
    uint64_t v25 = v32;
    uint64_t v26 = v33;
    uint64_t v27 = v34;
    unsigned __int8 v15 = v35;
    int v28 = v35;
    uint64_t v16 = v12;
    uint64_t v17 = v30;
    unsigned __int8 v18 = v10;
    uint64_t v19 = v31;
    sub_1B5904B60(v30, v16, v31, v18);
    uint64_t v20 = v14;
    uint64_t v21 = v26;
    sub_1B590F04C(v20, v26, v27, v15);
    sub_1B5904A88(v17, v16, v19, v18);
    *(void *)a2 = v17;
    *(void *)(a2 + 8) = v16;
    *(void *)(a2 + 16) = v19;
    *(unsigned char *)(a2 + 24) = v18;
    uint64_t v22 = v25;
    *(void *)(a2 + 32) = v25;
    *(void *)(a2 + 40) = v21;
    uint64_t v23 = v27;
    *(void *)(a2 + 48) = v27;
    *(unsigned char *)(a2 + 56) = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B5904A88(v17, v16, v19, v18);
    sub_1B590F034(v22, v26, v23, v28);
  }
}

uint64_t sub_1B59618A0()
{
  return sub_1B5961568(*v0);
}

uint64_t sub_1B59618A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5961C60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B59618D0(uint64_t a1)
{
  unint64_t v2 = sub_1B5961A00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B596190C(uint64_t a1)
{
  unint64_t v2 = sub_1B5961A00();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5961948(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1B5961960()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B59619AC()
{
  unint64_t result = qword_1E9D644D8;
  if (!qword_1E9D644D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644D8);
  }
  return result;
}

unint64_t sub_1B5961A00()
{
  unint64_t result = qword_1E9D644E8;
  if (!qword_1E9D644E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SwiftUIAnimation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5961B20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SwiftUIAnimation.CodingKeys()
{
  return &type metadata for SwiftUIAnimation.CodingKeys;
}

unint64_t sub_1B5961B5C()
{
  unint64_t result = qword_1E9D644F0;
  if (!qword_1E9D644F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644F0);
  }
  return result;
}

unint64_t sub_1B5961BB4()
{
  unint64_t result = qword_1E9D644F8;
  if (!qword_1E9D644F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D644F8);
  }
  return result;
}

unint64_t sub_1B5961C0C()
{
  unint64_t result = qword_1E9D64500;
  if (!qword_1E9D64500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64500);
  }
  return result;
}

uint64_t sub_1B5961C60(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6F6974616D696E61 && a2 == 0xED0000657079546ELL;
  if (v3 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B5961D64@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B0);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5965A38();
  sub_1B5A1C838();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    sub_1B5908FC0((uint64_t)v6, &qword_1E9D645B0);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    LOBYTE(v23[0]) = 0;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v23[0]) = 0;
      uint64_t v13 = sub_1B5A1C5C8();
      uint64_t v14 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645D8);
      LOBYTE(v22) = 1;
      sub_1B5965AE0(&qword_1E9D645E0, &qword_1E9D645D8);
      sub_1B5A1C5B8();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v15 = v23[0];
      char v16 = 1;
      goto LABEL_8;
    }
    LOBYTE(v23[0]) = 2;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v23[0]) = 2;
      uint64_t v12 = sub_1B5A1C5C8();
      unint64_t v19 = v18;
      sub_1B59B83CC((unint64_t)v23, 0xFuLL, v12, v18);
      uint64_t v13 = v23[0];
      uint64_t v14 = v23[1];
      uint64_t v15 = v23[2];
      v21[1] = v19;
      char v16 = v24;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  sub_1B5908BE8(&v22, (uint64_t)v23);
  __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_1B5A1C6C8();
  uint64_t v13 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  char v16 = 0;
LABEL_8:
  uint64_t v17 = v25;
  *uint64_t v25 = v13;
  v17[1] = v14;
  v17[2] = v15;
  *((unsigned char *)v17 + 24) = v16;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5962228@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B0);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5965A38();
  sub_1B5A1C838();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    sub_1B5908FC0((uint64_t)v6, &qword_1E9D645B0);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    LOBYTE(v23[0]) = 0;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v23[0]) = 0;
      uint64_t v13 = sub_1B5A1C5C8();
      uint64_t v14 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645E8);
      LOBYTE(v22) = 1;
      sub_1B5965AE0(&qword_1E9D645F0, &qword_1E9D645E8);
      sub_1B5A1C5B8();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v15 = v23[0];
      char v16 = 1;
      goto LABEL_8;
    }
    LOBYTE(v23[0]) = 2;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v23[0]) = 2;
      uint64_t v12 = sub_1B5A1C5C8();
      unint64_t v19 = v18;
      sub_1B59B91F4((uint64_t)v23, 0xFuLL, v12, v18);
      uint64_t v13 = v23[0];
      uint64_t v14 = v23[1];
      uint64_t v15 = v23[2];
      v21[1] = v19;
      char v16 = v24;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  sub_1B5908BE8(&v22, (uint64_t)v23);
  __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_1B5A1C6C8();
  uint64_t v13 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  char v16 = 0;
LABEL_8:
  uint64_t v17 = v25;
  *uint64_t v25 = v13;
  v17[1] = v14;
  v17[2] = v15;
  *((unsigned char *)v17 + 24) = v16;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59626EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B0);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5965A38();
  sub_1B5A1C838();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    sub_1B5908FC0((uint64_t)v6, &qword_1E9D645B0);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    LOBYTE(v23[0]) = 0;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v23[0]) = 0;
      uint64_t v14 = sub_1B5A1C5C8();
      uint64_t v13 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645C8);
      LOBYTE(v22) = 1;
      sub_1B5965AE0(&qword_1E9D645D0, &qword_1E9D645C8);
      sub_1B5A1C5B8();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v15 = v23[0];
      char v16 = 1;
      goto LABEL_8;
    }
    LOBYTE(v23[0]) = 2;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v23[0]) = 2;
      uint64_t v12 = sub_1B5A1C5C8();
      unint64_t v19 = v18;
      sub_1B59B9174((uint64_t)v23, 0xFuLL, v12, v18);
      uint64_t v14 = v23[0];
      uint64_t v13 = v23[1];
      uint64_t v15 = v23[2];
      v21[1] = v19;
      char v16 = v24;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  sub_1B5908BE8(&v22, (uint64_t)v23);
  __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_1B5A1C6C8();
  uint64_t v13 = *((void *)&v22 + 1);
  uint64_t v14 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v15 = 0;
  char v16 = 0;
LABEL_8:
  uint64_t v17 = v25;
  *uint64_t v25 = v14;
  v17[1] = v13;
  v17[2] = v15;
  *((unsigned char *)v17 + 24) = v16;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5962BAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B0);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5965A38();
  sub_1B5A1C838();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    sub_1B5908FC0((uint64_t)v6, &qword_1E9D645B0);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    LOBYTE(v23[0]) = 0;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v23[0]) = 0;
      uint64_t v13 = sub_1B5A1C5C8();
      uint64_t v14 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64600);
      LOBYTE(v22) = 1;
      sub_1B5965AE0(&qword_1E9D64608, &qword_1E9D64600);
      sub_1B5A1C5B8();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v15 = v23[0];
      char v16 = 1;
      goto LABEL_8;
    }
    LOBYTE(v23[0]) = 2;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v23[0]) = 2;
      uint64_t v12 = sub_1B5A1C5C8();
      unint64_t v19 = v18;
      sub_1B59B9274((uint64_t)v23, 0xFuLL, v12, v18);
      uint64_t v13 = v23[0];
      uint64_t v14 = v23[1];
      uint64_t v15 = v23[2];
      v21[1] = v19;
      char v16 = v24;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  sub_1B5908BE8(&v22, (uint64_t)v23);
  __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_1B5965A8C();
  sub_1B5A1C6C8();
  uint64_t v13 = v22;
  uint64_t v14 = BYTE8(v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v15 = 0;
  char v16 = 0;
LABEL_8:
  uint64_t v17 = v25;
  *uint64_t v25 = v13;
  v17[1] = v14;
  v17[2] = v15;
  *((unsigned char *)v17 + 24) = v16;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5963070@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B0);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5965A38();
  sub_1B5A1C838();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    sub_1B5908FC0((uint64_t)v6, &qword_1E9D645B0);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    LOBYTE(v23[0]) = 0;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v23[0]) = 0;
      uint64_t v13 = sub_1B5A1C5C8();
      uint64_t v14 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64610);
      LOBYTE(v22) = 1;
      sub_1B5965AE0(&qword_1E9D64618, &qword_1E9D64610);
      sub_1B5A1C5B8();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v15 = v23[0];
      char v16 = 1;
      goto LABEL_8;
    }
    LOBYTE(v23[0]) = 2;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v23[0]) = 2;
      uint64_t v12 = sub_1B5A1C5C8();
      unint64_t v19 = v18;
      sub_1B59B92F4((uint64_t)v23, 0xFuLL, v12, v18);
      uint64_t v13 = v23[0];
      uint64_t v14 = v23[1];
      uint64_t v15 = v23[2];
      v21[1] = v19;
      char v16 = v24;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  sub_1B5908BE8(&v22, (uint64_t)v23);
  __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_1B5958CA4();
  sub_1B5A1C6C8();
  uint64_t v13 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  char v16 = 0;
LABEL_8:
  uint64_t v17 = v25;
  *uint64_t v25 = v13;
  v17[1] = v14;
  v17[2] = v15;
  *((unsigned char *)v17 + 24) = v16;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5963534(uint64_t a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  int v6 = *(char *)(v1 + 24);
  if (v6 < 0)
  {
    char v21 = *(void *)(v1 + 8);
    swift_retain();
    swift_retain();
    sub_1B5963D8C(a1, (uint64_t)&v19);
    uint64_t v15 = v19;
    char v16 = v20;
    sub_1B5963D8C(a1, (uint64_t)&v13);
    swift_release();
    swift_release();
    uint64_t v11 = v13;
    char v12 = v14;
    sub_1B595E520((uint64_t)&v15, (uint64_t)&v11, (uint64_t)&v17, v9, v10);
    if ((_BYTE)v18) {
      return v17;
    }
    else {
      *(double *)&uint64_t result = (double)v17;
    }
  }
  else
  {
    sub_1B590D634(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), v6 & 1);
    double v7 = sub_1B59B4324(a1, v4, v3, v5, v6 & 1);
    sub_1B596536C(v4, v3, v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
    *(double *)&uint64_t result = v7;
  }
  return result;
}

void sub_1B5963948(uint64_t a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  int v6 = *(char *)(v1 + 24);
  if ((v6 & 0x80000000) == 0)
  {
    sub_1B590D634(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), v6 & 1);
    sub_1B59B3B00(a1, v4, v3, v5, v6 & 1);
    sub_1B596536C(v4, v3, v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
    return;
  }
  char v19 = *(void *)(v1 + 8);
  swift_retain();
  swift_retain();
  sub_1B5963D8C(a1, (uint64_t)&v17);
  uint64_t v13 = v17;
  char v14 = v18;
  sub_1B5963D8C(a1, (uint64_t)&v11);
  swift_release();
  swift_release();
  uint64_t v9 = v11;
  char v10 = v12;
  sub_1B595E520((uint64_t)&v13, (uint64_t)&v9, (uint64_t)&v15, v7, v8);
  if (v16 == 1)
  {
    if ((~*(void *)&v15 & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18) {
          return;
        }
LABEL_12:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
}

void sub_1B5963D8C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *v2;
  if (*v2 < 0)
  {
    uint64_t v11 = v6 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v12 = *(void *)(v11 + 16);
    char v23 = *(unsigned char *)(v11 + 24);
    uint64_t v19 = v12;
    swift_retain();
    swift_retain();
    sub_1B5963D8C(&v21, a1);
    if (v3)
    {
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v19 = v21;
      char v20 = v22;
      sub_1B5963D8C(&v17, a1);
      swift_release();
      swift_release();
      uint64_t v15 = v17;
      char v16 = v18;
      sub_1B595E520((uint64_t)&v19, (uint64_t)&v15, a2, v13, v14);
    }
  }
  else
  {
    uint64_t v7 = *(void *)(v6 + 16);
    uint64_t v8 = *(void *)(v6 + 24);
    uint64_t v9 = *(void *)(v6 + 32);
    char v10 = *(unsigned char *)(v6 + 40);
    sub_1B590D634(v7, v8, v9, v10);
    sub_1B59B3904(a1, v7, v8, v9, v10, a2);
    sub_1B590D6F0(v7, v8, v9, v10);
  }
}

uint64_t sub_1B5963F00(char a1)
{
  return qword_1B5A25088[a1];
}

uint64_t sub_1B5963F20(char *a1, char *a2)
{
  return sub_1B59EE370(*a1, *a2);
}

uint64_t sub_1B5963F2C()
{
  return sub_1B59F1008();
}

uint64_t sub_1B5963F34()
{
  return sub_1B59F3B54();
}

uint64_t sub_1B5963F3C()
{
  return sub_1B59F5748();
}

uint64_t sub_1B5963F44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5963F7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5963F00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5963FA8()
{
  return sub_1B5963F00(*v0);
}

uint64_t sub_1B5963FB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5963FE0(uint64_t a1)
{
  unint64_t v2 = sub_1B5964414();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B596401C(uint64_t a1)
{
  unint64_t v2 = sub_1B5964414();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t NumericResolvable.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64508);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64510);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v20[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5964414();
  sub_1B5A1C838();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    sub_1B5908FC0((uint64_t)v6, &qword_1E9D64508);
LABEL_6:
    sub_1B590CA38((uint64_t)a1, (uint64_t)v20);
    sub_1B5962BAC(v20, (uint64_t *)&v21);
    long long v19 = v21;
    uint64_t v11 = v22;
    char v12 = v23;
    unint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v19;
    *(void *)(v18 + 32) = v11;
    *(unsigned char *)(v18 + 40) = v12;
    goto LABEL_7;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  LOBYTE(v20[0]) = 1;
  if ((sub_1B5A1C5F8() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_6;
  }
  LOBYTE(v21) = 0;
  sub_1B59644A8();
  sub_1B5A1C5D8();
  uint64_t v14 = v20[0];
  LOBYTE(v21) = 1;
  sub_1B59644FC();
  sub_1B5A1C5D8();
  char v15 = v20[0];
  LOBYTE(v21) = 2;
  sub_1B5A1C5D8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v16 = v20[0];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  *(unsigned char *)(v17 + 24) = v15;
  *(void *)(v17 + 32) = v16;
  unint64_t v18 = v17 | 0x8000000000000000;
LABEL_7:
  *uint64_t v24 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1B5964414()
{
  unint64_t result = qword_1E9D64518;
  if (!qword_1E9D64518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64518);
  }
  return result;
}

uint64_t sub_1B5964468()
{
  sub_1B590D6F0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return MEMORY[0x1F4186498](v0, 41, 7);
}

unint64_t sub_1B59644A8()
{
  unint64_t result = qword_1E9D64520;
  if (!qword_1E9D64520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64520);
  }
  return result;
}

unint64_t sub_1B59644FC()
{
  unint64_t result = qword_1E9D64528;
  if (!qword_1E9D64528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64528);
  }
  return result;
}

uint64_t sub_1B5964550()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B5964598@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return NumericResolvable.init(from:)(a1, a2);
}

uint64_t sub_1B59645B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B59645E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5964618(uint64_t a1)
{
  unint64_t v2 = sub_1B5964A0C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5964654(uint64_t a1)
{
  unint64_t v2 = sub_1B5964A0C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DoubleResolvable.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64530);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64538);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5964A0C();
  sub_1B5A1C838();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    sub_1B5908FC0((uint64_t)v6, &qword_1E9D64530);
LABEL_6:
    sub_1B590CA38((uint64_t)a1, (uint64_t)v18);
    sub_1B5962228(v18, v19);
    uint64_t v13 = v19[0];
    uint64_t v14 = v19[1];
    uint64_t v15 = v19[2];
    char v16 = v20;
    goto LABEL_7;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v18[0] = 1;
  if ((sub_1B5A1C5F8() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_6;
  }
  LOBYTE(v19[0]) = 0;
  sub_1B59644A8();
  sub_1B5A1C5D8();
  uint64_t v13 = *(void *)v18;
  LOBYTE(v19[0]) = 1;
  sub_1B59644FC();
  sub_1B5A1C5D8();
  uint64_t v14 = v18[0];
  LOBYTE(v19[0]) = 2;
  sub_1B5A1C5D8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = *(void *)v18;
  char v16 = 0x80;
LABEL_7:
  uint64_t v11 = v21;
  uint64_t *v21 = v13;
  v11[1] = v14;
  void v11[2] = v15;
  *((unsigned char *)v11 + 24) = v16;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1B5964A0C()
{
  unint64_t result = qword_1E9D64540;
  if (!qword_1E9D64540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64540);
  }
  return result;
}

uint64_t DoubleResolvable.description.getter()
{
  return sub_1B5964F44(&qword_1E9D62F98);
}

uint64_t sub_1B5964A6C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DoubleResolvable.init(from:)(a1, a2);
}

uint64_t sub_1B5964A88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5964AC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5964AF0(uint64_t a1)
{
  unint64_t v2 = sub_1B5964EE4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5964B2C(uint64_t a1)
{
  unint64_t v2 = sub_1B5964EE4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IntResolvable.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64548);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64550);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5964EE4();
  sub_1B5A1C838();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    sub_1B5908FC0((uint64_t)v6, &qword_1E9D64548);
LABEL_6:
    sub_1B590CA38((uint64_t)a1, (uint64_t)v18);
    sub_1B5961D64(v18, v19);
    uint64_t v13 = v19[0];
    uint64_t v14 = v19[1];
    uint64_t v15 = v19[2];
    char v16 = v20;
    goto LABEL_7;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v18[0] = 1;
  if ((sub_1B5A1C5F8() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_6;
  }
  LOBYTE(v19[0]) = 0;
  sub_1B59644A8();
  sub_1B5A1C5D8();
  uint64_t v13 = *(void *)v18;
  LOBYTE(v19[0]) = 1;
  sub_1B59644FC();
  sub_1B5A1C5D8();
  uint64_t v14 = v18[0];
  LOBYTE(v19[0]) = 2;
  sub_1B5A1C5D8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = *(void *)v18;
  char v16 = 0x80;
LABEL_7:
  uint64_t v11 = v21;
  uint64_t *v21 = v13;
  v11[1] = v14;
  void v11[2] = v15;
  *((unsigned char *)v11 + 24) = v16;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1B5964EE4()
{
  unint64_t result = qword_1E9D64558;
  if (!qword_1E9D64558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64558);
  }
  return result;
}

uint64_t IntResolvable.description.getter()
{
  return sub_1B5964F44(&qword_1E9D64560);
}

uint64_t sub_1B5964F44(uint64_t *a1)
{
  if (*(char *)(v1 + 24) < 0)
  {
    swift_retain();
    swift_retain();
    sub_1B5A1C4C8();
    sub_1B5A1BFA8();
    sub_1B5A1C4C8();
    sub_1B5A1BFA8();
    sub_1B5A1C4C8();
    swift_release();
    swift_release();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a1);
    sub_1B5A1C4C8();
  }
  return 0;
}

uint64_t sub_1B596509C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IntResolvable.init(from:)(a1, a2);
}

void *initializeBufferWithCopyOfBuffer for NumericResolvable(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for NumericResolvable()
{
  return swift_release();
}

void *assignWithCopy for NumericResolvable(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for NumericResolvable(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NumericResolvable(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for NumericResolvable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)unint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B5965220(void *a1)
{
  return *a1 >> 63;
}

void *sub_1B596522C(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1B596523C(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for NumericResolvable()
{
  return &type metadata for NumericResolvable;
}

uint64_t destroy for IntResolvable(uint64_t a1)
{
  return sub_1B596536C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
}

uint64_t initializeWithCopy for IntResolvable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B59653D8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
}

uint64_t assignWithCopy for IntResolvable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B596543C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
}

uint64_t assignWithTake for IntResolvable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B59654B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
}

ValueMetadata *type metadata accessor for DoubleResolvable()
{
  return &type metadata for DoubleResolvable;
}

uint64_t sub_1B5965310(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a4 < 0)
  {
    swift_retain();
    return swift_retain();
  }
  else
  {
    uint64_t v6 = a4 & 1;
    return a5(a1, a2, a3, v6);
  }
}

uint64_t sub_1B596536C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a4 < 0)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v5 = a4 & 1;
    return a5(a1, a2, a3, v5);
  }
}

uint64_t sub_1B59653D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  sub_1B5965310(*(void *)a2, v6, v7, v8, a4);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  return a1;
}

uint64_t sub_1B596543C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  char v10 = *(unsigned char *)(a2 + 24);
  sub_1B5965310(*(void *)a2, v8, v9, v10, a4);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v9;
  char v14 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v10;
  sub_1B596536C(v11, v12, v13, v14, a5);
  return a1;
}

uint64_t sub_1B59654B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  char v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B596536C(v8, v10, v9, v11, a4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListSectionSpacingModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 24) & 0x7E | (*(unsigned __int8 *)(a1 + 24) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ListSectionSpacingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1B59655B8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 7;
}

uint64_t sub_1B59655C4(uint64_t result)
{
  *(unsigned char *)(result + 24) &= ~0x80u;
  return result;
}

uint64_t sub_1B59655D4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for IntResolvable()
{
  return &type metadata for IntResolvable;
}

ValueMetadata *type metadata accessor for IntResolvable.CodingKeys()
{
  return &type metadata for IntResolvable.CodingKeys;
}

ValueMetadata *type metadata accessor for DoubleResolvable.CodingKeys()
{
  return &type metadata for DoubleResolvable.CodingKeys;
}

unsigned char *_s6LiftUI13IntResolvableO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59656E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NumericResolvable.CodingKeys()
{
  return &type metadata for NumericResolvable.CodingKeys;
}

unint64_t sub_1B5965724()
{
  unint64_t result = qword_1E9D64568;
  if (!qword_1E9D64568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64568);
  }
  return result;
}

unint64_t sub_1B596577C()
{
  unint64_t result = qword_1E9D64570;
  if (!qword_1E9D64570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64570);
  }
  return result;
}

unint64_t sub_1B59657D4()
{
  unint64_t result = qword_1E9D64578;
  if (!qword_1E9D64578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64578);
  }
  return result;
}

unint64_t sub_1B596582C()
{
  unint64_t result = qword_1E9D64580;
  if (!qword_1E9D64580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64580);
  }
  return result;
}

unint64_t sub_1B5965884()
{
  unint64_t result = qword_1E9D64588;
  if (!qword_1E9D64588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64588);
  }
  return result;
}

unint64_t sub_1B59658DC()
{
  unint64_t result = qword_1E9D64590;
  if (!qword_1E9D64590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64590);
  }
  return result;
}

unint64_t sub_1B5965934()
{
  unint64_t result = qword_1E9D64598;
  if (!qword_1E9D64598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64598);
  }
  return result;
}

unint64_t sub_1B596598C()
{
  unint64_t result = qword_1E9D645A0;
  if (!qword_1E9D645A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D645A0);
  }
  return result;
}

unint64_t sub_1B59659E4()
{
  unint64_t result = qword_1E9D645A8;
  if (!qword_1E9D645A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D645A8);
  }
  return result;
}

unint64_t sub_1B5965A38()
{
  unint64_t result = qword_1E9D645C0;
  if (!qword_1E9D645C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D645C0);
  }
  return result;
}

unint64_t sub_1B5965A8C()
{
  unint64_t result = qword_1E9D645F8;
  if (!qword_1E9D645F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D645F8);
  }
  return result;
}

uint64_t sub_1B5965AE0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for AlignmentGuideModifier(uint64_t a1)
{
  sub_1B591DF0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_1B5904A88(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AlignmentGuideModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  unsigned __int8 v11 = *(unsigned char *)(a2 + 56);
  sub_1B5904B60(v8, v9, v10, v11);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  uint64_t v12 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AlignmentGuideModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  char v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B591DF0C(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  unsigned __int8 v15 = *(unsigned char *)(a2 + 56);
  sub_1B5904B60(v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  unsigned __int8 v19 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v15;
  sub_1B5904A88(v16, v17, v18, v19);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AlignmentGuideModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  char v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B591DF0C(v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v10;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B5904A88(v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AlignmentGuideModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AlignmentGuideModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlignmentGuideModifier()
{
  return &type metadata for AlignmentGuideModifier;
}

uint64_t sub_1B5965E34(char a1)
{
  if (!a1) {
    return 0x56657475706D6F63;
  }
  if (a1 == 1) {
    return 103;
  }
  return 0x6F69736E656D6964;
}

uint64_t sub_1B5965E94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B59ED75C(*a1, *a2);
}

uint64_t sub_1B5965EA0()
{
  return sub_1B59F1074();
}

uint64_t sub_1B5965EA8()
{
  return sub_1B59F3444();
}

uint64_t sub_1B5965EB0()
{
  return sub_1B59F6B34();
}

uint64_t sub_1B5965EB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5967288();
  *a1 = result;
  return result;
}

uint64_t sub_1B5965EE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5965E34(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5965F14()
{
  return sub_1B5965E34(*v0);
}

uint64_t sub_1B5965F1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5967288();
  *a1 = result;
  return result;
}

uint64_t sub_1B5965F44(uint64_t a1)
{
  unint64_t v2 = sub_1B5967028();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5965F80(uint64_t a1)
{
  unint64_t v2 = sub_1B5967028();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5965FBC(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64638);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5967028();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v43 = 0;
    sub_1B59358E8();
    sub_1B5A1C5D8();
    unsigned __int8 v35 = a2;
    uint64_t v9 = v39;
    uint64_t v10 = v40;
    int v11 = v41;
    char v43 = 1;
    uint64_t v37 = v38;
    sub_1B591DF88(v38, v39, v40, v41);
    sub_1B5904A34();
    sub_1B5A1C5D8();
    int v42 = v11;
    uint64_t v34 = v10;
    uint64_t v13 = v37;
    uint64_t v12 = v38;
    unsigned __int8 v14 = v41;
    LOBYTE(v38) = 2;
    uint64_t v36 = v12;
    uint64_t v32 = v40;
    uint64_t v33 = v39;
    sub_1B5904B60(v12, v39, v40, v41);
    uint64_t v31 = 0;
    uint64_t v15 = sub_1B5A1C598();
    uint64_t v17 = 0x6F69736E656D6964;
    if (v16) {
      uint64_t v17 = v15;
    }
    uint64_t v31 = v17;
    if (v16) {
      unint64_t v18 = v16;
    }
    else {
      unint64_t v18 = 0xEA0000000000736ELL;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v19 = v9;
    char v20 = v42;
    sub_1B591DF88(v13, v9, v34, v42);
    uint64_t v21 = v36;
    uint64_t v23 = v32;
    uint64_t v22 = v33;
    sub_1B5904B60(v36, v33, v32, v14);
    swift_bridgeObjectRetain();
    sub_1B5904A88(v21, v22, v23, v14);
    uint64_t v24 = v37;
    uint64_t v25 = v34;
    sub_1B591DF0C(v37, v19, v34, v20);
    uint64_t v26 = v35;
    *unsigned __int8 v35 = v24;
    v26[1] = v19;
    _OWORD v26[2] = v25;
    *((unsigned char *)v26 + 24) = v20;
    uint64_t v27 = v36;
    v26[4] = v36;
    v26[5] = v22;
    uint64_t v28 = v31;
    uint64_t v29 = v32;
    v26[6] = v32;
    *((unsigned char *)v26 + 56) = v14;
    v26[8] = v28;
    v26[9] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B591DF0C(v24, v19, v34, v20);
    sub_1B5904A88(v27, v33, v29, v14);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B59663B0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  long long v8 = v3[3];
  long long v33 = v3[2];
  long long v34 = v8;
  long long v35 = v3[4];
  long long v9 = v3[1];
  long long v31 = *v3;
  long long v32 = v9;
  sub_1B5951704((uint64_t)&v33, (uint64_t)v36);
  sub_1B5951704((uint64_t)v36, (uint64_t)v28);
  sub_1B5951760((uint64_t)v36);
  StringResolvable.resolved(with:)(a2);
  if (v4) {
    return sub_1B5951794((uint64_t)v36);
  }
  sub_1B5951794((uint64_t)v36);
  char v11 = sub_1B59E17E0();
  uint64_t v37 = a3;
  switch(v11)
  {
    case 1:
      uint64_t v12 = sub_1B5A1BC58();
      break;
    case 2:
      uint64_t v12 = sub_1B5A1BC68();
      break;
    case 3:
      uint64_t v12 = sub_1B5A1BC28();
      break;
    case 4:
      uint64_t v12 = sub_1B5A1BC38();
      break;
    case 5:
      uint64_t v12 = sub_1B5A1BBE8();
      break;
    case 6:
      uint64_t v12 = sub_1B5A1BBF8();
      break;
    case 7:
      uint64_t v12 = sub_1B5A1BC08();
      break;
    case 8:
      uint64_t v12 = sub_1B5A1BC18();
      break;
    default:
      uint64_t v12 = sub_1B5A1BC48();
      break;
  }
  uint64_t v26 = v12;
  uint64_t v27 = v13;
  uint64_t v15 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v16 = swift_allocObject();
  long long v17 = v34;
  *(_OWORD *)(v16 + 48) = v33;
  *(_OWORD *)(v16 + 64) = v17;
  *(_OWORD *)(v16 + 80) = v35;
  long long v18 = v32;
  *(_OWORD *)(v16 + 16) = v31;
  *(_OWORD *)(v16 + 32) = v18;
  *(void *)(v16 + 96) = a2;
  uint64_t v29 = sub_1B5A1A748();
  sub_1B5966DF4();
  uint64_t WitnessTable = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v28);
  sub_1B5966E48((uint64_t)&v31);
  swift_retain();
  MEMORY[0x1BA9A2CB0](v26, sub_1B5966DC0, v16, v15, v14);
  swift_release();
  uint64_t v19 = v29;
  uint64_t v20 = WitnessTable;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  uint64_t v21 = swift_allocObject();
  long long v22 = v34;
  *(_OWORD *)(v21 + 48) = v33;
  *(_OWORD *)(v21 + 64) = v22;
  *(_OWORD *)(v21 + 80) = v35;
  long long v23 = v32;
  *(_OWORD *)(v21 + 16) = v31;
  *(_OWORD *)(v21 + 32) = v23;
  *(void *)(v21 + 96) = a2;
  uint64_t v24 = sub_1B5A1A748();
  uint64_t v25 = v37;
  v37[3] = v24;
  v25[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v25);
  sub_1B5966E48((uint64_t)&v31);
  swift_retain();
  MEMORY[0x1BA9A2CA0](v27, sub_1B5966DC0, v21, v19, v20);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t sub_1B59666E0@<X0>(unint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64630);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B5A250C0;
  *(void *)(inited + 32) = 0x746867696568;
  *(void *)(inited + 40) = 0xE600000000000000;
  sub_1B5A1A6C8();
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = 0x6874646977;
  *(void *)(inited + 64) = 0xE500000000000000;
  sub_1B5A1A6B8();
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = 7368564;
  *(void *)(inited + 88) = 0xE300000000000000;
  uint64_t v5 = sub_1B5A1AA28();
  *(double *)(inited + 96) = MEMORY[0x1BA9A1ED0](v5);
  *(void *)(inited + 104) = 0xD000000000000018;
  *(void *)(inited + 112) = 0x80000001B5A32F80;
  uint64_t v6 = sub_1B5A1AA48();
  *(double *)(inited + 120) = MEMORY[0x1BA9A1ED0](v6);
  *(void *)(inited + 128) = 0x6D6F74746F62;
  *(void *)(inited + 136) = 0xE600000000000000;
  uint64_t v7 = sub_1B5A1AA38();
  *(double *)(inited + 144) = MEMORY[0x1BA9A1ED0](v7);
  *(void *)(inited + 152) = 0x676E696461656CLL;
  *(void *)(inited + 160) = 0xE700000000000000;
  uint64_t v8 = sub_1B5A1AD08();
  *(double *)(inited + 168) = MEMORY[0x1BA9A1EE0](v8);
  *(void *)(inited + 176) = 0x676E696C69617274;
  *(void *)(inited + 184) = 0xE800000000000000;
  uint64_t v9 = sub_1B5A1AD18();
  *(double *)(inited + 192) = MEMORY[0x1BA9A1EE0](v9);
  *(void *)(inited + 200) = 0xD00000000000001ALL;
  *(void *)(inited + 208) = 0x80000001B5A32FA0;
  uint64_t v10 = sub_1B5A1ACF8();
  *(double *)(inited + 216) = MEMORY[0x1BA9A1EE0](v10);
  *(void *)(inited + 224) = 0xD000000000000011;
  *(void *)(inited + 232) = 0x80000001B5A32FC0;
  uint64_t v11 = sub_1B5A1AA18();
  *(double *)(inited + 240) = MEMORY[0x1BA9A1ED0](v11);
  *(void *)(inited + 248) = 0xD000000000000010;
  *(void *)(inited + 256) = 0x80000001B5A32FE0;
  uint64_t v12 = sub_1B5A1AA08();
  *(double *)(inited + 264) = MEMORY[0x1BA9A1ED0](v12);
  *(void *)(inited + 272) = 0xD000000000000017;
  *(void *)(inited + 280) = 0x80000001B5A33000;
  uint64_t v13 = sub_1B5A1ACD8();
  *(double *)(inited + 288) = MEMORY[0x1BA9A1EE0](v13);
  *(void *)(inited + 296) = 0xD000000000000018;
  *(void *)(inited + 304) = 0x80000001B5A33020;
  uint64_t v14 = sub_1B5A1ACE8();
  *(double *)(inited + 312) = MEMORY[0x1BA9A1EE0](v14);
  unint64_t v15 = sub_1B59034EC(inited);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1B5966BA0(v15);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v16 | 0xA000000000000000;
  return result;
}

double sub_1B5966914(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t *))
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(inited + 32) = *(void *)(a2 + 64);
  *(void *)(inited + 40) = v8;
  swift_bridgeObjectRetain();
  sub_1B59666E0((unint64_t *)(inited + 48));
  unint64_t v9 = sub_1B59030D8(inited);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  unint64_t v11 = sub_1B5902F98(MEMORY[0x1E4FBC860]);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = qword_1E9D65378;
  swift_retain();
  swift_retain();
  *(void *)(v12 + v13) = sub_1B5902F98(v10);
  *(void *)(v12 + qword_1E9D65380) = a3;
  swift_retain_n();
  swift_release();
  uint64_t v14 = sub_1B59038C0(a3);
  sub_1B590505C(v9, a4);
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v15 = (unint64_t *)(v14 + qword_1E9D65378);
  swift_beginAccess();
  *unint64_t v15 = v11;
  swift_bridgeObjectRelease();
  sub_1B5966F1C(a2, (uint64_t)v20);
  sub_1B5966F1C((uint64_t)v20, (uint64_t)v19);
  sub_1B5966F78((uint64_t)v20);
  double v16 = COERCE_DOUBLE(sub_1B5963534(v14));
  LOBYTE(v15) = v17;
  sub_1B5966FAC((uint64_t)v20);
  swift_release();
  double result = v16;
  if (v15) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1B5966AF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59663B0(a1, a2, a3);
}

void sub_1B5966B0C(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

unint64_t sub_1B5966B24(uint64_t a1)
{
  unint64_t result = sub_1B5966B4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5966B4C()
{
  unint64_t result = qword_1E9D64620;
  if (!qword_1E9D64620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64620);
  }
  return result;
}

uint64_t sub_1B5966BA0(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E50);
  uint64_t result = sub_1B5A1C518();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v26 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  int64_t v25 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    char v17 = (uint64_t *)(*(void *)(v26 + 48) + 16 * i);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(v26 + 56) + 8 * i);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v20;
    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v21 = (void *)(v3[6] + 16 * i);
    void *v21 = v19;
    v21[1] = v18;
    *(void *)(v3[7] + 8 * i) = result | 0x4000000000000000;
    uint64_t v22 = v3[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v25) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v25) {
        return (uint64_t)v3;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v25) {
          return (uint64_t)v3;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v25) {
    return (uint64_t)v3;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v25) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

double sub_1B5966DC0(uint64_t a1)
{
  return sub_1B5966914(a1, v1 + 16, *(void *)(v1 + 96), (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B5904C58);
}

unint64_t sub_1B5966DF4()
{
  unint64_t result = qword_1E9D64628;
  if (!qword_1E9D64628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64628);
  }
  return result;
}

uint64_t sub_1B5966E48(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 56);
  sub_1B591DF88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_1B5904B60(v2, v3, v4, v5);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t objectdestroyTm_1()
{
  sub_1B591DF0C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_1B5904A88(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1B5966F1C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5966F78(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5966FAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5966FE0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B5967018()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1B5967028()
{
  unint64_t result = qword_1E9D64640;
  if (!qword_1E9D64640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64640);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AlignmentGuideModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5967148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlignmentGuideModifier.CodingKeys()
{
  return &type metadata for AlignmentGuideModifier.CodingKeys;
}

unint64_t sub_1B5967184()
{
  unint64_t result = qword_1E9D64648;
  if (!qword_1E9D64648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64648);
  }
  return result;
}

unint64_t sub_1B59671DC()
{
  unint64_t result = qword_1E9D64650;
  if (!qword_1E9D64650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64650);
  }
  return result;
}

unint64_t sub_1B5967234()
{
  unint64_t result = qword_1E9D64658;
  if (!qword_1E9D64658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64658);
  }
  return result;
}

uint64_t sub_1B5967288()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void destroy for AspectRatioModifier(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 != 255) {
    sub_1B590D6F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v2 & 1);
  }
  int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 != 255) {
    sub_1B590D6F0(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v3 & 1);
  }
  int v4 = *(unsigned __int8 *)(a1 + 88);
  if (v4 != 255)
  {
    uint64_t v5 = *(void *)(a1 + 64);
    uint64_t v6 = *(void *)(a1 + 72);
    uint64_t v7 = *(void *)(a1 + 80);
    sub_1B590D6F0(v5, v6, v7, v4 & 1);
  }
}

uint64_t initializeWithCopy for AspectRatioModifier(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  }
  else
  {
    char v5 = v4 & 1;
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    uint64_t v8 = a2[2];
    sub_1B590D634(*a2, v7, v8, v4 & 1);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v5;
  }
  int v9 = *((unsigned __int8 *)a2 + 56);
  if (v9 == 255)
  {
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  else
  {
    char v10 = v9 & 1;
    uint64_t v11 = a2[4];
    uint64_t v12 = a2[5];
    uint64_t v13 = a2[6];
    sub_1B590D634(v11, v12, v13, v9 & 1);
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v13;
    *(unsigned char *)(a1 + 56) = v10;
  }
  int v14 = *((unsigned __int8 *)a2 + 88);
  if (v14 == 255)
  {
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
  }
  else
  {
    char v15 = v14 & 1;
    uint64_t v16 = a2[8];
    uint64_t v17 = a2[9];
    uint64_t v18 = a2[10];
    sub_1B590D634(v16, v17, v18, v14 & 1);
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v17;
    *(void *)(a1 + 80) = v18;
    *(unsigned char *)(a1 + 88) = v15;
  }
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  return a1;
}

uint64_t assignWithCopy for AspectRatioModifier(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v4 == 255)
    {
      long long v6 = *a2;
      *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      char v15 = v4 & 1;
      uint64_t v16 = *(void *)a2;
      uint64_t v17 = *((void *)a2 + 1);
      uint64_t v18 = *((void *)a2 + 2);
      sub_1B590D634(*(void *)a2, v17, v18, v4 & 1);
      *(void *)a1 = v16;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = v18;
      *(unsigned char *)(a1 + 24) = v15;
    }
  }
  else if (v4 == 255)
  {
    sub_1B59369A8(a1);
    long long v5 = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 9) = v5;
  }
  else
  {
    char v7 = v4 & 1;
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *((void *)a2 + 1);
    uint64_t v10 = *((void *)a2 + 2);
    sub_1B590D634(*(void *)a2, v9, v10, v4 & 1);
    uint64_t v11 = *(void *)a1;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 16);
    char v14 = *(unsigned char *)(a1 + 24);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(unsigned char *)(a1 + 24) = v7;
    sub_1B590D6F0(v11, v12, v13, v14);
  }
  uint64_t v19 = (long long *)(a1 + 32);
  uint64_t v20 = a2 + 2;
  int v21 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v21 == 255)
    {
      long long v23 = *v20;
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *uint64_t v19 = v23;
    }
    else
    {
      char v32 = v21 & 1;
      uint64_t v33 = *((void *)a2 + 4);
      uint64_t v34 = *((void *)a2 + 5);
      uint64_t v35 = *((void *)a2 + 6);
      sub_1B590D634(v33, v34, v35, v21 & 1);
      *(void *)(a1 + 32) = v33;
      *(void *)(a1 + 40) = v34;
      *(void *)(a1 + 48) = v35;
      *(unsigned char *)(a1 + 56) = v32;
    }
  }
  else if (v21 == 255)
  {
    sub_1B59369A8(a1 + 32);
    long long v22 = *(long long *)((char *)a2 + 41);
    *uint64_t v19 = *v20;
    *(_OWORD *)(a1 + 41) = v22;
  }
  else
  {
    char v24 = v21 & 1;
    uint64_t v25 = *((void *)a2 + 4);
    uint64_t v26 = *((void *)a2 + 5);
    uint64_t v27 = *((void *)a2 + 6);
    sub_1B590D634(v25, v26, v27, v21 & 1);
    uint64_t v28 = *(void *)(a1 + 32);
    uint64_t v29 = *(void *)(a1 + 40);
    uint64_t v30 = *(void *)(a1 + 48);
    char v31 = *(unsigned char *)(a1 + 56);
    *(void *)(a1 + 32) = v25;
    *(void *)(a1 + 40) = v26;
    *(void *)(a1 + 48) = v27;
    *(unsigned char *)(a1 + 56) = v24;
    sub_1B590D6F0(v28, v29, v30, v31);
  }
  uint64_t v36 = (long long *)(a1 + 64);
  uint64_t v37 = a2 + 4;
  int v38 = *((unsigned __int8 *)a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v38 == 255)
    {
      long long v40 = *v37;
      *(_OWORD *)(a1 + 73) = *(long long *)((char *)a2 + 73);
      *uint64_t v36 = v40;
    }
    else
    {
      char v49 = v38 & 1;
      uint64_t v50 = *((void *)a2 + 8);
      uint64_t v51 = *((void *)a2 + 9);
      uint64_t v52 = *((void *)a2 + 10);
      sub_1B590D634(v50, v51, v52, v38 & 1);
      *(void *)(a1 + 64) = v50;
      *(void *)(a1 + 72) = v51;
      *(void *)(a1 + 80) = v52;
      *(unsigned char *)(a1 + 88) = v49;
    }
  }
  else if (v38 == 255)
  {
    sub_1B59369A8(a1 + 64);
    long long v39 = *(long long *)((char *)a2 + 73);
    *uint64_t v36 = *v37;
    *(_OWORD *)(a1 + 73) = v39;
  }
  else
  {
    char v41 = v38 & 1;
    uint64_t v42 = *((void *)a2 + 8);
    uint64_t v43 = *((void *)a2 + 9);
    uint64_t v44 = *((void *)a2 + 10);
    sub_1B590D634(v42, v43, v44, v38 & 1);
    uint64_t v45 = *(void *)(a1 + 64);
    uint64_t v46 = *(void *)(a1 + 72);
    uint64_t v47 = *(void *)(a1 + 80);
    char v48 = *(unsigned char *)(a1 + 88);
    *(void *)(a1 + 64) = v42;
    *(void *)(a1 + 72) = v43;
    *(void *)(a1 + 80) = v44;
    *(unsigned char *)(a1 + 88) = v41;
    sub_1B590D6F0(v45, v46, v47, v48);
  }
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  return a1;
}

__n128 __swift_memcpy90_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 74) = *(_OWORD *)(a2 + 74);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AspectRatioModifier(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 == 255) {
    goto LABEL_4;
  }
  int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 == 255)
  {
    sub_1B59369A8(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  char v6 = v4 & 1;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v5 & 1;
  sub_1B590D6F0(v8, v9, v10, v6);
LABEL_6:
  int v11 = *(unsigned __int8 *)(a1 + 56);
  if (v11 == 255)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_11;
  }
  int v12 = *(unsigned __int8 *)(a2 + 56);
  if (v12 == 255)
  {
    sub_1B59369A8(a1 + 32);
    goto LABEL_9;
  }
  char v13 = v11 & 1;
  uint64_t v14 = *(void *)(a2 + 48);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 56) = v12 & 1;
  sub_1B590D6F0(v15, v16, v17, v13);
LABEL_11:
  int v18 = *(unsigned __int8 *)(a1 + 88);
  if (v18 != 255)
  {
    int v19 = *(unsigned __int8 *)(a2 + 88);
    if (v19 != 255)
    {
      char v20 = v18 & 1;
      uint64_t v21 = *(void *)(a2 + 80);
      uint64_t v22 = *(void *)(a1 + 64);
      uint64_t v23 = *(void *)(a1 + 72);
      uint64_t v24 = *(void *)(a1 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(void *)(a1 + 80) = v21;
      *(unsigned char *)(a1 + 88) = v19 & 1;
      sub_1B590D6F0(v22, v23, v24, v20);
      goto LABEL_16;
    }
    sub_1B59369A8(a1 + 64);
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
LABEL_16:
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  return a1;
}

uint64_t getEnumTagSinglePayload for AspectRatioModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 90)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 89);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AspectRatioModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 90) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 90) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 89) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AspectRatioModifier()
{
  return &type metadata for AspectRatioModifier;
}

uint64_t sub_1B5967948(char a1)
{
  if (a1) {
    return 7629158;
  }
  else {
    return 1819044198;
  }
}

uint64_t sub_1B5967970(char a1)
{
  return *(void *)&aWidth_4[8 * a1];
}

uint64_t sub_1B5967990(char *a1, char *a2)
{
  return sub_1B59EE638(*a1, *a2);
}

uint64_t sub_1B596799C()
{
  return sub_1B59F1120();
}

uint64_t sub_1B59679A4()
{
  return sub_1B59F3D14();
}

uint64_t sub_1B59679AC()
{
  return sub_1B59F61A8();
}

uint64_t sub_1B59679B4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5967A14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5967948(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5967A40()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B5967AA0()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B5967AF0(char *a1, char *a2)
{
  return sub_1B59EDFA4(*a1, *a2);
}

uint64_t sub_1B5967AFC()
{
  return sub_1B59F1194();
}

uint64_t sub_1B5967B04()
{
  return sub_1B59F38F8();
}

uint64_t sub_1B5967B0C()
{
  return sub_1B59F6654();
}

uint64_t sub_1B5967B14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59689C0();
  *a1 = result;
  return result;
}

uint64_t sub_1B5967B44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5967970(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5967B70()
{
  return sub_1B5967970(*v0);
}

uint64_t sub_1B5967B78@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59689C0();
  *a1 = result;
  return result;
}

uint64_t sub_1B5967BA0(uint64_t a1)
{
  unint64_t v2 = sub_1B59685B0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5967BDC(uint64_t a1)
{
  unint64_t v2 = sub_1B59685B0();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5967C18(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64668);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59685B0();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v42 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F98);
    char v48 = 0;
    sub_1B5938654();
    sub_1B5A1C5B8();
    int v9 = v46;
    char v48 = 1;
    uint64_t v40 = v44;
    uint64_t v41 = v43;
    uint64_t v39 = v45;
    sub_1B590F04C(v43, v44, v45, v46);
    sub_1B5A1C5B8();
    int v32 = v9;
    int v10 = v46;
    char v48 = 2;
    uint64_t v36 = v44;
    uint64_t v37 = v43;
    uint64_t v31 = v45;
    sub_1B590F04C(v43, v44, v45, v46);
    uint64_t v30 = 0;
    sub_1B5A1C5B8();
    int v33 = v10;
    uint64_t v11 = v43;
    uint64_t v12 = v44;
    char v48 = 3;
    uint64_t v38 = v45;
    int v47 = v46;
    sub_1B590F04C(v43, v44, v45, v46);
    sub_1B5968604();
    sub_1B5A1C5D8();
    uint64_t v13 = v39;
    uint64_t v34 = v12;
    uint64_t v35 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LODWORD(v30) = (v43 & 1) == 0;
    uint64_t v14 = v11;
    sub_1B590F04C(v41, v40, v13, v32);
    uint64_t v15 = v36;
    unsigned __int8 v16 = v33;
    sub_1B590F04C(v37, v36, v31, v33);
    uint64_t v17 = v11;
    uint64_t v18 = v38;
    unsigned __int8 v19 = v47;
    sub_1B590F04C(v17, v12, v38, v47);
    sub_1B590F034(v14, v12, v18, v19);
    uint64_t v20 = v37;
    uint64_t v21 = v31;
    sub_1B590F034(v37, v15, v31, v16);
    uint64_t v23 = v40;
    uint64_t v22 = v41;
    char v24 = v32;
    sub_1B590F034(v41, v40, v13, v32);
    uint64_t v25 = v42;
    *uint64_t v42 = v22;
    v25[1] = v23;
    v25[2] = v13;
    *((unsigned char *)v25 + 24) = v24;
    uint64_t v26 = v36;
    v25[4] = v20;
    v25[5] = v26;
    v25[6] = v21;
    unsigned __int8 v27 = v33;
    *((unsigned char *)v25 + 56) = v33;
    uint64_t v28 = v35;
    v25[8] = v35;
    v25[9] = v12;
    uint64_t v29 = v38;
    v25[10] = v38;
    LOBYTE(v21) = v47;
    *((unsigned char *)v25 + 88) = v47;
    *((unsigned char *)v25 + 89) = v30;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B590F034(v41, v23, v13, v32);
    sub_1B590F034(v37, v26, v31, v27);
    sub_1B590F034(v28, v34, v29, v21);
  }
}

uint64_t sub_1B596812C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v7 = a1;
  uint64_t v8 = a3;
  uint64_t v9 = *(void *)v3;
  int v10 = *(unsigned __int8 *)(v3 + 24);
  uint64_t v18 = *(void *)(v3 + 32);
  uint64_t v19 = *(void *)(v3 + 40);
  uint64_t v20 = *(void *)(v3 + 48);
  int v11 = *(unsigned __int8 *)(v3 + 88);
  int v25 = *(unsigned __int8 *)(v3 + 56);
  uint64_t v23 = *(void *)(v3 + 8);
  uint64_t v24 = *(void *)(v3 + 16);
  if (v11 == 255)
  {
    uint64_t v15 = a2;
    if (v10 == 255) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v17 = *(void *)v3;
    uint64_t v12 = *(void *)(v3 + 64);
    uint64_t v13 = *(void *)(v3 + 72);
    uint64_t v14 = *(void *)(v3 + 80);
    sub_1B590D634(v12, v13, v14, v11 & 1);
    uint64_t v15 = a2;
    sub_1B59B4324(a2, v12, v13, v14, v11 & 1);
    if (!v4)
    {
      sub_1B590F034(v12, v13, v14, v11);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      a3[3] = sub_1B5A1A748();
      a3[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1B5A1B3D8();
    }

    sub_1B590F034(v12, v13, v14, v11);
    uint64_t v5 = 0;
    uint64_t v7 = a1;
    uint64_t v8 = a3;
    uint64_t v9 = v17;
    if (v10 == 255)
    {
LABEL_8:
      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      v8[3] = sub_1B5A1A748();
      v8[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(v8);
      return sub_1B5A1B3D8();
    }
  }
  sub_1B590D634(v9, v23, v24, v10 & 1);
  sub_1B59B4324(v15, v9, v23, v24, v10 & 1);
  if (v5)
  {

    sub_1B590F034(v9, v23, v24, v10);
    goto LABEL_8;
  }
  sub_1B590F034(v9, v23, v24, v10);
  if (v25 == 255) {
    goto LABEL_8;
  }
  sub_1B590D634(v18, v19, v20, v25 & 1);
  sub_1B59B4324(v15, v18, v19, v20, v25 & 1);
  sub_1B590F034(v18, v19, v20, v25);
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v8[3] = sub_1B5A1A748();
  v8[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v8);
  return sub_1B5A1B3E8();
}

uint64_t sub_1B5968504@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B596812C(a1, a2, a3);
}

void sub_1B596851C(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

unint64_t sub_1B5968534(uint64_t a1)
{
  unint64_t result = sub_1B596855C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B596855C()
{
  unint64_t result = qword_1E9D64660;
  if (!qword_1E9D64660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64660);
  }
  return result;
}

unint64_t sub_1B59685B0()
{
  unint64_t result = qword_1E9D64670;
  if (!qword_1E9D64670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64670);
  }
  return result;
}

unint64_t sub_1B5968604()
{
  unint64_t result = qword_1E9D64678;
  if (!qword_1E9D64678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64678);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContentModeString(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5968724);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentModeString()
{
  return &type metadata for ContentModeString;
}

unsigned char *storeEnumTagSinglePayload for AspectRatioModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5968828);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AspectRatioModifier.CodingKeys()
{
  return &type metadata for AspectRatioModifier.CodingKeys;
}

unint64_t sub_1B5968864()
{
  unint64_t result = qword_1E9D64680;
  if (!qword_1E9D64680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64680);
  }
  return result;
}

unint64_t sub_1B59688BC()
{
  unint64_t result = qword_1E9D64688;
  if (!qword_1E9D64688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64688);
  }
  return result;
}

unint64_t sub_1B5968914()
{
  unint64_t result = qword_1E9D64690;
  if (!qword_1E9D64690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64690);
  }
  return result;
}

unint64_t sub_1B596896C()
{
  unint64_t result = qword_1E9D64698;
  if (!qword_1E9D64698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64698);
  }
  return result;
}

uint64_t sub_1B59689C0()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B5968A0C()
{
  unint64_t result = qword_1E9D646A0;
  if (!qword_1E9D646A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D646A0);
  }
  return result;
}

uint64_t sub_1B5968A60()
{
  return sub_1B5A1A108();
}

uint64_t sub_1B5968A84()
{
  return sub_1B5A1A118();
}

void (*sub_1B5968AA8(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B5A1A0F8();
  return sub_1B5909C6C;
}

uint64_t KeyedDecodingContainer.decodeAction(forKey:)@<X0>(uint64_t a1@<X8>)
{
  sub_1B5951D18();
  uint64_t result = sub_1B5A1C5D8();
  if (!v1) {
    return sub_1B5908BE8(&v4, a1);
  }
  return result;
}

uint64_t KeyedDecodingContainer.decodeActions(forKey:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
  sub_1B5951CA4();
  sub_1B5A1C5D8();
  if (!v1)
  {
    int64_t v2 = *(void *)(v10 + 16);
    if (v2)
    {
      uint64_t v9 = MEMORY[0x1E4FBC860];
      sub_1B596931C(0, v2, 0);
      uint64_t v3 = v10 + 32;
      uint64_t v0 = v9;
      do
      {
        sub_1B5951D6C(v3, (uint64_t)v7);
        sub_1B590CA38((uint64_t)v7, (uint64_t)v8);
        sub_1B5951DC8((uint64_t)v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B596931C(0, *(void *)(v0 + 16) + 1, 1);
          uint64_t v0 = v9;
        }
        unint64_t v5 = *(void *)(v0 + 16);
        unint64_t v4 = *(void *)(v0 + 24);
        if (v5 >= v4 >> 1)
        {
          sub_1B596931C(v4 > 1, v5 + 1, 1);
          uint64_t v0 = v9;
        }
        *(void *)(v0 + 16) = v5 + 1;
        sub_1B5908BE8(v8, v0 + 40 * v5 + 32);
        v3 += 40;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
  }
  return v0;
}

double KeyedDecodingContainer.decodeActionIfPresent(forKey:)@<D0>(uint64_t a1@<X8>)
{
  sub_1B5951D18();
  sub_1B5A1C5B8();
  if (!v1)
  {
    if (v5)
    {
      sub_1B590CA38((uint64_t)v4, a1);
      sub_1B5951DC8((uint64_t)v4);
    }
    else
    {
      sub_1B596934C((uint64_t)v4);
      *(void *)(a1 + 32) = 0;
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
  }
  return result;
}

uint64_t KeyedDecodingContainer.decodeActionsIfPresent(forKey:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
  sub_1B5951CA4();
  sub_1B5A1C5B8();
  if (!v1)
  {
    if (v10)
    {
      int64_t v3 = *(void *)(v10 + 16);
      if (v3)
      {
        uint64_t v9 = MEMORY[0x1E4FBC860];
        sub_1B596931C(0, v3, 0);
        uint64_t v4 = v10 + 32;
        uint64_t v0 = v9;
        do
        {
          sub_1B5951D6C(v4, (uint64_t)v7);
          sub_1B590CA38((uint64_t)v7, (uint64_t)v8);
          sub_1B5951DC8((uint64_t)v7);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B596931C(0, *(void *)(v0 + 16) + 1, 1);
            uint64_t v0 = v9;
          }
          unint64_t v6 = *(void *)(v0 + 16);
          unint64_t v5 = *(void *)(v0 + 24);
          if (v6 >= v5 >> 1)
          {
            sub_1B596931C(v5 > 1, v6 + 1, 1);
            uint64_t v0 = v9;
          }
          *(void *)(v0 + 16) = v6 + 1;
          sub_1B5908BE8(v8, v0 + 40 * v6 + 32);
          v4 += 40;
          --v3;
        }
        while (v3);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        return MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      return 0;
    }
  }
  return v0;
}

uint64_t DecodingError.context.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B5A1C408();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B5A1C3F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v12 == *MEMORY[0x1E4FBBA70] || v12 == *MEMORY[0x1E4FBBA80])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v13 = &v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646B8) + 48)];
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v14(v11, v13, v8);
  }
  else if (v12 == *MEMORY[0x1E4FBBA68])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646B0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v14(v11, &v7[*(int *)(v16 + 48)], v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    if (v12 != *MEMORY[0x1E4FBBA78])
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, 1, 1, v8);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v14(v11, v7, v8);
  }
  v14(a1, v11, v8);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
}

uint64_t sub_1B596924C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B596955C(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1B596926C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B59696CC(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1B596928C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B5969838(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1B59692AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B59699A4(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1B59692CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B5969B10(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1B59692EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B5969D50(a1, a2, a3, (void *)*v3, &qword_1E9D646E0, &qword_1E9D63320);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1B596931C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B5969D50(a1, a2, a3, (void *)*v3, &qword_1E9D646D0, &qword_1E9D63090);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1B596934C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B59693AC(uint64_t a1)
{
  unint64_t result = sub_1B59693D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59693D4()
{
  unint64_t result = qword_1E9D646C0;
  if (!qword_1E9D646C0)
  {
    sub_1B5A1A138();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D646C0);
  }
  return result;
}

uint64_t dispatch thunk of LiftUIDecoder.userInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LiftUIDecoder.userInfo.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of LiftUIDecoder.userInfo.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ContextProvidingError.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B596947C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B5969D50(a1, a2, a3, (void *)*v3, &qword_1E9D64700, &qword_1E9D64708);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1B59694AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B5969D50(a1, a2, a3, (void *)*v3, &qword_1E9D64710, &qword_1E9D64718);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1B59694DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B5969D50(a1, a2, a3, (void *)*v3, &qword_1E9D64738, &qword_1E9D64740);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1B596950C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B5969D50(a1, a2, a3, (void *)*v3, &qword_1E9D64720, &qword_1E9D64728);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1B596953C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B5969EF8(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1B596955C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B59696CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B5969838(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B59699A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64730);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B5969B10(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646F0);
  uint64_t v10 = *(void *)(sub_1B5A1ACA8() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_1B5A1ACA8() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B5969D50(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B5969EF8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646F8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

void destroy for OffsetModifier(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 <= 0xFD) {
    sub_1B591DF0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v2);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 0xFD)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    sub_1B591DF0C(v4, v5, v6, v3);
  }
}

uint64_t initializeWithCopy for OffsetModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 <= 0xFD)
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    sub_1B591DF88(*(void *)a2, v6, v7, v4);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  unsigned int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a2 + 48);
    sub_1B591DF88(v9, v10, v11, v8);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  return a1;
}

uint64_t assignWithCopy for OffsetModifier(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) <= 0xFDu)
  {
    if (v4 <= 0xFD)
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      sub_1B591DF88(*(void *)a2, v11, v12, v4);
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = *(void *)(a1 + 16);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      char v16 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v4;
      sub_1B591DF0C(v13, v14, v15, v16);
    }
    else
    {
      sub_1B59316FC(a1);
      long long v6 = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 9) = v6;
    }
  }
  else if (v4 <= 0xFD)
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    uint64_t v9 = *((void *)a2 + 2);
    sub_1B591DF88(*(void *)a2, v8, v9, v4);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    long long v5 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v5;
  }
  unint64_t v17 = (_OWORD *)(a1 + 32);
  uint64_t v18 = a2 + 2;
  unsigned int v19 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v19 <= 0xFD)
    {
      uint64_t v25 = *((void *)a2 + 4);
      uint64_t v26 = *((void *)a2 + 5);
      uint64_t v27 = *((void *)a2 + 6);
      sub_1B591DF88(v25, v26, v27, v19);
      uint64_t v28 = *(void *)(a1 + 32);
      uint64_t v29 = *(void *)(a1 + 40);
      uint64_t v30 = *(void *)(a1 + 48);
      *(void *)(a1 + 32) = v25;
      *(void *)(a1 + 40) = v26;
      *(void *)(a1 + 48) = v27;
      char v31 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v19;
      sub_1B591DF0C(v28, v29, v30, v31);
    }
    else
    {
      sub_1B59316FC(a1 + 32);
      long long v21 = *(long long *)((char *)a2 + 41);
      *unint64_t v17 = *v18;
      *(_OWORD *)(a1 + 41) = v21;
    }
  }
  else if (v19 <= 0xFD)
  {
    uint64_t v22 = *((void *)a2 + 4);
    uint64_t v23 = *((void *)a2 + 5);
    uint64_t v24 = *((void *)a2 + 6);
    sub_1B591DF88(v22, v23, v24, v19);
    *(void *)(a1 + 32) = v22;
    *(void *)(a1 + 40) = v23;
    *(void *)(a1 + 48) = v24;
    *(unsigned char *)(a1 + 56) = v19;
  }
  else
  {
    long long v20 = *v18;
    *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
    *unint64_t v17 = v20;
  }
  return a1;
}

uint64_t assignWithTake for OffsetModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 > 0xFD)
  {
    sub_1B59316FC(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B591DF0C(v7, v8, v9, v4);
LABEL_6:
  unsigned int v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 <= 0xFD)
  {
    unsigned int v11 = *(unsigned __int8 *)(a2 + 56);
    if (v11 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 48);
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(a1 + 40);
      uint64_t v15 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = v12;
      *(unsigned char *)(a1 + 56) = v11;
      sub_1B591DF0C(v13, v14, v15, v10);
      return a1;
    }
    sub_1B59316FC(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for OffsetModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if ((v3 & 0x7E) != 0) {
    int v4 = 126 - (v3 & 0x7E | (v3 >> 7));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OffsetModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OffsetModifier()
{
  return &type metadata for OffsetModifier;
}

uint64_t sub_1B596A4E0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned int v6 = *(unsigned __int8 *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  uint64_t v9 = *(void *)(v3 + 48);
  unsigned int v10 = *(unsigned __int8 *)(v3 + 56);
  if (v6 <= 0xFD)
  {
    uint64_t v14 = *(void *)(v3 + 48);
    uint64_t v15 = *(void *)(v3 + 32);
    uint64_t v11 = *(void *)v3;
    uint64_t v16 = *(void *)(v3 + 8);
    uint64_t v17 = *(void *)(v3 + 16);
    sub_1B591DF88(*(void *)v3, v16, v17, v6);
    sub_1B5963534(a2);
    uint64_t v12 = v11;
    uint64_t v7 = v15;
    uint64_t v9 = v14;
    sub_1B59325C0(v12, v16, v17, v6);
  }
  if (v10 <= 0xFD)
  {
    sub_1B591DF88(v7, v8, v9, v10);
    sub_1B5963534(a2);
    sub_1B59325C0(v7, v8, v9, v10);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3[3] = sub_1B5A1A748();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B6C8();
}

uint64_t sub_1B596A6C0(char a1)
{
  if (a1) {
    return 121;
  }
  else {
    return 120;
  }
}

uint64_t sub_1B596A6D4()
{
  return sub_1B596A6C0(*v0);
}

uint64_t sub_1B596A6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B596AD50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B596A704(uint64_t a1)
{
  unint64_t v2 = sub_1B596AAF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B596A740(uint64_t a1)
{
  unint64_t v2 = sub_1B596AAF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B596A77C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64750);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B596AAF0();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v30 = 0;
    sub_1B59358E8();
    sub_1B5A1C5B8();
    uint64_t v9 = v26;
    char v30 = 1;
    uint64_t v23 = v27;
    uint64_t v24 = v25;
    int v29 = v28;
    sub_1B591DF74(v25, v26, v27, v28);
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v25;
    uint64_t v21 = v26;
    uint64_t v22 = v25;
    uint64_t v11 = v27;
    uint64_t v20 = v27;
    HIDWORD(v19) = v28;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v14 = v29;
    sub_1B591DF74(v24, v9, v23, v29);
    uint64_t v15 = v10;
    uint64_t v16 = v21;
    uint64_t v17 = v11;
    LOBYTE(v11) = BYTE4(v19);
    sub_1B591DF74(v15, v21, v17, SBYTE4(v19));
    sub_1B59325C0(v13, v9, v12, v14);
    *(void *)a2 = v13;
    *(void *)(a2 + 8) = v9;
    *(void *)(a2 + 16) = v12;
    *(unsigned char *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v22;
    *(void *)(a2 + 40) = v16;
    uint64_t v18 = v20;
    *(void *)(a2 + 48) = v20;
    *(unsigned char *)(a2 + 56) = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B59325C0(v13, v9, v12, v14);
    sub_1B59325C0(v22, v21, v18, v11);
  }
}

uint64_t sub_1B596AA44@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B596A4E0(a1, a2, a3);
}

void sub_1B596AA5C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B596AA74(uint64_t a1)
{
  unint64_t result = sub_1B596AA9C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B596AA9C()
{
  unint64_t result = qword_1E9D64748;
  if (!qword_1E9D64748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64748);
  }
  return result;
}

unint64_t sub_1B596AAF0()
{
  unint64_t result = qword_1E9D64758;
  if (!qword_1E9D64758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64758);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OffsetModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B596AC10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OffsetModifier.CodingKeys()
{
  return &type metadata for OffsetModifier.CodingKeys;
}

unint64_t sub_1B596AC4C()
{
  unint64_t result = qword_1E9D64760;
  if (!qword_1E9D64760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64760);
  }
  return result;
}

unint64_t sub_1B596ACA4()
{
  unint64_t result = qword_1E9D64768;
  if (!qword_1E9D64768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64768);
  }
  return result;
}

unint64_t sub_1B596ACFC()
{
  unint64_t result = qword_1E9D64770;
  if (!qword_1E9D64770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64770);
  }
  return result;
}

uint64_t sub_1B596AD50(uint64_t a1, uint64_t a2)
{
  if (a1 == 120 && a2 == 0xE100000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 121 && a2 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B596AE1C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

ValueMetadata *type metadata accessor for LazyHStackView()
{
  return &type metadata for LazyHStackView;
}

uint64_t _s6LiftUI14LazyHStackViewVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v2 = *(void *)(a1 + 80);
  if (v2 != 254)
  {
    if (v2 != 255) {
      sub_1B590D6F0(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80) & 1);
    }
    int v3 = *(unsigned __int8 *)(a1 + 112);
    if (v3 != 255) {
      sub_1B590D6F0(*(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), v3 & 1);
    }
  }
  return swift_release();
}

uint64_t _s6LiftUI14LazyHStackViewVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  long long v6 = (_OWORD *)(a1 + 56);
  long long v7 = (_OWORD *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 254)
  {
    long long v9 = v7[1];
    *long long v6 = *v7;
    *(_OWORD *)(a1 + 72) = v9;
    *(_OWORD *)(a1 + 88) = v7[2];
    *(_OWORD *)(a1 + 97) = *(_OWORD *)((char *)v7 + 41);
  }
  else
  {
    if (v8 == 255)
    {
      *long long v6 = *v7;
      *(_OWORD *)(a1 + 65) = *(_OWORD *)((char *)v7 + 9);
    }
    else
    {
      uint64_t v10 = *(void *)(a2 + 56);
      uint64_t v11 = *(void *)(a2 + 64);
      uint64_t v12 = *(void *)(a2 + 72);
      sub_1B590D634(v10, v11, v12, v8 & 1);
      *(void *)(a1 + 56) = v10;
      *(void *)(a1 + 64) = v11;
      *(void *)(a1 + 72) = v12;
      *(unsigned char *)(a1 + 80) = v8 & 1;
    }
    int v13 = *(unsigned __int8 *)(a2 + 112);
    if (v13 == 255)
    {
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
    }
    else
    {
      char v14 = v13 & 1;
      uint64_t v15 = *(void *)(a2 + 88);
      uint64_t v16 = *(void *)(a2 + 96);
      uint64_t v17 = *(void *)(a2 + 104);
      sub_1B590D634(v15, v16, v17, v13 & 1);
      *(void *)(a1 + 88) = v15;
      *(void *)(a1 + 96) = v16;
      *(void *)(a1 + 104) = v17;
      *(unsigned char *)(a1 + 112) = v14;
    }
  }
  uint64_t v18 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v18;
  swift_retain();
  return a1;
}

uint64_t _s6LiftUI14LazyHStackViewVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (long long *)(a1 + 56);
  long long v6 = (long long *)(a2 + 56);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v8 = *(unsigned __int8 *)(a2 + 80);
  if (v7 == 254)
  {
    if (v8 == 254)
    {
      long long v9 = *v6;
      long long v10 = *(_OWORD *)(a2 + 72);
      long long v11 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
      *(_OWORD *)(a1 + 72) = v10;
      *(_OWORD *)(a1 + 88) = v11;
LABEL_4:
      *uint64_t v5 = v9;
      goto LABEL_26;
    }
    if (v8 == 255)
    {
      long long v15 = *v6;
      *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
      *uint64_t v5 = v15;
    }
    else
    {
      char v17 = v8 & 1;
      uint64_t v18 = *(void *)(a2 + 56);
      uint64_t v19 = *(void *)(a2 + 64);
      uint64_t v20 = *(void *)(a2 + 72);
      sub_1B590D634(v18, v19, v20, v8 & 1);
      *(void *)(a1 + 56) = v18;
      *(void *)(a1 + 64) = v19;
      *(void *)(a1 + 72) = v20;
      *(unsigned char *)(a1 + 80) = v17;
    }
    int v21 = *(unsigned __int8 *)(a2 + 112);
    if (v21 == 255)
    {
      long long v22 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
      *(_OWORD *)(a1 + 88) = v22;
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (v8 == 254)
  {
    sub_1B596AE1C(a1 + 56);
    long long v13 = *(_OWORD *)(a2 + 72);
    long long v12 = *(_OWORD *)(a2 + 88);
    long long v14 = *v6;
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
    *(_OWORD *)(a1 + 72) = v13;
    *(_OWORD *)(a1 + 88) = v12;
    *uint64_t v5 = v14;
    goto LABEL_26;
  }
  if (v7 == 255)
  {
    if (v8 == 255)
    {
      long long v16 = *v6;
      *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
      *uint64_t v5 = v16;
    }
    else
    {
      char v24 = v8 & 1;
      uint64_t v25 = *(void *)(a2 + 56);
      uint64_t v26 = *(void *)(a2 + 64);
      uint64_t v27 = *(void *)(a2 + 72);
      sub_1B590D634(v25, v26, v27, v8 & 1);
      *(void *)(a1 + 56) = v25;
      *(void *)(a1 + 64) = v26;
      *(void *)(a1 + 72) = v27;
      *(unsigned char *)(a1 + 80) = v24;
    }
  }
  else if (v8 == 255)
  {
    sub_1B5908FC0(a1 + 56, &qword_1E9D63220);
    long long v23 = *(_OWORD *)(a2 + 65);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 65) = v23;
  }
  else
  {
    char v28 = v8 & 1;
    uint64_t v29 = *(void *)(a2 + 56);
    uint64_t v30 = *(void *)(a2 + 64);
    uint64_t v31 = *(void *)(a2 + 72);
    sub_1B590D634(v29, v30, v31, v8 & 1);
    uint64_t v32 = *(void *)(a1 + 56);
    uint64_t v33 = *(void *)(a1 + 64);
    uint64_t v34 = *(void *)(a1 + 72);
    char v35 = *(unsigned char *)(a1 + 80);
    *(void *)(a1 + 56) = v29;
    *(void *)(a1 + 64) = v30;
    *(void *)(a1 + 72) = v31;
    *(unsigned char *)(a1 + 80) = v28;
    sub_1B590D6F0(v32, v33, v34, v35);
  }
  uint64_t v5 = (long long *)(a1 + 88);
  uint64_t v36 = (long long *)(a2 + 88);
  int v21 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v21 == 255)
    {
      long long v9 = *v36;
      *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
      goto LABEL_4;
    }
LABEL_24:
    char v38 = v21 & 1;
    uint64_t v39 = *(void *)(a2 + 88);
    uint64_t v40 = *(void *)(a2 + 96);
    uint64_t v41 = *(void *)(a2 + 104);
    sub_1B590D634(v39, v40, v41, v21 & 1);
    *(void *)(a1 + 88) = v39;
    *(void *)(a1 + 96) = v40;
    *(void *)(a1 + 104) = v41;
    *(unsigned char *)(a1 + 112) = v38;
    goto LABEL_26;
  }
  if (v21 == 255)
  {
    sub_1B5908FC0(a1 + 88, &qword_1E9D63220);
    long long v37 = *(_OWORD *)(a2 + 97);
    *uint64_t v5 = *v36;
    *(_OWORD *)(a1 + 97) = v37;
  }
  else
  {
    char v42 = v21 & 1;
    uint64_t v43 = *(void *)(a2 + 88);
    uint64_t v44 = *(void *)(a2 + 96);
    uint64_t v45 = *(void *)(a2 + 104);
    sub_1B590D634(v43, v44, v45, v21 & 1);
    uint64_t v46 = *(void *)(a1 + 88);
    uint64_t v47 = *(void *)(a1 + 96);
    uint64_t v48 = *(void *)(a1 + 104);
    char v49 = *(unsigned char *)(a1 + 112);
    *(void *)(a1 + 88) = v43;
    *(void *)(a1 + 96) = v44;
    *(void *)(a1 + 104) = v45;
    *(unsigned char *)(a1 + 112) = v42;
    sub_1B590D6F0(v46, v47, v48, v49);
  }
LABEL_26:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

uint64_t _s6LiftUI14LazyHStackViewVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 56);
  long long v6 = (_OWORD *)(a2 + 56);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 80);
  if (v7 == 254) {
    goto LABEL_4;
  }
  uint64_t v8 = *(unsigned __int8 *)(a2 + 80);
  if (v8 == 254)
  {
    sub_1B596AE1C(a1 + 56);
LABEL_4:
    long long v9 = *(_OWORD *)(a2 + 72);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 72) = v9;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
    goto LABEL_15;
  }
  if (v7 != 255)
  {
    if (v8 != 255)
    {
      char v10 = v7 & 1;
      uint64_t v11 = *(void *)(a2 + 72);
      uint64_t v12 = *(void *)(a1 + 56);
      uint64_t v13 = *(void *)(a1 + 64);
      uint64_t v14 = *(void *)(a1 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(void *)(a1 + 72) = v11;
      *(unsigned char *)(a1 + 80) = v8 & 1;
      sub_1B590D6F0(v12, v13, v14, v10);
      goto LABEL_10;
    }
    sub_1B5908FC0(a1 + 56, &qword_1E9D63220);
  }
  *uint64_t v5 = *v6;
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
LABEL_10:
  int v15 = *(unsigned __int8 *)(a1 + 112);
  if (v15 != 255)
  {
    int v16 = *(unsigned __int8 *)(a2 + 112);
    if (v16 != 255)
    {
      char v17 = v15 & 1;
      uint64_t v18 = *(void *)(a2 + 104);
      uint64_t v19 = *(void *)(a1 + 88);
      uint64_t v20 = *(void *)(a1 + 96);
      uint64_t v21 = *(void *)(a1 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(void *)(a1 + 104) = v18;
      *(unsigned char *)(a1 + 112) = v16 & 1;
      sub_1B590D6F0(v19, v20, v21, v17);
      goto LABEL_15;
    }
    sub_1B5908FC0(a1 + 88, &qword_1E9D63220);
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
LABEL_15:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyVStackView()
{
  return &type metadata for LazyVStackView;
}

uint64_t destroy for ZStackView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ZStackView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ZStackView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ZStackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ZStackView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ZStackView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ZStackView()
{
  return &type metadata for ZStackView;
}

uint64_t destroy for HStackView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for HStackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    sub_1B591DF88(v6, v7, v8, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HStackView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unsigned int v5 = (_OWORD *)(a2 + 16);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = *(void *)(a2 + 32);
      sub_1B591DF88(v12, v13, v14, *(unsigned char *)(a2 + 40));
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v16 = *(void *)(a1 + 24);
      uint64_t v17 = *(void *)(a1 + 32);
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v14;
      char v18 = *(unsigned char *)(a1 + 40);
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B591DF0C(v15, v16, v17, v18);
    }
    else
    {
      sub_1B59316FC(a1 + 16);
      long long v8 = *(_OWORD *)(a2 + 25);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 25) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    sub_1B591DF88(v9, v10, v11, *(unsigned char *)(a2 + 40));
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *uint64_t v4 = v7;
  }
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for HStackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unsigned int v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 <= 0xFD)
  {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 <= 0xFD)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v10 = *(void *)(a1 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = v7;
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B591DF0C(v8, v9, v10, v5);
      goto LABEL_6;
    }
    sub_1B59316FC(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
LABEL_6:
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for HStackView()
{
  return &type metadata for HStackView;
}

uint64_t destroy for VStackView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for VStackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    sub_1B591DF88(v6, v7, v8, v5);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for VStackView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  unsigned int v5 = (_OWORD *)(a2 + 24);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 24);
      uint64_t v13 = *(void *)(a2 + 32);
      uint64_t v14 = *(void *)(a2 + 40);
      sub_1B591DF88(v12, v13, v14, *(unsigned char *)(a2 + 48));
      uint64_t v15 = *(void *)(a1 + 24);
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void *)(a1 + 40);
      *(void *)(a1 + 24) = v12;
      *(void *)(a1 + 32) = v13;
      *(void *)(a1 + 40) = v14;
      char v18 = *(unsigned char *)(a1 + 48);
      *(unsigned char *)(a1 + 48) = v6;
      sub_1B591DF0C(v15, v16, v17, v18);
    }
    else
    {
      sub_1B59316FC(a1 + 24);
      long long v8 = *(_OWORD *)(a2 + 33);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 33) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    sub_1B591DF88(v9, v10, v11, *(unsigned char *)(a2 + 48));
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(unsigned char *)(a1 + 48) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
    *uint64_t v4 = v7;
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for VStackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 48);
  if (v5 <= 0xFD)
  {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 48);
    if (v6 <= 0xFD)
    {
      uint64_t v7 = *(void *)(a2 + 40);
      uint64_t v8 = *(void *)(a1 + 24);
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(void *)(a1 + 40) = v7;
      *(unsigned char *)(a1 + 48) = v6;
      sub_1B591DF0C(v8, v9, v10, v5);
      goto LABEL_6;
    }
    sub_1B59316FC(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
LABEL_6:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

ValueMetadata *type metadata accessor for VStackView()
{
  return &type metadata for VStackView;
}

uint64_t sub_1B596BFA0(char a1)
{
  return qword_1B5A25E70[a1];
}

uint64_t sub_1B596BFC0(char *a1, char *a2)
{
  return sub_1B59EDD78(*a1, *a2);
}

uint64_t sub_1B596BFCC()
{
  return sub_1B59F1200();
}

uint64_t sub_1B596BFD4()
{
  return sub_1B59F37A0();
}

uint64_t sub_1B596BFDC()
{
  return sub_1B59F6790();
}

uint64_t sub_1B596BFE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B597056C();
  *a1 = result;
  return result;
}

uint64_t sub_1B596C014@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B596BFA0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B596C040()
{
  return sub_1B596BFA0(*v0);
}

uint64_t sub_1B596C048@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B597056C();
  *a1 = result;
  return result;
}

uint64_t sub_1B596C070(uint64_t a1)
{
  unint64_t v2 = sub_1B596FFF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B596C0AC(uint64_t a1)
{
  unint64_t v2 = sub_1B596FFF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B596C0E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D647C8);
  MEMORY[0x1F4188790](v35);
  long long v37 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63368);
  uint64_t v4 = MEMORY[0x1F4188790](v36);
  unsigned int v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)&v30 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v30 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v30 - v12;
  int v14 = *(unsigned __int8 *)(v1 + 16);
  unsigned int v15 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v16 = *(void *)(v1 + 56);
  if (v15 > 0xFD) {
    goto LABEL_7;
  }
  uint64_t v32 = *(void *)(v1 + 56);
  uint64_t v33 = a1;
  uint64_t v17 = *(void *)(v1 + 24);
  uint64_t v18 = *(void *)(v1 + 32);
  uint64_t v19 = *(void *)(v1 + 40);
  uint64_t v20 = *(void *)(v1 + 72);
  uint64_t v38 = v17;
  uint64_t v39 = v18;
  uint64_t v40 = v19;
  char v41 = v15;
  if (v20)
  {
    swift_retain();
    sub_1B591DF74(v17, v18, v19, v15);
    uint64_t v31 = sub_1B5963534(v20);
    char v22 = v21;
    swift_release();
    sub_1B59325C0(v17, v18, v19, v15);
    uint64_t v16 = v32;
    if ((v22 & 1) == 0)
    {
      uint64_t v23 = (uint64_t)v13;
      if (v14)
      {
        if (v14 == 1) {
          uint64_t v24 = sub_1B5A1ACF8();
        }
        else {
          uint64_t v24 = sub_1B5A1AD18();
        }
        uint64_t v27 = (uint64_t)v37;
      }
      else
      {
        uint64_t v24 = sub_1B5A1AD08();
        uint64_t v27 = (uint64_t)v37;
      }
      uint64_t v28 = v31;
      *(void *)uint64_t v11 = v24;
      *((void *)v11 + 1) = v28;
      v11[16] = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D647D0);
      uint64_t v38 = v16;
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
      sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
      sub_1B5A1BB28();
      sub_1B596F6EC((uint64_t)v11, (uint64_t)v13, &qword_1E9D63368);
      sub_1B5909890((uint64_t)v13, v27, &qword_1E9D63368);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      sub_1B59095C8(&qword_1E9D63360, &qword_1E9D63368);
      sub_1B5A1AE58();
      return sub_1B5908FC0(v23, &qword_1E9D63368);
    }
LABEL_7:
    if (v14)
    {
      uint64_t v23 = (uint64_t)v34;
      if (v14 == 1) {
        uint64_t v25 = sub_1B5A1ACF8();
      }
      else {
        uint64_t v25 = sub_1B5A1AD18();
      }
      uint64_t v26 = (uint64_t)v37;
    }
    else
    {
      uint64_t v25 = sub_1B5A1AD08();
      uint64_t v26 = (uint64_t)v37;
      uint64_t v23 = (uint64_t)v34;
    }
    *(void *)unsigned int v6 = v25;
    *((void *)v6 + 1) = 0;
    v6[16] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D647D0);
    uint64_t v38 = v16;
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
    sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
    sub_1B5A1BB28();
    sub_1B596F6EC((uint64_t)v6, v23, &qword_1E9D63368);
    sub_1B5909890(v23, v26, &qword_1E9D63368);
    goto LABEL_18;
  }
  sub_1B591DF74(v17, v18, v19, v15);
  swift_bridgeObjectRetain();
  sub_1B591DF74(v17, v18, v19, v15);
  type metadata accessor for RemoteStateStore(0);
  sub_1B596F750((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B596C618@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v42 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v4 = *(char **)(v3 - 8);
  uint64_t v43 = v3;
  uint64_t v44 = v4;
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64810);
  uint64_t v45 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B596F750((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v10 = sub_1B5A1A918();
  uint64_t v12 = v11;
  uint64_t v13 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1B596FFF0();
  swift_retain();
  uint64_t v14 = v47;
  sub_1B5A1C838();
  if (v14)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    sub_1B59325C0(0, 0, 0, 254);
    swift_release();
  }
  else
  {
    unsigned int v15 = (void (**)(char *, uint64_t))v44;
    uint64_t v41 = v12;
    uint64_t v47 = v10;
    LOBYTE(v48) = 0;
    uint64_t v16 = sub_1B5A1C598();
    uint64_t v19 = v17;
    if (v17)
    {
      uint64_t v40 = v16;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v40 = sub_1B5A1A288();
      uint64_t v19 = v20;
      v15[1](v6, v43);
    }
    char v52 = 1;
    sub_1B59358E8();
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    uint64_t v21 = v48;
    uint64_t v22 = v49;
    uint64_t v23 = v9;
    uint64_t v24 = v50;
    char v25 = v51;
    sub_1B591DF74(v48, v49, v50, v51);
    sub_1B59325C0(0, 0, 0, 254);
    LOBYTE(v48) = 2;
    sub_1B5A1C598();
    uint64_t v43 = v21;
    uint64_t v44 = v23;
    if (v26)
    {
      uint64_t v27 = sub_1B5A1C558();
      uint64_t v39 = v19;
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      if (v28 >= 3) {
        int v29 = 1;
      }
      else {
        int v29 = v28;
      }
      uint64_t v19 = v39;
    }
    else
    {
      int v29 = 1;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    char v52 = 3;
    sub_1B592FA5C();
    uint64_t v30 = v44;
    sub_1B5A1C5B8();
    if (v48) {
      uint64_t v31 = v48;
    }
    else {
      uint64_t v31 = MEMORY[0x1E4FBC860];
    }
    uint64_t v38 = sub_1B59196AC(v31);
    swift_bridgeObjectRelease();
    LODWORD(v39) = v29;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v7);
    swift_bridgeObjectRetain();
    uint64_t v32 = v43;
    sub_1B591DF74(v43, v22, v24, v25);
    uint64_t v33 = v38;
    swift_bridgeObjectRetain();
    uint64_t v34 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B59325C0(v32, v22, v24, v25);
    swift_bridgeObjectRelease();
    uint64_t v35 = v42;
    *char v42 = v40;
    v35[1] = v19;
    *((unsigned char *)v35 + 16) = v39;
    v35[3] = v32;
    v35[4] = v22;
    v35[5] = v24;
    *((unsigned char *)v35 + 48) = v25;
    v35[7] = v33;
    v35[8] = v34;
    uint64_t v36 = (uint64_t)v46;
    uint64_t v37 = v41;
    v35[9] = v47;
    v35[10] = v37;
    __swift_destroy_boxed_opaque_existential_1(v36);
    swift_bridgeObjectRelease();
    sub_1B59325C0(v32, v22, v24, v25);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B596CBF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63350);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v15 - v7;
  uint64_t v9 = *(void *)(v1 + 8);
  char v10 = *(unsigned char *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 40);
  LOBYTE(v7) = *(unsigned char *)(v1 + 48);
  v15[1] = *(void *)v1;
  _OWORD v15[2] = v9;
  char v16 = v10;
  long long v17 = *(_OWORD *)(v1 + 24);
  uint64_t v18 = v11;
  char v19 = v7;
  long long v12 = *(_OWORD *)(v1 + 72);
  long long v20 = *(_OWORD *)(v1 + 56);
  long long v21 = v12;
  sub_1B596C0E8((uint64_t)v8);
  sub_1B5909890((uint64_t)v8, (uint64_t)v6, &qword_1E9D63350);
  sub_1B591DDB8();
  uint64_t v13 = sub_1B5A1BA88();
  uint64_t result = sub_1B5908FC0((uint64_t)v8, &qword_1E9D63350);
  *a1 = v13;
  return result;
}

uint64_t sub_1B596CD18@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B596C618(a1, a2);
}

uint64_t sub_1B596CD30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B596CD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B596F3B8(a1, a2, a3, (void (*)(void))sub_1B596CD78, (void (*)(void))sub_1B591DE50);
}

unint64_t sub_1B596CD78()
{
  unint64_t result = qword_1E9D64778;
  if (!qword_1E9D64778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64778);
  }
  return result;
}

uint64_t sub_1B596CDCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D647D8);
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63390);
  uint64_t v4 = MEMORY[0x1F4188790](v36);
  unsigned int v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)&v30 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v30 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v30 - v12;
  unsigned int v14 = *(unsigned __int8 *)(v1 + 40);
  int v15 = *(unsigned __int8 *)(v1 + 41);
  uint64_t v16 = *(void *)(v1 + 48);
  if (v14 > 0xFD) {
    goto LABEL_7;
  }
  uint64_t v32 = *(void *)(v1 + 48);
  uint64_t v33 = a1;
  uint64_t v17 = *(void *)(v1 + 16);
  uint64_t v19 = *(void *)(v1 + 24);
  uint64_t v18 = *(void *)(v1 + 32);
  uint64_t v20 = *(void *)(v1 + 64);
  uint64_t v38 = v17;
  uint64_t v39 = v19;
  uint64_t v40 = v18;
  char v41 = v14;
  if (v20)
  {
    swift_retain();
    sub_1B591DF74(v17, v19, v18, v14);
    uint64_t v31 = sub_1B5963534(v20);
    char v22 = v21;
    swift_release();
    sub_1B59325C0(v17, v19, v18, v14);
    uint64_t v16 = v32;
    if ((v22 & 1) == 0)
    {
      uint64_t v23 = (uint64_t)v13;
      if (v15)
      {
        if (v15 == 1) {
          uint64_t v24 = sub_1B5A1AA48();
        }
        else {
          uint64_t v24 = sub_1B5A1AA38();
        }
        uint64_t v27 = (uint64_t)v37;
      }
      else
      {
        uint64_t v24 = sub_1B5A1AA28();
        uint64_t v27 = (uint64_t)v37;
      }
      uint64_t v28 = v31;
      *(void *)uint64_t v11 = v24;
      *((void *)v11 + 1) = v28;
      v11[16] = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D647E0);
      uint64_t v38 = v16;
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
      sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
      sub_1B5A1BB28();
      sub_1B596F6EC((uint64_t)v11, (uint64_t)v13, &qword_1E9D63390);
      sub_1B5909890((uint64_t)v13, v27, &qword_1E9D63390);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      sub_1B59095C8(&qword_1E9D63388, &qword_1E9D63390);
      sub_1B5A1AE58();
      return sub_1B5908FC0(v23, &qword_1E9D63390);
    }
LABEL_7:
    if (v15)
    {
      uint64_t v23 = (uint64_t)v34;
      if (v15 == 1) {
        uint64_t v25 = sub_1B5A1AA48();
      }
      else {
        uint64_t v25 = sub_1B5A1AA38();
      }
      uint64_t v26 = (uint64_t)v37;
    }
    else
    {
      uint64_t v25 = sub_1B5A1AA28();
      uint64_t v26 = (uint64_t)v37;
      uint64_t v23 = (uint64_t)v34;
    }
    *(void *)unsigned int v6 = v25;
    *((void *)v6 + 1) = 0;
    v6[16] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D647E0);
    uint64_t v38 = v16;
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
    sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
    sub_1B5A1BB28();
    sub_1B596F6EC((uint64_t)v6, v23, &qword_1E9D63390);
    sub_1B5909890(v23, v26, &qword_1E9D63390);
    goto LABEL_18;
  }
  sub_1B591DF74(v17, v19, v18, v14);
  swift_bridgeObjectRetain();
  sub_1B591DF74(v17, v19, v18, v14);
  type metadata accessor for RemoteStateStore(0);
  sub_1B596F750((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B596D2F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v4 = *(char **)(v3 - 8);
  uint64_t v46 = v3;
  uint64_t v47 = v4;
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64810);
  uint64_t v48 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B596F750((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v10 = sub_1B5A1A918();
  uint64_t v12 = v11;
  uint64_t v13 = a1[3];
  uint64_t v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1B596FFF0();
  swift_retain();
  uint64_t v14 = v50;
  sub_1B5A1C838();
  if (v14)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    sub_1B59325C0(0, 0, 0, 254);
    swift_release();
  }
  else
  {
    int v15 = (void (**)(char *, uint64_t))v47;
    uint64_t v44 = v12;
    uint64_t v50 = v10;
    LOBYTE(v51) = 0;
    uint64_t v16 = sub_1B5A1C598();
    uint64_t v19 = v17;
    if (v17)
    {
      uint64_t v43 = v16;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v43 = sub_1B5A1A288();
      uint64_t v19 = v20;
      v15[1](v6, v46);
    }
    char v55 = 1;
    sub_1B59358E8();
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    char v21 = v9;
    uint64_t v23 = v51;
    uint64_t v22 = v52;
    uint64_t v24 = v53;
    char v25 = v54;
    sub_1B591DF74(v51, v52, v53, v54);
    sub_1B59325C0(0, 0, 0, 254);
    LOBYTE(v51) = 2;
    sub_1B5A1C598();
    uint64_t v42 = v24;
    uint64_t v46 = v7;
    uint64_t v47 = v21;
    if (v26)
    {
      uint64_t v27 = sub_1B5A1C558();
      uint64_t v41 = v19;
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      if (v28 >= 3) {
        int v29 = 1;
      }
      else {
        int v29 = v28;
      }
      uint64_t v19 = v41;
    }
    else
    {
      int v29 = 1;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    char v55 = 3;
    sub_1B592FA5C();
    uint64_t v30 = v46;
    uint64_t v31 = v47;
    sub_1B5A1C5B8();
    if (v51) {
      uint64_t v32 = v51;
    }
    else {
      uint64_t v32 = MEMORY[0x1E4FBC860];
    }
    uint64_t v40 = sub_1B59196AC(v32);
    swift_bridgeObjectRelease();
    LODWORD(v41) = v29;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v30);
    swift_bridgeObjectRetain();
    uint64_t v33 = v42;
    sub_1B591DF74(v23, v22, v42, v25);
    uint64_t v34 = v40;
    swift_bridgeObjectRetain();
    uint64_t v35 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B59325C0(v23, v22, v33, v25);
    swift_bridgeObjectRelease();
    uint64_t v36 = v45;
    *uint64_t v45 = v43;
    v36[1] = v19;
    v36[2] = v23;
    v36[3] = v22;
    v36[4] = v33;
    *((unsigned char *)v36 + 40) = v25;
    *((unsigned char *)v36 + 41) = v41;
    _OWORD v36[6] = v34;
    v36[7] = v35;
    uint64_t v37 = (uint64_t)v49;
    uint64_t v38 = v44;
    v36[8] = v50;
    v36[9] = v38;
    __swift_destroy_boxed_opaque_existential_1(v37);
    swift_bridgeObjectRelease();
    sub_1B59325C0(v23, v22, v33, v25);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B596D8E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63378);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v15 - v7;
  uint64_t v9 = *(void *)(v1 + 8);
  uint64_t v10 = *(void *)(v1 + 32);
  __int16 v11 = *(_WORD *)(v1 + 40);
  v15[0] = *(void *)v1;
  v15[1] = v9;
  long long v16 = *(_OWORD *)(v1 + 16);
  uint64_t v17 = v10;
  __int16 v18 = v11;
  long long v12 = *(_OWORD *)(v1 + 64);
  long long v19 = *(_OWORD *)(v1 + 48);
  long long v20 = v12;
  sub_1B596CDCC((uint64_t)v15 - v7);
  sub_1B5909890((uint64_t)v8, (uint64_t)v6, &qword_1E9D63378);
  sub_1B591DFE0();
  uint64_t v13 = sub_1B5A1BA88();
  uint64_t result = sub_1B5908FC0((uint64_t)v8, &qword_1E9D63378);
  *a1 = v13;
  return result;
}

uint64_t sub_1B596DA00@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B596D2F8(a1, a2);
}

uint64_t sub_1B596DA18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B596DA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B596F3B8(a1, a2, a3, (void (*)(void))sub_1B596DA60, (void (*)(void))sub_1B591E078);
}

unint64_t sub_1B596DA60()
{
  unint64_t result = qword_1E9D64780;
  if (!qword_1E9D64780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64780);
  }
  return result;
}

uint64_t sub_1B596DAB4(char a1)
{
  return qword_1B5A25EB0[a1];
}

uint64_t sub_1B596DAD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633A0);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v12 - v7;
  uint64_t v9 = *(void *)(v1 + 32);
  *(_OWORD *)((char *)v12 - v7) = *(_OWORD *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B0);
  v12[1] = v9;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
  sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
  sub_1B5A1BB28();
  sub_1B5909890((uint64_t)v8, (uint64_t)v6, &qword_1E9D633A0);
  sub_1B59095C8(&qword_1E9D633A8, &qword_1E9D633A0);
  uint64_t v10 = sub_1B5A1BA88();
  uint64_t result = sub_1B5908FC0((uint64_t)v8, &qword_1E9D633A0);
  *a1 = v10;
  return result;
}

uint64_t sub_1B596DCAC@<X0>(_OWORD *a1@<X8>)
{
  *a1 = *(_OWORD *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B0);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
  sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
  return sub_1B5A1BB28();
}

double sub_1B596DD9C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B596FB1C(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1B596DDE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B596DDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B596F3B8(a1, a2, a3, (void (*)(void))sub_1B596DE28, (void (*)(void))sub_1B591E138);
}

unint64_t sub_1B596DE28()
{
  unint64_t result = qword_1E9D64788;
  if (!qword_1E9D64788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64788);
  }
  return result;
}

uint64_t sub_1B596DE7C(char *a1, char *a2)
{
  return sub_1B59ED4FC(*a1, *a2);
}

uint64_t sub_1B596DE88()
{
  return sub_1B59F126C();
}

uint64_t sub_1B596DE90()
{
  return sub_1B59F32BC();
}

uint64_t sub_1B596DE98()
{
  return sub_1B59F6D4C();
}

uint64_t sub_1B596DEA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59705B8();
  *a1 = result;
  return result;
}

uint64_t sub_1B596DED0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B596DAB4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B596DEFC()
{
  return sub_1B596DAB4(*v0);
}

uint64_t sub_1B596DF04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59705B8();
  *a1 = result;
  return result;
}

uint64_t sub_1B596DF2C(uint64_t a1)
{
  unint64_t v2 = sub_1B596F95C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B596DF68(uint64_t a1)
{
  unint64_t v2 = sub_1B596F95C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B596DFA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v26 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B5A1AFD8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  long long v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  long long v12 = (char *)v25 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v25 - v13;
  long long v15 = v1[7];
  v36[3] = v1[6];
  long long v37 = v15;
  uint64_t v38 = *((void *)v1 + 16);
  long long v16 = v1[3];
  long long v35 = v1[2];
  v36[0] = v16;
  long long v17 = v1[5];
  v36[1] = v1[4];
  v36[2] = v17;
  long long v18 = v1[1];
  long long v33 = *v1;
  long long v34 = v18;
  sub_1B596F6EC((uint64_t)v36 + 8, (uint64_t)v39, &qword_1E9D647E8);
  sub_1B596F6EC((uint64_t)v39, (uint64_t)&v40, &qword_1E9D647E8);
  if (BYTE8(v41) == 254)
  {
    LODWORD(v30) = 0;
    sub_1B596F750(&qword_1E9D64098, MEMORY[0x1E4F3D910]);
    long long v19 = v14;
    sub_1B5A1C8A8();
  }
  else
  {
    long long v19 = v14;
    long long v30 = v40;
    long long v31 = v41;
    v32[0] = v42[0];
    *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)((char *)v42 + 9);
    if (!*((void *)&v37 + 1))
    {
      sub_1B596F7C8((uint64_t)v39, (void (*)(void))sub_1B590F04C);
      sub_1B596F898((uint64_t)&v33);
      type metadata accessor for RemoteStateStore(0);
      sub_1B596F750((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
      uint64_t result = sub_1B5A1A908();
      __break(1u);
      return result;
    }
    sub_1B596F7C8((uint64_t)v39, (void (*)(void))sub_1B590F04C);
    uint64_t v20 = swift_retain();
    sub_1B5947D20(v20, (uint64_t)v12);
    swift_release();
    sub_1B596F7C8((uint64_t)v39, (void (*)(void))sub_1B590F034);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v12, v5);
  }
  uint64_t v27 = v3;
  uint64_t v28 = v2;
  if ((_BYTE)v34)
  {
    if (v34 == 1) {
      uint64_t v21 = sub_1B5A1ACF8();
    }
    else {
      uint64_t v21 = sub_1B5A1AD18();
    }
  }
  else
  {
    uint64_t v21 = sub_1B5A1AD08();
  }
  v25[0] = *((void *)&v34 + 1);
  v25[1] = v21;
  uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v9, v19, v5);
  MEMORY[0x1F4188790](v22);
  v25[-2] = &v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B5943808();
  uint64_t v23 = v26;
  sub_1B5A1A4A8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v23, v28);
}

uint64_t sub_1B596E418@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B596EA78(a1, (uint64_t)&unk_1F0E9C0B8, a2);
}

uint64_t sub_1B596E438@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B596F214(&qword_1E9D633D0, (void (*)(uint64_t))sub_1B596DFA4, &qword_1E9D633D8, a1);
}

uint64_t sub_1B596E478()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B596E494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B596F3B8(a1, a2, a3, (void (*)(void))sub_1B596E4C0, (void (*)(void))sub_1B591E1DC);
}

unint64_t sub_1B596E4C0()
{
  unint64_t result = qword_1E9D64790;
  if (!qword_1E9D64790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64790);
  }
  return result;
}

uint64_t sub_1B596E514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633E8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v26 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B5A1AFD8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  long long v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  long long v12 = (char *)v25 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v25 - v13;
  long long v15 = v1[7];
  v36[3] = v1[6];
  long long v37 = v15;
  uint64_t v38 = *((void *)v1 + 16);
  long long v16 = v1[3];
  long long v35 = v1[2];
  v36[0] = v16;
  long long v17 = v1[5];
  v36[1] = v1[4];
  v36[2] = v17;
  long long v18 = v1[1];
  long long v33 = *v1;
  long long v34 = v18;
  sub_1B596F6EC((uint64_t)v36 + 8, (uint64_t)v39, &qword_1E9D647E8);
  sub_1B596F6EC((uint64_t)v39, (uint64_t)&v40, &qword_1E9D647E8);
  if (BYTE8(v41) == 254)
  {
    LODWORD(v30) = 0;
    sub_1B596F750(&qword_1E9D64098, MEMORY[0x1E4F3D910]);
    long long v19 = v14;
    sub_1B5A1C8A8();
  }
  else
  {
    long long v19 = v14;
    long long v30 = v40;
    long long v31 = v41;
    v32[0] = v42[0];
    *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)((char *)v42 + 9);
    if (!*((void *)&v37 + 1))
    {
      sub_1B596F7C8((uint64_t)v39, (void (*)(void))sub_1B590F04C);
      sub_1B596F898((uint64_t)&v33);
      type metadata accessor for RemoteStateStore(0);
      sub_1B596F750((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
      uint64_t result = sub_1B5A1A908();
      __break(1u);
      return result;
    }
    sub_1B596F7C8((uint64_t)v39, (void (*)(void))sub_1B590F04C);
    uint64_t v20 = swift_retain();
    sub_1B5947D20(v20, (uint64_t)v12);
    swift_release();
    sub_1B596F7C8((uint64_t)v39, (void (*)(void))sub_1B590F034);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v12, v5);
  }
  uint64_t v27 = v3;
  uint64_t v28 = v2;
  if ((_BYTE)v34)
  {
    if (v34 == 1) {
      uint64_t v21 = sub_1B5A1AA48();
    }
    else {
      uint64_t v21 = sub_1B5A1AA38();
    }
  }
  else
  {
    uint64_t v21 = sub_1B5A1AA28();
  }
  v25[0] = *((void *)&v34 + 1);
  v25[1] = v21;
  uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v9, v19, v5);
  MEMORY[0x1F4188790](v22);
  v25[-2] = &v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B5943808();
  uint64_t v23 = v26;
  sub_1B5A1A498();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v23, v28);
}

uint64_t sub_1B596E988()
{
  return sub_1B5A1BB28();
}

uint64_t sub_1B596EA58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B596EA78(a1, (uint64_t)&unk_1F0E9B980, a2);
}

uint64_t sub_1B596EA78@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v55 = a3;
  uint64_t v4 = sub_1B5A1A2A8();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  MEMORY[0x1F4188790](v4);
  char v59 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D647F0);
  uint64_t v60 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v102 = 1;
  type metadata accessor for RemoteStateStore(0);
  sub_1B596F750((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v9 = sub_1B5A1A918();
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  uint64_t v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B596F95C();
  swift_retain();
  uint64_t v13 = v104;
  sub_1B5A1C838();
  if (v13)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    swift_bridgeObjectRelease();
    sub_1B596F814(0, 0, 0, 0xFEu, 0, 0, 0, 0, (void (*)(void))sub_1B590F034);
    return swift_release();
  }
  else
  {
    uint64_t v14 = v59;
    uint64_t v104 = v11;
    LOBYTE(v71) = 0;
    uint64_t v15 = sub_1B5A1C598();
    long long v18 = v16;
    char v54 = v8;
    uint64_t v19 = v60;
    if (v16)
    {
      uint64_t v53 = v15;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v53 = sub_1B5A1A288();
      long long v18 = v20;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v58);
    }
    LOBYTE(v62) = 1;
    sub_1B596F9B0();
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    char v59 = v18;
    uint64_t v21 = v71;
    int v22 = v72;
    char v102 = (char)v72;
    LOBYTE(v71) = 2;
    sub_1B5A1C598();
    LODWORD(v57) = v22;
    if (v23)
    {
      unint64_t v24 = sub_1B5A1C558();
      swift_bridgeObjectRelease();
      if (v24 >= 3) {
        int v25 = 1;
      }
      else {
        int v25 = v24;
      }
      LODWORD(v58) = v25;
      uint64_t v19 = v60;
    }
    else
    {
      LODWORD(v58) = 1;
    }
    uint64_t v26 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    LOBYTE(v62) = 3;
    sub_1B592FA5C();
    uint64_t v27 = v6;
    uint64_t v28 = (uint64_t)v54;
    sub_1B5A1C5B8();
    if (v71) {
      uint64_t v29 = v71;
    }
    else {
      uint64_t v29 = MEMORY[0x1E4FBC860];
    }
    uint64_t v30 = sub_1B59196AC(v29);
    swift_bridgeObjectRelease();
    char v91 = 4;
    sub_1B596FA04();
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v28, v27);
    uint64_t v31 = (uint64_t)v92;
    uint64_t v32 = v93;
    uint64_t v33 = v95;
    uint64_t v34 = v96;
    uint64_t v51 = v97;
    uint64_t v52 = v94;
    uint64_t v60 = v98;
    LODWORD(v56) = v99;
    char v54 = v92;
    uint64_t v50 = v26;
    sub_1B596F814((uint64_t)v92, v93, v94, v95, v96, v97, v98, v99, (void (*)(void))sub_1B590F04C);
    uint64_t v46 = (void (*)(void))sub_1B590F034;
    sub_1B596F814(0, 0, 0, 0xFEu, 0, 0, 0, 0, (void (*)(void))sub_1B590F034);
    *(void *)&long long v62 = v53;
    *((void *)&v62 + 1) = v59;
    LOBYTE(v63) = v58;
    *((void *)&v63 + 1) = v26;
    LOBYTE(v64) = v57;
    *((void *)&v64 + 1) = v30;
    *(void *)&long long v65 = MEMORY[0x1E4FBC860];
    *((void *)&v65 + 1) = v31;
    uint64_t v48 = v33;
    uint64_t v49 = v32;
    uint64_t v36 = v51;
    uint64_t v35 = v52;
    *(void *)&long long v66 = v32;
    *((void *)&v66 + 1) = v52;
    *(void *)&long long v67 = v33;
    *((void *)&v67 + 1) = v34;
    uint64_t v47 = v34;
    *(void *)&long long v68 = v51;
    *((void *)&v68 + 1) = v60;
    LOBYTE(v69) = v56;
    *((void *)&v69 + 1) = v9;
    uint64_t v70 = v104;
    sub_1B596F898((uint64_t)&v62);
    swift_release();
    uint64_t v37 = v32;
    uint64_t v38 = v36;
    uint64_t v39 = v60;
    LOBYTE(v36) = v56;
    sub_1B596F814((uint64_t)v54, v37, v35, v33, v34, v38, v60, v56, v46);
    long long v40 = v59;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v41 = v69;
    uint64_t v42 = v55;
    *(_OWORD *)(v55 + 96) = v68;
    *(_OWORD *)(v42 + 112) = v41;
    *(void *)(v42 + 128) = v70;
    long long v43 = v65;
    *(_OWORD *)(v42 + 32) = v64;
    *(_OWORD *)(v42 + 48) = v43;
    long long v44 = v67;
    *(_OWORD *)(v42 + 64) = v66;
    *(_OWORD *)(v42 + 80) = v44;
    long long v45 = v63;
    *(_OWORD *)uint64_t v42 = v62;
    *(_OWORD *)(v42 + 16) = v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    uint64_t v71 = v53;
    char v72 = v40;
    char v73 = v58;
    *(_DWORD *)uint64_t v74 = v103[0];
    *(_DWORD *)&v74[3] = *(_DWORD *)((char *)v103 + 3);
    uint64_t v75 = v50;
    char v76 = v102;
    *(_DWORD *)uint64_t v77 = *(_DWORD *)v101;
    *(_DWORD *)&v77[3] = *(_DWORD *)&v101[3];
    uint64_t v78 = v30;
    uint64_t v79 = MEMORY[0x1E4FBC860];
    uint64_t v80 = (uint64_t)v54;
    uint64_t v81 = v49;
    uint64_t v82 = v52;
    uint64_t v83 = v48;
    uint64_t v84 = v47;
    uint64_t v85 = v51;
    uint64_t v86 = v39;
    char v87 = v36;
    *(_DWORD *)uint64_t v88 = *(_DWORD *)v100;
    *(_DWORD *)&v88[3] = *(_DWORD *)&v100[3];
    uint64_t v89 = v9;
    uint64_t v90 = v104;
    return sub_1B596FA58((uint64_t)&v71);
  }
}

uint64_t sub_1B596F1D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B596F214(&qword_1E9D633E8, (void (*)(uint64_t))sub_1B596E514, &qword_1E9D633F0, a1);
}

uint64_t sub_1B596F214@<X0>(uint64_t *a1@<X2>, void (*a2)(uint64_t)@<X3>, unint64_t *a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v18 - v14;
  a2(v13);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v15, v8);
  sub_1B59095C8(a3, a1);
  uint64_t v16 = sub_1B5A1BA88();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  *a4 = v16;
  return result;
}

uint64_t sub_1B596F370()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B596F38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B596F3B8(a1, a2, a3, (void (*)(void))sub_1B596F428, (void (*)(void))sub_1B591E29C);
}

uint64_t sub_1B596F3B8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B596F428()
{
  unint64_t result = qword_1E9D64798;
  if (!qword_1E9D64798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64798);
  }
  return result;
}

unint64_t sub_1B596F47C(uint64_t a1)
{
  unint64_t result = sub_1B596F4A4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B596F4A4()
{
  unint64_t result = qword_1E9D647A0;
  if (!qword_1E9D647A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D647A0);
  }
  return result;
}

unint64_t sub_1B596F4F8(uint64_t a1)
{
  unint64_t result = sub_1B596F520();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B596F520()
{
  unint64_t result = qword_1E9D647A8;
  if (!qword_1E9D647A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D647A8);
  }
  return result;
}

unint64_t sub_1B596F574(uint64_t a1)
{
  unint64_t result = sub_1B596F59C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B596F59C()
{
  unint64_t result = qword_1E9D647B0;
  if (!qword_1E9D647B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D647B0);
  }
  return result;
}

unint64_t sub_1B596F5F0(uint64_t a1)
{
  unint64_t result = sub_1B596F618();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B596F618()
{
  unint64_t result = qword_1E9D647B8;
  if (!qword_1E9D647B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D647B8);
  }
  return result;
}

unint64_t sub_1B596F66C(uint64_t a1)
{
  unint64_t result = sub_1B596F694();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B596F694()
{
  unint64_t result = qword_1E9D647C0;
  if (!qword_1E9D647C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D647C0);
  }
  return result;
}

uint64_t sub_1B596F6EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B596F750(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B596F798()
{
  return sub_1B596E988();
}

uint64_t sub_1B596F7C8(uint64_t a1, void (*a2)(void))
{
  return a1;
}

void sub_1B596F814(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void))
{
  if (a4 != 254)
  {
    a9();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a9)(a5, a6, a7, a8);
  }
}

uint64_t sub_1B596F898(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v8 = *(unsigned __int8 *)(a1 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B596F814(v10, v2, v3, v4, v5, v6, v7, v8, (void (*)(void))sub_1B590F04C);
  swift_retain();
  return a1;
}

unint64_t sub_1B596F95C()
{
  unint64_t result = qword_1E9D647F8;
  if (!qword_1E9D647F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D647F8);
  }
  return result;
}

unint64_t sub_1B596F9B0()
{
  unint64_t result = qword_1E9D64800;
  if (!qword_1E9D64800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64800);
  }
  return result;
}

unint64_t sub_1B596FA04()
{
  unint64_t result = qword_1E9D64808;
  if (!qword_1E9D64808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64808);
  }
  return result;
}

uint64_t sub_1B596FA58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v8 = *(unsigned __int8 *)(a1 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B596F814(v10, v2, v3, v4, v5, v6, v7, v8, (void (*)(void))sub_1B590F034);
  swift_release();
  return a1;
}

uint64_t sub_1B596FB1C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64810);
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B596F750((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v9 = sub_1B5A1A918();
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B596FFF0();
  swift_retain();
  uint64_t v13 = v36;
  sub_1B5A1C838();
  if (v13)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = v11;
    uint64_t v14 = v33;
    char v41 = 0;
    uint64_t v15 = sub_1B5A1C598();
    uint64_t v18 = v16;
    if (v16)
    {
      uint64_t v30 = v15;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v30 = sub_1B5A1A288();
      uint64_t v18 = v19;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v32);
    }
    uint64_t v20 = v8;
    char v39 = 2;
    sub_1B5970044();
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    switch(v40)
    {
      case 1:
        uint64_t v21 = sub_1B5A1BC58();
        break;
      case 2:
        uint64_t v21 = sub_1B5A1BC68();
        break;
      case 3:
        uint64_t v21 = sub_1B5A1BC28();
        break;
      case 4:
        uint64_t v21 = sub_1B5A1BC38();
        break;
      case 5:
        uint64_t v21 = sub_1B5A1BBE8();
        break;
      case 6:
        uint64_t v21 = sub_1B5A1BBF8();
        break;
      case 7:
        uint64_t v21 = sub_1B5A1BC08();
        break;
      case 8:
        uint64_t v21 = sub_1B5A1BC18();
        break;
      default:
        uint64_t v21 = sub_1B5A1BC48();
        break;
    }
    uint64_t v23 = v21;
    uint64_t v33 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    char v38 = 3;
    sub_1B592FA5C();
    sub_1B5A1C5B8();
    uint64_t v32 = v23;
    unint64_t v24 = v20;
    if (v37) {
      uint64_t v25 = v37;
    }
    else {
      uint64_t v25 = MEMORY[0x1E4FBC860];
    }
    uint64_t v26 = sub_1B59196AC(v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v14 = v30;
    v14[1] = v18;
    uint64_t v28 = v33;
    v14[2] = v32;
    v14[3] = (uint64_t)v28;
    v14[4] = v26;
    v14[5] = v27;
    uint64_t v29 = v36;
    v14[6] = v9;
    v14[7] = v29;
  }
  return result;
}

unint64_t sub_1B596FFF0()
{
  unint64_t result = qword_1E9D64818;
  if (!qword_1E9D64818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64818);
  }
  return result;
}

unint64_t sub_1B5970044()
{
  unint64_t result = qword_1E9D64820;
  if (!qword_1E9D64820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64820);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StackViewCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5970164);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StackViewCodingKeys()
{
  return &type metadata for StackViewCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LazyStackViewCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5970268);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyStackViewCodingKeys()
{
  return &type metadata for LazyStackViewCodingKeys;
}

uint64_t sub_1B59702A0()
{
  return sub_1B59095C8(&qword_1E9D633F0, &qword_1E9D633E8);
}

uint64_t sub_1B59702DC()
{
  return sub_1B59095C8(&qword_1E9D633D8, &qword_1E9D633D0);
}

uint64_t sub_1B5970318()
{
  return sub_1B59095C8(&qword_1E9D633A8, &qword_1E9D633A0);
}

unint64_t sub_1B5970360()
{
  unint64_t result = qword_1E9D64828;
  if (!qword_1E9D64828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64828);
  }
  return result;
}

unint64_t sub_1B59703B8()
{
  unint64_t result = qword_1E9D64830;
  if (!qword_1E9D64830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64830);
  }
  return result;
}

unint64_t sub_1B5970410()
{
  unint64_t result = qword_1E9D64838;
  if (!qword_1E9D64838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64838);
  }
  return result;
}

unint64_t sub_1B5970468()
{
  unint64_t result = qword_1E9D64840;
  if (!qword_1E9D64840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64840);
  }
  return result;
}

unint64_t sub_1B59704C0()
{
  unint64_t result = qword_1E9D64848;
  if (!qword_1E9D64848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64848);
  }
  return result;
}

unint64_t sub_1B5970518()
{
  unint64_t result = qword_1E9D64850;
  if (!qword_1E9D64850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64850);
  }
  return result;
}

uint64_t sub_1B597056C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B59705B8()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t destroy for NavigationLinkView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B5904A88(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 120);
  if (v2 != 255) {
    sub_1B591F344(*(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v2 & 1);
  }
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for NavigationLinkView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_1B5904B60(v5, v6, v7, v8);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  uint64_t v9 = (_OWORD *)(a1 + 48);
  uint64_t v10 = (_OWORD *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 72);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v11;
    *(void *)(a1 + 80) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 64);
    _OWORD *v9 = *v10;
    *(_OWORD *)(a1 + 64) = v13;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  int v14 = *(unsigned __int8 *)(a2 + 120);
  swift_bridgeObjectRetain();
  if (v14 == 255)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  }
  else
  {
    char v15 = v14 & 1;
    uint64_t v16 = *(void *)(a2 + 96);
    uint64_t v17 = *(void *)(a2 + 104);
    uint64_t v18 = *(void *)(a2 + 112);
    sub_1B5909638(v16, v17, v18, v15);
    *(void *)(a1 + 96) = v16;
    *(void *)(a1 + 104) = v17;
    *(void *)(a1 + 112) = v18;
    *(unsigned char *)(a1 + 120) = v15;
  }
  uint64_t v19 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v19;
  uint64_t v20 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v20;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NavigationLinkView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 40);
  sub_1B5904B60(v4, v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v7;
  sub_1B5904A88(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v12)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  else if (v12)
  {
    *(void *)(a1 + 72) = v12;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 48, a2 + 48);
    goto LABEL_8;
  }
  long long v13 = *(_OWORD *)(a2 + 48);
  long long v14 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v14;
LABEL_8:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v15 = (long long *)(a1 + 96);
  uint64_t v16 = (long long *)(a2 + 96);
  int v17 = *(unsigned __int8 *)(a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) == 255)
  {
    if (v17 == 255)
    {
      long long v19 = *v16;
      *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
      *char v15 = v19;
    }
    else
    {
      char v28 = v17 & 1;
      uint64_t v29 = *(void *)(a2 + 96);
      uint64_t v30 = *(void *)(a2 + 104);
      uint64_t v31 = *(void *)(a2 + 112);
      sub_1B5909638(v29, v30, v31, v17 & 1);
      *(void *)(a1 + 96) = v29;
      *(void *)(a1 + 104) = v30;
      *(void *)(a1 + 112) = v31;
      *(unsigned char *)(a1 + 120) = v28;
    }
  }
  else if (v17 == 255)
  {
    sub_1B5908FC0(a1 + 96, &qword_1E9D63930);
    long long v18 = *(_OWORD *)(a2 + 105);
    *char v15 = *v16;
    *(_OWORD *)(a1 + 105) = v18;
  }
  else
  {
    char v20 = v17 & 1;
    uint64_t v21 = *(void *)(a2 + 96);
    uint64_t v22 = *(void *)(a2 + 104);
    uint64_t v23 = *(void *)(a2 + 112);
    sub_1B5909638(v21, v22, v23, v17 & 1);
    uint64_t v24 = *(void *)(a1 + 96);
    uint64_t v25 = *(void *)(a1 + 104);
    uint64_t v26 = *(void *)(a1 + 112);
    char v27 = *(unsigned char *)(a1 + 120);
    *(void *)(a1 + 96) = v21;
    *(void *)(a1 + 104) = v22;
    *(void *)(a1 + 112) = v23;
    *(unsigned char *)(a1 + 120) = v20;
    sub_1B591F344(v24, v25, v26, v27);
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for NavigationLinkView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v6;
  sub_1B5904A88(v7, v8, v9, v10);
  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  long long v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  int v12 = *(unsigned __int8 *)(a1 + 120);
  if (v12 != 255)
  {
    int v13 = *(unsigned __int8 *)(a2 + 120);
    if (v13 != 255)
    {
      char v14 = v12 & 1;
      uint64_t v15 = *(void *)(a2 + 112);
      uint64_t v16 = *(void *)(a1 + 96);
      uint64_t v17 = *(void *)(a1 + 104);
      uint64_t v18 = *(void *)(a1 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(void *)(a1 + 112) = v15;
      *(unsigned char *)(a1 + 120) = v13 & 1;
      sub_1B591F344(v16, v17, v18, v14);
      goto LABEL_8;
    }
    sub_1B5908FC0(a1 + 96, &qword_1E9D63930);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
LABEL_8:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  uint64_t v19 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v19;
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationLinkView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 160)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NavigationLinkView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationLinkView()
{
  return &type metadata for NavigationLinkView;
}

ValueMetadata *type metadata accessor for NavigatingView()
{
  return &type metadata for NavigatingView;
}

uint64_t destroy for NavigationStackView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for NavigationStackView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for NavigationStackView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NavigationStackView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NavigationStackView()
{
  return &type metadata for NavigationStackView;
}

uint64_t sub_1B5970E2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63428);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v17[-v7];
  uint64_t v18 = v0;
  sub_1B5909890(v0 + 24, (uint64_t)v19, &qword_1E9D632B0);
  uint64_t v9 = v20;
  if (v20)
  {
    uint64_t v10 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    sub_1B5908FC0((uint64_t)v19, &qword_1E9D632B0);
    uint64_t v11 = 0;
  }
  uint64_t v22 = v11;
  sub_1B5909890(v1 + 64, (uint64_t)v19, &qword_1E9D632B0);
  uint64_t v12 = v20;
  if (v20)
  {
    uint64_t v13 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    sub_1B5908FC0((uint64_t)v19, &qword_1E9D632B0);
    uint64_t v14 = 0;
  }
  v19[0] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63440);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
  sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  sub_1B5A1BB38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_1B591E498();
  uint64_t v15 = sub_1B5A1BA88();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
  return v15;
}

uint64_t sub_1B59710FC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63518);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-v6];
  long long v12 = *(_OWORD *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63528);
  sub_1B5A1BA28();
  uint64_t v11 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  sub_1B59095C8(&qword_1E9D63530, &qword_1E9D62E80);
  sub_1B59095C8(&qword_1E9D63538, &qword_1E9D62E80);
  sub_1B59095C8(&qword_1E9D63540, &qword_1E9D62E80);
  sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  sub_1B591EF2C();
  sub_1B5A1A758();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  sub_1B59095C8(&qword_1E9D63520, &qword_1E9D63518);
  uint64_t v8 = sub_1B5A1BA88();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v8;
}

uint64_t sub_1B5971398()
{
  return sub_1B5A1BB28();
}

uint64_t sub_1B597146C@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5971478@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B5971484(uint64_t a1)
{
  unint64_t v2 = sub_1B59739C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59714C0(uint64_t a1)
{
  unint64_t v2 = sub_1B59739C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59714FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59710FC();
  *a1 = result;
  return result;
}

uint64_t sub_1B5971540()
{
  return sub_1B5A1A758();
}

double sub_1B59716CC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B59735CC(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1B5971710()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B597172C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B597304C(a1, a2, a3, (void (*)(void))sub_1B5971758, (void (*)(void))sub_1B591EF80);
}

unint64_t sub_1B5971758()
{
  unint64_t result = qword_1E9D64858;
  if (!qword_1E9D64858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64858);
  }
  return result;
}

uint64_t sub_1B59717AC(char a1)
{
  if (a1) {
    return 2003134838;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1B59717D0(char *a1, char *a2)
{
  return sub_1B59EF0F4(*a1, *a2);
}

uint64_t sub_1B59717DC()
{
  return sub_1B59F134C();
}

uint64_t sub_1B59717E4()
{
  return sub_1B59F4384();
}

uint64_t sub_1B59717EC()
{
  return sub_1B59F5A84();
}

uint64_t sub_1B59717F4@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5971800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59717AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B597182C()
{
  return sub_1B59717AC(*v0);
}

uint64_t sub_1B5971834@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B5971840(uint64_t a1)
{
  unint64_t v2 = sub_1B5973548();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B597187C(uint64_t a1)
{
  unint64_t v2 = sub_1B5973548();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59718B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_1B5A1A2A8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v20 = v4;
  uint64_t v21 = v5;
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D648B0);
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[5] = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B59732F0((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  void v28[6] = sub_1B5A1A918();
  v28[7] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5973548();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v12 = v22;
    LOBYTE(v24) = 0;
    uint64_t v13 = sub_1B5A1C598();
    uint64_t v16 = v14;
    if (v14)
    {
      uint64_t v17 = v13;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v17 = sub_1B5A1A288();
      uint64_t v16 = v18;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
    }
    v27[0] = v17;
    v27[1] = v16;
    char v29 = 1;
    uint64_t v25 = &type metadata for ViewContent;
    unint64_t v26 = sub_1B5914034();
    *(void *)&long long v24 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
    sub_1B5908BE8(&v24, (uint64_t)v28);
    sub_1B591F0DC((uint64_t)v27, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B597359C((uint64_t)v27);
  }
}

uint64_t sub_1B5971C18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63558);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  long long v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v12[-v8];
  uint64_t v13 = v1;
  sub_1B5A1A668();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_1B59095C8(&qword_1E9D63560, &qword_1E9D63558);
  uint64_t v10 = sub_1B5A1BA88();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  *a1 = v10;
  return result;
}

uint64_t sub_1B5971DA0()
{
  return sub_1B5A1A668();
}

uint64_t sub_1B5971DEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59718B8(a1, a2);
}

uint64_t sub_1B5971E04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5971E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B597304C(a1, a2, a3, (void (*)(void))sub_1B5971E4C, (void (*)(void))sub_1B591F034);
}

unint64_t sub_1B5971E4C()
{
  unint64_t result = qword_1E9D64860;
  if (!qword_1E9D64860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64860);
  }
  return result;
}

uint64_t sub_1B5971EA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v50 = a1;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D635A8);
  uint64_t v43 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v42 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64888);
  MEMORY[0x1F4188790](v45);
  uint64_t v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63570);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v49 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63598);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(uint64_t (**)(void, void))(v1 + 24);
  uint64_t v11 = *(void *)(v1 + 32);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 40);
  uint64_t v57 = v9;
  uint64_t v58 = v10;
  uint64_t v59 = v11;
  LOBYTE(v60) = v12;
  uint64_t v13 = *(void *)(v1 + 128);
  if (!v13)
  {
    uint64_t v2 = *(void *)(v1 + 136);
    sub_1B5904B60(v9, (uint64_t)v10, v11, v12);
    goto LABEL_11;
  }
  sub_1B5904B60(v9, (uint64_t)v10, v11, v12);
  uint64_t v14 = swift_retain();
  unint64_t v15 = StringResolvable.resolved(with:)(v14);
  uint64_t v17 = v16;
  sub_1B5904A88(v9, (uint64_t)v10, v11, v12);
  swift_release();
  sub_1B5909890(v2 + 48, (uint64_t)&v53, &qword_1E9D632B0);
  if (v55)
  {
    sub_1B5908BE8(&v53, (uint64_t)&v57);
    unint64_t v51 = v15;
    uint64_t v52 = v17;
    uint64_t v18 = v60;
    uint64_t v19 = v61;
    __swift_project_boxed_opaque_existential_1(&v57, v60);
    uint64_t v9 = v19 + 24;
    uint64_t v10 = *(uint64_t (**)(void, void))(v19 + 24);
    swift_bridgeObjectRetain();
    uint64_t v20 = v10(v18, v19);
    type metadata accessor for RemoteStateStore(0);
    sub_1B59732F0((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    swift_retain();
    uint64_t v21 = sub_1B5A1A348();
    uint64_t v11 = *(void *)(v2 + 144);
    if (!v11)
    {
      uint64_t v2 = *(void *)(v2 + 152);
      type metadata accessor for LocalStateStore(0);
      char v39 = &qword_1E9D62B98;
      for (unint64_t i = (void (*)(uint64_t))type metadata accessor for LocalStateStore;
            ;
            unint64_t i = (void (*)(uint64_t))type metadata accessor for RemoteStateStore)
      {
        sub_1B59732F0(v39, i);
        sub_1B5A1A908();
        __break(1u);
LABEL_14:
        uint64_t v2 = *(void *)(v2 + 136);
        sub_1B5909638(v9, (uint64_t)v10, v11, (char)v8);
LABEL_11:
        type metadata accessor for RemoteStateStore(0);
        char v39 = (unint64_t *)&qword_1E9D62B90;
      }
    }
    uint64_t v22 = v21;
    type metadata accessor for LocalStateStore(0);
    sub_1B59732F0(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
    swift_retain();
    uint64_t v23 = sub_1B5A1A348();
    *(void *)&long long v53 = v20;
    *((void *)&v53 + 1) = v22;
    uint64_t v54 = v13;
    uint64_t v55 = v23;
    uint64_t v56 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64890);
    sub_1B5973344();
    sub_1B5943480();
    sub_1B5A1A648();
    swift_bridgeObjectRelease();
    uint64_t v24 = v44;
    uint64_t v25 = v46;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v47, v8, v46);
    swift_storeEnumTagMultiPayload();
    sub_1B59095C8(&qword_1E9D63590, &qword_1E9D63598);
    sub_1B59095C8(&qword_1E9D635A0, &qword_1E9D635A8);
    uint64_t v26 = (uint64_t)v49;
    sub_1B5A1AE58();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63588);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
    sub_1B5973288(v26, v50);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
  }
  else
  {
    sub_1B5908FC0((uint64_t)&v53, &qword_1E9D632B0);
    int v29 = *(unsigned __int8 *)(v2 + 120);
    if (v29 == 255)
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = v50;
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63588);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
    }
    else
    {
      uint64_t v9 = *(void *)(v2 + 96);
      uint64_t v10 = *(uint64_t (**)(void, void))(v2 + 104);
      uint64_t v11 = *(void *)(v2 + 112);
      LOBYTE(v8) = v29 & 1;
      if (!*(void *)(v2 + 128)) {
        goto LABEL_14;
      }
      sub_1B592C3E8(*(void *)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112), *(unsigned char *)(v2 + 120));
      uint64_t v30 = swift_retain();
      sub_1B59B3D0C(v30, v9, (uint64_t)v10, v11, v29 & 1, &v57);
      swift_release();
      sub_1B592C43C(v9, (uint64_t)v10, v11, v29);
      uint64_t v33 = v57;
      uint64_t v57 = v15;
      uint64_t v58 = v17;
      *(void *)&long long v53 = v33;
      sub_1B5943480();
      sub_1B5958CA4();
      sub_1B59519BC();
      sub_1B591EF2C();
      swift_retain();
      uint64_t v34 = v42;
      sub_1B5A1A658();
      uint64_t v35 = v43;
      uint64_t v36 = v48;
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v47, v34, v48);
      swift_storeEnumTagMultiPayload();
      sub_1B59095C8(&qword_1E9D63590, &qword_1E9D63598);
      sub_1B59095C8(&qword_1E9D635A0, &qword_1E9D635A8);
      uint64_t v37 = (uint64_t)v49;
      sub_1B5A1AE58();
      swift_release();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63588);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 0, 1, v38);
      return sub_1B5973288(v37, v50);
    }
  }
}

uint64_t sub_1B59726BC(char a1)
{
  return qword_1B5A26590[a1];
}

uint64_t sub_1B59726DC(char *a1, char *a2)
{
  return sub_1B59EE02C(*a1, *a2);
}

uint64_t sub_1B59726E8()
{
  return sub_1B59F13BC();
}

uint64_t sub_1B59726F0()
{
  return sub_1B59F394C();
}

uint64_t sub_1B59726F8()
{
  return sub_1B59F65EC();
}

uint64_t sub_1B5972700@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5974080();
  *a1 = result;
  return result;
}

uint64_t sub_1B5972730@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59726BC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B597275C()
{
  return sub_1B59726BC(*v0);
}

uint64_t sub_1B5972764@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5974080();
  *a1 = result;
  return result;
}

uint64_t sub_1B597278C(uint64_t a1)
{
  unint64_t v2 = sub_1B59733E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59727C8(uint64_t a1)
{
  unint64_t v2 = sub_1B59733E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5972804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = sub_1B5A1A2A8();
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D648A0);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v40 = v50;
  memset(v50, 0, sizeof(v50));
  uint64_t v51 = 0;
  uint64_t v52 = MEMORY[0x1E4FBC860];
  uint64_t v54 = 0;
  long long v53 = 0uLL;
  unsigned __int8 v55 = -1;
  type metadata accessor for RemoteStateStore(0);
  sub_1B59732F0((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v56 = sub_1B5A1A918();
  uint64_t v57 = v10;
  type metadata accessor for LocalStateStore(0);
  sub_1B59732F0(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
  uint64_t v58 = sub_1B5A1A918();
  uint64_t v59 = v11;
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v41 = a1;
  uint64_t v13 = (void *)a1;
  uint64_t v14 = v9;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_1B59733E4();
  sub_1B5A1C838();
  if (v2)
  {
    uint64_t v20 = v40;
    __swift_destroy_boxed_opaque_existential_1(v41);
    sub_1B5908FC0(v20, &qword_1E9D632B0);
    swift_bridgeObjectRelease();
    sub_1B592C43C(v53, *((uint64_t *)&v53 + 1), v54, v55);
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v15 = v38;
    uint64_t v36 = v4;
    uint64_t v16 = v37;
    uint64_t v17 = v39;
    LOBYTE(v42) = 0;
    uint64_t v18 = sub_1B5A1C598();
    uint64_t v22 = v19;
    uint64_t v35 = v7;
    if (v19)
    {
      uint64_t v23 = v18;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v23 = sub_1B5A1A288();
      uint64_t v22 = v24;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v36);
    }
    uint64_t v25 = v17;
    v46[0] = v23;
    v46[1] = v22;
    char v60 = 1;
    sub_1B5904A34();
    uint64_t v26 = v35;
    sub_1B5A1C5D8();
    uint64_t v27 = v16;
    long long v47 = v42;
    uint64_t v48 = v43;
    char v49 = (char)v44;
    LOBYTE(v42) = 2;
    if (sub_1B5A1C5F8())
    {
      char v60 = 2;
      uint64_t v44 = &type metadata for ViewContent;
      unint64_t v45 = sub_1B5914034();
      *(void *)&long long v42 = swift_allocObject();
      sub_1B5914100();
      sub_1B5A1C5D8();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v26);
      sub_1B59734E0((uint64_t)&v42, v40);
    }
    else
    {
      LOBYTE(v42) = 3;
      if (sub_1B5A1C5F8())
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
        char v60 = 3;
        sub_1B59095C8((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
        sub_1B5A1C5D8();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v26);
        long long v40 = v42;
        uint64_t v32 = v43;
        unsigned __int8 v33 = v44;
        sub_1B592C43C(v53, *((uint64_t *)&v53 + 1), v54, v55);
        long long v53 = v40;
        uint64_t v54 = v32;
        unsigned __int8 v55 = v33;
      }
      else
      {
        if (qword_1E9D62B20 != -1) {
          swift_once();
        }
        uint64_t v28 = sub_1B5A1A328();
        __swift_project_value_buffer(v28, (uint64_t)qword_1E9D910D0);
        int v29 = sub_1B5A1A308();
        os_log_type_t v30 = sub_1B5A1C258();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v31 = 0;
          _os_log_impl(&dword_1B58FD000, v29, v30, "NavigationLinkView did not recieve a destination or value", v31, 2u);
          MEMORY[0x1BA9A4780](v31, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v35);
      }
    }
    sub_1B591F398((uint64_t)v46, v25);
    __swift_destroy_boxed_opaque_existential_1(v41);
    return sub_1B5973438((uint64_t)v46);
  }
}

uint64_t sub_1B5972ECC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63570);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1B5971EA0((uint64_t)&v10 - v6);
  sub_1B5909890((uint64_t)v7, (uint64_t)v5, &qword_1E9D63570);
  sub_1B5973A18(&qword_1E9D63578, &qword_1E9D63570, (void (*)(void))sub_1B591F1A4);
  uint64_t v8 = sub_1B5A1BA88();
  uint64_t result = sub_1B5908FC0((uint64_t)v7, &qword_1E9D63570);
  *a1 = v8;
  return result;
}

uint64_t sub_1B5972FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5972804(a1, a2);
}

uint64_t sub_1B5973004()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5973020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B597304C(a1, a2, a3, (void (*)(void))sub_1B59730BC, (void (*)(void))sub_1B591F264);
}

uint64_t sub_1B597304C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B59730BC()
{
  unint64_t result = qword_1E9D64868;
  if (!qword_1E9D64868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64868);
  }
  return result;
}

unint64_t sub_1B5973110(uint64_t a1)
{
  unint64_t result = sub_1B5973138();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5973138()
{
  unint64_t result = qword_1E9D64870;
  if (!qword_1E9D64870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64870);
  }
  return result;
}

unint64_t sub_1B597318C(uint64_t a1)
{
  unint64_t result = sub_1B59731B4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B59731B4()
{
  unint64_t result = qword_1E9D64878;
  if (!qword_1E9D64878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64878);
  }
  return result;
}

unint64_t sub_1B5973208(uint64_t a1)
{
  unint64_t result = sub_1B5973230();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5973230()
{
  unint64_t result = qword_1E9D64880;
  if (!qword_1E9D64880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64880);
  }
  return result;
}

uint64_t sub_1B5973288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B59732F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B5973344()
{
  unint64_t result = qword_1E9D64898;
  if (!qword_1E9D64898)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64890);
    sub_1B59080C4();
    sub_1B59095C8(&qword_1E9D62CF0, &qword_1E9D62CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64898);
  }
  return result;
}

unint64_t sub_1B59733E4()
{
  unint64_t result = qword_1E9D648A8;
  if (!qword_1E9D648A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D648A8);
  }
  return result;
}

uint64_t sub_1B5973438(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5973468()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B59734E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D632B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B5973548()
{
  unint64_t result = qword_1E9D648B8;
  if (!qword_1E9D648B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D648B8);
  }
  return result;
}

uint64_t sub_1B597359C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B59735CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D648C0);
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
  sub_1B5A1BA18();
  uint64_t v10 = v32;
  uint64_t v9 = v33;
  uint64_t v11 = a1[3];
  os_log_type_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1B59739C4();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v12 = v31;
  sub_1B5A1C838();
  if (v12)
  {
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = v3;
    uint64_t v14 = v27;
    uint64_t v13 = v28;
    LOBYTE(v32) = 0;
    uint64_t v15 = sub_1B5A1C598();
    if (v16)
    {
      uint64_t v25 = v15;
      uint64_t v18 = v13;
      uint64_t v19 = MEMORY[0x1E4FBC860];
      uint64_t v26 = v16;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v25 = sub_1B5A1A288();
      uint64_t v26 = v20;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v31);
      uint64_t v18 = v13;
      uint64_t v19 = MEMORY[0x1E4FBC860];
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    LOBYTE(v34) = 1;
    sub_1B5973A18((unint64_t *)&qword_1E9D63B38, &qword_1E9D63B30, (void (*)(void))sub_1B5914100);
    swift_bridgeObjectRetain();
    sub_1B5A1C5D8();
    uint64_t v21 = sub_1B59196AC(v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v6);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v19;
    uint64_t v23 = v26;
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v18 = v25;
    v18[1] = v23;
    long long v18[2] = v21;
    v18[3] = v22;
    v18[4] = v10;
    v18[5] = v9;
  }
  return result;
}

unint64_t sub_1B59739C4()
{
  unint64_t result = qword_1E9D648C8;
  if (!qword_1E9D648C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D648C8);
  }
  return result;
}

uint64_t sub_1B5973A18(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationStackView.CodingKeys()
{
  return &type metadata for NavigationStackView.CodingKeys;
}

unsigned char *_s6LiftUI19NavigationStackViewV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5973B64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigatingView.CodingKeys()
{
  return &type metadata for NavigatingView.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for NavigationLinkView.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5973C68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationLinkView.CodingKeys()
{
  return &type metadata for NavigationLinkView.CodingKeys;
}

uint64_t sub_1B5973CA0()
{
  return sub_1B5973A18(&qword_1E9D63578, &qword_1E9D63570, (void (*)(void))sub_1B591F1A4);
}

uint64_t sub_1B5973CF0()
{
  return sub_1B59095C8(&qword_1E9D63560, &qword_1E9D63558);
}

uint64_t sub_1B5973D2C()
{
  return sub_1B59095C8(&qword_1E9D63520, &qword_1E9D63518);
}

unint64_t sub_1B5973D6C()
{
  unint64_t result = qword_1E9D648D0;
  if (!qword_1E9D648D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D648D0);
  }
  return result;
}

unint64_t sub_1B5973DC4()
{
  unint64_t result = qword_1E9D648D8;
  if (!qword_1E9D648D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D648D8);
  }
  return result;
}

unint64_t sub_1B5973E1C()
{
  unint64_t result = qword_1E9D648E0;
  if (!qword_1E9D648E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D648E0);
  }
  return result;
}

unint64_t sub_1B5973E74()
{
  unint64_t result = qword_1E9D648E8;
  if (!qword_1E9D648E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D648E8);
  }
  return result;
}

unint64_t sub_1B5973ECC()
{
  unint64_t result = qword_1E9D648F0;
  if (!qword_1E9D648F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D648F0);
  }
  return result;
}

unint64_t sub_1B5973F24()
{
  unint64_t result = qword_1E9D648F8;
  if (!qword_1E9D648F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D648F8);
  }
  return result;
}

unint64_t sub_1B5973F7C()
{
  unint64_t result = qword_1E9D64900;
  if (!qword_1E9D64900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64900);
  }
  return result;
}

unint64_t sub_1B5973FD4()
{
  unint64_t result = qword_1E9D64908;
  if (!qword_1E9D64908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64908);
  }
  return result;
}

unint64_t sub_1B597402C()
{
  unint64_t result = qword_1E9D64910;
  if (!qword_1E9D64910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64910);
  }
  return result;
}

uint64_t sub_1B5974080()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t destroy for ColorShapeStyle(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ColorShapeStyle(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ColorShapeStyle(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ColorShapeStyle(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorShapeStyle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorShapeStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorShapeStyle()
{
  return &type metadata for ColorShapeStyle;
}

uint64_t sub_1B597429C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59742FC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5974360(uint64_t a1)
{
  unint64_t v2 = sub_1B5974704();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B597439C(uint64_t a1)
{
  unint64_t v2 = sub_1B5974704();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59743D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64920);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x1E4FBC860];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5974704();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = 1;
    sub_1B5939638();
    sub_1B5A1C5D8();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    v13[0] = *(_OWORD *)&v10[8];
    v13[1] = v11;
    uint64_t v14 = v12;
    sub_1B5974758((uint64_t)v13, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B59747C8((uint64_t)v13);
  }
}

uint64_t sub_1B5974594@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B591EE14(v2, (uint64_t)v10);
  uint64_t v5 = v11;
  uint64_t v6 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v5, v6);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  uint64_t v9 = MEMORY[0x1E4F3EB78];
  a2[3] = MEMORY[0x1E4F3EB98];
  a2[4] = v9;
  *a2 = v7;
  return result;
}

uint64_t sub_1B597463C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B5974644(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t sub_1B5974670@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59743D8(a1, a2);
}

unint64_t sub_1B5974688(uint64_t a1)
{
  unint64_t result = sub_1B59746B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59746B0()
{
  unint64_t result = qword_1E9D64918;
  if (!qword_1E9D64918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64918);
  }
  return result;
}

unint64_t sub_1B5974704()
{
  unint64_t result = qword_1E9D64928;
  if (!qword_1E9D64928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64928);
  }
  return result;
}

uint64_t sub_1B5974758(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1B59747C8(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ColorShapeStyle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59748C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorShapeStyle.CodingKeys()
{
  return &type metadata for ColorShapeStyle.CodingKeys;
}

unint64_t sub_1B5974900()
{
  unint64_t result = qword_1E9D64930;
  if (!qword_1E9D64930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64930);
  }
  return result;
}

unint64_t sub_1B5974958()
{
  unint64_t result = qword_1E9D64938;
  if (!qword_1E9D64938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64938);
  }
  return result;
}

unint64_t sub_1B59749B0()
{
  unint64_t result = qword_1E9D64940;
  if (!qword_1E9D64940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64940);
  }
  return result;
}

void *sub_1B5974A04(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1B5A1B938();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1B5974AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1B5A1B938();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

_OWORD *sub_1B5974B38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1B5A1B938();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

void *sub_1B5974BB4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1B5A1B938();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1B5974C48(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1B5A1B938();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_OWORD *sub_1B5974CC4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1B5A1B938();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t sub_1B5974D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5974D54);
}

uint64_t sub_1B5974D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1B5A1B938();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1B5974DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5974DD8);
}

uint64_t sub_1B5974DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1B5A1B938();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for ResizableImageModifier()
{
  uint64_t result = qword_1E9D64948;
  if (!qword_1E9D64948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B5974E98()
{
  uint64_t result = sub_1B5A1B938();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B5974F30(char a1)
{
  if (a1) {
    return 0x68637465727473;
  }
  else {
    return 1701603700;
  }
}

uint64_t sub_1B5974F60(char *a1, char *a2)
{
  return sub_1B59EE6CC(*a1, *a2);
}

uint64_t sub_1B5974F6C()
{
  return sub_1B59F149C();
}

uint64_t sub_1B5974F74()
{
  return sub_1B59F3D70();
}

uint64_t sub_1B5974F7C()
{
  return sub_1B59F60C8();
}

uint64_t sub_1B5974F84@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5974F90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5974F30(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5974FBC()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B597501C()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B597506C(char a1)
{
  return qword_1B5A26B60[a1];
}

uint64_t sub_1B597508C(char a1)
{
  if (a1) {
    return 0x7465736E49706163;
  }
  else {
    return 0x676E697A69736572;
  }
}

uint64_t sub_1B59750D0(char *a1, char *a2)
{
  return sub_1B59EF214(*a1, *a2);
}

uint64_t sub_1B59750DC()
{
  return sub_1B59F1518();
}

uint64_t sub_1B59750E4()
{
  return sub_1B59F4434();
}

uint64_t sub_1B59750EC()
{
  return sub_1B59F59B0();
}

uint64_t sub_1B59750F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5975E68();
  *a1 = result;
  return result;
}

uint64_t sub_1B5975124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B597506C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5975150()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B59751B0()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B5975200(char *a1, char *a2)
{
  return sub_1B59ED60C(*a1, *a2);
}

uint64_t sub_1B597520C()
{
  return sub_1B59F1584();
}

uint64_t sub_1B5975214()
{
  return sub_1B59F3364();
}

uint64_t sub_1B597521C()
{
  return sub_1B59F6C58();
}

uint64_t sub_1B5975224@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5975230@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B597508C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B597525C()
{
  return sub_1B597508C(*v0);
}

uint64_t sub_1B5975264@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59752C8(uint64_t a1)
{
  unint64_t v2 = sub_1B597582C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5975304(uint64_t a1)
{
  unint64_t v2 = sub_1B597582C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5975340@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64960);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v39 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B5A1B938();
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64968);
  uint64_t v37 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ResizableImageModifier();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B597582C();
  uint64_t v13 = v41;
  sub_1B5A1C838();
  if (v13)
  {
    uint64_t v20 = (uint64_t)a1;
  }
  else
  {
    uint64_t v41 = v12;
    uint64_t v34 = v7;
    uint64_t v35 = v10;
    uint64_t v14 = v37;
    uint64_t v15 = v38;
    char v16 = v39;
    uint64_t v17 = v5;
    char v44 = 1;
    sub_1B5975880();
    sub_1B5A1C5B8();
    uint64_t v18 = v41;
    *uint64_t v41 = 0u;
    v18[1] = 0u;
    char v42 = 0;
    sub_1B59758D4();
    uint64_t v19 = v40;
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v19);
    uint64_t v22 = v15;
    if (v43 == 2)
    {
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      uint64_t v24 = (uint64_t)v16;
      uint64_t v25 = v17;
      v23(v16, 1, 1, v17);
      uint64_t v26 = v34;
      (*(void (**)(char *, void, uint64_t))(v22 + 104))(v34, *MEMORY[0x1E4F3EBF8], v17);
      sub_1B5975928(v24);
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    }
    else
    {
      uint64_t v28 = *(void (**)(char *, void, uint64_t))(v15 + 104);
      if (v43) {
        uint64_t v29 = (unsigned int *)MEMORY[0x1E4F3EBF8];
      }
      else {
        uint64_t v29 = (unsigned int *)MEMORY[0x1E4F3EBE8];
      }
      os_log_type_t v30 = v16;
      uint64_t v25 = v17;
      v28(v16, *v29, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v17);
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
      uint64_t v26 = v34;
      v27(v34, v30, v25);
    }
    uint64_t v31 = v36;
    uint64_t v32 = a1;
    uint64_t v33 = (uint64_t)v41;
    v27((char *)v41 + *(int *)(v35 + 20), v26, v25);
    sub_1B5975988(v33, v31);
    uint64_t v20 = (uint64_t)v32;
  }
  return __swift_destroy_boxed_opaque_existential_1(v20);
}

uint64_t sub_1B5975778(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F40FC5E8]((char *)v2 + *(int *)(a2 + 20), a1, *v2, v2[1], v2[2], v2[3]);
}

uint64_t sub_1B5975794@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5975340(a1, a2);
}

unint64_t sub_1B59757AC(uint64_t a1)
{
  unint64_t result = sub_1B59757D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59757D4()
{
  unint64_t result = qword_1E9D64958;
  if (!qword_1E9D64958)
  {
    type metadata accessor for ResizableImageModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64958);
  }
  return result;
}

unint64_t sub_1B597582C()
{
  unint64_t result = qword_1E9D64970;
  if (!qword_1E9D64970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64970);
  }
  return result;
}

unint64_t sub_1B5975880()
{
  unint64_t result = qword_1E9D64978;
  if (!qword_1E9D64978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64978);
  }
  return result;
}

unint64_t sub_1B59758D4()
{
  unint64_t result = qword_1E9D64980;
  if (!qword_1E9D64980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64980);
  }
  return result;
}

uint64_t sub_1B5975928(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64960);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B5975988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResizableImageModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ResizingModeName()
{
  return &type metadata for ResizingModeName;
}

unsigned char *storeEnumTagSinglePayload for EdgeInsetsName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5975ACCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EdgeInsetsName()
{
  return &type metadata for EdgeInsetsName;
}

unsigned char *_s6LiftUI16ResizingModeNameOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5975BD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResizableImageModifier.CodingKeys()
{
  return &type metadata for ResizableImageModifier.CodingKeys;
}

unint64_t sub_1B5975C0C()
{
  unint64_t result = qword_1E9D64988;
  if (!qword_1E9D64988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64988);
  }
  return result;
}

unint64_t sub_1B5975C64()
{
  unint64_t result = qword_1E9D64990;
  if (!qword_1E9D64990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64990);
  }
  return result;
}

unint64_t sub_1B5975CBC()
{
  unint64_t result = qword_1E9D64998;
  if (!qword_1E9D64998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64998);
  }
  return result;
}

unint64_t sub_1B5975D14()
{
  unint64_t result = qword_1E9D649A0;
  if (!qword_1E9D649A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D649A0);
  }
  return result;
}

unint64_t sub_1B5975D6C()
{
  unint64_t result = qword_1E9D649A8;
  if (!qword_1E9D649A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D649A8);
  }
  return result;
}

unint64_t sub_1B5975DC0()
{
  unint64_t result = qword_1E9D649B0;
  if (!qword_1E9D649B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D649B0);
  }
  return result;
}

unint64_t sub_1B5975E14()
{
  unint64_t result = qword_1E9D649B8;
  if (!qword_1E9D649B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D649B8);
  }
  return result;
}

uint64_t sub_1B5975E68()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t destroy for PickerView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), v2);
  }
  if (*(void *)(a1 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  }
  swift_bridgeObjectRelease();
  sub_1B591F344(*(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
  return swift_release();
}

uint64_t initializeWithCopy for PickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    sub_1B5904B60(v6, v7, v8, v5);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  uint64_t v9 = (_OWORD *)(a1 + 56);
  uint64_t v10 = (_OWORD *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 80);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 72);
    _OWORD *v9 = *v10;
    *(_OWORD *)(a1 + 72) = v13;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
  }
  uint64_t v14 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v15 = *(void *)(a2 + 112);
  uint64_t v16 = *(void *)(a2 + 120);
  char v17 = *(unsigned char *)(a2 + 128);
  swift_bridgeObjectRetain();
  sub_1B5909638(v14, v15, v16, v17);
  *(void *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v16;
  *(unsigned char *)(a1 + 128) = v17;
  uint64_t v18 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v18;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PickerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 24);
  unsigned int v5 = (_OWORD *)(a2 + 24);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 24);
      uint64_t v13 = *(void *)(a2 + 32);
      uint64_t v14 = *(void *)(a2 + 40);
      sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 48));
      uint64_t v15 = *(void *)(a1 + 24);
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void *)(a1 + 40);
      *(void *)(a1 + 24) = v12;
      *(void *)(a1 + 32) = v13;
      *(void *)(a1 + 40) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 48);
      *(unsigned char *)(a1 + 48) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 24);
      long long v8 = *(_OWORD *)(a2 + 33);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 33) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 48));
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(unsigned char *)(a1 + 48) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
    *uint64_t v4 = v7;
  }
  uint64_t v19 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (v19)
    {
      *(void *)(a1 + 80) = v19;
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 56, a2 + 56);
      goto LABEL_15;
    }
LABEL_14:
    long long v20 = *(_OWORD *)(a2 + 56);
    long long v21 = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(_OWORD *)(a1 + 56) = v20;
    *(_OWORD *)(a1 + 72) = v21;
    goto LABEL_15;
  }
  if (!v19)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 56);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
LABEL_15:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 104);
  uint64_t v23 = *(void *)(a2 + 112);
  uint64_t v24 = *(void *)(a2 + 120);
  char v25 = *(unsigned char *)(a2 + 128);
  sub_1B5909638(v22, v23, v24, v25);
  uint64_t v26 = *(void *)(a1 + 104);
  uint64_t v27 = *(void *)(a1 + 112);
  uint64_t v28 = *(void *)(a1 + 120);
  char v29 = *(unsigned char *)(a1 + 128);
  *(void *)(a1 + 104) = v22;
  *(void *)(a1 + 112) = v23;
  *(void *)(a1 + 120) = v24;
  *(unsigned char *)(a1 + 128) = v25;
  sub_1B591F344(v26, v27, v28, v29);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

uint64_t assignWithTake for PickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  unsigned int v5 = *(unsigned __int8 *)(a1 + 48);
  if (v5 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v6 = *(unsigned __int8 *)(a2 + 48);
  if (v6 > 0xFD)
  {
    sub_1B590DA50(a1 + 24);
LABEL_4:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v6;
  sub_1B5904A88(v8, v9, v10, v5);
LABEL_6:
  if (*(void *)(a1 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  }
  long long v11 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v11;
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 120);
  char v14 = *(unsigned char *)(a2 + 128);
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 120);
  char v18 = *(unsigned char *)(a1 + 128);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = v13;
  *(unsigned char *)(a1 + 128) = v14;
  sub_1B591F344(v15, v16, v17, v18);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

ValueMetadata *type metadata accessor for PickerView()
{
  return &type metadata for PickerView;
}

uint64_t sub_1B59763C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v51 = a1;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D649D0);
  MEMORY[0x1F4188790](v49);
  uint64_t v50 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D636F8);
  uint64_t v42 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  unsigned int v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D649D8);
  MEMORY[0x1F4188790](v43);
  char v44 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D636E8);
  uint64_t v7 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D636D8);
  MEMORY[0x1F4188790](v48);
  uint64_t v46 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v1 + 104);
  uint64_t v12 = *(void *)(v1 + 112);
  uint64_t v13 = *(void *)(v1 + 120);
  char v14 = *(unsigned char *)(v1 + 128);
  uint64_t v15 = *(void *)(v2 + 136);
  if (v15)
  {
    sub_1B5909638(v11, v12, v13, v14);
    uint64_t v16 = swift_retain();
    sub_1B5996AFC(v16, v11, v12, v13, v14, &v52);
    swift_release();
    uint64_t v17 = sub_1B591F344(v11, v12, v13, v14);
    uint64_t v18 = v52;
    uint64_t v19 = v53;
    uint64_t v20 = v54;
    unsigned int v21 = *(unsigned __int8 *)(v2 + 48);
    uint64_t v40 = v53;
    uint64_t v41 = v52;
    if (v21 > 0xFD)
    {
      MEMORY[0x1F4188790](v17);
      unint64_t v57 = v18;
      uint64_t v58 = v19;
      uint64_t v59 = v20;
      sub_1B5909890(v2 + 56, (uint64_t)&v52, &qword_1E9D632B0);
      uint64_t v25 = v55;
      if (v55)
      {
        uint64_t v26 = v56;
        __swift_project_boxed_opaque_existential_1(&v52, v55);
        uint64_t v39 = v5;
        uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 24);
        swift_retain();
        swift_retain();
        swift_retain();
        unsigned int v5 = v39;
        uint64_t v25 = v27(v25, v26);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
      }
      else
      {
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B5908FC0((uint64_t)&v52, &qword_1E9D632B0);
      }
      uint64_t v52 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63440);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
      sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
      sub_1B591EF2C();
      sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
      sub_1B5A1BA58();
      uint64_t v28 = v42;
      uint64_t v29 = v47;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v44, v5, v47);
      swift_storeEnumTagMultiPayload();
      sub_1B59095C8(&qword_1E9D636E0, &qword_1E9D636E8);
      sub_1B59095C8(&qword_1E9D636F0, &qword_1E9D636F8);
      uint64_t v37 = (uint64_t)v46;
      sub_1B5A1AE58();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v29);
    }
    else
    {
      uint64_t v39 = (char *)v54;
      uint64_t v38 = v7;
      uint64_t v22 = *(void *)(v2 + 32);
      uint64_t v24 = *(void *)(v2 + 40);
      uint64_t v52 = *(void *)(v2 + 24);
      uint64_t v23 = v52;
      uint64_t v53 = v22;
      uint64_t v54 = v24;
      LOBYTE(v55) = v21;
      swift_retain();
      sub_1B5904BDC(v23, v22, v24, v21);
      unint64_t v31 = StringResolvable.resolved(with:)(v15);
      uint64_t v33 = v32;
      sub_1B5904B4C(v23, v22, v24, v21);
      uint64_t v34 = swift_release();
      unint64_t v57 = v31;
      uint64_t v58 = v33;
      uint64_t v52 = v41;
      uint64_t v53 = v40;
      uint64_t v54 = (uint64_t)v39;
      MEMORY[0x1F4188790](v34);
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
      sub_1B591EF2C();
      sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
      sub_1B5943480();
      sub_1B5A1BA68();
      uint64_t v35 = v38;
      uint64_t v36 = v45;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v44, v9, v45);
      swift_storeEnumTagMultiPayload();
      sub_1B59095C8(&qword_1E9D636E0, &qword_1E9D636E8);
      sub_1B59095C8(&qword_1E9D636F0, &qword_1E9D636F8);
      uint64_t v37 = (uint64_t)v46;
      sub_1B5A1AE58();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v36);
    }
    sub_1B5909890(v37, v50, &qword_1E9D636D8);
    swift_storeEnumTagMultiPayload();
    sub_1B592000C();
    sub_1B5A1AE58();
    swift_release();
    swift_release();
    swift_release();
    return sub_1B5908FC0(v37, &qword_1E9D636D8);
  }
  else
  {
    sub_1B5909638(v11, v12, v13, v14);
    type metadata accessor for RemoteStateStore(0);
    sub_1B59776E8();
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5976D04()
{
  return sub_1B5A1BB28();
}

uint64_t sub_1B5976DD4(char a1)
{
  return qword_1B5A26DE8[a1];
}

uint64_t sub_1B5976DF4(char *a1, char *a2)
{
  return sub_1B59EFFCC(*a1, *a2);
}

uint64_t sub_1B5976E00()
{
  return sub_1B59F1614();
}

uint64_t sub_1B5976E08()
{
  return sub_1B59F4C98();
}

uint64_t sub_1B5976E10()
{
  return sub_1B59F4FDC();
}

uint64_t sub_1B5976E18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5977A80();
  *a1 = result;
  return result;
}

uint64_t sub_1B5976E48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5976DD4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5976E74()
{
  return sub_1B5976DD4(*v0);
}

uint64_t sub_1B5976E7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5977A80();
  *a1 = result;
  return result;
}

uint64_t sub_1B5976EA4(uint64_t a1)
{
  unint64_t v2 = sub_1B5977774();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5976EE0(uint64_t a1)
{
  unint64_t v2 = sub_1B5977774();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5976F1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v28 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D649E0);
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[2] = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B59776E8();
  uint64_t v52 = sub_1B5A1A918();
  uint64_t v53 = v9;
  uint64_t v10 = a1[3];
  os_log_type_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1B5977774();
  uint64_t v11 = v54;
  sub_1B5A1C838();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v12 = v28;
    LOBYTE(v31) = 0;
    uint64_t v13 = sub_1B5A1C598();
    uint64_t v16 = v14;
    uint64_t v54 = v6;
    if (v14)
    {
      uint64_t v17 = v13;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v17 = sub_1B5A1A288();
      uint64_t v16 = v18;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v5, v3);
    }
    v44[0] = v17;
    v44[1] = v16;
    LOBYTE(v41) = 1;
    sub_1B5904A34();
    uint64_t v19 = v54;
    sub_1B5A1C5B8();
    long long v45 = v31;
    uint64_t v46 = v32;
    char v47 = BYTE8(v32);
    LOBYTE(v41) = 2;
    sub_1B5914100();
    sub_1B5A1C5B8();
    if (*((void *)&v31 + 1))
    {
      *((void *)&v42 + 1) = &type metadata for ViewContent;
      unint64_t v43 = sub_1B5914034();
      uint64_t v20 = swift_allocObject();
      *(void *)&long long v41 = v20;
      long long v21 = v38;
      *(_OWORD *)(v20 + 112) = v37;
      *(_OWORD *)(v20 + 128) = v21;
      *(_OWORD *)(v20 + 144) = v39;
      *(void *)(v20 + 160) = v40;
      long long v22 = v34;
      *(_OWORD *)(v20 + 48) = v33;
      *(_OWORD *)(v20 + 64) = v22;
      long long v23 = v36;
      *(_OWORD *)(v20 + 80) = v35;
      *(_OWORD *)(v20 + 96) = v23;
      long long v24 = v32;
      *(_OWORD *)(v20 + 16) = v31;
      *(_OWORD *)(v20 + 32) = v24;
    }
    else
    {
      sub_1B5908FC0((uint64_t)&v31, &qword_1E9D63B40);
      long long v41 = 0u;
      long long v42 = 0u;
      unint64_t v43 = 0;
    }
    sub_1B59215A0((uint64_t)&v41, (uint64_t)v48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    LOBYTE(v41) = 3;
    sub_1B592FA5C();
    sub_1B5A1C5B8();
    if ((void)v31) {
      uint64_t v25 = v31;
    }
    else {
      uint64_t v25 = MEMORY[0x1E4FBC860];
    }
    uint64_t v26 = sub_1B59196AC(v25);
    swift_bridgeObjectRelease();
    v48[5] = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
    LOBYTE(v41) = 4;
    sub_1B59095C8((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v19);
    long long v49 = v31;
    uint64_t v50 = v32;
    char v51 = BYTE8(v32);
    sub_1B59201A8((uint64_t)v44, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    return sub_1B59777C8((uint64_t)v44);
  }
}

uint64_t sub_1B597749C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D636C0);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  unsigned int v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1B59763C4((uint64_t)&v10 - v6);
  sub_1B5909890((uint64_t)v7, (uint64_t)v5, &qword_1E9D636C0);
  sub_1B591FF90();
  uint64_t v8 = sub_1B5A1BA88();
  uint64_t result = sub_1B5908FC0((uint64_t)v7, &qword_1E9D636C0);
  *a1 = v8;
  return result;
}

uint64_t sub_1B5977588@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5976F1C(a1, a2);
}

uint64_t sub_1B59775A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B59775BC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B5977618()
{
  unint64_t result = qword_1E9D649C0;
  if (!qword_1E9D649C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D649C0);
  }
  return result;
}

unint64_t sub_1B597766C(uint64_t a1)
{
  unint64_t result = sub_1B5977694();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5977694()
{
  unint64_t result = qword_1E9D649C8;
  if (!qword_1E9D649C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D649C8);
  }
  return result;
}

unint64_t sub_1B59776E8()
{
  unint64_t result = qword_1E9D62B90;
  if (!qword_1E9D62B90)
  {
    type metadata accessor for RemoteStateStore(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62B90);
  }
  return result;
}

uint64_t sub_1B5977740()
{
  return sub_1B5976D04();
}

unint64_t sub_1B5977774()
{
  unint64_t result = qword_1E9D649E8;
  if (!qword_1E9D649E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D649E8);
  }
  return result;
}

uint64_t sub_1B59777C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B59777F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

unsigned char *storeEnumTagSinglePayload for PickerView.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B597793CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PickerView.CodingKeys()
{
  return &type metadata for PickerView.CodingKeys;
}

unint64_t sub_1B597797C()
{
  unint64_t result = qword_1E9D649F0;
  if (!qword_1E9D649F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D649F0);
  }
  return result;
}

unint64_t sub_1B59779D4()
{
  unint64_t result = qword_1E9D649F8;
  if (!qword_1E9D649F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D649F8);
  }
  return result;
}

unint64_t sub_1B5977A2C()
{
  unint64_t result = qword_1E9D64A00;
  if (!qword_1E9D64A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A00);
  }
  return result;
}

uint64_t sub_1B5977A80()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for ToggleStyleModifier()
{
  return &type metadata for ToggleStyleModifier;
}

uint64_t sub_1B5977AE0@<X0>(void (*a1)(char *, uint64_t)@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  LODWORD(v103) = a2;
  unint64_t v106 = a1;
  uint64_t v112 = a5;
  uint64_t v7 = sub_1B5A1A9F8();
  uint64_t v96 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v94 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B5978DD8(&qword_1E9D64A10, MEMORY[0x1E4F3D378]);
  uint64_t v129 = a3;
  uint64_t v130 = v7;
  uint64_t v118 = v7;
  uint64_t v131 = a4;
  uint64_t v132 = v9;
  uint64_t v114 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v97 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](OpaqueTypeMetadata2);
  uint64_t v92 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unsigned __int8 v99 = (char *)&v90 - v13;
  uint64_t v14 = sub_1B5A1A8E8();
  uint64_t v93 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1B5978DD8(&qword_1E9D64A18, MEMORY[0x1E4F3CEB0]);
  uint64_t v129 = a3;
  uint64_t v130 = v14;
  uint64_t v115 = v14;
  uint64_t v131 = a4;
  uint64_t v132 = v17;
  uint64_t v113 = v17;
  uint64_t v18 = swift_getOpaqueTypeMetadata2();
  uint64_t v95 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  long long v21 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v98 = (char *)&v90 - v22;
  uint64_t v23 = sub_1B5A1AAC8();
  uint64_t v24 = sub_1B5978DD8(&qword_1E9D64A20, MEMORY[0x1E4F3D430]);
  uint64_t v104 = a3;
  uint64_t v129 = a3;
  uint64_t v130 = v23;
  uint64_t v105 = a4;
  uint64_t v131 = a4;
  uint64_t v132 = v24;
  uint64_t v117 = v24;
  uint64_t v25 = swift_getOpaqueTypeMetadata2();
  uint64_t v101 = v18;
  uint64_t v26 = sub_1B5A1AE68();
  uint64_t v100 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v102 = (uint64_t)&v90 - v27;
  uint64_t v116 = swift_checkMetadataState();
  uint64_t v28 = *(void *)(v116 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v116);
  long long v31 = (char *)&v90 - v30;
  uint64_t v91 = *(void *)(v25 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  long long v34 = (char *)&v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  long long v36 = (char *)&v90 - v35;
  uint64_t v110 = v26;
  uint64_t v111 = OpaqueTypeMetadata2;
  uint64_t v109 = sub_1B5A1AE68();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  unint64_t v107 = (char *)&v90 - v37;
  if ((_BYTE)v103)
  {
    if (v103 == 1)
    {
      long long v38 = v16;
      sub_1B5A1A8D8();
      uint64_t v39 = v104;
      uint64_t v40 = v115;
      uint64_t v41 = v105;
      uint64_t v42 = v113;
      sub_1B5A1B448();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v38, v40);
      uint64_t v129 = v39;
      uint64_t v130 = v40;
      uint64_t v131 = v41;
      uint64_t v132 = v42;
      uint64_t v43 = v41;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      long long v45 = v98;
      uint64_t v46 = v101;
      sub_1B591656C(v21, v101, OpaqueTypeConformance2);
      char v47 = *(void (**)(char *, uint64_t))(v95 + 8);
      v47(v21, v46);
      uint64_t v103 = v25;
      uint64_t v48 = v47;
      unint64_t v106 = v47;
      sub_1B591656C(v45, v46, OpaqueTypeConformance2);
      uint64_t v129 = v39;
      uint64_t v130 = v116;
      uint64_t v49 = v43;
      uint64_t v131 = v43;
      uint64_t v132 = v117;
      uint64_t v50 = swift_getOpaqueTypeConformance2();
      sub_1B59100C0((uint64_t)v21, v103, v46);
      v48(v21, v46);
      uint64_t v121 = v50;
      uint64_t v122 = OpaqueTypeConformance2;
      uint64_t v51 = v110;
      swift_getWitnessTable();
      uint64_t v129 = v39;
      uint64_t v130 = v118;
      uint64_t v52 = v114;
      uint64_t v131 = v49;
      uint64_t v132 = v114;
      uint64_t v53 = v115;
      swift_getOpaqueTypeConformance2();
      uint64_t v54 = v107;
      uint64_t v55 = v102;
      sub_1B590FFC8(v102, v51);
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v55, v51);
      v106(v98, v46);
      uint64_t v56 = v113;
    }
    else
    {
      long long v68 = v94;
      sub_1B5A1A9E8();
      uint64_t v69 = (uint64_t)v92;
      uint64_t v70 = v104;
      uint64_t v71 = v118;
      uint64_t v49 = v105;
      uint64_t v72 = v114;
      sub_1B5A1B448();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v68, v71);
      uint64_t v129 = v70;
      uint64_t v130 = v71;
      uint64_t v131 = v49;
      uint64_t v132 = v72;
      uint64_t v73 = swift_getOpaqueTypeConformance2();
      uint64_t v74 = v99;
      uint64_t v75 = v111;
      sub_1B591656C(v69, v111, v73);
      unint64_t v106 = *(void (**)(char *, uint64_t))(v97 + 8);
      v106((char *)v69, v75);
      sub_1B591656C(v74, v75, v73);
      uint64_t v129 = v70;
      uint64_t v130 = v116;
      uint64_t v131 = v49;
      uint64_t v132 = v117;
      uint64_t v76 = swift_getOpaqueTypeConformance2();
      uint64_t v53 = v115;
      uint64_t v129 = v70;
      uint64_t v130 = v115;
      uint64_t v56 = v113;
      uint64_t v131 = v49;
      uint64_t v132 = v113;
      uint64_t v77 = swift_getOpaqueTypeConformance2();
      uint64_t v127 = v76;
      uint64_t v128 = v77;
      uint64_t v78 = v110;
      swift_getWitnessTable();
      uint64_t v79 = v107;
      sub_1B59100C0(v69, v78, v75);
      uint64_t v80 = v69;
      uint64_t v39 = v70;
      uint64_t v81 = v106;
      v106((char *)v80, v75);
      uint64_t v82 = v75;
      uint64_t v54 = v79;
      v81(v99, v82);
      uint64_t v52 = v114;
    }
  }
  else
  {
    sub_1B5A1AAB8();
    uint64_t v39 = v104;
    uint64_t v57 = v116;
    uint64_t v90 = v36;
    uint64_t v49 = v105;
    uint64_t v58 = v117;
    sub_1B5A1B448();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v57);
    uint64_t v129 = v39;
    uint64_t v130 = v57;
    uint64_t v131 = v49;
    uint64_t v132 = v58;
    uint64_t v103 = MEMORY[0x1E4F3E450];
    uint64_t v59 = swift_getOpaqueTypeConformance2();
    char v60 = v90;
    sub_1B591656C(v34, v25, v59);
    uint64_t v61 = *(void (**)(char *, uint64_t))(v91 + 8);
    v61(v34, v25);
    unint64_t v106 = v61;
    sub_1B591656C(v60, v25, v59);
    uint64_t v129 = v39;
    uint64_t v130 = v115;
    uint64_t v62 = v113;
    uint64_t v131 = v49;
    uint64_t v132 = v113;
    uint64_t v63 = swift_getOpaqueTypeConformance2();
    uint64_t v64 = v102;
    sub_1B590FFC8((uint64_t)v34, v25);
    long long v65 = v34;
    uint64_t v56 = v62;
    v61(v65, v25);
    uint64_t v119 = v59;
    uint64_t v120 = v63;
    uint64_t v66 = v110;
    swift_getWitnessTable();
    uint64_t v129 = v39;
    uint64_t v130 = v118;
    uint64_t v52 = v114;
    uint64_t v131 = v49;
    uint64_t v132 = v114;
    swift_getOpaqueTypeConformance2();
    long long v67 = v107;
    sub_1B590FFC8(v64, v66);
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v64, v66);
    uint64_t v54 = v67;
    v106(v90, v25);
    uint64_t v53 = v115;
  }
  uint64_t v129 = v39;
  uint64_t v130 = v116;
  uint64_t v131 = v49;
  uint64_t v132 = v117;
  uint64_t v83 = swift_getOpaqueTypeConformance2();
  uint64_t v129 = v39;
  uint64_t v130 = v53;
  uint64_t v131 = v49;
  uint64_t v132 = v56;
  uint64_t v84 = swift_getOpaqueTypeConformance2();
  uint64_t v125 = v83;
  uint64_t v126 = v84;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v129 = v39;
  uint64_t v130 = v118;
  uint64_t v131 = v49;
  uint64_t v132 = v52;
  uint64_t v86 = swift_getOpaqueTypeConformance2();
  uint64_t v123 = WitnessTable;
  uint64_t v124 = v86;
  uint64_t v87 = v109;
  uint64_t v88 = swift_getWitnessTable();
  sub_1B591656C(v54, v87, v88);
  return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v54, v87);
}

uint64_t sub_1B5978824(char a1)
{
  return *(void *)&aAutomatibutton[8 * a1];
}

uint64_t sub_1B5978844(char *a1, char *a2)
{
  return sub_1B59EE1D8(*a1, *a2);
}

uint64_t sub_1B5978850()
{
  return sub_1B59F1680();
}

uint64_t sub_1B5978858()
{
  return sub_1B59F3A58();
}

uint64_t sub_1B5978860()
{
  return sub_1B59F650C();
}

uint64_t sub_1B5978868@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5979378();
  *a1 = result;
  return result;
}

uint64_t sub_1B5978898@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5978824(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59788C4()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B5978924()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B5978974@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B59789C8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5978A20(uint64_t a1)
{
  unint64_t v2 = sub_1B5978F98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5978A5C(uint64_t a1)
{
  unint64_t v2 = sub_1B5978F98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5978A98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  int v10 = *v2;
  uint64_t v9 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(a1, v5);
  sub_1B5A1AAC8();
  sub_1B5978DD8(&qword_1E9D64A20, MEMORY[0x1E4F3D430]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1A8E8();
  sub_1B5978DD8(&qword_1E9D64A18, MEMORY[0x1E4F3CEB0]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  sub_1B5A1A9F8();
  sub_1B5978DD8(&qword_1E9D64A10, MEMORY[0x1E4F3D378]);
  swift_getOpaqueTypeMetadata2();
  a2[3] = sub_1B5A1AE68();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  a2[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B5977AE0(v9, v10, v5, v4, (uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B5978D30@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B5978E20(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1B5978D5C(uint64_t a1)
{
  unint64_t result = sub_1B5978D84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5978D84()
{
  unint64_t result = qword_1E9D64A08;
  if (!qword_1E9D64A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A08);
  }
  return result;
}

uint64_t sub_1B5978DD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B5978E20(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64A28);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5978F98();
  sub_1B5A1C838();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return 0;
  }
  else
  {
    sub_1B5978FEC();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v10 == 3) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = v10;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1B5978F98()
{
  unint64_t result = qword_1E9D64A30;
  if (!qword_1E9D64A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A30);
  }
  return result;
}

unint64_t sub_1B5978FEC()
{
  unint64_t result = qword_1E9D64A38;
  if (!qword_1E9D64A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ToggleStyleModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59790DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ToggleStyleModifier.CodingKeys()
{
  return &type metadata for ToggleStyleModifier.CodingKeys;
}

unsigned char *_s6LiftUI17ToggleStyleStringOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59791E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToggleStyleString()
{
  return &type metadata for ToggleStyleString;
}

unint64_t sub_1B597921C()
{
  unint64_t result = qword_1E9D64A40;
  if (!qword_1E9D64A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A40);
  }
  return result;
}

unint64_t sub_1B5979274()
{
  unint64_t result = qword_1E9D64A48;
  if (!qword_1E9D64A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A48);
  }
  return result;
}

unint64_t sub_1B59792CC()
{
  unint64_t result = qword_1E9D64A50;
  if (!qword_1E9D64A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A50);
  }
  return result;
}

unint64_t sub_1B5979324()
{
  unint64_t result = qword_1E9D64A58;
  if (!qword_1E9D64A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A58);
  }
  return result;
}

uint64_t sub_1B5979378()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B59793C4()
{
  unint64_t result = qword_1E9D64A60;
  if (!qword_1E9D64A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A60);
  }
  return result;
}

void sub_1B5979418(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v98 = a3;
  int v96 = a1;
  os_log_t v103 = (os_log_t)0xEF79786F72507765;
  unint64_t v101 = 0x69566C6C6F726373;
  uint64_t v6 = sub_1B5A1BDC8();
  uint64_t v95 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v93 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1B5A1BDE8();
  uint64_t v92 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v91 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64A80);
  MEMORY[0x1F4188790](v9 - 8);
  unsigned __int8 v99 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B5A1A778();
  uint64_t v100 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v90 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v97 = (char *)&v79 - v14;
  unsigned int v15 = *(unsigned __int8 *)(v3 + 40);
  uint64_t v102 = (void *)a2;
  if (v15 <= 0xFD)
  {
    uint64_t v17 = *(void *)(v3 + 16);
    uint64_t v16 = *(void *)(v3 + 24);
    uint64_t v18 = *(void *)(v3 + 32);
    *(void *)&aBlocunint64_t k = v17;
    *((void *)&aBlock + 1) = v16;
    uint64_t v105 = (uint64_t (*)())v18;
    LOBYTE(v106) = v15;
    sub_1B5904B60(v17, v16, v18, v15);
    unint64_t v19 = StringResolvable.resolved(with:)(a2);
    long long v21 = v20;
    sub_1B5904B4C(v17, v16, v18, v15);
    unint64_t v101 = v19;
    os_log_t v103 = v21;
  }
  uint64_t v22 = *(void *)(v4 + 136);
  if ((v22 & 0xFE) == 0x7E)
  {
    double v23 = 0.0;
    uint64_t v24 = 0;
    int v25 = 1;
  }
  else
  {
    uint64_t v87 = v11;
    uint64_t v88 = v6;
    uint64_t v26 = *(void *)(v4 + 88);
    uint64_t v27 = *(void *)(v4 + 96);
    uint64_t v28 = *(void *)(v4 + 104);
    uint64_t v29 = *(void *)(v4 + 112);
    uint64_t v30 = *(void *)(v4 + 120);
    uint64_t v31 = *(void *)(v4 + 128);
    uint64_t v33 = *(void *)(v4 + 144);
    uint64_t v32 = *(void *)(v4 + 152);
    uint64_t v34 = *(void *)(v4 + 160);
    char v35 = *(unsigned char *)(v4 + 168);
    *(void *)&aBlocunint64_t k = *(void *)(v4 + 80);
    *((void *)&aBlock + 1) = v26;
    uint64_t v105 = (uint64_t (*)())v27;
    LOBYTE(v106) = v28;
    unint64_t v107 = (uint64_t (*)())v29;
    uint64_t v108 = v30;
    uint64_t v109 = v31;
    char v110 = v22;
    uint64_t v111 = v33;
    uint64_t v112 = v32;
    uint64_t v113 = v34;
    char v114 = v35;
    uint64_t v80 = aBlock;
    uint64_t v81 = v26;
    uint64_t v82 = v27;
    uint64_t v84 = v28;
    sub_1B5904BDC(aBlock, v26, v27, v28);
    uint64_t v83 = v29;
    uint64_t v85 = v30;
    uint64_t v86 = v31;
    sub_1B591DF74(v29, v30, v31, v22);
    sub_1B591DF74(v33, v32, v34, v35);
    double v36 = sub_1B5931990((uint64_t)v102);
    uint64_t v38 = v37;
    sub_1B597A9C8(v80, v81, v82, v84, v83, v85, v86, v22, v33, v32, v34, v35);
    int v25 = 0;
    double v23 = v36;
    uint64_t v24 = v38;
    uint64_t v6 = v88;
    uint64_t v11 = v87;
  }
  unsigned int v39 = *(unsigned __int8 *)(v4 + 72);
  if (v39 > 0xFD)
  {
    swift_bridgeObjectRelease();
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_1B5A1A328();
    __swift_project_value_buffer(v43, (uint64_t)qword_1E9D910D0);
    os_log_t v103 = (os_log_t)sub_1B5A1A308();
    os_log_type_t v44 = sub_1B5A1C258();
    if (os_log_type_enabled(v103, v44))
    {
      long long v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v45 = 0;
      _os_log_impl(&dword_1B58FD000, v103, v44, "ScrollAction: unable to resolve scrollToId", v45, 2u);
      MEMORY[0x1BA9A4780](v45, -1, -1);
    }
    os_log_t v46 = v103;

    return;
  }
  uint64_t v86 = v24;
  uint64_t v87 = *(void *)&v23;
  LODWORD(v88) = v25;
  uint64_t v41 = *(void *)(v4 + 48);
  uint64_t v40 = *(void *)(v4 + 56);
  uint64_t v42 = *(void *)(v4 + 64);
  *(void *)&aBlocunint64_t k = v41;
  *((void *)&aBlock + 1) = v40;
  uint64_t v105 = (uint64_t (*)())v42;
  LOBYTE(v106) = v39;
  sub_1B5904B60(v41, v40, v42, v39);
  unint64_t v47 = StringResolvable.resolved(with:)((uint64_t)v102);
  unint64_t v49 = v48;
  sub_1B5904B4C(v41, v40, v42, v39);
  os_log_t v50 = v103;
  swift_bridgeObjectRetain();
  sub_1B59C81D8(v101, (uint64_t)v50, &aBlock);
  swift_bridgeObjectRelease();
  if (!v106)
  {
    sub_1B5908FC0((uint64_t)&aBlock, &qword_1E9D62BC8);
    uint64_t v51 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v99, 1, 1, v11);
    goto LABEL_22;
  }
  uint64_t v51 = (uint64_t)v99;
  int v52 = swift_dynamicCast();
  uint64_t v53 = v100;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v100 + 56))(v51, v52 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v11) == 1)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    sub_1B5908FC0(v51, &qword_1E9D64A80);
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_1B5A1A328();
    __swift_project_value_buffer(v56, (uint64_t)qword_1E9D910D0);
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_1B5A1A308();
    os_log_type_t v58 = sub_1B5A1C258();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      *(void *)&aBlocunint64_t k = v60;
      *(_DWORD *)uint64_t v59 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v115 = sub_1B5928EE8(v101, (unint64_t)v50, (uint64_t *)&aBlock);
      sub_1B5A1C2D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B58FD000, v57, v58, "ScrollAction: unable to resolve ScrollViewProxy at key %s", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v60, -1, -1);
      MEMORY[0x1BA9A4780](v59, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  swift_bridgeObjectRelease();
  os_log_t v54 = *(os_log_t *)(v53 + 32);
  uint64_t v55 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v54)(v97, v51, v11);
  if (v96)
  {
    if (objc_msgSend(self, sel_isMainThread))
    {
      *(void *)&aBlocunint64_t k = v47;
      *((void *)&aBlock + 1) = v49;
      sub_1B5A1A768();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v11);
      swift_bridgeObjectRelease();
      return;
    }
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1B5A1A328();
    __swift_project_value_buffer(v61, (uint64_t)qword_1E9D910D0);
    uint64_t v62 = sub_1B5A1A308();
    os_log_type_t v63 = sub_1B5A1C258();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      os_log_t v103 = v54;
      long long v65 = v64;
      *(_WORD *)uint64_t v64 = 0;
      _os_log_impl(&dword_1B58FD000, v62, v63, "Synchronous call to ScrollAction is not on main thread, running async on main thread.", v64, 2u);
      uint64_t v66 = v65;
      os_log_t v54 = v103;
      MEMORY[0x1BA9A4780](v66, -1, -1);
    }
  }
  os_log_t v103 = v54;
  sub_1B597A758();
  uint64_t v102 = (void *)sub_1B5A1C288();
  long long v67 = v90;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v90, v55, v11);
  uint64_t v68 = *(unsigned __int8 *)(v53 + 80);
  unint64_t v101 = v53 + 32;
  uint64_t v69 = (v68 + 16) & ~v68;
  unint64_t v70 = (v89 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v103)(v71 + v69, v67, v11);
  uint64_t v72 = (unint64_t *)(v71 + v70);
  *uint64_t v72 = v47;
  v72[1] = v49;
  unint64_t v73 = v71 + ((v70 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v74 = v86;
  *(void *)unint64_t v73 = v87;
  *(void *)(v73 + 8) = v74;
  *(unsigned char *)(v73 + 16) = v88;
  unint64_t v107 = sub_1B597A848;
  uint64_t v108 = v71;
  *(void *)&aBlocunint64_t k = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v105 = sub_1B59251B4;
  unint64_t v106 = &block_descriptor_1;
  uint64_t v75 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v76 = v91;
  sub_1B5A1BDD8();
  *(void *)&aBlocunint64_t k = MEMORY[0x1E4FBC860];
  sub_1B597A924((unint64_t *)&qword_1E9D63898, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638A0);
  sub_1B597A96C();
  uint64_t v77 = v93;
  sub_1B5A1C348();
  uint64_t v78 = v102;
  MEMORY[0x1BA9A3A90](0, v76, v77, v75);
  _Block_release(v75);

  (*(void (**)(char *, uint64_t))(v95 + 8))(v77, v6);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v76, v94);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v97, v11);
}

uint64_t sub_1B597A0B8(char a1)
{
  return qword_1B5A27310[a1];
}

uint64_t sub_1B597A0D8(char *a1, char *a2)
{
  return sub_1B59EF734(*a1, *a2);
}

uint64_t sub_1B597A0E4()
{
  return sub_1B59F16EC();
}

uint64_t sub_1B597A0EC()
{
  return sub_1B59F4764();
}

uint64_t sub_1B597A0F4()
{
  return sub_1B59F5610();
}

uint64_t sub_1B597A0FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B597ACC0();
  *a1 = result;
  return result;
}

uint64_t sub_1B597A12C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B597A0B8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B597A158()
{
  return sub_1B597A0B8(*v0);
}

uint64_t sub_1B597A160@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B597ACC0();
  *a1 = result;
  return result;
}

uint64_t sub_1B597A188(uint64_t a1)
{
  unint64_t v2 = sub_1B597AA60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B597A1C4(uint64_t a1)
{
  unint64_t v2 = sub_1B597AA60();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B597A200(void *a1)
{
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64A88);
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B597AA60();
  sub_1B5A1C838();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v4;
    char v27 = 0;
    sub_1B5904A34();
    uint64_t v8 = v19;
    sub_1B5A1C5B8();
    uint64_t v9 = v21;
    char v10 = BYTE8(v21);
    *(_OWORD *)(v1 + 48) = v20;
    *(void *)(v1 + 64) = v9;
    *(unsigned char *)(v1 + 72) = v10;
    char v27 = 1;
    sub_1B5A1C5B8();
    uint64_t v11 = v21;
    char v12 = BYTE8(v21);
    *(_OWORD *)(v1 + 16) = v20;
    *(void *)(v1 + 32) = v11;
    *(unsigned char *)(v1 + 40) = v12;
    char v27 = 2;
    sub_1B5938600();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v14 = v25;
    char v15 = v26;
    long long v16 = v21;
    *(_OWORD *)(v1 + 80) = v20;
    *(_OWORD *)(v1 + 96) = v16;
    long long v17 = v23;
    *(_OWORD *)(v1 + 112) = v22;
    *(_OWORD *)(v1 + 128) = v17;
    *(_OWORD *)(v1 + 144) = v24;
    *(void *)(v1 + 160) = v14;
    *(unsigned char *)(v1 + 168) = v15;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1B597A4E0()
{
  sub_1B5904B4C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_1B5904B4C(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  sub_1B597A9C8(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(unsigned char *)(v0 + 168));
  return MEMORY[0x1F4186488](v0, 169, 7);
}

uint64_t type metadata accessor for ScrollAction()
{
  return self;
}

uint64_t sub_1B597A588(uint64_t a1, uint64_t a2)
{
  sub_1B5979418(0, a1, a2);
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return sub_1B592D24C(v3);
}

void sub_1B597A618(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B597A650@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1B597A200(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B597A6A8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B597A924((unint64_t *)&unk_1E9D64A68, a2, (void (*)(uint64_t))type metadata accessor for ScrollAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B597A700(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B597A924(&qword_1E9D64A78, a2, (void (*)(uint64_t))type metadata accessor for ScrollAction);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B597A758()
{
  unint64_t result = qword_1E9D63890;
  if (!qword_1E9D63890)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9D63890);
  }
  return result;
}

uint64_t sub_1B597A798()
{
  uint64_t v1 = sub_1B5A1A778();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 17;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1B597A848()
{
  return sub_1B5A1A768();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_1B597A924(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B597A96C()
{
  unint64_t result = qword_1E9D638A8;
  if (!qword_1E9D638A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D638A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D638A8);
  }
  return result;
}

void sub_1B597A9C8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  if ((a8 & 0xFE) != 0x7ELL)
  {
    sub_1B5904B4C(a1, a2, a3, a4);
    sub_1B59325C0(a5, a6, a7, a8);
    sub_1B59325C0(a9, a10, a11, a12);
  }
}

unint64_t sub_1B597AA60()
{
  unint64_t result = qword_1E9D64A90;
  if (!qword_1E9D64A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ScrollAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B597AB80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollAction.CodingKeys()
{
  return &type metadata for ScrollAction.CodingKeys;
}

unint64_t sub_1B597ABBC()
{
  unint64_t result = qword_1E9D64A98;
  if (!qword_1E9D64A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64A98);
  }
  return result;
}

unint64_t sub_1B597AC14()
{
  unint64_t result = qword_1E9D64AA0;
  if (!qword_1E9D64AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AA0);
  }
  return result;
}

unint64_t sub_1B597AC6C()
{
  unint64_t result = qword_1E9D64AA8;
  if (!qword_1E9D64AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AA8);
  }
  return result;
}

uint64_t sub_1B597ACC0()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for StrokeModifier()
{
  return &type metadata for StrokeModifier;
}

uint64_t sub_1B597AD1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64AC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B597B110();
  sub_1B5A1C838();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F98);
    sub_1B5938654();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B597AEB0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B597AF04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B597B340();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B597AF30@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B597AF88(uint64_t a1)
{
  unint64_t v2 = sub_1B597B110();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B597AFC4(uint64_t a1)
{
  unint64_t v2 = sub_1B597B110();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B597B000@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B597AD1C(a1, a2);
}

unint64_t sub_1B597B018(uint64_t a1)
{
  unint64_t result = sub_1B597B040();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B597B040()
{
  unint64_t result = qword_1E9D64AB0;
  if (!qword_1E9D64AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AB0);
  }
  return result;
}

unint64_t sub_1B597B094(uint64_t a1)
{
  unint64_t result = sub_1B597B0BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B597B0BC()
{
  unint64_t result = qword_1E9D64AB8;
  if (!qword_1E9D64AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AB8);
  }
  return result;
}

unint64_t sub_1B597B110()
{
  unint64_t result = qword_1E9D64AC8;
  if (!qword_1E9D64AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StrokeModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B597B200);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StrokeModifier.CodingKeys()
{
  return &type metadata for StrokeModifier.CodingKeys;
}

unint64_t sub_1B597B23C()
{
  unint64_t result = qword_1E9D64AD0;
  if (!qword_1E9D64AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AD0);
  }
  return result;
}

unint64_t sub_1B597B294()
{
  unint64_t result = qword_1E9D64AD8;
  if (!qword_1E9D64AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AD8);
  }
  return result;
}

unint64_t sub_1B597B2EC()
{
  unint64_t result = qword_1E9D64AE0;
  if (!qword_1E9D64AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AE0);
  }
  return result;
}

uint64_t sub_1B597B340()
{
  return 0x74646957656E696CLL;
}

uint64_t destroy for EditButtonView()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s6LiftUI14EditButtonViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EditButtonView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EditButtonView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EditButtonView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EditButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditButtonView()
{
  return &type metadata for EditButtonView;
}

uint64_t destroy for ButtonView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  unsigned int v2 = *(unsigned __int8 *)(a1 + 96);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v2);
  }
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2 + 32;
  long long v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1 + 32, v6, v8);
  unsigned int v10 = *(unsigned __int8 *)(a2 + 96);
  if (v10 <= 0xFD)
  {
    uint64_t v11 = *(void *)(a2 + 72);
    uint64_t v12 = *(void *)(a2 + 80);
    uint64_t v13 = *(void *)(a2 + 88);
    sub_1B5904B60(v11, v12, v13, *(unsigned char *)(a2 + 96));
    *(void *)(a1 + 72) = v11;
    *(void *)(a1 + 80) = v12;
    *(void *)(a1 + 88) = v13;
    *(unsigned char *)(a1 + 96) = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  uint64_t v15 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v15;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ButtonView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  uint64_t v4 = (_OWORD *)(a1 + 72);
  uint64_t v5 = (_OWORD *)(a2 + 72);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 72);
      uint64_t v13 = *(void *)(a2 + 80);
      uint64_t v14 = *(void *)(a2 + 88);
      sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 96));
      uint64_t v15 = *(void *)(a1 + 72);
      uint64_t v16 = *(void *)(a1 + 80);
      uint64_t v17 = *(void *)(a1 + 88);
      *(void *)(a1 + 72) = v12;
      *(void *)(a1 + 80) = v13;
      *(void *)(a1 + 88) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 96);
      *(unsigned char *)(a1 + 96) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 72);
      long long v8 = *(_OWORD *)(a2 + 81);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 81) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 72);
    uint64_t v10 = *(void *)(a2 + 80);
    uint64_t v11 = *(void *)(a2 + 88);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 96));
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = v10;
    *(void *)(a1 + 88) = v11;
    *(unsigned char *)(a1 + 96) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
    *uint64_t v4 = v7;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

uint64_t assignWithTake for ButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 96);
  if (v6 <= 0xFD)
  {
    unsigned int v7 = *(unsigned __int8 *)(a2 + 96);
    if (v7 <= 0xFD)
    {
      uint64_t v8 = *(void *)(a2 + 88);
      uint64_t v9 = *(void *)(a1 + 72);
      uint64_t v10 = *(void *)(a1 + 80);
      uint64_t v11 = *(void *)(a1 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = v8;
      *(unsigned char *)(a1 + 96) = v7;
      sub_1B5904A88(v9, v10, v11, v6);
      goto LABEL_6;
    }
    sub_1B590DA50(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
LABEL_6:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

ValueMetadata *type metadata accessor for ButtonView()
{
  return &type metadata for ButtonView;
}

uint64_t sub_1B597B968@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64B08);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  long long v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64B10);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v34 - v10;
  LODWORD(v12) = *(unsigned __int8 *)(v1 + 96);
  uint64_t v36 = v2;
  uint64_t v35 = v3;
  uint64_t v38 = v5;
  uint64_t v37 = (char *)&v34 - v10;
  if (v12 <= 0xFD)
  {
    uint64_t v3 = *(void *)(v1 + 72);
    uint64_t v2 = *(void *)(v1 + 80);
    uint64_t v11 = *(char **)(v1 + 88);
    *(void *)&long long v43 = v3;
    *((void *)&v43 + 1) = v2;
    *(void *)&long long v44 = v11;
    BYTE8(v44) = v12;
    if (!*(void *)(v1 + 104))
    {
LABEL_21:
      sub_1B5904B60(v3, v2, (uint64_t)v11, v12);
      type metadata accessor for RemoteStateStore(0);
      sub_1B597D178((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
      uint64_t result = sub_1B5A1A908();
      __break(1u);
      return result;
    }
    sub_1B5904BDC(v3, v2, (uint64_t)v11, v12);
    uint64_t v13 = swift_retain();
    StringResolvable.resolved(with:)(v13);
    sub_1B5904B4C(v3, v2, (uint64_t)v11, v12);
    swift_release();
    uint64_t v2 = v36;
    uint64_t v3 = v35;
    long long v5 = v38;
    uint64_t v11 = v37;
  }
  uint64_t v14 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v14 == 1)
  {
    sub_1B5A1A458();
    goto LABEL_8;
  }
  if (!v14)
  {
    sub_1B5A1A448();
LABEL_8:
    uint64_t v15 = sub_1B5A1A468();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 0, 1, v15);
    goto LABEL_10;
  }
  uint64_t v16 = sub_1B5A1A468();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
LABEL_10:
  sub_1B597CF84((uint64_t)v11, (uint64_t)v9);
  sub_1B591ED18(v1, (uint64_t)&v43);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 144) = v51;
  long long v18 = v50;
  *(_OWORD *)(v17 + 112) = v49;
  *(_OWORD *)(v17 + 128) = v18;
  long long v19 = v46;
  *(_OWORD *)(v17 + 48) = v45;
  *(_OWORD *)(v17 + 64) = v19;
  long long v20 = v48;
  *(_OWORD *)(v17 + 80) = v47;
  *(_OWORD *)(v17 + 96) = v20;
  long long v21 = v44;
  *(_OWORD *)(v17 + 16) = v43;
  *(_OWORD *)(v17 + 32) = v21;
  MEMORY[0x1F4188790](v17);
  *(&v34 - 2) = (uint64_t *)v1;
  sub_1B5A1BA38();
  uint64_t v22 = sub_1B59193A4(*(void *)(v1 + 24));
  uint64_t v23 = *(void *)(v1 + 104);
  if (!v23)
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B597D178((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    sub_1B5A1A908();
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v24 = *(void *)(v1 + 120);
  if (!v24)
  {
LABEL_20:
    uint64_t v12 = *(void *)(v1 + 128);
    type metadata accessor for LocalStateStore(0);
    sub_1B597D178(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
    swift_retain();
    sub_1B5A1A908();
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v25 = v22;
  uint64_t v41 = v2;
  unint64_t v42 = sub_1B597D0CC();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v40);
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(boxed_opaque_existential_1, v5, v2);
  uint64_t v27 = *(void *)(v25 + 16);
  if (v27)
  {
    uint64_t v28 = (void *)(v25 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v29 = v28[3];
      uint64_t v30 = v28[4];
      __swift_project_boxed_opaque_existential_1(v28, v29);
      (*(void (**)(long long *__return_ptr, long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 16))(v39, &v40, v23, v24, v29, v30);
      sub_1B5908BE8(v39, (uint64_t)&v43);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
      sub_1B5908BE8(&v43, (uint64_t)&v40);
      v28 += 5;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    uint64_t v2 = v36;
    uint64_t v3 = v35;
  }
  else
  {
    swift_retain();
    swift_retain();
  }
  sub_1B5908BE8(&v40, (uint64_t)&v43);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v38, v2);
  uint64_t v31 = *((void *)&v44 + 1);
  __swift_project_boxed_opaque_existential_1(&v43, *((uint64_t *)&v44 + 1));
  uint64_t v32 = View.anyView.getter(v31);
  sub_1B5908FC0((uint64_t)v37, &qword_1E9D64B10);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  *uint64_t v34 = v32;
  return result;
}

uint64_t sub_1B597C040(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1[13];
  if (v5)
  {
    uint64_t v6 = a1[15];
    if (v6)
    {
      uint64_t v7 = a1[3];
      uint64_t v8 = sub_1B5A1C188();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = 0;
      void v9[3] = 0;
      uint64_t v9[4] = v7;
      v9[5] = v5;
      v9[6] = v6;
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1B5924038((uint64_t)v4, (uint64_t)&unk_1E9D637B0, (uint64_t)v9);
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B597D178((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    sub_1B5A1A908();
    __break(1u);
  }
  type metadata accessor for LocalStateStore(0);
  sub_1B597D178(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
  swift_retain();
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B597C254(char a1)
{
  return qword_1B5A27938[a1];
}

uint64_t sub_1B597C274(char *a1, char *a2)
{
  return sub_1B59F0164(*a1, *a2);
}

uint64_t sub_1B597C280()
{
  return sub_1B59F1758();
}

uint64_t sub_1B597C288()
{
  return sub_1B59F4D94();
}

uint64_t sub_1B597C290()
{
  return sub_1B59F4EA4();
}

uint64_t sub_1B597C298@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B597D9A4();
  *a1 = result;
  return result;
}

uint64_t sub_1B597C2C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B597C254(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B597C2F4()
{
  return sub_1B597C254(*v0);
}

uint64_t sub_1B597C2FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B597D9A4();
  *a1 = result;
  return result;
}

uint64_t sub_1B597C324(uint64_t a1)
{
  unint64_t v2 = sub_1B597D46C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B597C360(uint64_t a1)
{
  unint64_t v2 = sub_1B597D46C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B597C39C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = sub_1B5A1A2A8();
  uint64_t v33 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64B30);
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _OWORD v42[2] = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B597D178((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v46 = sub_1B5A1A918();
  uint64_t v47 = v10;
  type metadata accessor for LocalStateStore(0);
  sub_1B597D178(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
  uint64_t v48 = sub_1B5A1A918();
  uint64_t v49 = v11;
  uint64_t v12 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B597D46C();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    swift_bridgeObjectRelease();
LABEL_4:
    swift_release();
    return swift_release();
  }
  uint64_t v13 = v33;
  uint64_t v14 = v4;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  LOBYTE(v37) = 0;
  uint64_t v16 = sub_1B5A1C598();
  uint64_t v19 = v17;
  if (v17)
  {
    uint64_t v20 = v16;
  }
  else
  {
    sub_1B5A1A298();
    uint64_t v20 = sub_1B5A1A288();
    uint64_t v19 = v21;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v14);
  }
  uint64_t v22 = v15;
  v42[0] = v20;
  v42[1] = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
  LOBYTE(v37) = 1;
  sub_1B5951CA4();
  sub_1B5A1C5D8();
  uint64_t v23 = 0;
  uint64_t v24 = v50;
  int64_t v25 = *(void *)(v50 + 16);
  if (v25)
  {
    uint64_t v33 = 0;
    uint64_t v41 = v22;
    sub_1B596931C(0, v25, 0);
    uint64_t v26 = v24 + 32;
    uint64_t v27 = v41;
    do
    {
      sub_1B5951D6C(v26, (uint64_t)v36);
      sub_1B590CA38((uint64_t)v36, (uint64_t)&v37);
      sub_1B5951DC8((uint64_t)v36);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B596931C(0, *(void *)(v27 + 16) + 1, 1);
        uint64_t v27 = v41;
      }
      unint64_t v29 = *(void *)(v27 + 16);
      unint64_t v28 = *(void *)(v27 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1B596931C(v28 > 1, v29 + 1, 1);
        uint64_t v27 = v41;
      }
      *(void *)(v27 + 16) = v29 + 1;
      sub_1B5908BE8(&v37, v27 + 40 * v29 + 32);
      v26 += 40;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v23 = v33;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = MEMORY[0x1E4FBC860];
  }
  v42[3] = v27;
  v36[0] = 2;
  unsigned int v39 = &type metadata for ViewContent;
  unint64_t v40 = sub_1B5914034();
  *(void *)&long long v37 = swift_allocObject();
  sub_1B5914100();
  sub_1B5A1C5D8();
  uint64_t v30 = v32;
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
    __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v37);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  sub_1B5908BE8(&v37, (uint64_t)v43);
  v36[0] = 3;
  sub_1B5904A34();
  sub_1B5A1C5B8();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
  *(_OWORD *)&v43[40] = v37;
  uint64_t v44 = v38;
  char v45 = (char)v39;
  sub_1B591ED18((uint64_t)v42, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_1B597D538((uint64_t)v42);
}

uint64_t sub_1B597C9CC@<X0>(uint64_t *a1@<X8>)
{
  sub_1B597B968(&v3);
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

uint64_t sub_1B597CA1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B597C39C(a1, a2);
}

uint64_t sub_1B597CA34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B597CA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B597CDC8(a1, a2, a3, (void (*)(void))sub_1B597CA7C, (void (*)(void))sub_1B591EC4C);
}

unint64_t sub_1B597CA7C()
{
  unint64_t result = qword_1E9D64AE8;
  if (!qword_1E9D64AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AE8);
  }
  return result;
}

uint64_t sub_1B597CAD0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B597CB24@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B597CB7C(uint64_t a1)
{
  unint64_t v2 = sub_1B597D418();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B597CBB8(uint64_t a1)
{
  unint64_t v2 = sub_1B597D418();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B597CBF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1A488();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1B5A1A478();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_1B597D178(&qword_1E9D63708, MEMORY[0x1E4F3C4E8]);
  uint64_t v9 = sub_1B5A1BA88();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  *a1 = v9;
  return result;
}

uint64_t sub_1B597CD50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B597D1C0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1B597CD80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B597CD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B597CDC8(a1, a2, a3, (void (*)(void))sub_1B597CE38, (void (*)(void))sub_1B592024C);
}

uint64_t sub_1B597CDC8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B597CE38()
{
  unint64_t result = qword_1E9D64AF0;
  if (!qword_1E9D64AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AF0);
  }
  return result;
}

unint64_t sub_1B597CE8C(uint64_t a1)
{
  unint64_t result = sub_1B597CEB4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B597CEB4()
{
  unint64_t result = qword_1E9D64AF8;
  if (!qword_1E9D64AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64AF8);
  }
  return result;
}

unint64_t sub_1B597CF08(uint64_t a1)
{
  unint64_t result = sub_1B597CF30();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B597CF30()
{
  unint64_t result = qword_1E9D64B00;
  if (!qword_1E9D64B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B00);
  }
  return result;
}

uint64_t sub_1B597CF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B597CFEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  unsigned int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), v1);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 152, 7);
}

uint64_t sub_1B597D064()
{
  return sub_1B597C040((void *)(v0 + 16));
}

uint64_t sub_1B597D06C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = v3[7];
  uint64_t v5 = v3[8];
  __swift_project_boxed_opaque_existential_1(v3 + 4, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  *a1 = result;
  return result;
}

unint64_t sub_1B597D0CC()
{
  unint64_t result = qword_1E9D64B18;
  if (!qword_1E9D64B18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B18);
  }
  return result;
}

uint64_t sub_1B597D128()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1B597D178(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B597D1C0(void *a1)
{
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v15 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64B20);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B597D418();
  sub_1B5A1C838();
  if (!v1)
  {
    uint64_t v10 = v16;
    uint64_t v14 = v3;
    uint64_t v11 = sub_1B5A1C598();
    if (v12)
    {
      uint64_t v9 = v11;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v9 = sub_1B5A1A288();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v14);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v6);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1B597D418()
{
  unint64_t result = qword_1E9D64B28;
  if (!qword_1E9D64B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B28);
  }
  return result;
}

unint64_t sub_1B597D46C()
{
  unint64_t result = qword_1E9D64B38;
  if (!qword_1E9D64B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B38);
  }
  return result;
}

uint64_t sub_1B597D4C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B597D538(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ButtonView.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B597D634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonView.CodingKeys()
{
  return &type metadata for ButtonView.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for EditButtonView.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B597D708);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EditButtonView.CodingKeys()
{
  return &type metadata for EditButtonView.CodingKeys;
}

uint64_t sub_1B597D740()
{
  return sub_1B597D178(&qword_1E9D63708, MEMORY[0x1E4F3C4E8]);
}

uint64_t sub_1B597D788()
{
  return MEMORY[0x1E4F3EDF8];
}

unint64_t sub_1B597D798()
{
  unint64_t result = qword_1E9D64B40;
  if (!qword_1E9D64B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B40);
  }
  return result;
}

unint64_t sub_1B597D7F0()
{
  unint64_t result = qword_1E9D64B48;
  if (!qword_1E9D64B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B48);
  }
  return result;
}

unint64_t sub_1B597D848()
{
  unint64_t result = qword_1E9D64B50;
  if (!qword_1E9D64B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B50);
  }
  return result;
}

unint64_t sub_1B597D8A0()
{
  unint64_t result = qword_1E9D64B58;
  if (!qword_1E9D64B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B58);
  }
  return result;
}

unint64_t sub_1B597D8F8()
{
  unint64_t result = qword_1E9D64B60;
  if (!qword_1E9D64B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B60);
  }
  return result;
}

unint64_t sub_1B597D950()
{
  unint64_t result = qword_1E9D64B68;
  if (!qword_1E9D64B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B68);
  }
  return result;
}

uint64_t sub_1B597D9A4()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ButtonBorderShapeModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && a1[17]) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 5;
  int v5 = v3 - 5;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonBorderShapeModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonBorderShapeModifier()
{
  return &type metadata for ButtonBorderShapeModifier;
}

uint64_t sub_1B597DA9C@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v130 = a5;
  int v112 = a3;
  v110[1] = a2;
  uint64_t v120 = a1;
  uint64_t v124 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64B78);
  uint64_t v7 = sub_1B5A1A748();
  uint64_t v8 = sub_1B5A1AE68();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63440);
  uint64_t v10 = sub_1B5A1AE68();
  uint64_t v114 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v113 = (char *)v110 - v12;
  uint64_t v117 = *(void *)(v8 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v115 = (char *)v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v116 = (char *)v110 - v15;
  uint64_t v122 = v16;
  uint64_t v123 = v8;
  uint64_t v17 = sub_1B5A1AE68();
  uint64_t v119 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v118 = (char *)v110 - v18;
  uint64_t v19 = sub_1B5A1A8C8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = *(void *)(v7 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v127 = v9;
  uint64_t v128 = (char *)v110 - v27;
  uint64_t v121 = v17;
  uint64_t v28 = sub_1B5A1AE68();
  uint64_t v29 = MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)v110 - v30;
  uint64_t v125 = v32;
  uint64_t v126 = v29;
  switch(a4)
  {
    case 1:
      sub_1B5A1A8A8();
      uint64_t v56 = v130;
      sub_1B5A1B538();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      unint64_t v57 = sub_1B597F0C4();
      uint64_t v145 = v56;
      unint64_t v146 = v57;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v59 = v128;
      sub_1B591656C(v26, v7, WitnessTable);
      uint64_t v60 = v129 + 8;
      uint64_t v61 = *(void (**)(char *, uint64_t))(v129 + 8);
      v61(v26, v7);
      uint64_t v120 = v61;
      uint64_t v129 = v60;
      sub_1B591656C(v59, v7, WitnessTable);
      uint64_t v62 = (uint64_t)v116;
      sub_1B59100C0((uint64_t)v26, v7, v7);
      v61(v26, v7);
      uint64_t v143 = WitnessTable;
      uint64_t v144 = WitnessTable;
      uint64_t v63 = v123;
      uint64_t v64 = swift_getWitnessTable();
      unint64_t v65 = sub_1B5921418();
      uint64_t v141 = v64;
      unint64_t v142 = v65;
      uint64_t v66 = swift_getWitnessTable();
      uint64_t v111 = v31;
      uint64_t v44 = (uint64_t)v118;
      sub_1B590FFC8(v62, v63);
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v62, v63);
      uint64_t v139 = v64;
      uint64_t v140 = v66;
      goto LABEL_5;
    case 2:
      uint64_t v111 = (char *)v110 - v30;
      if (v112)
      {
        sub_1B5A1A888();
        uint64_t v89 = v130;
        sub_1B5A1B538();
        uint64_t v69 = v89;
        (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
        unint64_t v90 = sub_1B597F0C4();
        uint64_t v157 = v89;
        unint64_t v158 = v90;
        uint64_t v91 = swift_getWitnessTable();
        uint64_t v72 = v128;
        sub_1B591656C(v26, v7, v91);
        unint64_t v73 = *(void (**)(char *, uint64_t))(v129 + 8);
        v73(v26, v7);
        sub_1B591656C(v72, v7, v91);
        uint64_t v74 = v115;
        sub_1B59100C0((uint64_t)v26, v7, v7);
      }
      else
      {
        sub_1B5A1A878();
        uint64_t v68 = v130;
        sub_1B5A1B538();
        uint64_t v69 = v68;
        (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
        unint64_t v70 = sub_1B597F0C4();
        uint64_t v147 = v68;
        unint64_t v148 = v70;
        uint64_t v71 = swift_getWitnessTable();
        uint64_t v72 = v128;
        sub_1B591656C(v26, v7, v71);
        unint64_t v73 = *(void (**)(char *, uint64_t))(v129 + 8);
        v73(v26, v7);
        sub_1B591656C(v72, v7, v71);
        uint64_t v74 = v115;
        sub_1B590FFC8((uint64_t)v26, v7);
      }
      v73(v26, v7);
      v73(v72, v7);
      unint64_t v92 = sub_1B597F0C4();
      uint64_t v155 = v69;
      unint64_t v156 = v92;
      uint64_t v153 = swift_getWitnessTable();
      uint64_t v154 = v153;
      uint64_t v120 = (void (*)(char *, uint64_t))MEMORY[0x1E4F3D768];
      uint64_t v93 = v74;
      uint64_t v94 = v123;
      uint64_t v95 = swift_getWitnessTable();
      uint64_t v96 = (uint64_t)v116;
      sub_1B591656C(v93, v94, v95);
      unint64_t v97 = sub_1B5921418();
      uint64_t v98 = (uint64_t)v113;
      uint64_t v128 = (char *)v97;
      sub_1B590FFC8(v96, v94);
      uint64_t v55 = v111;
      uint64_t v129 = *(void *)(v117 + 8);
      ((void (*)(uint64_t, uint64_t))v129)(v96, v94);
      uint64_t v151 = v95;
      unint64_t v152 = v97;
      uint64_t v99 = v122;
      uint64_t v100 = swift_getWitnessTable();
      uint64_t v101 = (uint64_t)v118;
      sub_1B59100C0(v98, v94, v99);
      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v98, v99);
      uint64_t v149 = v95;
      uint64_t v150 = v100;
      uint64_t v102 = v121;
      swift_getWitnessTable();
      sub_1B590FFC8(v101, v102);
      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v101, v102);
      ((void (*)(char *, uint64_t))v129)(v115, v94);
      break;
    case 3:
      sub_1B5A1A898();
      uint64_t v75 = v130;
      sub_1B5A1B538();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      unint64_t v76 = sub_1B597F0C4();
      uint64_t v165 = v75;
      unint64_t v166 = v76;
      uint64_t v77 = swift_getWitnessTable();
      uint64_t v78 = v128;
      sub_1B591656C(v26, v7, v77);
      uint64_t v79 = *(void (**)(char *, uint64_t))(v129 + 8);
      v79(v26, v7);
      sub_1B591656C(v78, v7, v77);
      uint64_t v80 = sub_1B597E9E0((uint64_t)v26);
      uint64_t v129 = v80;
      v79(v26, v7);
      v79(v78, v7);
      v183[0] = v80;
      uint64_t v163 = v77;
      uint64_t v164 = v77;
      uint64_t v128 = (char *)MEMORY[0x1E4F3D768];
      uint64_t v81 = v123;
      uint64_t v82 = swift_getWitnessTable();
      unint64_t v83 = sub_1B5921418();
      uint64_t v84 = (uint64_t)v113;
      sub_1B59100C0((uint64_t)v183, v81, v127);
      uint64_t v161 = v82;
      unint64_t v162 = v83;
      uint64_t v55 = v31;
      uint64_t v85 = v122;
      uint64_t v86 = swift_getWitnessTable();
      uint64_t v87 = (uint64_t)v118;
      sub_1B59100C0(v84, v81, v85);
      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v84, v85);
      uint64_t v159 = v82;
      uint64_t v160 = v86;
      uint64_t v88 = v121;
      swift_getWitnessTable();
      sub_1B590FFC8(v87, v88);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v87, v88);
      break;
    case 4:
      sub_1B5A1A8B8();
      uint64_t v45 = v130;
      sub_1B5A1B538();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      unint64_t v46 = sub_1B597F0C4();
      v183[1] = v45;
      v183[2] = v46;
      uint64_t v47 = swift_getWitnessTable();
      uint64_t v48 = v128;
      sub_1B591656C(v26, v7, v47);
      uint64_t v49 = *(void (**)(char *, uint64_t))(v129 + 8);
      v49(v26, v7);
      sub_1B591656C(v48, v7, v47);
      uint64_t v50 = sub_1B597E9E0((uint64_t)v26);
      v49(v26, v7);
      v49(v48, v7);
      uint64_t v182 = v47;
      v183[0] = v50;
      uint64_t v181 = v47;
      uint64_t v51 = swift_getWitnessTable();
      unint64_t v52 = sub_1B5921418();
      uint64_t v179 = v51;
      unint64_t v180 = v52;
      uint64_t v53 = swift_getWitnessTable();
      uint64_t v177 = v51;
      uint64_t v178 = v53;
      uint64_t v54 = v121;
      swift_getWitnessTable();
      sub_1B59100C0((uint64_t)v183, v54, v127);
      swift_release();
      uint64_t v55 = v31;
      break;
    default:
      sub_1B5A1A8B8();
      uint64_t v33 = v130;
      sub_1B5A1B538();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      unint64_t v34 = sub_1B597F0C4();
      uint64_t v137 = v33;
      unint64_t v138 = v34;
      uint64_t v35 = swift_getWitnessTable();
      uint64_t v36 = v128;
      sub_1B591656C(v26, v7, v35);
      uint64_t v37 = v129 + 8;
      uint64_t v38 = *(void (**)(char *, uint64_t))(v129 + 8);
      v38(v26, v7);
      uint64_t v120 = v38;
      uint64_t v129 = v37;
      sub_1B591656C(v36, v7, v35);
      uint64_t v39 = (uint64_t)v116;
      sub_1B590FFC8((uint64_t)v26, v7);
      v38(v26, v7);
      uint64_t v135 = v35;
      uint64_t v136 = v35;
      uint64_t v40 = v123;
      uint64_t v41 = swift_getWitnessTable();
      unint64_t v42 = sub_1B5921418();
      uint64_t v133 = v41;
      unint64_t v134 = v42;
      uint64_t v43 = swift_getWitnessTable();
      uint64_t v111 = v31;
      uint64_t v44 = (uint64_t)v118;
      sub_1B590FFC8(v39, v40);
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v39, v40);
      uint64_t v131 = v41;
      uint64_t v132 = v43;
LABEL_5:
      uint64_t v67 = v121;
      swift_getWitnessTable();
      uint64_t v55 = v111;
      sub_1B590FFC8(v44, v67);
      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v44, v67);
      v120(v128, v7);
      break;
  }
  unint64_t v103 = sub_1B597F0C4();
  uint64_t v175 = v130;
  unint64_t v176 = v103;
  uint64_t v173 = swift_getWitnessTable();
  uint64_t v174 = v173;
  uint64_t v104 = swift_getWitnessTable();
  unint64_t v105 = sub_1B5921418();
  uint64_t v171 = v104;
  unint64_t v172 = v105;
  uint64_t v106 = swift_getWitnessTable();
  uint64_t v169 = v104;
  uint64_t v170 = v106;
  uint64_t v167 = swift_getWitnessTable();
  unint64_t v168 = v105;
  uint64_t v107 = v126;
  uint64_t v108 = swift_getWitnessTable();
  sub_1B591656C(v55, v107, v108);
  return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v55, v107);
}

uint64_t sub_1B597E9E0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1B5A1BA88();
}

unint64_t sub_1B597EAA8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C7573706163;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x656C63726963;
      break;
    case 4:
      unint64_t result = 0x6F426E6F74747562;
      break;
    default:
      unint64_t result = 0x6974616D6F747561;
      break;
  }
  return result;
}

uint64_t sub_1B597EB64(char a1)
{
  if (a1) {
    return 0x737569646172;
  }
  else {
    return 0x6570616873;
  }
}

uint64_t sub_1B597EB94(unsigned __int8 *a1, char *a2)
{
  return sub_1B59ED910(*a1, *a2);
}

uint64_t sub_1B597EBA0()
{
  return sub_1B59F17C4();
}

uint64_t sub_1B597EBA8()
{
  return sub_1B59F352C();
}

uint64_t sub_1B597EBB0()
{
  return sub_1B59F69CC();
}

uint64_t sub_1B597EBB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B597F760();
  *a1 = result;
  return result;
}

unint64_t sub_1B597EBE8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B597EAA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B597EC14()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B597EC74()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B597ECC4(char *a1, char *a2)
{
  return sub_1B59ED240(*a1, *a2);
}

uint64_t sub_1B597ECD0()
{
  return sub_1B59F18C8();
}

uint64_t sub_1B597ECD8()
{
  return sub_1B59F3108();
}

uint64_t sub_1B597ECE0()
{
  return sub_1B59F6F54();
}

uint64_t sub_1B597ECE8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B597ED48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B597EB64(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B597ED74()
{
  return sub_1B597EB64(*v0);
}

uint64_t sub_1B597ED7C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B597EDE0(uint64_t a1)
{
  unint64_t v2 = sub_1B597F2FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B597EE1C(uint64_t a1)
{
  unint64_t v2 = sub_1B597F2FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B597EE58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v10 = *(void *)(v2 + 8);
  uint64_t v4 = a1[4];
  char v8 = *(unsigned char *)v2;
  int v9 = *(unsigned __int8 *)(v2 + 16);
  uint64_t v7 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64B78);
  sub_1B5A1A748();
  sub_1B5A1AE68();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63440);
  sub_1B5A1AE68();
  sub_1B5A1AE68();
  a2[3] = sub_1B5A1AE68();
  sub_1B597F0C4();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1B5921418();
  swift_getWitnessTable();
  swift_getWitnessTable();
  a2[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B597DA9C(v7, v10, v9, v8, v4, (uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B597F010@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B597F120(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

unint64_t sub_1B597F048(uint64_t a1)
{
  unint64_t result = sub_1B597F070();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B597F070()
{
  unint64_t result = qword_1E9D64B70;
  if (!qword_1E9D64B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B70);
  }
  return result;
}

unint64_t sub_1B597F0C4()
{
  unint64_t result = qword_1E9D64B80;
  if (!qword_1E9D64B80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64B78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B80);
  }
  return result;
}

uint64_t sub_1B597F120(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64B88);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B597F2FC();
  sub_1B5A1C838();
  v8[30] = 0;
  sub_1B597F350();
  sub_1B5A1C5D8();
  uint64_t v6 = v8[31];
  v8[15] = 1;
  sub_1B596F9B0();
  sub_1B5A1C5B8();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

unint64_t sub_1B597F2FC()
{
  unint64_t result = qword_1E9D64B90;
  if (!qword_1E9D64B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B90);
  }
  return result;
}

unint64_t sub_1B597F350()
{
  unint64_t result = qword_1E9D64B98;
  if (!qword_1E9D64B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64B98);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ButtonBorderShapeModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B597F470);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonBorderShapeModifier.CodingKeys()
{
  return &type metadata for ButtonBorderShapeModifier.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ButtonBorderShapeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B597F574);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonBorderShapeType()
{
  return &type metadata for ButtonBorderShapeType;
}

unint64_t sub_1B597F5B0()
{
  unint64_t result = qword_1E9D64BA0;
  if (!qword_1E9D64BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BA0);
  }
  return result;
}

unint64_t sub_1B597F608()
{
  unint64_t result = qword_1E9D64BA8;
  if (!qword_1E9D64BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BA8);
  }
  return result;
}

unint64_t sub_1B597F660()
{
  unint64_t result = qword_1E9D64BB0;
  if (!qword_1E9D64BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BB0);
  }
  return result;
}

unint64_t sub_1B597F6B8()
{
  unint64_t result = qword_1E9D64BB8;
  if (!qword_1E9D64BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BB8);
  }
  return result;
}

unint64_t sub_1B597F70C()
{
  unint64_t result = qword_1E9D64BC0;
  if (!qword_1E9D64BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BC0);
  }
  return result;
}

uint64_t sub_1B597F760()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t initializeWithCopy for ScrollContentBackgroundModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B597F844(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1B5904B60);
}

uint64_t *assignWithCopy for ScrollContentBackgroundModifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B597F8D8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1B5904B60, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5904A88);
}

uint64_t *assignWithTake for ScrollContentBackgroundModifier(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B597F970(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5904A88);
}

ValueMetadata *type metadata accessor for ScrollContentBackgroundModifier()
{
  return &type metadata for ScrollContentBackgroundModifier;
}

void destroy for ListSectionSpacingModifier(uint64_t a1)
{
}

uint64_t initializeWithCopy for ListSectionSpacingModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B597F844(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1B591DF88);
}

uint64_t sub_1B597F844(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v6, v7, v8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  return a1;
}

uint64_t *assignWithCopy for ListSectionSpacingModifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B597F8D8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1B591DF88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591DF0C);
}

uint64_t *sub_1B597F8D8(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v8, v9, v10);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  uint64_t v14 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v10;
  a5(v11, v12, v13, v14);
  return a1;
}

uint64_t *assignWithTake for ListSectionSpacingModifier(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B597F970(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591DF0C);
}

uint64_t *sub_1B597F970(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v9 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v6;
  uint64_t v11 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v7;
  a4(v8, v10, v9, v11);
  return a1;
}

ValueMetadata *type metadata accessor for ListSectionSpacingModifier()
{
  return &type metadata for ListSectionSpacingModifier;
}

uint64_t destroy for ListRowBackgroundModifier(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for ListRowBackgroundModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for ListRowBackgroundModifier(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for ListRowBackgroundModifier(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListRowBackgroundModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ListRowBackgroundModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListRowBackgroundModifier()
{
  return &type metadata for ListRowBackgroundModifier;
}

void destroy for ListStyleModifier(uint64_t a1)
{
  sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  char v5 = *(unsigned char *)(a1 + 56);
  sub_1B590D6F0(v2, v3, v4, v5);
}

uint64_t initializeWithCopy for ListStyleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 48);
  LOBYTE(v2) = *(unsigned char *)(v2 + 56);
  sub_1B590D634(v8, v9, v10, v2);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v2;
  return a1;
}

uint64_t assignWithCopy for ListStyleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B5904A88(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v14 = *(void *)(v2 + 48);
  LOBYTE(v2) = *(unsigned char *)(v2 + 56);
  sub_1B590D634(v12, v13, v14, v2);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  char v18 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 56) = v2;
  sub_1B590D6F0(v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ListStyleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5904A88(v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B590D6F0(v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListStyleModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ListStyleModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListStyleModifier()
{
  return &type metadata for ListStyleModifier;
}

uint64_t destroy for ListRowSeparatorModifier(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 24);
  if (v2 <= 0xFD) {
    unint64_t result = sub_1B5904A88(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), v2);
  }
  unsigned int v3 = *(unsigned __int8 *)(v1 + 56);
  if (v3 <= 0xFD)
  {
    uint64_t v4 = *(void *)(v1 + 32);
    uint64_t v5 = *(void *)(v1 + 40);
    uint64_t v6 = *(void *)(v1 + 48);
    return sub_1B5904A88(v4, v5, v6, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ListRowSeparatorModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 <= 0xFD)
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    sub_1B5904B60(*(void *)a2, v6, v7, v4);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  unsigned int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a2 + 48);
    sub_1B5904B60(v9, v10, v11, v8);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  return a1;
}

uint64_t assignWithCopy for ListRowSeparatorModifier(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) <= 0xFDu)
  {
    if (v4 <= 0xFD)
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      sub_1B5904B60(*(void *)a2, v11, v12, v4);
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = *(void *)(a1 + 16);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      unsigned __int8 v16 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v4;
      sub_1B5904A88(v13, v14, v15, v16);
    }
    else
    {
      sub_1B590DA50(a1);
      long long v6 = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 9) = v6;
    }
  }
  else if (v4 <= 0xFD)
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    uint64_t v9 = *((void *)a2 + 2);
    sub_1B5904B60(*(void *)a2, v8, v9, v4);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    long long v5 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v5;
  }
  uint64_t v17 = (_OWORD *)(a1 + 32);
  char v18 = a2 + 2;
  unsigned int v19 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v19 <= 0xFD)
    {
      uint64_t v25 = *((void *)a2 + 4);
      uint64_t v26 = *((void *)a2 + 5);
      uint64_t v27 = *((void *)a2 + 6);
      sub_1B5904B60(v25, v26, v27, v19);
      uint64_t v28 = *(void *)(a1 + 32);
      uint64_t v29 = *(void *)(a1 + 40);
      uint64_t v30 = *(void *)(a1 + 48);
      *(void *)(a1 + 32) = v25;
      *(void *)(a1 + 40) = v26;
      *(void *)(a1 + 48) = v27;
      unsigned __int8 v31 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v19;
      sub_1B5904A88(v28, v29, v30, v31);
    }
    else
    {
      sub_1B590DA50(a1 + 32);
      long long v21 = *(long long *)((char *)a2 + 41);
      *uint64_t v17 = *v18;
      *(_OWORD *)(a1 + 41) = v21;
    }
  }
  else if (v19 <= 0xFD)
  {
    uint64_t v22 = *((void *)a2 + 4);
    uint64_t v23 = *((void *)a2 + 5);
    uint64_t v24 = *((void *)a2 + 6);
    sub_1B5904B60(v22, v23, v24, v19);
    *(void *)(a1 + 32) = v22;
    *(void *)(a1 + 40) = v23;
    *(void *)(a1 + 48) = v24;
    *(unsigned char *)(a1 + 56) = v19;
  }
  else
  {
    long long v20 = *v18;
    *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
    *uint64_t v17 = v20;
  }
  return a1;
}

uint64_t assignWithTake for ListRowSeparatorModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 > 0xFD)
  {
    sub_1B590DA50(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5904A88(v7, v8, v9, v4);
LABEL_6:
  unsigned int v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 <= 0xFD)
  {
    unsigned int v11 = *(unsigned __int8 *)(a2 + 56);
    if (v11 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 48);
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(a1 + 40);
      uint64_t v15 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = v12;
      *(unsigned char *)(a1 + 56) = v11;
      sub_1B5904A88(v13, v14, v15, v10);
      return a1;
    }
    sub_1B590DA50(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListRowSeparatorModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (*(unsigned __int8 *)(a1 + 24) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1F));
  unsigned int v4 = v3 ^ 0x7F;
  int v5 = 126 - v3;
  if (v4 >= 0x7D) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ListRowSeparatorModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = ((a2 ^ 0x7F) >> 1) & 0xFE | ((a2 ^ 0x7F) << 6);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListRowSeparatorModifier()
{
  return &type metadata for ListRowSeparatorModifier;
}

ValueMetadata *type metadata accessor for ListRowInsetsModifier()
{
  return &type metadata for ListRowInsetsModifier;
}

double sub_1B5980378(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v16 = *(void *)(v1 + 72);
  uint64_t v17 = *(void *)(v1 + 64);
  uint64_t v15 = *(void *)(v1 + 80);
  uint64_t v20 = *(void *)(v1 + 104);
  uint64_t v21 = *(void *)(v1 + 96);
  uint64_t v19 = *(void *)(v1 + 112);
  char v8 = *(unsigned char *)(v1 + 56);
  char v14 = *(unsigned char *)(v1 + 88);
  char v18 = *(unsigned char *)(v1 + 120);
  uint64_t v22 = *(void *)(v1 + 16);
  char v23 = *(unsigned char *)(v1 + 24);
  sub_1B591DF88(*(void *)v1, v3, v22, v23);
  double v9 = COERCE_DOUBLE(sub_1B5963534(v2));
  LOBYTE(v2) = v10;
  sub_1B591DF0C(v4, v3, v22, v23);
  if (v2) {
    double v11 = 0.0;
  }
  else {
    double v11 = v9;
  }
  sub_1B591DF88(v5, v6, v7, v8);
  sub_1B5963534(a1);
  sub_1B591DF0C(v5, v6, v7, v8);
  sub_1B591DF88(v17, v16, v15, v14);
  sub_1B5963534(a1);
  sub_1B591DF0C(v17, v16, v15, v14);
  sub_1B591DF88(v21, v20, v19, v18);
  sub_1B5963534(a1);
  sub_1B591DF0C(v21, v20, v19, v18);
  return v11;
}

uint64_t sub_1B59805A0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    sub_1B5983140();
    sub_1B5A1C6C8();
    a2[4] = v10;
    a2[5] = v11;
    a2[6] = *(_OWORD *)v12;
    *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)&v12[9];
    *a2 = v6;
    a2[1] = v7;
    a2[2] = v8;
    a2[3] = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5980698@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  long long v6 = v3[4];
  long long v7 = v3[6];
  v11[5] = v3[5];
  v12[0] = v7;
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)v3 + 105);
  long long v8 = v3[1];
  v11[0] = *v3;
  v11[1] = v8;
  long long v9 = v3[3];
  void v11[2] = v3[2];
  void v11[3] = v9;
  v11[4] = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5982E50((uint64_t)v11, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591DF88);
  sub_1B5980378(a2);
  sub_1B5982E50((uint64_t)v11, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591DF0C);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64BF8);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64C00, &qword_1E9D64BF8);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B488();
}

uint64_t sub_1B5980820@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B59805A0(a1, a2);
}

uint64_t sub_1B5980838@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64CE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5983F34();
  sub_1B5A1C838();
  if (!v2)
  {
    char v38 = 0;
    sub_1B59358E8();
    sub_1B5A1C5B8();
    if (v36 < 0xFEu)
    {
      int v37 = v36;
      uint64_t v32 = *((void *)&v34 + 1);
      uint64_t v33 = v34;
      uint64_t v31 = v35;
    }
    else
    {
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v31 = 0;
      int v37 = 0;
    }
    char v38 = 1;
    sub_1B5A1C5B8();
    if (v36 < 0xFEu)
    {
      int v30 = v36;
      uint64_t v28 = *((void *)&v34 + 1);
      uint64_t v29 = v34;
      uint64_t v27 = v35;
    }
    else
    {
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v27 = 0;
      int v30 = 0;
    }
    char v38 = 2;
    sub_1B5A1C5B8();
    unsigned __int8 v9 = v36;
    if (v36 < 0xFEu)
    {
      uint64_t v25 = *((void *)&v34 + 1);
      uint64_t v26 = v34;
      uint64_t v24 = v35;
    }
    else
    {
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v24 = 0;
      unsigned __int8 v9 = 0;
    }
    char v38 = 3;
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    unsigned __int8 v10 = v36;
    char v11 = v37;
    uint64_t v12 = v32;
    uint64_t v13 = v31;
    char v14 = v30;
    uint64_t v16 = v28;
    uint64_t v15 = v29;
    uint64_t v18 = v26;
    uint64_t v17 = v27;
    uint64_t v19 = v24;
    uint64_t v20 = v25;
    if (v36 < 0xFEu)
    {
      long long v22 = v34;
      uint64_t v21 = v35;
    }
    else
    {
      uint64_t v21 = 0;
      unsigned __int8 v10 = 0;
      long long v22 = 0uLL;
    }
    *(void *)a2 = v33;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v13;
    *(unsigned char *)(a2 + 24) = v11;
    *(void *)(a2 + 32) = v15;
    *(void *)(a2 + 40) = v16;
    *(void *)(a2 + 48) = v17;
    *(unsigned char *)(a2 + 56) = v14;
    *(void *)(a2 + 64) = v18;
    *(void *)(a2 + 72) = v20;
    *(void *)(a2 + 80) = v19;
    *(unsigned char *)(a2 + 88) = v9;
    *(_OWORD *)(a2 + 96) = v22;
    *(void *)(a2 + 112) = v21;
    *(unsigned char *)(a2 + 120) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5980BB4(char a1)
{
  return qword_1B5A28468[a1];
}

uint64_t sub_1B5980BD4(char *a1, char *a2)
{
  return sub_1B59EDB6C(*a1, *a2);
}

uint64_t sub_1B5980BE0()
{
  return sub_1B59F3670();
}

uint64_t sub_1B5980BE8()
{
  return sub_1B59F68FC();
}

uint64_t sub_1B5980BF0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5983BD0();
  *a1 = result;
  return result;
}

uint64_t sub_1B5980C20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5980BB4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5980C4C()
{
  return sub_1B5980BB4(*v0);
}

uint64_t sub_1B5980C54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5983BD0();
  *a1 = result;
  return result;
}

uint64_t sub_1B5980C7C(uint64_t a1)
{
  unint64_t v2 = sub_1B5983F34();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5980CB8(uint64_t a1)
{
  unint64_t v2 = sub_1B5983F34();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5980CF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5980838(a1, a2);
}

uint64_t sub_1B5980D0C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)v3;
  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t v8 = *(void *)(v3 + 16);
  unsigned int v9 = *(unsigned __int8 *)(v3 + 24);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v15 = *(void *)(v3 + 32);
  uint64_t v16 = *(void *)(v3 + 40);
  unsigned int v11 = *(unsigned __int8 *)(v3 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v9 <= 0xFD)
  {
    sub_1B5904B60(v7, v6, v8, v9);
    StringResolvable.resolved(with:)(a2);
    if (v4) {
      return sub_1B5904B4C(v7, v6, v8, v9);
    }
    uint64_t v14 = a2;
    sub_1B5904B4C(v7, v6, v8, v9);
  }
  else
  {
    uint64_t v14 = a2;
  }
  sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v11 <= 0xFD)
  {
    sub_1B5904B60(v15, v16, v10, v11);
    StringResolvable.resolved(with:)(v14);
    if (v4) {
      return sub_1B5904B4C(v15, v16, v10, v11);
    }
    sub_1B5904B4C(v15, v16, v10, v11);
  }
  uint64_t v13 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v13 == 2) {
    goto LABEL_14;
  }
  if (v13 == 1)
  {
    sub_1B5A1A568();
    goto LABEL_16;
  }
  if (v13) {
LABEL_14:
  }
    sub_1B5A1A548();
  else {
    sub_1B5A1A558();
  }
LABEL_16:
  a3[3] = swift_getOpaqueTypeMetadata2();
  a3[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B528();
}

uint64_t sub_1B5980FA4(char a1)
{
  if (a1) {
    return 0x7365676465;
  }
  else {
    return 0x696C696269736976;
  }
}

uint64_t sub_1B5980FE4()
{
  return sub_1B5980FA4(*v0);
}

uint64_t sub_1B5980FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5983C1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B5981014(uint64_t a1)
{
  unint64_t v2 = sub_1B59830EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5981050(uint64_t a1)
{
  unint64_t v2 = sub_1B59830EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B598108C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64C68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59830EC();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v31 = 0;
  sub_1B5904A34();
  sub_1B5A1C5B8();
  uint64_t v9 = v27;
  char v31 = 1;
  uint64_t v24 = v28;
  uint64_t v25 = v26;
  int v30 = v29;
  sub_1B5904BDC(v26, v27, v28, v29);
  sub_1B5A1C5B8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v26;
  uint64_t v22 = v27;
  uint64_t v23 = v26;
  uint64_t v11 = v28;
  uint64_t v21 = v28;
  HIDWORD(v20) = v29;
  uint64_t v12 = v24;
  uint64_t v13 = v25;
  unsigned __int8 v14 = v30;
  sub_1B5904BDC(v25, v9, v24, v30);
  uint64_t v15 = v10;
  uint64_t v16 = v22;
  uint64_t v17 = v11;
  LOBYTE(v11) = BYTE4(v20);
  sub_1B5904BDC(v15, v22, v17, BYTE4(v20));
  sub_1B5904B4C(v13, v9, v12, v14);
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v12;
  *(unsigned char *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v23;
  *(void *)(a2 + 40) = v16;
  uint64_t v18 = v21;
  *(void *)(a2 + 48) = v21;
  *(unsigned char *)(a2 + 56) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1B5904B4C(v13, v9, v12, v14);
  return sub_1B5904B4C(v23, v22, v18, v11);
}

uint64_t sub_1B5981354@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5980D0C(a1, a2, a3);
}

uint64_t sub_1B598136C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B598108C(a1, a2);
}

uint64_t sub_1B5981384@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v83 = a1;
  uint64_t v88 = a3;
  uint64_t v6 = sub_1B5A1A828();
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v74 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B5A1A7D8();
  uint64_t v72 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v71 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B5A1AFA8();
  uint64_t v69 = *(void *)(v10 - 8);
  uint64_t v70 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v68 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1B5A1A628();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  unint64_t v65 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1B5A1A698();
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v62 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1B5A1A7A8();
  uint64_t v78 = *(void *)(v14 - 8);
  uint64_t v79 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v77 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)v3;
  uint64_t v16 = *(void *)(v3 + 8);
  uint64_t v18 = *(void *)(v3 + 16);
  unsigned __int8 v19 = *(unsigned char *)(v3 + 24);
  uint64_t v20 = *(void *)(v3 + 32);
  uint64_t v21 = *(void *)(v3 + 48);
  uint64_t v80 = *(void *)(v3 + 40);
  uint64_t v81 = v20;
  char v22 = *(unsigned char *)(v3 + 56);
  uint64_t v84 = v17;
  uint64_t v85 = v16;
  uint64_t v86 = v18;
  LOBYTE(v87) = v19;
  sub_1B5904B60(v17, v16, v18, v19);
  uint64_t v82 = a2;
  StringResolvable.resolved(with:)(a2);
  if (v4) {

  }
  sub_1B5904A88(v17, v16, v18, v19);
  char v23 = sub_1B5982F2C();
  if (v23 == 7) {
    char v24 = 0;
  }
  else {
    char v24 = v23;
  }
  uint64_t v26 = v80;
  uint64_t v25 = v81;
  sub_1B590D634(v81, v80, v21, v22);
  sub_1B59B4120(v82, v25, v26, v21, v22);
  sub_1B590D6F0(v25, v26, v21, v22);
  switch(v24)
  {
    case 2:
      uint64_t v35 = v83[3];
      uint64_t v36 = v83[4];
      __swift_project_boxed_opaque_existential_1(v83, v35);
      unsigned __int8 v29 = v71;
      sub_1B5A1A7C8();
      uint64_t v30 = v73;
      uint64_t v84 = v35;
      uint64_t v85 = v73;
      uint64_t v37 = MEMORY[0x1E4F3CCF8];
      uint64_t v86 = v36;
      uint64_t v87 = MEMORY[0x1E4F3CCF8];
      OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
      uint64_t v39 = v88;
      v88[3] = OpaqueTypeMetadata2;
      uint64_t v84 = v35;
      uint64_t v85 = v30;
      uint64_t v86 = v36;
      uint64_t v87 = v37;
      v39[4] = swift_getOpaqueTypeConformance2();
      __swift_allocate_boxed_opaque_existential_1(v39);
      sub_1B5A1B7A8();
      uint64_t v34 = v72;
      break;
    case 3:
      uint64_t v40 = v83[3];
      uint64_t v41 = v83[4];
      __swift_project_boxed_opaque_existential_1(v83, v40);
      unsigned __int8 v29 = v65;
      sub_1B5A1A618();
      uint64_t v30 = v67;
      uint64_t v84 = v40;
      uint64_t v85 = v67;
      uint64_t v42 = MEMORY[0x1E4F3C968];
      uint64_t v86 = v41;
      uint64_t v87 = MEMORY[0x1E4F3C968];
      uint64_t v43 = swift_getOpaqueTypeMetadata2();
      uint64_t v44 = v88;
      v88[3] = v43;
      uint64_t v84 = v40;
      uint64_t v85 = v30;
      uint64_t v86 = v41;
      uint64_t v87 = v42;
      v44[4] = swift_getOpaqueTypeConformance2();
      __swift_allocate_boxed_opaque_existential_1(v44);
      sub_1B5A1B7A8();
      uint64_t v34 = v66;
      break;
    case 4:
      uint64_t v45 = v83[3];
      uint64_t v46 = v83[4];
      __swift_project_boxed_opaque_existential_1(v83, v45);
      unsigned __int8 v29 = v68;
      sub_1B5A1AF98();
      uint64_t v30 = v70;
      uint64_t v84 = v45;
      uint64_t v85 = v70;
      uint64_t v47 = MEMORY[0x1E4F3D8F0];
      uint64_t v86 = v46;
      uint64_t v87 = MEMORY[0x1E4F3D8F0];
      uint64_t v48 = swift_getOpaqueTypeMetadata2();
      uint64_t v49 = v88;
      v88[3] = v48;
      uint64_t v84 = v45;
      uint64_t v85 = v30;
      uint64_t v86 = v46;
      uint64_t v87 = v47;
      v49[4] = swift_getOpaqueTypeConformance2();
      __swift_allocate_boxed_opaque_existential_1(v49);
      sub_1B5A1B7A8();
      uint64_t v34 = v69;
      break;
    case 5:
      uint64_t v50 = v83[3];
      uint64_t v51 = v83[4];
      __swift_project_boxed_opaque_existential_1(v83, v50);
      unsigned __int8 v29 = v62;
      sub_1B5A1A688();
      uint64_t v30 = v64;
      uint64_t v84 = v50;
      uint64_t v85 = v64;
      uint64_t v52 = MEMORY[0x1E4F3CA00];
      uint64_t v86 = v51;
      uint64_t v87 = MEMORY[0x1E4F3CA00];
      uint64_t v53 = swift_getOpaqueTypeMetadata2();
      uint64_t v54 = v88;
      v88[3] = v53;
      uint64_t v84 = v50;
      uint64_t v85 = v30;
      uint64_t v86 = v51;
      uint64_t v87 = v52;
      v54[4] = swift_getOpaqueTypeConformance2();
      __swift_allocate_boxed_opaque_existential_1(v54);
      sub_1B5A1B7A8();
      uint64_t v34 = v63;
      break;
    case 6:
      uint64_t v55 = v83[3];
      uint64_t v56 = v83[4];
      __swift_project_boxed_opaque_existential_1(v83, v55);
      unsigned __int8 v29 = v74;
      sub_1B5A1A818();
      uint64_t v30 = v76;
      uint64_t v84 = v55;
      uint64_t v85 = v76;
      uint64_t v57 = MEMORY[0x1E4F3CDC8];
      uint64_t v86 = v56;
      uint64_t v87 = MEMORY[0x1E4F3CDC8];
      uint64_t v58 = swift_getOpaqueTypeMetadata2();
      uint64_t v59 = v88;
      v88[3] = v58;
      uint64_t v84 = v55;
      uint64_t v85 = v30;
      uint64_t v86 = v56;
      uint64_t v87 = v57;
      v59[4] = swift_getOpaqueTypeConformance2();
      __swift_allocate_boxed_opaque_existential_1(v59);
      sub_1B5A1B7A8();
      uint64_t v34 = v75;
      break;
    default:
      uint64_t v27 = v83[3];
      uint64_t v28 = v83[4];
      __swift_project_boxed_opaque_existential_1(v83, v27);
      unsigned __int8 v29 = v77;
      sub_1B5A1A798();
      uint64_t v30 = v79;
      uint64_t v84 = v27;
      uint64_t v85 = v79;
      uint64_t v31 = MEMORY[0x1E4F3CCC0];
      uint64_t v86 = v28;
      uint64_t v87 = MEMORY[0x1E4F3CCC0];
      uint64_t v32 = swift_getOpaqueTypeMetadata2();
      uint64_t v33 = v88;
      v88[3] = v32;
      uint64_t v84 = v27;
      uint64_t v85 = v30;
      uint64_t v86 = v28;
      uint64_t v87 = v31;
      v33[4] = swift_getOpaqueTypeConformance2();
      __swift_allocate_boxed_opaque_existential_1(v33);
      sub_1B5A1B7A8();
      uint64_t v34 = v78;
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v29, v30);
}

uint64_t sub_1B5981C64(char a1)
{
  if (a1) {
    return 0xD000000000000018;
  }
  else {
    return 0x656C797473;
  }
}

uint64_t sub_1B5981C9C()
{
  return sub_1B5981C64(*v0);
}

uint64_t sub_1B5981CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5983D08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B5981CCC(uint64_t a1)
{
  unint64_t v2 = sub_1B5983098();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5981D08(uint64_t a1)
{
  unint64_t v2 = sub_1B5983098();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5981D44(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64C58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5983098();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v36 = 0;
    sub_1B5904A34();
    sub_1B5A1C5D8();
    uint64_t v26 = a2;
    uint64_t v9 = v31;
    uint64_t v10 = v32;
    uint64_t v30 = v33;
    int v11 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    char v36 = 1;
    uint64_t v28 = v10;
    uint64_t v29 = v9;
    uint64_t v12 = v10;
    uint64_t v13 = v30;
    int v35 = v11;
    sub_1B5904B60(v9, v12, v30, v11);
    sub_1B59095C8((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    unsigned __int8 v14 = v35;
    uint64_t v15 = v13;
    uint64_t v17 = v28;
    uint64_t v16 = v29;
    uint64_t v18 = v26;
    if (v34 == 255)
    {
      uint64_t v19 = 0;
      uint64_t v25 = 0;
      uint64_t v27 = 0;
      int v24 = 0;
    }
    else
    {
      uint64_t v27 = v33;
      int v24 = v34 & 1;
      uint64_t v19 = v31;
      uint64_t v25 = v32;
    }
    sub_1B5904B60(v29, v28, v15, v35);
    uint64_t v30 = v19;
    char v20 = v24;
    sub_1B590D634(v19, v25, v27, v24);
    sub_1B5904A88(v16, v17, v15, v14);
    *(void *)uint64_t v18 = v16;
    *(void *)(v18 + 8) = v17;
    *(void *)(v18 + 16) = v15;
    *(unsigned char *)(v18 + 24) = v14;
    *(void *)(v18 + 32) = v19;
    uint64_t v21 = v25;
    uint64_t v22 = v27;
    *(void *)(v18 + 40) = v25;
    *(void *)(v18 + 48) = v22;
    *(unsigned char *)(v18 + 56) = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B5904A88(v16, v17, v15, v14);
    sub_1B590D6F0(v30, v21, v27, v20);
  }
}

uint64_t sub_1B5982084@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5981384(a1, a2, a3);
}

void sub_1B598209C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1B59820B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5921484(v2, (uint64_t)v7);
  uint64_t v4 = v8;
  if (v8)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_1B59214EC((uint64_t)v7);
  }
  v7[0] = v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64C08);
  a2[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64C10, &qword_1E9D64C08);
  a2[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_1B5A1B548();
  return swift_release();
}

uint64_t sub_1B5982218@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    uint64_t v8 = &type metadata for ViewContent;
    unint64_t v9 = sub_1B5914034();
    *(void *)&long long v7 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C6C8();
    sub_1B59215A0((uint64_t)&v7, (uint64_t)v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    long long v5 = v11[1];
    *(_OWORD *)a2 = v11[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5982350@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B59820B4(a1, a2);
}

uint64_t sub_1B5982368@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5982218(a1, a2);
}

uint64_t sub_1B598238C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5983DE8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B59823B8(uint64_t a1)
{
  unint64_t v2 = sub_1B5982FCC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59823F4(uint64_t a1)
{
  unint64_t v2 = sub_1B5982FCC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5982430@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64C48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5982FCC();
  sub_1B5A1C838();
  if (!v2)
  {
    sub_1B59358E8();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59825AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)v3;
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v8 = *(void *)(v3 + 16);
  char v9 = *(unsigned char *)(v3 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B591DF88(v6, v7, v8, v9);
  sub_1B5963534(a2);
  sub_1B591DF0C(v6, v7, v8, v9);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64C18);
  sub_1B5A1A748();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64C20);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64C28, &qword_1E9D64C18);
  swift_getWitnessTable();
  sub_1B59095C8(&qword_1E9D64C30, &qword_1E9D64C20);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B568();
}

uint64_t sub_1B5982774@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5982430(a1, a2);
}

uint64_t sub_1B598278C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v8 = *(void *)v3;
  uint64_t v9 = *(void *)(v3 + 8);
  uint64_t v10 = *(void *)(v3 + 16);
  unsigned __int8 v11 = *(unsigned char *)(v3 + 24);
  sub_1B5904B60(*(void *)v3, v9, v10, v11);
  StringResolvable.resolved(with:)(a2);
  if (v4) {
    return sub_1B5904A88(v8, v9, v10, v11);
  }
  sub_1B5904A88(v8, v9, v10, v11);
  sub_1B5A1C558();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3[3] = swift_getOpaqueTypeMetadata2();
  a3[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B5E8();
}

uint64_t sub_1B5982918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5983E88(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B5982944(uint64_t a1)
{
  unint64_t v2 = sub_1B5982F78();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5982980(uint64_t a1)
{
  unint64_t v2 = sub_1B5982F78();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59829BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64C38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5982F78();
  sub_1B5A1C838();
  if (!v2)
  {
    sub_1B5904A34();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5982B38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B598278C(a1, a2, a3);
}

uint64_t sub_1B5982B50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59829BC(a1, a2);
}

unint64_t sub_1B5982B68(uint64_t a1)
{
  unint64_t result = sub_1B5982B90();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5982B90()
{
  unint64_t result = qword_1E9D64BC8;
  if (!qword_1E9D64BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BC8);
  }
  return result;
}

unint64_t sub_1B5982BE4(uint64_t a1)
{
  unint64_t result = sub_1B5982C0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5982C0C()
{
  unint64_t result = qword_1E9D64BD0;
  if (!qword_1E9D64BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BD0);
  }
  return result;
}

unint64_t sub_1B5982C60(uint64_t a1)
{
  unint64_t result = sub_1B5982C88();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5982C88()
{
  unint64_t result = qword_1E9D64BD8;
  if (!qword_1E9D64BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BD8);
  }
  return result;
}

unint64_t sub_1B5982CDC(uint64_t a1)
{
  unint64_t result = sub_1B5982D04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5982D04()
{
  unint64_t result = qword_1E9D64BE0;
  if (!qword_1E9D64BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BE0);
  }
  return result;
}

unint64_t sub_1B5982D58(uint64_t a1)
{
  unint64_t result = sub_1B5982D80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5982D80()
{
  unint64_t result = qword_1E9D64BE8;
  if (!qword_1E9D64BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BE8);
  }
  return result;
}

unint64_t sub_1B5982DD4(uint64_t a1)
{
  unint64_t result = sub_1B5982DFC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5982DFC()
{
  unint64_t result = qword_1E9D64BF0;
  if (!qword_1E9D64BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64BF0);
  }
  return result;
}

uint64_t sub_1B5982E50(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 96);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 88);
  unsigned int v13 = *(unsigned __int8 *)(a1 + 120);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  a2(v4, v5, v6, v10);
  a2(v7, v8, v9, v11);
  a2(v16, v15, v14, v13);
  return a1;
}

uint64_t sub_1B5982F2C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B5982F78()
{
  unint64_t result = qword_1E9D64C40;
  if (!qword_1E9D64C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64C40);
  }
  return result;
}

unint64_t sub_1B5982FCC()
{
  unint64_t result = qword_1E9D64C50;
  if (!qword_1E9D64C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64C50);
  }
  return result;
}

uint64_t sub_1B5983020()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

unint64_t sub_1B5983098()
{
  unint64_t result = qword_1E9D64C60;
  if (!qword_1E9D64C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64C60);
  }
  return result;
}

unint64_t sub_1B59830EC()
{
  unint64_t result = qword_1E9D64C70;
  if (!qword_1E9D64C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64C70);
  }
  return result;
}

unint64_t sub_1B5983140()
{
  unint64_t result = qword_1E9D64C78;
  if (!qword_1E9D64C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64C78);
  }
  return result;
}

ValueMetadata *type metadata accessor for ListRowSeparatorModifier.CodingKeys()
{
  return &type metadata for ListRowSeparatorModifier.CodingKeys;
}

unsigned char *_s6LiftUI24ListRowSeparatorModifierV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5983274);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListStyleModifier.CodingKeys()
{
  return &type metadata for ListStyleModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for ListSectionSpacingModifier.CodingKeys()
{
  return &type metadata for ListSectionSpacingModifier.CodingKeys;
}

unsigned char *_s6LiftUI26ListSectionSpacingModifierV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B598335CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollContentBackgroundModifier.CodingKeys()
{
  return &type metadata for ScrollContentBackgroundModifier.CodingKeys;
}

void _s6LiftUI20EdgeInsetsResolvableVwxx_0(uint64_t a1)
{
  sub_1B591DF0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_1B591DF0C(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  sub_1B591DF0C(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  char v5 = *(unsigned char *)(a1 + 120);
  sub_1B591DF0C(v2, v3, v4, v5);
}

uint64_t _s6LiftUI20EdgeInsetsResolvableVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 48);
  char v11 = *(unsigned char *)(v2 + 56);
  sub_1B591DF88(v8, v9, v10, v11);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  uint64_t v12 = *(void *)(v2 + 64);
  uint64_t v13 = *(void *)(v2 + 72);
  uint64_t v14 = *(void *)(v2 + 80);
  char v15 = *(unsigned char *)(v2 + 88);
  sub_1B591DF88(v12, v13, v14, v15);
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(unsigned char *)(a1 + 88) = v15;
  uint64_t v16 = *(void *)(v2 + 96);
  uint64_t v17 = *(void *)(v2 + 104);
  uint64_t v18 = *(void *)(v2 + 112);
  LOBYTE(v2) = *(unsigned char *)(v2 + 120);
  sub_1B591DF88(v16, v17, v18, v2);
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(unsigned char *)(a1 + 120) = v2;
  return a1;
}

uint64_t _s6LiftUI20EdgeInsetsResolvableVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  char v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B591DF0C(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v14 = *(void *)(v2 + 48);
  char v15 = *(unsigned char *)(v2 + 56);
  sub_1B591DF88(v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  char v19 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v15;
  sub_1B591DF0C(v16, v17, v18, v19);
  uint64_t v20 = *(void *)(v2 + 64);
  uint64_t v21 = *(void *)(v2 + 72);
  uint64_t v22 = *(void *)(v2 + 80);
  char v23 = *(unsigned char *)(v2 + 88);
  sub_1B591DF88(v20, v21, v22, v23);
  uint64_t v24 = *(void *)(a1 + 64);
  uint64_t v25 = *(void *)(a1 + 72);
  uint64_t v26 = *(void *)(a1 + 80);
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v21;
  *(void *)(a1 + 80) = v22;
  char v27 = *(unsigned char *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v23;
  sub_1B591DF0C(v24, v25, v26, v27);
  uint64_t v28 = *(void *)(v2 + 96);
  uint64_t v29 = *(void *)(v2 + 104);
  uint64_t v30 = *(void *)(v2 + 112);
  LOBYTE(v2) = *(unsigned char *)(v2 + 120);
  sub_1B591DF88(v28, v29, v30, v2);
  uint64_t v31 = *(void *)(a1 + 96);
  uint64_t v32 = *(void *)(a1 + 104);
  uint64_t v33 = *(void *)(a1 + 112);
  *(void *)(a1 + 96) = v28;
  *(void *)(a1 + 104) = v29;
  *(void *)(a1 + 112) = v30;
  char v34 = *(unsigned char *)(a1 + 120);
  *(unsigned char *)(a1 + 120) = v2;
  sub_1B591DF0C(v31, v32, v33, v34);
  return a1;
}

uint64_t _s6LiftUI20EdgeInsetsResolvableVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  char v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B591DF0C(v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v10;
  char v15 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B591DF0C(v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a2 + 80);
  char v17 = *(unsigned char *)(a2 + 88);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v16;
  char v21 = *(unsigned char *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v17;
  sub_1B591DF0C(v18, v19, v20, v21);
  uint64_t v22 = *(void *)(a2 + 112);
  char v23 = *(unsigned char *)(a2 + 120);
  uint64_t v24 = *(void *)(a1 + 96);
  uint64_t v25 = *(void *)(a1 + 104);
  uint64_t v26 = *(void *)(a1 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = v22;
  char v27 = *(unsigned char *)(a1 + 120);
  *(unsigned char *)(a1 + 120) = v23;
  sub_1B591DF0C(v24, v25, v26, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGBAColor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 121)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 24) & 0x7E | (*(unsigned __int8 *)(a1 + 24) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RGBAColor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)unint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 121) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EdgeInsetsResolvable()
{
  return &type metadata for EdgeInsetsResolvable;
}

unint64_t sub_1B59837B4()
{
  unint64_t result = qword_1E9D64C80;
  if (!qword_1E9D64C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64C80);
  }
  return result;
}

unint64_t sub_1B598380C()
{
  unint64_t result = qword_1E9D64C88;
  if (!qword_1E9D64C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64C88);
  }
  return result;
}

unint64_t sub_1B5983864()
{
  unint64_t result = qword_1E9D64C90;
  if (!qword_1E9D64C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64C90);
  }
  return result;
}

unint64_t sub_1B59838BC()
{
  unint64_t result = qword_1E9D64C98;
  if (!qword_1E9D64C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64C98);
  }
  return result;
}

unint64_t sub_1B5983914()
{
  unint64_t result = qword_1E9D64CA0;
  if (!qword_1E9D64CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CA0);
  }
  return result;
}

unint64_t sub_1B598396C()
{
  unint64_t result = qword_1E9D64CA8;
  if (!qword_1E9D64CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CA8);
  }
  return result;
}

unint64_t sub_1B59839C4()
{
  unint64_t result = qword_1E9D64CB0;
  if (!qword_1E9D64CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CB0);
  }
  return result;
}

unint64_t sub_1B5983A1C()
{
  unint64_t result = qword_1E9D64CB8;
  if (!qword_1E9D64CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CB8);
  }
  return result;
}

unint64_t sub_1B5983A74()
{
  unint64_t result = qword_1E9D64CC0;
  if (!qword_1E9D64CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CC0);
  }
  return result;
}

unint64_t sub_1B5983ACC()
{
  unint64_t result = qword_1E9D64CC8;
  if (!qword_1E9D64CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CC8);
  }
  return result;
}

unint64_t sub_1B5983B24()
{
  unint64_t result = qword_1E9D64CD0;
  if (!qword_1E9D64CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CD0);
  }
  return result;
}

unint64_t sub_1B5983B7C()
{
  unint64_t result = qword_1E9D64CD8;
  if (!qword_1E9D64CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CD8);
  }
  return result;
}

uint64_t sub_1B5983BD0()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B5983C1C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696C696269736976 && a2 == 0xEA00000000007974;
  if (v3 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365676465 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B5983D08(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v3 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001B5A33080)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B5983DE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x676E6963617073 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B5983E70()
{
  return 0x676E6963617073;
}

uint64_t sub_1B5983E88(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B5983F18()
{
  return 0x696C696269736976;
}

unint64_t sub_1B5983F34()
{
  unint64_t result = qword_1E9D64CE8;
  if (!qword_1E9D64CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CE8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EdgeInsetsResolvable.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5984054);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EdgeInsetsResolvable.CodingKeys()
{
  return &type metadata for EdgeInsetsResolvable.CodingKeys;
}

unint64_t sub_1B5984090()
{
  unint64_t result = qword_1E9D64CF0;
  if (!qword_1E9D64CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CF0);
  }
  return result;
}

unint64_t sub_1B59840E8()
{
  unint64_t result = qword_1E9D64CF8;
  if (!qword_1E9D64CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64CF8);
  }
  return result;
}

unint64_t sub_1B5984140()
{
  unint64_t result = qword_1E9D64D00;
  if (!qword_1E9D64D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64D00);
  }
  return result;
}

uint64_t destroy for MaterialShapeStyle(uint64_t a1)
{
  sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MaterialShapeStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MaterialShapeStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B5904A88(v8, v9, v10, v11);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MaterialShapeStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5904A88(v6, v7, v8, v9);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MaterialShapeStyle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MaterialShapeStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaterialShapeStyle()
{
  return &type metadata for MaterialShapeStyle;
}

uint64_t sub_1B59843E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64D10);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v2 + 8);
  uint64_t v11 = *(void *)(v2 + 16);
  unsigned __int8 v12 = *(unsigned char *)(v2 + 24);
  v18[0] = *(void *)v2;
  uint64_t v9 = v18[0];
  v18[1] = v10;
  long long v18[2] = v11;
  unsigned __int8 v19 = v12;
  sub_1B5904B60(v18[0], v10, v11, v12);
  StringResolvable.resolved(with:)(a1);
  if (v3) {
    return sub_1B5904A88(v9, v10, v11, v12);
  }
  sub_1B5904A88(v9, v10, v11, v12);
  switch(sub_1B59849F8())
  {
    case 1u:
      sub_1B5A1BBB8();
      goto LABEL_10;
    case 2u:
      sub_1B5A1BBA8();
      goto LABEL_10;
    case 3u:
      sub_1B5A1BB98();
      goto LABEL_10;
    case 4u:
      sub_1B5A1BB78();
      goto LABEL_10;
    case 5u:
      sub_1B5A1BBC8();
      goto LABEL_10;
    case 6u:
      uint64_t v14 = sub_1B5A1BBD8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
      goto LABEL_11;
    default:
      sub_1B5A1BB88();
LABEL_10:
      uint64_t v14 = sub_1B5A1BBD8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 0, 1, v14);
LABEL_11:
      sub_1B5A1BBD8();
      uint64_t v15 = MEMORY[0x1E4F3EF48];
      a2[3] = v14;
      a2[4] = v15;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
      uint64_t v17 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v14) == 1)
      {
        sub_1B5A1BBB8();
        uint64_t result = sub_1B5984A44((uint64_t)v8);
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v17 + 32))(boxed_opaque_existential_1, v8, v14);
      }
      break;
  }
  return result;
}

uint64_t sub_1B59846A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5984CD4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B59846CC(uint64_t a1)
{
  unint64_t v2 = sub_1B5984AA4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5984708(uint64_t a1)
{
  unint64_t v2 = sub_1B5984AA4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5984744@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64D18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5984AA4();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1B5904A34();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v14[0];
    uint64_t v11 = v14[1];
    uint64_t v12 = v14[2];
    unsigned __int8 v13 = v15;
    *(void *)a2 = v14[0];
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    *(unsigned char *)(a2 + 24) = v13;
    *(void *)(a2 + 32) = MEMORY[0x1E4FBC860];
    sub_1B5904B60(v10, v11, v12, v13);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B5904A88(v10, v11, v12, v13);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5984918@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B59843E0(a1, a2);
}

uint64_t sub_1B5984930()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B5984938(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t sub_1B5984964@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5984744(a1, a2);
}

unint64_t sub_1B598497C(uint64_t a1)
{
  unint64_t result = sub_1B59849A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59849A4()
{
  unint64_t result = qword_1E9D64D08;
  if (!qword_1E9D64D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64D08);
  }
  return result;
}

uint64_t sub_1B59849F8()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B5984A44(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64D10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B5984AA4()
{
  unint64_t result = qword_1E9D64D20;
  if (!qword_1E9D64D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64D20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MaterialShapeStyle.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5984B94);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MaterialShapeStyle.CodingKeys()
{
  return &type metadata for MaterialShapeStyle.CodingKeys;
}

unint64_t sub_1B5984BD0()
{
  unint64_t result = qword_1E9D64D28;
  if (!qword_1E9D64D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64D28);
  }
  return result;
}

unint64_t sub_1B5984C28()
{
  unint64_t result = qword_1E9D64D30;
  if (!qword_1E9D64D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64D30);
  }
  return result;
}

unint64_t sub_1B5984C80()
{
  unint64_t result = qword_1E9D64D38;
  if (!qword_1E9D64D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64D38);
  }
  return result;
}

uint64_t sub_1B5984CD4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6C6169726574616DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B5984D5C()
{
  return 0x6C6169726574616DLL;
}

uint64_t destroy for BackgroundModifier(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(unsigned __int8 *)(result + 82);
  if (v2 == 2)
  {
    if (*(void *)(result + 24)) {
      unint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
    }
    unsigned int v5 = *(unsigned __int8 *)(v1 + 64);
    if (v5 <= 0xFD)
    {
      uint64_t v6 = *(void *)(v1 + 40);
      uint64_t v7 = *(void *)(v1 + 48);
      uint64_t v8 = *(void *)(v1 + 56);
      return sub_1B5904A88(v6, v7, v8, v5);
    }
  }
  else
  {
    if (v2 == 1)
    {
      if (*(void *)(result + 24)) {
        __swift_destroy_boxed_opaque_existential_1(result);
      }
      uint64_t v4 = v1 + 40;
    }
    else
    {
      if (*(unsigned char *)(result + 82)) {
        return result;
      }
      unsigned int v3 = *(unsigned __int8 *)(result + 24);
      if (v3 <= 0xFD) {
        sub_1B5904A88(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), v3);
      }
      uint64_t v4 = v1 + 32;
    }
    return __swift_destroy_boxed_opaque_existential_1(v4);
  }
  return result;
}

uint64_t initializeWithCopy for BackgroundModifier(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 82);
  if (v4 == 2)
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      long long v16 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v16;
      *(void *)(a1 + 32) = a2[4];
    }
    unsigned int v17 = *((unsigned __int8 *)a2 + 64);
    if (v17 <= 0xFD)
    {
      uint64_t v18 = a2[5];
      uint64_t v19 = a2[6];
      uint64_t v20 = a2[7];
      sub_1B5904B60(v18, v19, v20, v17);
      *(void *)(a1 + 40) = v18;
      *(void *)(a1 + 48) = v19;
      *(void *)(a1 + 56) = v20;
      *(unsigned char *)(a1 + 64) = v17;
    }
    else
    {
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 49) = *(_OWORD *)((char *)a2 + 49);
    }
  }
  else if (v4 == 1)
  {
    uint64_t v5 = a2[3];
    if (v5)
    {
      uint64_t v6 = a2[4];
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v6;
      (**(void (***)(uint64_t, uint64_t *))(v5 - 8))(a1, a2);
    }
    else
    {
      long long v14 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
      *(void *)(a1 + 32) = a2[4];
    }
    long long v15 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 64) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 40, (uint64_t)(a2 + 5));
    *(_WORD *)(a1 + 80) = *((_WORD *)a2 + 40);
  }
  else
  {
    unsigned int v9 = *((unsigned __int8 *)a2 + 24);
    if (v9 <= 0xFD)
    {
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      uint64_t v12 = a2[2];
      sub_1B5904B60(*a2, v11, v12, *((unsigned char *)a2 + 24));
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      *(unsigned char *)(a1 + 24) = v9;
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
    }
    long long v13 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 56) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 32, (uint64_t)(a2 + 4));
  }
  *(unsigned char *)(a1 + 82) = v4;
  return a1;
}

uint64_t assignWithCopy for BackgroundModifier(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_1B598529C(a1);
    int v4 = *((unsigned __int8 *)a2 + 82);
    if (v4 == 2)
    {
      uint64_t v6 = *((void *)a2 + 3);
      if (v6)
      {
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      }
      else
      {
        long long v16 = *a2;
        long long v17 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v16;
        *(_OWORD *)(a1 + 16) = v17;
      }
      unsigned int v18 = *((unsigned __int8 *)a2 + 64);
      if (v18 <= 0xFD)
      {
        uint64_t v20 = *((void *)a2 + 5);
        uint64_t v21 = *((void *)a2 + 6);
        uint64_t v22 = *((void *)a2 + 7);
        sub_1B5904B60(v20, v21, v22, v18);
        *(void *)(a1 + 40) = v20;
        *(void *)(a1 + 48) = v21;
        *(void *)(a1 + 56) = v22;
        *(unsigned char *)(a1 + 64) = v18;
      }
      else
      {
        long long v19 = *(long long *)((char *)a2 + 40);
        *(_OWORD *)(a1 + 49) = *(long long *)((char *)a2 + 49);
        *(_OWORD *)(a1 + 40) = v19;
      }
    }
    else if (v4 == 1)
    {
      uint64_t v5 = *((void *)a2 + 3);
      if (v5)
      {
        *(void *)(a1 + 24) = v5;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v5 - 8))(a1, a2);
      }
      else
      {
        long long v13 = *a2;
        long long v14 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v13;
        *(_OWORD *)(a1 + 16) = v14;
      }
      uint64_t v15 = *((void *)a2 + 8);
      *(void *)(a1 + 64) = v15;
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 40, (uint64_t)a2 + 40);
      *(_WORD *)(a1 + 80) = *((_WORD *)a2 + 40);
    }
    else
    {
      unsigned int v7 = *((unsigned __int8 *)a2 + 24);
      if (v7 <= 0xFD)
      {
        uint64_t v9 = *(void *)a2;
        uint64_t v10 = *((void *)a2 + 1);
        uint64_t v11 = *((void *)a2 + 2);
        sub_1B5904B60(*(void *)a2, v10, v11, *((unsigned char *)a2 + 24));
        *(void *)a1 = v9;
        *(void *)(a1 + 8) = v10;
        *(void *)(a1 + 16) = v11;
        *(unsigned char *)(a1 + 24) = v7;
      }
      else
      {
        long long v8 = *a2;
        *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
        *(_OWORD *)a1 = v8;
      }
      uint64_t v12 = *((void *)a2 + 7);
      *(void *)(a1 + 56) = v12;
      *(void *)(a1 + 64) = *((void *)a2 + 8);
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 32, (uint64_t)(a2 + 2));
    }
    *(unsigned char *)(a1 + 82) = v4;
  }
  return a1;
}