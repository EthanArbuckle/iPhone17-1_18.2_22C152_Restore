uint64_t sub_1B598529C(uint64_t a1)
{
  destroy for BackgroundModifier.BackgroundModifierParameters(a1);
  return a1;
}

__n128 __swift_memcpy83_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 79) = *(_DWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BackgroundModifier(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1B598529C(a1);
    long long v4 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v4;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 79) = *(_DWORD *)(a2 + 79);
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BackgroundModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 83)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 82);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 82) = 0;
    *(_WORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 83) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 83) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 82) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundModifier()
{
  return &type metadata for BackgroundModifier;
}

uint64_t destroy for BackgroundModifier.BackgroundModifierParameters(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 82);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)result + 3;
  }
  if (v2 == 2)
  {
    if (*(void *)(result + 24)) {
      __n128 result = __swift_destroy_boxed_opaque_existential_1(result);
    }
    unsigned int v4 = *(unsigned __int8 *)(v1 + 64);
    if (v4 <= 0xFD)
    {
      uint64_t v6 = *(void *)(v1 + 40);
      uint64_t v7 = *(void *)(v1 + 48);
      uint64_t v8 = *(void *)(v1 + 56);
      return sub_1B5904A88(v6, v7, v8, v4);
    }
  }
  else
  {
    if (v2 == 1)
    {
      if (*(void *)(result + 24)) {
        __swift_destroy_boxed_opaque_existential_1(result);
      }
      uint64_t v3 = v1 + 40;
    }
    else
    {
      unsigned int v5 = *(unsigned __int8 *)(result + 24);
      if (v5 <= 0xFD) {
        sub_1B5904A88(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), v5);
      }
      uint64_t v3 = v1 + 32;
    }
    return __swift_destroy_boxed_opaque_existential_1(v3);
  }
  return result;
}

uint64_t initializeWithCopy for BackgroundModifier.BackgroundModifierParameters(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 82);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      long long v17 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
      *(void *)(a1 + 32) = a2[4];
    }
    unsigned int v18 = *((unsigned __int8 *)a2 + 64);
    if (v18 <= 0xFD)
    {
      uint64_t v19 = a2[5];
      uint64_t v20 = a2[6];
      uint64_t v21 = a2[7];
      sub_1B5904B60(v19, v20, v21, v18);
      *(void *)(a1 + 40) = v19;
      *(void *)(a1 + 48) = v20;
      *(void *)(a1 + 56) = v21;
      char v14 = 2;
      *(unsigned char *)(a1 + 64) = v18;
    }
    else
    {
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 49) = *(_OWORD *)((char *)a2 + 49);
      char v14 = 2;
    }
  }
  else if (v4 == 1)
  {
    uint64_t v5 = a2[3];
    if (v5)
    {
      uint64_t v6 = a2[4];
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v6;
      (**(void (***)(uint64_t, uint64_t *))(v5 - 8))(a1, a2);
    }
    else
    {
      long long v15 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v15;
      *(void *)(a1 + 32) = a2[4];
    }
    long long v16 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 64) = v16;
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 40, (uint64_t)(a2 + 5));
    *(_WORD *)(a1 + 80) = *((_WORD *)a2 + 40);
    char v14 = 1;
  }
  else
  {
    unsigned int v9 = *((unsigned __int8 *)a2 + 24);
    if (v9 <= 0xFD)
    {
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      uint64_t v12 = a2[2];
      sub_1B5904B60(*a2, v11, v12, *((unsigned char *)a2 + 24));
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      *(unsigned char *)(a1 + 24) = v9;
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
    }
    long long v13 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 56) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 32, (uint64_t)(a2 + 4));
    char v14 = 0;
  }
  *(unsigned char *)(a1 + 82) = v14;
  return a1;
}

uint64_t assignWithCopy for BackgroundModifier.BackgroundModifierParameters(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 82);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      if (*(void *)(a1 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(a1);
      }
      unsigned int v6 = *(unsigned __int8 *)(a1 + 64);
      if (v6 <= 0xFD) {
        sub_1B5904A88(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v6);
      }
    }
    else
    {
      if (v4 == 1)
      {
        if (*(void *)(a1 + 24)) {
          __swift_destroy_boxed_opaque_existential_1(a1);
        }
        uint64_t v5 = a1 + 40;
      }
      else
      {
        unsigned int v7 = *(unsigned __int8 *)(a1 + 24);
        if (v7 <= 0xFD) {
          sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v7);
        }
        uint64_t v5 = a1 + 32;
      }
      __swift_destroy_boxed_opaque_existential_1(v5);
    }
    unsigned int v8 = *((unsigned __int8 *)a2 + 82);
    if (v8 >= 3) {
      unsigned int v8 = *(_DWORD *)a2 + 3;
    }
    if (v8 == 2)
    {
      uint64_t v10 = *((void *)a2 + 3);
      if (v10)
      {
        *(void *)(a1 + 24) = v10;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v10 - 8))(a1, a2);
      }
      else
      {
        long long v21 = *a2;
        long long v22 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v21;
        *(_OWORD *)(a1 + 16) = v22;
      }
      unsigned int v23 = *((unsigned __int8 *)a2 + 64);
      if (v23 <= 0xFD)
      {
        uint64_t v25 = *((void *)a2 + 5);
        uint64_t v26 = *((void *)a2 + 6);
        uint64_t v27 = *((void *)a2 + 7);
        sub_1B5904B60(v25, v26, v27, v23);
        *(void *)(a1 + 40) = v25;
        *(void *)(a1 + 48) = v26;
        *(void *)(a1 + 56) = v27;
        char v17 = 2;
        *(unsigned char *)(a1 + 64) = v23;
      }
      else
      {
        long long v24 = *(long long *)((char *)a2 + 40);
        *(_OWORD *)(a1 + 49) = *(long long *)((char *)a2 + 49);
        *(_OWORD *)(a1 + 40) = v24;
        char v17 = 2;
      }
    }
    else if (v8 == 1)
    {
      uint64_t v9 = *((void *)a2 + 3);
      if (v9)
      {
        *(void *)(a1 + 24) = v9;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v9 - 8))(a1, a2);
      }
      else
      {
        long long v18 = *a2;
        long long v19 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v18;
        *(_OWORD *)(a1 + 16) = v19;
      }
      uint64_t v20 = *((void *)a2 + 8);
      *(void *)(a1 + 64) = v20;
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 40, (uint64_t)a2 + 40);
      *(_WORD *)(a1 + 80) = *((_WORD *)a2 + 40);
      char v17 = 1;
    }
    else
    {
      unsigned int v11 = *((unsigned __int8 *)a2 + 24);
      if (v11 <= 0xFD)
      {
        uint64_t v13 = *(void *)a2;
        uint64_t v14 = *((void *)a2 + 1);
        uint64_t v15 = *((void *)a2 + 2);
        sub_1B5904B60(*(void *)a2, v14, v15, *((unsigned char *)a2 + 24));
        *(void *)a1 = v13;
        *(void *)(a1 + 8) = v14;
        *(void *)(a1 + 16) = v15;
        *(unsigned char *)(a1 + 24) = v11;
      }
      else
      {
        long long v12 = *a2;
        *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
        *(_OWORD *)a1 = v12;
      }
      uint64_t v16 = *((void *)a2 + 7);
      *(void *)(a1 + 56) = v16;
      *(void *)(a1 + 64) = *((void *)a2 + 8);
      (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 32, (uint64_t)(a2 + 2));
      char v17 = 0;
    }
    *(unsigned char *)(a1 + 82) = v17;
  }
  return a1;
}

uint64_t assignWithTake for BackgroundModifier.BackgroundModifierParameters(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 82);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      if (*(void *)(a1 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(a1);
      }
      unsigned int v6 = *(unsigned __int8 *)(a1 + 64);
      if (v6 <= 0xFD) {
        sub_1B5904A88(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v6);
      }
    }
    else
    {
      if (v4 == 1)
      {
        if (*(void *)(a1 + 24)) {
          __swift_destroy_boxed_opaque_existential_1(a1);
        }
        uint64_t v5 = a1 + 40;
      }
      else
      {
        unsigned int v7 = *(unsigned __int8 *)(a1 + 24);
        if (v7 <= 0xFD) {
          sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v7);
        }
        uint64_t v5 = a1 + 32;
      }
      __swift_destroy_boxed_opaque_existential_1(v5);
    }
    unsigned int v8 = *(unsigned __int8 *)(a2 + 82);
    if (v8 >= 3) {
      unsigned int v8 = *(_DWORD *)a2 + 3;
    }
    if (v8 == 2)
    {
      long long v12 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v12;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      long long v13 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v13;
      char v11 = 2;
    }
    else if (v8 == 1)
    {
      long long v9 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v9;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
      long long v10 = *(_OWORD *)(a2 + 16);
      char v11 = 1;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      char v11 = 0;
      long long v14 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v14;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      long long v15 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v15;
    }
    *(unsigned char *)(a1 + 82) = v11;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BackgroundModifier.BackgroundModifierParameters(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 83)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 82);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BackgroundModifier.BackgroundModifierParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_DWORD *)(result + 79) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 83) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 83) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 82) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B5985BB8(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 82);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_1B5985BD4(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    unsigned int v2 = a2 - 3;
    *(_WORD *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 82) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BackgroundModifier.BackgroundModifierParameters()
{
  return &type metadata for BackgroundModifier.BackgroundModifierParameters;
}

uint64_t sub_1B5985C14@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  v84 = a2;
  sub_1B5987328(v4, (uint64_t)v130);
  if (!v137)
  {
    v83 = a4;
    long long v19 = (void *)v130[0];
    long long v18 = (void *)v130[1];
    uint64_t v20 = v130[2];
    unsigned int v21 = v131;
    sub_1B5908BE8(&v132, (uint64_t)&v121);
    if (v21 <= 0xFD)
    {
      v128[0] = v19;
      v128[1] = v18;
      v128[2] = v20;
      char v129 = v21;
      sub_1B5904B60((uint64_t)v19, (uint64_t)v18, v20, v21);
      StringResolvable.resolved(with:)((uint64_t)v84);
      if (v5)
      {
        sub_1B5904B4C((uint64_t)v19, (uint64_t)v18, v20, v21);
        sub_1B5904B4C((uint64_t)v19, (uint64_t)v18, v20, v21);
        uint64_t v26 = &v121;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      }
      v84 = v18;
      sub_1B5904B4C((uint64_t)v19, (uint64_t)v18, v20, v21);
    }
    else
    {
      v84 = v18;
    }
    uint64_t v138 = v5;
    LODWORD(v82) = v21;
    v81 = v19;
    switch(sub_1B59E17E0())
    {
      case 1u:
        v80 = (uint64_t *)v20;
        uint64_t v41 = sub_1B5A1BC58();
        goto LABEL_45;
      case 2u:
        v80 = (uint64_t *)v20;
        uint64_t v41 = sub_1B5A1BC68();
        goto LABEL_45;
      case 3u:
        v80 = (uint64_t *)v20;
        uint64_t v41 = sub_1B5A1BC28();
        goto LABEL_45;
      case 4u:
        v80 = (uint64_t *)v20;
        uint64_t v41 = sub_1B5A1BC38();
        goto LABEL_45;
      case 5u:
        v80 = (uint64_t *)v20;
        uint64_t v41 = sub_1B5A1BBE8();
        goto LABEL_45;
      case 6u:
        v80 = (uint64_t *)v20;
        uint64_t v41 = sub_1B5A1BBF8();
        goto LABEL_45;
      case 7u:
        v80 = (uint64_t *)v20;
        uint64_t v41 = sub_1B5A1BC08();
        goto LABEL_45;
      case 8u:
        v80 = (uint64_t *)v20;
        uint64_t v41 = sub_1B5A1BC18();
        goto LABEL_45;
      case 9u:
        uint64_t v57 = a1[4];
        v79 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        v80 = &v77;
        MEMORY[0x1F4188790](v79);
        uint64_t v78 = sub_1B5A1BC48();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64D70);
        uint64_t v58 = sub_1B5A1A748();
        uint64_t v59 = v20;
        v60 = v83;
        v83[3] = v58;
        uint64_t v61 = sub_1B59095C8(&qword_1E9D64D78, &qword_1E9D64D70);
        uint64_t v87 = v57;
        uint64_t v88 = v61;
        v60[4] = swift_getWitnessTable();
        __swift_allocate_boxed_opaque_existential_1(v60);
        sub_1B5A1B398();
        sub_1B5904B4C((uint64_t)v81, (uint64_t)v84, v59, v82);
        goto LABEL_46;
      default:
        v80 = (uint64_t *)v20;
        uint64_t v41 = sub_1B5A1BC48();
LABEL_45:
        uint64_t v78 = v42;
        v79 = (void *)v41;
        uint64_t v53 = a1[4];
        v54 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        MEMORY[0x1F4188790](v54);
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64D70);
        v55 = v83;
        v83[3] = sub_1B5A1A748();
        uint64_t v85 = v53;
        uint64_t v86 = sub_1B59095C8(&qword_1E9D64D78, &qword_1E9D64D70);
        v55[4] = swift_getWitnessTable();
        __swift_allocate_boxed_opaque_existential_1(v55);
        sub_1B5A1B398();
        sub_1B5904B4C((uint64_t)v81, (uint64_t)v84, (uint64_t)v80, v82);
LABEL_46:
        v56 = &v121;
        break;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  if (v137 == 1)
  {
    v83 = a4;
    __int16 v9 = v136;
    sub_1B5987360((uint64_t)v130, (uint64_t)v128);
    sub_1B5908BE8((long long *)((char *)&v132 + 8), (uint64_t)v125);
    sub_1B59873C8((uint64_t)v128, (uint64_t)&v121);
    __int16 v124 = v9;
    if (v123)
    {
      if (v9 == 2)
      {
        sub_1B5908BE8(&v121, (uint64_t)&v117);
        uint64_t v10 = a1[4];
        char v11 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t v12 = v119;
        uint64_t v13 = (uint64_t)v120;
        __swift_project_boxed_opaque_existential_1(&v117, v119);
        sub_1B59C1FE0((uint64_t)v84, v12, v13, (uint64_t)&v113);
        if (!v5)
        {
          uint64_t v138 = v116;
          v82 = v115;
          v81 = __swift_project_boxed_opaque_existential_1(&v113, (uint64_t)v115);
          uint64_t v14 = v126;
          uint64_t v15 = v127;
          __swift_project_boxed_opaque_existential_1(v125, v126);
          (*(void (**)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, uint64_t))(v15 + 48))(&v111, v84, a3, v14, v15);
          v84 = v112;
          uint64_t v109 = v111;
          v110 = v112;
          unint64_t v16 = sub_1B590D4D8();
          v105 = v82;
          v106 = &type metadata for AnyShape;
          uint64_t v107 = v138;
          unint64_t v108 = v16;
          sub_1B5A1B068();
          v80 = v11;
          char v17 = v83;
          v83[3] = sub_1B5A1A748();
          uint64_t v101 = v10;
          uint64_t WitnessTable = swift_getWitnessTable();
          v17[4] = swift_getWitnessTable();
          __swift_allocate_boxed_opaque_existential_1(v17);
LABEL_33:
          sub_1B5A1B3B8();
          swift_release();
          sub_1B5908FC0((uint64_t)v128, &qword_1E9D64D48);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          goto LABEL_34;
        }
      }
      else
      {
        sub_1B5908BE8(&v121, (uint64_t)&v117);
        uint64_t v37 = a1[4];
        v38 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t v39 = v119;
        uint64_t v40 = (uint64_t)v120;
        __swift_project_boxed_opaque_existential_1(&v117, v119);
        sub_1B59C1FE0((uint64_t)v84, v39, v40, (uint64_t)&v113);
        if (!v5)
        {
          v81 = v38;
          uint64_t v138 = v116;
          v82 = v115;
          v80 = __swift_project_boxed_opaque_existential_1(&v113, (uint64_t)v115);
          uint64_t v48 = v126;
          uint64_t v49 = v127;
          __swift_project_boxed_opaque_existential_1(v125, v126);
          (*(void (**)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, uint64_t))(v49 + 48))(&v111, v84, a3, v48, v49);
          v84 = v112;
          uint64_t v109 = v111;
          v110 = v112;
          unint64_t v50 = sub_1B590D4D8();
          v105 = v82;
          v106 = &type metadata for AnyShape;
          uint64_t v107 = v138;
          unint64_t v108 = v50;
          sub_1B5A1B068();
          v51 = v83;
          v83[3] = sub_1B5A1A748();
          uint64_t v103 = v37;
          uint64_t v104 = swift_getWitnessTable();
          v51[4] = swift_getWitnessTable();
          __swift_allocate_boxed_opaque_existential_1(v51);
          goto LABEL_33;
        }
      }
      sub_1B5908FC0((uint64_t)v128, &qword_1E9D64D48);
LABEL_34:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
      goto LABEL_35;
    }
    uint64_t v138 = v5;
    uint64_t v32 = a1[4];
    v82 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v33 = v126;
    uint64_t v34 = v127;
    __swift_project_boxed_opaque_existential_1(v125, v126);
    if (v9 == 2)
    {
      uint64_t v35 = v138;
      (*(void (**)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, uint64_t))(v34 + 48))(&v117, v84, a3, v33, v34);
      if (!v35)
      {
        uint64_t v113 = v117;
        uint64_t v114 = v118;
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64D50);
        v36 = v83;
        v83[3] = sub_1B5A1A748();
        uint64_t v97 = v32;
        uint64_t v98 = sub_1B59095C8(&qword_1E9D64D58, &qword_1E9D64D50);
        v36[4] = swift_getWitnessTable();
        __swift_allocate_boxed_opaque_existential_1(v36);
        sub_1B590D4D8();
        sub_1B5A1B388();
LABEL_30:
        swift_release();
      }
    }
    else
    {
      uint64_t v46 = v138;
      (*(void (**)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, uint64_t))(v34 + 48))(&v117, v84, a3, v33, v34);
      if (!v46)
      {
        uint64_t v138 = v118;
        uint64_t v113 = v117;
        uint64_t v114 = v118;
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64D50);
        v47 = v83;
        v83[3] = sub_1B5A1A748();
        uint64_t v99 = v32;
        uint64_t v100 = sub_1B59095C8(&qword_1E9D64D58, &qword_1E9D64D50);
        v47[4] = swift_getWitnessTable();
        __swift_allocate_boxed_opaque_existential_1(v47);
        sub_1B590D4D8();
        sub_1B5A1B388();
        goto LABEL_30;
      }
    }
    sub_1B5908FC0((uint64_t)v128, &qword_1E9D64D48);
LABEL_35:
    uint64_t v26 = (long long *)v125;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  uint64_t v138 = v5;
  uint64_t v23 = *((void *)&v132 + 1);
  long long v22 = v133;
  long long v24 = v134;
  unsigned int v25 = v135;
  sub_1B5987360((uint64_t)v130, (uint64_t)v128);
  if (v25 <= 0xFD)
  {
    v80 = a1;
    *(void *)&long long v121 = v23;
    *((void *)&v121 + 1) = v22;
    v122 = v24;
    LOBYTE(v123) = v25;
    sub_1B5904B60(v23, (uint64_t)v22, (uint64_t)v24, v25);
    uint64_t v27 = v138;
    StringResolvable.resolved(with:)((uint64_t)v84);
    uint64_t v138 = v27;
    if (v27)
    {
      sub_1B5904B4C(v23, (uint64_t)v22, (uint64_t)v24, v25);
      uint64_t v28 = v23;
      v29 = v22;
      v30 = v24;
      unsigned __int8 v31 = v25;
LABEL_65:
      sub_1B5904B4C(v28, (uint64_t)v29, (uint64_t)v30, v31);
      return sub_1B5908FC0((uint64_t)v128, &qword_1E9D64D48);
    }
    v81 = v22;
    v82 = v24;
    sub_1B5904B4C(v23, (uint64_t)v22, (uint64_t)v24, v25);
    a1 = v80;
  }
  else
  {
    v81 = v22;
    v82 = v24;
  }
  char v43 = sub_1B59485EC();
  v83 = a4;
  if (v43 == 7)
  {
    char v44 = 0;
  }
  else
  {
    switch(v43)
    {
      case 1:
        char v45 = sub_1B5A1B158();
        break;
      case 2:
        char v45 = sub_1B5A1B148();
        break;
      case 3:
        char v45 = sub_1B5A1B168();
        break;
      case 4:
        char v45 = sub_1B5A1B128();
        break;
      case 5:
        char v45 = sub_1B5A1B118();
        break;
      case 6:
        char v45 = sub_1B5A1B178();
        break;
      default:
        char v45 = sub_1B5A1B138();
        break;
    }
    char v44 = v45;
  }
  sub_1B59873C8((uint64_t)v128, (uint64_t)&v121);
  LOBYTE(v124) = v44;
  HIBYTE(v124) = v43 == 7;
  if (!v123)
  {
    uint64_t v68 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    if (v43 == 7)
    {
      LODWORD(v84) = sub_1B5A1B128();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64D60);
      v69 = v83;
      v83[3] = sub_1B5A1A748();
      uint64_t v89 = v68;
      uint64_t v90 = sub_1B59095C8(&qword_1E9D64D68, &qword_1E9D64D60);
      v69[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(v69);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64D60);
      v75 = v83;
      v83[3] = sub_1B5A1A748();
      uint64_t v91 = v68;
      uint64_t v92 = sub_1B59095C8(&qword_1E9D64D68, &qword_1E9D64D60);
      v75[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(v75);
    }
    sub_1B5A1B378();
    uint64_t v28 = v23;
    v29 = v81;
    v30 = v82;
    unsigned __int8 v31 = v25;
    goto LABEL_65;
  }
  v80 = (uint64_t *)v23;
  if (v43 == 7)
  {
    sub_1B5908BE8(&v121, (uint64_t)v125);
    uint64_t v62 = a1[4];
    v63 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v64 = v126;
    uint64_t v65 = v127;
    __swift_project_boxed_opaque_existential_1(v125, v126);
    uint64_t v66 = v138;
    sub_1B59C1FE0((uint64_t)v84, v64, v65, (uint64_t)&v117);
    uint64_t v138 = v66;
    if (!v66)
    {
      v84 = __swift_project_boxed_opaque_existential_1(&v117, v119);
      LODWORD(v79) = sub_1B5A1B128();
      sub_1B5A1B078();
      uint64_t v78 = (uint64_t)v63;
      v67 = v83;
      v83[3] = sub_1B5A1A748();
      uint64_t v93 = v62;
      uint64_t v94 = swift_getWitnessTable();
      v67[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(v67);
LABEL_67:
      sub_1B5A1B3A8();
      sub_1B5904B4C((uint64_t)v80, (uint64_t)v81, (uint64_t)v82, v25);
      sub_1B5908FC0((uint64_t)v128, &qword_1E9D64D48);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
      goto LABEL_68;
    }
  }
  else
  {
    sub_1B5908BE8(&v121, (uint64_t)v125);
    uint64_t v70 = a1[4];
    v71 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v72 = v126;
    uint64_t v73 = v127;
    __swift_project_boxed_opaque_existential_1(v125, v126);
    uint64_t v74 = v138;
    sub_1B59C1FE0((uint64_t)v84, v72, v73, (uint64_t)&v117);
    uint64_t v138 = v74;
    if (!v74)
    {
      v79 = v120;
      v84 = __swift_project_boxed_opaque_existential_1(&v117, v119);
      sub_1B5A1B078();
      uint64_t v78 = (uint64_t)v71;
      v76 = v83;
      v83[3] = sub_1B5A1A748();
      uint64_t v95 = v70;
      uint64_t v96 = swift_getWitnessTable();
      v76[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(v76);
      goto LABEL_67;
    }
  }
  sub_1B5908FC0((uint64_t)v128, &qword_1E9D64D48);
  sub_1B5904B4C((uint64_t)v80, (uint64_t)v81, (uint64_t)v82, v25);
LABEL_68:
  v56 = (long long *)v125;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
}

unint64_t sub_1B5986BDC(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656D6E67696C61;
      break;
    case 2:
      unint64_t result = 0x6570616873;
      break;
    case 3:
      unint64_t result = 0x656C797473;
      break;
    case 4:
      return result;
    case 5:
      unint64_t result = 0x6C7974536C6C6966;
      break;
    default:
      unint64_t result = 0x746E65746E6F63;
      break;
  }
  return result;
}

unint64_t sub_1B5986CB0()
{
  return sub_1B5986BDC(*v0);
}

uint64_t sub_1B5986CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5987914(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B5986CE0(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1B5986CEC(uint64_t a1)
{
  unint64_t v2 = sub_1B5987434();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5986D28(uint64_t a1)
{
  unint64_t v2 = sub_1B5987434();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5986D64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64D80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned int v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1B5987434();
  sub_1B5A1C838();
  if (v2)
  {
    uint64_t v16 = (uint64_t)v46;
  }
  else
  {
    LOBYTE(v30) = 0;
    if (sub_1B5A1C5F8())
    {
      LOBYTE(v24) = 0;
      sub_1B5914100();
      sub_1B5A1C5D8();
      v41[0] = 1;
      sub_1B5904A34();
      sub_1B5A1C5B8();
      uint64_t v27 = &type metadata for ViewContent;
      unint64_t v28 = sub_1B5914034();
      uint64_t v11 = swift_allocObject();
      uint64_t v26 = v11;
      long long v12 = v37;
      *(_OWORD *)(v11 + 112) = v36;
      *(_OWORD *)(v11 + 128) = v12;
      *(_OWORD *)(v11 + 144) = v38;
      *(void *)(v11 + 160) = v39;
      long long v13 = v33;
      *(_OWORD *)(v11 + 48) = v32;
      *(_OWORD *)(v11 + 64) = v13;
      long long v14 = v35;
      *(_OWORD *)(v11 + 80) = v34;
      *(_OWORD *)(v11 + 96) = v14;
      long long v15 = v31;
      *(_OWORD *)(v11 + 16) = v30;
      *(_OWORD *)(v11 + 32) = v15;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      char v29 = 0;
      sub_1B5987650((uint64_t)&v24, (uint64_t)v43);
    }
    else
    {
      LOBYTE(v30) = 2;
      if (sub_1B5A1C5F8())
      {
        v41[0] = 2;
        sub_1B5987530();
        sub_1B5A1C5D8();
        sub_1B5908BE8(&v24, (uint64_t)&v30);
        v41[0] = 5;
        sub_1B5987584();
        sub_1B5A1C5B8();
        __int16 v10 = v24;
        char v40 = 3;
        sub_1B5987488();
        sub_1B5A1C5B8();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        if (v42)
        {
          sub_1B590CA38((uint64_t)v41, (uint64_t)&v24);
          sub_1B59874DC((uint64_t)v41);
        }
        else
        {
          sub_1B5908FC0((uint64_t)v41, &qword_1E9D64D98);
          long long v24 = 0u;
          long long v25 = 0u;
          uint64_t v26 = 0;
        }
        sub_1B5987360((uint64_t)&v24, (uint64_t)v43);
        sub_1B5908BE8(&v30, (uint64_t)&v44[8]);
        *(_WORD *)&v45[16] = v10;
        char v20 = 1;
      }
      else
      {
        v41[0] = 3;
        sub_1B5987488();
        sub_1B5A1C5B8();
        if (*((void *)&v25 + 1))
        {
          sub_1B590CA38((uint64_t)&v24, (uint64_t)&v30);
          sub_1B59874DC((uint64_t)&v24);
        }
        else
        {
          sub_1B5908FC0((uint64_t)&v24, &qword_1E9D64D98);
          long long v30 = 0u;
          long long v31 = 0u;
          *(void *)&long long v32 = 0;
        }
        v41[0] = 4;
        sub_1B5904A34();
        sub_1B5A1C5B8();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        long long v23 = v24;
        uint64_t v18 = v25;
        char v19 = BYTE8(v25);
        sub_1B5987360((uint64_t)&v30, (uint64_t)v43);
        *(_OWORD *)&v44[8] = v23;
        *(void *)&v44[24] = v18;
        v45[0] = v19;
        char v20 = 2;
      }
      v45[18] = v20;
    }
    uint64_t v16 = (uint64_t)v46;
    long long v21 = *(_OWORD *)&v44[16];
    *(_OWORD *)(a2 + 32) = *(_OWORD *)v44;
    *(_OWORD *)(a2 + 48) = v21;
    *(_OWORD *)(a2 + 64) = *(_OWORD *)v45;
    *(_DWORD *)(a2 + 79) = *(_DWORD *)&v45[15];
    long long v22 = v43[1];
    *(_OWORD *)a2 = v43[0];
    *(_OWORD *)(a2 + 16) = v22;
  }
  return __swift_destroy_boxed_opaque_existential_1(v16);
}

uint64_t sub_1B598727C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B5985C14(a1, a2, a3, a4);
}

uint64_t sub_1B5987294@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5986D64(a1, a2);
}

unint64_t sub_1B59872AC(uint64_t a1)
{
  unint64_t result = sub_1B59872D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59872D4()
{
  unint64_t result = qword_1E9D64D40;
  if (!qword_1E9D64D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64D40);
  }
  return result;
}

uint64_t sub_1B5987328(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5987360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B59873C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B5987434()
{
  unint64_t result = qword_1E9D64D88;
  if (!qword_1E9D64D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64D88);
  }
  return result;
}

unint64_t sub_1B5987488()
{
  unint64_t result = qword_1E9D64D90;
  if (!qword_1E9D64D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64D90);
  }
  return result;
}

uint64_t sub_1B59874DC(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B5987530()
{
  unint64_t result = qword_1E9D64DA0;
  if (!qword_1E9D64DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64DA0);
  }
  return result;
}

unint64_t sub_1B5987584()
{
  unint64_t result = qword_1E9D64DA8;
  if (!qword_1E9D64DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64DA8);
  }
  return result;
}

uint64_t sub_1B59875D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B5987650(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  *(_DWORD *)(a2 + 79) = *(_DWORD *)(a1 + 79);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 32) = v3;
  return a2;
}

uint64_t getEnumTagSinglePayload for BackgroundModifier.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BackgroundModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59877D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundModifier.CodingKeys()
{
  return &type metadata for BackgroundModifier.CodingKeys;
}

unint64_t sub_1B5987810()
{
  unint64_t result = qword_1E9D64DB0;
  if (!qword_1E9D64DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64DB0);
  }
  return result;
}

unint64_t sub_1B5987868()
{
  unint64_t result = qword_1E9D64DB8;
  if (!qword_1E9D64DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64DB8);
  }
  return result;
}

unint64_t sub_1B59878C0()
{
  unint64_t result = qword_1E9D64DC0;
  if (!qword_1E9D64DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64DC0);
  }
  return result;
}

uint64_t sub_1B5987914(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v3 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6E67696C61 && a2 == 0xE900000000000074 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570616873 && a2 == 0xE500000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B5A330A0 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C7974536C6C6966 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void destroy for ShadowModifier(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1B591DF0C(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 96);
  if (v2 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v2);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 128);
  if (v3 <= 0xFD)
  {
    uint64_t v4 = *(void *)(a1 + 104);
    uint64_t v5 = *(void *)(a1 + 112);
    uint64_t v6 = *(void *)(a1 + 120);
    sub_1B591DF0C(v4, v5, v6, v3);
  }
}

uint64_t initializeWithCopy for ShadowModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  char v8 = *(unsigned char *)(a2 + 64);
  sub_1B591DF88(v5, v6, v7, v8);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v8;
  unsigned int v9 = *(unsigned __int8 *)(a2 + 96);
  if (v9 <= 0xFD)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    uint64_t v11 = *(void *)(a2 + 80);
    uint64_t v12 = *(void *)(a2 + 88);
    sub_1B591DF88(v10, v11, v12, *(unsigned char *)(a2 + 96));
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = v12;
    *(unsigned char *)(a1 + 96) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  unsigned int v13 = *(unsigned __int8 *)(a2 + 128);
  if (v13 <= 0xFD)
  {
    uint64_t v14 = *(void *)(a2 + 104);
    uint64_t v15 = *(void *)(a2 + 112);
    uint64_t v16 = *(void *)(a2 + 120);
    sub_1B591DF88(v14, v15, v16, v13);
    *(void *)(a1 + 104) = v14;
    *(void *)(a1 + 112) = v15;
    *(void *)(a1 + 120) = v16;
    *(unsigned char *)(a1 + 128) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  }
  return a1;
}

uint64_t assignWithCopy for ShadowModifier(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  char v7 = *(unsigned char *)(a2 + 64);
  sub_1B591DF88(v4, v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  char v11 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v7;
  sub_1B591DF0C(v8, v9, v10, v11);
  uint64_t v12 = (_OWORD *)(a1 + 72);
  unsigned int v13 = (_OWORD *)(a2 + 72);
  unsigned int v14 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) <= 0xFDu)
  {
    if (v14 <= 0xFD)
    {
      uint64_t v20 = *(void *)(a2 + 72);
      uint64_t v21 = *(void *)(a2 + 80);
      uint64_t v22 = *(void *)(a2 + 88);
      sub_1B591DF88(v20, v21, v22, *(unsigned char *)(a2 + 96));
      uint64_t v23 = *(void *)(a1 + 72);
      uint64_t v24 = *(void *)(a1 + 80);
      uint64_t v25 = *(void *)(a1 + 88);
      *(void *)(a1 + 72) = v20;
      *(void *)(a1 + 80) = v21;
      *(void *)(a1 + 88) = v22;
      char v26 = *(unsigned char *)(a1 + 96);
      *(unsigned char *)(a1 + 96) = v14;
      sub_1B591DF0C(v23, v24, v25, v26);
    }
    else
    {
      sub_1B59316FC(a1 + 72);
      long long v16 = *(_OWORD *)(a2 + 81);
      *uint64_t v12 = *v13;
      *(_OWORD *)(a1 + 81) = v16;
    }
  }
  else if (v14 <= 0xFD)
  {
    uint64_t v17 = *(void *)(a2 + 72);
    uint64_t v18 = *(void *)(a2 + 80);
    uint64_t v19 = *(void *)(a2 + 88);
    sub_1B591DF88(v17, v18, v19, *(unsigned char *)(a2 + 96));
    *(void *)(a1 + 72) = v17;
    *(void *)(a1 + 80) = v18;
    *(void *)(a1 + 88) = v19;
    *(unsigned char *)(a1 + 96) = v14;
  }
  else
  {
    long long v15 = *v13;
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
    *uint64_t v12 = v15;
  }
  uint64_t v27 = (_OWORD *)(a1 + 104);
  unint64_t v28 = (_OWORD *)(a2 + 104);
  unsigned int v29 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) <= 0xFDu)
  {
    if (v29 <= 0xFD)
    {
      uint64_t v35 = *(void *)(a2 + 104);
      uint64_t v36 = *(void *)(a2 + 112);
      uint64_t v37 = *(void *)(a2 + 120);
      sub_1B591DF88(v35, v36, v37, v29);
      uint64_t v38 = *(void *)(a1 + 104);
      uint64_t v39 = *(void *)(a1 + 112);
      uint64_t v40 = *(void *)(a1 + 120);
      *(void *)(a1 + 104) = v35;
      *(void *)(a1 + 112) = v36;
      *(void *)(a1 + 120) = v37;
      char v41 = *(unsigned char *)(a1 + 128);
      *(unsigned char *)(a1 + 128) = v29;
      sub_1B591DF0C(v38, v39, v40, v41);
    }
    else
    {
      sub_1B59316FC(a1 + 104);
      long long v31 = *(_OWORD *)(a2 + 113);
      *uint64_t v27 = *v28;
      *(_OWORD *)(a1 + 113) = v31;
    }
  }
  else if (v29 <= 0xFD)
  {
    uint64_t v32 = *(void *)(a2 + 104);
    uint64_t v33 = *(void *)(a2 + 112);
    uint64_t v34 = *(void *)(a2 + 120);
    sub_1B591DF88(v32, v33, v34, v29);
    *(void *)(a1 + 104) = v32;
    *(void *)(a1 + 112) = v33;
    *(void *)(a1 + 120) = v34;
    *(unsigned char *)(a1 + 128) = v29;
  }
  else
  {
    long long v30 = *v28;
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
    *uint64_t v27 = v30;
  }
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ShadowModifier(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  char v6 = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v5;
  char v10 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v6;
  sub_1B591DF0C(v7, v8, v9, v10);
  unsigned int v11 = *(unsigned __int8 *)(a1 + 96);
  if (v11 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v12 = *(unsigned __int8 *)(a2 + 96);
  if (v12 > 0xFD)
  {
    sub_1B59316FC(a1 + 72);
LABEL_4:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(a2 + 88);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v13;
  *(unsigned char *)(a1 + 96) = v12;
  sub_1B591DF0C(v14, v15, v16, v11);
LABEL_6:
  unsigned int v17 = *(unsigned __int8 *)(a1 + 128);
  if (v17 <= 0xFD)
  {
    unsigned int v18 = *(unsigned __int8 *)(a2 + 128);
    if (v18 <= 0xFD)
    {
      uint64_t v19 = *(void *)(a2 + 120);
      uint64_t v20 = *(void *)(a1 + 104);
      uint64_t v21 = *(void *)(a1 + 112);
      uint64_t v22 = *(void *)(a1 + 120);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(void *)(a1 + 120) = v19;
      *(unsigned char *)(a1 + 128) = v18;
      sub_1B591DF0C(v20, v21, v22, v17);
      return a1;
    }
    sub_1B59316FC(a1 + 104);
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShadowModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 129)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShadowModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShadowModifier()
{
  return &type metadata for ShadowModifier;
}

uint64_t sub_1B5988124@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v14 = *(void *)(v3 + 40);
  uint64_t v17 = *(void *)(v3 + 48);
  uint64_t v20 = *(void *)(v3 + 56);
  char v23 = *(unsigned char *)(v3 + 64);
  sub_1B591DF88(v14, v17, v20, v23);
  sub_1B5963534(a2);
  char v7 = v6;
  sub_1B591DF0C(v14, v17, v20, v23);
  if (v7) {
    return sub_1B590CA38((uint64_t)a1, (uint64_t)a3);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v3, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v8, v9);
  unsigned int v10 = *(unsigned __int8 *)(v3 + 96);
  if (v10 <= 0xFD)
  {
    uint64_t v15 = *(void *)(v3 + 72);
    uint64_t v18 = *(void *)(v3 + 80);
    uint64_t v21 = *(void *)(v3 + 88);
    sub_1B591DF88(v15, v18, v21, v10);
    sub_1B5963534(a2);
    sub_1B59325C0(v15, v18, v21, v10);
  }
  unsigned int v11 = *(unsigned __int8 *)(v3 + 128);
  if (v11 <= 0xFD)
  {
    uint64_t v16 = *(void *)(v3 + 104);
    uint64_t v19 = *(void *)(v3 + 112);
    uint64_t v22 = *(void *)(v3 + 120);
    sub_1B591DF88(v16, v19, v22, v11);
    sub_1B5963534(a2);
    sub_1B59325C0(v16, v19, v22, v11);
  }
  a3[3] = sub_1B5A1A748();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B5A1B6D8();
  return swift_release();
}

uint64_t sub_1B59883AC(char a1)
{
  uint64_t result = 120;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x737569646172;
      break;
    case 2:
      return result;
    case 3:
      uint64_t result = 121;
      break;
    default:
      uint64_t result = 0x726F6C6F63;
      break;
  }
  return result;
}

uint64_t sub_1B598841C(char a1)
{
  uint64_t result = 120;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x737569646172;
      break;
    case 2:
      return result;
    case 3:
      uint64_t result = 121;
      break;
    default:
      uint64_t result = 0x726F6C6F63;
      break;
  }
  return result;
}

uint64_t sub_1B598848C(char *a1, char *a2)
{
  return sub_1B59EEF20(*a1, *a2);
}

uint64_t sub_1B5988498()
{
  return sub_1B59F1944();
}

uint64_t sub_1B59884A0()
{
  return sub_1B59F428C();
}

uint64_t sub_1B59884A8()
{
  return sub_1B59F5B58();
}

uint64_t sub_1B59884B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5988E3C();
  *a1 = result;
  return result;
}

uint64_t sub_1B59884E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59883AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B598850C()
{
  return sub_1B598841C(*v0);
}

uint64_t sub_1B5988514@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5988E3C();
  *a1 = result;
  return result;
}

uint64_t sub_1B598853C(uint64_t a1)
{
  unint64_t v2 = sub_1B5988A68();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5988578(uint64_t a1)
{
  unint64_t v2 = sub_1B5988A68();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B59885B4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64DD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1B5988A68();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  else
  {
    uint64_t v14 = a2;
    uint64_t v15 = v6;
    LOBYTE(v18[0]) = 1;
    unint64_t v10 = sub_1B59358E8();
    sub_1B5A1C5D8();
    unint64_t v13 = v10;
    *(_OWORD *)&v23[40] = v19;
    uint64_t v24 = v20;
    char v25 = (char)v21;
    char v16 = 0;
    sub_1B5939638();
    sub_1B5A1C5B8();
    if (v17[3])
    {
      sub_1B590CA38((uint64_t)v17, (uint64_t)v18);
      sub_1B593968C((uint64_t)v17);
      sub_1B5908BE8(v18, (uint64_t)&v19);
    }
    else
    {
      sub_1B5988ABC((uint64_t)v17);
      uint64_t v21 = &type metadata for MonoColor;
      unint64_t v22 = sub_1B5988B1C();
      uint64_t v11 = swift_allocObject();
      *(void *)&long long v19 = v11;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0;
      *(void *)(v11 + 16) = 0;
      *(unsigned char *)(v11 + 40) = 0;
      *(void *)(v11 + 56) = 0;
      *(void *)(v11 + 64) = 0;
      *(void *)(v11 + 48) = 0x3FD51EB851EB851FLL;
      *(unsigned char *)(v11 + 72) = 0;
    }
    sub_1B5908BE8(&v19, (uint64_t)v23);
    LOBYTE(v18[0]) = 2;
    sub_1B5A1C5B8();
    uint64_t v12 = v15;
    long long v26 = v19;
    uint64_t v27 = v20;
    char v28 = (char)v21;
    LOBYTE(v18[0]) = 3;
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v5);
    long long v29 = v19;
    uint64_t v30 = v20;
    char v31 = (char)v21;
    sub_1B5988BC8((uint64_t)v23, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    sub_1B5988C00((uint64_t)v23);
  }
}

uint64_t sub_1B59889BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5988124(a1, a2, a3);
}

void sub_1B59889D4(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B59889EC(uint64_t a1)
{
  unint64_t result = sub_1B5988A14();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5988A14()
{
  unint64_t result = qword_1E9D64DC8;
  if (!qword_1E9D64DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64DC8);
  }
  return result;
}

unint64_t sub_1B5988A68()
{
  unint64_t result = qword_1E9D64DD8;
  if (!qword_1E9D64DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64DD8);
  }
  return result;
}

uint64_t sub_1B5988ABC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B5988B1C()
{
  unint64_t result = qword_1E9D64DE8;
  if (!qword_1E9D64DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64DE8);
  }
  return result;
}

uint64_t sub_1B5988B70()
{
  sub_1B591DF0C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  unsigned int v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 <= 0xFD) {
    sub_1B591DF0C(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), v1);
  }
  return MEMORY[0x1F4186498](v0, 73, 7);
}

uint64_t sub_1B5988BC8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5988C00(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ShadowModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5988CFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShadowModifier.CodingKeys()
{
  return &type metadata for ShadowModifier.CodingKeys;
}

unint64_t sub_1B5988D38()
{
  unint64_t result = qword_1E9D64DF0;
  if (!qword_1E9D64DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64DF0);
  }
  return result;
}

unint64_t sub_1B5988D90()
{
  unint64_t result = qword_1E9D64DF8;
  if (!qword_1E9D64DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64DF8);
  }
  return result;
}

unint64_t sub_1B5988DE8()
{
  unint64_t result = qword_1E9D64E00;
  if (!qword_1E9D64E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64E00);
  }
  return result;
}

uint64_t sub_1B5988E3C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B5988E88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  unsigned int v8 = *v2;
  uint64_t v7 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(a1, v4);
  sub_1B5A1ACC8();
  sub_1B59A04A4(&qword_1E9D63120, MEMORY[0x1E4F3D530]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1B0C8();
  sub_1B59A04A4(&qword_1E9D63118, MEMORY[0x1E4F3DEB8]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  sub_1B5A1A7F8();
  sub_1B59A04A4(&qword_1E9D63110, MEMORY[0x1E4F3CD40]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AF88();
  sub_1B59A04A4(&qword_1E9D63108, MEMORY[0x1E4F3D8B0]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  sub_1B5A1AE68();
  sub_1B5A1AA88();
  sub_1B59A04A4(&qword_1E9D63100, MEMORY[0x1E4F3D418]);
  swift_getOpaqueTypeMetadata2();
  a2[3] = sub_1B5A1AE68();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  a2[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B59101B8(v7, (char *)v8, v4, v3, (uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B598928C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unsigned __int8 a6@<W6>, uint64_t *a7@<X8>)
{
  sub_1B5904B60(a3, a4, a5, a6);
  StringResolvable.resolved(with:)(a2);
  if (v7) {

  }
  sub_1B5904A88(a3, a4, a5, a6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5943480();
  a7[3] = swift_getOpaqueTypeMetadata2();
  a7[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a7);
  sub_1B5A1B518();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B598941C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned int v6 = *(unsigned __int8 *)(v3 + 32);
  if (v6 <= 0xFD)
  {
    sub_1B5965310(*(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
    sub_1B5963534(a2);
    sub_1B599F4C4(v3);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3[3] = sub_1B5A1A748();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B718();
}

uint64_t sub_1B59895D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v5 + 32);
  uint64_t v10 = *(void *)(v5 + 40);
  uint64_t v11 = *(void *)(v5 + 48);
  char v12 = *(unsigned char *)(v5 + 56);
  sub_1B590D634(v9, v10, v11, v12);
  uint64_t v13 = sub_1B59966F8(a2, v9, v10, v11, v12);
  if (v4)
  {

    sub_1B590D6F0(v9, v10, v11, v12);
    return sub_1B590CA38((uint64_t)a1, a3);
  }
  else
  {
    int v41 = v15;
    uint64_t v42 = v14;
    uint64_t v43 = v13;
    v54 = (uint64_t *)a3;
    sub_1B590D6F0(v9, v10, v11, v12);
    uint64_t v17 = a1[3];
    uint64_t v38 = a1[4];
    uint64_t v39 = v17;
    uint64_t v40 = __swift_project_boxed_opaque_existential_1(a1, v17);
    uint64_t v18 = *(void *)(v5 + 8);
    uint64_t v19 = *(void *)(v5 + 16);
    unsigned __int8 v20 = *(unsigned char *)(v5 + 24);
    uint64_t v44 = *(void *)v5;
    uint64_t v45 = v18;
    uint64_t v46 = v19;
    LOBYTE(v47) = v20;
    sub_1B5904B60(v44, v18, v19, v20);
    unint64_t v21 = StringResolvable.resolved(with:)(a2);
    uint64_t v23 = v22;
    v37[1] = 0;
    uint64_t v24 = sub_1B5904A88(v44, v18, v19, v20);
    v37[4] = v37;
    unint64_t v52 = v21;
    uint64_t v53 = v23;
    uint64_t v25 = MEMORY[0x1F4188790](v24);
    v37[3] = v36;
    v36[2] = v5;
    MEMORY[0x1F4188790](v25);
    v37[2] = v35;
    v35[2] = v5;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63410);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63440);
    unint64_t v28 = sub_1B5943480();
    uint64_t v29 = sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
    uint64_t v30 = sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
    uint64_t v32 = v38;
    uint64_t v31 = v39;
    uint64_t v44 = v39;
    uint64_t v45 = MEMORY[0x1E4FBB1A0];
    uint64_t v46 = v26;
    uint64_t v47 = v27;
    uint64_t v48 = v38;
    unint64_t v49 = v28;
    uint64_t v50 = v29;
    uint64_t v51 = v30;
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t v34 = v54;
    v54[3] = OpaqueTypeMetadata2;
    uint64_t v44 = v31;
    uint64_t v45 = MEMORY[0x1E4FBB1A0];
    uint64_t v46 = v26;
    uint64_t v47 = v27;
    uint64_t v48 = v32;
    unint64_t v49 = v28;
    uint64_t v50 = v29;
    uint64_t v51 = v30;
    v34[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v34);
    sub_1B5A1B668();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t ContentModifier.modifyView(_:with:localStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, a2, a4, a5);
}

uint64_t sub_1B5989980(uint64_t a1)
{
  return sub_1B598C7DC(a1, *v1);
}

uint64_t sub_1B598999C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void (*a7)(void, uint64_t, uint64_t))
{
  unsigned __int8 v20 = a7;
  v18[3] = MEMORY[0x1E4F3EE00];
  v18[4] = MEMORY[0x1E4F3EDF8];
  v18[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v12 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  a5 &= 1u;
  sub_1B590D634(a2, a3, a4, a5);
  char v13 = sub_1B59B4120(v12, a2, a3, a4, a5);
  sub_1B590D6F0(a2, a3, a4, a5);
  if (v7)
  {
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4F3EE00];
    __swift_project_boxed_opaque_existential_1(v18, MEMORY[0x1E4F3EE00]);
    uint64_t v15 = MEMORY[0x1E4F3EDF8];
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    v19[3] = OpaqueTypeMetadata2;
    v19[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v19);
    v20(v13 & 1, v14, v15);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    a3 = View.anyView.getter(OpaqueTypeMetadata2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  return a3;
}

uint64_t sub_1B5989B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v10 = a1;
  v16[3] = MEMORY[0x1E4F3EE00];
  v16[4] = MEMORY[0x1E4F3EDF8];
  v16[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v11 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B5904B60(a2, a3, a4, a5);
  StringResolvable.resolved(with:)(v11);
  if (v5)
  {
    sub_1B5904A88(a2, a3, a4, a5);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    sub_1B5904A88(a2, a3, a4, a5);
    unint64_t v12 = sub_1B5A1C558();
    swift_bridgeObjectRelease();
    unsigned int v13 = 0x10200u >> (8 * v12);
    if (v12 >= 3) {
      unsigned int v13 = 0;
    }
    unsigned int v18 = v13;
    __swift_project_boxed_opaque_existential_1(v16, MEMORY[0x1E4F3EE00]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    v17[3] = OpaqueTypeMetadata2;
    v17[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v17);
    sub_1B5A1B5E8();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    uint64_t v10 = View.anyView.getter(OpaqueTypeMetadata2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  return v10;
}

uint64_t sub_1B5989DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B598AE84(a1, a2, a3, a4, a5, (void (*)(void))sub_1B5989DE8);
}

uint64_t sub_1B5989E14(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  v5[3] = MEMORY[0x1E4F3EE00];
  v5[4] = MEMORY[0x1E4F3EDF8];
  v5[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v5, v1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E28);
  uint64_t v2 = sub_1B5A1A748();
  v6[3] = v2;
  sub_1B59095C8(&qword_1E9D64E30, &qword_1E9D64E28);
  v6[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v6);
  sub_1B5A1B5D8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  uint64_t v3 = View.anyView.getter(v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3;
}

uint64_t sub_1B5989FAC(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t))
{
  v10[3] = MEMORY[0x1E4F3EE00];
  v10[4] = MEMORY[0x1E4F3EDF8];
  v10[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v6 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v7 = LocalStateStore.init()();
  a3(v11, v10, v6, v7, a2);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v3)
  {
    uint64_t v8 = v12;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v7 = View.anyView.getter(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return v7;
}

uint64_t sub_1B598A0D0(uint64_t a1)
{
  v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B59A14BC(v6, v3, v7);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v2)
  {
    uint64_t v4 = v8;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = View.anyView.getter(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v1;
}

uint64_t sub_1B598A1E8(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  uint64_t v2 = MEMORY[0x1E4F3EDF8];
  v8[3] = MEMORY[0x1E4F3EE00];
  v8[4] = MEMORY[0x1E4F3EDF8];
  v8[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v8, v1);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63410);
  uint64_t v4 = sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  v9[0] = v1;
  v9[1] = v3;
  v9[2] = v2;
  uint64_t v10 = v4;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v10 = OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v9);
  sub_1B5A1B5A8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  uint64_t v6 = View.anyView.getter(OpaqueTypeMetadata2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v6;
}

uint64_t sub_1B598A3BC()
{
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  swift_retain();
  sub_1B5A1BA88();
  sub_1B598A3BC();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (!v0) {
    return sub_1B5A1BA88();
  }
  return result;
}

uint64_t sub_1B598A4C4()
{
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  swift_retain();
  sub_1B5A1BA88();
  sub_1B598A4C4();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (!v1) {
    return sub_1B5A1BA88();
  }
  return result;
}

_OWORD *sub_1B598A5F0(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v12[0] = *(_OWORD *)v1;
  v12[1] = v3;
  char v13 = *(unsigned char *)(v1 + 32);
  uint64_t v9[3] = MEMORY[0x1E4F3EE00];
  v9[4] = MEMORY[0x1E4F3EDF8];
  v9[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v4 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v5 = LocalStateStore.init()();
  uint64_t v6 = v12;
  sub_1B59D37B4(v9, v4, v5, v10);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  if (!v2)
  {
    uint64_t v7 = v11;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    uint64_t v6 = (_OWORD *)View.anyView.getter(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  return v6;
}

uint64_t sub_1B598A70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = MEMORY[0x1E4F3EE00];
  v14[3] = MEMORY[0x1E4F3EE00];
  v14[4] = MEMORY[0x1E4F3EDF8];
  v14[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v10 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v14, v9);
  v15[0] = a2;
  v15[1] = a3;
  v15[2] = a4;
  LOBYTE(v16) = a5;
  sub_1B5965310(a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(v10);
  sub_1B596536C(a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64C18);
  sub_1B5A1A748();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64C20);
  uint64_t v11 = sub_1B5A1A748();
  uint64_t v16 = v11;
  sub_1B59095C8(&qword_1E9D64C28, &qword_1E9D64C18);
  swift_getWitnessTable();
  sub_1B59095C8(&qword_1E9D64C30, &qword_1E9D64C20);
  uint64_t WitnessTable = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v15);
  sub_1B5A1B568();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  uint64_t v12 = View.anyView.getter(v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v12;
}

uint64_t sub_1B598A9A8(uint64_t a1)
{
  v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B59D7024(v6, v3, v7);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v2)
  {
    uint64_t v4 = v8;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = View.anyView.getter(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v1;
}

uint64_t sub_1B598AAC0(uint64_t a1)
{
  v5[3] = MEMORY[0x1E4F3EE00];
  v5[4] = MEMORY[0x1E4F3EDF8];
  v5[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B59820B4(v5, v6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  if (!v2)
  {
    uint64_t v3 = v7;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    uint64_t v1 = View.anyView.getter(v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  return v1;
}

uint64_t sub_1B598ABD8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  int v10 = a4 & 1;
  uint64_t v4 = MEMORY[0x1E4F3EE00];
  v13[3] = MEMORY[0x1E4F3EE00];
  v13[4] = MEMORY[0x1E4F3EDF8];
  v13[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  uint64_t v5 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(v13, v4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64B78);
  sub_1B5A1A748();
  sub_1B5A1AE68();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63440);
  sub_1B5A1AE68();
  sub_1B5A1AE68();
  uint64_t v6 = sub_1B5A1AE68();
  v14[3] = v6;
  sub_1B59095C8((unint64_t *)&qword_1E9D64B80, &qword_1E9D64B78);
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
  swift_getWitnessTable();
  swift_getWitnessTable();
  v14[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  sub_1B597DA9C(v5, a3, v10, a2, MEMORY[0x1E4F3EDF8], (uint64_t)boxed_opaque_existential_1);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  uint64_t v8 = View.anyView.getter(v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v8;
}

uint64_t sub_1B598AE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  swift_retain();
  sub_1B5A1BA88();
  a6();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (!v7) {
    return sub_1B5A1BA88();
  }
  return result;
}

uint64_t sub_1B598AFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v10 = MEMORY[0x1E4F3EE00];
  uint64_t v11 = MEMORY[0x1E4F3EDF8];
  v17[3] = MEMORY[0x1E4F3EE00];
  v17[4] = MEMORY[0x1E4F3EDF8];
  v17[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v12 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  LOBYTE(v21) = a5;
  sub_1B5904B60(a2, a3, a4, a5);
  uint64_t v23 = v12;
  StringResolvable.resolved(with:)(v12);
  if (v5) {

  }
  sub_1B5904A88(a2, a3, a4, a5);
  __swift_project_boxed_opaque_existential_1(v17, v10);
  unint64_t v13 = sub_1B5943480();
  uint64_t v18 = v10;
  uint64_t v19 = MEMORY[0x1E4FBB1A0];
  uint64_t v20 = v11;
  unint64_t v21 = v13;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  unint64_t v21 = OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(&v18);
  sub_1B5A1B518();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  uint64_t v15 = View.anyView.getter(OpaqueTypeMetadata2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  return v15;
}

uint64_t sub_1B598B1EC(uint64_t a1)
{
  uint64_t v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B5A03FA8(v6, v3, v7);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v2)
  {
    uint64_t v4 = v8;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = View.anyView.getter(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v1;
}

uint64_t sub_1B598B308(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4F3EE00];
  uint64_t v9[3] = MEMORY[0x1E4F3EE00];
  v9[4] = MEMORY[0x1E4F3EDF8];
  v9[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v9, v2);
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v10[6] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v5, v4);
  sub_1B5A1B128();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E08);
  uint64_t v6 = sub_1B5A1A748();
  uint64_t v10[3] = v6;
  sub_1B59095C8(&qword_1E9D64E10, &qword_1E9D64E08);
  v10[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v10);
  sub_1B5A1B3A8();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  uint64_t v7 = View.anyView.getter(v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v7;
}

uint64_t sub_1B598B510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  v15[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v9 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  v16[0] = a2;
  v16[1] = a3;
  v16[2] = a4;
  LOBYTE(v17) = a5;
  sub_1B5965310(a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(v9);
  char v11 = v10;
  sub_1B596536C(a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  if (v11)
  {
    sub_1B590CA38((uint64_t)v15, (uint64_t)v16);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v15, MEMORY[0x1E4F3EE00]);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E48);
    uint64_t v17 = sub_1B5A1A748();
    sub_1B59095C8(&qword_1E9D64E50, &qword_1E9D64E48);
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v16);
    sub_1B5A1B4C8();
  }
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v12 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v13 = View.anyView.getter(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v13;
}

_OWORD *sub_1B598B758(uint64_t a1)
{
  uint64_t v10[3] = MEMORY[0x1E4F3EE00];
  v10[4] = MEMORY[0x1E4F3EDF8];
  v10[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  long long v4 = v1[3];
  v9[2] = v1[2];
  uint64_t v9[3] = v4;
  v9[4] = v1[4];
  long long v5 = v1[1];
  v9[0] = *v1;
  v9[1] = v5;
  uint64_t v6 = v9;
  sub_1B59663B0(v10, v3, v11);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v2)
  {
    uint64_t v7 = v12;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = (_OWORD *)View.anyView.getter(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return v6;
}

uint64_t sub_1B598B888(uint64_t a1)
{
  uint64_t v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B5A035EC(v6, v3, (uint64_t)v7);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v2)
  {
    uint64_t v4 = v8;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = View.anyView.getter(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v1;
}

uint64_t sub_1B598B9A0(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4F3EE00];
  v26[3] = MEMORY[0x1E4F3EE00];
  v26[4] = MEMORY[0x1E4F3EDF8];
  v26[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  long long v4 = v1[5];
  long long v31 = v1[4];
  long long v32 = v4;
  v33[0] = v1[6];
  *(_OWORD *)((char *)v33 + 9) = *(long long *)((char *)v1 + 105);
  long long v5 = v1[1];
  long long v27 = *v1;
  long long v28 = v5;
  long long v6 = v1[3];
  long long v29 = v1[2];
  long long v30 = v6;
  __swift_project_boxed_opaque_existential_1(v26, v2);
  long long v23 = v31;
  long long v24 = v32;
  v25[0] = v33[0];
  *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v33 + 9);
  long long v17 = v27;
  uint64_t v18 = v28;
  uint64_t v21 = *((void *)&v29 + 1);
  long long v22 = v30;
  sub_1B59A04EC((uint64_t)&v27, (uint64_t)sub_1B590D634, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5965310);
  double v7 = sub_1B5980378(v3);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  sub_1B59A04EC((uint64_t)v1, (uint64_t)sub_1B590D6F0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B596536C);
  double v34 = v7;
  uint64_t v35 = v9;
  uint64_t v36 = v11;
  uint64_t v37 = v13;
  char v38 = 0;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64BF8);
  uint64_t v14 = sub_1B5A1A748();
  uint64_t v19 = v14;
  sub_1B59095C8(&qword_1E9D64C00, &qword_1E9D64BF8);
  uint64_t WitnessTable = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
  sub_1B5A1B488();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  uint64_t v15 = View.anyView.getter(v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  return v15;
}

uint64_t sub_1B598BC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  v15[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v9 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  v16[0] = a2;
  v16[1] = a3;
  v16[2] = a4;
  LOBYTE(v17) = a5;
  sub_1B5965310(a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(v9);
  char v11 = v10;
  sub_1B596536C(a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  if (v11)
  {
    sub_1B590CA38((uint64_t)v15, (uint64_t)v16);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v15, MEMORY[0x1E4F3EE00]);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E38);
    uint64_t v17 = sub_1B5A1A748();
    sub_1B59095C8((unint64_t *)&qword_1E9D64E40, &qword_1E9D64E38);
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v16);
    sub_1B5A1B468();
  }
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v12 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v13 = View.anyView.getter(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v13;
}

uint64_t sub_1B598BE84(uint64_t a1)
{
  uint64_t v3 = MEMORY[0x1E4F3EE00];
  uint64_t v4 = MEMORY[0x1E4F3EDF8];
  v12[3] = MEMORY[0x1E4F3EE00];
  v12[4] = MEMORY[0x1E4F3EDF8];
  v12[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v6 = LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v12, v3);
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v7);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))(&v11, v5, v6, v7, v8);
  if (v2)
  {
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64EB0);
    uint64_t v9 = sub_1B5A1A748();
    v13[3] = v9;
    sub_1B59095C8(&qword_1E9D64EB8, &qword_1E9D64EB0);
    v13[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v13);
    sub_1B590D4D8();
    sub_1B5A1B458();
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v4 = View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return v4;
}

uint64_t sub_1B598C0B4(uint64_t a1, int a2)
{
  uint64_t v2 = MEMORY[0x1E4F3EE00];
  v17[3] = MEMORY[0x1E4F3EE00];
  v17[4] = MEMORY[0x1E4F3EDF8];
  uint64_t v3 = MEMORY[0x1E4F3EDF8];
  v17[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  uint64_t v15 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(v17, v2);
  uint64_t v14 = sub_1B5A1AAC8();
  uint64_t v4 = sub_1B59A04A4(&qword_1E9D64A20, MEMORY[0x1E4F3D430]);
  uint64_t v18 = v2;
  uint64_t v19 = v14;
  uint64_t v20 = v3;
  uint64_t v21 = v4;
  swift_getOpaqueTypeMetadata2();
  uint64_t v13 = sub_1B5A1A8E8();
  uint64_t v5 = sub_1B59A04A4(&qword_1E9D64A18, MEMORY[0x1E4F3CEB0]);
  uint64_t v18 = v2;
  uint64_t v19 = v13;
  uint64_t v20 = v3;
  uint64_t v21 = v5;
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  uint64_t v6 = sub_1B5A1A9F8();
  uint64_t v7 = sub_1B59A04A4(&qword_1E9D64A10, MEMORY[0x1E4F3D378]);
  uint64_t v18 = v2;
  uint64_t v19 = v6;
  uint64_t v8 = MEMORY[0x1E4F3EDF8];
  uint64_t v20 = MEMORY[0x1E4F3EDF8];
  uint64_t v21 = v7;
  swift_getOpaqueTypeMetadata2();
  uint64_t v9 = sub_1B5A1AE68();
  uint64_t v21 = v9;
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  uint64_t WitnessTable = swift_getWitnessTable();
  char v10 = __swift_allocate_boxed_opaque_existential_1(&v18);
  sub_1B5977AE0(v15, a2, v2, v8, (uint64_t)v10);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  uint64_t v11 = View.anyView.getter(v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  return v11;
}

_OWORD *sub_1B598C3E8(uint64_t a1)
{
  v12[3] = MEMORY[0x1E4F3EE00];
  v12[4] = MEMORY[0x1E4F3EDF8];
  v12[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  long long v4 = v1[5];
  v10[4] = v1[4];
  void v10[5] = v4;
  v11[0] = v1[6];
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v1 + 105);
  long long v5 = v1[1];
  v10[0] = *v1;
  v10[1] = v5;
  long long v6 = v1[3];
  v10[2] = v1[2];
  uint64_t v10[3] = v6;
  uint64_t v7 = v10;
  sub_1B595F78C(v12, v3, v13);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (!v2)
  {
    uint64_t v8 = v14;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v7 = (_OWORD *)View.anyView.getter(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return v7;
}

void *sub_1B598C528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  v13[0] = a2;
  v13[1] = a3;
  v13[2] = a4;
  char v14 = a5;
  uint64_t v10[3] = MEMORY[0x1E4F3EE00];
  v10[4] = MEMORY[0x1E4F3EDF8];
  v10[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v6 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  uint64_t v7 = v13;
  sub_1B59D8D54(v10, v6, v11);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v5)
  {
    uint64_t v8 = v12;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v7 = (void *)View.anyView.getter(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return v7;
}

uint64_t sub_1B598C644(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  v5[3] = MEMORY[0x1E4F3EE00];
  v5[4] = MEMORY[0x1E4F3EDF8];
  v5[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v5, v1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63260);
  uint64_t v2 = sub_1B5A1A748();
  uint64_t v6[3] = v2;
  sub_1B59095C8((unint64_t *)&qword_1E9D63268, &qword_1E9D63260);
  v6[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v6);
  sub_1B5A1B408();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  uint64_t v3 = View.anyView.getter(v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3;
}

uint64_t sub_1B598C7DC(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = MEMORY[0x1E4F3EE00];
  v21[3] = MEMORY[0x1E4F3EE00];
  v21[4] = MEMORY[0x1E4F3EDF8];
  uint64_t v3 = MEMORY[0x1E4F3EDF8];
  v21[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  uint64_t v19 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(v21, v2);
  uint64_t v18 = sub_1B5A1ACC8();
  uint64_t v4 = sub_1B59A04A4(&qword_1E9D63120, MEMORY[0x1E4F3D530]);
  uint64_t v22 = v2;
  uint64_t v23 = v18;
  uint64_t v24 = v3;
  uint64_t v25 = v4;
  swift_getOpaqueTypeMetadata2();
  uint64_t v17 = sub_1B5A1B0C8();
  uint64_t v16 = sub_1B59A04A4(&qword_1E9D63118, MEMORY[0x1E4F3DEB8]);
  uint64_t v22 = v2;
  uint64_t v23 = v17;
  uint64_t v24 = v3;
  uint64_t v25 = v16;
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  uint64_t v15 = sub_1B5A1A7F8();
  uint64_t v14 = sub_1B59A04A4(&qword_1E9D63110, MEMORY[0x1E4F3CD40]);
  uint64_t v22 = v2;
  uint64_t v23 = v15;
  uint64_t v24 = v3;
  uint64_t v25 = v14;
  swift_getOpaqueTypeMetadata2();
  uint64_t v13 = sub_1B5A1AF88();
  uint64_t v12 = sub_1B59A04A4(&qword_1E9D63108, MEMORY[0x1E4F3D8B0]);
  uint64_t v22 = v2;
  uint64_t v23 = v13;
  uint64_t v24 = v3;
  uint64_t v25 = v12;
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  sub_1B5A1AE68();
  uint64_t v11 = sub_1B5A1AA88();
  uint64_t v5 = sub_1B59A04A4(&qword_1E9D63100, MEMORY[0x1E4F3D418]);
  uint64_t v22 = v2;
  uint64_t v23 = v11;
  uint64_t v24 = v3;
  uint64_t v25 = v5;
  swift_getOpaqueTypeMetadata2();
  uint64_t v6 = sub_1B5A1AE68();
  uint64_t v25 = v6;
  uint64_t v7 = v3;
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = __swift_allocate_boxed_opaque_existential_1(&v22);
  sub_1B59101B8(v19, (char *)a2, v2, v7, (uint64_t)v8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  uint64_t v9 = View.anyView.getter(v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  return v9;
}

_OWORD *sub_1B598CC88(uint64_t a1)
{
  uint64_t v11[3] = MEMORY[0x1E4F3EE00];
  v11[4] = MEMORY[0x1E4F3EDF8];
  v11[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  long long v4 = v1[3];
  v9[2] = v1[2];
  uint64_t v9[3] = v4;
  v10[0] = v1[4];
  *(_OWORD *)((char *)v10 + 10) = *(_OWORD *)((char *)v1 + 74);
  long long v5 = v1[1];
  v9[0] = *v1;
  v9[1] = v5;
  uint64_t v6 = v9;
  sub_1B596812C(v11, v3, v12);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v2)
  {
    uint64_t v7 = v13;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v6 = (_OWORD *)View.anyView.getter(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v6;
}

uint64_t sub_1B598CDC0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = MEMORY[0x1E4F3EE00];
  void v13[3] = MEMORY[0x1E4F3EE00];
  v13[4] = MEMORY[0x1E4F3EDF8];
  uint64_t v4 = MEMORY[0x1E4F3EDF8];
  v13[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v13, v3);
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v6, v7);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E18);
  uint64_t v9 = sub_1B5A1A748();
  v14[3] = v9;
  sub_1B59095C8(&qword_1E9D64E20, &qword_1E9D64E18);
  v14[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v14);
  a2(v8, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  uint64_t v10 = View.anyView.getter(v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v10;
}

void *sub_1B598CFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(void *__return_ptr, void *, uint64_t))
{
  v18[3] = MEMORY[0x1E4F3EE00];
  v18[4] = MEMORY[0x1E4F3EDF8];
  v18[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v12 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  v16[0] = a2;
  v16[1] = a3;
  v16[2] = a4;
  char v17 = a5;
  uint64_t v13 = v16;
  a6(v19, v18, v12);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  if (!v6)
  {
    uint64_t v14 = v20;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    uint64_t v13 = (void *)View.anyView.getter(v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  return v13;
}

uint64_t sub_1B598D0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v10 = a1;
  v14[3] = MEMORY[0x1E4F3EE00];
  v14[4] = MEMORY[0x1E4F3EDF8];
  v14[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v11 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B5904B60(a2, a3, a4, a5);
  StringResolvable.resolved(with:)(v11);
  sub_1B5904A88(a2, a3, a4, a5);
  if (v5)
  {
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    v15[6] = (uint64_t)__swift_project_boxed_opaque_existential_1(v14, MEMORY[0x1E4F3EE00]);
    uint64_t v12 = sub_1B5A1BA48();
    uint64_t v15[3] = v12;
    v15[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v15);
    sub_1B5A1B628();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v10 = View.anyView.getter(v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  return v10;
}

uint64_t sub_1B598D324(uint64_t a1)
{
  void v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = (void *)RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v4 = LocalStateStore.init()();
  sub_1B5985C14(v7, v3, v4, v8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v1 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v1;
}

uint64_t sub_1B598D440(uint64_t a1)
{
  uint64_t v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B5A05BB8(v6, v3, v7);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v2)
  {
    uint64_t v4 = v8;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = View.anyView.getter(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v1;
}

_OWORD *sub_1B598D558(uint64_t a1)
{
  uint64_t v10[3] = MEMORY[0x1E4F3EE00];
  v10[4] = MEMORY[0x1E4F3EDF8];
  v10[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  long long v4 = v1[1];
  v8[0] = *v1;
  v8[1] = v4;
  v9[0] = v1[2];
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v1 + 41);
  uint64_t v5 = v8;
  sub_1B5981384(v10, v3, v11);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v2)
  {
    uint64_t v6 = v12;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v5 = (_OWORD *)View.anyView.getter(v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return v5;
}

uint64_t sub_1B598D688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v9 = MEMORY[0x1E4F3EE00];
  uint64_t v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  unsigned int v10 = a5;
  v15[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v11 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v15, v9);
  if (v10 <= 0xFD)
  {
    v16[0] = a2;
    v16[1] = a3;
    v16[2] = a4;
    LOBYTE(v17) = a5;
    sub_1B5965310(a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
    sub_1B5963948(v11);
    sub_1B59325C0(a2, a3, a4, a5);
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64418);
  uint64_t v12 = sub_1B5A1A748();
  uint64_t v17 = v12;
  sub_1B59095C8((unint64_t *)&qword_1E9D64420, &qword_1E9D64418);
  uint64_t WitnessTable = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v16);
  sub_1B5A1B798();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v13 = View.anyView.getter(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v13;
}

_OWORD *sub_1B598D8B8(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 144);
  v16[8] = *(_OWORD *)(v1 + 128);
  v16[9] = v3;
  uint64_t v17 = *(void *)(v1 + 160);
  long long v4 = *(_OWORD *)(v1 + 80);
  v16[4] = *(_OWORD *)(v1 + 64);
  void v16[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 112);
  v16[6] = *(_OWORD *)(v1 + 96);
  v16[7] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  v16[0] = *(_OWORD *)v1;
  v16[1] = v6;
  long long v7 = *(_OWORD *)(v1 + 48);
  v16[2] = *(_OWORD *)(v1 + 32);
  uint64_t v16[3] = v7;
  void v13[3] = MEMORY[0x1E4F3EE00];
  v13[4] = MEMORY[0x1E4F3EDF8];
  v13[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v8 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v9 = LocalStateStore.init()();
  unsigned int v10 = v16;
  sub_1B594E9FC((uint64_t)v13, v8, v9, (uint64_t)v14);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  if (!v2)
  {
    uint64_t v11 = v15;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    unsigned int v10 = (_OWORD *)View.anyView.getter(v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return v10;
}

uint64_t sub_1B598D9FC(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4F3EE00];
  uint64_t v9[3] = MEMORY[0x1E4F3EE00];
  _OWORD v9[4] = MEMORY[0x1E4F3EDF8];
  uint64_t v3 = MEMORY[0x1E4F3EDF8];
  v9[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v9, v2);
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v10[0] = v2;
  v10[1] = v4;
  _OWORD v10[2] = v3;
  uint64_t v11 = v5;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v11 = OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v10);
  sub_1B5A1B788();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  uint64_t v7 = View.anyView.getter(OpaqueTypeMetadata2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v7;
}

uint64_t sub_1B598DB9C(uint64_t a1)
{
  uint64_t v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  v15[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v19 = LocalStateStore.init()();
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  char v7 = *(unsigned char *)(v1 + 24);
  sub_1B590D634(*(void *)v1, v5, v6, v7);
  sub_1B59B4120(v3, v4, v5, v6, v7);
  if (v2)
  {

    sub_1B590D6F0(v4, v5, v6, v7);
    sub_1B590CA38((uint64_t)v15, (uint64_t)v16);
  }
  else
  {
    sub_1B590D6F0(v4, v5, v6, v7);
    uint64_t v8 = *(void *)(v1 + 32);
    uint64_t v9 = *(void *)(v1 + 40);
    uint64_t v10 = *(void *)(v1 + 48);
    char v11 = *(unsigned char *)(v1 + 56);
    sub_1B590D634(v8, v9, v10, v11);
    sub_1B59B4120(v3, v8, v9, v10, v11);
    sub_1B590D6F0(v8, v9, v10, v11);
    __swift_project_boxed_opaque_existential_1(v15, MEMORY[0x1E4F3EE00]);
    uint64_t v17 = sub_1B5A1A748();
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v16);
    sub_1B5A1B778();
  }
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v12 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v13 = View.anyView.getter(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v13;
}

uint64_t sub_1B598DE28(uint64_t a1)
{
  uint64_t v3 = MEMORY[0x1E4F3EE00];
  uint64_t v4 = MEMORY[0x1E4F3EDF8];
  uint64_t v12[3] = MEMORY[0x1E4F3EE00];
  v12[4] = MEMORY[0x1E4F3EDF8];
  v12[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v6 = LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v12, v3);
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v7);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))(&v11, v5, v6, v7, v8);
  if (v2)
  {
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E88);
    uint64_t v9 = sub_1B5A1A748();
    void v13[3] = v9;
    sub_1B59095C8(&qword_1E9D64E90, &qword_1E9D64E88);
    v13[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v13);
    sub_1B590D4D8();
    sub_1B5A1B768();
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v4 = View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return v4;
}

_OWORD *sub_1B598E058(uint64_t a1)
{
  uint64_t v11[3] = MEMORY[0x1E4F3EE00];
  v11[4] = MEMORY[0x1E4F3EDF8];
  v11[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  long long v4 = v1[3];
  _OWORD v9[2] = v1[2];
  uint64_t v9[3] = v4;
  v10[0] = v1[4];
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)v1 + 73);
  long long v5 = v1[1];
  v9[0] = *v1;
  v9[1] = v5;
  uint64_t v6 = v9;
  sub_1B59FD6D0(v11, v3, v12);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v2)
  {
    uint64_t v7 = v13;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v6 = (_OWORD *)View.anyView.getter(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v6;
}

_OWORD *sub_1B598E190(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 112);
  v15[6] = *(_OWORD *)(v1 + 96);
  uint64_t v15[7] = v3;
  char v16 = *(unsigned char *)(v1 + 128);
  long long v4 = *(_OWORD *)(v1 + 48);
  v15[2] = *(_OWORD *)(v1 + 32);
  uint64_t v15[3] = v4;
  long long v5 = *(_OWORD *)(v1 + 80);
  v15[4] = *(_OWORD *)(v1 + 64);
  void v15[5] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  v15[0] = *(_OWORD *)v1;
  v15[1] = v6;
  uint64_t v12[3] = MEMORY[0x1E4F3EE00];
  v12[4] = MEMORY[0x1E4F3EDF8];
  v12[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v7 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v8 = LocalStateStore.init()();
  uint64_t v9 = v15;
  sub_1B59E39A0(v12, v7, v8, v13);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (!v2)
  {
    uint64_t v10 = v14;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v9 = (_OWORD *)View.anyView.getter(v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return v9;
}

uint64_t sub_1B598E2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void *, uint64_t, void))
{
  uint64_t v6 = MEMORY[0x1E4F3EE00];
  void v19[3] = MEMORY[0x1E4F3EE00];
  v19[4] = MEMORY[0x1E4F3EDF8];
  v19[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v7 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v8 = LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v19, v6);
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a2;
  uint64_t v9[3] = v7;
  _OWORD v9[4] = v8;
  uint64_t v10 = sub_1B5A1A748();
  v18[3] = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  v18[4] = WitnessTable;
  __swift_allocate_boxed_opaque_existential_1(v18);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  a5(a4, v9, v6, MEMORY[0x1E4F3EDF8]);
  swift_release();
  uint64_t v12 = sub_1B59193A4(a2);
  sub_1B59177F0(v12, v7, v8, v10, WitnessTable, v20);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  uint64_t v13 = v21;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v14 = View.anyView.getter(v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v14;
}

uint64_t sub_1B598E4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = MEMORY[0x1E4F3EDF8];
  void v14[3] = MEMORY[0x1E4F3EE00];
  v14[4] = MEMORY[0x1E4F3EDF8];
  v14[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v11 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  a5 &= 1u;
  sub_1B590D634(a2, a3, a4, a5);
  sub_1B59B4120(v11, a2, a3, a4, a5);
  sub_1B590D6F0(a2, a3, a4, a5);
  if (v5)
  {
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v14, MEMORY[0x1E4F3EE00]);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64398);
    uint64_t v12 = sub_1B5A1A748();
    uint64_t v15[3] = v12;
    sub_1B59095C8(&qword_1E9D643A0, &qword_1E9D64398);
    v15[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v15);
    sub_1B5A1B738();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v10 = View.anyView.getter(v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  return v10;
}

uint64_t sub_1B598E6FC(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4F3EE00];
  uint64_t v13 = MEMORY[0x1E4F3EE00];
  uint64_t v14 = MEMORY[0x1E4F3EDF8];
  v12[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  unsigned int v4 = *(unsigned __int8 *)(v1 + 32);
  if (v4 > 0xFD) {
    goto LABEL_4;
  }
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  v15[0] = *(void *)(v1 + 8);
  v15[1] = v5;
  v15[2] = v6;
  LOBYTE(v16) = v4;
  sub_1B5965310(v15[0], v5, v6, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(v3);
  char v8 = v7;
  sub_1B599F4C4(v1);
  uint64_t v2 = v13;
  if (v8)
  {
LABEL_4:
    __swift_project_boxed_opaque_existential_1(v12, v2);
    uint64_t v16 = sub_1B5A1A748();
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v15);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v16 = sub_1B5A1A748();
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v15);
  }
  sub_1B5A1B718();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  uint64_t v9 = v16;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  uint64_t v10 = View.anyView.getter(v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v10;
}

uint64_t sub_1B598E95C(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  v5[3] = MEMORY[0x1E4F3EE00];
  v5[4] = MEMORY[0x1E4F3EDF8];
  v5[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v5, v1);
  sub_1B5A1BC48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64EA0);
  uint64_t v2 = sub_1B5A1A748();
  uint64_t v6[3] = v2;
  sub_1B59095C8((unint64_t *)&qword_1E9D64EA8, &qword_1E9D64EA0);
  v6[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v6);
  sub_1B5A1B6F8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  uint64_t v3 = View.anyView.getter(v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3;
}

uint64_t sub_1B598EB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, double))
{
  void v19[3] = MEMORY[0x1E4F3EE00];
  v19[4] = MEMORY[0x1E4F3EDF8];
  v19[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v12 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B590D634(a2, a3, a4, a5 & 1);
  double v13 = sub_1B59B4324(v12, a2, a3, a4, a5 & 1);
  sub_1B590D6F0(a2, a3, a4, a5 & 1);
  if (v7)
  {
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4F3EE00];
    __swift_project_boxed_opaque_existential_1(v19, MEMORY[0x1E4F3EE00]);
    uint64_t v15 = MEMORY[0x1E4F3EDF8];
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t v20[3] = OpaqueTypeMetadata2;
    v20[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v20);
    a7(v14, v15, v13);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    a3 = View.anyView.getter(OpaqueTypeMetadata2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  return a3;
}

uint64_t sub_1B598ED2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  int v10 = ~a5;
  v15[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v11 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  v16[6] = LocalStateStore.init()();
  if (v10)
  {
    sub_1B590D634(a2, a3, a4, a5 & 1);
    sub_1B59B4120(v11, a2, a3, a4, a5 & 1);
    if (v5) {

    }
    sub_1B590F034(a2, a3, a4, a5);
  }
  __swift_project_boxed_opaque_existential_1(v15, MEMORY[0x1E4F3EE00]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64EC0);
  uint64_t v12 = sub_1B5A1A748();
  uint64_t v16[3] = v12;
  sub_1B59095C8(&qword_1E9D64EC8, &qword_1E9D64EC0);
  v16[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v16);
  sub_1B5A1B6E8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v13 = View.anyView.getter(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v13;
}

uint64_t sub_1B598EF5C(uint64_t a1)
{
  uint64_t v10[3] = MEMORY[0x1E4F3EE00];
  v10[4] = MEMORY[0x1E4F3EDF8];
  v10[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v4 = LocalStateStore.init()();
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(v1, v5);
  (*(void (**)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(v11, v10, v3, v4, v5, v6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v2)
  {
    uint64_t v8 = v12;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v7 = View.anyView.getter(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return v7;
}

uint64_t sub_1B598F0A8(uint64_t a1)
{
  uint64_t v3 = v2;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v6 = LocalStateStore.init()();
  if (*(void *)(v1 + 8)) {
    uint64_t v7 = *(void *)(v1 + 8);
  }
  else {
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1B59193A4(v7);
  swift_bridgeObjectRelease();
  uint64_t v20 = MEMORY[0x1E4F3EE00];
  uint64_t v21 = MEMORY[0x1E4F3EDF8];
  v19[0] = a1;
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    int v10 = (void *)(v8 + 32);
    uint64_t v22 = a1;
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v12 = v10[3];
      uint64_t v11 = v10[4];
      __swift_project_boxed_opaque_existential_1(v10, v12);
      (*(void (**)(long long *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(v16, v19, v5, v6, v12, v11);
      if (v3)
      {

        uint64_t v17 = 0;
        memset(v16, 0, sizeof(v16));
        sub_1B590CA38((uint64_t)v19, (uint64_t)v18);
        sub_1B5908FC0((uint64_t)v16, &qword_1E9D632F8);
        uint64_t v3 = 0;
      }
      else
      {
        sub_1B5908BE8(v16, (uint64_t)v18);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_1B5908BE8(v18, (uint64_t)v19);
      v10 += 5;
      --v9;
    }
    while (v9);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_retain();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v13 = v20;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  uint64_t v14 = View.anyView.getter(v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return v14;
}

uint64_t sub_1B598F2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void v14[3] = MEMORY[0x1E4F3EE00];
  v14[4] = MEMORY[0x1E4F3EDF8];
  char v9 = a5 & 1;
  v14[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v10 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v11 = LocalStateStore.init()();
  sub_1B5998634((uint64_t)v14, v10, a2, a3, a4, v9, v15);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  if (!v5)
  {
    uint64_t v12 = v16;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v11 = View.anyView.getter(v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  return v11;
}

uint64_t sub_1B598F420(uint64_t a1)
{
  uint64_t v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B5988124(v6, v3, v7);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v2)
  {
    uint64_t v4 = v8;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = View.anyView.getter(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v1;
}

uint64_t sub_1B598F538(uint64_t a1)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v4 = LocalStateStore.init()();
  sub_1B59BDED0((uint64_t)v7, v3, v4, v8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v1 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v1;
}

_OWORD *sub_1B598F654(uint64_t a1, void (*a2)(void *__return_ptr, void *, uint64_t))
{
  void v12[3] = MEMORY[0x1E4F3EE00];
  v12[4] = MEMORY[0x1E4F3EDF8];
  v12[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  long long v6 = v2[1];
  v10[0] = *v2;
  v10[1] = v6;
  v11[0] = v2[2];
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v2 + 41);
  uint64_t v7 = v10;
  a2(v13, v12, v5);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (!v3)
  {
    uint64_t v8 = v14;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v7 = (_OWORD *)View.anyView.getter(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return v7;
}

uint64_t sub_1B598F78C(uint64_t a1)
{
  uint64_t v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B5A02F0C(v6, v3, v7);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v2)
  {
    uint64_t v4 = v8;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = View.anyView.getter(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v1;
}

uint64_t sub_1B598F8A4(uint64_t a1)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v4 = LocalStateStore.init()();
  sub_1B59E8238(v7, v3, v4, v8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v1 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v1;
}

uint64_t sub_1B598F9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = MEMORY[0x1E4F3EE00];
  uint64_t v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  uint64_t v4 = MEMORY[0x1E4F3EDF8];
  v15[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v6 = LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v15, v3);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a2;
  uint64_t v7[3] = v5;
  v7[4] = v6;
  uint64_t v16 = v3;
  uint64_t v17 = v4;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  void v14[3] = OpaqueTypeMetadata2;
  uint64_t v16 = v3;
  uint64_t v17 = v4;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v14[4] = OpaqueTypeConformance2;
  __swift_allocate_boxed_opaque_existential_1(v14);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B5A1B478();
  swift_release();
  uint64_t v10 = sub_1B59193A4(a2);
  sub_1B59177F0(v10, v5, v6, OpaqueTypeMetadata2, OpaqueTypeConformance2, &v16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v11 = v18;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  uint64_t v12 = View.anyView.getter(v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  return v12;
}

unsigned char *sub_1B598FBE0(uint64_t a1)
{
  uint64_t v8[3] = MEMORY[0x1E4F3EE00];
  v8[4] = MEMORY[0x1E4F3EDF8];
  v8[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  memcpy(v7, v1, sizeof(v7));
  uint64_t v4 = v7;
  sub_1B5A18F58(v8, v3, v9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if (!v2)
  {
    uint64_t v5 = v10;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    uint64_t v4 = (unsigned char *)View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  return v4;
}

uint64_t sub_1B598FD08(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  uint64_t v2 = MEMORY[0x1E4F3EDF8];
  uint64_t v8[3] = MEMORY[0x1E4F3EE00];
  v8[4] = MEMORY[0x1E4F3EDF8];
  v8[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v8, v1);
  swift_getKeyPath();
  uint64_t v3 = sub_1B5A1A588();
  uint64_t v4 = sub_1B59A04A4(&qword_1E9D638B8, MEMORY[0x1E4F3C820]);
  v9[0] = v1;
  v9[1] = v3;
  _OWORD v9[2] = v2;
  uint64_t v10 = v4;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v10 = OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v9);
  swift_retain();
  sub_1B5A1B598();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  uint64_t v6 = View.anyView.getter(OpaqueTypeMetadata2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v6;
}

uint64_t sub_1B598FF08(uint64_t a1)
{
  uint64_t v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B59895D0(v6, v3, (uint64_t)v7);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v2)
  {
    uint64_t v4 = v8;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = View.anyView.getter(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v1;
}

uint64_t sub_1B5990024(uint64_t a1)
{
  uint64_t v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B5920BCC(v6, v3, v7);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v2)
  {
    uint64_t v4 = v8;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v1 = View.anyView.getter(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v1;
}

_OWORD *sub_1B5990140(uint64_t a1)
{
  void v13[3] = MEMORY[0x1E4F3EE00];
  v13[4] = MEMORY[0x1E4F3EDF8];
  v13[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  long long v4 = v1[7];
  v11[6] = v1[6];
  v11[7] = v4;
  v12[0] = v1[8];
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)v1 + 137);
  long long v5 = v1[3];
  _OWORD v11[2] = v1[2];
  void v11[3] = v5;
  long long v6 = v1[5];
  v11[4] = v1[4];
  void v11[5] = v6;
  long long v7 = v1[1];
  v11[0] = *v1;
  v11[1] = v7;
  uint64_t v8 = v11;
  sub_1B594B598(v13, v3, v14);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  if (!v2)
  {
    uint64_t v9 = v15;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v8 = (_OWORD *)View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return v8;
}

uint64_t sub_1B5990288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = MEMORY[0x1E4F3EE00];
  v21[3] = MEMORY[0x1E4F3EE00];
  v21[4] = MEMORY[0x1E4F3EDF8];
  int v12 = ~a5;
  v21[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v13 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v25 = LocalStateStore.init()();
  if (!v12)
  {
    __swift_project_boxed_opaque_existential_1(v21, v11);
    uint64_t v15 = MEMORY[0x1E4F3EDF8];
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v22);
    a7(1, v11, v15);
LABEL_6:
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    uint64_t v17 = OpaqueTypeMetadata2;
    __swift_project_boxed_opaque_existential_1(v22, OpaqueTypeMetadata2);
    uint64_t v14 = View.anyView.getter(v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    return v14;
  }
  sub_1B590D634(a2, a3, a4, a5 & 1);
  uint64_t v14 = sub_1B59B4120(v13, a2, a3, a4, a5 & 1);
  sub_1B590F034(a2, a3, a4, a5);
  if (!v20)
  {
    __swift_project_boxed_opaque_existential_1(v21, v11);
    uint64_t v16 = MEMORY[0x1E4F3EDF8];
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v22);
    a7(v14 & 1, v11, v16);
    goto LABEL_6;
  }
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v14;
}

void *sub_1B5990520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  v13[0] = a2;
  v13[1] = a3;
  v13[2] = a4;
  char v14 = a5 & 1;
  uint64_t v10[3] = MEMORY[0x1E4F3EE00];
  v10[4] = MEMORY[0x1E4F3EDF8];
  v10[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v6 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  long long v7 = v13;
  sub_1B59D8320(v10, v6, v11);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v5)
  {
    uint64_t v8 = v12;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    long long v7 = (void *)View.anyView.getter(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return v7;
}

uint64_t sub_1B5990640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14[3] = MEMORY[0x1E4F3EE00];
  v14[4] = MEMORY[0x1E4F3EDF8];
  v14[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v10 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v11 = LocalStateStore.init()();
  a5(v15, v14, v10, v11, a2, a3, a4);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  if (!v5)
  {
    uint64_t v12 = v16;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v11 = View.anyView.getter(v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  return v11;
}

uint64_t ContentModifier.modifyView(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v11[0] = a1;
  uint64_t v11[3] = MEMORY[0x1E4F3EE00];
  v11[4] = MEMORY[0x1E4F3EDF8];
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v7 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v8 = LocalStateStore.init()();
  (*(void (**)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 16))(v12, v11, v7, v8, a2, a3);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v4)
  {
    uint64_t v9 = v13;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v3 = View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v3;
}

uint64_t sub_1B59908C4(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4F3EE00];
  unsigned int v19 = *v1;
  uint64_t v20[3] = MEMORY[0x1E4F3EE00];
  v20[4] = MEMORY[0x1E4F3EDF8];
  uint64_t v3 = MEMORY[0x1E4F3EDF8];
  v20[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  uint64_t v18 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(v20, v2);
  uint64_t v4 = sub_1B5A1ACC8();
  uint64_t v17 = sub_1B59A04A4(&qword_1E9D63120, MEMORY[0x1E4F3D530]);
  uint64_t v21 = v2;
  uint64_t v22 = v4;
  uint64_t v23 = v3;
  uint64_t v24 = v17;
  swift_getOpaqueTypeMetadata2();
  uint64_t v16 = sub_1B5A1B0C8();
  uint64_t v15 = sub_1B59A04A4(&qword_1E9D63118, MEMORY[0x1E4F3DEB8]);
  uint64_t v21 = v2;
  uint64_t v22 = v16;
  uint64_t v23 = v3;
  uint64_t v24 = v15;
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  uint64_t v14 = sub_1B5A1A7F8();
  uint64_t v13 = sub_1B59A04A4(&qword_1E9D63110, MEMORY[0x1E4F3CD40]);
  uint64_t v21 = v2;
  uint64_t v22 = v14;
  uint64_t v23 = v3;
  uint64_t v24 = v13;
  swift_getOpaqueTypeMetadata2();
  uint64_t v12 = sub_1B5A1AF88();
  uint64_t v11 = sub_1B59A04A4(&qword_1E9D63108, MEMORY[0x1E4F3D8B0]);
  uint64_t v21 = v2;
  uint64_t v22 = v12;
  uint64_t v23 = v3;
  uint64_t v24 = v11;
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  sub_1B5A1AE68();
  uint64_t v10 = sub_1B5A1AA88();
  uint64_t v5 = sub_1B59A04A4(&qword_1E9D63100, MEMORY[0x1E4F3D418]);
  uint64_t v21 = v2;
  uint64_t v22 = v10;
  uint64_t v23 = v3;
  uint64_t v24 = v5;
  swift_getOpaqueTypeMetadata2();
  uint64_t v6 = sub_1B5A1AE68();
  uint64_t v24 = v6;
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = __swift_allocate_boxed_opaque_existential_1(&v21);
  sub_1B59101B8(v18, (char *)v19, v2, v3, (uint64_t)v7);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  uint64_t v8 = View.anyView.getter(v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  return v8;
}

uint64_t sub_1B5990D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v16[3] = MEMORY[0x1E4F3EE00];
  v16[4] = MEMORY[0x1E4F3EDF8];
  v16[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 16);
  char v8 = *(unsigned char *)(v2 + 24);
  sub_1B590D634(*(void *)v2, v6, v7, v8);
  sub_1B59B4120(a2, v5, v6, v7, v8);
  if (v3)
  {

    sub_1B590D6F0(v5, v6, v7, v8);
    sub_1B590CA38((uint64_t)v16, (uint64_t)v17);
  }
  else
  {
    sub_1B590D6F0(v5, v6, v7, v8);
    uint64_t v9 = *(void *)(v2 + 32);
    uint64_t v10 = *(void *)(v2 + 40);
    uint64_t v11 = *(void *)(v2 + 48);
    char v12 = *(unsigned char *)(v2 + 56);
    sub_1B590D634(v9, v10, v11, v12);
    sub_1B59B4120(a2, v9, v10, v11, v12);
    sub_1B590D6F0(v9, v10, v11, v12);
    __swift_project_boxed_opaque_existential_1(v16, MEMORY[0x1E4F3EE00]);
    uint64_t v18 = sub_1B5A1A748();
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v17);
    sub_1B5A1B778();
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  uint64_t v13 = v18;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  uint64_t v14 = View.anyView.getter(v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14;
}

uint64_t sub_1B5990F98(uint64_t a1, uint64_t a2)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B5920BCC(v7, a2, v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v3)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v2 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v2;
}

_OWORD *sub_1B5991090(uint64_t a1, uint64_t a2)
{
  uint64_t v14[3] = MEMORY[0x1E4F3EE00];
  v14[4] = MEMORY[0x1E4F3EDF8];
  v14[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  long long v5 = v2[7];
  v12[6] = v2[6];
  v12[7] = v5;
  v13[0] = v2[8];
  *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)((char *)v2 + 137);
  long long v6 = v2[3];
  _OWORD v12[2] = v2[2];
  void v12[3] = v6;
  long long v7 = v2[5];
  v12[4] = v2[4];
  void v12[5] = v7;
  long long v8 = v2[1];
  v12[0] = *v2;
  v12[1] = v8;
  uint64_t v9 = v12;
  sub_1B594B598(v14, a2, v15);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  if (!v3)
  {
    uint64_t v10 = v16;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v9 = (_OWORD *)View.anyView.getter(v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  return v9;
}

uint64_t sub_1B59911B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = MEMORY[0x1E4F3EE00];
  uint64_t v22[3] = MEMORY[0x1E4F3EE00];
  v22[4] = MEMORY[0x1E4F3EDF8];
  int v14 = ~a6;
  v22[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v26 = LocalStateStore.init()();
  if (!v14)
  {
    __swift_project_boxed_opaque_existential_1(v22, v13);
    uint64_t v16 = MEMORY[0x1E4F3EDF8];
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v23);
    a8(1, v13, v16);
LABEL_6:
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    uint64_t v18 = OpaqueTypeMetadata2;
    __swift_project_boxed_opaque_existential_1(v23, OpaqueTypeMetadata2);
    uint64_t v15 = View.anyView.getter(v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    return v15;
  }
  sub_1B590D634(a3, a4, a5, a6 & 1);
  uint64_t v15 = sub_1B59B4120(a2, a3, a4, a5, a6 & 1);
  sub_1B590F034(a3, a4, a5, a6);
  if (!v21)
  {
    __swift_project_boxed_opaque_existential_1(v22, v13);
    uint64_t v17 = MEMORY[0x1E4F3EDF8];
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v23);
    a8(v15 & 1, v13, v17);
    goto LABEL_6;
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v15;
}

uint64_t sub_1B5991410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, double))
{
  uint64_t v20[3] = MEMORY[0x1E4F3EE00];
  v20[4] = MEMORY[0x1E4F3EDF8];
  v20[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B590D634(a3, a4, a5, a6 & 1);
  double v14 = sub_1B59B4324(a2, a3, a4, a5, a6 & 1);
  sub_1B590D6F0(a3, a4, a5, a6 & 1);
  if (v8)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4F3EE00];
    __swift_project_boxed_opaque_existential_1(v20, MEMORY[0x1E4F3EE00]);
    uint64_t v16 = MEMORY[0x1E4F3EDF8];
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    v21[3] = OpaqueTypeMetadata2;
    v21[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v21);
    a8(v15, v16, v14);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a4 = View.anyView.getter(OpaqueTypeMetadata2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  return a4;
}

_OWORD *sub_1B59915E8(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(v2 + 144);
  v17[8] = *(_OWORD *)(v2 + 128);
  v17[9] = v5;
  uint64_t v18 = *(void *)(v2 + 160);
  long long v6 = *(_OWORD *)(v2 + 80);
  v17[4] = *(_OWORD *)(v2 + 64);
  void v17[5] = v6;
  long long v7 = *(_OWORD *)(v2 + 112);
  v17[6] = *(_OWORD *)(v2 + 96);
  v17[7] = v7;
  long long v8 = *(_OWORD *)(v2 + 16);
  v17[0] = *(_OWORD *)v2;
  v17[1] = v8;
  long long v9 = *(_OWORD *)(v2 + 48);
  v17[2] = *(_OWORD *)(v2 + 32);
  uint64_t v17[3] = v9;
  uint64_t v14[3] = MEMORY[0x1E4F3EE00];
  v14[4] = MEMORY[0x1E4F3EDF8];
  v14[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v10 = LocalStateStore.init()();
  uint64_t v11 = v17;
  sub_1B594E9FC((uint64_t)v14, a2, v10, (uint64_t)v15);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  if (!v3)
  {
    uint64_t v12 = v16;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v11 = (_OWORD *)View.anyView.getter(v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  return v11;
}

uint64_t sub_1B5991708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12 = MEMORY[0x1E4F3EDF8];
  void v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  v15[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  a6 &= 1u;
  sub_1B590D634(a3, a4, a5, a6);
  sub_1B59B4120(a2, a3, a4, a5, a6);
  sub_1B590D6F0(a3, a4, a5, a6);
  if (v6)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v15, MEMORY[0x1E4F3EE00]);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64398);
    uint64_t v13 = sub_1B5A1A748();
    uint64_t v16[3] = v13;
    sub_1B59095C8(&qword_1E9D643A0, &qword_1E9D64398);
    v16[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v16);
    sub_1B5A1B738();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    uint64_t v12 = View.anyView.getter(v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  return v12;
}

uint64_t sub_1B59918FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v11 = MEMORY[0x1E4F3EE00];
  uint64_t v16[3] = MEMORY[0x1E4F3EE00];
  v16[4] = MEMORY[0x1E4F3EDF8];
  unsigned int v12 = a6;
  v16[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v16, v11);
  if (v12 <= 0xFD)
  {
    v17[0] = a3;
    v17[1] = a4;
    v17[2] = a5;
    LOBYTE(v18) = a6;
    sub_1B5965310(a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
    sub_1B5963948(a2);
    sub_1B59325C0(a3, a4, a5, a6);
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64418);
  uint64_t v13 = sub_1B5A1A748();
  uint64_t v18 = v13;
  sub_1B59095C8((unint64_t *)&qword_1E9D64420, &qword_1E9D64418);
  uint64_t WitnessTable = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v17);
  sub_1B5A1B798();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  uint64_t v14 = View.anyView.getter(v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14;
}

_OWORD *sub_1B5991B08(uint64_t a1, uint64_t a2)
{
  void v13[3] = MEMORY[0x1E4F3EE00];
  v13[4] = MEMORY[0x1E4F3EDF8];
  v13[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  long long v5 = v2[5];
  v11[4] = v2[4];
  void v11[5] = v5;
  v12[0] = v2[6];
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)v2 + 105);
  long long v6 = v2[1];
  v11[0] = *v2;
  v11[1] = v6;
  long long v7 = v2[3];
  _OWORD v11[2] = v2[2];
  uint64_t v11[3] = v7;
  long long v8 = v11;
  sub_1B595F78C(v13, a2, v14);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  if (!v3)
  {
    uint64_t v9 = v15;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    long long v8 = (_OWORD *)View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return v8;
}

_OWORD *sub_1B5991C24(uint64_t a1, uint64_t a2)
{
  uint64_t v11[3] = MEMORY[0x1E4F3EE00];
  v11[4] = MEMORY[0x1E4F3EDF8];
  v11[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  long long v5 = v2[3];
  _OWORD v10[2] = v2[2];
  uint64_t v10[3] = v5;
  v10[4] = v2[4];
  long long v6 = v2[1];
  v10[0] = *v2;
  v10[1] = v6;
  long long v7 = v10;
  sub_1B59663B0(v11, a2, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v3)
  {
    uint64_t v8 = v13;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    long long v7 = (_OWORD *)View.anyView.getter(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v7;
}

_OWORD *sub_1B5991D30(uint64_t a1, uint64_t a2)
{
  uint64_t v12[3] = MEMORY[0x1E4F3EE00];
  v12[4] = MEMORY[0x1E4F3EDF8];
  v12[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  long long v5 = v2[3];
  _OWORD v10[2] = v2[2];
  uint64_t v10[3] = v5;
  v11[0] = v2[4];
  *(_OWORD *)((char *)v11 + 10) = *(_OWORD *)((char *)v2 + 74);
  long long v6 = v2[1];
  v10[0] = *v2;
  v10[1] = v6;
  long long v7 = v10;
  sub_1B596812C(v12, a2, v13);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (!v3)
  {
    uint64_t v8 = v14;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    long long v7 = (_OWORD *)View.anyView.getter(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return v7;
}

uint64_t sub_1B5991E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  char v11 = a6 & 1;
  v15[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v12 = LocalStateStore.init()();
  sub_1B5998634((uint64_t)v15, a2, a3, a4, a5, v11, v16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  if (!v6)
  {
    uint64_t v13 = v17;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    uint64_t v12 = View.anyView.getter(v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  return v12;
}

uint64_t sub_1B5991F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x1E4F3EE00];
  v27[3] = MEMORY[0x1E4F3EE00];
  v27[4] = MEMORY[0x1E4F3EDF8];
  v27[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  long long v5 = v2[5];
  long long v32 = v2[4];
  long long v33 = v5;
  v34[0] = v2[6];
  *(_OWORD *)((char *)v34 + 9) = *(long long *)((char *)v2 + 105);
  long long v6 = v2[1];
  long long v28 = *v2;
  long long v29 = v6;
  long long v7 = v2[3];
  long long v30 = v2[2];
  long long v31 = v7;
  __swift_project_boxed_opaque_existential_1(v27, v4);
  long long v24 = v32;
  long long v25 = v33;
  v26[0] = v34[0];
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)v34 + 9);
  long long v18 = v28;
  uint64_t v19 = v29;
  uint64_t v22 = *((void *)&v30 + 1);
  long long v23 = v31;
  sub_1B59A04EC((uint64_t)&v28, (uint64_t)sub_1B590D634, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5965310);
  double v8 = sub_1B5980378(a2);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_1B59A04EC((uint64_t)v2, (uint64_t)sub_1B590D6F0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B596536C);
  double v35 = v8;
  uint64_t v36 = v10;
  uint64_t v37 = v12;
  uint64_t v38 = v14;
  char v39 = 0;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64BF8);
  uint64_t v15 = sub_1B5A1A748();
  uint64_t v20 = v15;
  sub_1B59095C8(&qword_1E9D64C00, &qword_1E9D64BF8);
  uint64_t WitnessTable = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
  sub_1B5A1B488();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  uint64_t v16 = View.anyView.getter(v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  return v16;
}

_OWORD *sub_1B59921C0(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, void *, uint64_t))
{
  v13[0] = a1;
  uint64_t v13[3] = MEMORY[0x1E4F3EE00];
  v13[4] = MEMORY[0x1E4F3EDF8];
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  long long v7 = v3[1];
  v11[0] = *v3;
  v11[1] = v7;
  v12[0] = v3[2];
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)v3 + 41);
  double v8 = v11;
  a3(v14, v13, a2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  if (!v4)
  {
    uint64_t v9 = v15;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    double v8 = (_OWORD *)View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return v8;
}

_OWORD *sub_1B59922D8(uint64_t a1, uint64_t a2)
{
  uint64_t v11[3] = MEMORY[0x1E4F3EE00];
  v11[4] = MEMORY[0x1E4F3EDF8];
  v11[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  long long v5 = v2[1];
  v9[0] = *v2;
  v9[1] = v5;
  v10[0] = v2[2];
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)v2 + 41);
  long long v6 = v9;
  sub_1B5981384(v11, a2, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v3)
  {
    uint64_t v7 = v13;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    long long v6 = (_OWORD *)View.anyView.getter(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v6;
}

uint64_t sub_1B59923E4(uint64_t a1)
{
  v5[3] = MEMORY[0x1E4F3EE00];
  v5[4] = MEMORY[0x1E4F3EDF8];
  v5[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B59820B4(v5, v6);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  if (!v2)
  {
    uint64_t v3 = v7;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    uint64_t v1 = View.anyView.getter(v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  return v1;
}

uint64_t sub_1B59924D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11 = MEMORY[0x1E4F3EE00];
  void v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  v15[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v15, v11);
  v16[0] = a3;
  v16[1] = a4;
  long long v16[2] = a5;
  LOBYTE(v17) = a6;
  sub_1B5965310(a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(a2);
  sub_1B596536C(a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64C18);
  sub_1B5A1A748();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64C20);
  uint64_t v12 = sub_1B5A1A748();
  uint64_t v17 = v12;
  sub_1B59095C8(&qword_1E9D64C28, &qword_1E9D64C18);
  swift_getWitnessTable();
  sub_1B59095C8(&qword_1E9D64C30, &qword_1E9D64C20);
  uint64_t WitnessTable = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v16);
  sub_1B5A1B568();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v13 = View.anyView.getter(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v13;
}

uint64_t sub_1B5992750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v12 = MEMORY[0x1E4F3EE00];
  void v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  v15[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B5904B60(a3, a4, a5, a6);
  StringResolvable.resolved(with:)(a2);
  sub_1B5904A88(a3, a4, a5, a6);
  if (v6)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_1B5A1C558();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v15, v12);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t v16[3] = OpaqueTypeMetadata2;
    v16[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v16);
    sub_1B5A1B5E8();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    uint64_t v12 = View.anyView.getter(OpaqueTypeMetadata2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  return v12;
}

uint64_t sub_1B5992970(uint64_t a1, void *a2)
{
  uint64_t v8[3] = MEMORY[0x1E4F3EE00];
  v8[4] = MEMORY[0x1E4F3EDF8];
  v8[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = LocalStateStore.init()();
  sub_1B5985C14(v8, a2, v5, v9);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if (!v3)
  {
    uint64_t v6 = v10;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    uint64_t v2 = View.anyView.getter(v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  return v2;
}

uint64_t sub_1B5992A68(uint64_t a1, uint64_t a2)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B5988124(v7, a2, v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v3)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v2 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v2;
}

uint64_t sub_1B5992B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v11[3] = MEMORY[0x1E4F3EE00];
  v11[4] = MEMORY[0x1E4F3EDF8];
  v11[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = LocalStateStore.init()();
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(v2, v6);
  (*(void (**)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(v12, v11, a2, v5, v6, v7);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v3)
  {
    uint64_t v9 = v13;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v8 = View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v8;
}

uint64_t sub_1B5992C84(uint64_t a1, uint64_t a2)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B59A14BC(v7, a2, v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v3)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v2 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v2;
}

void *sub_1B5992D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v12 = MEMORY[0x1E4F3EE00];
  v26[3] = MEMORY[0x1E4F3EE00];
  v26[4] = MEMORY[0x1E4F3EDF8];
  v26[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  LOBYTE(v23) = a6;
  sub_1B5904B60(a3, a4, a5, a6);
  uint64_t v13 = &v20;
  unint64_t v14 = StringResolvable.resolved(with:)(a2);
  if (v6)
  {
    sub_1B5904A88(a3, a4, a5, a6);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    unint64_t v16 = v14;
    uint64_t v17 = v15;
    sub_1B5904A88(a3, a4, a5, a6);
    __swift_project_boxed_opaque_existential_1(v26, v12);
    unint64_t v24 = v16;
    uint64_t v25 = v17;
    uint64_t v20 = v12;
    uint64_t v21 = MEMORY[0x1E4FBB1A0];
    uint64_t v22 = MEMORY[0x1E4F3EDF8];
    uint64_t v23 = MEMORY[0x1E4FBB1B0];
    uint64_t v18 = sub_1B5A1BA48();
    v27[3] = v18;
    v27[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v27);
    sub_1B5A1B628();
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    uint64_t v13 = (void *)View.anyView.getter(v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  return v13;
}

uint64_t sub_1B5992F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v12 = MEMORY[0x1E4F3EE00];
  uint64_t v13 = MEMORY[0x1E4F3EDF8];
  v18[3] = MEMORY[0x1E4F3EE00];
  v18[4] = MEMORY[0x1E4F3EDF8];
  v18[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v24 = LocalStateStore.init()();
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  LOBYTE(v22) = a6;
  sub_1B5904B60(a3, a4, a5, a6);
  StringResolvable.resolved(with:)(a2);
  if (v6) {

  }
  sub_1B5904A88(a3, a4, a5, a6);
  __swift_project_boxed_opaque_existential_1(v18, v12);
  unint64_t v14 = sub_1B5943480();
  uint64_t v19 = v12;
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  uint64_t v21 = v13;
  unint64_t v22 = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  unint64_t v22 = OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(&v19);
  sub_1B5A1B518();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  uint64_t v16 = View.anyView.getter(OpaqueTypeMetadata2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  return v16;
}

uint64_t sub_1B599317C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, void (*a8)(void, uint64_t, uint64_t))
{
  uint64_t v21 = a8;
  void v19[3] = MEMORY[0x1E4F3EE00];
  v19[4] = MEMORY[0x1E4F3EDF8];
  v19[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  a6 &= 1u;
  sub_1B590D634(a3, a4, a5, a6);
  char v14 = sub_1B59B4120(a2, a3, a4, a5, a6);
  sub_1B590D6F0(a3, a4, a5, a6);
  if (v8)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4F3EE00];
    __swift_project_boxed_opaque_existential_1(v19, MEMORY[0x1E4F3EE00]);
    uint64_t v16 = MEMORY[0x1E4F3EDF8];
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t v20[3] = OpaqueTypeMetadata2;
    v20[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v20);
    v21(v14 & 1, v15, v16);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    a4 = View.anyView.getter(OpaqueTypeMetadata2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  return a4;
}

uint64_t sub_1B5993350(uint64_t a1, uint64_t a2)
{
  uint64_t v8[3] = MEMORY[0x1E4F3EE00];
  v8[4] = MEMORY[0x1E4F3EDF8];
  v8[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = LocalStateStore.init()();
  sub_1B59BDED0((uint64_t)v8, a2, v5, v9);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if (!v3)
  {
    uint64_t v6 = v10;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    uint64_t v2 = View.anyView.getter(v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  return v2;
}

void *sub_1B5993448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void (*a7)(void *__return_ptr, void *, uint64_t))
{
  void v19[3] = MEMORY[0x1E4F3EE00];
  v19[4] = MEMORY[0x1E4F3EDF8];
  v19[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  v17[0] = a3;
  v17[1] = a4;
  v17[2] = a5;
  char v18 = a6;
  char v14 = v17;
  a7(v20, v19, a2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  if (!v7)
  {
    uint64_t v15 = v21;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    char v14 = (void *)View.anyView.getter(v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  return v14;
}

uint64_t sub_1B599356C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v7 = LocalStateStore.init()();
  if (*(void *)(v2 + 8)) {
    uint64_t v8 = *(void *)(v2 + 8);
  }
  else {
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B59193A4(v8);
  swift_bridgeObjectRelease();
  uint64_t v21 = MEMORY[0x1E4F3EE00];
  uint64_t v22 = MEMORY[0x1E4F3EDF8];
  v20[0] = a1;
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = (void *)(v9 + 32);
    uint64_t v23 = a1;
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v13 = v11[3];
      uint64_t v12 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v13);
      (*(void (**)(long long *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 16))(v17, v20, a2, v7, v13, v12);
      if (v4)
      {

        uint64_t v18 = 0;
        memset(v17, 0, sizeof(v17));
        sub_1B590CA38((uint64_t)v20, (uint64_t)v19);
        sub_1B5908FC0((uint64_t)v17, &qword_1E9D632F8);
        uint64_t v4 = 0;
      }
      else
      {
        sub_1B5908BE8(v17, (uint64_t)v19);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      sub_1B5908BE8(v19, (uint64_t)v20);
      v11 += 5;
      --v10;
    }
    while (v10);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    uint64_t v14 = v21;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4F3EE00];
  }
  __swift_project_boxed_opaque_existential_1(v20, v14);
  uint64_t v15 = View.anyView.getter(v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v15;
}

uint64_t sub_1B5993780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x1E4F3EE00];
  uint64_t v14 = MEMORY[0x1E4F3EE00];
  uint64_t v15 = MEMORY[0x1E4F3EDF8];
  v13[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  unsigned int v5 = *(unsigned __int8 *)(v2 + 32);
  if (v5 > 0xFD) {
    goto LABEL_4;
  }
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  v16[0] = *(void *)(v2 + 8);
  v16[1] = v6;
  long long v16[2] = v7;
  LOBYTE(v17) = v5;
  sub_1B5965310(v16[0], v6, v7, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(a2);
  char v9 = v8;
  sub_1B599F4C4(v2);
  uint64_t v4 = v14;
  if (v9)
  {
LABEL_4:
    __swift_project_boxed_opaque_existential_1(v13, v4);
    uint64_t v17 = sub_1B5A1A748();
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v16);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v17 = sub_1B5A1A748();
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v16);
  }
  sub_1B5A1B718();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  uint64_t v10 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v11 = View.anyView.getter(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v11;
}

_OWORD *sub_1B59939B4(uint64_t a1, uint64_t a2)
{
  long long v5 = *v2;
  long long v6 = v2[1];
  char v15 = *((unsigned char *)v2 + 32);
  v14[0] = v5;
  v14[1] = v6;
  v11[4] = MEMORY[0x1E4F3EDF8];
  uint64_t v11[3] = MEMORY[0x1E4F3EE00];
  v11[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v7 = LocalStateStore.init()();
  char v8 = v14;
  sub_1B59D37B4(v11, a2, v7, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v3)
  {
    uint64_t v9 = v13;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    char v8 = (_OWORD *)View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v8;
}

uint64_t sub_1B5993AB0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t))
{
  v11[0] = a1;
  uint64_t v11[3] = MEMORY[0x1E4F3EE00];
  v11[4] = MEMORY[0x1E4F3EDF8];
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v8 = LocalStateStore.init()();
  a4(v12, v11, a2, v8, a3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v4)
  {
    uint64_t v9 = v13;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v8 = View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v8;
}

uint64_t sub_1B5993BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B59D7024(v7, a2, v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v3)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v2 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v2;
}

void *sub_1B5993CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  v14[0] = a3;
  v14[1] = a4;
  _OWORD v14[2] = a5;
  char v15 = a6 & 1;
  uint64_t v11[3] = MEMORY[0x1E4F3EE00];
  v11[4] = MEMORY[0x1E4F3EDF8];
  v11[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  uint64_t v8 = v14;
  sub_1B59D8320(v11, a2, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v6)
  {
    uint64_t v9 = v13;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v8 = (void *)View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v8;
}

void *sub_1B5993DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  v14[0] = a3;
  v14[1] = a4;
  _OWORD v14[2] = a5;
  char v15 = a6;
  uint64_t v11[3] = MEMORY[0x1E4F3EE00];
  v11[4] = MEMORY[0x1E4F3EDF8];
  v11[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  uint64_t v8 = v14;
  sub_1B59D8D54(v11, a2, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v6)
  {
    uint64_t v9 = v13;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v8 = (void *)View.anyView.getter(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v8;
}

uint64_t sub_1B5993E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  v15[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  v16[0] = a3;
  v16[1] = a4;
  long long v16[2] = a5;
  LOBYTE(v17) = a6;
  sub_1B5965310(a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(a2);
  LOBYTE(a2) = v11;
  sub_1B596536C(a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  if (a2)
  {
    sub_1B590CA38((uint64_t)v15, (uint64_t)v16);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v15, MEMORY[0x1E4F3EE00]);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E48);
    uint64_t v17 = sub_1B5A1A748();
    sub_1B59095C8(&qword_1E9D64E50, &qword_1E9D64E48);
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v16);
    sub_1B5A1B4C8();
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v12 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v13 = View.anyView.getter(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v13;
}

uint64_t sub_1B59940C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, void *, uint64_t, void))
{
  uint64_t v8 = MEMORY[0x1E4F3EE00];
  void v20[3] = MEMORY[0x1E4F3EE00];
  v20[4] = MEMORY[0x1E4F3EDF8];
  v20[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v9 = LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v20, v8);
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = a3;
  uint64_t v10[3] = a2;
  _OWORD v10[4] = v9;
  uint64_t v11 = sub_1B5A1A748();
  void v19[3] = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  v19[4] = WitnessTable;
  __swift_allocate_boxed_opaque_existential_1(v19);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  a6(a5, v10, v8, MEMORY[0x1E4F3EDF8]);
  swift_release();
  uint64_t v13 = sub_1B59193A4(a3);
  sub_1B59177F0(v13, a2, v9, v11, WitnessTable, v21);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  uint64_t v14 = v22;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  uint64_t v15 = View.anyView.getter(v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v15;
}

uint64_t *sub_1B59942B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a3;
  uint64_t v10[3] = MEMORY[0x1E4F3EE00];
  _OWORD v10[4] = MEMORY[0x1E4F3EDF8];
  v10[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = LocalStateStore.init()();
  unint64_t v6 = sub_1B59A0438();
  uint64_t v7 = &v13;
  (*(void (**)(void *__return_ptr, void *, uint64_t, uint64_t, ValueMetadata *, unint64_t))(v6 + 16))(v11, v10, a2, v5, &type metadata for OnTapModifier, v6);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v3)
  {
    uint64_t v8 = v12;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v7 = (uint64_t *)View.anyView.getter(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return v7;
}

_OWORD *sub_1B59943C0(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(v2 + 112);
  v16[6] = *(_OWORD *)(v2 + 96);
  uint64_t v16[7] = v5;
  char v17 = *(unsigned char *)(v2 + 128);
  long long v6 = *(_OWORD *)(v2 + 48);
  long long v16[2] = *(_OWORD *)(v2 + 32);
  uint64_t v16[3] = v6;
  long long v7 = *(_OWORD *)(v2 + 80);
  v16[4] = *(_OWORD *)(v2 + 64);
  uint64_t v16[5] = v7;
  long long v8 = *(_OWORD *)(v2 + 16);
  v16[0] = *(_OWORD *)v2;
  v16[1] = v8;
  void v13[3] = MEMORY[0x1E4F3EE00];
  v13[4] = MEMORY[0x1E4F3EDF8];
  v13[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v9 = LocalStateStore.init()();
  uint64_t v10 = v16;
  sub_1B59E39A0(v13, a2, v9, v14);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  if (!v3)
  {
    uint64_t v11 = v15;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v10 = (_OWORD *)View.anyView.getter(v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return v10;
}

uint64_t sub_1B59944D8(uint64_t a1, uint64_t a2)
{
  uint64_t v8[3] = MEMORY[0x1E4F3EE00];
  v8[4] = MEMORY[0x1E4F3EDF8];
  v8[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v5 = LocalStateStore.init()();
  sub_1B59E8238(v8, a2, v5, v9);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if (!v3)
  {
    uint64_t v6 = v10;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    uint64_t v2 = View.anyView.getter(v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  return v2;
}

uint64_t sub_1B59945D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  v15[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  v16[0] = a3;
  v16[1] = a4;
  long long v16[2] = a5;
  LOBYTE(v17) = a6;
  sub_1B5965310(a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(a2);
  LOBYTE(a2) = v11;
  sub_1B596536C(a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  if (a2)
  {
    sub_1B590CA38((uint64_t)v15, (uint64_t)v16);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v15, MEMORY[0x1E4F3EE00]);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E38);
    uint64_t v17 = sub_1B5A1A748();
    sub_1B59095C8((unint64_t *)&qword_1E9D64E40, &qword_1E9D64E38);
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v16);
    sub_1B5A1B468();
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v12 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v13 = View.anyView.getter(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v13;
}

_OWORD *sub_1B5994800(uint64_t a1, uint64_t a2)
{
  uint64_t v12[3] = MEMORY[0x1E4F3EE00];
  v12[4] = MEMORY[0x1E4F3EDF8];
  v12[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  long long v5 = v2[3];
  _OWORD v10[2] = v2[2];
  uint64_t v10[3] = v5;
  v11[0] = v2[4];
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v2 + 73);
  long long v6 = v2[1];
  v10[0] = *v2;
  v10[1] = v6;
  long long v7 = v10;
  sub_1B59FD6D0(v12, a2, v13);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (!v3)
  {
    uint64_t v8 = v14;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    long long v7 = (_OWORD *)View.anyView.getter(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return v7;
}

uint64_t sub_1B5994914(uint64_t a1, uint64_t a2)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B5A02F0C(v7, a2, v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v3)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v2 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v2;
}

uint64_t sub_1B5994A08(uint64_t a1, uint64_t a2)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B5A035EC(v7, a2, (uint64_t)v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v3)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v2 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v2;
}

uint64_t sub_1B5994AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x1E4F3EE00];
  uint64_t v10[3] = MEMORY[0x1E4F3EE00];
  _OWORD v10[4] = MEMORY[0x1E4F3EDF8];
  v10[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v10, v4);
  uint64_t v6 = v2[3];
  uint64_t v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  _OWORD v11[6] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v6, v5);
  sub_1B5A1B128();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E08);
  uint64_t v7 = sub_1B5A1A748();
  void v11[3] = v7;
  sub_1B59095C8(&qword_1E9D64E10, &qword_1E9D64E08);
  v11[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v11);
  sub_1B5A1B3A8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  uint64_t v8 = View.anyView.getter(v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v8;
}

uint64_t sub_1B5994CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B5A03FA8(v7, a2, v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v3)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v2 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v2;
}

uint64_t sub_1B5994DD4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  v14[0] = a1;
  uint64_t v5 = MEMORY[0x1E4F3EE00];
  uint64_t v14[3] = MEMORY[0x1E4F3EE00];
  uint64_t v6 = MEMORY[0x1E4F3EDF8];
  v14[4] = MEMORY[0x1E4F3EDF8];
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v14, v5);
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, v7, v8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E18);
  uint64_t v10 = sub_1B5A1A748();
  void v15[3] = v10;
  sub_1B59095C8(&qword_1E9D64E20, &qword_1E9D64E18);
  v15[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v15);
  a3(v9, v5, v6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  uint64_t v11 = View.anyView.getter(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v11;
}

uint64_t sub_1B5994F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B5A05BB8(v7, a2, v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v3)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v2 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v2;
}

uint64_t sub_1B5995090(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = MEMORY[0x1E4F3EE00];
  uint64_t v6 = MEMORY[0x1E4F3EDF8];
  uint64_t v13[3] = MEMORY[0x1E4F3EE00];
  v13[4] = MEMORY[0x1E4F3EDF8];
  v13[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v7 = LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v13, v5);
  uint64_t v8 = v2[3];
  uint64_t v9 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48))(&v12, a2, v7, v8, v9);
  if (v3)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E88);
    uint64_t v10 = sub_1B5A1A748();
    uint64_t v14[3] = v10;
    sub_1B59095C8(&qword_1E9D64E90, &qword_1E9D64E88);
    v14[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_1B590D4D8();
    sub_1B5A1B768();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v6 = View.anyView.getter(v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return v6;
}

uint64_t sub_1B5995290(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = MEMORY[0x1E4F3EE00];
  uint64_t v6 = MEMORY[0x1E4F3EDF8];
  uint64_t v13[3] = MEMORY[0x1E4F3EE00];
  v13[4] = MEMORY[0x1E4F3EDF8];
  v13[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v7 = LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v13, v5);
  uint64_t v8 = v2[3];
  uint64_t v9 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48))(&v12, a2, v7, v8, v9);
  if (v3)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64EB0);
    uint64_t v10 = sub_1B5A1A748();
    uint64_t v14[3] = v10;
    sub_1B59095C8(&qword_1E9D64EB8, &qword_1E9D64EB0);
    v14[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_1B590D4D8();
    sub_1B5A1B458();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v6 = View.anyView.getter(v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return v6;
}

uint64_t sub_1B5995490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  void v15[3] = MEMORY[0x1E4F3EE00];
  v15[4] = MEMORY[0x1E4F3EDF8];
  v15[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v12 = LocalStateStore.init()();
  a6(v16, v15, a2, v12, a3, a4, a5);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  if (!v6)
  {
    uint64_t v13 = v17;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    uint64_t v12 = View.anyView.getter(v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  return v12;
}

uint64_t sub_1B59955A8(uint64_t a1, uint64_t a2)
{
  uint64_t v7[3] = MEMORY[0x1E4F3EE00];
  v7[4] = MEMORY[0x1E4F3EDF8];
  v7[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B59895D0(v7, a2, (uint64_t)v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v3)
  {
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v2 = View.anyView.getter(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return v2;
}

unsigned char *sub_1B59956A0(uint64_t a1, uint64_t a2)
{
  uint64_t v9[3] = MEMORY[0x1E4F3EE00];
  _OWORD v9[4] = MEMORY[0x1E4F3EDF8];
  v9[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  memcpy(v8, v2, sizeof(v8));
  uint64_t v5 = v8;
  sub_1B5A18F58(v9, a2, v10);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  if (!v3)
  {
    uint64_t v6 = v11;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    uint64_t v5 = (unsigned char *)View.anyView.getter(v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  return v5;
}

uint64_t sub_1B59957A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  void v16[3] = MEMORY[0x1E4F3EE00];
  v16[4] = MEMORY[0x1E4F3EDF8];
  int v12 = ~a6;
  v16[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  if (v12)
  {
    sub_1B590D634(a3, a4, a5, a6 & 1);
    sub_1B59B4120(a2, a3, a4, a5, a6 & 1);
    if (v6) {

    }
    sub_1B590F034(a3, a4, a5, a6);
  }
  __swift_project_boxed_opaque_existential_1(v16, MEMORY[0x1E4F3EE00]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64EC0);
  uint64_t v13 = sub_1B5A1A748();
  void v17[3] = v13;
  sub_1B59095C8(&qword_1E9D64EC8, &qword_1E9D64EC0);
  v17[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v17);
  sub_1B5A1B6E8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  uint64_t v14 = View.anyView.getter(v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14;
}

uint64_t ContentModifier.modifyView(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12[3] = MEMORY[0x1E4F3EE00];
  v12[4] = MEMORY[0x1E4F3EDF8];
  v12[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  uint64_t v9 = LocalStateStore.init()();
  (*(void (**)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 16))(v13, v12, a2, v9, a3, a4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (!v5)
  {
    uint64_t v10 = v14;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v4 = View.anyView.getter(v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return v4;
}

uint64_t sub_1B5995ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B599BBF8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5912CCC);
}

void *sub_1B5995B08(uint64_t a1)
{
  return sub_1B598CFB0(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), (void (*)(void *__return_ptr, void *, uint64_t))sub_1B5912CCC);
}

void *sub_1B5995B40(uint64_t a1, uint64_t a2)
{
  return sub_1B5993448(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), (void (*)(void *__return_ptr, void *, uint64_t))sub_1B5912CCC);
}

uint64_t sub_1B5995B78@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63188);
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *))(v8 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_1B5A1BA88();
  uint64_t v18 = v2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63190);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63178);
  uint64_t v11 = sub_1B59095C8((unint64_t *)&qword_1E9D63180, &qword_1E9D63178);
  uint64_t v19 = v10;
  uint64_t v20 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v13 = MEMORY[0x1E4F3EE00];
  uint64_t v14 = MEMORY[0x1E4F3EDF8];
  sub_1B5A1B728();
  uint64_t v19 = v13;
  uint64_t v20 = v9;
  uint64_t v21 = v14;
  uint64_t v22 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v15 = sub_1B5A1BA88();
  uint64_t result = swift_release();
  a2[3] = v13;
  a2[4] = v14;
  *a2 = v15;
  return result;
}

uint64_t ContentModifier.modifyView(_:with:)@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *))(v8 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B5A1BA88();
  uint64_t v9 = (*(uint64_t (**)(void))(a2 + 32))();
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v11 = MEMORY[0x1E4F3EDF8];
    a3[3] = MEMORY[0x1E4F3EE00];
    a3[4] = v11;
    *a3 = v9;
  }
  return result;
}

uint64_t sub_1B5995F10()
{
  return sub_1B599EFE0();
}

uint64_t sub_1B5995F28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)v3;
  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t v8 = *(void *)(v3 + 16);
  char v9 = *(unsigned char *)(v3 + 24);
  uint64_t v11 = *(void *)(v3 + 32);
  uint64_t v10 = *(void *)(v3 + 40);
  uint64_t v14 = *(void *)(v3 + 48);
  char v12 = *(unsigned char *)(v3 + 56);
  sub_1B590D634(v7, v6, v8, v9);
  sub_1B59B4120(a2, v7, v6, v8, v9);
  if (v4)
  {

    sub_1B590D6F0(v7, v6, v8, v9);
    return sub_1B590CA38((uint64_t)a1, (uint64_t)a3);
  }
  else
  {
    sub_1B590D6F0(v7, v6, v8, v9);
    sub_1B590D634(v11, v10, v14, v12);
    sub_1B59B4120(a2, v11, v10, v14, v12);
    sub_1B590D6F0(v11, v10, v14, v12);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    a3[3] = sub_1B5A1A748();
    a3[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1B5A1B778();
  }
}

uint64_t sub_1B5996110(uint64_t a1)
{
  return sub_1B598DB9C(a1);
}

uint64_t sub_1B5996154(uint64_t a1, uint64_t a2)
{
  return sub_1B5990D3C(a1, a2);
}

uint64_t sub_1B5996198@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = sub_1B5A1A748();
  sub_1B59095C8((unint64_t *)&qword_1E9D63268, &qword_1E9D63260);
  a2[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B5A1B408();
}

uint64_t sub_1B5996284(uint64_t a1)
{
  return sub_1B598C644(a1);
}

uint64_t sub_1B599629C(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  v5[3] = MEMORY[0x1E4F3EE00];
  v5[4] = MEMORY[0x1E4F3EDF8];
  v5[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v5, v1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63260);
  uint64_t v2 = sub_1B5A1A748();
  uint64_t v6[3] = v2;
  sub_1B59095C8((unint64_t *)&qword_1E9D63268, &qword_1E9D63260);
  v6[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v6);
  sub_1B5A1B408();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  uint64_t v3 = View.anyView.getter(v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3;
}

uint64_t sub_1B599640C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *))(v6 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1B5A1BA88();
  uint64_t v8 = sub_1B5990024(v7);
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v10 = MEMORY[0x1E4F3EDF8];
    a2[3] = MEMORY[0x1E4F3EE00];
    a2[4] = v10;
    *a2 = v8;
  }
  return result;
}

uint64_t sub_1B5996524(uint64_t a1)
{
  return sub_1B5990024(a1);
}

uint64_t sub_1B599653C(uint64_t a1, uint64_t a2)
{
  return sub_1B5990F98(a1, a2);
}

uint64_t sub_1B5996554()
{
  return sub_1B5A1A948();
}

uint64_t sub_1B5996578(uint64_t a1)
{
  return sub_1B598FD08(a1);
}

uint64_t sub_1B599659C(uint64_t a1)
{
  return sub_1B599F1F0(a1);
}

uint64_t sub_1B59965C0(uint64_t a1)
{
  return sub_1B599EEE0(a1);
}

uint64_t sub_1B59965D8(uint64_t a1)
{
  return sub_1B599F3F4(a1);
}

uint64_t sub_1B59965F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContentModifier.modifyView(_:)(a1, a2, a3);
}

uint64_t sub_1B5996608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ContentModifier.modifyView(_:with:)(a1, a2, a3, a4);
}

void sub_1B5996620(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1B5996660(uint64_t a1)
{
  return sub_1B598999C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), MEMORY[0x1E4F3E8F0], MEMORY[0x1E4F3E8E8]);
}

uint64_t sub_1B59966AC(uint64_t a1, uint64_t a2)
{
  return sub_1B599317C(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), MEMORY[0x1E4F3E8F0], MEMORY[0x1E4F3E8E8]);
}

uint64_t sub_1B59966F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      uint64_t v14 = (void *)swift_allocObject();
      _OWORD v14[2] = 0;
      uint64_t v14[3] = 0;
      v14[4] = a1;
      uint64_t v14[5] = a2;
      uint64_t v14[6] = a3;
      uint64_t v15 = (void *)swift_allocObject();
      v15[2] = 0;
      void v15[3] = 0;
      v15[4] = a1;
      void v15[5] = a2;
      v15[6] = a3;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1B590D634(a2, a3, a4, 1);
      sub_1B590968C(a4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
      sub_1B5A1BAB8();
      sub_1B5A1BAE8();
      if (v20)
      {
        swift_bridgeObjectRelease();
        sub_1B599A258(v19, v20, v21, a1, a4);
        if (!v5)
        {
          sub_1B5A1BAE8();
          uint64_t v6 = v19;
          sub_1B5905298(a4);
          sub_1B599F540(v19, v20);
          sub_1B5905298(a4);
          return v6;
        }
        sub_1B5905298(a4);
        sub_1B599F540(v19, v20);
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v17 = a2;
        *(void *)(v17 + 8) = a3;
        *(void *)(v17 + 16) = MEMORY[0x1E4FBB390];
        *(unsigned char *)(v17 + 32) = 0;
        swift_willThrow();
        sub_1B5905298(a4);
      }
      sub_1B5905298(a4);
      return v6;
    }
    uint64_t v11 = (void *)swift_allocObject();
    _OWORD v11[2] = 0;
    void v11[3] = 0;
    v11[4] = a1;
    void v11[5] = a2;
    _OWORD v11[6] = a3;
    char v12 = (void *)swift_allocObject();
    _OWORD v12[2] = 0;
    uint64_t v12[3] = 0;
    v12[4] = a1;
    void v12[5] = a2;
    v12[6] = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1B590D634(a2, a3, a4, 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E58);
    sub_1B5A1BAB8();
    uint64_t v13 = MEMORY[0x1E4FBB390];
    sub_1B5A1BAE8();
    if (v20)
    {
      uint64_t v6 = v19;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v16 = a2;
      *(void *)(v16 + 8) = a3;
      *(void *)(v16 + 16) = v13;
      *(unsigned char *)(v16 + 32) = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_1B5A1BAC8();
    return v22;
  }
  return v6;
}

uint64_t sub_1B5996AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  if ((a5 & 1) == 0) {
    return sub_1B5A1BAC8();
  }
  if ((~a4 & 0xF000000000000007) != 0)
  {
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = 0;
    void v15[3] = 0;
    v15[4] = a1;
    void v15[5] = a2;
    v15[6] = a3;
    uint64_t v16 = (void *)swift_allocObject();
    long long v16[2] = 0;
    void v16[3] = 0;
    v16[4] = a1;
    void v16[5] = a2;
    v16[6] = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1B5909638(a2, a3, a4, 1);
    sub_1B590968C(a4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
    sub_1B5A1BAB8();
    sub_1B5A1BAE8();
    if (v20)
    {
      swift_bridgeObjectRelease();
      sub_1B599AB94(v19, v20, v21, a1, a4);
      if (!v6)
      {
        sub_1B5A1BAE8();
        sub_1B5905298(a4);
        sub_1B599F540(v19, v20);
        uint64_t result = sub_1B5905298(a4);
        *a6 = v19;
        a6[1] = v20;
        a6[2] = v21;
        return result;
      }
      sub_1B5905298(a4);
      sub_1B599F540(v19, v20);
    }
    else
    {
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v18 = a2;
      *(void *)(v18 + 8) = a3;
      *(void *)(v18 + 16) = &type metadata for DecodableState;
      *(unsigned char *)(v18 + 32) = 0;
      swift_willThrow();
      sub_1B5905298(a4);
    }
    return sub_1B5905298(a4);
  }
  else
  {
    uint64_t v13 = (void *)swift_allocObject();
    _OWORD v13[2] = 0;
    void v13[3] = 0;
    v13[4] = a1;
    void v13[5] = a2;
    v13[6] = a3;
    uint64_t v14 = (void *)swift_allocObject();
    _OWORD v14[2] = 0;
    uint64_t v14[3] = 0;
    v14[4] = a1;
    uint64_t v14[5] = a2;
    uint64_t v14[6] = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1B5909638(a2, a3, a4, 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
    sub_1B5A1BAB8();
    sub_1B5A1BAE8();
    if (v20)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *a6 = v19;
      a6[1] = v20;
      a6[2] = v21;
    }
    else
    {
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v17 = a2;
      *(void *)(v17 + 8) = a3;
      *(void *)(v17 + 16) = &type metadata for DecodableState;
      *(unsigned char *)(v17 + 32) = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1B5996EE4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B594B598(a1, a2, a3);
}

_OWORD *sub_1B5996F40(uint64_t a1)
{
  return sub_1B5990140(a1);
}

_OWORD *sub_1B5996F9C(uint64_t a1, uint64_t a2)
{
  return sub_1B5991090(a1, a2);
}

void sub_1B5996FF8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1B5997038(uint64_t a1)
{
  return sub_1B5990288(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), MEMORY[0x1E4F3E930], MEMORY[0x1E4F3E920]);
}

uint64_t sub_1B5997084(uint64_t a1, uint64_t a2)
{
  return sub_1B59911B4(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), MEMORY[0x1E4F3E930], MEMORY[0x1E4F3E920]);
}

void sub_1B59970D0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1B5997110(uint64_t a1)
{
  return sub_1B5990288(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), MEMORY[0x1E4F3E9C0], MEMORY[0x1E4F3E9B8]);
}

uint64_t sub_1B599715C(uint64_t a1, uint64_t a2)
{
  return sub_1B59911B4(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), MEMORY[0x1E4F3E9C0], MEMORY[0x1E4F3E9B8]);
}

void sub_1B59971A8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

void sub_1B59971E8(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, uint64_t)@<X6>, uint64_t *a4@<X8>)
{
  int v9 = *(unsigned __int8 *)(v4 + 24);
  if (v9 == 255)
  {
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    a4[3] = swift_getOpaqueTypeMetadata2();
    a4[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(a4);
    a3(1, v17, v18);
  }
  else
  {
    uint64_t v11 = *(void *)(v4 + 8);
    uint64_t v12 = *(void *)(v4 + 16);
    uint64_t v13 = *(void *)v4;
    sub_1B590D634(v13, v11, v12, v9 & 1);
    char v14 = sub_1B59B4120(a2, v13, v11, v12, v9 & 1);
    sub_1B590F034(v13, v11, v12, v9);
    if (!v5)
    {
      uint64_t v15 = a1[3];
      uint64_t v16 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v15);
      a4[3] = swift_getOpaqueTypeMetadata2();
      a4[4] = swift_getOpaqueTypeConformance2();
      __swift_allocate_boxed_opaque_existential_1(a4);
      a3(v14 & 1, v15, v16);
    }
  }
}

uint64_t sub_1B59973A0(uint64_t a1)
{
  return sub_1B5990288(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), MEMORY[0x1E4F3E370], MEMORY[0x1E4F3E368]);
}

uint64_t sub_1B59973EC(uint64_t a1, uint64_t a2)
{
  return sub_1B59911B4(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), MEMORY[0x1E4F3E370], MEMORY[0x1E4F3E368]);
}

uint64_t sub_1B5997438(uint64_t a1)
{
  return sub_1B599ED78(a1);
}

uint64_t sub_1B5997450(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  uint64_t v2 = MEMORY[0x1E4F3EDF8];
  uint64_t v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v6, v1);
  v7[0] = v1;
  v7[1] = v2;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v7[3] = OpaqueTypeMetadata2;
  v7[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v7);
  sub_1B5A1B508();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  uint64_t v4 = View.anyView.getter(OpaqueTypeMetadata2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v4;
}

void sub_1B5997588(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1B59975C8(uint64_t a1)
{
  return sub_1B598EB28(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), MEMORY[0x1E4F3E9F8], MEMORY[0x1E4F3E9F0]);
}

uint64_t sub_1B5997614(uint64_t a1, uint64_t a2)
{
  return sub_1B5991410(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), MEMORY[0x1E4F3E9F8], MEMORY[0x1E4F3E9F0]);
}

void sub_1B5997660(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1B59976A0(uint64_t a1)
{
  return sub_1B598EB28(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), MEMORY[0x1E4F3EA70], MEMORY[0x1E4F3EA68]);
}

uint64_t sub_1B59976EC(uint64_t a1, uint64_t a2)
{
  return sub_1B5991410(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), MEMORY[0x1E4F3EA70], MEMORY[0x1E4F3EA68]);
}

void sub_1B5997738(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

void sub_1B5997778(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, double)@<X6>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *(void *)v4;
  uint64_t v10 = *(void *)(v4 + 8);
  uint64_t v11 = *(void *)(v4 + 16);
  char v12 = *(unsigned char *)(v4 + 24);
  sub_1B590D634(v9, v10, v11, v12);
  double v13 = sub_1B59B4324(a2, v9, v10, v11, v12);
  sub_1B590D6F0(v9, v10, v11, v12);
  if (!v5)
  {
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v14);
    a4[3] = swift_getOpaqueTypeMetadata2();
    a4[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(a4);
    a3(v14, v15, v13);
  }
}

uint64_t sub_1B59978AC(uint64_t a1)
{
  return sub_1B598EB28(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), MEMORY[0x1E4F3E510], MEMORY[0x1E4F3E508]);
}

uint64_t sub_1B59978F8(uint64_t a1, uint64_t a2)
{
  return sub_1B5991410(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), MEMORY[0x1E4F3E510], MEMORY[0x1E4F3E508]);
}

_OWORD *sub_1B5997944(uint64_t a1)
{
  return sub_1B598D8B8(a1);
}

_OWORD *sub_1B59979A0(uint64_t a1, uint64_t a2)
{
  return sub_1B59915E8(a1, a2);
}

uint64_t sub_1B59979FC(uint64_t a1)
{
  return sub_1B598E4DC(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1B5997A20(uint64_t a1, uint64_t a2)
{
  return sub_1B5991708(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B5997A44@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)v3;
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v8 = *(void *)(v3 + 16);
  unsigned int v9 = *(unsigned __int8 *)(v3 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v9 <= 0xFD)
  {
    sub_1B5965310(v6, v7, v8, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
    sub_1B5963948(a2);
    sub_1B59325C0(v6, v7, v8, v9);
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64418);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8((unint64_t *)&qword_1E9D64420, &qword_1E9D64418);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B798();
}

uint64_t sub_1B5997BB4(uint64_t a1)
{
  return sub_1B598D688(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1B5997BD8(uint64_t a1, uint64_t a2)
{
  return sub_1B59918FC(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

void sub_1B5997BFC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

_OWORD *sub_1B5997C50(uint64_t a1)
{
  return sub_1B598C3E8(a1);
}

_OWORD *sub_1B5997CA4(uint64_t a1, uint64_t a2)
{
  return sub_1B5991B08(a1, a2);
}

uint64_t sub_1B5997CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B599BBF8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5960488);
}

void *sub_1B5997D24(uint64_t a1)
{
  return sub_1B598CFB0(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), (void (*)(void *__return_ptr, void *, uint64_t))sub_1B5960488);
}

void *sub_1B5997D5C(uint64_t a1, uint64_t a2)
{
  return sub_1B5993448(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), (void (*)(void *__return_ptr, void *, uint64_t))sub_1B5960488);
}

uint64_t sub_1B5997D94@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59663B0(a1, a2, a3);
}

_OWORD *sub_1B5997DF8(uint64_t a1)
{
  return sub_1B598B758(a1);
}

_OWORD *sub_1B5997E3C(uint64_t a1, uint64_t a2)
{
  return sub_1B5991C24(a1, a2);
}

uint64_t sub_1B5997E80@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B596812C(a1, a2, a3);
}

_OWORD *sub_1B5997EFC(uint64_t a1)
{
  return sub_1B598CC88(a1);
}

_OWORD *sub_1B5997F48(uint64_t a1, uint64_t a2)
{
  return sub_1B5991D30(a1, a2);
}

uint64_t sub_1B5997F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B59990D0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))sub_1B596A4E0, a7, a8);
}

_OWORD *sub_1B5997FC0(uint64_t a1)
{
  return sub_1B598F654(a1, (void (*)(void *__return_ptr, void *, uint64_t))sub_1B596A4E0);
}

_OWORD *sub_1B5998018(uint64_t a1, uint64_t a2)
{
  return sub_1B59921C0(a1, a2, (void (*)(void *__return_ptr, void *, uint64_t))sub_1B596A4E0);
}

uint64_t sub_1B5998070@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  int v10 = *v2;
  unsigned int v9 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(a1, v5);
  sub_1B5A1AAC8();
  sub_1B59A04A4(&qword_1E9D64A20, MEMORY[0x1E4F3D430]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1A8E8();
  sub_1B59A04A4(&qword_1E9D64A18, MEMORY[0x1E4F3CEB0]);
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  sub_1B5A1A9F8();
  sub_1B59A04A4(&qword_1E9D64A10, MEMORY[0x1E4F3D378]);
  swift_getOpaqueTypeMetadata2();
  a2[3] = sub_1B5A1AE68();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  swift_getOpaqueTypeConformance2();
  a2[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B5977AE0(v9, v10, v5, v4, (uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B5998308(uint64_t a1)
{
  return sub_1B598C0B4(a1, *v1);
}

uint64_t sub_1B5998324(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4F3EE00];
  int v16 = *v1;
  uint64_t v3 = MEMORY[0x1E4F3EDF8];
  void v17[3] = MEMORY[0x1E4F3EE00];
  v17[4] = MEMORY[0x1E4F3EDF8];
  v17[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  uint64_t v15 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(v17, v2);
  uint64_t v14 = sub_1B5A1AAC8();
  uint64_t v13 = sub_1B59A04A4(&qword_1E9D64A20, MEMORY[0x1E4F3D430]);
  uint64_t v18 = v2;
  uint64_t v19 = v14;
  uint64_t v20 = v3;
  uint64_t v21 = v13;
  swift_getOpaqueTypeMetadata2();
  uint64_t v12 = sub_1B5A1A8E8();
  uint64_t v4 = sub_1B59A04A4(&qword_1E9D64A18, MEMORY[0x1E4F3CEB0]);
  uint64_t v18 = v2;
  uint64_t v19 = v12;
  uint64_t v20 = v3;
  uint64_t v21 = v4;
  swift_getOpaqueTypeMetadata2();
  sub_1B5A1AE68();
  uint64_t v5 = sub_1B5A1A9F8();
  uint64_t v6 = sub_1B59A04A4(&qword_1E9D64A10, MEMORY[0x1E4F3D378]);
  uint64_t v18 = v2;
  uint64_t v19 = v5;
  uint64_t v20 = v3;
  uint64_t v21 = v6;
  swift_getOpaqueTypeMetadata2();
  uint64_t v7 = sub_1B5A1AE68();
  uint64_t v21 = v7;
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v8 = MEMORY[0x1E4F3EDF8];
  swift_getOpaqueTypeConformance2();
  uint64_t WitnessTable = swift_getWitnessTable();
  unsigned int v9 = __swift_allocate_boxed_opaque_existential_1(&v18);
  sub_1B5977AE0(v15, v16, v2, v8, (uint64_t)v9);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  uint64_t v10 = View.anyView.getter(v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  return v10;
}

uint64_t sub_1B5998634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t *a7@<X8>)
{
  sub_1B590CA38(a1, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E78);
  if (swift_dynamicCast())
  {
    sub_1B5908BE8(v24, (uint64_t)v29);
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    sub_1B590D634(a3, a4, a5, a6 & 1);
    sub_1B59B4324(a2, a3, a4, a5, a6 & 1);
    if (v7) {

    }
    sub_1B590D6F0(a3, a4, a5, a6 & 1);
    uint64_t v27 = sub_1B5A1A5D8();
    uint64_t WitnessTable = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(v26);
    sub_1B5A1B9F8();
    uint64_t v20 = v27;
    uint64_t v21 = WitnessTable;
    uint64_t v22 = __swift_project_boxed_opaque_existential_1(v26, v27);
    a7[3] = v20;
    a7[4] = *(void *)(v21 + 16);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a7);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(boxed_opaque_existential_1, v22, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  else
  {
    uint64_t v25 = 0;
    memset(v24, 0, sizeof(v24));
    sub_1B5908FC0((uint64_t)v24, &qword_1E9D64E80);
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1B5A1A328();
    __swift_project_value_buffer(v15, (uint64_t)qword_1E9D910D0);
    int v16 = sub_1B5A1A308();
    os_log_type_t v17 = sub_1B5A1C258();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1B58FD000, v16, v17, "Shape modifier applied to non-shape view", v18, 2u);
      MEMORY[0x1BA9A4780](v18, -1, -1);
    }

    return sub_1B590CA38(a1, (uint64_t)a7);
  }
}

uint64_t sub_1B5998908@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599C7B8(a1, (uint64_t (*)(void))sub_1B598F2E4, a2);
}

uint64_t sub_1B5998934(uint64_t a1)
{
  return sub_1B598F2E4(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1B5998958(uint64_t a1, uint64_t a2)
{
  return sub_1B5991E44(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B599897C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v10 = *(void *)(v2 + 8);
  uint64_t v4 = a1[4];
  char v8 = *(unsigned char *)v2;
  int v9 = *(unsigned __int8 *)(v2 + 16);
  uint64_t v7 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64B78);
  sub_1B5A1A748();
  sub_1B5A1AE68();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63440);
  sub_1B5A1AE68();
  sub_1B5A1AE68();
  a2[3] = sub_1B5A1AE68();
  sub_1B59095C8((unint64_t *)&qword_1E9D64B80, &qword_1E9D64B78);
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
  swift_getWitnessTable();
  swift_getWitnessTable();
  a2[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B597DA9C(v7, v10, v9, v8, v4, (uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1B5998B7C(uint64_t a1)
{
  return sub_1B598ABD8(a1, *(unsigned char *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_1B5998BA0(uint64_t a1)
{
  uint64_t v10 = *(void *)(v1 + 8);
  int v9 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v2 = MEMORY[0x1E4F3EE00];
  char v8 = *(unsigned char *)v1;
  void v11[3] = MEMORY[0x1E4F3EE00];
  v11[4] = MEMORY[0x1E4F3EDF8];
  v11[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  uint64_t v3 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(v11, v2);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64B78);
  sub_1B5A1A748();
  sub_1B5A1AE68();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63440);
  sub_1B5A1AE68();
  sub_1B5A1AE68();
  uint64_t v4 = sub_1B5A1AE68();
  uint64_t v12[3] = v4;
  sub_1B59095C8((unint64_t *)&qword_1E9D64B80, &qword_1E9D64B78);
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
  swift_getWitnessTable();
  swift_getWitnessTable();
  v12[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  sub_1B597DA9C(v3, v10, v9, v8, MEMORY[0x1E4F3EDF8], (uint64_t)boxed_opaque_existential_1);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  uint64_t v6 = View.anyView.getter(v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v6;
}

uint64_t sub_1B5998E24@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  long long v6 = v3[5];
  _OWORD v10[4] = v3[4];
  void v10[5] = v6;
  v11[0] = v3[6];
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v3 + 105);
  long long v7 = v3[1];
  v10[0] = *v3;
  v10[1] = v7;
  long long v8 = v3[3];
  _OWORD v10[2] = v3[2];
  uint64_t v10[3] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59A04EC((uint64_t)v10, (uint64_t)sub_1B590D634, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5965310);
  sub_1B5980378(a2);
  sub_1B59A04EC((uint64_t)v10, (uint64_t)sub_1B590D6F0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B596536C);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64BF8);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64C00, &qword_1E9D64BF8);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B488();
}

uint64_t sub_1B5998FFC(uint64_t a1)
{
  return sub_1B598B9A0(a1);
}

uint64_t sub_1B5999050(uint64_t a1, uint64_t a2)
{
  return sub_1B5991F5C(a1, a2);
}

uint64_t sub_1B59990A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B59990D0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))sub_1B5980D0C, a7, a8);
}

uint64_t sub_1B59990D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  return a6(a1, a2, a3, a4, a5, a6, a7, a8);
}

_OWORD *sub_1B5999130(uint64_t a1)
{
  return sub_1B598F654(a1, (void (*)(void *__return_ptr, void *, uint64_t))sub_1B5980D0C);
}

_OWORD *sub_1B5999188(uint64_t a1, uint64_t a2)
{
  return sub_1B59921C0(a1, a2, (void (*)(void *__return_ptr, void *, uint64_t))sub_1B5980D0C);
}

uint64_t sub_1B59991E0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5981384(a1, a2, a3);
}

_OWORD *sub_1B599923C(uint64_t a1)
{
  return sub_1B598D558(a1);
}

_OWORD *sub_1B5999280(uint64_t a1, uint64_t a2)
{
  return sub_1B59922D8(a1, a2);
}

uint64_t sub_1B59992C4(uint64_t a1)
{
  return sub_1B598AAC0(a1);
}

uint64_t sub_1B59992DC(uint64_t a1)
{
  return sub_1B59923E4(a1);
}

uint64_t sub_1B59992F4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)v3;
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v8 = *(void *)(v3 + 16);
  char v9 = *(unsigned char *)(v3 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5965310(v6, v7, v8, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(a2);
  sub_1B596536C(v6, v7, v8, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64C18);
  sub_1B5A1A748();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64C20);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64C28, &qword_1E9D64C18);
  swift_getWitnessTable();
  sub_1B59095C8(&qword_1E9D64C30, &qword_1E9D64C20);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B568();
}

uint64_t sub_1B59994E4(uint64_t a1)
{
  return sub_1B598A70C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1B5999508(uint64_t a1, uint64_t a2)
{
  return sub_1B59924D8(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B599952C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599C97C(a1, (uint64_t (*)(void))sub_1B5989B98, a2);
}

uint64_t sub_1B5999558(uint64_t a1)
{
  return sub_1B5989B98(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1B599957C(uint64_t a1, uint64_t a2)
{
  return sub_1B5992750(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B59995A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *))(v6 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1B5A1BA88();
  uint64_t v8 = sub_1B598D324(v7);
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v10 = MEMORY[0x1E4F3EDF8];
    a2[3] = MEMORY[0x1E4F3EE00];
    a2[4] = v10;
    *a2 = v8;
  }
  return result;
}

uint64_t sub_1B59996B8(uint64_t a1)
{
  return sub_1B598D324(a1);
}

uint64_t sub_1B59996D0(uint64_t a1, void *a2)
{
  return sub_1B5992970(a1, a2);
}

uint64_t sub_1B59996E8(uint64_t a1)
{
  return sub_1B598F420(a1);
}

uint64_t sub_1B5999700(uint64_t a1, uint64_t a2)
{
  return sub_1B5992A68(a1, a2);
}

uint64_t sub_1B5999718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ContentModifier.modifyView(_:with:localStore:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1B5999730@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  return ContentModifier.modifyView(_:with:)(a1, a2, a3);
}

uint64_t AnyViewModifier.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B5999A0C(a1, 0xD00000000000001ALL, 0x80000001B5A330C0, (uint64_t (*)(uint64_t, uint64_t, void))sub_1B59DC3A4, (void (*)(long long *, _OWORD *))sub_1B5908BE8, a2);
}

uint64_t AnyViewModifier.modifyView(_:with:localStore:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, a3, v7, v8);
}

uint64_t sub_1B5999860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, a3, v7, v8);
}

uint64_t sub_1B59998EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599E4EC(a1, (uint64_t (*)(void))sub_1B598EF5C, a2);
}

uint64_t sub_1B5999918(uint64_t a1)
{
  return sub_1B598EF5C(a1);
}

uint64_t sub_1B5999930(uint64_t a1, uint64_t a2)
{
  return sub_1B5992B5C(a1, a2);
}

uint64_t sub_1B5999948@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return AnyViewModifier.init(from:)(a1, a2);
}

uint64_t AnyImageModifierBox.imageModifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B590CA38(v1, a1);
}

uint64_t AnyImageModifierBox.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B5999A0C(a1, 0xD00000000000001BLL, 0x80000001B5A330E0, (uint64_t (*)(uint64_t, uint64_t, void))sub_1B59DC5EC, (void (*)(long long *, _OWORD *))sub_1B5908BE8, a2);
}

uint64_t sub_1B5999A0C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void)@<X3>, void (*a5)(long long *, _OWORD *)@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v38 = a5;
  uint64_t v42 = a4;
  uint64_t v41 = a3;
  uint64_t v40 = a2;
  char v39 = a6;
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F00);
  uint64_t v43 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  char v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B5A1C4E8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = sub_1B5A1C828();
  if (qword_1E9D62B28 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v10, (uint64_t)qword_1E9D910E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v10);
  if (*(void *)(v14 + 16) && (unint64_t v16 = sub_1B59049D0((uint64_t)v13), (v17 & 1) != 0))
  {
    sub_1B59052CC(*(void *)(v14 + 56) + 32 * v16, (uint64_t)&v50);
  }
  else
  {
    long long v50 = 0u;
    long long v51 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (!*((void *)&v51 + 1))
  {
    sub_1B5908FC0((uint64_t)&v50, &qword_1E9D62BC8);
    goto LABEL_12;
  }
  type metadata accessor for ContentRegistry();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    type metadata accessor for ContentRegistryError();
    sub_1B59A04A4(&qword_1E9D62F08, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v18 = v49;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v19 = sub_1B590C798();
  sub_1B5A1C838();
  if (v6)
  {
  }
  else
  {
    uint64_t v21 = v44;
    uint64_t v22 = sub_1B5A1C5E8();
    if (*(void *)(v22 + 16))
    {
      uint64_t v23 = *(void *)(v22 + 40);
      uint64_t v37 = *(void *)(v22 + 32);
      uint64_t v41 = *(void *)(v22 + 48);
      LODWORD(v40) = *(unsigned __int8 *)(v22 + 56);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_1B5A1C578();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F18);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
      *(void *)(inited + 56) = &type metadata for DynamicKey;
      *(void *)(inited + 64) = v19;
      uint64_t v26 = swift_allocObject();
      *(void *)(inited + 32) = v26;
      uint64_t v27 = v37;
      *(void *)(v26 + 16) = v37;
      *(void *)(v26 + 24) = v23;
      *(void *)(v26 + 32) = v41;
      *(unsigned char *)(v26 + 40) = v40;
      *(void *)&long long v50 = v24;
      swift_bridgeObjectRetain();
      sub_1B590C844(inited);
      uint64_t v28 = v27;
      uint64_t v29 = v27;
      uint64_t v30 = v23;
      uint64_t v31 = v42(v28, v23, v50);
      uint64_t v36 = v32;
      uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, void))v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v45 = v29;
      uint64_t v46 = v30;
      uint64_t v47 = v41;
      char v48 = v40;
      uint64_t v33 = v44;
      sub_1B5A1C588();
      swift_bridgeObjectRelease();
      *((void *)&v51 + 1) = v31;
      uint64_t v52 = v36;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v50);
      sub_1B5A1C1C8();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v33);

      v38(&v50, v53);
      long long v34 = v53[1];
      double v35 = v39;
      *char v39 = v53[0];
      v35[1] = v34;
      *((void *)v35 + 4) = v54;
    }
    else
    {
      swift_bridgeObjectRelease();
      type metadata accessor for DynamicKeyError();
      sub_1B59A04A4(&qword_1E9D62F40, (void (*)(uint64_t))type metadata accessor for DynamicKeyError);
      swift_allocError();
      sub_1B5A1C578();
      sub_1B5A1C3C8();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v21);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B599A128@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return AnyImageModifierBox.init(from:)(a1, a2);
}

uint64_t Image.applyModifiers(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (void *)(a1 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v5);
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v8 = swift_retain();
      a2 = v7(v8, v5, v6);
      swift_release_n();
      v4 += 5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  return a2;
}

uint64_t sub_1B599A210@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59A14BC(a1, a2, a3);
}

uint64_t sub_1B599A228(uint64_t a1)
{
  return sub_1B598A0D0(a1);
}

uint64_t sub_1B599A240(uint64_t a1, uint64_t a2)
{
  return sub_1B5992C84(a1, a2);
}

uint64_t sub_1B599A258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    uint64_t v18 = *(void *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    char v20 = *(unsigned char *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v21 = *(void *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    uint64_t v54 = *(void *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v55 = *(void *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    sub_1B5965310(v18, v54, v55, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
    sub_1B590968C(v21);
    uint64_t v51 = a4;
    sub_1B5963948(a4);
    if (v23)
    {
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1B5A1A328();
      __swift_project_value_buffer(v31, (uint64_t)qword_1E9D910D0);
      uint64_t v32 = sub_1B5A1A308();
      os_log_type_t v33 = sub_1B5A1C258();
      if (os_log_type_enabled(v32, v33))
      {
        char v34 = v20;
        double v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v35 = 0;
        _os_log_impl(&dword_1B58FD000, v32, v33, "SubReference to find binding, unable to resolve index", v35, 2u);
        uint64_t v36 = v35;
        char v20 = v34;
        MEMORY[0x1BA9A4780](v36, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v37 = 2;
      *(void *)(v37 + 8) = 0;
      *(void *)(v37 + 16) = 0;
      *(void *)(v37 + 24) = 0;
      *(unsigned char *)(v37 + 32) = 5;
      swift_willThrow();
      sub_1B5905298(v21);
      uint64_t v38 = v18;
      uint64_t v39 = v54;
      uint64_t v40 = v55;
      char v41 = v20;
    }
    else
    {
      uint64_t v24 = v22;
      if ((~v21 & 0xF000000000000007) == 0)
      {
        uint64_t v25 = (void *)swift_allocObject();
        _OWORD v25[2] = 0;
        v25[3] = 0;
        v25[4] = a1;
        v25[5] = a2;
        v25[6] = a3;
        v25[7] = v24;
        uint64_t v26 = (void *)swift_allocObject();
        _OWORD v26[2] = 0;
        uint64_t v26[3] = 0;
        v26[4] = a1;
        void v26[5] = a2;
        v26[6] = a3;
        v26[7] = v24;
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E58);
        sub_1B5A1BAB8();
        sub_1B596536C(v18, v54, v55, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
        return v56;
      }
      uint64_t v44 = (void *)swift_allocObject();
      v44[2] = 0;
      v44[3] = 0;
      v44[4] = a1;
      v44[5] = a2;
      v44[6] = a3;
      v44[7] = v24;
      uint64_t v45 = (void *)swift_allocObject();
      v45[2] = 0;
      v45[3] = 0;
      v45[4] = a1;
      v45[5] = a2;
      v45[6] = a3;
      v45[7] = v24;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B590968C(v21);
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
      sub_1B5A1BAB8();
      sub_1B5A1BAE8();
      if (v54)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v46 = sub_1B599A258(v18, v54, v55, v51, v21);
        if (!v57)
        {
          uint64_t v50 = v46;
          sub_1B5905298(v21);
          sub_1B599F540(v18, v54);
          sub_1B596536C(v18, v54, v55, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
          sub_1B599F540(v18, v54);
          sub_1B5905298(v21);
          return v50;
        }
        sub_1B5905298(v21);
        sub_1B599F540(v18, v54);
        sub_1B596536C(v18, v54, v55, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
        sub_1B599F540(v18, v54);
        return sub_1B5905298(v21);
      }
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v48 = 1;
      *(void *)(v48 + 8) = 0;
      *(void *)(v48 + 16) = 0;
      *(void *)(v48 + 24) = 0;
      *(unsigned char *)(v48 + 32) = 5;
      swift_willThrow();
      sub_1B5905298(v21);
      sub_1B5905298(v21);
      uint64_t v38 = v18;
      uint64_t v39 = 0;
      uint64_t v40 = v55;
      char v41 = v20;
    }
    return sub_1B596536C(v38, v39, v40, v41, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  }
  uint64_t v11 = *(void *)(a5 + 16);
  uint64_t v10 = *(void *)(a5 + 24);
  uint64_t v12 = *(void *)(a5 + 32);
  unsigned __int8 v13 = *(unsigned char *)(a5 + 40);
  uint64_t v14 = *(void *)(a5 + 48);
  sub_1B5904B60(v11, v10, v12, v13);
  uint64_t v53 = v14;
  sub_1B590968C(v14);
  unint64_t v15 = StringResolvable.resolved(with:)(a4);
  if (v57)
  {
    sub_1B5905298(v14);
    return sub_1B5904A88(v11, v10, v12, v13);
  }
  unint64_t v27 = v15;
  uint64_t v28 = v16;
  if ((~v53 & 0xF000000000000007) == 0)
  {
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    void v29[4] = a1;
    v29[5] = a2;
    v29[6] = a3;
    v29[7] = v27;
    v29[8] = v28;
    uint64_t v30 = (void *)swift_allocObject();
    v30[2] = 0;
    v30[3] = 0;
    v30[4] = a1;
    v30[5] = a2;
    v30[6] = a3;
    v30[7] = v27;
    v30[8] = v28;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E58);
    sub_1B5A1BAB8();
    sub_1B5904A88(v11, v10, v12, v13);
    return v56;
  }
  uint64_t v42 = (void *)swift_allocObject();
  v42[2] = 0;
  v42[3] = 0;
  v42[4] = a1;
  v42[5] = a2;
  v42[6] = a3;
  v42[7] = v27;
  v42[8] = v28;
  uint64_t v43 = (void *)swift_allocObject();
  _OWORD v43[2] = 0;
  v43[3] = 0;
  v43[4] = a1;
  v43[5] = a2;
  v43[6] = a3;
  v43[7] = v27;
  v43[8] = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B590968C(v53);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
  sub_1B5A1BAB8();
  sub_1B5A1BAE8();
  if (v10)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v49 = sub_1B599A258(v11, v10, v12, a4, v53);
    sub_1B5905298(v53);
    sub_1B599F540(v11, v10);
    sub_1B5904A88(v11, v10, v12, v13);
    sub_1B599F540(v11, v10);
    sub_1B5905298(v53);
    return v49;
  }
  sub_1B59619AC();
  swift_allocError();
  *(void *)uint64_t v47 = 1;
  *(void *)(v47 + 8) = 0;
  *(void *)(v47 + 16) = 0;
  *(void *)(v47 + 24) = 0;
  *(unsigned char *)(v47 + 32) = 5;
  swift_willThrow();
  sub_1B5905298(v53);
  sub_1B5905298(v53);
  return sub_1B5904A88(v11, 0, v12, v13);
}

uint64_t sub_1B599AB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    uint64_t v21 = *(void *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v23 = *(void *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    uint64_t v50 = *(void *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v51 = *(void *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    char v53 = *(unsigned char *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    sub_1B5965310(v21, v50, v51, v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
    sub_1B590968C(v23);
    uint64_t v46 = a4;
    sub_1B5963948(a4);
    if (v25)
    {
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1B5A1A328();
      __swift_project_value_buffer(v34, (uint64_t)qword_1E9D910D0);
      double v35 = sub_1B5A1A308();
      os_log_type_t v36 = sub_1B5A1C258();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_1B58FD000, v35, v36, "SubReference to find binding, unable to resolve index", v37, 2u);
        MEMORY[0x1BA9A4780](v37, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v38 = 2;
      *(void *)(v38 + 8) = 0;
      *(void *)(v38 + 16) = 0;
      *(void *)(v38 + 24) = 0;
      *(unsigned char *)(v38 + 32) = 5;
      swift_willThrow();
    }
    else
    {
      uint64_t v26 = v24;
      if ((~v23 & 0xF000000000000007) == 0)
      {
        unint64_t v27 = (void *)swift_allocObject();
        v27[2] = 0;
        v27[3] = 0;
        v27[4] = a1;
        uint64_t v27[5] = a2;
        v27[6] = a3;
        v27[7] = v26;
        uint64_t v28 = (void *)swift_allocObject();
        v28[2] = 0;
        v28[3] = 0;
        v28[4] = a1;
        v28[5] = a2;
        v28[6] = a3;
        v28[7] = v26;
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
        sub_1B5A1BAB8();
        return sub_1B596536C(v21, v50, v51, v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
      }
      uint64_t v42 = (void *)swift_allocObject();
      v42[2] = 0;
      v42[3] = 0;
      v42[4] = a1;
      v42[5] = a2;
      v42[6] = a3;
      v42[7] = v26;
      uint64_t v43 = (void *)swift_allocObject();
      _OWORD v43[2] = 0;
      v43[3] = 0;
      v43[4] = a1;
      v43[5] = a2;
      v43[6] = a3;
      v43[7] = v26;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B590968C(v23);
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
      sub_1B5A1BAB8();
      sub_1B5A1BAE8();
      if (v50)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B599AB94(v21, v50, v51, v46, v23);
        sub_1B5905298(v23);
        sub_1B599F540(v21, v50);
        sub_1B596536C(v21, v50, v51, v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
        sub_1B599F540(v21, v50);
        return sub_1B5905298(v23);
      }
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v45 = 1;
      *(void *)(v45 + 8) = 0;
      *(void *)(v45 + 16) = 0;
      *(void *)(v45 + 24) = 0;
      *(unsigned char *)(v45 + 32) = 5;
      swift_willThrow();
      sub_1B5905298(v23);
    }
    sub_1B5905298(v23);
    return sub_1B596536C(v21, v50, v51, v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  }
  uint64_t v10 = *(void *)(a5 + 16);
  uint64_t v11 = *(void *)(a5 + 24);
  uint64_t v12 = *(void *)(a5 + 32);
  unsigned __int8 v13 = *(unsigned char *)(a5 + 40);
  uint64_t v14 = *(void *)(a5 + 48);
  sub_1B5904B60(v10, v11, v12, v13);
  sub_1B590968C(v14);
  unint64_t v15 = StringResolvable.resolved(with:)(a4);
  if (v5)
  {
    sub_1B5905298(v14);
    uint64_t v17 = v10;
    uint64_t v18 = v11;
    uint64_t v19 = v12;
    unsigned __int8 v20 = v13;
  }
  else
  {
    uint64_t v29 = a4;
    unint64_t v30 = v15;
    uint64_t v31 = v16;
    uint64_t v47 = v29;
    if ((~v14 & 0xF000000000000007) != 0)
    {
      uint64_t v40 = (void *)swift_allocObject();
      v40[2] = 0;
      v40[3] = 0;
      v40[4] = a1;
      v40[5] = a2;
      v40[6] = a3;
      v40[7] = v30;
      v40[8] = v31;
      char v41 = (void *)swift_allocObject();
      v41[2] = 0;
      v41[3] = 0;
      v41[4] = a1;
      v41[5] = a2;
      v41[6] = a3;
      v41[7] = v30;
      v41[8] = v31;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B590968C(v14);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
      sub_1B5A1BAB8();
      sub_1B5A1BAE8();
      if (v11)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B599AB94(v10, v11, v12, v47, v14);
        sub_1B5905298(v14);
        sub_1B599F540(v10, v11);
        sub_1B5904A88(v10, v11, v12, v13);
        sub_1B599F540(v10, v11);
        return sub_1B5905298(v14);
      }
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v44 = 1;
      *(void *)(v44 + 8) = 0;
      *(void *)(v44 + 16) = 0;
      *(void *)(v44 + 24) = 0;
      *(unsigned char *)(v44 + 32) = 5;
      swift_willThrow();
      sub_1B5905298(v14);
      sub_1B5905298(v14);
      uint64_t v17 = v10;
      uint64_t v18 = 0;
      uint64_t v19 = v12;
    }
    else
    {
      uint64_t v32 = (void *)swift_allocObject();
      v32[2] = 0;
      v32[3] = 0;
      v32[4] = a1;
      v32[5] = a2;
      v32[6] = a3;
      v32[7] = v30;
      v32[8] = v31;
      os_log_type_t v33 = (void *)swift_allocObject();
      _OWORD v33[2] = 0;
      v33[3] = 0;
      v33[4] = a1;
      v33[5] = a2;
      v33[6] = a3;
      v33[7] = v30;
      v33[8] = v31;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
      sub_1B5A1BAB8();
      uint64_t v17 = v10;
      uint64_t v18 = v11;
      uint64_t v19 = v12;
    }
    unsigned __int8 v20 = v13;
  }
  return sub_1B5904A88(v17, v18, v19, v20);
}

uint64_t sub_1B599B3A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v8 = *(void *)v3;
  uint64_t v9 = *(void *)(v3 + 8);
  uint64_t v10 = *(void *)(v3 + 16);
  unsigned __int8 v11 = *(unsigned char *)(v3 + 24);
  sub_1B5904B60(*(void *)v3, v9, v10, v11);
  StringResolvable.resolved(with:)(a2);
  if (v4) {
    return sub_1B5904A88(v8, v9, v10, v11);
  }
  sub_1B5904A88(v8, v9, v10, v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3[3] = sub_1B5A1BA48();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B5A1B628();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B599B500(uint64_t a1)
{
  return sub_1B598D0F8(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void *sub_1B599B524(uint64_t a1, uint64_t a2)
{
  return sub_1B5992D78(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B599B548@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B598928C(a1, a2, *(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), a3);
}

uint64_t sub_1B599B56C(uint64_t a1)
{
  return sub_1B598AFB8(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1B599B590(uint64_t a1, uint64_t a2)
{
  return sub_1B5992F74(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

void sub_1B599B5B4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

void sub_1B599B5F4(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(void, uint64_t, uint64_t)@<X6>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *(void *)v4;
  uint64_t v10 = *(void *)(v4 + 8);
  uint64_t v11 = *(void *)(v4 + 16);
  char v12 = *(unsigned char *)(v4 + 24);
  sub_1B590D634(v9, v10, v11, v12);
  char v13 = sub_1B59B4120(a2, v9, v10, v11, v12);
  sub_1B590D6F0(v9, v10, v11, v12);
  if (!v5)
  {
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v14);
    a4[3] = swift_getOpaqueTypeMetadata2();
    a4[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(a4);
    a3(v13 & 1, v14, v15);
  }
}

uint64_t sub_1B599B720(uint64_t a1)
{
  return sub_1B598999C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), MEMORY[0x1E4F3E8C8], MEMORY[0x1E4F3E8C0]);
}

uint64_t sub_1B599B76C(uint64_t a1, uint64_t a2)
{
  return sub_1B599317C(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), MEMORY[0x1E4F3E8C8], MEMORY[0x1E4F3E8C0]);
}

uint64_t sub_1B599B7B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599BA20(a1, (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B59A7A44, a2);
}

uint64_t sub_1B599B7E4(uint64_t a1)
{
  return sub_1B5990640(a1, *v1, v1[1], v1[2], (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B59A7A44);
}

uint64_t sub_1B599B818(uint64_t a1, uint64_t a2)
{
  return sub_1B5995490(a1, a2, *v2, v2[1], v2[2], (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B59A7A44);
}

uint64_t sub_1B599B84C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v5 = *(_OWORD *)(v2 + 16);
  v13[0] = *(_OWORD *)v2;
  v13[1] = v5;
  uint64_t v14 = *(void *)(v2 + 32);
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *))(v8 + 16))((char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1B5A1BA88();
  uint64_t v10 = sub_1B598F538(v9);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v12 = MEMORY[0x1E4F3EDF8];
    a2[3] = MEMORY[0x1E4F3EE00];
    a2[4] = v12;
    *a2 = v10;
  }
  return result;
}

uint64_t sub_1B599B97C(uint64_t a1)
{
  return sub_1B598F538(a1);
}

uint64_t sub_1B599B9B8(uint64_t a1, uint64_t a2)
{
  return sub_1B5993350(a1, a2);
}

uint64_t sub_1B599B9F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599BA20(a1, (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B59BE8C0, a2);
}

uint64_t sub_1B599BA20@<X0>(void *a1@<X0>, void (*a2)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v10);
  (*(void (**)(char *))(v12 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1B5A1BA88();
  uint64_t v14 = sub_1B5990640(v13, v7, v8, v9, a2);
  uint64_t result = swift_release();
  if (!v4)
  {
    uint64_t v16 = MEMORY[0x1E4F3EDF8];
    a3[3] = MEMORY[0x1E4F3EE00];
    a3[4] = v16;
    *a3 = v14;
  }
  return result;
}

uint64_t sub_1B599BB64(uint64_t a1)
{
  return sub_1B5990640(a1, *v1, v1[1], v1[2], (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B59BE8C0);
}

uint64_t sub_1B599BB98(uint64_t a1, uint64_t a2)
{
  return sub_1B5995490(a1, a2, *v2, v2[1], v2[2], (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B59BE8C0);
}

uint64_t sub_1B599BBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B599BBF8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B59C1924);
}

uint64_t sub_1B599BBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a6(a1, a2, a3, a4);
}

void *sub_1B599BC40(uint64_t a1)
{
  return sub_1B598CFB0(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), (void (*)(void *__return_ptr, void *, uint64_t))sub_1B59C1924);
}

void *sub_1B599BC78(uint64_t a1, uint64_t a2)
{
  return sub_1B5993448(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), (void (*)(void *__return_ptr, void *, uint64_t))sub_1B59C1924);
}

uint64_t sub_1B599BCB0(uint64_t a1)
{
  return sub_1B598F0A8(a1);
}

uint64_t sub_1B599BCF4(uint64_t a1, uint64_t a2)
{
  return sub_1B599356C(a1, a2);
}

uint64_t sub_1B599BD38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B598941C(a1, a2, a3);
}

uint64_t sub_1B599BD74(uint64_t a1)
{
  return sub_1B598E6FC(a1);
}

uint64_t sub_1B599BDB0(uint64_t a1, uint64_t a2)
{
  return sub_1B5993780(a1, a2);
}

uint64_t sub_1B599BDEC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599C1A0(a1, (uint64_t (*)(void))sub_1B5989DE8, a2);
}

uint64_t sub_1B599BE18@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599C97C(a1, (uint64_t (*)(void))sub_1B5989DE8, a2);
}

uint64_t sub_1B599BE44(uint64_t a1)
{
  return sub_1B5989DE8(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1B599BE68(uint64_t a1)
{
  return sub_1B599F850(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), (void (*)(void))sub_1B5989DE8);
}

uint64_t sub_1B599BEA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *))(v6 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B5A1BA88();
  uint64_t v7 = sub_1B598A4C4();
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v9 = MEMORY[0x1E4F3EDF8];
    a2[3] = MEMORY[0x1E4F3EE00];
    a2[4] = v9;
    *a2 = v7;
  }
  return result;
}

uint64_t sub_1B599BFE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599C7B8(a1, sub_1B598A4C4, a2);
}

uint64_t sub_1B599C010()
{
  return sub_1B598A4C4();
}

uint64_t sub_1B599C034()
{
  return sub_1B599F670();
}

uint64_t sub_1B599C058@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *))(v6 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B5A1BA88();
  uint64_t v7 = sub_1B598A3BC();
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v9 = MEMORY[0x1E4F3EDF8];
    a2[3] = MEMORY[0x1E4F3EE00];
    a2[4] = v9;
    *a2 = v7;
  }
  return result;
}

uint64_t sub_1B599C170()
{
  return sub_1B598A3BC();
}

uint64_t sub_1B599C188()
{
  return sub_1B599F770();
}

uint64_t sub_1B599C1A0@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X5>, uint64_t *a3@<X8>)
{
  uint64_t v13 = a3;
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *))(v7 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B5A1BA88();
  uint64_t v8 = a2();
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v10 = MEMORY[0x1E4F3EDF8];
    uint64_t v11 = v13;
    void v13[3] = MEMORY[0x1E4F3EE00];
    v11[4] = v10;
    *uint64_t v11 = v8;
  }
  return result;
}

uint64_t sub_1B599C2F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599D2A4(a1, (uint64_t (*)(void))sub_1B598A1E8, a2);
}

uint64_t sub_1B599C31C(uint64_t a1)
{
  return sub_1B598A1E8(a1);
}

uint64_t sub_1B599C338(uint64_t a1)
{
  return sub_1B599F960(a1);
}

uint64_t sub_1B599C354@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  long long v5 = *(_OWORD *)(v2 + 16);
  v13[0] = *(_OWORD *)v2;
  v13[1] = v5;
  char v14 = *(unsigned char *)(v2 + 32);
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *))(v8 + 16))((char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1B5A1BA88();
  uint64_t v10 = sub_1B598A5F0(v9);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v12 = MEMORY[0x1E4F3EDF8];
    a2[3] = MEMORY[0x1E4F3EE00];
    a2[4] = v12;
    *a2 = v10;
  }
  return result;
}

_OWORD *sub_1B599C484(uint64_t a1)
{
  return sub_1B598A5F0(a1);
}

_OWORD *sub_1B599C4C0(uint64_t a1, uint64_t a2)
{
  return sub_1B59939B4(a1, a2);
}

uint64_t sub_1B599C4FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599C528(a1, (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t))sub_1B59D3F2C, a2);
}

uint64_t sub_1B599C528@<X0>(void *a1@<X0>, void (*a2)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v8);
  (*(void (**)(char *))(v10 + 16))((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1B5A1BA88();
  uint64_t v12 = sub_1B5989FAC(v11, v7, a2);
  uint64_t result = swift_release();
  if (!v4)
  {
    uint64_t v14 = MEMORY[0x1E4F3EDF8];
    a3[3] = MEMORY[0x1E4F3EE00];
    a3[4] = v14;
    *a3 = v12;
  }
  return result;
}

uint64_t sub_1B599C658(uint64_t a1)
{
  return sub_1B5989FAC(a1, *v1, (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t))sub_1B59D3F2C);
}

uint64_t sub_1B599C688(uint64_t a1, uint64_t a2)
{
  return sub_1B5993AB0(a1, a2, *v2, (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t))sub_1B59D3F2C);
}

uint64_t sub_1B599C6B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599C528(a1, (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t))sub_1B59D4050, a2);
}

uint64_t sub_1B599C6E4(uint64_t a1)
{
  return sub_1B5989FAC(a1, *v1, (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t))sub_1B59D4050);
}

uint64_t sub_1B599C714(uint64_t a1, uint64_t a2)
{
  return sub_1B5993AB0(a1, a2, *v2, (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t))sub_1B59D4050);
}

uint64_t sub_1B599C744@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59D7024(a1, a2, a3);
}

uint64_t sub_1B599C75C(uint64_t a1)
{
  return sub_1B598A9A8(a1);
}

uint64_t sub_1B599C774(uint64_t a1, uint64_t a2)
{
  return sub_1B5993BB4(a1, a2);
}

uint64_t sub_1B599C78C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599C7B8(a1, (uint64_t (*)(void))sub_1B5990520, a2);
}

uint64_t sub_1B599C7B8@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v13 = a3;
  long long v5 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *))(v7 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B5A1BA88();
  uint64_t v8 = a2();
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v10 = MEMORY[0x1E4F3EDF8];
    uint64_t v11 = v13;
    void v13[3] = MEMORY[0x1E4F3EE00];
    v11[4] = v10;
    *uint64_t v11 = v8;
  }
  return result;
}

void *sub_1B599C908(uint64_t a1)
{
  return sub_1B5990520(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void *sub_1B599C92C(uint64_t a1, uint64_t a2)
{
  return sub_1B5993CA8(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B599C950@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599C97C(a1, (uint64_t (*)(void))sub_1B598C528, a2);
}

uint64_t sub_1B599C97C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v13 = a3;
  long long v5 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *))(v7 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B5A1BA88();
  uint64_t v8 = a2();
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v10 = MEMORY[0x1E4F3EDF8];
    uint64_t v11 = v13;
    void v13[3] = MEMORY[0x1E4F3EE00];
    v11[4] = v10;
    *uint64_t v11 = v8;
  }
  return result;
}

void *sub_1B599CACC(uint64_t a1)
{
  return sub_1B598C528(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void *sub_1B599CAF0(uint64_t a1, uint64_t a2)
{
  return sub_1B5993DA4(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B599CB14@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)v3;
  uint64_t v10 = *(void *)(v3 + 8);
  uint64_t v11 = *(void *)(v3 + 16);
  char v12 = *(unsigned char *)(v3 + 24);
  sub_1B5965310(*(void *)v3, v10, v11, v12, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(a2);
  LOBYTE(a2) = v8;
  sub_1B596536C(v7, v10, v11, v12, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  if (a2) {
    return sub_1B590CA38((uint64_t)a1, (uint64_t)a3);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E48);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64E50, &qword_1E9D64E48);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B4C8();
}

uint64_t sub_1B599CCB0(uint64_t a1)
{
  return sub_1B598B510(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1B599CCD4(uint64_t a1, uint64_t a2)
{
  return sub_1B5993E9C(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B599CCF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64E30, &qword_1E9D64E28);
  a2[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B5A1B5D8();
}

uint64_t sub_1B599CDE8(uint64_t a1)
{
  return sub_1B5989E14(a1);
}

uint64_t sub_1B599CE04(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  v5[3] = MEMORY[0x1E4F3EE00];
  v5[4] = MEMORY[0x1E4F3EDF8];
  v5[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v5, v1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E28);
  uint64_t v2 = sub_1B5A1A748();
  uint64_t v6[3] = v2;
  sub_1B59095C8(&qword_1E9D64E30, &qword_1E9D64E28);
  v6[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v6);
  sub_1B5A1B5D8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  uint64_t v3 = View.anyView.getter(v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3;
}

uint64_t sub_1B599CF70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599CFB8(a1, (uint64_t)&unk_1F0EA9BA0, (uint64_t)sub_1B59A09E4, MEMORY[0x1E4F3EA38], a2);
}

uint64_t sub_1B599CFB8@<X0>(void *a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, void (*a4)(uint64_t, void *, uint64_t, void)@<X6>, uint64_t *a5@<X8>)
{
  uint64_t v11 = *v5;
  char v12 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v12);
  (*(void (**)(char *))(v14 + 16))((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1B5A1BA88();
  uint64_t v16 = sub_1B598E2CC(v15, v11, a2, a3, a4);
  uint64_t result = swift_release();
  if (!v6)
  {
    uint64_t v18 = MEMORY[0x1E4F3EDF8];
    a5[3] = MEMORY[0x1E4F3EE00];
    a5[4] = v18;
    *a5 = v16;
  }
  return result;
}

uint64_t sub_1B599D100(uint64_t a1)
{
  return sub_1B598E2CC(a1, *v1, (uint64_t)&unk_1F0EA9BA0, (uint64_t)sub_1B59A09E4, MEMORY[0x1E4F3EA38]);
}

uint64_t sub_1B599D14C(uint64_t a1, uint64_t a2)
{
  return sub_1B59940C4(a1, a2, *v2, (uint64_t)&unk_1F0EA9B78, (uint64_t)sub_1B59A0428, MEMORY[0x1E4F3EA38]);
}

uint64_t sub_1B599D198@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599CFB8(a1, (uint64_t)&unk_1F0EA9C18, (uint64_t)sub_1B59A09E8, MEMORY[0x1E4F3E420], a2);
}

uint64_t sub_1B599D1E0(uint64_t a1)
{
  return sub_1B598E2CC(a1, *v1, (uint64_t)&unk_1F0EA9C18, (uint64_t)sub_1B59A09E8, MEMORY[0x1E4F3E420]);
}

uint64_t sub_1B599D22C(uint64_t a1, uint64_t a2)
{
  return sub_1B59940C4(a1, a2, *v2, (uint64_t)&unk_1F0EA9BF0, (uint64_t)sub_1B59A05E4, MEMORY[0x1E4F3E420]);
}

uint64_t sub_1B599D278@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599D2A4(a1, (uint64_t (*)(void))sub_1B598F9C0, a2);
}

uint64_t sub_1B599D2A4@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *))(v8 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B5A1BA88();
  uint64_t v9 = a2();
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v11 = MEMORY[0x1E4F3EDF8];
    a3[3] = MEMORY[0x1E4F3EE00];
    a3[4] = v11;
    *a3 = v9;
  }
  return result;
}

uint64_t sub_1B599D3D4(uint64_t a1)
{
  return sub_1B598F9C0(a1, *v1);
}

uint64_t *sub_1B599D3F0(uint64_t a1, uint64_t a2)
{
  return sub_1B59942B0(a1, a2, *v2);
}

uint64_t sub_1B599D40C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  long long v5 = *(_OWORD *)(v2 + 112);
  v16[6] = *(_OWORD *)(v2 + 96);
  uint64_t v16[7] = v5;
  char v17 = *(unsigned char *)(v2 + 128);
  long long v6 = *(_OWORD *)(v2 + 48);
  long long v16[2] = *(_OWORD *)(v2 + 32);
  void v16[3] = v6;
  long long v7 = *(_OWORD *)(v2 + 80);
  v16[4] = *(_OWORD *)(v2 + 64);
  void v16[5] = v7;
  long long v8 = *(_OWORD *)(v2 + 16);
  v16[0] = *(_OWORD *)v2;
  v16[1] = v8;
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *))(v11 + 16))((char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1B5A1BA88();
  uint64_t v13 = sub_1B598E190(v12);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v15 = MEMORY[0x1E4F3EDF8];
    a2[3] = MEMORY[0x1E4F3EE00];
    a2[4] = v15;
    *a2 = v13;
  }
  return result;
}

_OWORD *sub_1B599D554(uint64_t a1)
{
  return sub_1B598E190(a1);
}

_OWORD *sub_1B599D5A8(uint64_t a1, uint64_t a2)
{
  return sub_1B59943C0(a1, a2);
}

uint64_t sub_1B599D5FC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, unint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v12, v6);
  if (v12 >> 61 != 5)
  {
    uint64_t result = swift_release();
LABEL_8:
    unint64_t v10 = 0xF000000000000007;
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v7 + 16))
  {
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1B59049B8(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  unint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_9:
  *a3 = v10;
  return result;
}

uint64_t sub_1B599D6EC@<X0>(uint64_t a1@<X5>, unint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v8, v4);
  if (v8 >> 61 != 4)
  {
    uint64_t result = swift_release();
LABEL_7:
    unint64_t v6 = 0xF000000000000007;
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (a1 < 0 || *(void *)(v5 + 16) <= a1)
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  unint64_t v6 = *(void *)(v5 + 8 * a1 + 32);
  swift_retain();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_8:
  *a2 = v6;
  return result;
}

uint64_t sub_1B599D7B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *))(v6 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1B5A1BA88();
  uint64_t v8 = sub_1B598F8A4(v7);
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v10 = MEMORY[0x1E4F3EDF8];
    a2[3] = MEMORY[0x1E4F3EE00];
    a2[4] = v10;
    *a2 = v8;
  }
  return result;
}

uint64_t sub_1B599D8C8(uint64_t a1)
{
  return sub_1B598F8A4(a1);
}

uint64_t sub_1B599D8E0(uint64_t a1, uint64_t a2)
{
  return sub_1B59944D8(a1, a2);
}

uint64_t sub_1B599D8F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)v3;
  uint64_t v10 = *(void *)(v3 + 8);
  uint64_t v11 = *(void *)(v3 + 16);
  char v12 = *(unsigned char *)(v3 + 24);
  sub_1B5965310(*(void *)v3, v10, v11, v12, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D634);
  sub_1B5963534(a2);
  LOBYTE(a2) = v8;
  sub_1B596536C(v7, v10, v11, v12, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590D6F0);
  if (a2) {
    return sub_1B590CA38((uint64_t)a1, (uint64_t)a3);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E38);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8((unint64_t *)&qword_1E9D64E40, &qword_1E9D64E38);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B468();
}

uint64_t sub_1B599DAA0(uint64_t a1)
{
  return sub_1B598BC28(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1B599DAD8(uint64_t a1, uint64_t a2)
{
  return sub_1B59945D0(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B599DB10@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59FD6D0(a1, a2, a3);
}

_OWORD *sub_1B599DB74(uint64_t a1)
{
  return sub_1B598E058(a1);
}

_OWORD *sub_1B599DBC0(uint64_t a1, uint64_t a2)
{
  return sub_1B5994800(a1, a2);
}

uint64_t sub_1B599DC0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  a2[3] = swift_getOpaqueTypeMetadata2();
  a2[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B5A1B788();
}

uint64_t sub_1B599DCF8(uint64_t a1)
{
  return sub_1B598D9FC(a1);
}

uint64_t sub_1B599DD10(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4F3EE00];
  uint64_t v3 = MEMORY[0x1E4F3EDF8];
  uint64_t v9[3] = MEMORY[0x1E4F3EE00];
  _OWORD v9[4] = MEMORY[0x1E4F3EDF8];
  v9[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v9, v2);
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v10[0] = v2;
  v10[1] = v4;
  _OWORD v10[2] = v3;
  uint64_t v11 = v5;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v11 = OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v10);
  sub_1B5A1B788();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  uint64_t v7 = View.anyView.getter(OpaqueTypeMetadata2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v7;
}

uint64_t sub_1B599DE7C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5A02F0C(a1, a2, a3);
}

uint64_t sub_1B599DE94(uint64_t a1)
{
  return sub_1B598F78C(a1);
}

uint64_t sub_1B599DEAC(uint64_t a1, uint64_t a2)
{
  return sub_1B5994914(a1, a2);
}

uint64_t sub_1B599DEC4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B5A035EC(a1, a2, a3);
}

uint64_t sub_1B599DEDC(uint64_t a1)
{
  return sub_1B598B888(a1);
}

uint64_t sub_1B599DEF4(uint64_t a1, uint64_t a2)
{
  return sub_1B5994A08(a1, a2);
}

uint64_t sub_1B599DF0C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v6, v7);
  sub_1B5A1B128();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E08);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64E10, &qword_1E9D64E08);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B5A1B3A8();
  return swift_release();
}

uint64_t sub_1B599E064(uint64_t a1)
{
  return sub_1B598B308(a1);
}

uint64_t sub_1B599E07C(uint64_t a1, uint64_t a2)
{
  return sub_1B5994AFC(a1, a2);
}

uint64_t sub_1B599E094@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B599E28C(a1, a2, MEMORY[0x1E4F3E578], a3);
}

uint64_t sub_1B599E0C0(uint64_t a1)
{
  return sub_1B598CDC0(a1, MEMORY[0x1E4F3E578]);
}

uint64_t sub_1B599E0EC(uint64_t a1, uint64_t a2)
{
  return sub_1B5994DD4(a1, a2, MEMORY[0x1E4F3E578]);
}

uint64_t sub_1B599E118@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *))(v6 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1B5A1BA88();
  uint64_t v8 = sub_1B598B1EC(v7);
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v10 = MEMORY[0x1E4F3EDF8];
    a2[3] = MEMORY[0x1E4F3EE00];
    a2[4] = v10;
    *a2 = v8;
  }
  return result;
}

uint64_t sub_1B599E230(uint64_t a1)
{
  return sub_1B598B1EC(a1);
}

uint64_t sub_1B599E248(uint64_t a1, uint64_t a2)
{
  return sub_1B5994CDC(a1, a2);
}

uint64_t sub_1B599E260@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B599E28C(a1, a2, MEMORY[0x1E4F3E3A8], a3);
}

uint64_t sub_1B599E28C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  uint64_t v11 = v4[3];
  uint64_t v10 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v11);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, v11, v10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E18);
  a4[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64E20, &qword_1E9D64E18);
  a4[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a4);
  a3(v12, v8, v9);
  return swift_release();
}

uint64_t sub_1B599E3C4(uint64_t a1)
{
  return sub_1B598CDC0(a1, MEMORY[0x1E4F3E3A8]);
}

uint64_t sub_1B599E3F0(uint64_t a1, uint64_t a2)
{
  return sub_1B5994DD4(a1, a2, MEMORY[0x1E4F3E3A8]);
}

uint64_t sub_1B599E41C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5A05BB8(a1, a2, a3);
}

uint64_t sub_1B599E434(uint64_t a1)
{
  return sub_1B598D440(a1);
}

uint64_t sub_1B599E44C(uint64_t a1, uint64_t a2)
{
  return sub_1B5994F9C(a1, a2);
}

uint64_t sub_1B599E464@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599E4EC(a1, (uint64_t (*)(void))sub_1B598DE28, a2);
}

uint64_t sub_1B599E490(uint64_t a1)
{
  return sub_1B598DE28(a1);
}

uint64_t sub_1B599E4A8(uint64_t a1, uint64_t a2)
{
  return sub_1B5995090(a1, a2);
}

uint64_t sub_1B599E4C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B599E4EC(a1, (uint64_t (*)(void))sub_1B598BE84, a2);
}

uint64_t sub_1B599E4EC@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *))(v8 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B5A1BA88();
  uint64_t v9 = a2();
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v11 = MEMORY[0x1E4F3EDF8];
    a3[3] = MEMORY[0x1E4F3EE00];
    a3[4] = v11;
    *a3 = v9;
  }
  return result;
}

uint64_t sub_1B599E614(uint64_t a1)
{
  return sub_1B598BE84(a1);
}

uint64_t sub_1B599E62C(uint64_t a1, uint64_t a2)
{
  return sub_1B5995290(a1, a2);
}

uint64_t sub_1B599E644(uint64_t a1)
{
  return sub_1B5990640(a1, *v1, v1[1], v1[2], (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5A0AF8C);
}

uint64_t sub_1B599E678(uint64_t a1, uint64_t a2)
{
  return sub_1B5995490(a1, a2, *v2, v2[1], v2[2], (void (*)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5A0AF8C);
}

uint64_t sub_1B599E6AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B59895D0(a1, a2, a3);
}

uint64_t sub_1B599E6C4(uint64_t a1)
{
  return sub_1B598FF08(a1);
}

uint64_t sub_1B599E6DC(uint64_t a1, uint64_t a2)
{
  return sub_1B59955A8(a1, a2);
}

uint64_t sub_1B599E6F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = sub_1B5A1A748();
  sub_1B59095C8((unint64_t *)&qword_1E9D64EA8, &qword_1E9D64EA0);
  a2[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B5A1B6F8();
}

uint64_t sub_1B599E824(uint64_t a1)
{
  return sub_1B598E95C(a1);
}

uint64_t sub_1B599E83C(uint64_t a1)
{
  return sub_1B599FB0C(a1);
}

uint64_t sub_1B599E854@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  memcpy(v8, v3, sizeof(v8));
  return sub_1B5A18F58(a1, a2, a3);
}

unsigned char *sub_1B599E8C0(uint64_t a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_1B598FBE0(a1);
}

unsigned char *sub_1B599E914(uint64_t a1, uint64_t a2)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_1B59956A0(a1, a2);
}

uint64_t sub_1B599E978@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v7 = *(unsigned __int8 *)(v3 + 24);
  if (v7 != 255)
  {
    uint64_t v9 = *(void *)v3;
    uint64_t v10 = *(void *)(v3 + 8);
    uint64_t v11 = *(void *)(v3 + 16);
    sub_1B590D634(*(void *)v3, v10, v11, v7 & 1);
    sub_1B59B4120(a2, v9, v10, v11, v7 & 1);
    if (v4) {

    }
    sub_1B590F034(v9, v10, v11, v7);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64EC0);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64EC8, &qword_1E9D64EC0);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B6E8();
}

uint64_t sub_1B599EB00(uint64_t a1)
{
  return sub_1B598ED2C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1B599EB24(uint64_t a1, uint64_t a2)
{
  return sub_1B59957A4(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B599EB48()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 41, 7);
}

unint64_t sub_1B599EB80(uint64_t a1)
{
  unint64_t result = sub_1B590CBC8();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of ContentModifier.modifyView(_:with:localStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ContentModifier.modifyView(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ContentModifier.modifyView(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

ValueMetadata *type metadata accessor for AnyViewModifier()
{
  return &type metadata for AnyViewModifier;
}

uint64_t dispatch thunk of AnyImageModifier.modifyImage(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for AnyImageModifierBox()
{
  return &type metadata for AnyImageModifierBox;
}

uint64_t sub_1B599EC88@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, char *a3@<X8>)
{
  RemoteStateStore.subscript.getter(a1, a2, &v6);
  uint64_t result = v6;
  if ((~v6 & 0xF000000000000007) == 0) {
    goto LABEL_5;
  }
  if (v6 >> 61 != 3)
  {
    uint64_t result = sub_1B599FF94(v6);
LABEL_5:
    char v5 = 2;
    goto LABEL_6;
  }
  char v5 = *(unsigned char *)((v6 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t result = sub_1B599FF94(v6);
LABEL_6:
  *a3 = v5;
  return result;
}

uint64_t sub_1B599ECFC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v8 = *a1;
  if (v8 == 2)
  {
    unint64_t v9 = 0xF000000000000007;
  }
  else
  {
    char v10 = v8 & 1;
    uint64_t v11 = swift_allocObject();
    *(unsigned char *)(v11 + 16) = v10;
    unint64_t v9 = v11 | 0x6000000000000000;
  }
  swift_bridgeObjectRetain();
  return sub_1B59C87D8(v9, a5, a6);
}

uint64_t sub_1B599ED78(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  uint64_t v2 = MEMORY[0x1E4F3EDF8];
  uint64_t v6[3] = MEMORY[0x1E4F3EE00];
  v6[4] = MEMORY[0x1E4F3EDF8];
  v6[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v6, v1);
  v7[0] = v1;
  v7[1] = v2;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v7[3] = OpaqueTypeMetadata2;
  v7[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v7);
  sub_1B5A1B508();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  uint64_t v4 = View.anyView.getter(OpaqueTypeMetadata2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v4;
}

uint64_t sub_1B599EEE0(uint64_t a1)
{
  v3[3] = MEMORY[0x1E4F3EE00];
  v3[4] = MEMORY[0x1E4F3EDF8];
  v3[0] = a1;
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_retain();
  RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  LocalStateStore.init()();
  sub_1B590CA38((uint64_t)v3, (uint64_t)v4);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  v3[0] = *__swift_project_boxed_opaque_existential_1(v4, v4[3]);
  swift_retain();
  uint64_t v1 = sub_1B5A1BA88();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v1;
}

uint64_t sub_1B599EFE0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63188);
  MEMORY[0x1F4188790](v0);
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  swift_retain();
  sub_1B5A1BA88();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63190);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63178);
  sub_1B59095C8((unint64_t *)&qword_1E9D63180, &qword_1E9D63178);
  swift_getOpaqueTypeConformance2();
  sub_1B5A1B728();
  swift_getOpaqueTypeConformance2();
  sub_1B5A1BA88();
  swift_release();
  swift_release();
  swift_release();
  return sub_1B5A1BA88();
}

uint64_t sub_1B599F1F0(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  uint64_t v2 = MEMORY[0x1E4F3EDF8];
  void v8[3] = MEMORY[0x1E4F3EE00];
  v8[4] = MEMORY[0x1E4F3EDF8];
  v8[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v8, v1);
  swift_getKeyPath();
  uint64_t v3 = sub_1B5A1A588();
  uint64_t v4 = sub_1B59A04A4(&qword_1E9D638B8, MEMORY[0x1E4F3C820]);
  v9[0] = v1;
  v9[1] = v3;
  _OWORD v9[2] = v2;
  uint64_t v10 = v4;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v10 = OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v9);
  swift_retain();
  sub_1B5A1B598();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  uint64_t v6 = View.anyView.getter(OpaqueTypeMetadata2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v6;
}

uint64_t sub_1B599F3C8()
{
  return sub_1B5A1A948();
}

uint64_t sub_1B599F3EC(uint64_t a1)
{
  return sub_1B5925040(a1, v1);
}

uint64_t sub_1B599F3F4(uint64_t a1)
{
  v3[3] = MEMORY[0x1E4F3EE00];
  v3[4] = MEMORY[0x1E4F3EDF8];
  v3[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  sub_1B590CA38((uint64_t)v3, (uint64_t)v4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  v3[0] = *__swift_project_boxed_opaque_existential_1(v4, v4[3]);
  swift_retain();
  uint64_t v1 = sub_1B5A1BA88();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v1;
}

uint64_t sub_1B599F4C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B599F4F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5A118A4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1B599F500@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B5A11A38(*(void *)(v1 + 16), a1);
}

uint64_t sub_1B599F50C@<X0>(char *a1@<X8>)
{
  return sub_1B599EC88(*(void *)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t sub_1B599F520(unsigned __int8 *a1)
{
  return sub_1B599ECFC(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1B599F540(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B599F594@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59A01B8(v1[4], v1[5], v1[6], v1[7]);
  *a1 = result;
  return result;
}

uint64_t sub_1B599F5C8(char *a1)
{
  return sub_1B59A0294(*a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1B599F5DC()
{
  return sub_1B59A06F0((uint64_t (*)(void, void, void, void, void, void))sub_1B59E70B0);
}

uint64_t sub_1B599F600@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B599FCB0(v1[4], v1[5], v1[6], v1[7], v1[8]);
  *a1 = result;
  return result;
}

uint64_t sub_1B599F638(char *a1)
{
  return sub_1B599FDB8(*a1, v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1B599F650()
{
  return sub_1B59A07A8((uint64_t (*)(void, void, void, void, void, void, void))sub_1B59E69A4);
}

uint64_t sub_1B599F670()
{
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  swift_retain();
  sub_1B5A1BA88();
  sub_1B598A4C4();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (!v0) {
    return sub_1B5A1BA88();
  }
  return result;
}

uint64_t sub_1B599F770()
{
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  swift_retain();
  sub_1B5A1BA88();
  sub_1B598A3BC();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (!v0) {
    return sub_1B5A1BA88();
  }
  return result;
}

uint64_t sub_1B599F850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  swift_retain();
  sub_1B5A1BA88();
  a6();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (!v6) {
    return sub_1B5A1BA88();
  }
  return result;
}

uint64_t sub_1B599F960(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  uint64_t v2 = MEMORY[0x1E4F3EDF8];
  void v8[3] = MEMORY[0x1E4F3EE00];
  v8[4] = MEMORY[0x1E4F3EDF8];
  v8[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v8, v1);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63410);
  uint64_t v4 = sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  v9[0] = v1;
  v9[1] = v3;
  _OWORD v9[2] = v2;
  uint64_t v10 = v4;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v10 = OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v9);
  sub_1B5A1B5A8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  uint64_t v6 = View.anyView.getter(OpaqueTypeMetadata2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v6;
}

uint64_t sub_1B599FB0C(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4F3EE00];
  v5[3] = MEMORY[0x1E4F3EE00];
  v5[4] = MEMORY[0x1E4F3EDF8];
  v5[0] = a1;
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  swift_retain();
  LocalStateStore.init()();
  __swift_project_boxed_opaque_existential_1(v5, v1);
  sub_1B5A1BC48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64EA0);
  uint64_t v2 = sub_1B5A1A748();
  uint64_t v6[3] = v2;
  sub_1B59095C8((unint64_t *)&qword_1E9D64EA8, &qword_1E9D64EA0);
  v6[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v6);
  sub_1B5A1B6F8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  uint64_t v3 = View.anyView.getter(v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3;
}

uint64_t sub_1B599FCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v14, v7);
  if (v14 >> 61 != 5) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v8 + 16))
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 2;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B59049B8(a4, a5);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  unint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11 >> 61 != 3)
  {
LABEL_6:
    swift_release();
    return 2;
  }
  uint64_t v12 = *(unsigned __int8 *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_release();
  return v12;
}

uint64_t sub_1B599FDB8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v21);
  if (v21 >> 61 == 5)
  {
    uint64_t v12 = *(void *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    unint64_t v21 = v12;
    if (a1 == 2)
    {
      swift_bridgeObjectRetain();
      sub_1B5957208(a5, a6, &v18);
      swift_bridgeObjectRelease();
      sub_1B599FF94(v18);
      uint64_t v12 = v21;
    }
    else
    {
      uint64_t v13 = swift_allocObject();
      *(unsigned char *)(v13 + 16) = a1 & 1;
      uint64_t v14 = v13 | 0x6000000000000000;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = v12;
      sub_1B5958B30(v14, a5, a6, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = a2;
    uint64_t v19 = a3;
    uint64_t v20 = a4;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1B59A5304(v12);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1B5A1BAA8();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1B599FF94(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B599FFAC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B599FFE4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1B599FFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v19);
  if (v19 >> 61 == 5)
  {
    uint64_t v12 = *(void *)((v19 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    unint64_t v19 = v12;
    if ((~a1 & 0xF000000000000007) != 0)
    {
      sub_1B59A0838(a1);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = v12;
      sub_1B5958B30(a1, a5, a6, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B5957208(a5, a6, &v16);
      swift_bridgeObjectRelease();
      sub_1B599FF94(v16);
      uint64_t v12 = v19;
    }
    uint64_t v16 = a2;
    uint64_t v17 = a3;
    uint64_t v18 = a4;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_1B59A5304(v12);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1B5A1BAA8();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1B59A01B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v10, v5);
  if (v10 >> 61 != 4) {
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (a4 < 0 || *(void *)(v6 + 16) <= a4)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  unint64_t v7 = *(void *)(v6 + 8 * a4 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  if (v7 >> 61 != 3)
  {
LABEL_6:
    swift_release();
    return 2;
  }
  uint64_t v8 = *(unsigned __int8 *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_release();
  return v8;
}

uint64_t sub_1B59A0294(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v11);
  if (v11 >> 61 != 4) {
    return swift_release();
  }
  unint64_t v7 = *(void **)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (a1 == 2) {
    return swift_bridgeObjectRelease();
  }
  char v9 = a1 & 1;
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v9;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((a5 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t result = (uint64_t)sub_1B59CC268(v7);
  unint64_t v7 = (void *)result;
  if ((a5 & 0x8000000000000000) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if (v7[2] <= a5)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v7[a5 + 4] = v10 | 0x6000000000000000;
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B59A33C8((uint64_t)v7, &v11);
  swift_bridgeObjectRelease();
  sub_1B5A1BAA8();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B59A0428()
{
  return sub_1B59E2528(v0[2], v0[3], v0[4]);
}

unint64_t sub_1B59A0438()
{
  unint64_t result = qword_1E9D64E98;
  if (!qword_1E9D64E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64E98);
  }
  return result;
}

uint64_t sub_1B59A0490()
{
  return sub_1B59E2A5C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B59A049C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B592E8FC(*(void **)(v1 + 16), a1);
}

uint64_t sub_1B59A04A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B59A04EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 104);
  uint64_t v18 = *(void *)(a1 + 96);
  uint64_t v16 = *(void *)(a1 + 112);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 88);
  unsigned int v15 = *(unsigned __int8 *)(a1 + 120);
  a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), a2);
  a3(v6, v7, v8, v11, a2);
  a3(v14, v9, v10, v12, a2);
  a3(v18, v17, v16, v15, a2);
  return a1;
}

uint64_t sub_1B59A05E4()
{
  return sub_1B59E2670(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroy_49Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B59A063C()
{
  return sub_1B59D3040();
}

uint64_t sub_1B59A0650@<X0>(void *a1@<X8>)
{
  return sub_1B59A51A4(*(void *)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t objectdestroy_5Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1B59A06AC(uint64_t *a1)
{
  return sub_1B59A54C8(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1B59A06C0()
{
  return sub_1B59A06F0((uint64_t (*)(void, void, void, void, void, void))sub_1B599D6EC);
}

uint64_t sub_1B59A06DC(uint64_t *a1)
{
  return sub_1B59A0850(*a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1B59A06F0(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t objectdestroy_17Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B59A0760(uint64_t *a1)
{
  return sub_1B59E7170(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1B59A0774()
{
  return sub_1B59A07A8((uint64_t (*)(void, void, void, void, void, void, void))sub_1B599D5FC);
}

uint64_t sub_1B59A0790(uint64_t *a1)
{
  return sub_1B599FFF4(*a1, v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1B59A07A8(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t objectdestroy_29Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B59A0824(uint64_t *a1)
{
  return sub_1B59E6A6C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1B59A0838(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B59A0850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v9);
  if (v9 >> 61 != 4) {
    return swift_release();
  }
  uint64_t v7 = *(void **)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if ((~a1 & 0xF000000000000007) == 0) {
    return swift_bridgeObjectRelease();
  }
  swift_retain_n();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((a5 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = (uint64_t)sub_1B59CC268(v7);
  uint64_t v7 = (void *)result;
  if ((a5 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
LABEL_7:
  if (v7[2] <= a5)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v7[a5 + 4] = a1;
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B59A33C8((uint64_t)v7, &v9);
  swift_bridgeObjectRelease();
  sub_1B5A1BAA8();
  swift_release();
  swift_release();
  swift_release();
  return sub_1B599FF94(a1);
}

uint64_t destroy for NavigationDestinationModifier(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 != 255) {
    sub_1B590D6F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v2 & 1);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v3);
  }
  return __swift_destroy_boxed_opaque_existential_1(a1 + 64);
}

uint64_t initializeWithCopy for NavigationDestinationModifier(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  }
  else
  {
    char v5 = v4 & 1;
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    uint64_t v8 = a2[2];
    sub_1B590D634(*a2, v7, v8, v4 & 1);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v5;
  }
  unsigned int v9 = *((unsigned __int8 *)a2 + 56);
  if (v9 <= 0xFD)
  {
    uint64_t v10 = a2[4];
    uint64_t v11 = a2[5];
    uint64_t v12 = a2[6];
    sub_1B5904B60(v10, v11, v12, *((unsigned char *)a2 + 56));
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 56) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  long long v13 = *(_OWORD *)(a2 + 11);
  *(_OWORD *)(a1 + 88) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 64, (uint64_t)(a2 + 8));
  return a1;
}

uint64_t assignWithCopy for NavigationDestinationModifier(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v4 == 255)
    {
      long long v6 = *a2;
      *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      char v15 = v4 & 1;
      uint64_t v16 = *(void *)a2;
      uint64_t v17 = *((void *)a2 + 1);
      uint64_t v18 = *((void *)a2 + 2);
      sub_1B590D634(*(void *)a2, v17, v18, v4 & 1);
      *(void *)a1 = v16;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = v18;
      *(unsigned char *)(a1 + 24) = v15;
    }
  }
  else if (v4 == 255)
  {
    sub_1B5947804(a1);
    long long v5 = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 9) = v5;
  }
  else
  {
    char v7 = v4 & 1;
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *((void *)a2 + 1);
    uint64_t v10 = *((void *)a2 + 2);
    sub_1B590D634(*(void *)a2, v9, v10, v4 & 1);
    uint64_t v11 = *(void *)a1;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 16);
    char v14 = *(unsigned char *)(a1 + 24);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(unsigned char *)(a1 + 24) = v7;
    sub_1B590D6F0(v11, v12, v13, v14);
  }
  unint64_t v19 = (_OWORD *)(a1 + 32);
  uint64_t v20 = a2 + 2;
  unsigned int v21 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v21 <= 0xFD)
    {
      uint64_t v27 = *((void *)a2 + 4);
      uint64_t v28 = *((void *)a2 + 5);
      uint64_t v29 = *((void *)a2 + 6);
      sub_1B5904B60(v27, v28, v29, *((unsigned char *)a2 + 56));
      uint64_t v30 = *(void *)(a1 + 32);
      uint64_t v31 = *(void *)(a1 + 40);
      uint64_t v32 = *(void *)(a1 + 48);
      *(void *)(a1 + 32) = v27;
      *(void *)(a1 + 40) = v28;
      *(void *)(a1 + 48) = v29;
      unsigned __int8 v33 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v21;
      sub_1B5904A88(v30, v31, v32, v33);
    }
    else
    {
      sub_1B590DA50(a1 + 32);
      long long v23 = *(long long *)((char *)a2 + 41);
      *unint64_t v19 = *v20;
      *(_OWORD *)(a1 + 41) = v23;
    }
  }
  else if (v21 <= 0xFD)
  {
    uint64_t v24 = *((void *)a2 + 4);
    uint64_t v25 = *((void *)a2 + 5);
    uint64_t v26 = *((void *)a2 + 6);
    sub_1B5904B60(v24, v25, v26, *((unsigned char *)a2 + 56));
    *(void *)(a1 + 32) = v24;
    *(void *)(a1 + 40) = v25;
    *(void *)(a1 + 48) = v26;
    *(unsigned char *)(a1 + 56) = v21;
  }
  else
  {
    long long v22 = *v20;
    *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
    *unint64_t v19 = v22;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)a2 + 8);
  return a1;
}

uint64_t assignWithTake for NavigationDestinationModifier(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 == 255) {
    goto LABEL_4;
  }
  int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 == 255)
  {
    sub_1B5947804(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  char v6 = v4 & 1;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v5 & 1;
  sub_1B590D6F0(v8, v9, v10, v6);
LABEL_6:
  unsigned int v11 = *(unsigned __int8 *)(a1 + 56);
  if (v11 <= 0xFD)
  {
    unsigned int v12 = *(unsigned __int8 *)(a2 + 56);
    if (v12 <= 0xFD)
    {
      uint64_t v13 = *(void *)(a2 + 48);
      uint64_t v14 = *(void *)(a1 + 32);
      uint64_t v15 = *(void *)(a1 + 40);
      uint64_t v16 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = v13;
      *(unsigned char *)(a1 + 56) = v12;
      sub_1B5904A88(v14, v15, v16, v11);
      goto LABEL_11;
    }
    sub_1B590DA50(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  long long v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationDestinationModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NavigationDestinationModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 88) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationDestinationModifier()
{
  return &type metadata for NavigationDestinationModifier;
}

uint64_t sub_1B59A0ED0(char a1)
{
  if (!a1) {
    return 0x6E65736572507369;
  }
  if (a1 == 1) {
    return 0xD000000000000016;
  }
  return 0x74616E6974736564;
}

uint64_t sub_1B59A0F3C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B59ECED4(*a1, *a2);
}

uint64_t sub_1B59A0F48()
{
  return sub_1B59F19FC();
}

uint64_t sub_1B59A0F50()
{
  return sub_1B59F2EF4();
}

uint64_t sub_1B59A0F58()
{
  return sub_1B59F7198();
}

uint64_t sub_1B59A0F60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59A2100();
  *a1 = result;
  return result;
}

uint64_t sub_1B59A0F90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59A0ED0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59A0FBC()
{
  return sub_1B59A0ED0(*v0);
}

uint64_t sub_1B59A0FC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59A2100();
  *a1 = result;
  return result;
}

uint64_t sub_1B59A0FEC(uint64_t a1)
{
  unint64_t v2 = sub_1B59A1DF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59A1028(uint64_t a1)
{
  unint64_t v2 = sub_1B59A1DF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59A1064@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64EE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v22 = 0uLL;
  uint64_t v23 = 0;
  char v24 = -1;
  uint64_t v26 = 0;
  long long v25 = 0uLL;
  char v27 = -2;
  uint64_t v9 = a1[3];
  long long v17 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1B59A1DF8();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    sub_1B590F034(0, 0, 0, 0xFFu);
    return sub_1B5904B4C(0, 0, 0, 0xFEu);
  }
  else
  {
    uint64_t v15 = a2;
    uint64_t v16 = v6;
    LOBYTE(v18) = 0;
    if (sub_1B5A1C5F8())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
      char v29 = 0;
      sub_1B59095C8((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
      sub_1B5A1C5D8();
      uint64_t v14 = 0;
      long long v13 = 0uLL;
      long long v22 = v18;
      uint64_t v12 = v19;
      uint64_t v23 = v19;
      char v24 = (char)v20;
      uint64_t v10 = v16;
    }
    else
    {
      LOBYTE(v18) = 1;
      if (sub_1B5A1C5F8())
      {
        char v29 = 1;
        sub_1B5904A34();
        sub_1B5A1C5D8();
        uint64_t v10 = v16;
        uint64_t v12 = 0;
        long long v13 = v18;
        long long v25 = v18;
        uint64_t v14 = v19;
        uint64_t v26 = v19;
        char v27 = (char)v20;
      }
      else
      {
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        uint64_t v12 = 0;
        uint64_t v10 = v16;
      }
    }
    char v29 = 2;
    uint64_t v20 = &type metadata for ViewContent;
    unint64_t v21 = sub_1B5914034();
    *(void *)&long long v18 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
    sub_1B5908BE8(&v18, (uint64_t)&v28);
    sub_1B59A1BD8((uint64_t *)&v22, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return sub_1B59A1EC4((uint64_t)&v22);
  }
}

uint64_t sub_1B59A14BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v6 = *(unsigned __int8 *)(v3 + 24);
  uint64_t v46 = a3;
  uint64_t v37 = (_DWORD *)a2;
  if (v6 == 255)
  {
    uint64_t v38 = v4;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)v3;
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v9 = *(void *)(v3 + 16);
  sub_1B590D634(*(void *)v3, v7, v9, v6 & 1);
  sub_1B59966F8(a2, v8, v7, v9, v6 & 1);
  if (v4)
  {

    sub_1B590F034(v8, v7, v9, v6);
    uint64_t v38 = 0;
LABEL_5:
    uint64_t v14 = a1[3];
    uint64_t v13 = a1[4];
    os_log_type_t v36 = __swift_project_boxed_opaque_existential_1(a1, v14);
    sub_1B59A1BD8((uint64_t *)v3, (uint64_t)&v39);
    uint64_t v15 = swift_allocObject();
    long long v16 = v44;
    *(_OWORD *)(v15 + 80) = v43;
    *(_OWORD *)(v15 + 96) = v16;
    uint64_t v17 = v45;
    long long v18 = v40;
    *(_OWORD *)(v15 + 16) = v39;
    *(_OWORD *)(v15 + 32) = v18;
    long long v19 = v42;
    *(_OWORD *)(v15 + 48) = v41;
    *(_OWORD *)(v15 + 64) = v19;
    uint64_t v20 = v37;
    *(void *)(v15 + 112) = v17;
    *(void *)(v15 + 120) = v20;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64ED8);
    unint64_t v22 = sub_1B591EF2C();
    unint64_t v23 = sub_1B59A1C90();
    *(void *)&long long v39 = v14;
    *((void *)&v39 + 1) = &type metadata for DecodableState;
    *(void *)&long long v40 = v21;
    *((void *)&v40 + 1) = v13;
    uint64_t v24 = v13;
    *(void *)&long long v41 = v22;
    *((void *)&v41 + 1) = v23;
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t v26 = v46;
    v46[3] = OpaqueTypeMetadata2;
    *(void *)&long long v39 = v14;
    *((void *)&v39 + 1) = &type metadata for DecodableState;
    *(void *)&long long v40 = v21;
    *((void *)&v40 + 1) = v24;
    *(void *)&long long v41 = v22;
    *((void *)&v41 + 1) = v23;
    v26[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v26);
    swift_retain();
    sub_1B5A1B5C8();
    return swift_release();
  }
  uint64_t v38 = 0;
  os_log_type_t v36 = v11;
  v35[3] = v12;
  sub_1B590F034(v8, v7, v9, v6);
  uint64_t v29 = a1[3];
  uint64_t v28 = a1[4];
  uint64_t v30 = __swift_project_boxed_opaque_existential_1(a1, v29);
  uint64_t v37 = v35;
  MEMORY[0x1F4188790](v30);
  uint64_t v31 = MEMORY[0x1E4F3EE00];
  *(void *)&long long v39 = v29;
  *((void *)&v39 + 1) = MEMORY[0x1E4F3EE00];
  uint64_t v32 = MEMORY[0x1E4F3EDF8];
  *(void *)&long long v40 = v28;
  *((void *)&v40 + 1) = MEMORY[0x1E4F3EDF8];
  uint64_t v33 = swift_getOpaqueTypeMetadata2();
  uint64_t v34 = v46;
  v46[3] = v33;
  *(void *)&long long v39 = v29;
  *((void *)&v39 + 1) = v31;
  *(void *)&long long v40 = v28;
  *((void *)&v40 + 1) = v32;
  v34[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v34);
  sub_1B5A1B5B8();
  swift_release();
  return swift_release();
}

uint64_t sub_1B59A1824@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v24 = *a1;
  uint64_t v7 = a2[11];
  uint64_t v8 = a2[12];
  __swift_project_boxed_opaque_existential_1(a2 + 8, v7);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  unint64_t v10 = sub_1B59030D8(MEMORY[0x1E4FBC860]);
  unint64_t v11 = sub_1B5902F98(v9);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = qword_1E9D65378;
  swift_retain();
  swift_retain();
  *(void *)(v12 + v13) = sub_1B5902F98(v9);
  *(void *)(v12 + qword_1E9D65380) = a3;
  swift_retain_n();
  swift_release();
  uint64_t v14 = sub_1B59038C0(a3);
  swift_retain();
  sub_1B590505C(v10, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B5904C58);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v15 = (unint64_t *)(v14 + qword_1E9D65378);
  swift_beginAccess();
  *uint64_t v15 = v11;
  swift_bridgeObjectRelease();
  sub_1B59776E8();
  uint64_t v16 = sub_1B5A1A348();
  sub_1B59A1BD8(a2, (uint64_t)v25);
  uint64_t v17 = swift_allocObject();
  long long v18 = v25[5];
  *(_OWORD *)(v17 + 80) = v25[4];
  *(_OWORD *)(v17 + 96) = v18;
  uint64_t v19 = v26;
  long long v20 = v25[1];
  *(_OWORD *)(v17 + 16) = v25[0];
  *(_OWORD *)(v17 + 32) = v20;
  long long v21 = v25[3];
  *(_OWORD *)(v17 + 48) = v25[2];
  *(_OWORD *)(v17 + 64) = v21;
  *(void *)(v17 + 112) = v19;
  *(void *)(v17 + 120) = a3;
  *(void *)(v17 + 128) = v24;
  *a4 = v23;
  a4[1] = v16;
  a4[2] = v14;
  a4[3] = (uint64_t)sub_1B59A1DEC;
  a4[4] = v17;
  a4[5] = 0;
  a4[6] = 0;
  swift_retain();
  return swift_retain();
}

uint64_t sub_1B59A1A58(uint64_t result, uint64_t a2, uint64_t a3)
{
  unsigned int v3 = *(unsigned __int8 *)(result + 56);
  if (v3 <= 0xFD)
  {
    uint64_t v9 = *(void *)(result + 32);
    uint64_t v10 = *(void *)(result + 40);
    uint64_t v11 = *(void *)(result + 48);
    sub_1B5904B60(v9, v10, v11, v3);
    unint64_t v6 = StringResolvable.resolved(with:)(a2);
    uint64_t v8 = v7;
    sub_1B5904B4C(v9, v10, v11, v3);
    swift_retain();
    return sub_1B59C87D8(a3, v6, v8);
  }
  return result;
}

uint64_t sub_1B59A1B44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59A1064(a1, a2);
}

unint64_t sub_1B59A1B5C(uint64_t a1)
{
  unint64_t result = sub_1B59A1B84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59A1B84()
{
  unint64_t result = qword_1E9D64ED0;
  if (!qword_1E9D64ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64ED0);
  }
  return result;
}

uint64_t sub_1B59A1BD8(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B59A1C10()
{
  int v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 != 255) {
    sub_1B590D6F0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v1 & 1);
  }
  unsigned int v2 = *(unsigned __int8 *)(v0 + 72);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), v2);
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_release();
  return MEMORY[0x1F4186498](v0, 128, 7);
}

uint64_t sub_1B59A1C84@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B59A1824(a1, (uint64_t *)(v2 + 16), *(void *)(v2 + 120), a2);
}

unint64_t sub_1B59A1C90()
{
  unint64_t result = qword_1E9D64EE0;
  if (!qword_1E9D64EE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64ED8);
    sub_1B59080C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64EE0);
  }
  return result;
}

uint64_t sub_1B59A1D0C@<X0>(uint64_t *a1@<X8>)
{
  unsigned int v3 = *(void **)(v1 + 16);
  uint64_t v4 = v3[11];
  uint64_t v5 = v3[12];
  __swift_project_boxed_opaque_existential_1(v3 + 8, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  *a1 = result;
  return result;
}

uint64_t sub_1B59A1D6C()
{
  int v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 != 255) {
    sub_1B590D6F0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v1 & 1);
  }
  unsigned int v2 = *(unsigned __int8 *)(v0 + 72);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), v2);
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 136, 7);
}

uint64_t sub_1B59A1DEC()
{
  return sub_1B59A1A58(v0 + 16, *(void *)(v0 + 120), *(void *)(v0 + 128));
}

unint64_t sub_1B59A1DF8()
{
  unint64_t result = qword_1E9D64EF0;
  if (!qword_1E9D64EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64EF0);
  }
  return result;
}

uint64_t sub_1B59A1E4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B59A1EC4(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for NavigationDestinationModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59A1FC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationDestinationModifier.CodingKeys()
{
  return &type metadata for NavigationDestinationModifier.CodingKeys;
}

unint64_t sub_1B59A1FFC()
{
  unint64_t result = qword_1E9D64EF8;
  if (!qword_1E9D64EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64EF8);
  }
  return result;
}

unint64_t sub_1B59A2054()
{
  unint64_t result = qword_1E9D64F00;
  if (!qword_1E9D64F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64F00);
  }
  return result;
}

unint64_t sub_1B59A20AC()
{
  unint64_t result = qword_1E9D64F08[0];
  if (!qword_1E9D64F08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9D64F08);
  }
  return result;
}

uint64_t sub_1B59A2100()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t Referenceable<>.resolvedValue(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v39 = a1;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = sub_1B5A1C2B8();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v37 = (char *)&v33 - v11;
  uint64_t v12 = *(void *)(v8 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (uint64_t *)((char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 16))(v17, v4, a2);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v12 + 32))(a4, v17, v8);
  }
  uint64_t v34 = a4;
  uint64_t v35 = v5;
  uint64_t v19 = *v17;
  uint64_t v20 = v17[1];
  uint64_t v21 = v17[2];
  if ((~v21 & 0xF000000000000007) != 0)
  {
    swift_retain();
    uint64_t v26 = v39;
    RemoteStateStore.subscript.getter(v19, v20, &v41);
    uint64_t v27 = v41;
    if ((~v41 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRelease();
      unint64_t v41 = v21;
      unint64_t v40 = v27;
      uint64_t v31 = type metadata accessor for SubReference();
      sub_1B59E5934(&v40, v26, v31, v38);
      sub_1B5905298(v21);
      sub_1B599FF94(v27);
    }
    else
    {
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v28 = v19;
      *(void *)(v28 + 8) = v20;
      *(void *)(v28 + 16) = v8;
      *(unsigned char *)(v28 + 32) = 0;
      swift_willThrow();
      sub_1B5905298(v21);
    }
    return sub_1B5905298(v21);
  }
  else
  {
    RemoteStateStore.subscript.getter(v19, v20, &v41);
    uint64_t v22 = v41;
    if ((~v41 & 0xF000000000000007) != 0)
    {
      unint64_t v40 = v41;
      uint64_t v29 = v37;
      uint64_t v30 = v35;
      sub_1B59546FC(v8, v38);
      sub_1B599FF94(v22);
      if (v30)
      {
        return swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v8);
        swift_bridgeObjectRelease();
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v32(v15, v29, v8);
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v32)(v34, v15, v8);
      }
    }
    else
    {
      uint64_t v23 = v37;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v37, 1, 1, v8);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v9);
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v24 = v19;
      *(void *)(v24 + 8) = v20;
      *(void *)(v24 + 16) = v8;
      *(unsigned char *)(v24 + 32) = 0;
      return swift_willThrow();
    }
  }
}

uint64_t Referenceable.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v36 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  long long v43 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D645B8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a3;
  uint64_t v42 = a2;
  uint64_t v16 = type metadata accessor for Referenceable();
  uint64_t v38 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v37 = (uint64_t *)((char *)&v36 - v20);
  uint64_t v21 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1B5965A38();
  sub_1B5A1C838();
  if (v4)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    sub_1B5908FC0((uint64_t)v11, &qword_1E9D645B0);
LABEL_3:
    uint64_t v22 = v46;
    uint64_t v23 = v43;
    __swift_project_boxed_opaque_existential_1(v46, v46[3]);
    sub_1B5A1C818();
    sub_1B5908BE8(&v44, (uint64_t)v45);
    __swift_project_boxed_opaque_existential_1(v45, v45[3]);
    uint64_t v27 = v42;
    sub_1B5A1C6C8();
    uint64_t v29 = v37;
    (*(void (**)(uint64_t *, char *, uint64_t))(v36 + 32))(v37, v23, v27);
    uint64_t v30 = v39;
    swift_storeEnumTagMultiPayload();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
LABEL_8:
    uint64_t v35 = v40;
    uint64_t v34 = v38;
    goto LABEL_9;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  LOBYTE(v45[0]) = 0;
  if (sub_1B5A1C5F8())
  {
    LOBYTE(v45[0]) = 0;
    uint64_t v24 = sub_1B5A1C5C8();
    uint64_t v26 = v25;
    type metadata accessor for SubReference();
    LOBYTE(v44) = 1;
    swift_getWitnessTable();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v33 = v45[0];
    uint64_t v29 = v37;
    *uint64_t v37 = v24;
    v29[1] = v26;
    v29[2] = v33;
    uint64_t v30 = v39;
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = v46;
    goto LABEL_8;
  }
  LOBYTE(v45[0]) = 2;
  if ((sub_1B5A1C5F8() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    goto LABEL_3;
  }
  LOBYTE(v45[0]) = 2;
  uint64_t v28 = sub_1B5A1C5C8();
  sub_1B59CEFDC(v28, v31, v42, v19);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_bridgeObjectRelease();
  uint64_t v29 = v37;
  uint64_t v34 = v38;
  uint64_t v30 = v39;
  (*(void (**)(uint64_t *, char *, uint64_t))(v38 + 32))(v37, v19, v39);
  uint64_t v22 = v46;
  uint64_t v35 = v40;
LABEL_9:
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v34 + 32))(v35, v29, v30);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t Referenceable<>.resolvedBinding(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v60 = a4;
  uint64_t v57 = a3;
  uint64_t v59 = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  sub_1B5A1C2B8();
  uint64_t v6 = sub_1B5A1BAD8();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v58 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v56 = (char *)&v51 - v9;
  uint64_t v10 = sub_1B5A1BAD8();
  uint64_t v11 = sub_1B5A1C2B8();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v15);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (uint64_t *)((char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v24 + 16))(v23, v69, a2);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v18 + 32))(v21, v23, v5);
    sub_1B5A1BAC8();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v5);
  }
  uint64_t v52 = v17;
  uint64_t v53 = a2;
  uint64_t v69 = v5;
  uint64_t v25 = v59;
  uint64_t v54 = v11;
  uint64_t v27 = *v23;
  uint64_t v26 = v23[1];
  uint64_t v28 = v23[2];
  if ((~v28 & 0xF000000000000007) != 0)
  {
    uint64_t v34 = (void *)swift_allocObject();
    _OWORD v34[2] = 0;
    v34[3] = 0;
    v34[4] = v25;
    v34[5] = v27;
    v34[6] = v26;
    uint64_t v35 = (void *)swift_allocObject();
    v35[2] = 0;
    v35[3] = 0;
    _DWORD v35[4] = v25;
    v35[5] = v27;
    uint64_t v36 = v27;
    v35[6] = v26;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1B590968C(v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
    sub_1B5A1BAB8();
    long long v62 = v64;
    uint64_t v63 = v65;
    sub_1B5A1BAE8();
    uint64_t v37 = v67;
    uint64_t v38 = v69;
    if (v67)
    {
      uint64_t v39 = v25;
      uint64_t v40 = v66;
      uint64_t v41 = v68;
      swift_bridgeObjectRelease();
      *(void *)&long long v64 = v28;
      uint64_t v66 = v40;
      uint64_t v67 = v37;
      uint64_t v68 = v41;
      uint64_t v42 = type metadata accessor for SubReference();
      uint64_t v43 = v61;
      sub_1B59E50BC(&v66, v39, v42, v57);
      uint64_t v44 = v60;
      if (v43)
      {
        sub_1B5905298(v28);
        sub_1B599F540(v40, v37);
        return sub_1B5905298(v28);
      }
      uint64_t v58 = v40;
      uint64_t v59 = v41;
      uint64_t v61 = v37;
      uint64_t v46 = v52;
      sub_1B5A1BAE8();
      uint64_t v47 = v10;
      uint64_t v48 = v46;
      uint64_t v49 = *(void *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v48, 1, v47) != 1)
      {
        sub_1B5905298(v28);
        sub_1B599F540(v58, v61);
        sub_1B5905298(v28);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v44, v48, v47);
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v54);
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v50 = 1;
      *(void *)(v50 + 8) = 0;
      *(void *)(v50 + 16) = 0;
      *(void *)(v50 + 24) = 0;
      *(unsigned char *)(v50 + 32) = 5;
      swift_willThrow();
      sub_1B599F540(v58, v61);
    }
    else
    {
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v45 = v36;
      *(void *)(v45 + 8) = v26;
      *(void *)(v45 + 16) = v38;
      *(unsigned char *)(v45 + 32) = 0;
      swift_willThrow();
    }
    sub_1B5905298(v28);
    return sub_1B5905298(v28);
  }
  uint64_t v29 = v14;
  uint64_t v30 = v69;
  RemoteStateStore.binding<A>(forKey:)(v27, v26, v69, v57);
  sub_1B5A1BAE8();
  uint64_t v31 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v54);
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v32 = v27;
    *(void *)(v32 + 8) = v26;
    *(void *)(v32 + 16) = v30;
    *(unsigned char *)(v32 + 32) = 0;
    return swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v60, v29, v10);
  }
}

void sub_1B59A3298(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((v2[3] & 1) == 0)
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    char v11 = -1;
LABEL_8:
    *(unsigned char *)(a2 + 24) = v11;
    return;
  }
  uint64_t v5 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  uint64_t v9 = *v2;
  uint64_t v8 = v2[1];
  if ((~v2[2] & 0xF000000000000007) != 0)
  {
    uint64_t v15 = v2[2];
    v13[0] = v5;
    v13[1] = v4;
    _OWORD v13[2] = v6;
    char v14 = v7;
    swift_bridgeObjectRetain();
    sub_1B59E5E94((uint64_t)v13, &v16);
    uint64_t v12 = v16;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = v12;
    char v11 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v4;
  *(void *)(v10 + 32) = v6;
  *(unsigned char *)(v10 + 40) = v7;
  *(void *)(v10 + 48) = 0xF000000000000007;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v10 | 0x8000000000000000;
  *(unsigned char *)(a2 + 24) = 1;
  swift_bridgeObjectRetain();
  sub_1B591DF88(v5, v4, v6, v7);
}

uint64_t sub_1B59A33C8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1B596926C(0, v3, 0);
    uint64_t v4 = v12;
    uint64_t v6 = (uint64_t *)(a1 + 32);
    unint64_t v7 = *(void *)(v12 + 16);
    do
    {
      uint64_t v9 = *v6++;
      uint64_t v8 = v9;
      unint64_t v10 = *(void *)(v12 + 24);
      swift_retain();
      if (v7 >= v10 >> 1) {
        sub_1B596926C(v10 > 1, v7 + 1, 1);
      }
      *(void *)(v12 + 16) = v7 + 1;
      *(void *)(v12 + 8 * v7++ + 32) = v8;
      --v3;
    }
    while (v3);
  }
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v4;
  *a2 = result | 0x8000000000000000;
  return result;
}

uint64_t sub_1B59A34BC@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1B596926C(0, v3, 0);
    uint64_t v4 = v12;
    uint64_t v6 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v7;
      unint64_t v10 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      if (v10 >= v9 >> 1) {
        sub_1B596926C(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v12 + 16) = v10 + 1;
      *(void *)(v12 + 8 * v10 + 32) = v8 | 0x2000000000000000;
      --v3;
    }
    while (v3);
  }
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v4;
  *a2 = result | 0x8000000000000000;
  return result;
}

uint64_t sub_1B59A35C4(char a1)
{
  return *(void *)&aReferencsubref[8 * a1];
}

uint64_t sub_1B59A35E4(char *a1, char *a2)
{
  return sub_1B59EDE00(*a1, *a2);
}

uint64_t sub_1B59A35F0()
{
  return sub_1B59F1AB4();
}

uint64_t sub_1B59A35F8()
{
  return sub_1B59F37F4();
}

uint64_t sub_1B59A3600()
{
  return sub_1B59F6728();
}

uint64_t sub_1B59A3608@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59A6C74();
  *a1 = result;
  return result;
}

uint64_t sub_1B59A3638@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59A35C4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59A3664()
{
  return sub_1B59A35C4(*v0);
}

uint64_t sub_1B59A366C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59A6C74();
  *a1 = result;
  return result;
}

uint64_t sub_1B59A3694(uint64_t a1)
{
  unint64_t v2 = sub_1B5965A38();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59A36D0(uint64_t a1)
{
  unint64_t v2 = sub_1B5965A38();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Referenceable.addingSubReference(subReference:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = (uint64_t *)MEMORY[0x1F4188790](a1);
  unint64_t v10 = (uint64_t *)((char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *v8;
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16);
  v12(v10, v4, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = *v10;
    uint64_t v13 = v10[1];
    uint64_t v15 = v10[2];
    if ((~v15 & 0xF000000000000007) != 0)
    {
      v26[0] = v11;
      v26[1] = v15;
      uint64_t v24 = type metadata accessor for SubReference();
      sub_1B59E4EC4(v26, v24, &v27);
      sub_1B5905298(v15);
      uint64_t v25 = v27;
      *a3 = v14;
      a3[1] = v13;
      a3[2] = v25;
      return swift_storeEnumTagMultiPayload();
    }
    else
    {
      *a3 = v14;
      a3[1] = v13;
      a3[2] = v11;
      swift_storeEnumTagMultiPayload();
      return sub_1B590968C(v11);
    }
  }
  else
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1B5A1A328();
    __swift_project_value_buffer(v17, (uint64_t)qword_1E9D910D0);
    uint64_t v18 = sub_1B5A1A308();
    os_log_type_t v19 = sub_1B5A1C258();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1B58FD000, v18, v19, "Attempting to add a subreference to a value", v20, 2u);
      MEMORY[0x1BA9A4780](v20, -1, -1);
    }

    sub_1B59619AC();
    swift_allocError();
    uint64_t v22 = v21;
    uint64_t v21[3] = a2;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
    v12(boxed_opaque_existential_1, v4, a2);
    *((unsigned char *)v22 + 32) = 2;
    swift_willThrow();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v10, a2);
  }
}

uint64_t sub_1B59A39AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Referenceable.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t type metadata accessor for Referenceable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Referenceable<>.setValue(store:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v33)(unint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  uint64_t v54 = a4;
  uint64_t v50 = a2;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = sub_1B5A1C2B8();
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v56 = v7;
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v51 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16);
  v17(v16, v4, a3);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1B59619AC();
    swift_allocError();
    uint64_t v26 = v25;
    v25[3] = a3;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
    v17(boxed_opaque_existential_1, v4, a3);
    *((unsigned char *)v26 + 32) = 2;
    swift_willThrow();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, a3);
  }
  uint64_t v19 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v20 = v16[2];
  RemoteStateStore.subscript.getter(*v16, v18, &v59);
  uint64_t v21 = v59;
  if ((~v59 & 0xF000000000000007) == 0)
  {
    uint64_t v22 = v56;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v11, 1, 1, v56);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v8);
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v23 = v19;
    *(void *)(v23 + 8) = v18;
    *(void *)(v23 + 16) = v22;
    *(unsigned char *)(v23 + 32) = 0;
    swift_willThrow();
    return sub_1B5905298(v20);
  }
  uint64_t v52 = v19;
  uint64_t v58 = v59;
  uint64_t v28 = v56;
  uint64_t v29 = v53;
  uint64_t v30 = v54;
  sub_1B59546FC(v56, v54);
  sub_1B599FF94(v21);
  uint64_t v53 = v29;
  if (v29)
  {
    sub_1B5905298(v20);
    return swift_bridgeObjectRelease();
  }
  uint64_t v47 = v18;
  uint64_t v48 = v20;
  uint64_t v49 = a1;
  uint64_t v31 = v55;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v11, 0, 1, v28);
  uint64_t v32 = v51;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v51, v11, v28);
  uint64_t v33 = *(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v30 + 8);
  v33(&v59, v28, v30);
  if ((v59 >> 61) < 4)
  {
    swift_release();
    v33(&v59, v28, v30);
    sub_1B59C87D8(v59, v52, v47);
    sub_1B5905298(v48);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v28);
  }
  if (v59 >> 61 == 4)
  {
    uint64_t v34 = v48;
    if ((~v48 & 0xF000000000000007) != 0)
    {
      uint64_t v36 = *(void **)((v59 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v57 = v48;
      uint64_t v37 = *(void *)(a3 + 24);
      swift_retain();
      uint64_t v38 = v36;
      uint64_t v39 = v53;
      sub_1B59A48E8(v38, &v57, v50, v49, v28, v54, v37, (unint64_t *)&v58);
      if (v39)
      {
        (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v28);
        sub_1B5905298(v34);
        swift_bridgeObjectRelease();
        sub_1B5905298(v34);
      }
      else
      {
        uint64_t v45 = v58;
        swift_retain();
        sub_1B59C87D8(v45, v52, v47);
        sub_1B5905298(v34);
        swift_release();
        sub_1B5905298(v34);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v28);
      }
      return swift_release();
    }
LABEL_13:
    v33((unint64_t *)&v58, v28, v54);
    sub_1B59C87D8(v58, v52, v47);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v28);
    return swift_release();
  }
  uint64_t v35 = v48;
  if ((~v48 & 0xF000000000000007) == 0) {
    goto LABEL_13;
  }
  uint64_t v40 = *(void *)((v59 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v57 = v48;
  uint64_t v41 = *(void *)(a3 + 24);
  swift_retain();
  uint64_t v42 = v40;
  uint64_t v43 = v53;
  sub_1B59A408C(v42, &v57, v50, v49, v28, v54, v41, (unint64_t *)&v58);
  if (v43)
  {

    uint64_t v44 = 0xF000000000000007;
  }
  else
  {
    uint64_t v44 = v58;
    swift_retain();
  }
  uint64_t v46 = v55;
  sub_1B59C87D8(v44, v52, v47);
  sub_1B5905298(v35);
  sub_1B599FF94(v44);
  sub_1B5905298(v35);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v51, v28);
  return swift_release();
}

uint64_t sub_1B59A408C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t *a8@<X8>)
{
  uint64_t v9 = *a2;
  if ((*a2 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = *(void *)(v9 + 24);
    uint64_t v14 = *(void *)(v9 + 32);
    unsigned __int8 v15 = *(unsigned char *)(v9 + 40);
    uint64_t v16 = *(void *)(v9 + 48);
    v70[0] = *(void *)(v9 + 16);
    uint64_t v12 = v70[0];
    v70[1] = v13;
    v70[2] = v14;
    unsigned __int8 v71 = v15;
    swift_bridgeObjectRetain();
    sub_1B5904B60(v70[0], v13, v14, v15);
    sub_1B590968C(v16);
    unint64_t v17 = StringResolvable.resolved(with:)(a4);
    if (v8)
    {
      swift_bridgeObjectRelease();
      sub_1B5905298(v16);
      uint64_t v19 = v70[0];
      uint64_t v20 = v13;
      uint64_t v21 = v14;
      unsigned __int8 v22 = v15;
      return sub_1B5904A88(v19, v20, v21, v22);
    }
    uint64_t v29 = a4;
    uint64_t v30 = v17;
    uint64_t v59 = v29;
    unint64_t v31 = v18;
    uint64_t v60 = v70[0];
    uint64_t v61 = v13;
    uint64_t v62 = v14;
    if ((~v16 & 0xF000000000000007) == 0)
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(a6 + 8))(v70, a5);
      uint64_t v32 = v70[0];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v72 = a1;
      sub_1B5958B30(v32, v30, v31, isUniquelyReferenced_nonNull_native);
      uint64_t v34 = v72;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B5904A88(v12, v13, v62, v15);
LABEL_12:
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = sub_1B59A5304(v34);
      uint64_t result = swift_bridgeObjectRelease();
      *a8 = v35 | 0xA000000000000000;
      return result;
    }
    uint64_t v36 = v16;
    uint64_t v37 = v18;
    if (*(void *)(a1 + 16))
    {
      sub_1B590968C(v36);
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1B59049B8(v30, v31);
      if (v39)
      {
        unint64_t v40 = *(void *)(*(void *)(a1 + 56) + 8 * v38);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((v40 >> 61) < 4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1E9D62B20 != -1) {
            swift_once();
          }
          uint64_t v41 = sub_1B5A1A328();
          __swift_project_value_buffer(v41, (uint64_t)qword_1E9D910D0);
          uint64_t v42 = sub_1B5A1A308();
          os_log_type_t v43 = sub_1B5A1C278();
          if (os_log_type_enabled(v42, v43))
          {
            uint64_t v44 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v44 = 0;
            _os_log_impl(&dword_1B58FD000, v42, v43, "Referenceable.updatedDict: Have a subreference but next structure is a value", v44, 2u);
            MEMORY[0x1BA9A4780](v44, -1, -1);
          }

          sub_1B59619AC();
          swift_allocError();
          *(void *)uint64_t v45 = 3;
          *(void *)(v45 + 8) = 0;
          *(void *)(v45 + 16) = 0;
          *(void *)(v45 + 24) = 0;
          *(unsigned char *)(v45 + 32) = 5;
          swift_willThrow();
          swift_release();
          sub_1B5905298(v36);
          sub_1B5905298(v36);
          uint64_t v19 = v60;
          uint64_t v20 = v61;
          uint64_t v21 = v62;
          unsigned __int8 v22 = v15;
          return sub_1B5904A88(v19, v20, v21, v22);
        }
        uint64_t v56 = *(void **)((v40 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v72 = v36;
        swift_retain();
        if (v40 >> 61 == 4)
        {
          sub_1B59A48E8(v56, &v72, a3, v59, a5, a6, a7, (unint64_t *)v70);
          uint64_t v54 = v70[0];
          char v55 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v72 = a1;
          sub_1B5958B30(v54, v30, v37, v55);
          uint64_t v34 = v72;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B5905298(v36);
        }
        else
        {
          sub_1B59A408C(v70, v56, &v72, a3, v59, a5, a6, a7);
          uint64_t v57 = v70[0];
          swift_retain();
          char v58 = swift_isUniquelyReferenced_nonNull_native();
          v70[0] = a1;
          sub_1B5958B30(v57, v30, v37, v58);
          uint64_t v34 = v70[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B5905298(v36);
          swift_release();
        }
        swift_release();
        sub_1B5905298(v36);
        sub_1B5904A88(v12, v61, v62, v15);
        swift_release();
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    swift_bridgeObjectRelease();
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_1B5A1A328();
    __swift_project_value_buffer(v46, (uint64_t)qword_1E9D910D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v47 = sub_1B5A1A308();
    os_log_type_t v48 = sub_1B5A1C278();
    if (os_log_type_enabled(v47, v48))
    {
      os_log_type_t typea = v48;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 136315394;
      v70[0] = v66;
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_1B5928EE8(v30, v31, v70);
      sub_1B5A1C2D8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v49 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1B5A1BE28();
      unint64_t v52 = v51;
      swift_bridgeObjectRelease();
      uint64_t v72 = sub_1B5928EE8(v50, v52, v70);
      sub_1B5A1C2D8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B58FD000, v47, typea, "Referenceable.updatedDict: key not found %s dict: %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v66, -1, -1);
      MEMORY[0x1BA9A4780](v49, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v53 = v30;
    *(void *)(v53 + 8) = v37;
    *(unsigned char *)(v53 + 32) = 4;
    swift_willThrow();
    sub_1B5905298(v36);
    sub_1B5905298(v36);
    uint64_t v19 = v12;
    uint64_t v20 = v61;
    uint64_t v21 = v62;
    unsigned __int8 v22 = v15;
    return sub_1B5904A88(v19, v20, v21, v22);
  }
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1B5A1A328();
  __swift_project_value_buffer(v24, (uint64_t)qword_1E9D910D0);
  uint64_t v25 = sub_1B5A1A308();
  os_log_type_t v26 = sub_1B5A1C278();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_1B58FD000, v25, v26, "Referenceable.updatedDict: trying to modify a dictionary using an index subreference", v27, 2u);
    MEMORY[0x1BA9A4780](v27, -1, -1);
  }

  sub_1B59619AC();
  swift_allocError();
  *(void *)uint64_t v28 = 5;
  *(void *)(v28 + 8) = 0;
  *(void *)(v28 + 16) = 0;
  *(void *)(v28 + 24) = 0;
  *(unsigned char *)(v28 + 32) = 5;
  return swift_willThrow();
}

void sub_1B59A48E8(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t *a8@<X8>)
{
  uint64_t v9 = *a2;
  if (*a2 < 0)
  {
    uint64_t v15 = v8;
    uint64_t v19 = *(void *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v20 = *(void *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    char v21 = *(unsigned char *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v22 = *(void *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    v64[0] = *(void *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    v64[1] = v19;
    v64[2] = v20;
    char v65 = v21;
    swift_bridgeObjectRetain();
    uint64_t v62 = v64[0];
    uint64_t v60 = v19;
    uint64_t v61 = v20;
    sub_1B591DF88(v64[0], v19, v20, v21);
    uint64_t v63 = v22;
    sub_1B590968C(v22);
    sub_1B5963948(a4);
    if (v25)
    {
      swift_bridgeObjectRelease();
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1B5A1A328();
      __swift_project_value_buffer(v28, (uint64_t)qword_1E9D910D0);
      uint64_t v29 = sub_1B5A1A308();
      os_log_type_t v30 = sub_1B5A1C258();
      if (os_log_type_enabled(v29, v30))
      {
        unint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v31 = 0;
        _os_log_impl(&dword_1B58FD000, v29, v30, "SubReference to update array, unable to resolve index", v31, 2u);
        MEMORY[0x1BA9A4780](v31, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v32 = 2;
      *(void *)(v32 + 8) = 0;
      *(void *)(v32 + 16) = 0;
      *(void *)(v32 + 24) = 0;
      *(unsigned char *)(v32 + 32) = 5;
      swift_willThrow();
      sub_1B5905298(v63);
      uint64_t v33 = v62;
      uint64_t v34 = v19;
      uint64_t v35 = v61;
      char v36 = v21;
      goto LABEL_27;
    }
    unint64_t v26 = v24;
    if (v24 < 0 || v24 >= a1[2])
    {
      swift_bridgeObjectRelease();
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1B5A1A328();
      __swift_project_value_buffer(v37, (uint64_t)qword_1E9D910D0);
      swift_bridgeObjectRetain_n();
      uint64_t v38 = sub_1B5A1A308();
      os_log_type_t v39 = sub_1B5A1C278();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        v64[0] = v41;
        *(_DWORD *)uint64_t v40 = 134218242;
        uint64_t v66 = v26;
        sub_1B5A1C2D8();
        *(_WORD *)(v40 + 12) = 2080;
        uint64_t v42 = swift_bridgeObjectRetain();
        uint64_t v43 = MEMORY[0x1BA9A3890](v42, &type metadata for DecodableState);
        unint64_t v45 = v44;
        swift_bridgeObjectRelease();
        uint64_t v66 = sub_1B5928EE8(v43, v45, v64);
        sub_1B5A1C2D8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B58FD000, v38, v39, "Referenceable.updatedArray: index out of range idx: %ld array: %s", (uint8_t *)v40, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BA9A4780](v41, -1, -1);
        MEMORY[0x1BA9A4780](v40, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v46 = v26;
      *(unsigned char *)(v46 + 32) = 3;
      swift_willThrow();
      sub_1B5905298(v63);
      uint64_t v33 = v62;
      uint64_t v34 = v60;
      uint64_t v35 = v61;
      char v36 = v21;
      goto LABEL_27;
    }
    if ((~v22 & 0xF000000000000007) == 0)
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 8))(v64, a5, a6);
      uint64_t v27 = v64[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_1B59CC268(a1);
      }
      if (v26 < a1[2])
      {
        a1[v26 + 4] = v27;
        swift_release();
        sub_1B591DF0C(v62, v60, v20, v21);
LABEL_15:
        sub_1B59A33C8((uint64_t)a1, a8);
        swift_bridgeObjectRelease();
        return;
      }
      __break(1u);
      goto LABEL_46;
    }
    unint64_t v47 = a1[v24 + 4];
    if ((v47 >> 61) < 4)
    {
      sub_1B590968C(v22);
      swift_retain();
      swift_bridgeObjectRelease();
      if (qword_1E9D62B20 == -1)
      {
LABEL_30:
        uint64_t v48 = sub_1B5A1A328();
        __swift_project_value_buffer(v48, (uint64_t)qword_1E9D910D0);
        uint64_t v49 = sub_1B5A1A308();
        os_log_type_t v50 = sub_1B5A1C278();
        if (os_log_type_enabled(v49, v50))
        {
          unint64_t v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v51 = 0;
          _os_log_impl(&dword_1B58FD000, v49, v50, "Referenceable.updatedArray: Have a subreference but next structure is a value", v51, 2u);
          MEMORY[0x1BA9A4780](v51, -1, -1);
        }

        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v52 = 3;
        *(void *)(v52 + 8) = 0;
        *(void *)(v52 + 16) = 0;
        *(void *)(v52 + 24) = 0;
        *(unsigned char *)(v52 + 32) = 5;
        swift_willThrow();
        swift_release();
        sub_1B5905298(v63);
        sub_1B5905298(v63);
        uint64_t v33 = v62;
        uint64_t v34 = v60;
        uint64_t v35 = v61;
        char v36 = v21;
LABEL_27:
        sub_1B591DF0C(v33, v34, v35, v36);
        return;
      }
LABEL_46:
      swift_once();
      goto LABEL_30;
    }
    uint64_t v53 = v47 & 0x1FFFFFFFFFFFFFFFLL;
    if (v47 >> 61 == 4)
    {
      uint64_t v54 = *(void *)((v47 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v66 = v22;
      swift_retain();
      sub_1B590968C(v22);
      swift_retain();
      sub_1B59A48E8(v64, v54, &v66, a3, a4, a5, a6, a7);
      if (v15)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        sub_1B5905298(v22);
        swift_release();
        sub_1B591DF0C(v62, v60, v61, v21);
        sub_1B5905298(v22);
        swift_release();
        return;
      }
      uint64_t v55 = v64[0];
      a6 = v64[0] & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_1B59CC268(a1);
      }
      if (v26 < a1[2])
      {
LABEL_44:
        a1[v26 + 4] = v55;
        swift_release();
        sub_1B5905298(v22);
        swift_release();
        sub_1B5905298(v22);
        sub_1B591DF0C(v62, v60, v61, v21);
        swift_release();
        swift_release();
        goto LABEL_15;
      }
      __break(1u);
    }
    uint64_t v56 = *(void *)(v53 + 16);
    uint64_t v66 = v22;
    swift_retain();
    sub_1B590968C(v22);
    swift_retain();
    sub_1B59A408C(v64, v56, &v66, a3, a4, a5, a6, a7);
    if (v15) {
      goto LABEL_40;
    }
    uint64_t v55 = v64[0];
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a1 = sub_1B59CC268(a1);
    }
    if (v26 >= a1[2])
    {
      __break(1u);
      return;
    }
    goto LABEL_44;
  }
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1B5A1A328();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9D910D0);
  uint64_t v11 = sub_1B5A1A308();
  os_log_type_t v12 = sub_1B5A1C278();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1B58FD000, v11, v12, "Referenceable.updatedArray: trying to modify an array using an key subreference", v13, 2u);
    MEMORY[0x1BA9A4780](v13, -1, -1);
  }

  sub_1B59619AC();
  swift_allocError();
  *(void *)uint64_t v14 = 4;
  *(void *)(v14 + 8) = 0;
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  *(unsigned char *)(v14 + 32) = 5;
  swift_willThrow();
}

uint64_t sub_1B59A51A4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, void *a3@<X8>)
{
  uint64_t result = RemoteStateStore.subscript.getter(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t sub_1B59A51EC@<X0>(void *a1@<X8>)
{
  uint64_t result = RemoteStateStore.subscript.getter(*(void *)(v1 + 40), *(void *)(v1 + 48), &v4);
  *a1 = v4;
  return result;
}

void *sub_1B59A5230(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_1B5A1C548();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_1B59A52D4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1B59A5304(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E50);
  uint64_t result = sub_1B5A1C518();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = 8 * i;
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    uint64_t v19 = *v16;
    uint64_t v20 = v16[1];
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    char v21 = (void *)(v3[6] + 16 * i);
    *char v21 = v19;
    v21[1] = v20;
    *(void *)(v3[7] + v17) = v18;
    uint64_t v22 = v3[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    swift_retain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B59A54C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  sub_1B59A0838(*a1);
  swift_bridgeObjectRetain();
  return sub_1B59C87D8(v8, a5, a6);
}

uint64_t sub_1B59A5524(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *a1;
  sub_1B59A0838(*a1);
  swift_bridgeObjectRetain();
  return sub_1B59C87D8(v4, v2, v3);
}

uint64_t sub_1B59A5578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1B59A5580()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1B59A5614(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x18uLL) {
    uint64_t v5 = 24;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2) {
      unsigned int v9 = *(_DWORD *)a2 + 2;
    }
    if (v9 == 1)
    {
      uint64_t v10 = a2[1];
      *uint64_t v3 = *a2;
      v3[1] = v10;
      uint64_t v11 = a2[2];
      swift_bridgeObjectRetain();
      if ((~v11 & 0xF000000000000007) != 0) {
        swift_retain();
      }
      v3[2] = v11;
      *((unsigned char *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_1B59A573C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v3 <= 0x18) {
    unint64_t v3 = 24;
  }
  unsigned int v4 = a1[v3];
  unsigned int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        int v8 = (v7 | (v5 << (8 * v3))) + 2;
        unsigned int v4 = v7 + 2;
        if (v3 < 4) {
          unsigned int v4 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v4 == 1)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if ((~*((void *)a1 + 2) & 0xF000000000000007) != 0)
    {
      return swift_release();
    }
  }
  else
  {
    uint64_t v10 = *(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
    return v10();
  }
  return result;
}

void *sub_1B59A58A8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL) {
    uint64_t v4 = 24;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    uint64_t v11 = *((void *)a2 + 2);
    swift_bridgeObjectRetain();
    if ((~v11 & 0xF000000000000007) != 0) {
      swift_retain();
    }
    a1[2] = v11;
    char v12 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v12 = 0;
  }
  *((unsigned char *)a1 + v4) = v12;
  return a1;
}

unsigned __int8 *sub_1B59A5A08(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x18uLL) {
      uint64_t v7 = 24;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
      if ((~*((void *)a1 + 2) & 0xF000000000000007) != 0) {
        swift_release();
      }
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      uint64_t v18 = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      if ((~v18 & 0xF000000000000007) != 0) {
        swift_retain();
      }
      *((void *)a1 + 2) = v18;
      char v19 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v19 = 0;
    }
    a1[v7] = v19;
  }
  return a1;
}

uint64_t sub_1B59A5C60(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL) {
    uint64_t v4 = 24;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    char v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1B59A5DA0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x18uLL) {
      uint64_t v7 = 24;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
      if ((~*((void *)a1 + 2) & 0xF000000000000007) != 0) {
        swift_release();
      }
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1B59A5FD8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 24;
  if (*(void *)(v3 + 64) > 0x18uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1B59A610C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x18) {
    unint64_t v5 = 24;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1B59A62D4);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B59A62FC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 24;
  if (*(void *)(v2 + 64) > 0x18uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1B59A63B4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL) {
    size_t v4 = 24;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

unsigned char *storeEnumTagSinglePayload for ReferenceCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59A6558);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferenceCodingKeys()
{
  return &type metadata for ReferenceCodingKeys;
}

uint64_t destroy for ReferenceableError(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 32);
  if (v1 >= 5) {
    unsigned int v1 = *(_DWORD *)result + 5;
  }
  switch(v1)
  {
    case 0u:
    case 4u:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1u:
      uint64_t result = swift_release();
      break;
    case 2u:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for ReferenceableError(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 32);
  if (v3 >= 5) {
    unsigned int v3 = *(_DWORD *)a2 + 5;
  }
  switch(v3)
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(unsigned char *)(a1 + 32) = 0;
      goto LABEL_11;
    case 1u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 32) = 1;
      swift_retain();
      return a1;
    case 2u:
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      (**(void (***)(uint64_t))(v6 - 8))(a1);
      char v5 = 2;
      goto LABEL_9;
    case 3u:
      *(void *)a1 = *(void *)a2;
      char v5 = 3;
      goto LABEL_9;
    case 4u:
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      *(unsigned char *)(a1 + 32) = 4;
LABEL_11:
      swift_bridgeObjectRetain();
      return a1;
    default:
      long long v4 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v4;
      char v5 = *(unsigned char *)(a2 + 32);
LABEL_9:
      *(unsigned char *)(a1 + 32) = v5;
      return a1;
  }
}

uint64_t assignWithCopy for ReferenceableError(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    switch(v4)
    {
      case 0u:
      case 4u:
        swift_bridgeObjectRelease();
        break;
      case 1u:
        swift_release();
        break;
      case 2u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      default:
        break;
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 32);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(unsigned char *)(a1 + 32) = 0;
        goto LABEL_17;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 32) = 1;
        swift_retain();
        break;
      case 2u:
        uint64_t v8 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v8;
        (**(void (***)(uint64_t, long long *))(v8 - 8))(a1, a2);
        *(unsigned char *)(a1 + 32) = 2;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 32) = 3;
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(unsigned char *)(a1 + 32) = 4;
LABEL_17:
        swift_bridgeObjectRetain();
        break;
      default:
        long long v6 = *a2;
        long long v7 = a2[1];
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        *(_OWORD *)a1 = v6;
        *(_OWORD *)(a1 + 16) = v7;
        break;
    }
  }
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ReferenceableError(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    switch(v4)
    {
      case 0u:
      case 4u:
        swift_bridgeObjectRelease();
        break;
      case 1u:
        swift_release();
        break;
      case 2u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      default:
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 0u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 32) = 0;
        return a1;
      case 1u:
        *(void *)a1 = *(void *)a2;
        char v7 = 1;
        goto LABEL_17;
      case 2u:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        char v7 = 2;
        goto LABEL_17;
      case 3u:
        *(void *)a1 = *(void *)a2;
        char v7 = 3;
        goto LABEL_17;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v7 = 4;
        goto LABEL_17;
      default:
        long long v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        char v7 = *(unsigned char *)(a2 + 32);
LABEL_17:
        *(unsigned char *)(a1 + 32) = v7;
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferenceableError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 >= 6) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ReferenceableError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B59A6B1C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 32);
  if (result >= 5) {
    return (*(_DWORD *)a1 + 5);
  }
  return result;
}

uint64_t sub_1B59A6B38(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ReferenceableError()
{
  return &type metadata for ReferenceableError;
}

unint64_t sub_1B59A6B70()
{
  unint64_t result = qword_1E9D64F90;
  if (!qword_1E9D64F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64F90);
  }
  return result;
}

unint64_t sub_1B59A6BC8()
{
  unint64_t result = qword_1E9D64F98;
  if (!qword_1E9D64F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64F98);
  }
  return result;
}

unint64_t sub_1B59A6C20()
{
  unint64_t result = qword_1E9D64FA0;
  if (!qword_1E9D64FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64FA0);
  }
  return result;
}

uint64_t sub_1B59A6C74()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B59A6CC0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B59A6D28()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B59A6D38()
{
  sub_1B591DF0C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  if ((~*(void *)(v0 + 48) & 0xF000000000000007) != 0) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 56, 7);
}

ValueMetadata *type metadata accessor for IdentifierModifier()
{
  return &type metadata for IdentifierModifier;
}

uint64_t sub_1B59A6DA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_1B5904A34();
    sub_1B5A1C6C8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *(_OWORD *)a2 = v6;
    *(void *)(a2 + 16) = v7;
    *(unsigned char *)(a2 + 24) = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59A6E94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59A6DA4(a1, a2);
}

unint64_t sub_1B59A6EAC(uint64_t a1)
{
  unint64_t result = sub_1B59A6ED4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59A6ED4()
{
  unint64_t result = qword_1E9D64FA8;
  if (!qword_1E9D64FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64FA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationTitleModifier()
{
  return &type metadata for NavigationTitleModifier;
}

uint64_t sub_1B59A6F38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v8 = *(void *)v3;
  uint64_t v9 = *(void *)(v3 + 8);
  uint64_t v10 = *(void *)(v3 + 16);
  unsigned __int8 v11 = *(unsigned char *)(v3 + 24);
  sub_1B5904B60(*(void *)v3, v9, v10, v11);
  StringResolvable.resolved(with:)(a2);
  if (v4) {

  }
  sub_1B5904A88(v8, v9, v10, v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5943480();
  a3[3] = swift_getOpaqueTypeMetadata2();
  a3[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B5A1B518();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59A70D0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B59A7124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59A7678();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B59A7150@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B59A71A8(uint64_t a1)
{
  unint64_t v2 = sub_1B59A7448();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59A71E4(uint64_t a1)
{
  unint64_t v2 = sub_1B59A7448();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59A7220@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64FB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59A7448();
  sub_1B5A1C838();
  if (!v2)
  {
    sub_1B5904A34();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59A739C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59A6F38(a1, a2, a3);
}

uint64_t sub_1B59A73B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59A7220(a1, a2);
}

unint64_t sub_1B59A73CC(uint64_t a1)
{
  unint64_t result = sub_1B59A73F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59A73F4()
{
  unint64_t result = qword_1E9D64FB0;
  if (!qword_1E9D64FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64FB0);
  }
  return result;
}

unint64_t sub_1B59A7448()
{
  unint64_t result = qword_1E9D64FC0;
  if (!qword_1E9D64FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64FC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NavigationTitleModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59A7538);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationTitleModifier.CodingKeys()
{
  return &type metadata for NavigationTitleModifier.CodingKeys;
}

unint64_t sub_1B59A7574()
{
  unint64_t result = qword_1E9D64FC8;
  if (!qword_1E9D64FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64FC8);
  }
  return result;
}

unint64_t sub_1B59A75CC()
{
  unint64_t result = qword_1E9D64FD0;
  if (!qword_1E9D64FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64FD0);
  }
  return result;
}

unint64_t sub_1B59A7624()
{
  unint64_t result = qword_1E9D64FD8;
  if (!qword_1E9D64FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64FD8);
  }
  return result;
}

uint64_t sub_1B59A7678()
{
  return 0x656C746974;
}

ValueMetadata *type metadata accessor for InteractiveDismissDisabledModifier()
{
  return &type metadata for InteractiveDismissDisabledModifier;
}

void sub_1B59A769C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v8 = *(void *)v3;
  uint64_t v9 = *(void *)(v3 + 8);
  uint64_t v10 = *(void *)(v3 + 16);
  char v11 = *(unsigned char *)(v3 + 24);
  sub_1B590D634(*(void *)v3, v9, v10, v11);
  sub_1B59B4120(a2, v8, v9, v10, v11);
  sub_1B590D6F0(v8, v9, v10, v11);
  if (!v4)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    a3[3] = swift_getOpaqueTypeMetadata2();
    a3[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B5A1B5F8();
  }
}

unint64_t sub_1B59A77D0(uint64_t a1)
{
  unint64_t result = sub_1B59A77F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59A77F8()
{
  unint64_t result = qword_1E9D64FE0;
  if (!qword_1E9D64FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64FE0);
  }
  return result;
}

uint64_t destroy for IfModifier()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s6LiftUI10IfModifierVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IfModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IfModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IfModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IfModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IfModifier()
{
  return &type metadata for IfModifier;
}

uint64_t sub_1B59A7A44@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  char v12 = sub_1B59F84BC(a2);
  uint64_t v14 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a4) {
    uint64_t v16 = a4;
  }
  else {
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  if (a5) {
    uint64_t v15 = a5;
  }
  if (v12) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = v15;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1B591958C(v17);
  swift_bridgeObjectRelease();
  sub_1B59177F0(v18, a2, a3, v14, v13, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59A7B28(char a1)
{
  return *(void *)&aConditiothen[8 * a1];
}

uint64_t sub_1B59A7B48(char *a1, char *a2)
{
  return sub_1B59F00DC(*a1, *a2);
}

uint64_t sub_1B59A7B54()
{
  return sub_1B59F1B20();
}

uint64_t sub_1B59A7B5C()
{
  return sub_1B59F4D40();
}

uint64_t sub_1B59A7B64()
{
  return sub_1B59F4F0C();
}

uint64_t sub_1B59A7B6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59A82B4();
  *a1 = result;
  return result;
}

uint64_t sub_1B59A7B9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59A7B28(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59A7BC8()
{
  return sub_1B59A7B28(*v0);
}

uint64_t sub_1B59A7BD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59A82B4();
  *a1 = result;
  return result;
}

uint64_t sub_1B59A7BF8(uint64_t a1)
{
  unint64_t v2 = sub_1B59A7FFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59A7C34(uint64_t a1)
{
  unint64_t v2 = sub_1B59A7FFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59A7C70@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B59A7A44(a1, a2, a3, *(void *)(v4 + 8), *(void *)(v4 + 16), a4);
}

uint64_t sub_1B59A7C90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B59A7D3C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

unint64_t sub_1B59A7CC0(uint64_t a1)
{
  unint64_t result = sub_1B59A7CE8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59A7CE8()
{
  unint64_t result = qword_1E9D64FE8;
  if (!qword_1E9D64FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64FE8);
  }
  return result;
}

uint64_t sub_1B59A7D3C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64FF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1B59A7FFC();
  sub_1B5A1C838();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for Condition();
    char v10 = 0;
    sub_1B59A8050();
    sub_1B5A1C5D8();
    uint64_t v7 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F28);
    char v10 = 1;
    sub_1B590CB54();
    swift_retain();
    sub_1B5A1C5B8();
    char v10 = 2;
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v7;
}

unint64_t sub_1B59A7FFC()
{
  unint64_t result = qword_1E9D64FF8;
  if (!qword_1E9D64FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64FF8);
  }
  return result;
}

unint64_t sub_1B59A8050()
{
  unint64_t result = qword_1E9D64078;
  if (!qword_1E9D64078)
  {
    type metadata accessor for Condition();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64078);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IfModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59A8174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IfModifier.CodingKeys()
{
  return &type metadata for IfModifier.CodingKeys;
}

unint64_t sub_1B59A81B0()
{
  unint64_t result = qword_1E9D65000;
  if (!qword_1E9D65000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65000);
  }
  return result;
}

unint64_t sub_1B59A8208()
{
  unint64_t result = qword_1E9D65008;
  if (!qword_1E9D65008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65008);
  }
  return result;
}

unint64_t sub_1B59A8260()
{
  unint64_t result = qword_1E9D65010;
  if (!qword_1E9D65010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65010);
  }
  return result;
}

uint64_t sub_1B59A82B4()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t RemoteLoader.status.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B5A1A3C8();
  swift_release();
  return swift_release();
}

uint64_t RemoteLoader.setContentRegistry(_:)(void *a1)
{
  uint64_t v2 = sub_1B5A1C4E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1E9D62B28 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9D910E8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  void v11[3] = type metadata accessor for ContentRegistry();
  v11[0] = a1;
  id v7 = a1;
  uint64_t v8 = (uint64_t (*)(unsigned char *, void))sub_1B5A1A0F8();
  sub_1B59A884C((uint64_t)v11, (uint64_t)v5);
  return v8(v10, 0);
}

uint64_t RemoteLoader.reload(content:showLoading:reloadtype:)(uint64_t a1, char a2, char *a3)
{
  uint64_t v7 = type metadata accessor for RemoteContent(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v10 - 8);
  char v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a3;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_started) = 1;
  uint64_t v14 = OBJC_IVAR____TtC6LiftUI12RemoteLoader_currentTask;
  if (*(void *)(v3 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_currentTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E68);
    sub_1B5A1C198();
    swift_release();
  }
  if (a2)
  {
    uint64_t v22 = 0;
    memset(v21, 0, sizeof(v21));
    char v23 = 2;
    sub_1B59A92F4((uint64_t *)v21);
    sub_1B5908F6C((uint64_t)v21);
  }
  uint64_t v15 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
  sub_1B59AF944(a1, (uint64_t)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  sub_1B59AFB88((uint64_t)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  unint64_t v18 = v17 + ((v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v18 = v3;
  *(unsigned char *)(v18 + 8) = v13;
  swift_retain();
  uint64_t v19 = sub_1B59AC6C4((uint64_t)v12, (uint64_t)&unk_1E9D65038, v17);
  sub_1B5908FC0((uint64_t)v12, &qword_1E9D63780);
  *(void *)(v3 + v14) = v19;
  return swift_release();
}

uint64_t View.remoteLoader(_:)()
{
  return swift_release();
}

uint64_t sub_1B59A87C0()
{
  sub_1B59B0DDC(v0, (uint64_t)v3);
  if (v4)
  {
    if (v4 != 1) {
      return 0x676E6964616F6CLL;
    }
    uint64_t v1 = 0x726F727265;
  }
  else
  {
    uint64_t v1 = 0x646564616F6CLL;
  }
  sub_1B5908F6C((uint64_t)v3);
  return v1;
}

uint64_t sub_1B59A884C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1B59098F4((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B59587F4(v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1B5A1C4E8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1B5908FC0(a1, &qword_1E9D62BC8);
    sub_1B59570DC(a2, v9);
    uint64_t v7 = sub_1B5A1C4E8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_1B5908FC0((uint64_t)v9, &qword_1E9D62BC8);
  }
}

LiftUI::ReloadType_optional __swiftcall ReloadType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B5A1C558();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ReloadType.rawValue.getter()
{
  return *(void *)&aData_3[8 * *v0];
}

uint64_t sub_1B59A89EC(char *a1, char *a2)
{
  return sub_1B59EFF44(*a1, *a2);
}

uint64_t sub_1B59A89F8()
{
  return sub_1B59F1B8C();
}

uint64_t sub_1B59A8A00()
{
  return sub_1B59F4C44();
}

uint64_t sub_1B59A8A08()
{
  return sub_1B59F5044();
}

LiftUI::ReloadType_optional sub_1B59A8A10(Swift::String *a1)
{
  return ReloadType.init(rawValue:)(*a1);
}

uint64_t sub_1B59A8A1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ReloadType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B59A8A44()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650A0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B5A1C4E8();
  __swift_allocate_value_buffer(v3, qword_1E9D91080);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E9D91080);
  sub_1B5A1C4D8();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B59A8B74()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650A0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B5A1C4E8();
  __swift_allocate_value_buffer(v3, qword_1E9D91098);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E9D91098);
  sub_1B5A1C4D8();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B59A8CA8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B5A1A3C8();
  swift_release();
  return swift_release();
}

uint64_t sub_1B59A8D24(uint64_t *a1)
{
  sub_1B59B0DDC(a1, (uint64_t)v3);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B59B0DDC(v3, (uint64_t)&v2);
  swift_retain();
  sub_1B5A1A3D8();
  return sub_1B5908F6C((uint64_t)v3);
}

uint64_t RemoteLoader.$status.getter()
{
  return swift_endAccess();
}

uint64_t sub_1B59A8E14()
{
  return swift_endAccess();
}

uint64_t sub_1B59A8E7C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650A8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65040);
  sub_1B5A1A3A8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t RemoteLoader.decoder.getter()
{
  return swift_retain();
}

uint64_t sub_1B59A9000()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B5A1C4E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65040);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = v1 + OBJC_IVAR____TtC6LiftUI12RemoteLoader__status;
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  char v21 = 2;
  sub_1B59B0DDC((uint64_t *)&v18, (uint64_t)v17);
  sub_1B5A1A388();
  sub_1B5908F6C((uint64_t)&v18);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(v10, v9, v6);
  uint64_t v11 = v1 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_savedStatus;
  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(void *)(v11 + 32) = 0;
  *(unsigned char *)(v11 + 40) = -1;
  *(void *)(v1 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_remoteState) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_started) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_currentTask) = 0;
  sub_1B5A1A138();
  swift_allocObject();
  *(void *)(v1 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_decoder) = sub_1B5A1A128();
  if (qword_1E9D62B08 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9D91098);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
  uint64_t v13 = type metadata accessor for AnyWeakRemoteLoader();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  *((void *)&v19 + 1) = v13;
  *(void *)&long long v18 = v14;
  uint64_t v15 = (void (*)(unsigned char *, void))sub_1B5A1A0F8();
  sub_1B59A884C((uint64_t)&v18, (uint64_t)v5);
  v15(v17, 0);
  return v1;
}

uint64_t sub_1B59A92F4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B5A1BDF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)&v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B597A758();
  *uint64_t v7 = sub_1B5A1C288();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  char v8 = sub_1B5A1BE08();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    sub_1B59B0DDC(a1, (uint64_t)&v13);
    if (v16 == 2
      && (int8x16_t v10 = vorrq_s8(v14, v15),
          !(*(void *)&vorr_s8(*(int8x8_t *)v10.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL)) | v13)))
    {
      sub_1B5908F6C((uint64_t)&v13);
    }
    else
    {
      sub_1B5908F6C((uint64_t)&v13);
      sub_1B59B0DDC(a1, (uint64_t)&v13);
      uint64_t v11 = v2 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_savedStatus;
      swift_beginAccess();
      sub_1B59B0E80((uint64_t)&v13, v11);
      swift_endAccess();
    }
    sub_1B59B0DDC(a1, (uint64_t)&v13);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B59B0DDC(&v13, (uint64_t)v12);
    swift_retain();
    sub_1B5A1A3D8();
    return sub_1B5908F6C((uint64_t)&v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B59A94FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 46) = a6;
  *(void *)(v6 + 112) = a4;
  *(void *)(v6 + 120) = a5;
  uint64_t v7 = sub_1B5A1A258();
  *(void *)(v6 + 128) = v7;
  *(void *)(v6 + 136) = *(void *)(v7 - 8);
  *(void *)(v6 + 144) = swift_task_alloc();
  *(void *)(v6 + 152) = type metadata accessor for RemoteContent(0);
  *(void *)(v6 + 160) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B59A95F0, 0, 0);
}

uint64_t sub_1B59A95F0()
{
  sub_1B59AF944(*(void *)(v0 + 112), *(void *)(v0 + 160));
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v35 = *(uint64_t **)(v0 + 160);
      char v36 = *(unsigned char *)(v0 + 46);
      uint64_t v38 = *v35;
      uint64_t v37 = v35[1];
      *(void *)(v0 + 192) = v37;
      *(unsigned char *)(v0 + 44) = v36;
      os_log_type_t v39 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v39;
      *os_log_type_t v39 = v0;
      v39[1] = sub_1B59A9B44;
      uint64_t result = sub_1B59AAF84(v38, v37, (unsigned char *)(v0 + 44));
      break;
    case 2u:
      uint64_t v7 = *(void *)(v0 + 160);
      uint64_t v9 = *(void *)(v0 + 136);
      uint64_t v8 = *(void *)(v0 + 144);
      uint64_t v10 = *(void *)(v0 + 128);
      char v11 = *(unsigned char *)(v0 + 46);
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
      char v13 = *(unsigned char *)(v7 + *(int *)(v12 + 48));
      int8x16_t v14 = (uint64_t *)(v7 + *(int *)(v12 + 64));
      uint64_t v15 = *v14;
      *(void *)(v0 + 208) = *v14;
      uint64_t v16 = v14[1];
      *(void *)(v0 + 216) = v16;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v7, v10);
      *(unsigned char *)(v0 + 42) = v13;
      *(unsigned char *)(v0 + 43) = v11;
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 224) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_1B59A9CCC;
      uint64_t v18 = *(void *)(v0 + 144);
      uint64_t result = sub_1B59AB458(v18, (unsigned char *)(v0 + 42), v15, v16, (unsigned char *)(v0 + 43));
      break;
    case 3u:
      long long v19 = *(uint64_t **)(v0 + 160);
      char v20 = *(unsigned char *)(v0 + 46);
      uint64_t v21 = *v19;
      *(void *)(v0 + 232) = *v19;
      uint64_t v22 = v19[1];
      *(void *)(v0 + 240) = v22;
      uint64_t v23 = v19[2];
      *(void *)(v0 + 248) = v23;
      char v24 = *((unsigned char *)v19 + 24);
      *(unsigned char *)(v0 + 47) = v24;
      uint64_t v25 = v19[4];
      *(void *)(v0 + 256) = v25;
      uint64_t v26 = v19[5];
      *(void *)(v0 + 264) = v26;
      uint64_t v27 = v19[6];
      *(void *)(v0 + 272) = v27;
      char v28 = *((unsigned char *)v19 + 56);
      *(unsigned char *)(v0 + 73) = v28;
      uint64_t v29 = v19[8];
      *(void *)(v0 + 280) = v29;
      uint64_t v30 = v19[9];
      *(void *)(v0 + 288) = v30;
      uint64_t v31 = v19[10];
      *(void *)(v0 + 296) = v31;
      char v32 = *((unsigned char *)v19 + 88);
      *(unsigned char *)(v0 + 74) = v32;
      uint64_t v33 = v19[12];
      *(void *)(v0 + 304) = v33;
      *(void *)(v0 + 16) = v21;
      *(void *)(v0 + 24) = v22;
      *(void *)(v0 + 32) = v23;
      *(unsigned char *)(v0 + 40) = v24;
      *(void *)(v0 + 48) = v25;
      *(void *)(v0 + 56) = v26;
      *(void *)(v0 + 64) = v27;
      *(unsigned char *)(v0 + 72) = v28;
      *(void *)(v0 + 80) = v29;
      *(void *)(v0 + 88) = v30;
      *(void *)(v0 + 96) = v31;
      *(unsigned char *)(v0 + 104) = v32;
      *(unsigned char *)(v0 + 41) = v20;
      uint64_t v34 = (void *)swift_task_alloc();
      *(void *)(v0 + 312) = v34;
      *uint64_t v34 = v0;
      v34[1] = sub_1B59A9E68;
      uint64_t result = sub_1B59ABE30(v0 + 16, v0 + 48, v0 + 80, v33, (unsigned char *)(v0 + 41));
      break;
    default:
      uint64_t v1 = *(uint64_t **)(v0 + 160);
      char v2 = *(unsigned char *)(v0 + 46);
      uint64_t v3 = *v1;
      *(void *)(v0 + 168) = *v1;
      uint64_t v4 = v1[1];
      *(void *)(v0 + 176) = v4;
      *(unsigned char *)(v0 + 45) = v2;
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_1B59A99D0;
      uint64_t result = sub_1B59AA058(v3, v4, (unsigned char *)(v0 + 45));
      break;
  }
  return result;
}

uint64_t sub_1B59A99D0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B59A9ACC, 0, 0);
}

uint64_t sub_1B59A9ACC()
{
  sub_1B5905904(v0[21], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1B59A9B44()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1B59A9C5C, 0, 0);
}

uint64_t sub_1B59A9C5C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B59A9CCC()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B59A9DC8, 0, 0);
}

uint64_t sub_1B59A9DC8()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  sub_1B59B0EE8(v0[26], v0[27]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1B59A9E68()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B59A9F64, 0, 0);
}

uint64_t sub_1B59A9F64()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v6 = *(void *)(v0 + 256);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 240);
  uint64_t v14 = *(void *)(v0 + 248);
  unsigned __int8 v8 = *(unsigned char *)(v0 + 74);
  unsigned __int8 v9 = *(unsigned char *)(v0 + 73);
  unsigned __int8 v12 = *(unsigned char *)(v0 + 47);
  swift_release();
  sub_1B5905230(v3, v2, v1, v8);
  sub_1B5904B4C(v6, v5, v4, v9);
  sub_1B5904A88(v7, v13, v14, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1B59AA058(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 808) = v3;
  *(void *)(v4 + 800) = a2;
  *(void *)(v4 + 792) = a1;
  sub_1B5A1BF38();
  *(void *)(v4 + 816) = swift_task_alloc();
  uint64_t v6 = sub_1B5A1A328();
  *(void *)(v4 + 824) = v6;
  *(void *)(v4 + 832) = *(void *)(v6 - 8);
  *(void *)(v4 + 840) = swift_task_alloc();
  *(unsigned char *)(v4 + 665) = *a3;
  return MEMORY[0x1F4188298](sub_1B59AA158, 0, 0);
}

uint64_t sub_1B59AA158()
{
  uint64_t v44 = v0;
  if (sub_1B5A1C1A8())
  {
LABEL_2:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  *(void *)(v0 + 160) = 0;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 840);
  uint64_t v4 = *(void *)(v0 + 832);
  uint64_t v5 = *(void *)(v0 + 824);
  unint64_t v6 = *(void *)(v0 + 800);
  uint64_t v7 = *(void *)(v0 + 792);
  uint64_t v8 = __swift_project_value_buffer(v5, (uint64_t)qword_1E9D910D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v8, v5);
  sub_1B5905744(v7, v6);
  sub_1B5905744(v7, v6);
  unsigned __int8 v9 = sub_1B5A1A308();
  os_log_type_t v10 = sub_1B5A1C278();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(char *)(v0 + 665);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v43[0] = v39;
    uint64_t v13 = *(void *)&aData_3[8 * v11];
    *(_DWORD *)uint64_t v12 = 136315394;
    unint64_t v14 = *(void *)&aViewandd[8 * v11 + 8];
    uint64_t v40 = *(void *)(v0 + 832);
    uint64_t v41 = *(void *)(v0 + 824);
    uint64_t v42 = *(void *)(v0 + 840);
    unint64_t v15 = *(void *)(v0 + 800);
    uint64_t v16 = *(void *)(v0 + 792);
    *(void *)(v0 + 776) = sub_1B5928EE8(v13, v14, v43);
    sub_1B5A1C2D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    sub_1B5A1BF28();
    unint64_t v17 = sub_1B5A1BF18();
    if (v18)
    {
      unint64_t v19 = v18;
    }
    else
    {
      unint64_t v17 = 0xD000000000000014;
      unint64_t v19 = 0x80000001B5A33220;
    }
    *(void *)(v0 + 784) = sub_1B5928EE8(v17, v19, v43);
    sub_1B5A1C2D8();
    swift_bridgeObjectRelease();
    sub_1B5905904(v16, v15);
    sub_1B5905904(v16, v15);
    _os_log_impl(&dword_1B58FD000, v9, v10, "Loading type: %s JSON: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BA9A4780](v39, -1, -1);
    MEMORY[0x1BA9A4780](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 840);
    uint64_t v21 = *(void *)(v0 + 832);
    uint64_t v22 = *(void *)(v0 + 824);
    unint64_t v23 = *(void *)(v0 + 800);
    uint64_t v24 = *(void *)(v0 + 792);
    sub_1B5905904(v24, v23);
    sub_1B5905904(v24, v23);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  if (*(unsigned char *)(v0 + 665) == 1)
  {
    unint64_t v25 = 0;
LABEL_15:
    *(void *)(v0 + 848) = v25;
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 856) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_1B59AA7E0;
    uint64_t v27 = *(void *)(v0 + 800);
    uint64_t v28 = *(void *)(v0 + 792);
    return sub_1B59ACB80(v0 + 472, v28, v27);
  }
  sub_1B59AFD70();
  sub_1B5A1A0E8();
  unint64_t v25 = *(void *)(v0 + 768);
  if (!v25) {
    unint64_t v25 = sub_1B59030D8(MEMORY[0x1E4FBC860]);
  }
  if (*(unsigned char *)(v0 + 665)) {
    goto LABEL_15;
  }
  *(void *)(v0 + 872) = v25;
  if (sub_1B5A1C1A8())
  {
    sub_1B5908FC0(v0 + 16, &qword_1E9D63B40);
    swift_bridgeObjectRelease();
    goto LABEL_2;
  }
  sub_1B5909890(v0 + 16, v0 + 168, &qword_1E9D63B40);
  if (*(void *)(v0 + 176))
  {
    long long v29 = *(_OWORD *)(v0 + 280);
    *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 264);
    *(_OWORD *)(v0 + 432) = v29;
    *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 296);
    *(void *)(v0 + 464) = *(void *)(v0 + 312);
    long long v30 = *(_OWORD *)(v0 + 216);
    *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 200);
    *(_OWORD *)(v0 + 368) = v30;
    long long v31 = *(_OWORD *)(v0 + 248);
    *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 232);
    *(_OWORD *)(v0 + 400) = v31;
    long long v32 = *(_OWORD *)(v0 + 184);
    *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 168);
    *(_OWORD *)(v0 + 336) = v32;
    *(void *)(v0 + 744) = &type metadata for ViewContent;
    *(void *)(v0 + 752) = sub_1B5914034();
    uint64_t v33 = swift_allocObject();
    *(void *)(v0 + 720) = v33;
    sub_1B591CBD8(v0 + 320, v33 + 16);
    *(unsigned char *)(v0 + 760) = 0;
    sub_1B5A1C168();
    *(void *)(v0 + 880) = sub_1B5A1C158();
    uint64_t v34 = sub_1B5A1C148();
    uint64_t v36 = v35;
    uint64_t v37 = sub_1B59AAB2C;
  }
  else
  {
    sub_1B5908FC0(v0 + 168, &qword_1E9D63B40);
    *(_OWORD *)(v0 + 672) = 0u;
    *(_OWORD *)(v0 + 688) = 0u;
    *(void *)(v0 + 704) = 0;
    *(unsigned char *)(v0 + 712) = -1;
    sub_1B5A1C168();
    *(void *)(v0 + 888) = sub_1B5A1C158();
    uint64_t v34 = sub_1B5A1C148();
    uint64_t v36 = v38;
    uint64_t v37 = sub_1B59AAC54;
  }
  return MEMORY[0x1F4188298](v37, v34, v36);
}

uint64_t sub_1B59AA7E0()
{
  *(void *)(*(void *)v1 + 864) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1B59AAE70;
  }
  else
  {
    uint64_t v2 = sub_1B59AA8FC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1B59AA8FC()
{
  sub_1B5908FC0(v0 + 16, &qword_1E9D63B40);
  sub_1B596F6EC(v0 + 472, v0 + 16, &qword_1E9D63B40);
  *(void *)(v0 + 872) = *(void *)(v0 + 848);
  if (sub_1B5A1C1A8())
  {
    sub_1B5908FC0(v0 + 16, &qword_1E9D63B40);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    sub_1B5909890(v0 + 16, v0 + 168, &qword_1E9D63B40);
    if (*(void *)(v0 + 176))
    {
      long long v3 = *(_OWORD *)(v0 + 280);
      *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 264);
      *(_OWORD *)(v0 + 432) = v3;
      *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 296);
      *(void *)(v0 + 464) = *(void *)(v0 + 312);
      long long v4 = *(_OWORD *)(v0 + 216);
      *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 200);
      *(_OWORD *)(v0 + 368) = v4;
      long long v5 = *(_OWORD *)(v0 + 248);
      *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 232);
      *(_OWORD *)(v0 + 400) = v5;
      long long v6 = *(_OWORD *)(v0 + 184);
      *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 168);
      *(_OWORD *)(v0 + 336) = v6;
      *(void *)(v0 + 744) = &type metadata for ViewContent;
      *(void *)(v0 + 752) = sub_1B5914034();
      uint64_t v7 = swift_allocObject();
      *(void *)(v0 + 720) = v7;
      sub_1B591CBD8(v0 + 320, v7 + 16);
      *(unsigned char *)(v0 + 760) = 0;
      sub_1B5A1C168();
      *(void *)(v0 + 880) = sub_1B5A1C158();
      uint64_t v8 = sub_1B5A1C148();
      uint64_t v10 = v9;
      uint64_t v11 = sub_1B59AAB2C;
    }
    else
    {
      sub_1B5908FC0(v0 + 168, &qword_1E9D63B40);
      *(_OWORD *)(v0 + 672) = 0u;
      *(_OWORD *)(v0 + 688) = 0u;
      *(void *)(v0 + 704) = 0;
      *(unsigned char *)(v0 + 712) = -1;
      sub_1B5A1C168();
      *(void *)(v0 + 888) = sub_1B5A1C158();
      uint64_t v8 = sub_1B5A1C148();
      uint64_t v10 = v12;
      uint64_t v11 = sub_1B59AAC54;
    }
    return MEMORY[0x1F4188298](v11, v8, v10);
  }
}

uint64_t sub_1B59AAB2C()
{
  uint64_t v1 = *(void *)(v0 + 872);
  swift_release();
  sub_1B59AC894(v1, v0 + 720);
  swift_bridgeObjectRelease();
  sub_1B5908FC0(v0 + 720, &qword_1E9D65060);
  return MEMORY[0x1F4188298](sub_1B59AABCC, 0, 0);
}

uint64_t sub_1B59AABCC()
{
  sub_1B591CC10(v0 + 320);
  sub_1B5908FC0(v0 + 16, &qword_1E9D63B40);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B59AAC54()
{
  uint64_t v1 = *(void *)(v0 + 872);
  swift_release();
  sub_1B59AC894(v1, v0 + 672);
  swift_bridgeObjectRelease();
  sub_1B5908FC0(v0 + 672, &qword_1E9D65060);
  return MEMORY[0x1F4188298](sub_1B59AACF4, 0, 0);
}

uint64_t sub_1B59AACF4()
{
  sub_1B5908FC0(v0 + 16, &qword_1E9D63B40);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B59AAD70()
{
  swift_release();
  sub_1B59AC894(0, v0 + 624);
  sub_1B5908FC0(v0 + 624, &qword_1E9D65060);
  return MEMORY[0x1F4188298](sub_1B59AADFC, 0, 0);
}

uint64_t sub_1B59AADFC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B59AAE70()
{
  sub_1B5908FC0(v0 + 16, &qword_1E9D63B40);
  uint64_t v1 = *(void **)(v0 + 864);
  *(void *)(v0 + 896) = v1;
  if (sub_1B5A1C1A8())
  {

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    *(void *)(v0 + 624) = v1;
    *(unsigned char *)(v0 + 664) = 1;
    sub_1B5A1C168();
    id v4 = v1;
    *(void *)(v0 + 904) = sub_1B5A1C158();
    uint64_t v6 = sub_1B5A1C148();
    return MEMORY[0x1F4188298](sub_1B59AAD70, v6, v5);
  }
}

uint64_t sub_1B59AAF84(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 72) = a2;
  *(void *)(v4 + 80) = v3;
  *(void *)(v4 + 64) = a1;
  uint64_t v6 = sub_1B5A1BF38();
  *(void *)(v4 + 88) = v6;
  *(void *)(v4 + 96) = *(void *)(v6 - 8);
  *(void *)(v4 + 104) = swift_task_alloc();
  *(unsigned char *)(v4 + 58) = *a3;
  return MEMORY[0x1F4188298](sub_1B59AB054, 0, 0);
}

uint64_t sub_1B59AB054()
{
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_1B5A1BF28();
  uint64_t v4 = sub_1B5A1BF08();
  unint64_t v6 = v5;
  *(void *)(v0 + 112) = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v6 >> 60 == 15)
  {
    if (sub_1B5A1C1A8())
    {
      swift_task_dealloc();
      uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
      return v7();
    }
    else
    {
      type metadata accessor for RemoteLoaderError(0);
      sub_1B59B0EFC();
      uint64_t v11 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      *(void *)(v0 + 16) = v11;
      *(unsigned char *)(v0 + 56) = 1;
      sub_1B5A1C168();
      *(void *)(v0 + 136) = sub_1B5A1C158();
      uint64_t v13 = sub_1B5A1C148();
      return MEMORY[0x1F4188298](sub_1B59AB3CC, v13, v12);
    }
  }
  else
  {
    char v9 = *(unsigned char *)(v0 + 58);
    *(void *)(v0 + 120) = v4;
    *(unsigned char *)(v0 + 57) = v9;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1B59AB268;
    return sub_1B59AA058(v4, v6, (unsigned char *)(v0 + 57));
  }
}

uint64_t sub_1B59AB268()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B59AB364, 0, 0);
}

uint64_t sub_1B59AB364()
{
  sub_1B59B0EE8(v0[15], v0[14]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1B59AB3CC()
{
  swift_release();
  sub_1B59AC894(0, v0 + 16);
  sub_1B5908FC0(v0 + 16, &qword_1E9D65060);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B59AB458(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  *(void *)(v6 + 80) = a4;
  *(void *)(v6 + 88) = v5;
  *(void *)(v6 + 64) = a1;
  *(void *)(v6 + 72) = a3;
  uint64_t v9 = sub_1B5A1A0D8();
  *(void *)(v6 + 96) = v9;
  *(void *)(v6 + 104) = *(void *)(v9 - 8);
  *(void *)(v6 + 112) = swift_task_alloc();
  *(unsigned char *)(v6 + 58) = *a2;
  *(unsigned char *)(v6 + 59) = *a5;
  return MEMORY[0x1F4188298](sub_1B59AB53C, 0, 0);
}

uint64_t sub_1B59AB53C()
{
  uint64_t v1 = *(void *)(v0 + 88) + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource;
  uint64_t v2 = MEMORY[0x1BA9A4850](v1);
  *(void *)(v0 + 120) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v4, ObjectType, v3);
    switch(*(unsigned char *)(v0 + 58))
    {
      case 8:
        break;
      default:
        sub_1B5A1A058();
        break;
    }
    if (*(void *)(v0 + 80) >> 60 != 15)
    {
      sub_1B5905744(*(void *)(v0 + 72), *(void *)(v0 + 80));
      sub_1B5A1A0B8();
    }
    sub_1B59C0264();
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1B59AB8E4;
    uint64_t v13 = *(void *)(v0 + 112);
    return v14(v13, ObjectType, v3);
  }
  else
  {
    type metadata accessor for RemoteLoaderError(0);
    sub_1B59B0EFC();
    uint64_t v6 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    *(void *)(v0 + 168) = v6;
    if (sub_1B5A1C1A8())
    {

      swift_task_dealloc();
      uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
      return v7();
    }
    else
    {
      *(void *)(v0 + 16) = v6;
      *(unsigned char *)(v0 + 56) = 1;
      sub_1B5A1C168();
      id v9 = v6;
      *(void *)(v0 + 176) = sub_1B5A1C158();
      uint64_t v11 = sub_1B5A1C148();
      return MEMORY[0x1F4188298](sub_1B59ABC14, v11, v10);
    }
  }
}

uint64_t sub_1B59AB8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 136) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return MEMORY[0x1F4188298](sub_1B59ABD08, 0, 0);
  }
  else
  {
    *(unsigned char *)(v6 + 57) = *(unsigned char *)(v6 + 59);
    *(void *)(v6 + 144) = a2;
    *(void *)(v6 + 152) = a1;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v6 + 160) = v7;
    *uint64_t v7 = v6;
    v7[1] = sub_1B59ABA80;
    return sub_1B59AA058(a1, a2, (unsigned char *)(v6 + 57));
  }
}

uint64_t sub_1B59ABA80()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B59ABB7C, 0, 0);
}

uint64_t sub_1B59ABB7C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  sub_1B5905904(v0[19], v0[18]);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1B59ABC14()
{
  swift_release();
  sub_1B59AC894(0, v0 + 16);
  sub_1B5908FC0(v0 + 16, &qword_1E9D65060);
  return MEMORY[0x1F4188298](sub_1B59ABCA0, 0, 0);
}

uint64_t sub_1B59ABCA0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B59ABD08()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = *(void **)(v0 + 136);
  *(void *)(v0 + 168) = v4;
  if (sub_1B5A1C1A8())
  {

    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    *(void *)(v0 + 16) = v4;
    *(unsigned char *)(v0 + 56) = 1;
    sub_1B5A1C168();
    id v7 = v4;
    *(void *)(v0 + 176) = sub_1B5A1C158();
    uint64_t v9 = sub_1B5A1C148();
    return MEMORY[0x1F4188298](sub_1B59ABC14, v9, v8);
  }
}

uint64_t sub_1B59ABE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  *(void *)(v6 + 72) = a4;
  *(void *)(v6 + 80) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
  *(void *)(v6 + 88) = swift_task_alloc();
  uint64_t v11 = sub_1B5A1A258();
  *(void *)(v6 + 96) = v11;
  *(void *)(v6 + 104) = *(void *)(v11 - 8);
  *(void *)(v6 + 112) = swift_task_alloc();
  *(_OWORD *)(v6 + 120) = *(_OWORD *)a1;
  *(void *)(v6 + 136) = *(void *)(a1 + 16);
  *(unsigned char *)(v6 + 59) = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(v6 + 144) = *(_OWORD *)a2;
  *(void *)(v6 + 160) = *(void *)(a2 + 16);
  *(unsigned char *)(v6 + 60) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(v6 + 168) = *(_OWORD *)a3;
  *(void *)(v6 + 184) = *(void *)(a3 + 16);
  *(unsigned char *)(v6 + 61) = *(unsigned char *)(a3 + 24);
  *(unsigned char *)(v6 + 62) = *a5;
  return MEMORY[0x1F4188298](sub_1B59ABF90, 0, 0);
}

uint64_t sub_1B59ABF90()
{
  StringResolvable.resolved(with:)(*(void *)(v0 + 72));
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_1B5A1A248();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1B5908FC0(*(void *)(v0 + 88), &qword_1E9D638F0);
    type metadata accessor for RemoteLoaderError(0);
    sub_1B59B0EFC();
    uint64_t v4 = (void *)swift_allocError();
    *(void *)(v0 + 216) = v4;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    id v5 = v4;
    if (sub_1B5A1C1A8())
    {

      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
      return v6();
    }
    else
    {
      *(void *)(v0 + 16) = v4;
      *(unsigned char *)(v0 + 56) = 1;
      sub_1B5A1C168();
      id v8 = v4;
      *(void *)(v0 + 224) = sub_1B5A1C158();
      uint64_t v10 = sub_1B5A1C148();
      return MEMORY[0x1F4188298](sub_1B59AC5B8, v10, v9);
    }
  }
  else
  {
    unsigned int v11 = *(unsigned __int8 *)(v0 + 60);
    (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 112), *(void *)(v0 + 88), *(void *)(v0 + 96));
    if (v11 <= 0xFD)
    {
      uint64_t v13 = *(void *)(v0 + 72);
      uint64_t v30 = *(void *)(v0 + 144);
      sub_1B5904B60(v30, *(void *)(v0 + 152), *(void *)(v0 + 160), *(unsigned char *)(v0 + 60));
      unint64_t v14 = StringResolvable.resolved(with:)(v13);
      uint64_t v16 = v15;
      sub_1B5904B4C(*(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(unsigned char *)(v0 + 60));
      v17._countAndFlagsBits = v14;
      v17._object = v16;
      HTTPRequestMethod.init(rawValue:)(v17);
      char v12 = v30;
    }
    else
    {
      char v12 = 8;
    }
    int v18 = *(unsigned __int8 *)(v0 + 61);
    if (v18 == 255)
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0xF000000000000000;
    }
    else
    {
      uint64_t v19 = *(void *)(v0 + 176);
      uint64_t v20 = *(void *)(v0 + 184);
      uint64_t v21 = *(void *)(v0 + 168);
      uint64_t v22 = *(void *)(v0 + 72);
      char v23 = v18 & 1;
      sub_1B5904C08(v21, v19, v20, v18 & 1);
      uint64_t v24 = sub_1B59B4750(v22, v21, v19, v20, v23);
      sub_1B5905230(*(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(unsigned char *)(v0 + 61));
      sub_1B5A1A168();
      swift_allocObject();
      sub_1B5A1A158();
      *(void *)(v0 + 64) = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
      sub_1B5951940();
      uint64_t v27 = sub_1B5A1A148();
      uint64_t v29 = v28;
      swift_release();
      swift_bridgeObjectRelease();
    }
    *(void *)(v0 + 192) = v27;
    *(void *)(v0 + 200) = v29;
    *(unsigned char *)(v0 + 57) = v12;
    *(unsigned char *)(v0 + 58) = *(unsigned char *)(v0 + 62);
    unint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v25;
    *unint64_t v25 = v0;
    v25[1] = sub_1B59AC420;
    uint64_t v26 = *(void *)(v0 + 112);
    return sub_1B59AB458(v26, (unsigned char *)(v0 + 57), v27, v29, (unsigned char *)(v0 + 58));
  }
}

uint64_t sub_1B59AC420()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B59AC51C, 0, 0);
}

uint64_t sub_1B59AC51C()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  sub_1B59B0EE8(v0[24], v0[25]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1B59AC5B8()
{
  swift_release();
  sub_1B59AC894(0, v0 + 16);
  sub_1B5908FC0(v0 + 16, &qword_1E9D65060);
  return MEMORY[0x1F4188298](sub_1B59AC644, 0, 0);
}

uint64_t sub_1B59AC644()
{
  uint64_t v1 = *(void **)(v0 + 216);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1B59AC6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5909890(a1, (uint64_t)v7, &qword_1E9D63780);
  uint64_t v8 = sub_1B5A1C188();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1B5908FC0((uint64_t)v7, &qword_1E9D63780);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  else
  {
    sub_1B5A1C178();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v10 = sub_1B5A1C148();
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    _OWORD v14[2] = v10;
    uint64_t v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_1B59AC894(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1B5A1BDF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)&v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    sub_1B597A758();
    *uint64_t v9 = sub_1B5A1C288();
    (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
    char v10 = sub_1B5A1BE08();
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
    if ((v10 & 1) == 0)
    {
      __break(1u);
      return result;
    }
    sub_1B590505C(a1, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B59AFDC4);
  }
  sub_1B5909890(a2, (uint64_t)v16, &qword_1E9D65060);
  if (v17 == 255)
  {
    sub_1B5908FC0((uint64_t)v16, &qword_1E9D65060);
    uint64_t v12 = v3 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_savedStatus;
    swift_beginAccess();
    sub_1B5909890(v12, (uint64_t)v16, &qword_1E9D65060);
    if (v17 == 255)
    {
      sub_1B5908FC0((uint64_t)v16, &qword_1E9D65060);
      type metadata accessor for RemoteLoaderError(0);
      sub_1B59B0EFC();
      uint64_t v13 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      *(void *)&v18[0] = v13;
      char v19 = 1;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1B59B0DDC((uint64_t *)v18, (uint64_t)v16);
      swift_retain();
      sub_1B5A1A3D8();
    }
    else
    {
      sub_1B59B0FF4(v16, v18);
      sub_1B59B0DDC((uint64_t *)v18, (uint64_t)v16);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1B59B0DDC((uint64_t *)v16, (uint64_t)v15);
      swift_retain();
      sub_1B5A1A3D8();
      sub_1B5908F6C((uint64_t)v16);
    }
  }
  else
  {
    sub_1B59B0FF4(v16, v18);
    sub_1B59A92F4((uint64_t *)v18);
  }
  return sub_1B5908F6C((uint64_t)v18);
}

uint64_t sub_1B59ACB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[44] = a3;
  v4[45] = v3;
  v4[42] = a1;
  v4[43] = a2;
  uint64_t v5 = sub_1B5A1C408();
  v4[46] = v5;
  v4[47] = *(void *)(v5 - 8);
  v4[48] = swift_task_alloc();
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B59ACC60, 0, 0);
}

uint64_t sub_1B59ACC60()
{
  uint64_t v40 = v0;
  sub_1B59AFDCC();
  sub_1B5A1A0E8();
  sub_1B5909890(v0 + 16, v0 + 168, &qword_1E9D63B40);
  if (*(void *)(v0 + 176))
  {
    uint64_t v22 = *(void *)(v0 + 336);
    sub_1B59AFE20(v0 + 16);
    long long v23 = *(_OWORD *)(v0 + 184);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v0 + 168);
    *(_OWORD *)(v22 + 16) = v23;
    long long v24 = *(_OWORD *)(v0 + 248);
    long long v26 = *(_OWORD *)(v0 + 200);
    long long v25 = *(_OWORD *)(v0 + 216);
    *(_OWORD *)(v22 + 64) = *(_OWORD *)(v0 + 232);
    *(_OWORD *)(v22 + 80) = v24;
    *(_OWORD *)(v22 + 32) = v26;
    *(_OWORD *)(v22 + 48) = v25;
    long long v28 = *(_OWORD *)(v0 + 280);
    long long v27 = *(_OWORD *)(v0 + 296);
    long long v29 = *(_OWORD *)(v0 + 264);
    *(void *)(v22 + 144) = *(void *)(v0 + 312);
    *(_OWORD *)(v22 + 112) = v28;
    *(_OWORD *)(v22 + 128) = v27;
    *(_OWORD *)(v22 + 96) = v29;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_1B5908FC0(v0 + 168, &qword_1E9D63B40);
    type metadata accessor for RemoteLoaderError(0);
    sub_1B59B0EFC();
    uint64_t v35 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1B59AFE20(v0 + 16);
    *(void *)(v0 + 320) = v35;
    id v1 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E68);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v0 + 392);
      uint64_t v2 = *(void *)(v0 + 400);
      uint64_t v4 = *(void *)(v0 + 368);
      uint64_t v5 = *(void *)(v0 + 376);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v2, v4);
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v6 = *(void *)(v0 + 384);
      uint64_t v7 = *(void *)(v0 + 392);
      uint64_t v8 = *(void *)(v0 + 368);
      uint64_t v9 = *(void *)(v0 + 376);
      uint64_t v10 = sub_1B5A1A328();
      __swift_project_value_buffer(v10, (uint64_t)qword_1E9D910D0);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      v11(v6, v7, v8);
      uint64_t v12 = sub_1B5A1A308();
      os_log_type_t v13 = sub_1B5A1C278();
      BOOL v14 = os_log_type_enabled(v12, v13);
      uint64_t v16 = *(void *)(v0 + 376);
      uint64_t v15 = *(void *)(v0 + 384);
      if (v14)
      {
        uint64_t v36 = *(void *)(v0 + 368);
        uint64_t v38 = v11;
        unsigned __int8 v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v39 = v37;
        *(_DWORD *)unsigned __int8 v17 = 136315138;
        unint64_t v18 = sub_1B59AD0A4();
        *(void *)(v0 + 328) = sub_1B5928EE8(v18, v19, &v39);
        sub_1B5A1C2D8();
        swift_bridgeObjectRelease();
        uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
        v20(v15, v36);
        _os_log_impl(&dword_1B58FD000, v12, v13, "Error decoding view: %s", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BA9A4780](v37, -1, -1);
        uint64_t v21 = v17;
        uint64_t v11 = v38;
        MEMORY[0x1BA9A4780](v21, -1, -1);
      }
      else
      {
        uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
        v20(*(void *)(v0 + 384), *(void *)(v0 + 368));
      }

      uint64_t v31 = *(void *)(v0 + 392);
      uint64_t v32 = *(void *)(v0 + 368);
      swift_allocError();
      v11(v33, v31, v32);
      swift_willThrow();
      v20(v31, v32);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v30();
}

unint64_t sub_1B59AD0A4()
{
  uint64_t v1 = sub_1B5A1C3F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v26 - v10;
  MEMORY[0x1F4188790](v9);
  os_log_type_t v13 = (char *)&v26 - v12;
  uint64_t v14 = sub_1B5A1C408();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unsigned __int8 v17 = (long long *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(long long *, uint64_t, uint64_t))(v15 + 16))(v17, v0, v14);
  int v18 = (*(uint64_t (**)(long long *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == *MEMORY[0x1E4FBBA70])
  {
    (*(void (**)(long long *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646B8);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v8, (char *)v17 + *(int *)(v19 + 48), v1);
    unint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_1B5A1C3A8();
    swift_bridgeObjectRelease();
    unint64_t v29 = 0xD00000000000001FLL;
    unint64_t v30 = 0x80000001B5A33290;
    sub_1B59AE130();
    sub_1B5A1BFA8();
    swift_bridgeObjectRelease();
    sub_1B5A1BFA8();
    sub_1B5A1C8B8();
    sub_1B5A1BFA8();
    swift_bridgeObjectRelease();
    unint64_t v20 = v29;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  }
  else if (v18 == *MEMORY[0x1E4FBBA80])
  {
    (*(void (**)(long long *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646B8);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, (char *)v17 + *(int *)(v21 + 48), v1);
    unint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_1B5A1C3A8();
    swift_bridgeObjectRelease();
    unint64_t v29 = 0xD000000000000020;
    unint64_t v30 = 0x80000001B5A33260;
    sub_1B59AE130();
    sub_1B5A1BFA8();
    swift_bridgeObjectRelease();
    sub_1B5A1BFA8();
    sub_1B5A1C8B8();
    sub_1B5A1BFA8();
    swift_bridgeObjectRelease();
    unint64_t v20 = v29;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  else if (v18 == *MEMORY[0x1E4FBBA68])
  {
    (*(void (**)(long long *, uint64_t))(v15 + 96))(v17, v14);
    long long v23 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646B0) + 48);
    sub_1B5908BE8(v17, (uint64_t)&v29);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v11, v23, v1);
    unint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1B5A1C3A8();
    sub_1B5A1BFA8();
    __swift_project_boxed_opaque_existential_1(&v29, v31);
    sub_1B5A1C878();
    sub_1B5A1BFA8();
    swift_bridgeObjectRelease();
    sub_1B5A1BFA8();
    sub_1B59AE130();
    sub_1B5A1BFA8();
    swift_bridgeObjectRelease();
    sub_1B5A1BFA8();
    __swift_project_boxed_opaque_existential_1(&v29, v31);
    sub_1B59AE2EC();
    sub_1B5A1BFA8();
    swift_bridgeObjectRelease();
    unint64_t v20 = v27;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  }
  else if (v18 == *MEMORY[0x1E4FBBA78])
  {
    (*(void (**)(long long *, uint64_t))(v15 + 96))(v17, v14);
    (*(void (**)(char *, long long *, uint64_t))(v2 + 32))(v13, v17, v1);
    unint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_1B5A1C3A8();
    swift_bridgeObjectRelease();
    unint64_t v29 = 0xD000000000000020;
    unint64_t v30 = 0x80000001B5A332F0;
    sub_1B59AE130();
    sub_1B5A1BFA8();
    swift_bridgeObjectRelease();
    sub_1B5A1BFA8();
    sub_1B5A1C3E8();
    sub_1B5A1BFA8();
    swift_bridgeObjectRelease();
    unint64_t v20 = v29;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v1);
  }
  else
  {
    uint64_t v24 = sub_1B5A1A178();
    if (v25) {
      unint64_t v20 = v24;
    }
    else {
      unint64_t v20 = 0xD00000000000001CLL;
    }
    (*(void (**)(long long *, uint64_t))(v15 + 8))(v17, v14);
  }
  return v20;
}

uint64_t sub_1B59AD758(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  if (*(void *)(a4 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_remoteState))
  {
    uint64_t v5 = result;
    uint64_t v6 = *a3;
    swift_retain();
    sub_1B59C9F9C(v5, a2, v6);
    return swift_release();
  }
  return result;
}

uint64_t RemoteLoader.reload<A>(decoding:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v8 = sub_1B5A1BDF8();
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v45 = (void *)v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v43 = (void *)((char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)(a3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v42 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v41 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v52 = (char *)v41 - v17;
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v18 = a3;
  uint64_t v19 = sub_1B5A1A328();
  uint64_t v46 = __swift_project_value_buffer(v19, (uint64_t)qword_1E9D910D0);
  unint64_t v20 = sub_1B5A1A308();
  os_log_type_t v21 = sub_1B5A1C278();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_1B58FD000, v20, v21, "Loading from decoder", v22, 2u);
    MEMORY[0x1BA9A4780](v22, -1, -1);
  }

  uint64_t v50 = v11;
  long long v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v24 = v52;
  v23(v52, v47, v18);
  uint64_t v49 = v5;
  uint64_t v25 = sub_1B5A1A108();
  uint64_t v26 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(a4 + 32))(v65, v18, a4);
  unint64_t v28 = v27;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v63[0] = *v28;
  *unint64_t v28 = 0x8000000000000000;
  sub_1B59AEDDC(v25, (uint64_t)sub_1B59AED34, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)v63);
  *unint64_t v28 = *(void *)&v63[0];
  swift_bridgeObjectRelease();
  v26(v65, 0);
  v23(v16, (uint64_t)v24, v18);
  uint64_t v30 = *(void *)(a4 + 8);
  sub_1B59AFD70();
  sub_1B5A1A338();
  uint64_t v51 = v18;
  uint64_t v31 = v50 + 8;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v50 + 8);
  v32(v16, v18);
  unint64_t v33 = v65[0];
  uint64_t v47 = v31;
  v41[1] = v30;
  if (!v65[0]) {
    unint64_t v33 = sub_1B59030D8(MEMORY[0x1E4FBC860]);
  }
  sub_1B597A758();
  uint64_t v34 = sub_1B5A1C288();
  uint64_t v35 = v43;
  uint64_t v36 = v44;
  *uint64_t v43 = v34;
  uint64_t v37 = v45;
  (*(void (**)(uint64_t *, void, void *))(v36 + 104))(v35, *MEMORY[0x1E4FBCBF0], v45);
  char v38 = sub_1B5A1BE08();
  (*(void (**)(uint64_t *, void *))(v36 + 8))(v35, v37);
  if (v38)
  {
    sub_1B590505C(v33, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B59AFDC4);
    swift_bridgeObjectRelease();
    uint64_t v39 = v42;
    v23(v42, (uint64_t)v52, v51);
    sub_1B59AFDCC();
    sub_1B5A1A338();
    v32(v39, v51);
    sub_1B5909890((uint64_t)v65, (uint64_t)&v53, &qword_1E9D63B40);
    if (*((void *)&v53 + 1))
    {
      v63[6] = v59;
      v63[7] = v60;
      v63[8] = v61;
      uint64_t v64 = v62;
      v63[2] = v55;
      v63[3] = v56;
      v63[4] = v57;
      v63[5] = v58;
      v63[0] = v53;
      v63[1] = v54;
      *((void *)&v54 + 1) = &type metadata for ViewContent;
      *(void *)&long long v55 = sub_1B5914034();
      *(void *)&long long v53 = swift_allocObject();
      sub_1B591CBD8((uint64_t)v63, v53 + 16);
      BYTE8(v55) = 0;
      sub_1B59A92F4((uint64_t *)&v53);
      sub_1B591CC10((uint64_t)v63);
      sub_1B59AFE20((uint64_t)v65);
      v32(v52, v51);
      return sub_1B5908F6C((uint64_t)&v53);
    }
    else
    {
      sub_1B59AFE20((uint64_t)v65);
      v32(v52, v51);
      return sub_1B5908FC0((uint64_t)&v53, &qword_1E9D63B40);
    }
  }
  else
  {
    __break(1u);
    *uint64_t v37 = *(void *)&v63[0];
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t RemoteLoader.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader__status;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65040);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1B5908FC0(v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_savedStatus, &qword_1E9D65060);
  swift_release();
  sub_1B59AFEEC(v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource);
  swift_release();
  swift_release();
  return v0;
}

uint64_t RemoteLoader.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader__status;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65040);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1B5908FC0(v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_savedStatus, &qword_1E9D65060);
  swift_release();
  sub_1B59AFEEC(v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource);
  swift_release();
  swift_release();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v3, v4);
}

uint64_t sub_1B59AE130()
{
  uint64_t v0 = sub_1B5A1C3D8();
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1B596928C(0, v1, 0);
    uint64_t v2 = v0 + 32;
    uint64_t v3 = v13;
    do
    {
      sub_1B590CA38(v2, (uint64_t)v12);
      __swift_project_boxed_opaque_existential_1(v12, v12[3]);
      uint64_t v4 = sub_1B59AE2EC();
      uint64_t v6 = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B596928C(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v13;
      }
      unint64_t v8 = *(void *)(v3 + 16);
      unint64_t v7 = *(void *)(v3 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1B596928C(v7 > 1, v8 + 1, 1);
        uint64_t v3 = v13;
      }
      *(void *)(v3 + 16) = v8 + 1;
      uint64_t v9 = v3 + 16 * v8;
      *(void *)(v9 + 32) = v4;
      *(void *)(v9 + 40) = v6;
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  v12[0] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63988);
  sub_1B59095C8(&qword_1E9D63990, &qword_1E9D63988);
  uint64_t v10 = sub_1B5A1BEB8();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B59AE2EC()
{
  swift_getDynamicType();
  swift_getMetatypeMetadata();
  uint64_t v0 = sub_1B5A1BF58();
  unint64_t v2 = v1;
  uint64_t v13 = 46;
  unint64_t v14 = 0xE100000000000000;
  _OWORD v12[2] = &v13;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1B59AE734(0x7FFFFFFFFFFFFFFFLL, 1, sub_1B59B0F54, (uint64_t)v12, v0, v2);
  if (v3[2] < 2uLL)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v0;
    unint64_t v14 = v2;
    goto LABEL_5;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v3[2] >= 2uLL)
  {
    uint64_t v5 = v3[8];
    uint64_t v6 = v3[9];
    uint64_t v7 = v3[10];
    uint64_t v8 = v3[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1BA9A3760](v5, v6, v7, v8);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    uint64_t v13 = v9;
    unint64_t v14 = v11;
LABEL_5:
    sub_1B5A1BFA8();
    sub_1B5A1C878();
    sub_1B5A1BFA8();
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t EnvironmentValues.remoteLoader.getter()
{
  sub_1B59AFF14();
  sub_1B5A1A998();
  return v1;
}

uint64_t sub_1B59AE4A4@<X0>(void *a1@<X8>)
{
  sub_1B59AFF14();
  uint64_t result = sub_1B5A1A998();
  *a1 = v3;
  return result;
}

uint64_t sub_1B59AE4F4()
{
  return sub_1B5A1A9A8();
}

uint64_t EnvironmentValues.remoteLoader.setter()
{
  return sub_1B5A1A9A8();
}

uint64_t sub_1B59AE590()
{
  type metadata accessor for RemoteLoader(0);
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1B59A9000();
  qword_1E9D65018 = v0;
  return result;
}

uint64_t sub_1B59AE5D0@<X0>(void *a1@<X8>)
{
  if (qword_1E9D62B10 != -1) {
    swift_once();
  }
  *a1 = qword_1E9D65018;
  return swift_retain();
}

uint64_t (*EnvironmentValues.remoteLoader.modify(uint64_t a1))(void *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_1B59AFF14();
  sub_1B5A1A998();
  return sub_1B59AE6A0;
}

uint64_t sub_1B59AE6A0(void *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0) {
    return sub_1B5A1A9A8();
  }
  swift_retain();
  sub_1B5A1A9A8();
  return swift_release();
}

uint64_t sub_1B59AE734(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1B59AEBD8(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_1B5A1C018();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_1B5A1BF98();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_1B5A1BF98();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_1B5A1C038();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1B59BA88C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_1B59BA88C((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  _OWORD v13[2] = v27 + 1;
  unint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_1B5A1BF98();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_1B5A1C038();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1B59BA88C(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_1B59BA88C((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    _OWORD v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1B5A1C4F8();
  __break(1u);
LABEL_42:
  uint64_t result = sub_1B5A1C4F8();
  __break(1u);
  return result;
}

uint64_t sub_1B59AEBD8(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1B5A1C038();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_1B59BA88C(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_1B59BA88C((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    _OWORD v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    void v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1B5A1C4F8();
  __break(1u);
  return result;
}

uint64_t sub_1B59AED34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650B0) + 48);
  uint64_t v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650B8) + 48);
  uint64_t v6 = sub_1B5A1C4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return sub_1B59052CC(v4, v5);
}

uint64_t sub_1B59AEDDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10 = sub_1B5A1C4E8();
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650C0);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = ~v16;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = -v16;
  uint64_t v44 = a1;
  uint64_t v45 = a1 + 64;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  uint64_t v46 = v17;
  uint64_t v47 = 0;
  uint64_t v48 = v20 & v18;
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  v39[2] = a1;
  swift_bridgeObjectRetain();
  v39[1] = a3;
  swift_retain();
  sub_1B59AF1D0((uint64_t)v15);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B59B0E78();
    return swift_release();
  }
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v40 = (void (**)(char *, uint64_t))(v41 + 8);
  while (1)
  {
    uint64_t v24 = &v15[*(int *)(v21 + 48)];
    uint64_t v25 = v10;
    v51(v12, v15, v10);
    sub_1B59098F4(v24, v43);
    uint64_t v26 = *a5;
    unint64_t v28 = sub_1B59049D0((uint64_t)v12);
    uint64_t v29 = *(void *)(v26 + 16);
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (*(void *)(v26 + 24) >= v31)
    {
      if (a4)
      {
        if (v27) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_1B5958F80();
        if (v32) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_1B59572E8(v31, a4 & 1);
      unint64_t v33 = sub_1B59049D0((uint64_t)v12);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_22;
      }
      unint64_t v28 = v33;
      if (v32)
      {
LABEL_7:
        sub_1B59052CC((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
        uint64_t v10 = v25;
        (*v40)(v12, v25);
        uint64_t v23 = (_OWORD *)(*(void *)(*a5 + 56) + 32 * v28);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        sub_1B59098F4(v42, v23);
        goto LABEL_8;
      }
    }
    uint64_t v35 = (void *)*a5;
    *(void *)(*a5 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    uint64_t v10 = v25;
    v51((char *)(v35[6] + *(void *)(v41 + 72) * v28), v12, v25);
    sub_1B59098F4(v43, (_OWORD *)(v35[7] + 32 * v28));
    uint64_t v36 = v35[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_21;
    }
    v35[2] = v38;
LABEL_8:
    sub_1B59AF1D0((uint64_t)v15);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650B8);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v15, 1, v21) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1B5A1C738();
  __break(1u);
  return result;
}

uint64_t sub_1B59AF1D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650B0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650C8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v16 = v1[2];
  int64_t v15 = v1[3];
  int64_t v17 = v15;
  unint64_t v18 = v1[4];
  BOOL v37 = v5;
  uint64_t v40 = v16;
  if (v18)
  {
    uint64_t v38 = v9;
    uint64_t v19 = v14;
    uint64_t v20 = (v18 - 1) & v18;
    unint64_t v21 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    uint64_t v22 = *(void *)(v13 + 48);
    uint64_t v23 = v13;
    uint64_t v24 = sub_1B5A1C4E8();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v12, v22 + *(void *)(*(void *)(v24 - 8) + 72) * v21, v24);
    sub_1B59052CC(*(void *)(v23 + 56) + 32 * v21, (uint64_t)&v12[*(int *)(v2 + 48)]);
    uint64_t v25 = v3;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    uint64_t v14 = v19;
    uint64_t v9 = v38;
    goto LABEL_23;
  }
  int64_t v26 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v27 = (unint64_t)(v16 + 64) >> 6;
  if (v26 < v27)
  {
    unint64_t v28 = *(void *)(v14 + 8 * v26);
    if (v28)
    {
LABEL_7:
      uint64_t v38 = v9;
      uint64_t v19 = v14;
      uint64_t v20 = (v28 - 1) & v28;
      unint64_t v21 = __clz(__rbit64(v28)) + (v26 << 6);
      int64_t v17 = v26;
      goto LABEL_3;
    }
    int64_t v29 = v15 + 2;
    int64_t v17 = v15 + 1;
    if (v15 + 2 < v27)
    {
      unint64_t v28 = *(void *)(v14 + 8 * v29);
      if (v28)
      {
LABEL_10:
        int64_t v26 = v29;
        goto LABEL_7;
      }
      int64_t v17 = v15 + 2;
      if (v15 + 3 < v27)
      {
        unint64_t v28 = *(void *)(v14 + 8 * (v15 + 3));
        if (v28)
        {
          int64_t v26 = v15 + 3;
          goto LABEL_7;
        }
        int64_t v29 = v15 + 4;
        int64_t v17 = v15 + 3;
        if (v15 + 4 < v27)
        {
          unint64_t v28 = *(void *)(v14 + 8 * v29);
          if (v28) {
            goto LABEL_10;
          }
          int64_t v26 = v15 + 5;
          int64_t v17 = v15 + 4;
          if (v15 + 5 < v27)
          {
            unint64_t v28 = *(void *)(v14 + 8 * v26);
            if (v28) {
              goto LABEL_7;
            }
            int64_t v17 = v27 - 1;
            int64_t v30 = v15 + 6;
            while (v27 != v30)
            {
              unint64_t v28 = *(void *)(v14 + 8 * v30++);
              if (v28)
              {
                int64_t v26 = v30 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v25 = v3;
  uint64_t v23 = v13;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
  uint64_t v20 = 0;
LABEL_23:
  *uint64_t v1 = v23;
  v1[1] = v14;
  v1[2] = v40;
  v1[3] = v17;
  v1[4] = v20;
  uint64_t v31 = (void (*)(uint64_t))v1[5];
  sub_1B596F6EC((uint64_t)v12, (uint64_t)v9, &qword_1E9D650C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 1, v2) == 1)
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v39, 1, 1, v32);
  }
  else
  {
    uint64_t v33 = (uint64_t)v9;
    uint64_t v34 = (uint64_t)v37;
    sub_1B596F6EC(v33, (uint64_t)v37, &qword_1E9D650B0);
    uint64_t v35 = v39;
    v31(v34);
    sub_1B5908FC0(v34, &qword_1E9D650B0);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650B8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  }
}

uint64_t sub_1B59AF5D4(uint64_t a1)
{
  uint64_t v3 = sub_1B5A1C4E8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = OBJC_IVAR____TtC6LiftUI12RemoteLoader_remoteState;
  *(void *)(v1 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_remoteState) = a1;
  swift_retain();
  swift_release();
  if (qword_1E9D62B00 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v3, (uint64_t)qword_1E9D91080);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  uint64_t v9 = *(void *)(v1 + v7);
  if (v9)
  {
    *((void *)&v14 + 1) = type metadata accessor for RemoteStateStore(0);
    *(void *)&long long v13 = v9;
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_retain();
  uint64_t v10 = (uint64_t (*)(unsigned char *, void))sub_1B5A1A0F8();
  sub_1B59A884C((uint64_t)&v13, (uint64_t)v6);
  return v10(v12, 0);
}

uint64_t _s6LiftUI12RemoteLoaderC11remoteState15contentRegistryAcA0cF5StoreC_AA07ContentH0CtcfC_0(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1B5A1C4E8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for RemoteLoader(0);
  uint64_t v7 = swift_allocObject();
  sub_1B59A9000();
  uint64_t v8 = qword_1E9D62B28;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v3, (uint64_t)qword_1E9D910E8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
  void v15[3] = type metadata accessor for ContentRegistry();
  v15[0] = a2;
  id v10 = a2;
  uint64_t v11 = (void (*)(unsigned char *, void))sub_1B5A1A0F8();
  sub_1B59A884C((uint64_t)v15, (uint64_t)v6);
  v11(v14, 0);
  uint64_t v12 = swift_retain();
  sub_1B59AF5D4(v12);
  swift_release();

  swift_release_n();
  return v7;
}

uint64_t sub_1B59AF944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B59AF9A8()
{
  uint64_t v1 = *(void *)(type metadata accessor for RemoteContent(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_1B5905904(*(void *)v5, *(void *)(v5 + 8));
      break;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      uint64_t v6 = sub_1B5A1A258();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      uint64_t v7 = (uint64_t *)(v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0) + 64));
      unint64_t v8 = v7[1];
      if (v8 >> 60 != 15) {
        sub_1B5905904(*v7, v8);
      }
      break;
    case 3u:
      sub_1B5904A88(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(unsigned char *)(v5 + 24));
      unsigned int v9 = *(unsigned __int8 *)(v5 + 56);
      if (v9 <= 0xFD) {
        sub_1B5904A88(*(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), v9);
      }
      int v10 = *(unsigned __int8 *)(v5 + 88);
      if (v10 != 255) {
        sub_1B5905248(*(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), v10 & 1);
      }
      swift_release();
      break;
    default:
      break;
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 9, v2 | 7);
}

uint64_t sub_1B59AFB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B59AFBEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RemoteContent(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1B5921C08;
  return sub_1B59A94FC(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1B59AFD1C@<X0>(void *a1@<X8>)
{
  sub_1B59AFF14();
  uint64_t result = sub_1B5A1A998();
  *a1 = v3;
  return result;
}

unint64_t sub_1B59AFD70()
{
  unint64_t result = qword_1E9D65048;
  if (!qword_1E9D65048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65048);
  }
  return result;
}

uint64_t sub_1B59AFDC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B59AD758(a1, a2, a3, v3);
}

unint64_t sub_1B59AFDCC()
{
  unint64_t result = qword_1E9D65050;
  if (!qword_1E9D65050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65050);
  }
  return result;
}

uint64_t sub_1B59AFE20(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B59AFE74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B59AFEEC(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B59AFF14()
{
  unint64_t result = qword_1E9D65068;
  if (!qword_1E9D65068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65068);
  }
  return result;
}

unint64_t sub_1B59AFF6C()
{
  unint64_t result = qword_1E9D65070;
  if (!qword_1E9D65070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65070);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReloadType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59B0094);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReloadType()
{
  return &type metadata for ReloadType;
}

uint64_t sub_1B59B00CC()
{
  return type metadata accessor for RemoteLoader(0);
}

uint64_t type metadata accessor for RemoteLoader(uint64_t a1)
{
  return sub_1B59001B4(a1, (uint64_t *)&unk_1E9D65078);
}

void sub_1B59B00F4()
{
  sub_1B59B01D4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for RemoteLoader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteLoader);
}

void sub_1B59B01D4()
{
  if (!qword_1E9D65088)
  {
    unint64_t v0 = sub_1B5A1A3E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9D65088);
    }
  }
}

void destroy for RemoteLoader.Status(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1)
  {
    uint64_t v2 = *(void **)a1;
  }
  else if (!v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
}

uint64_t initializeWithCopy for RemoteLoader.Status(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    uint64_t v5 = *a2;
    id v6 = (id)*a2;
    *(void *)a1 = v5;
    *(unsigned char *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for RemoteLoader.Status(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v7 = *(void **)a2;
      id v8 = v7;
      *(void *)a1 = v7;
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v9 = *a2;
      long long v10 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for RemoteLoader.Status(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteLoader.Status(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RemoteLoader.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B59B0570(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1B59B058C(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RemoteLoader.Status()
{
  return &type metadata for RemoteLoader.Status;
}

uint64_t sub_1B59B05C4()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for RemoteLoaderKey()
{
  return &type metadata for RemoteLoaderKey;
}

uint64_t *sub_1B59B0670(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_1B5A1A0D8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_1B5A1A258();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B59B07C0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1B5A1A0D8();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_1B5A1A258();
  }
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(a1, v3);
}

void *sub_1B59B084C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_1B5A1A0D8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1B5A1A258();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1B59B0958(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B59B0A74((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_1B5A1A0D8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1B5A1A258();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B59B0A74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoteLoaderError(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for RemoteLoaderError(uint64_t a1)
{
  return sub_1B59001B4(a1, (uint64_t *)&unk_1E9D65090);
}

void *sub_1B59B0AF0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_1B5A1A0D8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1B5A1A258();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1B59B0BFC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B59B0A74((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_1B5A1A0D8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1B5A1A258();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B59B0D18()
{
  uint64_t result = sub_1B5A1A258();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1B5A1A0D8();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B59B0DDC(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1B59B0E78()
{
  return swift_release();
}

uint64_t sub_1B59B0E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B59B0EE8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1B5905904(a1, a2);
  }
  return a1;
}

unint64_t sub_1B59B0EFC()
{
  unint64_t result = qword_1E9D62BD0;
  if (!qword_1E9D62BD0)
  {
    type metadata accessor for RemoteLoaderError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D62BD0);
  }
  return result;
}

uint64_t sub_1B59B0F54(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1B5A1C678() & 1;
  }
}

uint64_t sub_1B59B0FAC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B59B0FE4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

_OWORD *sub_1B59B0FF4(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1B59B1010()
{
  uint64_t v1 = *(void **)(v0 + 16);
  long long v2 = (void *)sub_1B5A1A1E8();
  id v3 = objc_msgSend(v1, sel_viewForError_, v2);

  if (!v3) {
    return 0;
  }
  sub_1B59B2E64();
  return sub_1B5A1BA88();
}

id sub_1B59B108C()
{
  id result = objc_msgSend(*(id *)(v0 + 16), sel_loadingView);
  if (result)
  {
    sub_1B59B2E64();
    return (id)sub_1B5A1BA88();
  }
  return result;
}

void sub_1B59B10E0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (id)sub_1B5A1BEE8();
  objc_msgSend(v1, sel_didFinishLoadingRemoteContentViewWithId_, v2);
}

void sub_1B59B1138()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (void *)sub_1B5A1BEE8();
  id v3 = (id)sub_1B5A1A1E8();
  objc_msgSend(v1, sel_didFinishLoadingRemoteContentViewWithId_error_, v2, v3);
}

void sub_1B59B11B0()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (void *)sub_1B5A1A228();
  v7[0] = 0;
  id v3 = objc_msgSend(v1, sel_requestFor_error_, v2, v7);

  id v4 = v7[0];
  if (v3)
  {
    sub_1B5A1A078();
    id v5 = v4;
  }
  else
  {
    id v6 = v7[0];
    sub_1B5A1A1F8();

    swift_willThrow();
  }
}

uint64_t sub_1B59B1298(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v1;
  return MEMORY[0x1F4188298](sub_1B59B12B8, 0, 0);
}

uint64_t sub_1B59B12B8()
{
  uint64_t v1 = *(void **)(v0[18] + 16);
  uint64_t v2 = sub_1B5A1A068();
  v0[19] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1B59B13D0;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1B59B15C0;
  v0[13] = &block_descriptor;
  v0[14] = v3;
  objc_msgSend(v1, sel_dataFor_completionHandler_, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1B59B13D0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_1B59B1550;
  }
  else {
    uint64_t v2 = sub_1B59B14E0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1B59B14E0()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);

  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v2, v1);
}

uint64_t sub_1B59B1550()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1B59B15C0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E68);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    id v8 = a2;
    uint64_t v9 = sub_1B5A1A278();
    uint64_t v11 = v10;

    uint64_t v12 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    *uint64_t v12 = v9;
    v12[1] = v11;
    return MEMORY[0x1F4188200](v3);
  }
}

uint64_t sub_1B59B1694()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

void sub_1B59B16CC()
{
}

uint64_t sub_1B59B16E4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1B59B1790;
  v4[17] = a1;
  v4[18] = v1;
  return MEMORY[0x1F4188298](sub_1B59B12B8, 0, 0);
}

uint64_t sub_1B59B1790(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  id v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

id sub_1B59B18A0()
{
  return *v0;
}

uint64_t sub_1B59B18B8()
{
  return sub_1B5A1ADA8();
}

uint64_t sub_1B59B18FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B59B2FB8();
  return MEMORY[0x1F40F9EF0](a1, a2, a3, v6);
}

uint64_t sub_1B59B1960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B59B2FB8();
  return MEMORY[0x1F40F9E78](a1, a2, a3, v6);
}

void sub_1B59B19C4()
{
}

uint64_t static LiftUIFactory.viewController(json:delegate:dataSource:contentRegistry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v14 = a1;
  v14[1] = a2;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v15 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v16 = LocalStateStore.init()();
  uint64_t v17 = sub_1B59B2174((uint64_t)v14, a3, a4, a5, v15, v16, a6);
  swift_release();
  swift_release();
  sub_1B59B2F28((uint64_t)v14, type metadata accessor for RemoteContent);
  return v17;
}

uint64_t static LiftUIFactory.viewController(data:delegate:dataSource:contentRegistry:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v14 = a1;
  v14[1] = a2;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  sub_1B5905744(a1, a2);
  uint64_t v15 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v16 = LocalStateStore.init()();
  uint64_t v17 = sub_1B59B2174((uint64_t)v14, a3, a4, a5, v15, v16, a6);
  swift_release();
  swift_release();
  sub_1B59B2F28((uint64_t)v14, type metadata accessor for RemoteContent);
  return v17;
}

uint64_t static LiftUIFactory.viewController(url:delegate:dataSource:contentRegistry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
  uint64_t v14 = *(int *)(v13 + 48);
  uint64_t v15 = *(int *)(v13 + 64);
  uint64_t v16 = sub_1B5A1A258();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v12, a1, v16);
  v12[v14] = 8;
  *(_OWORD *)&v12[v15] = xmmword_1B5A1D190;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  uint64_t v17 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v18 = LocalStateStore.init()();
  uint64_t v19 = sub_1B59B2174((uint64_t)v12, a2, a3, a4, v17, v18, a5);
  swift_release();
  swift_release();
  sub_1B59B2F28((uint64_t)v12, type metadata accessor for RemoteContent);
  return v19;
}

id LiftUIFactory.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id LiftUIFactory.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LiftUIFactory();
  return objc_msgSendSuper2(&v2, sel_init);
}

id LiftUIFactory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LiftUIFactory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B59B2174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v71 = a6;
  uint64_t v72 = a7;
  uint64_t v73 = a4;
  uint64_t v74 = a3;
  uint64_t v69 = a1;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65110);
  MEMORY[0x1F4188790](v64);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v65 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65118);
  MEMORY[0x1F4188790](v65);
  uint64_t v66 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1B5A1A2A8();
  uint64_t v12 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for RemoteContentView(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (uint64_t *)((char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65120);
  MEMORY[0x1F4188790](v67);
  uint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65128);
  MEMORY[0x1F4188790](v68);
  uint64_t v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65130);
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  unint64_t v28 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    char v65 = v28;
    uint64_t v66 = v26;
    type metadata accessor for LiftUIUIKitDelegateWrapper();
    uint64_t v29 = swift_allocObject();
    uint64_t v63 = a2;
    uint64_t v64 = v29;
    *(void *)(v29 + 16) = a2;
    sub_1B59B2EC0(v69, (uint64_t)v17, type metadata accessor for RemoteContent);
    swift_unknownObjectRetain_n();
    swift_retain();
    uint64_t v30 = a5;
    uint64_t v31 = v71;
    swift_retain();
    sub_1B5A1A298();
    uint64_t v32 = sub_1B5A1A288();
    uint64_t v34 = v33;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v70);
    sub_1B58FFC10(v32, v34, (uint64_t)v17, v30, v31, v20);
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for AnyWeakDelegate();
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v36 + 24) = &off_1F0E9EAF0;
    swift_unknownObjectWeakAssign();
    sub_1B59B2EC0((uint64_t)v20, (uint64_t)v22, type metadata accessor for RemoteContentView);
    BOOL v37 = (uint64_t *)&v22[*(int *)(v67 + 36)];
    *BOOL v37 = KeyPath;
    v37[1] = v36;
    v37[2] = (uint64_t)&off_1F0EA1C48;
    sub_1B59B2F28((uint64_t)v20, type metadata accessor for RemoteContentView);
    uint64_t v38 = swift_getKeyPath();
    type metadata accessor for AnyWeakDataSource();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v39 + 24) = v73;
    swift_unknownObjectWeakAssign();
    sub_1B5909890((uint64_t)v22, (uint64_t)v24, &qword_1E9D65120);
    uint64_t v40 = (uint64_t *)&v24[*(int *)(v68 + 36)];
    *uint64_t v40 = v38;
    v40[1] = v39;
    v40[2] = (uint64_t)&off_1F0EA2F58;
    sub_1B5908FC0((uint64_t)v22, &qword_1E9D65120);
    uint64_t v41 = swift_getKeyPath();
    uint64_t v42 = (uint64_t)v65;
    sub_1B5909890((uint64_t)v24, (uint64_t)v65, &qword_1E9D65128);
    uint64_t v43 = (uint64_t *)(v42 + *(int *)(v66 + 36));
    uint64_t v44 = v72;
    *uint64_t v43 = v41;
    v43[1] = (uint64_t)v44;
    id v45 = v44;
    sub_1B5908FC0((uint64_t)v24, &qword_1E9D65128);
    id v46 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65140));
    uint64_t v47 = sub_1B5A1AD78();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1B59B2EC0(v69, (uint64_t)v17, type metadata accessor for RemoteContent);
    swift_retain();
    uint64_t v48 = v71;
    swift_retain();
    sub_1B5A1A298();
    uint64_t v49 = sub_1B5A1A288();
    uint64_t v50 = (uint64_t)v10;
    uint64_t v52 = v51;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v70);
    sub_1B58FFC10(v49, v52, (uint64_t)v17, a5, v48, v20);
    uint64_t v53 = swift_getKeyPath();
    type metadata accessor for AnyWeakDataSource();
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v54 + 24) = v73;
    swift_unknownObjectWeakAssign();
    sub_1B59B2EC0((uint64_t)v20, v50, type metadata accessor for RemoteContentView);
    long long v55 = (uint64_t *)(v50 + *(int *)(v64 + 36));
    uint64_t *v55 = v53;
    v55[1] = v54;
    v55[2] = (uint64_t)&off_1F0EA2F58;
    sub_1B59B2F28((uint64_t)v20, type metadata accessor for RemoteContentView);
    uint64_t v56 = swift_getKeyPath();
    uint64_t v57 = v66;
    sub_1B5909890(v50, v66, &qword_1E9D65110);
    long long v58 = (uint64_t *)(v57 + *((int *)v65 + 9));
    long long v59 = v72;
    *long long v58 = v56;
    v58[1] = (uint64_t)v59;
    id v60 = v59;
    sub_1B5908FC0(v50, &qword_1E9D65110);
    id v61 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65138));
    return sub_1B5A1AD78();
  }
  return v47;
}

uint64_t _s6LiftUI0A9UIFactoryC14viewController4json8delegate10dataSourceSo06UIViewE0CSS_So0A10UIDelegate_pSgSo0a6UIDataI0_pSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a4)
  {
    type metadata accessor for LiftUIObjcDataSourceWrapper();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a4;
    uint64_t v12 = &off_1F0E9EB18;
  }
  else
  {
    type metadata accessor for BasicLiftUIDataSource();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = &protocol witness table for BasicLiftUIDataSource;
  }
  id v13 = objc_allocWithZone((Class)type metadata accessor for ContentRegistry());
  swift_unknownObjectRetain();
  id v14 = objc_msgSend(v13, sel_init);
  *uint64_t v10 = a1;
  v10[1] = a2;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v15 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v16 = LocalStateStore.init()();
  uint64_t v17 = sub_1B59B2174((uint64_t)v10, a3, v11, (uint64_t)v12, v15, v16, v14);
  swift_release();
  swift_release();
  sub_1B59B2F28((uint64_t)v10, type metadata accessor for RemoteContent);
  swift_unknownObjectRelease();

  return v17;
}

uint64_t _s6LiftUI0A9UIFactoryC14viewController4data8delegate0F6SourceSo06UIViewE0C10Foundation4DataV_So0A10UIDelegate_pSgSo0a6UIDataH0_pSgtFZ_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a4)
  {
    type metadata accessor for LiftUIObjcDataSourceWrapper();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a4;
    uint64_t v12 = &off_1F0E9EB18;
  }
  else
  {
    type metadata accessor for BasicLiftUIDataSource();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = &protocol witness table for BasicLiftUIDataSource;
  }
  id v13 = objc_allocWithZone((Class)type metadata accessor for ContentRegistry());
  swift_unknownObjectRetain();
  id v14 = objc_msgSend(v13, sel_init);
  *uint64_t v10 = a1;
  v10[1] = a2;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  sub_1B5905744(a1, a2);
  uint64_t v15 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v16 = LocalStateStore.init()();
  uint64_t v17 = sub_1B59B2174((uint64_t)v10, a3, v11, (uint64_t)v12, v15, v16, v14);
  swift_release();
  swift_release();
  sub_1B59B2F28((uint64_t)v10, type metadata accessor for RemoteContent);
  swift_unknownObjectRelease();

  return v17;
}

uint64_t _s6LiftUI0A9UIFactoryC14viewController3url8delegate10dataSourceSo06UIViewE0C10Foundation3URLV_So0A10UIDelegate_pSgSo0a6UIDataI0_pSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    type metadata accessor for LiftUIObjcDataSourceWrapper();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a3;
    uint64_t v10 = &off_1F0E9EB18;
  }
  else
  {
    type metadata accessor for BasicLiftUIDataSource();
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = &protocol witness table for BasicLiftUIDataSource;
  }
  id v11 = objc_allocWithZone((Class)type metadata accessor for ContentRegistry());
  swift_unknownObjectRetain();
  id v12 = objc_msgSend(v11, sel_init);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
  uint64_t v14 = *(int *)(v13 + 48);
  uint64_t v15 = *(int *)(v13 + 64);
  uint64_t v16 = sub_1B5A1A258();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v8, a1, v16);
  v8[v14] = 8;
  *(_OWORD *)&v8[v15] = xmmword_1B5A1D190;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  uint64_t v17 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  uint64_t v18 = LocalStateStore.init()();
  uint64_t v19 = sub_1B59B2174((uint64_t)v8, a2, v9, (uint64_t)v10, v17, v18, v12);
  swift_release();
  swift_release();
  sub_1B59B2F28((uint64_t)v8, type metadata accessor for RemoteContent);
  swift_unknownObjectRelease();

  return v19;
}

uint64_t type metadata accessor for LiftUIFactory()
{
  return self;
}

uint64_t type metadata accessor for LiftUIUIKitDelegateWrapper()
{
  return self;
}

uint64_t type metadata accessor for LiftUIObjcDataSourceWrapper()
{
  return self;
}

unint64_t sub_1B59B2E64()
{
  unint64_t result = qword_1E9D65100;
  if (!qword_1E9D65100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9D65100);
  }
  return result;
}

uint64_t sub_1B59B2EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B59B2F28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for AnyUIViewRepresentable()
{
  return &type metadata for AnyUIViewRepresentable;
}

uint64_t sub_1B59B2FAC()
{
  return MEMORY[0x1E4F3F158];
}

unint64_t sub_1B59B2FB8()
{
  unint64_t result = qword_1E9D65148;
  if (!qword_1E9D65148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65148);
  }
  return result;
}

uint64_t sub_1B59B300C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t result = sub_1B59049B8(result, a2), (v6 & 1) != 0))
  {
    *a4 = *(void *)(*(void *)(a3 + 56) + 8 * result);
    return swift_retain();
  }
  else
  {
    *a4 = 0xF000000000000007;
  }
  return result;
}

unint64_t StringResolvable.resolved(with:)(uint64_t a1)
{
  uint64_t v77 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65150);
  uint64_t v78 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65158);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)v1;
  uint64_t v9 = *(void *)(v1 + 8);
  uint64_t v11 = *(void *)(v1 + 16);
  unsigned int v12 = *(unsigned __int8 *)(v1 + 24);
  if (!(v12 >> 6))
  {
    sub_1B5904B8C(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), v12 & 1);
    unint64_t v1 = sub_1B59B3EBC(v77, v10, v9, v11, v12 & 1);
    sub_1B5904A88(v10, v9, v11, v12);
    return v1;
  }
  if (v12 >> 6 == 1)
  {
    uint64_t v13 = v77;
    swift_retain();
    uint64_t v14 = v82;
    uint64_t v15 = sub_1B59BB3DC(v10, v13);
    swift_release();
    if (!v14)
    {
      *(void *)&long long v79 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63988);
      sub_1B59095C8(&qword_1E9D63990, &qword_1E9D63988);
      unint64_t v1 = sub_1B5A1BEB8();
      swift_bridgeObjectRelease();
    }
    return v1;
  }
  uint64_t v71 = v6;
  unint64_t v1 = v12 & 1;
  sub_1B5904B8C(v10, v9, v11, v12 & 1);
  uint64_t v16 = v82;
  uint64_t v18 = sub_1B59B3EBC(v77, v10, v9, v11, v12 & 1);
  uint64_t v19 = v10;
  uint64_t v20 = v16;
  if (v16)
  {
    sub_1B5904A88(v19, v9, v11, v12);
    return v1;
  }
  unint64_t v21 = v17;
  uint64_t v65 = v9;
  uint64_t v66 = v11;
  uint64_t v67 = v19;
  unsigned int v68 = v12;
  uint64_t v22 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65160);
  sub_1B5A1A2D8();
  uint64_t v75 = v22;
  unint64_t v76 = v21;
  *(void *)&long long v79 = v22;
  *((void *)&v79 + 1) = v21;
  sub_1B59B40CC();
  sub_1B59095C8(&qword_1E9D65170, &qword_1E9D65158);
  unint64_t v1 = (unint64_t)&v79;
  uint64_t v69 = v8;
  uint64_t v70 = v5;
  uint64_t v23 = sub_1B5A1BEA8();
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v82 = 0;
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
    uint64_t v26 = *(unsigned __int8 *)(v78 + 80);
    uint64_t v64 = v23;
    uint64_t v20 = v23 + ((v26 + 32) & ~v26);
    uint64_t v73 = (void (**)(char *, uint64_t))(v78 + 8);
    uint64_t v74 = v25;
    v78 += 16;
    uint64_t v72 = *(void *)(v78 + 56);
    uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v28 = 15;
    while (1)
    {
      v74(v4, v20, v2);
      unint64_t v1 = (unint64_t)v4;
      if ((unint64_t)sub_1B5A1A2F8() >> 14 < v28 >> 14) {
        break;
      }
      uint64_t v29 = sub_1B5A1C038();
      uint64_t v30 = MEMORY[0x1BA9A3760](v29);
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_1B59BA1F8(0, v27[2] + 1, 1, v27);
      }
      unint64_t v34 = v27[2];
      unint64_t v33 = v27[3];
      if (v34 >= v33 >> 1) {
        uint64_t v27 = sub_1B59BA1F8((void *)(v33 > 1), v34 + 1, 1, v27);
      }
      v27[2] = v34 + 1;
      uint64_t v35 = &v27[4 * v34];
      _DWORD v35[4] = v30;
      v35[5] = v32;
      v35[6] = 0;
      *((unsigned char *)v35 + 56) = 0;
      swift_getKeyPath();
      sub_1B5A1A2E8();
      swift_release();
      uint64_t v36 = MEMORY[0x1BA9A3760](v79, *((void *)&v79 + 1), v80, v81);
      unint64_t v1 = v37;
      swift_bridgeObjectRelease();
      uint64_t v38 = v82;
      sub_1B59B9374((uint64_t)&v79, 0xFuLL, v36, v1, (uint64_t)&unk_1F0EAA118, (void (*)(uint64_t, uint64_t, unint64_t))sub_1B5904B8C, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1B59C4798, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B594CDC0, (uint64_t)&unk_1F0EAA140, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B594CD1C);
      uint64_t v82 = v38;
      if (v38)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B5904A88(v67, v65, v66, v68);
        (*v73)(v4, v2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v70);
        return v1;
      }
      swift_bridgeObjectRelease();
      long long v39 = v79;
      uint64_t v40 = v80;
      char v41 = v81;
      unint64_t v43 = v27[2];
      unint64_t v42 = v27[3];
      if (v43 >= v42 >> 1)
      {
        long long v63 = v79;
        id v46 = sub_1B59BA1F8((void *)(v42 > 1), v43 + 1, 1, v27);
        long long v39 = v63;
        uint64_t v27 = v46;
      }
      v27[2] = v43 + 1;
      uint64_t v44 = &v27[4 * v43];
      *((_OWORD *)v44 + 2) = v39;
      v44[6] = v40;
      *((unsigned char *)v44 + 56) = v41;
      unint64_t v1 = (unint64_t)v4;
      sub_1B5A1A2F8();
      unint64_t v28 = v45;
      (*v73)(v4, v2);
      v20 += v72;
      if (!--v24)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v82;
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v28 = 15;
LABEL_22:
  uint64_t v47 = HIBYTE(v76) & 0xF;
  if ((v76 & 0x2000000000000000) == 0) {
    uint64_t v47 = v75 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v24 = v70;
  if (4 * v47 < v28 >> 14)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v48 = sub_1B5A1C038();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  swift_bridgeObjectRelease();
  unint64_t v1 = MEMORY[0x1BA9A3760](v48, v50, v52, v54);
  uint64_t v2 = v55;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_35:
  }
    uint64_t v27 = sub_1B59BA1F8(0, v27[2] + 1, 1, v27);
  uint64_t v56 = v77;
  unint64_t v58 = v27[2];
  unint64_t v57 = v27[3];
  if (v58 >= v57 >> 1) {
    uint64_t v27 = sub_1B59BA1F8((void *)(v57 > 1), v58 + 1, 1, v27);
  }
  v27[2] = v58 + 1;
  long long v59 = &v27[4 * v58];
  v59[4] = v1;
  v59[5] = v2;
  v59[6] = 0;
  *((unsigned char *)v59 + 56) = 0;
  swift_retain();
  uint64_t v60 = sub_1B59BB3DC((uint64_t)v27, v56);
  if (v20)
  {
    swift_release();
  }
  else
  {
    uint64_t v62 = v60;
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)&long long v79 = v62;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63988);
    sub_1B59095C8(&qword_1E9D63990, &qword_1E9D63988);
    unint64_t v1 = sub_1B5A1BEB8();
  }
  sub_1B5904A88(v67, v65, v66, v68);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v24);
  return v1;
}

uint64_t sub_1B59B3904@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if ((a5 & 1) == 0)
  {
    *(void *)a6 = a2;
    *(unsigned char *)(a6 + 8) = a3 & 1;
    return result;
  }
  uint64_t v11 = result;
  if ((~a4 & 0xF000000000000007) != 0)
  {
    sub_1B590D634(a2, a3, a4, 1);
    sub_1B590968C(a4);
    RemoteStateStore.subscript.getter(a2, a3, &v19);
    unint64_t v14 = v19;
    if ((~v19 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1B59B4F24(v14, v11, a4, a6);
      sub_1B5905298(a4);
      sub_1B599FF94(v14);
    }
    else
    {
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v15 = a2;
      *(void *)(v15 + 8) = a3;
      *(void *)(v15 + 16) = &type metadata for NumericValue;
      *(unsigned char *)(v15 + 32) = 0;
      swift_willThrow();
      sub_1B5905298(a4);
    }
    return sub_1B5905298(a4);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B590968C(a4);
    RemoteStateStore.subscript.getter(a2, a3, &v18);
    uint64_t v12 = v18;
    if ((~v18 & 0xF000000000000007) == 0)
    {
LABEL_5:
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v13 = a2;
      *(void *)(v13 + 8) = a3;
      *(void *)(v13 + 16) = &type metadata for NumericValue;
      *(unsigned char *)(v13 + 32) = 0;
      return swift_willThrow();
    }
    sub_1B59B4B88(v18, (uint64_t)&v19);
    if (v6)
    {
      swift_bridgeObjectRelease();
      return sub_1B599FF94(v12);
    }
    else
    {
      sub_1B599FF94(v12);
      unsigned __int8 v16 = v20;
      if (v20 == 255) {
        goto LABEL_5;
      }
      unint64_t v17 = v19;
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)a6 = v17;
      *(unsigned char *)(a6 + 8) = v16 & 1;
    }
  }
  return result;
}

unint64_t sub_1B59B3B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v5 = a2;
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B590D634(a2, a3, a4, 1);
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v16);
      uint64_t v11 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v5 = sub_1B59B5440(v11, a1, a4);
        sub_1B5905298(a4);
        sub_1B599FF94(v11);
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v12 = v5;
        *(void *)(v12 + 8) = a3;
        *(void *)(v12 + 16) = MEMORY[0x1E4FBB550];
        *(unsigned char *)(v12 + 32) = 0;
        swift_willThrow();
        sub_1B5905298(a4);
      }
      sub_1B5905298(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v16);
      uint64_t v9 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        if (v16 >> 61 == 1)
        {
          unint64_t v5 = *(void *)((v16 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B599FF94(v16);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B5951A10();
          swift_allocError();
          uint64_t v13 = MEMORY[0x1E4FBB550];
          *unint64_t v14 = v9;
          v14[1] = v13;
          swift_retain();
          swift_willThrow();
          swift_bridgeObjectRelease();
          sub_1B599FF94(v9);
        }
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v10 = v5;
        *(void *)(v10 + 8) = a3;
        *(void *)(v10 + 16) = MEMORY[0x1E4FBB550];
        *(unsigned char *)(v10 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  return v5;
}

uint64_t sub_1B59B3D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B5909638(a2, a3, a4, 1);
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(&v16, a2, a3);
      unint64_t v14 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1B59B5A4C(v14, a1, a4, a6);
        sub_1B5905298(a4);
        sub_1B599FF94(v14);
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v15 = a2;
        *(void *)(v15 + 8) = a3;
        *(void *)(v15 + 16) = &type metadata for DecodableState;
        *(unsigned char *)(v15 + 32) = 0;
        swift_willThrow();
        sub_1B5905298(a4);
      }
      return sub_1B5905298(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(&v16, a2, a3);
      unint64_t v12 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        *a6 = v12;
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v13 = a2;
        *(void *)(v13 + 8) = a3;
        *(void *)(v13 + 16) = &type metadata for DecodableState;
        *(unsigned char *)(v13 + 32) = 0;
        return swift_willThrow();
      }
    }
  }
  else
  {
    *a6 = a2;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B59B3EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7 = a2;
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B5904B8C(a2, a3, a4, 1);
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(v7, a3, &v17);
      unint64_t v12 = v17;
      if ((~v17 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1B59B5F3C(v12, a1, a4);
        if (!v5)
        {
          uint64_t v7 = v15;
          sub_1B5905298(a4);
          sub_1B599FF94(v12);
          sub_1B5905298(a4);
          return v7;
        }
        sub_1B5905298(a4);
        sub_1B599FF94(v12);
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v13 = v7;
        *(void *)(v13 + 8) = a3;
        *(void *)(v13 + 16) = MEMORY[0x1E4FBB1A0];
        *(unsigned char *)(v13 + 32) = 0;
        swift_willThrow();
        sub_1B5905298(a4);
      }
      sub_1B5905298(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(v7, a3, &v17);
      uint64_t v10 = v17;
      if ((~v17 & 0xF000000000000007) != 0)
      {
        uint64_t v14 = sub_1B59537D8();
        if (!v5) {
          uint64_t v7 = v14;
        }
        sub_1B599FF94(v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v11 = v7;
        *(void *)(v11 + 8) = a3;
        *(void *)(v11 + 16) = MEMORY[0x1E4FBB1A0];
        *(unsigned char *)(v11 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v7;
}

unint64_t sub_1B59B40CC()
{
  unint64_t result = qword_1E9D65168;
  if (!qword_1E9D65168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65168);
  }
  return result;
}

uint64_t sub_1B59B4120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    uint64_t v6 = a1;
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B590D634(a2, a3, a4, 1);
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(a2, a3, &v16);
      uint64_t v11 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        LOBYTE(v6) = sub_1B59B64E4(v11, v6, a4);
        sub_1B5905298(a4);
        sub_1B599FF94(v11);
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v12 = a2;
        *(void *)(v12 + 8) = a3;
        *(void *)(v12 + 16) = MEMORY[0x1E4FBB390];
        *(unsigned char *)(v12 + 32) = 0;
        swift_willThrow();
        sub_1B5905298(a4);
      }
      sub_1B5905298(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(a2, a3, &v16);
      unint64_t v9 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        if (v16 >> 61 == 3)
        {
          LOBYTE(v6) = *(unsigned char *)((v16 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B599FF94(v16);
        }
        else
        {
          sub_1B5951A10();
          swift_allocError();
          unint64_t v13 = MEMORY[0x1E4FBB390];
          *uint64_t v14 = v9;
          v14[1] = v13;
          swift_willThrow();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v10 = a2;
        *(void *)(v10 + 8) = a3;
        *(void *)(v10 + 16) = MEMORY[0x1E4FBB390];
        *(unsigned char *)(v10 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  else
  {
    LOBYTE(v6) = a2 & 1;
  }
  return v6 & 1;
}

double sub_1B59B4324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return *(double *)&a2;
  }
  if ((~a4 & 0xF000000000000007) != 0)
  {
    sub_1B590D634(a2, a3, a4, 1);
    sub_1B590968C(a4);
    RemoteStateStore.subscript.getter(a2, a3, &v18);
    uint64_t v12 = v18;
    if ((~v18 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRelease();
      double v5 = sub_1B59B6AF0(v12, a1, a4);
      sub_1B5905298(a4);
      sub_1B599FF94(v12);
    }
    else
    {
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v13 = a2;
      *(void *)(v13 + 8) = a3;
      *(void *)(v13 + 16) = MEMORY[0x1E4FBB3D0];
      *(unsigned char *)(v13 + 32) = 0;
      swift_willThrow();
      sub_1B5905298(a4);
    }
    sub_1B5905298(a4);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B590968C(a4);
    RemoteStateStore.subscript.getter(a2, a3, &v18);
    unint64_t v10 = v18;
    if ((~v18 & 0xF000000000000007) != 0)
    {
      if (v18 >> 61 == 1)
      {
        uint64_t v14 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1B599FF94(v18);
        swift_bridgeObjectRelease();
        return (double)v14;
      }
      else
      {
        if (v18 >> 61 == 2)
        {
          double v5 = *(double *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B599FF94(v18);
        }
        else
        {
          sub_1B5951A10();
          swift_allocError();
          unint64_t v15 = MEMORY[0x1E4FBB3D0];
          *unint64_t v16 = v10;
          v16[1] = v15;
          swift_willThrow();
        }
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v11 = a2;
      *(void *)(v11 + 8) = a3;
      *(void *)(v11 + 16) = MEMORY[0x1E4FBB3D0];
      *(unsigned char *)(v11 + 32) = 0;
      swift_willThrow();
    }
  }
  return v5;
}

uint64_t sub_1B59B4560(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5 = a2;
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B59BD9F8(a2, a3, a4, 1, sub_1B592D9F4);
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v18);
      unint64_t v13 = v18;
      if ((~v18 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = (uint64_t)sub_1B59B716C(v13, a1, a4);
        sub_1B5905298(a4);
        sub_1B599FF94(v13);
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        uint64_t v15 = v14;
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
        *(void *)uint64_t v15 = v5;
        *(void *)(v15 + 8) = a3;
        *(void *)(v15 + 16) = v16;
        *(unsigned char *)(v15 + 32) = 0;
        swift_willThrow();
        sub_1B5905298(a4);
      }
      sub_1B5905298(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v18);
      uint64_t v9 = v18;
      if ((~v18 & 0xF000000000000007) != 0)
      {
        uint64_t v5 = sub_1B59B4C2C(v18);
        sub_1B599FF94(v9);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        uint64_t v11 = v10;
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
        *(void *)uint64_t v11 = v5;
        *(void *)(v11 + 8) = a3;
        *(void *)(v11 + 16) = v12;
        *(unsigned char *)(v11 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t sub_1B59B4750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5 = a2;
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B59BD9F8(a2, a3, a4, 1, sub_1B592D9F4);
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v19);
      unint64_t v13 = v19;
      if ((~v19 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = sub_1B59B71D4(v13, a1, a4);
        sub_1B5905298(a4);
        sub_1B599FF94(v13);
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        uint64_t v15 = v14;
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
        *(void *)uint64_t v15 = v5;
        *(void *)(v15 + 8) = a3;
        *(void *)(v15 + 16) = v16;
        *(unsigned char *)(v15 + 32) = 0;
        swift_willThrow();
        sub_1B5905298(a4);
      }
      sub_1B5905298(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v19);
      uint64_t v9 = v19;
      if ((~v19 & 0xF000000000000007) != 0)
      {
        if (v19 >> 61 == 5)
        {
          uint64_t v5 = sub_1B59A5304(*(void *)((v19 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
          sub_1B599FF94(v9);
        }
        else
        {
          uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
          sub_1B5951A10();
          swift_allocError();
          *unint64_t v17 = v9;
          v17[1] = v5;
          swift_willThrow();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        uint64_t v11 = v10;
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
        *(void *)uint64_t v11 = v5;
        *(void *)(v11 + 8) = a3;
        *(void *)(v11 + 16) = v12;
        *(unsigned char *)(v11 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t sub_1B59B4998(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5 = a2;
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B59BD9F8(a2, a3, a4, 1, sub_1B592D9F4);
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v18);
      unint64_t v13 = v18;
      if ((~v18 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = (uint64_t)sub_1B59B7844(v13, a1, a4);
        sub_1B5905298(a4);
        sub_1B599FF94(v13);
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        uint64_t v15 = v14;
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651C0);
        *(void *)uint64_t v15 = v5;
        *(void *)(v15 + 8) = a3;
        *(void *)(v15 + 16) = v16;
        *(unsigned char *)(v15 + 32) = 0;
        swift_willThrow();
        sub_1B5905298(a4);
      }
      sub_1B5905298(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v18);
      uint64_t v9 = v18;
      if ((~v18 & 0xF000000000000007) != 0)
      {
        uint64_t v5 = sub_1B59B4D7C(v18);
        sub_1B599FF94(v9);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B59619AC();
        swift_allocError();
        uint64_t v11 = v10;
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651C0);
        *(void *)uint64_t v11 = v5;
        *(void *)(v11 + 8) = a3;
        *(void *)(v11 + 16) = v12;
        *(unsigned char *)(v11 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v5;
}

unint64_t sub_1B59B4B88@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = result;
  if (result >> 61 == 2)
  {
    *(void *)a2 = *(void *)((result & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    *(unsigned char *)(a2 + 8) = 1;
  }
  else if (result >> 61 == 1)
  {
    *(void *)a2 = *(void *)((result & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    *(unsigned char *)(a2 + 8) = 0;
  }
  else
  {
    sub_1B5951A10();
    swift_allocError();
    unint64_t v3 = MEMORY[0x1E4FBB3D0];
    *uint64_t v4 = v2;
    v4[1] = v3;
    swift_retain();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1B59B4C2C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 61 == 4)
  {
    uint64_t v2 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    int64_t v3 = *(void *)(v2 + 16);
    unint64_t v1 = MEMORY[0x1E4FBC860];
    if (v3)
    {
      unint64_t v11 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B596926C(0, v3, 0);
      uint64_t v4 = 0;
      unint64_t v1 = v11;
      unint64_t v5 = *(void *)(v11 + 16);
      do
      {
        uint64_t v6 = *(void *)(v2 + 8 * v4 + 32);
        unint64_t v7 = *(void *)(v11 + 24);
        swift_retain();
        if (v5 >= v7 >> 1) {
          sub_1B596926C(v7 > 1, v5 + 1, 1);
        }
        ++v4;
        *(void *)(v11 + 16) = v5 + 1;
        *(void *)(v11 + 8 * v5++ + 32) = v6;
      }
      while (v3 != v4);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
    sub_1B5951A10();
    swift_allocError();
    *uint64_t v9 = v1;
    v9[1] = v8;
    swift_retain();
    swift_willThrow();
  }
  return v1;
}

unint64_t sub_1B59B4D7C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 61 == 4)
  {
    uint64_t v2 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    int64_t v3 = *(void *)(v2 + 16);
    unint64_t v1 = MEMORY[0x1E4FBC860];
    if (v3)
    {
      unint64_t v14 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B596953C(0, v3, 0);
      uint64_t v4 = 0;
      unint64_t v1 = v14;
      while (1)
      {
        unint64_t v5 = *(void *)(v2 + 8 * v4 + 32);
        if (v5 >> 61 != 1) {
          break;
        }
        uint64_t v6 = *(void *)((v5 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        unint64_t v14 = v1;
        unint64_t v8 = *(void *)(v1 + 16);
        unint64_t v7 = *(void *)(v1 + 24);
        if (v8 >= v7 >> 1) {
          sub_1B596953C(v7 > 1, v8 + 1, 1);
        }
        ++v4;
        *(void *)(v1 + 16) = v8 + 1;
        *(void *)(v1 + 8 * v8 + 32) = v6;
        if (v3 == v4)
        {
          swift_bridgeObjectRelease();
          return v1;
        }
      }
      sub_1B5951A10();
      swift_allocError();
      unint64_t v11 = MEMORY[0x1E4FBB550];
      *uint64_t v12 = v5;
      v12[1] = v11;
      swift_retain();
      swift_willThrow();
      unint64_t v1 = v14;
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
    sub_1B5951A10();
    swift_allocError();
    *uint64_t v10 = v1;
    v10[1] = v9;
    swift_retain();
    swift_willThrow();
  }
  return v1;
}

void sub_1B59B4F24(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(a3 + 16);
    uint64_t v7 = *(void *)(a3 + 24);
    uint64_t v9 = *(void *)(a3 + 32);
    unsigned __int8 v10 = *(unsigned char *)(a3 + 40);
    uint64_t v11 = *(void *)(a3 + 48);
    sub_1B5904B60(v8, v7, v9, v10);
    sub_1B590968C(v11);
    uint64_t v12 = StringResolvable.resolved(with:)(a2);
    if (v4)
    {
LABEL_3:
      sub_1B5905298(v11);
      sub_1B5904A88(v8, v7, v9, v10);
      return;
    }
    uint64_t v40 = v13;
    if (a1 >> 61 == 5)
    {
      uint64_t v24 = v12;
      uint64_t v25 = sub_1B59A5304(*(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
      if (!*(void *)(v25 + 16) || (v38 = v25, uint64_t v26 = sub_1B59049B8(v24, v40), (v27 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v37 = a1;
        *(unsigned char *)(v37 + 32) = 1;
        swift_retain();
        swift_willThrow();
        goto LABEL_3;
      }
      unint64_t v28 = *(void *)(*(void *)(v38 + 56) + 8 * v26);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      if ((~v11 & 0xF000000000000007) == 0)
      {
        sub_1B59B4B88(v28, a4);
        sub_1B5904A88(v8, v7, v9, v10);
        goto LABEL_15;
      }
      swift_retain();
      sub_1B59B4F24(v28, a2, v11);
      sub_1B5905298(v11);
      sub_1B5904A88(v8, v7, v9, v10);
      swift_release();
      sub_1B5905298(v11);
    }
    else
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
      sub_1B5951A10();
      swift_allocError();
      *uint64_t v35 = a1;
      v35[1] = v34;
      swift_retain();
      swift_willThrow();
      sub_1B5905298(v11);
      sub_1B5904A88(v8, v7, v9, v10);
      swift_bridgeObjectRelease();
    }
    return;
  }
  uint64_t v15 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v14 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v16 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
  char v17 = *(unsigned char *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
  uint64_t v18 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
  sub_1B591DF88(v15, v14, v16, v17);
  uint64_t v39 = v18;
  sub_1B590968C(v18);
  uint64_t v19 = sub_1B5963948(a2);
  if (v20)
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1B5A1A328();
    __swift_project_value_buffer(v29, (uint64_t)qword_1E9D910D0);
    uint64_t v30 = sub_1B5A1A308();
    os_log_type_t v31 = sub_1B5A1C258();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_1B58FD000, v30, v31, "SubReference to find value, unable to resolve index", v32, 2u);
      MEMORY[0x1BA9A4780](v32, -1, -1);
    }

    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v33 = 2;
    *(void *)(v33 + 8) = 0;
    *(void *)(v33 + 16) = 0;
    *(void *)(v33 + 24) = 0;
    *(unsigned char *)(v33 + 32) = 5;
    goto LABEL_23;
  }
  uint64_t v21 = v19;
  unint64_t v22 = sub_1B59B4C2C(a1);
  if (v4)
  {
LABEL_24:
    sub_1B5905298(v39);
    sub_1B591DF0C(v15, v14, v16, v17);
    return;
  }
  if (v21 < 0 || v21 >= *(void *)(v22 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v36 = a1;
    *(unsigned char *)(v36 + 32) = 1;
    swift_retain();
LABEL_23:
    swift_willThrow();
    goto LABEL_24;
  }
  unint64_t v23 = *(void *)(v22 + 8 * v21 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  if ((~v18 & 0xF000000000000007) == 0)
  {
    sub_1B59B4B88(v23, a4);
    sub_1B591DF0C(v15, v14, v16, v17);
LABEL_15:
    swift_release();
    return;
  }
  swift_retain();
  sub_1B59B4F24(v23, a2, v18);
  sub_1B5905298(v18);
  sub_1B591DF0C(v15, v14, v16, v17);
  swift_release();
  sub_1B5905298(v18);
}

unint64_t sub_1B59B5440(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t v14 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v13 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v15 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    char v16 = *(unsigned char *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v17 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    sub_1B591DF88(v14, v13, v15, v16);
    uint64_t v41 = v17;
    sub_1B590968C(v17);
    uint64_t v18 = sub_1B5963948(a2);
    if (v19)
    {
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1B5A1A328();
      __swift_project_value_buffer(v26, (uint64_t)qword_1E9D910D0);
      char v27 = sub_1B5A1A308();
      os_log_type_t v28 = sub_1B5A1C258();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1B58FD000, v27, v28, "SubReference to find value, unable to resolve index", v29, 2u);
        MEMORY[0x1BA9A4780](v29, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v30 = 2;
      *(void *)(v30 + 8) = 0;
      *(void *)(v30 + 16) = 0;
      *(void *)(v30 + 24) = 0;
      *(unsigned char *)(v30 + 32) = 5;
    }
    else
    {
      uint64_t v20 = v18;
      unint64_t v21 = sub_1B59B4C2C(a1);
      if (v3)
      {
LABEL_28:
        sub_1B5905298(v41);
        sub_1B591DF0C(v14, v13, v15, v16);
        return a1;
      }
      if ((v20 & 0x8000000000000000) == 0 && v20 < *(void *)(v21 + 16))
      {
        a1 = *(void *)(v21 + 8 * v20 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((~v17 & 0xF000000000000007) != 0)
        {
          swift_retain();
          a1 = sub_1B59B5440(a1, a2, v17);
          sub_1B5905298(v17);
          sub_1B591DF0C(v14, v13, v15, v16);
          swift_release();
          sub_1B5905298(v17);
          return a1;
        }
        if (a1 >> 61 == 1)
        {
          a1 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        }
        else
        {
          sub_1B5951A10();
          swift_allocError();
          unint64_t v36 = MEMORY[0x1E4FBB550];
          *uint64_t v37 = a1;
          v37[1] = v36;
          swift_retain();
          swift_willThrow();
        }
        sub_1B591DF0C(v14, v13, v15, v16);
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v33 = a1;
      *(unsigned char *)(v33 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_28;
  }
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a3 + 40);
  uint64_t v10 = *(void *)(a3 + 48);
  sub_1B5904B60(v7, v6, v8, v9);
  sub_1B590968C(v10);
  uint64_t v11 = StringResolvable.resolved(with:)(a2);
  if (!v3)
  {
    uint64_t v42 = v12;
    if (a1 >> 61 != 5)
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
      sub_1B5951A10();
      swift_allocError();
      *uint64_t v32 = a1;
      v32[1] = v31;
      swift_retain();
      swift_willThrow();
      sub_1B5905298(v10);
      sub_1B5904A88(v7, v6, v8, v9);
      swift_bridgeObjectRelease();
      return a1;
    }
    uint64_t v22 = v11;
    uint64_t v23 = sub_1B59A5304(*(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
    if (!*(void *)(v23 + 16) || (v40 = v23, uint64_t v24 = sub_1B59049B8(v22, v42), (v25 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v35 = a1;
      *(unsigned char *)(v35 + 32) = 1;
      swift_retain();
      swift_willThrow();
      goto LABEL_3;
    }
    a1 = *(void *)(*(void *)(v40 + 56) + 8 * v24);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    if ((~v10 & 0xF000000000000007) != 0)
    {
      swift_retain();
      a1 = sub_1B59B5440(a1, a2, v10);
      sub_1B5905298(v10);
      sub_1B5904A88(v7, v6, v8, v9);
      swift_release();
      sub_1B5905298(v10);
      return a1;
    }
    if (a1 >> 61 == 1)
    {
      a1 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    }
    else
    {
      sub_1B5951A10();
      swift_allocError();
      unint64_t v38 = MEMORY[0x1E4FBB550];
      *uint64_t v39 = a1;
      v39[1] = v38;
      swift_retain();
      swift_willThrow();
    }
    sub_1B5904A88(v7, v6, v8, v9);
LABEL_19:
    swift_release();
    return a1;
  }
LABEL_3:
  sub_1B5905298(v10);
  sub_1B5904A88(v7, v6, v8, v9);
  return a1;
}

void sub_1B59B5A4C(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(a3 + 16);
    uint64_t v7 = *(void *)(a3 + 24);
    uint64_t v9 = *(void *)(a3 + 32);
    unsigned __int8 v10 = *(unsigned char *)(a3 + 40);
    uint64_t v11 = *(void *)(a3 + 48);
    sub_1B5904B60(v8, v7, v9, v10);
    sub_1B590968C(v11);
    uint64_t v12 = StringResolvable.resolved(with:)(a2);
    if (v4)
    {
LABEL_3:
      sub_1B5905298(v11);
      sub_1B5904A88(v8, v7, v9, v10);
      return;
    }
    uint64_t v40 = v13;
    if (a1 >> 61 != 5)
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
      sub_1B5951A10();
      swift_allocError();
      *uint64_t v34 = a1;
      v34[1] = v33;
      swift_retain();
      swift_willThrow();
      sub_1B5905298(v11);
      sub_1B5904A88(v8, v7, v9, v10);
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v24 = v12;
    uint64_t v25 = sub_1B59A5304(*(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
    if (!*(void *)(v25 + 16) || (v38 = v25, uint64_t v26 = sub_1B59049B8(v24, v40), (v27 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v36 = a1;
      *(unsigned char *)(v36 + 32) = 1;
      swift_retain();
      swift_willThrow();
      goto LABEL_3;
    }
    uint64_t v23 = *(void *)(*(void *)(v38 + 56) + 8 * v26);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    if ((~v11 & 0xF000000000000007) == 0)
    {
      sub_1B5904A88(v8, v7, v9, v10);
      goto LABEL_15;
    }
    swift_retain();
    sub_1B59B5A4C(v23, a2, v11);
    sub_1B5905298(v11);
    sub_1B5904A88(v8, v7, v9, v10);
    swift_release();
    uint64_t v37 = v11;
    goto LABEL_28;
  }
  uint64_t v15 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v14 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v16 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
  char v17 = *(unsigned char *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
  uint64_t v18 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
  sub_1B591DF88(v15, v14, v16, v17);
  uint64_t v39 = v18;
  sub_1B590968C(v18);
  uint64_t v19 = sub_1B5963948(a2);
  if (v20)
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1B5A1A328();
    __swift_project_value_buffer(v28, (uint64_t)qword_1E9D910D0);
    uint64_t v29 = sub_1B5A1A308();
    os_log_type_t v30 = sub_1B5A1C258();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_1B58FD000, v29, v30, "SubReference to find value, unable to resolve index", v31, 2u);
      MEMORY[0x1BA9A4780](v31, -1, -1);
    }

    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v32 = 2;
    *(void *)(v32 + 8) = 0;
    *(void *)(v32 + 16) = 0;
    *(void *)(v32 + 24) = 0;
    *(unsigned char *)(v32 + 32) = 5;
    goto LABEL_23;
  }
  uint64_t v21 = v19;
  unint64_t v22 = sub_1B59B4C2C(a1);
  if (v4)
  {
LABEL_24:
    sub_1B5905298(v39);
    sub_1B591DF0C(v15, v14, v16, v17);
    return;
  }
  if (v21 < 0 || v21 >= *(void *)(v22 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v35 = a1;
    *(unsigned char *)(v35 + 32) = 1;
    swift_retain();
LABEL_23:
    swift_willThrow();
    goto LABEL_24;
  }
  uint64_t v23 = *(void *)(v22 + 8 * v21 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  if ((~v18 & 0xF000000000000007) == 0)
  {
    sub_1B591DF0C(v15, v14, v16, v17);
LABEL_15:
    *a4 = v23;
    return;
  }
  swift_retain();
  sub_1B59B5A4C(v23, a2, v18);
  sub_1B5905298(v18);
  sub_1B591DF0C(v15, v14, v16, v17);
  swift_release();
  uint64_t v37 = v18;
LABEL_28:
  sub_1B5905298(v37);
}

uint64_t sub_1B59B5F3C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t v15 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v14 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v16 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    char v17 = *(unsigned char *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v18 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    uint64_t v42 = v15;
    uint64_t v43 = v14;
    uint64_t v44 = v16;
    char v45 = v17;
    sub_1B591DF88(v15, v14, v16, v17);
    uint64_t v46 = v18;
    sub_1B590968C(v18);
    uint64_t v11 = (uint64_t)&v42;
    sub_1B5963948(a2);
    if (v20)
    {
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1B5A1A328();
      __swift_project_value_buffer(v30, (uint64_t)qword_1E9D910D0);
      uint64_t v31 = sub_1B5A1A308();
      os_log_type_t v32 = sub_1B5A1C258();
      uint64_t v11 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl(&dword_1B58FD000, v31, (os_log_type_t)v11, "SubReference to find value, unable to resolve index", v33, 2u);
        MEMORY[0x1BA9A4780](v33, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v34 = 2;
      *(void *)(v34 + 8) = 0;
      *(void *)(v34 + 16) = 0;
      *(void *)(v34 + 24) = 0;
      *(unsigned char *)(v34 + 32) = 5;
    }
    else
    {
      uint64_t v21 = v19;
      unint64_t v22 = sub_1B59B4C2C(a1);
      if (v3)
      {
LABEL_23:
        sub_1B5905298(v46);
        sub_1B591DF0C(v15, v14, v16, v17);
        return v11;
      }
      uint64_t v11 = v22;
      if ((v21 & 0x8000000000000000) == 0 && v21 < *(void *)(v22 + 16))
      {
        uint64_t v23 = *(void *)(v22 + 8 * v21 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v24 = v46;
        if ((~v46 & 0xF000000000000007) != 0)
        {
          swift_retain();
          uint64_t v39 = sub_1B59B5F3C(v23, a2, v24);
          uint64_t v40 = v24;
          uint64_t v11 = v39;
          sub_1B5905298(v40);
          sub_1B591DF0C(v15, v14, v16, v17);
          swift_release();
          sub_1B5905298(v40);
        }
        else
        {
          uint64_t v42 = v23;
          uint64_t v11 = sub_1B59537D8();
          sub_1B591DF0C(v15, v14, v16, v17);
          swift_release();
        }
        return v11;
      }
      swift_bridgeObjectRelease();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v36 = a1;
      *(unsigned char *)(v36 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a3 + 40);
  uint64_t v10 = *(void *)(a3 + 48);
  uint64_t v42 = v7;
  uint64_t v43 = v6;
  uint64_t v44 = v8;
  char v45 = v9;
  sub_1B5904B60(v7, v6, v8, v9);
  sub_1B590968C(v10);
  uint64_t v11 = (uint64_t)&v42;
  uint64_t v12 = StringResolvable.resolved(with:)(a2);
  if (v3)
  {
LABEL_3:
    sub_1B5905298(v10);
    sub_1B5904A88(v7, v6, v8, v9);
    return v11;
  }
  uint64_t v46 = v13;
  if (a1 >> 61 != 5)
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
    sub_1B5951A10();
    swift_allocError();
    *uint64_t v35 = a1;
    v35[1] = v11;
    swift_retain();
    swift_willThrow();
    sub_1B5905298(v10);
    sub_1B5904A88(v7, v6, v8, v9);
    swift_bridgeObjectRelease();
    return v11;
  }
  uint64_t v11 = v12;
  uint64_t v25 = sub_1B59A5304(*(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
  if (!*(void *)(v25 + 16) || (v26 = v11, uint64_t v11 = v25, v41 = v25, v27 = sub_1B59049B8(v26, v46), (v28 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v38 = a1;
    *(unsigned char *)(v38 + 32) = 1;
    swift_retain();
    swift_willThrow();
    goto LABEL_3;
  }
  uint64_t v29 = *(void *)(*(void *)(v41 + 56) + 8 * v27);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  if ((~v10 & 0xF000000000000007) != 0)
  {
    swift_retain();
    uint64_t v11 = sub_1B59B5F3C(v29, a2, v10);
    sub_1B5905298(v10);
    sub_1B5904A88(v7, v6, v8, v9);
    swift_release();
    sub_1B5905298(v10);
  }
  else
  {
    uint64_t v42 = v29;
    uint64_t v11 = sub_1B59537D8();
    sub_1B5904A88(v7, v6, v8, v9);
    swift_release();
  }
  return v11;
}

unint64_t sub_1B59B64E4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t v14 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v13 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v15 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    char v16 = *(unsigned char *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v17 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    sub_1B591DF88(v14, v13, v15, v16);
    uint64_t v41 = v17;
    sub_1B590968C(v17);
    sub_1B5963948(a2);
    if (v19)
    {
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1B5A1A328();
      __swift_project_value_buffer(v26, (uint64_t)qword_1E9D910D0);
      uint64_t v27 = sub_1B5A1A308();
      os_log_type_t v28 = sub_1B5A1C258();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1B58FD000, v27, v28, "SubReference to find value, unable to resolve index", v29, 2u);
        MEMORY[0x1BA9A4780](v29, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v30 = 2;
      *(void *)(v30 + 8) = 0;
      *(void *)(v30 + 16) = 0;
      *(void *)(v30 + 24) = 0;
      *(unsigned char *)(v30 + 32) = 5;
    }
    else
    {
      uint64_t v20 = v18;
      unint64_t v21 = sub_1B59B4C2C(a1);
      if (v3)
      {
LABEL_28:
        sub_1B5905298(v41);
        sub_1B591DF0C(v14, v13, v15, v16);
        return a1 & 1;
      }
      if ((v20 & 0x8000000000000000) == 0 && v20 < *(void *)(v21 + 16))
      {
        a1 = *(void *)(v21 + 8 * v20 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((~v17 & 0xF000000000000007) != 0)
        {
          swift_retain();
          LOBYTE(a1) = sub_1B59B64E4(a1, a2, v17);
          sub_1B5905298(v17);
          sub_1B591DF0C(v14, v13, v15, v16);
          swift_release();
          sub_1B5905298(v17);
          return a1 & 1;
        }
        if (a1 >> 61 == 3)
        {
          LOBYTE(a1) = *(unsigned char *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        }
        else
        {
          sub_1B5951A10();
          swift_allocError();
          unint64_t v36 = MEMORY[0x1E4FBB390];
          *uint64_t v37 = a1;
          v37[1] = v36;
          swift_retain();
          swift_willThrow();
        }
        sub_1B591DF0C(v14, v13, v15, v16);
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v33 = a1;
      *(unsigned char *)(v33 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_28;
  }
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a3 + 40);
  uint64_t v10 = *(void *)(a3 + 48);
  sub_1B5904B60(v7, v6, v8, v9);
  sub_1B590968C(v10);
  unint64_t v11 = StringResolvable.resolved(with:)(a2);
  if (!v3)
  {
    uint64_t v42 = v12;
    if (a1 >> 61 != 5)
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
      sub_1B5951A10();
      swift_allocError();
      *os_log_type_t v32 = a1;
      v32[1] = v31;
      swift_retain();
      swift_willThrow();
      sub_1B5905298(v10);
      sub_1B5904A88(v7, v6, v8, v9);
      swift_bridgeObjectRelease();
      return a1 & 1;
    }
    uint64_t v22 = v11;
    uint64_t v23 = sub_1B59A5304(*(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
    if (!*(void *)(v23 + 16) || (v40 = v23, uint64_t v24 = sub_1B59049B8(v22, v42), (v25 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v35 = a1;
      *(unsigned char *)(v35 + 32) = 1;
      swift_retain();
      swift_willThrow();
      goto LABEL_3;
    }
    a1 = *(void *)(*(void *)(v40 + 56) + 8 * v24);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    if ((~v10 & 0xF000000000000007) != 0)
    {
      swift_retain();
      LOBYTE(a1) = sub_1B59B64E4(a1, a2, v10);
      sub_1B5905298(v10);
      sub_1B5904A88(v7, v6, v8, v9);
      swift_release();
      sub_1B5905298(v10);
      return a1 & 1;
    }
    if (a1 >> 61 == 3)
    {
      LOBYTE(a1) = *(unsigned char *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    }
    else
    {
      sub_1B5951A10();
      swift_allocError();
      unint64_t v38 = MEMORY[0x1E4FBB390];
      *uint64_t v39 = a1;
      v39[1] = v38;
      swift_retain();
      swift_willThrow();
    }
    sub_1B5904A88(v7, v6, v8, v9);
LABEL_19:
    swift_release();
    return a1 & 1;
  }
LABEL_3:
  sub_1B5905298(v10);
  sub_1B5904A88(v7, v6, v8, v9);
  return a1 & 1;
}

double sub_1B59B6AF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t v15 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v14 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v16 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    char v17 = *(unsigned char *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v18 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    sub_1B591DF88(v15, v14, v16, v17);
    uint64_t v46 = v18;
    sub_1B590968C(v18);
    sub_1B5963948(a2);
    if (v20)
    {
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1B5A1A328();
      __swift_project_value_buffer(v29, (uint64_t)qword_1E9D910D0);
      uint64_t v30 = sub_1B5A1A308();
      os_log_type_t v31 = sub_1B5A1C258();
      if (os_log_type_enabled(v30, v31))
      {
        os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v32 = 0;
        _os_log_impl(&dword_1B58FD000, v30, v31, "SubReference to find value, unable to resolve index", v32, 2u);
        MEMORY[0x1BA9A4780](v32, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v33 = 2;
      *(void *)(v33 + 8) = 0;
      *(void *)(v33 + 16) = 0;
      *(void *)(v33 + 24) = 0;
      *(unsigned char *)(v33 + 32) = 5;
    }
    else
    {
      uint64_t v21 = v19;
      unint64_t v22 = sub_1B59B4C2C(a1);
      if (v3)
      {
LABEL_30:
        sub_1B5905298(v46);
        sub_1B591DF0C(v15, v14, v16, v17);
        return v4;
      }
      if ((v21 & 0x8000000000000000) == 0 && v21 < *(void *)(v22 + 16))
      {
        unint64_t v23 = *(void *)(v22 + 8 * v21 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((~v18 & 0xF000000000000007) != 0)
        {
          swift_retain();
          sub_1B59B6AF0(v23, a2, v18);
          double v4 = v39;
          sub_1B5905298(v18);
          sub_1B591DF0C(v15, v14, v16, v17);
          swift_release();
          sub_1B5905298(v18);
          return v4;
        }
        if (v23 >> 61 != 1)
        {
          if (v23 >> 61 == 2)
          {
            double v4 = *(double *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          }
          else
          {
            sub_1B5951A10();
            swift_allocError();
            unint64_t v41 = MEMORY[0x1E4FBB3D0];
            *uint64_t v42 = v23;
            v42[1] = v41;
            swift_retain();
            swift_willThrow();
          }
          sub_1B591DF0C(v15, v14, v16, v17);
          goto LABEL_21;
        }
        uint64_t v40 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1B591DF0C(v15, v14, v16, v17);
LABEL_38:
        swift_release();
        return (double)v40;
      }
      swift_bridgeObjectRelease();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v36 = a1;
      *(unsigned char *)(v36 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_30;
  }
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(a3 + 32);
  unsigned __int8 v10 = *(unsigned char *)(a3 + 40);
  uint64_t v11 = *(void *)(a3 + 48);
  sub_1B5904B60(v8, v7, v9, v10);
  sub_1B590968C(v11);
  unint64_t v12 = StringResolvable.resolved(with:)(a2);
  if (!v3)
  {
    uint64_t v47 = v13;
    if (a1 >> 61 != 5)
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
      sub_1B5951A10();
      swift_allocError();
      *uint64_t v35 = a1;
      v35[1] = v34;
      swift_retain();
      swift_willThrow();
      sub_1B5905298(v11);
      sub_1B5904A88(v8, v7, v9, v10);
      swift_bridgeObjectRelease();
      return v4;
    }
    uint64_t v24 = v12;
    uint64_t v25 = sub_1B59A5304(*(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
    if (!*(void *)(v25 + 16) || (v45 = v25, uint64_t v26 = sub_1B59049B8(v24, v47), (v27 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v38 = a1;
      *(unsigned char *)(v38 + 32) = 1;
      swift_retain();
      swift_willThrow();
      goto LABEL_3;
    }
    unint64_t v28 = *(void *)(*(void *)(v45 + 56) + 8 * v26);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    if ((~v11 & 0xF000000000000007) != 0)
    {
      swift_retain();
      double v4 = sub_1B59B6AF0(v28, a2, v11);
      sub_1B5905298(v11);
      sub_1B5904A88(v8, v7, v9, v10);
      swift_release();
      sub_1B5905298(v11);
      return v4;
    }
    if (v28 >> 61 != 1)
    {
      if (v28 >> 61 == 2)
      {
        double v4 = *(double *)((v28 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      }
      else
      {
        sub_1B5951A10();
        swift_allocError();
        unint64_t v43 = MEMORY[0x1E4FBB3D0];
        *uint64_t v44 = v28;
        v44[1] = v43;
        swift_retain();
        swift_willThrow();
      }
      sub_1B5904A88(v8, v7, v9, v10);
LABEL_21:
      swift_release();
      return v4;
    }
    uint64_t v40 = *(void *)((v28 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    sub_1B5904A88(v8, v7, v9, v10);
    goto LABEL_38;
  }
LABEL_3:
  sub_1B5905298(v11);
  sub_1B5904A88(v8, v7, v9, v10);
  return v4;
}

NSObject *sub_1B59B716C(unint64_t a1, NSObject *a2, uint64_t a3)
{
  return sub_1B59B78AC(a1, a2, a3, (void (*)(uint64_t))sub_1B592D9F4, (void (*)(uint64_t))sub_1B592D9F8, (uint64_t (*)(uint64_t, NSObject *, uint64_t))sub_1B59B716C, (uint64_t (*)(uint64_t))sub_1B59B4C2C);
}

unint64_t sub_1B59B71D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t v14 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v13 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v15 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    char v16 = *(unsigned char *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v17 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    sub_1B591DF88(v14, v13, v15, v16);
    uint64_t v41 = v17;
    sub_1B590968C(v17);
    sub_1B5963948(a2);
    if (v19)
    {
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1B5A1A328();
      __swift_project_value_buffer(v26, (uint64_t)qword_1E9D910D0);
      char v27 = sub_1B5A1A308();
      os_log_type_t v28 = sub_1B5A1C258();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1B58FD000, v27, v28, "SubReference to find value, unable to resolve index", v29, 2u);
        MEMORY[0x1BA9A4780](v29, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v30 = 2;
      *(void *)(v30 + 8) = 0;
      *(void *)(v30 + 16) = 0;
      *(void *)(v30 + 24) = 0;
      *(unsigned char *)(v30 + 32) = 5;
    }
    else
    {
      uint64_t v20 = v18;
      unint64_t v21 = sub_1B59B4C2C(a1);
      if (v3)
      {
LABEL_25:
        sub_1B5905298(v41);
        sub_1B591DF0C(v14, v13, v15, v16);
        return a1;
      }
      if ((v20 & 0x8000000000000000) == 0 && v20 < *(void *)(v21 + 16))
      {
        a1 = *(void *)(v21 + 8 * v20 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((~v17 & 0xF000000000000007) != 0)
        {
          swift_retain();
          a1 = sub_1B59B71D4(a1, a2, v17);
          sub_1B5905298(v17);
          sub_1B591DF0C(v14, v13, v15, v16);
          swift_release();
          sub_1B5905298(v17);
          return a1;
        }
        if (a1 >> 61 == 5)
        {
          a1 = sub_1B59A5304(*(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
          sub_1B591DF0C(v14, v13, v15, v16);
          swift_release();
          return a1;
        }
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
        sub_1B5951A10();
        swift_allocError();
        *uint64_t v37 = a1;
        v37[1] = v36;
        swift_retain();
        swift_willThrow();
        sub_1B591DF0C(v14, v13, v15, v16);
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v33 = a1;
      *(unsigned char *)(v33 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_25;
  }
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a3 + 40);
  uint64_t v10 = *(void *)(a3 + 48);
  sub_1B5904B60(v7, v6, v8, v9);
  sub_1B590968C(v10);
  unint64_t v11 = StringResolvable.resolved(with:)(a2);
  if (!v3)
  {
    uint64_t v42 = v12;
    if (a1 >> 61 != 5)
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
      sub_1B5951A10();
      swift_allocError();
      *os_log_type_t v32 = a1;
      v32[1] = v31;
      swift_retain();
      swift_willThrow();
      sub_1B5905298(v10);
      sub_1B5904A88(v7, v6, v8, v9);
      swift_bridgeObjectRelease();
      return a1;
    }
    uint64_t v22 = v11;
    uint64_t v23 = sub_1B59A5304(*(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
    if (!*(void *)(v23 + 16) || (v40 = v23, uint64_t v24 = sub_1B59049B8(v22, v42), (v25 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v35 = a1;
      *(unsigned char *)(v35 + 32) = 1;
      swift_retain();
      swift_willThrow();
      goto LABEL_3;
    }
    a1 = *(void *)(*(void *)(v40 + 56) + 8 * v24);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    if ((~v10 & 0xF000000000000007) != 0)
    {
      swift_retain();
      a1 = sub_1B59B71D4(a1, a2, v10);
      sub_1B5905298(v10);
      sub_1B5904A88(v7, v6, v8, v9);
      swift_release();
      sub_1B5905298(v10);
      return a1;
    }
    if (a1 >> 61 == 5)
    {
      a1 = sub_1B59A5304(*(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
      sub_1B5904A88(v7, v6, v8, v9);
      swift_release();
      return a1;
    }
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
    sub_1B5951A10();
    swift_allocError();
    *double v39 = a1;
    v39[1] = v38;
    swift_retain();
    swift_willThrow();
    sub_1B5904A88(v7, v6, v8, v9);
LABEL_32:
    swift_release();
    return a1;
  }
LABEL_3:
  sub_1B5905298(v10);
  sub_1B5904A88(v7, v6, v8, v9);
  return a1;
}

NSObject *sub_1B59B7844(unint64_t a1, NSObject *a2, uint64_t a3)
{
  return sub_1B59B78AC(a1, a2, a3, (void (*)(uint64_t))sub_1B592D9F4, (void (*)(uint64_t))sub_1B592D9F8, (uint64_t (*)(uint64_t, NSObject *, uint64_t))sub_1B59B7844, (uint64_t (*)(uint64_t))sub_1B59B4D7C);
}

NSObject *sub_1B59B78AC(unint64_t a1, NSObject *a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(uint64_t), uint64_t (*a6)(uint64_t, NSObject *, uint64_t), uint64_t (*a7)(uint64_t))
{
  if (a3 < 0)
  {
    uint64_t v19 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v18 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v20 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    uint64_t v21 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    char v43 = *(unsigned char *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    sub_1B591DF88(v19, v18, v20, v43);
    uint64_t v22 = v21;
    a4(v21);
    sub_1B5963948((uint64_t)a2);
    if (v24)
    {
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1B5A1A328();
      __swift_project_value_buffer(v34, (uint64_t)qword_1E9D910D0);
      a2 = sub_1B5A1A308();
      os_log_type_t v35 = sub_1B5A1C258();
      if (os_log_type_enabled(a2, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl(&dword_1B58FD000, a2, v35, "SubReference to find value, unable to resolve index", v36, 2u);
        MEMORY[0x1BA9A4780](v36, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v37 = 2;
      *(void *)(v37 + 8) = 0;
      *(void *)(v37 + 16) = 0;
      *(void *)(v37 + 24) = 0;
      *(unsigned char *)(v37 + 32) = 5;
    }
    else
    {
      uint64_t v25 = v23;
      unint64_t v26 = sub_1B59B4C2C(a1);
      if (v7)
      {
LABEL_23:
        a5(v22);
        sub_1B591DF0C(v19, v18, v20, v43);
        return a2;
      }
      if ((v25 & 0x8000000000000000) == 0 && v25 < *(void *)(v26 + 16))
      {
        uint64_t v27 = *(void *)(v26 + 8 * v25 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((~v22 & 0xF000000000000007) != 0)
        {
          swift_retain();
          a2 = a6(v27, a2, v22);
          a5(v22);
          sub_1B591DF0C(v19, v18, v20, v43);
          swift_release();
          a5(v22);
        }
        else
        {
          a2 = a7(v27);
          sub_1B591DF0C(v19, v18, v20, v43);
          swift_release();
        }
        return a2;
      }
      swift_bridgeObjectRelease();
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v39 = a1;
      *(unsigned char *)(v39 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_23;
  }
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(a3 + 24);
  uint64_t v13 = *(void *)(a3 + 32);
  unsigned __int8 v14 = *(unsigned char *)(a3 + 40);
  uint64_t v15 = *(void *)(a3 + 48);
  sub_1B5904B60(v12, v11, v13, v14);
  a4(v15);
  unint64_t v16 = StringResolvable.resolved(with:)((uint64_t)a2);
  if (v7)
  {
LABEL_3:
    a5(v15);
    sub_1B5904A88(v12, v11, v13, v14);
    return a2;
  }
  uint64_t v44 = v17;
  if (a1 >> 61 != 5)
  {
    a2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
    sub_1B5951A10();
    swift_allocError();
    unint64_t *v38 = a1;
    v38[1] = (unint64_t)a2;
    swift_retain();
    swift_willThrow();
    a5(v15);
    sub_1B5904A88(v12, v11, v13, v14);
    swift_bridgeObjectRelease();
    return a2;
  }
  uint64_t v28 = v16;
  uint64_t v29 = sub_1B59A5304(*(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
  uint64_t v30 = v29;
  if (!*(void *)(v29 + 16) || (v42 = v29, uint64_t v31 = sub_1B59049B8(v28, v44), v30 = v42, (v32 & 1) == 0))
  {
    a2 = v30;
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v41 = a1;
    *(unsigned char *)(v41 + 32) = 1;
    swift_retain();
    swift_willThrow();
    goto LABEL_3;
  }
  uint64_t v33 = *(void *)(*(void *)(v42 + 56) + 8 * v31);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  if ((~v15 & 0xF000000000000007) != 0)
  {
    swift_retain();
    a2 = a6(v33, a2, v15);
    a5(v15);
    sub_1B5904A88(v12, v11, v13, v14);
    swift_release();
    a5(v15);
  }
  else
  {
    a2 = a7(v33);
    sub_1B5904A88(v12, v11, v13, v14);
    swift_release();
  }
  return a2;
}

uint64_t sub_1B59B7EA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65178);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59BCEDC();
  sub_1B5A1C838();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D640F0);
    sub_1B59095C8(&qword_1E9D641E0, &qword_1E9D640F0);
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59B8050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B59BD878(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B59B807C(uint64_t a1)
{
  unint64_t v2 = sub_1B59BCEDC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59B80B8(uint64_t a1)
{
  unint64_t v2 = sub_1B59BCEDC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59B80F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59B7EA0(a1, a2);
}

uint64_t StringResolvable.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65178);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B590CA38(a1, (uint64_t)v16);
  sub_1B59626EC(v16, &v17);
  if (v2)
  {

    sub_1B590CA38(a1, (uint64_t)v16);
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    sub_1B59BCEDC();
    sub_1B5A1C838();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D640F0);
    sub_1B59095C8(&qword_1E9D641E0, &qword_1E9D640F0);
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v17;
    uint64_t v10 = v18;
    uint64_t v11 = v19;
    char v12 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
    char v14 = v12 | 0x80;
  }
  else
  {
    uint64_t v9 = v17;
    uint64_t v10 = v18;
    uint64_t v11 = v19;
    char v14 = v20;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  }
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v11;
  *(unsigned char *)(a2 + 24) = v14;
  return result;
}

uint64_t sub_1B59B83B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StringResolvable.init(from:)(a1, a2);
}

unint64_t sub_1B59B83CC(unint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = result;
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFLL;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a4) & 0xF;
  }
  unint64_t v9 = a2 >> 14;
  unint64_t v112 = 4 * v8;
  if (a2 >> 14 != 4 * v8)
  {
    uint64_t v100 = v8;
    unint64_t v101 = result;
    uint64_t v109 = 0;
    uint64_t v11 = 0;
    uint64_t v113 = 0;
    char v21 = 0;
    LODWORD(v18) = 255;
    unint64_t v12 = a2;
    while (1)
    {
      if (v21) {
        unint64_t v6 = v12;
      }
      uint64_t result = sub_1B5A1C018();
      unint64_t v23 = result;
      uint64_t v24 = v22;
      unint64_t v117 = result;
      uint64_t v111 = v22;
      if (result != 46 || v22 != 0xE100000000000000)
      {
        uint64_t result = sub_1B5A1C678();
        unint64_t v23 = v117;
        if ((result & 1) == 0)
        {
          char v21 = 0;
          if (v117 == 91) {
            goto LABEL_27;
          }
          goto LABEL_28;
        }
      }
      unint64_t v25 = v4;
      unint64_t v26 = v6 >> 14;
      if (v6 >> 14 == v9) {
        break;
      }
      if ((_BYTE)v18 == 0xFF)
      {
        if (v9 < v26) {
          goto LABEL_85;
        }
        uint64_t v36 = sub_1B5A1C038();
        uint64_t v113 = MEMORY[0x1BA9A3760](v36);
        uint64_t v11 = v37;
        unint64_t v4 = v25;
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v23 = v117;
        unint64_t v6 = 0;
        char v21 = 1;
        uint64_t v109 = 0xF000000000000007;
        LODWORD(v18) = 1;
LABEL_26:
        uint64_t v24 = v111;
        if (v23 == 91) {
          goto LABEL_27;
        }
        goto LABEL_28;
      }
      uint64_t result = swift_allocObject();
      if (v9 < v26)
      {
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
        goto LABEL_87;
      }
      uint64_t v27 = result;
      char v28 = v18 & 1;
      char v103 = v18 & 1;
      unsigned __int8 v29 = v18;
      uint64_t v30 = v109;
      sub_1B590D634(v113, v11, v109, v28);
      unint64_t v105 = v12;
      uint64_t v31 = sub_1B5A1C038();
      uint64_t v32 = MEMORY[0x1BA9A3760](v31);
      unint64_t v12 = v113;
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      *(void *)(v27 + 16) = v32;
      *(void *)(v27 + 24) = v34;
      uint64_t v35 = v113;
      *(void *)(v27 + 32) = 0;
      *(unsigned char *)(v27 + 40) = 0;
      *(void *)(v27 + 48) = 0xF000000000000007;
      sub_1B59C4598(v27, v113, v11, v109, v103, (uint64_t)&v118);
      if (v115) {
        goto LABEL_74;
      }
      sub_1B590F034(v113, v11, v109, v29);
      sub_1B590F034(v113, v11, v109, v29);
      uint64_t result = swift_release();
      unint64_t v6 = 0;
      uint64_t v11 = v119;
      uint64_t v113 = v118;
      uint64_t v109 = v120;
      char v21 = 1;
      LODWORD(v18) = v121;
      unint64_t v12 = v105;
      unint64_t v4 = a4;
      uint64_t v5 = a3;
      uint64_t v24 = v111;
      unint64_t v23 = v117;
      if (v117 == 91)
      {
LABEL_27:
        if (v24 == 0xE100000000000000) {
          goto LABEL_29;
        }
      }
LABEL_28:
      uint64_t result = sub_1B5A1C678();
      unint64_t v23 = v117;
      if ((result & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (v21)
      {
        char v21 = 1;
LABEL_31:
        if (v23 != 93) {
          goto LABEL_47;
        }
        goto LABEL_44;
      }
      unint64_t v38 = v6 >> 14;
      if (v6 >> 14 == v9)
      {
        uint64_t v39 = v113;
      }
      else if ((_BYTE)v18 == 0xFF)
      {
        if (v9 < v38) {
          goto LABEL_88;
        }
        uint64_t v46 = sub_1B5A1C038();
        uint64_t v39 = MEMORY[0x1BA9A3760](v46);
        uint64_t v11 = v47;
        swift_bridgeObjectRelease();
        LODWORD(v18) = 1;
        uint64_t v109 = 0xF000000000000007;
      }
      else
      {
        uint64_t result = swift_allocObject();
        if (v9 < v38) {
          goto LABEL_86;
        }
        uint64_t v40 = result;
        char v41 = v18 & 1;
        char v106 = v18 & 1;
        unsigned __int8 v29 = v18;
        uint64_t v30 = v109;
        sub_1B590D634(v113, v11, v109, v41);
        uint64_t v42 = sub_1B5A1C038();
        uint64_t v43 = MEMORY[0x1BA9A3760](v42);
        uint64_t v45 = v44;
        swift_bridgeObjectRelease();
        *(void *)(v40 + 16) = v43;
        *(void *)(v40 + 24) = v45;
        uint64_t v35 = v113;
        *(void *)(v40 + 32) = 0;
        *(unsigned char *)(v40 + 40) = 0;
        *(void *)(v40 + 48) = 0xF000000000000007;
        sub_1B59C4598(v40, v113, v11, v109, v106, (uint64_t)&v118);
        if (v115)
        {
LABEL_74:
          swift_bridgeObjectRelease();
          sub_1B590F034(v35, v11, v30, v29);
          sub_1B590F034(v35, v11, v30, v29);
          goto LABEL_75;
        }
        sub_1B590F034(v113, v11, v109, v29);
        sub_1B590F034(v113, v11, v109, v29);
        swift_release();
        uint64_t v39 = v118;
        uint64_t v11 = v119;
        uint64_t v109 = v120;
        LODWORD(v18) = v121;
        uint64_t v5 = a3;
      }
      uint64_t v48 = sub_1B5A1BF98();
      uint64_t v49 = sub_1B59B83CC(&v118, v48, v5, a4);
      if (v115)
      {
        sub_1B590F034(v39, v11, v109, v18);
        swift_bridgeObjectRelease();
        return v12;
      }
      uint64_t v107 = v49;
      uint64_t v114 = v39;
      uint64_t v51 = v118;
      uint64_t v50 = v119;
      uint64_t v52 = v120;
      unint64_t v12 = v121;
      if ((_BYTE)v18 == 0xFF)
      {
        swift_bridgeObjectRelease();
        unsigned __int8 v124 = -1;
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v94 = 2;
        *(void *)(v94 + 8) = 0;
        *(void *)(v94 + 16) = 0;
        *(void *)(v94 + 24) = 0;
        *(unsigned char *)(v94 + 32) = 5;
        swift_willThrow();
        sub_1B590D6F0(v51, v50, v52, v12);
        unsigned __int8 v74 = v124;
        uint64_t v75 = v114;
        uint64_t v76 = v11;
        uint64_t v77 = v109;
        goto LABEL_63;
      }
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v51;
      *(void *)(v53 + 24) = v50;
      *(void *)(v53 + 32) = v52;
      *(unsigned char *)(v53 + 40) = v12;
      *(void *)(v53 + 48) = 0xF000000000000007;
      int v125 = v18;
      sub_1B590F04C(v114, v11, v109, v18);
      sub_1B590D634(v51, v50, v52, v12);
      sub_1B59C4598(v53 | 0x8000000000000000, v114, v11, v109, v18 & 1, (uint64_t)&v118);
      sub_1B590D6F0(v51, v50, v52, v12);
      unsigned __int8 v54 = v125;
      sub_1B590F034(v114, v11, v109, v125);
      sub_1B590F034(v114, v11, v109, v54);
      swift_release();
      unint64_t v6 = 0;
      uint64_t v11 = v119;
      uint64_t v113 = v118;
      uint64_t v109 = v120;
      char v21 = 1;
      LODWORD(v18) = v121;
      unint64_t v12 = v107;
      unint64_t v4 = a4;
      uint64_t v5 = a3;
      uint64_t v24 = v111;
      if (v117 != 93)
      {
LABEL_47:
        unint64_t v55 = v4;
        char v56 = sub_1B5A1C678();
        uint64_t result = swift_bridgeObjectRelease();
        char v57 = v21 | ~v56;
        unint64_t v4 = v55;
        if ((v57 & 1) == 0)
        {
LABEL_51:
          unsigned __int8 v124 = v18;
          if ((_BYTE)v18 == 0xFF)
          {
            if (v12 >> 14 < v6 >> 14) {
              goto LABEL_90;
            }
            uint64_t v86 = v11;
            uint64_t v87 = sub_1B5A1C038();
            uint64_t v88 = MEMORY[0x1BA9A3760](v87);
            unint64_t v90 = v89;
            swift_bridgeObjectRelease();
            uint64_t v118 = sub_1B59B9FA8(v88, v90);
            LOBYTE(v119) = v91 & 1;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651A0);
            if (swift_dynamicCast())
            {
              char v123 = 0;
              sub_1B590F034(v113, v11, v109, 0xFFu);
              int v92 = 0;
              uint64_t v11 = 0;
              unint64_t v19 = 0;
              uint64_t v93 = v122;
              unsigned __int8 v124 = 0;
            }
            else
            {
              uint64_t v96 = sub_1B5A1C038();
              uint64_t v93 = MEMORY[0x1BA9A3760](v96);
              uint64_t v11 = v97;
              swift_bridgeObjectRelease();
              sub_1B590F034(v113, v86, v109, v124);
              int v92 = 1;
              LOBYTE(v118) = 1;
              unsigned __int8 v124 = 1;
              unint64_t v19 = 0xF000000000000007;
            }
          }
          else
          {
            int v60 = v18;
            uint64_t result = swift_allocObject();
            if (v12 >> 14 < v6 >> 14) {
              goto LABEL_89;
            }
            uint64_t v61 = result;
            int v125 = v60;
            uint64_t v62 = v11;
            sub_1B590D634(v113, v11, v109, v60 & 1);
            uint64_t v63 = sub_1B5A1C038();
            uint64_t v64 = MEMORY[0x1BA9A3760](v63);
            uint64_t v66 = v65;
            swift_bridgeObjectRelease();
            *(void *)(v61 + 16) = v64;
            *(void *)(v61 + 24) = v66;
            *(void *)(v61 + 32) = 0;
            *(unsigned char *)(v61 + 40) = 0;
            *(void *)(v61 + 48) = 0xF000000000000007;
            sub_1B59C4598(v61, v113, v62, v109, v60 & 1, (uint64_t)&v118);
            if (v115)
            {
              unsigned __int8 v67 = v125;
              sub_1B590F034(v113, v62, v109, v125);
              uint64_t v68 = v113;
              uint64_t v69 = v62;
              uint64_t v70 = v109;
              unsigned __int8 v71 = v67;
LABEL_68:
              sub_1B590F034(v68, v69, v70, v71);
LABEL_75:
              swift_release();
              return v12;
            }
            unsigned __int8 v95 = v125;
            sub_1B590F034(v113, v62, v109, v125);
            sub_1B590F034(v113, v62, v109, v95);
            swift_release();
            uint64_t v93 = v118;
            uint64_t v11 = v119;
            unint64_t v19 = v120;
            int v92 = v121;
            unsigned __int8 v124 = v121;
          }
          if (v92 == 255)
          {
            sub_1B59619AC();
            swift_allocError();
            *(void *)uint64_t v98 = 2;
            *(void *)(v98 + 8) = 0;
            *(void *)(v98 + 16) = 0;
            *(void *)(v98 + 24) = 0;
            *(unsigned char *)(v98 + 32) = 5;
            swift_willThrow();
            unsigned __int8 v74 = v124;
            uint64_t v75 = v93;
            goto LABEL_62;
          }
          *(void *)unint64_t v101 = v93;
          *(void *)(v101 + 8) = v11;
          *(void *)(v101 + 16) = v19;
          *(unsigned char *)(v101 + 24) = v92 & 1;
          return v12;
        }
        goto LABEL_48;
      }
LABEL_44:
      if (v24 != 0xE100000000000000) {
        goto LABEL_47;
      }
      uint64_t result = swift_bridgeObjectRelease();
      if ((v21 & 1) == 0) {
        goto LABEL_51;
      }
LABEL_48:
      unint64_t v9 = v12 >> 14;
      if (v12 >> 14 != v112)
      {
        uint64_t result = sub_1B5A1BF98();
        unint64_t v12 = result;
        unint64_t v9 = result >> 14;
      }
      if (v9 == v112)
      {
        unsigned __int8 v124 = v18;
        uint64_t v116 = v100 << 16;
        int v110 = (v4 >> 60) & ((v5 & 0x800000000000000) == 0);
        if (v21)
        {
          unint64_t v7 = v101;
          unint64_t v19 = v109;
          uint64_t v20 = v113;
          goto LABEL_57;
        }
        if ((_BYTE)v18 == 0xFF)
        {
          unint64_t v7 = v101;
          uint64_t v10 = v113;
          goto LABEL_5;
        }
        int v78 = v18;
        uint64_t result = swift_allocObject();
        if (v112 < v6 >> 14) {
          goto LABEL_91;
        }
        uint64_t v79 = result;
        int v125 = v78;
        uint64_t v80 = v11;
        sub_1B590D634(v113, v11, v109, v78 & 1);
        uint64_t v81 = sub_1B5A1C038();
        uint64_t v82 = MEMORY[0x1BA9A3760](v81);
        uint64_t v84 = v83;
        swift_bridgeObjectRelease();
        *(void *)(v79 + 16) = v82;
        *(void *)(v79 + 24) = v84;
        *(void *)(v79 + 32) = 0;
        *(unsigned char *)(v79 + 40) = 0;
        *(void *)(v79 + 48) = 0xF000000000000007;
        sub_1B59C4598(v79, v113, v80, v109, v78 & 1, (uint64_t)&v118);
        if (v115)
        {
          unsigned __int8 v85 = v125;
          sub_1B590F034(v113, v80, v109, v125);
          uint64_t v68 = v113;
          uint64_t v69 = v80;
          uint64_t v70 = v109;
          unsigned __int8 v71 = v85;
          goto LABEL_68;
        }
        unsigned __int8 v99 = v125;
        sub_1B590F034(v113, v80, v109, v125);
        sub_1B590F034(v113, v80, v109, v99);
        swift_release();
        uint64_t v20 = v118;
        uint64_t v11 = v119;
        unint64_t v19 = v120;
        LOBYTE(v18) = v121;
        unsigned __int8 v124 = v121;
        unint64_t v7 = v101;
        goto LABEL_57;
      }
    }
    unint64_t v6 = 0;
    char v21 = 1;
    unint64_t v4 = v25;
    goto LABEL_26;
  }
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v109 = 0;
  uint64_t v116 = v8 << 16;
  int v110 = (a4 >> 60) & ((a3 & 0x800000000000000) == 0);
  unsigned __int8 v124 = -1;
  unint64_t v12 = a2;
LABEL_5:
  if (v112 < v6 >> 14)
  {
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
  }
  else
  {
    uint64_t v102 = v11;
    uint64_t v13 = sub_1B5A1C038();
    uint64_t v14 = MEMORY[0x1BA9A3760](v13);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v118 = sub_1B59B9FA8(v14, v16);
    LOBYTE(v119) = v17 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651A0);
    if (swift_dynamicCast())
    {
      char v123 = 0;
      sub_1B590F034(v10, v102, v109, 0xFFu);
      LOBYTE(v18) = 0;
      uint64_t v11 = 0;
      unint64_t v19 = 0;
      uint64_t v20 = v122;
      unsigned __int8 v124 = 0;
    }
    else
    {
      uint64_t v58 = sub_1B5A1C038();
      uint64_t v20 = MEMORY[0x1BA9A3760](v58);
      uint64_t v18 = v59;
      swift_bridgeObjectRelease();
      sub_1B590F034(v10, v102, v109, v124);
      LOBYTE(v118) = 1;
      unsigned __int8 v124 = 1;
      unint64_t v19 = 0xF000000000000007;
      uint64_t v11 = v18;
      LOBYTE(v18) = 1;
    }
LABEL_57:
    if ((_BYTE)v18 == 0xFF)
    {
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v73 = 5;
      *(void *)(v73 + 8) = 0;
      *(void *)(v73 + 16) = 0;
      *(void *)(v73 + 24) = 0;
      *(unsigned char *)(v73 + 32) = 5;
      swift_willThrow();
      unsigned __int8 v74 = v124;
      uint64_t v75 = v20;
LABEL_62:
      uint64_t v76 = v11;
      uint64_t v77 = v19;
LABEL_63:
      sub_1B590F034(v75, v76, v77, v74);
    }
    else
    {
      *(void *)unint64_t v7 = v20;
      *(void *)(v7 + 8) = v11;
      *(void *)(v7 + 16) = v19;
      *(unsigned char *)(v7 + 24) = v18 & 1;
      uint64_t v72 = 7;
      if (v110) {
        uint64_t v72 = 11;
      }
      return v116 | v72;
    }
    return v12;
  }
  return result;
}

void sub_1B59B9174(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1B59B9374(a1, a2, a3, a4, (uint64_t)&unk_1F0EAA118, (void (*)(uint64_t, uint64_t, unint64_t))sub_1B5904B8C, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1B59C4798, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B594CDC0, (uint64_t)&unk_1F0EAA140, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B594CD1C);
}

void sub_1B59B91F4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1B59B9374(a1, a2, a3, a4, (uint64_t)&unk_1F0EAA078, (void (*)(uint64_t, uint64_t, unint64_t))sub_1B590D634, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1B59C49A8, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B590F034, (uint64_t)&unk_1F0EAA0A0, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B590F04C);
}

void sub_1B59B9274(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1B59B9374(a1, a2, a3, a4, (uint64_t)&unk_1F0EAA0C8, (void (*)(uint64_t, uint64_t, unint64_t))sub_1B590D634, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1B59C4BA8, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B590F034, (uint64_t)&unk_1F0EAA0F0, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B590F04C);
}

void sub_1B59B92F4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1B59B9374(a1, a2, a3, a4, (uint64_t)&unk_1F0EAA168, (void (*)(uint64_t, uint64_t, unint64_t))sub_1B5909638, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1B59C4DA8, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B592C43C, (uint64_t)&unk_1F0EAA190, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B592C3E8);
}

void sub_1B59B9374(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, unint64_t), void (*a7)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t), void (*a8)(uint64_t, uint64_t, unint64_t, uint64_t), uint64_t a9, void (*a10)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  unint64_t v11 = a2;
  uint64_t v12 = a1;
  uint64_t v13 = a3 & 0xFFFFFFFFFFFFLL;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v13 = HIBYTE(a4) & 0xF;
  }
  unint64_t v14 = 4 * v13;
  unint64_t v15 = a2 >> 14;
  if (a2 >> 14 == 4 * v13)
  {
    unint64_t v16 = v13 << 16;
    if (v14 >= a2 >> 14) {
      goto LABEL_5;
    }
    goto LABEL_72;
  }
  uint64_t v90 = v13;
  unint64_t v16 = 0;
  uint64_t v101 = 0;
  uint64_t v102 = 0;
  char v21 = 0;
  uint64_t v10 = 255;
  unint64_t v22 = a2;
  uint64_t v93 = 4 * v13;
  do
  {
    if (v21) {
      unint64_t v11 = v22;
    }
    uint64_t v24 = sub_1B5A1C018();
    uint64_t v25 = v23;
    uint64_t v108 = v24;
    uint64_t v104 = v23;
    if (v24 != 46 || v23 != 0xE100000000000000)
    {
      char v26 = sub_1B5A1C678();
      uint64_t v24 = v108;
      if ((v26 & 1) == 0)
      {
        char v21 = 0;
        if (v108 == 91) {
          goto LABEL_27;
        }
        goto LABEL_28;
      }
    }
    unint64_t v27 = v11 >> 14;
    if (v11 >> 14 == v15)
    {
      unint64_t v11 = 0;
      char v21 = 1;
      goto LABEL_26;
    }
    if ((_BYTE)v10 == 0xFF)
    {
      if (v15 < v27) {
        goto LABEL_78;
      }
      uint64_t v37 = sub_1B5A1C038();
      uint64_t v38 = MEMORY[0x1BA9A3760](v37);
      uint64_t v101 = v39;
      uint64_t v102 = v38;
      swift_bridgeObjectRelease();
      uint64_t v24 = v108;
      unint64_t v11 = 0;
      char v21 = 1;
      unint64_t v16 = 0xF000000000000007;
      uint64_t v10 = 1;
LABEL_26:
      uint64_t v25 = v104;
      if (v24 == 91) {
        goto LABEL_27;
      }
      goto LABEL_28;
    }
    uint64_t v28 = swift_allocObject();
    if (v15 < v27)
    {
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    uint64_t v29 = v28;
    uint64_t v30 = v10;
    LODWORD(v94) = v10 & 1;
    a6(v102, v101, v16);
    unint64_t v99 = v22;
    uint64_t v31 = sub_1B5A1C038();
    uint64_t v32 = MEMORY[0x1BA9A3760](v31);
    uint64_t v33 = v30;
    unint64_t v34 = v16;
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    *(void *)(v29 + 16) = v32;
    *(void *)(v29 + 24) = v36;
    *(void *)(v29 + 32) = 0;
    *(unsigned char *)(v29 + 40) = 0;
    *(void *)(v29 + 48) = 0xF000000000000007;
    a7(&v109, v29, v102, v101, v34, v94);
    if (v107)
    {
      swift_release();
      swift_bridgeObjectRelease();
      a8(v102, v101, v34, v33);
      a8(v102, v101, v34, v33);
      return;
    }
    swift_release();
    a8(v102, v101, v34, v33);
    a8(v102, v101, v34, v33);
    unint64_t v11 = 0;
    unint64_t v16 = v110.u64[1];
    uint64_t v101 = v110.i64[0];
    uint64_t v102 = v109;
    char v21 = 1;
    uint64_t v10 = v111;
    unint64_t v22 = v99;
    unint64_t v14 = v93;
    uint64_t v25 = v104;
    uint64_t v24 = v108;
    if (v108 == 91)
    {
LABEL_27:
      if (v25 == 0xE100000000000000) {
        goto LABEL_29;
      }
    }
LABEL_28:
    char v40 = sub_1B5A1C678();
    uint64_t v24 = v108;
    if ((v40 & 1) == 0) {
      goto LABEL_31;
    }
LABEL_29:
    if ((v21 & 1) == 0)
    {
      unint64_t v41 = v11 >> 14;
      if (v11 >> 14 == v15)
      {
        uint64_t v42 = v10;
        uint64_t v44 = a3;
        unint64_t v43 = a4;
        uint64_t v45 = v102;
        uint64_t v46 = v101;
      }
      else if ((_BYTE)v10 == 0xFF)
      {
        if (v15 < v41) {
          goto LABEL_80;
        }
        uint64_t v44 = a3;
        unint64_t v43 = a4;
        uint64_t v55 = sub_1B5A1C038();
        uint64_t v45 = MEMORY[0x1BA9A3760](v55);
        uint64_t v46 = v56;
        swift_bridgeObjectRelease();
        uint64_t v42 = 1;
        unint64_t v16 = 0xF000000000000007;
      }
      else
      {
        uint64_t v47 = swift_allocObject();
        if (v15 < v41) {
          goto LABEL_79;
        }
        uint64_t v48 = v47;
        uint64_t v49 = v10 & 1;
        LODWORD(v94) = v10;
        unint64_t v14 = v102;
        ((void (*)(uint64_t, uint64_t, unint64_t, uint64_t))a6)(v102, v101, v16, v49);
        uint64_t v50 = sub_1B5A1C038();
        uint64_t v51 = MEMORY[0x1BA9A3760](v50);
        unint64_t v52 = v16;
        uint64_t v54 = v53;
        swift_bridgeObjectRelease();
        *(void *)(v48 + 16) = v51;
        *(void *)(v48 + 24) = v54;
        uint64_t v10 = v101;
        unint64_t v16 = v52;
        *(void *)(v48 + 32) = 0;
        *(unsigned char *)(v48 + 40) = 0;
        *(void *)(v48 + 48) = 0xF000000000000007;
        a7(&v109, v48, v102, v101, v52, v49);
        if (v107) {
          goto LABEL_73;
        }
        swift_release();
        a8(v102, v101, v52, v94);
        a8(v102, v101, v52, v94);
        uint64_t v45 = v109;
        unint64_t v16 = v110.u64[1];
        uint64_t v46 = v110.i64[0];
        uint64_t v42 = v111;
        uint64_t v44 = a3;
        unint64_t v43 = a4;
      }
      unint64_t v57 = sub_1B5A1BF98();
      unint64_t v58 = sub_1B59B83CC((unint64_t)&v109, v57, v44, v43);
      if (v107)
      {
        a8(v45, v46, v16, v42);
        swift_bridgeObjectRelease();
        return;
      }
      unint64_t v100 = v58;
      uint64_t v59 = v109;
      int64x2_t v60 = v110;
      char v103 = v111;
      if ((_BYTE)v42 == 0xFF)
      {
        swift_bridgeObjectRelease();
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v88 = 2;
        *(void *)(v88 + 8) = 0;
        *(void *)(v88 + 16) = 0;
        *(void *)(v88 + 24) = 0;
        *(unsigned char *)(v88 + 32) = 5;
        swift_willThrow();
        sub_1B590D6F0(v59, v60.i64[0], v60.i64[1], v103);
        return;
      }
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v59;
      *(int64x2_t *)(v61 + 24) = v60;
      *(unsigned char *)(v61 + 40) = v103;
      unint64_t v94 = v61 | 0x8000000000000000;
      *(void *)(v61 + 48) = 0xF000000000000007;
      a10(v45, v46, v16, v42);
      sub_1B590D634(v59, v60.i64[0], v60.i64[1], v103);
      a7(&v109, v94, v45, v46, v16, v42 & 1);
      sub_1B590D6F0(v59, v60.i64[0], v60.i64[1], v103);
      swift_release();
      a8(v45, v46, v16, v42);
      a8(v45, v46, v16, v42);
      unint64_t v11 = 0;
      unint64_t v16 = v110.u64[1];
      uint64_t v101 = v110.i64[0];
      uint64_t v102 = v109;
      char v21 = 1;
      uint64_t v10 = v111;
      unint64_t v22 = v100;
      unint64_t v14 = v93;
      uint64_t v25 = v104;
      if (v108 == 93) {
        goto LABEL_44;
      }
LABEL_47:
      char v62 = sub_1B5A1C678();
      swift_bridgeObjectRelease();
      if (v21 & 1 | ((v62 & 1) == 0)) {
        goto LABEL_48;
      }
LABEL_52:
      if ((_BYTE)v10 == 0xFF)
      {
        if (v22 >> 14 >= v11 >> 14)
        {
          uint64_t v82 = sub_1B5A1C038();
          uint64_t v83 = MEMORY[0x1BA9A3760](v82);
          uint64_t v85 = v84;
          swift_bridgeObjectRelease();
          int v86 = 1;
          int64x2_t v87 = vdupq_n_s64(0xF000000000000007);
          v87.i64[0] = v85;
LABEL_68:
          if (v86 != 255)
          {
            *(void *)a1 = v83;
            *(int64x2_t *)(a1 + 8) = v87;
            *(unsigned char *)(a1 + 24) = v86 & 1;
            return;
          }
          sub_1B59619AC();
          swift_allocError();
          *(void *)uint64_t v89 = 2;
          *(void *)(v89 + 8) = 0;
          *(void *)(v89 + 16) = 0;
          *(void *)(v89 + 24) = 0;
          *(unsigned char *)(v89 + 32) = 5;
LABEL_51:
          swift_willThrow();
          return;
        }
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
      uint64_t v64 = swift_allocObject();
      if (v22 >> 14 >= v11 >> 14)
      {
        uint64_t v65 = v64;
        uint64_t v66 = v10 & 1;
        unsigned int v95 = v10;
        ((void (*)(uint64_t, uint64_t, unint64_t, uint64_t))a6)(v102, v101, v16, v66);
        uint64_t v67 = sub_1B5A1C038();
        uint64_t v68 = MEMORY[0x1BA9A3760](v67);
        uint64_t v70 = v69;
        swift_bridgeObjectRelease();
        *(void *)(v65 + 16) = v68;
        *(void *)(v65 + 24) = v70;
        *(void *)(v65 + 32) = 0;
        *(unsigned char *)(v65 + 40) = 0;
        *(void *)(v65 + 48) = 0xF000000000000007;
        a7(&v109, v65, v102, v101, v16, v66);
        if (v107)
        {
          swift_release();
          uint64_t v71 = v95;
          uint64_t v72 = (void (*)(unint64_t, uint64_t, unint64_t, uint64_t))a8;
          a8(v102, v101, v16, v95);
          unint64_t v73 = v102;
          uint64_t v74 = v101;
          goto LABEL_74;
        }
        swift_release();
        a8(v102, v101, v16, v95);
        a8(v102, v101, v16, v95);
        uint64_t v83 = v109;
        int64x2_t v87 = v110;
        int v86 = v111;
        goto LABEL_68;
      }
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
    char v21 = 1;
LABEL_31:
    if (v24 != 93) {
      goto LABEL_47;
    }
LABEL_44:
    if (v25 != 0xE100000000000000) {
      goto LABEL_47;
    }
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_52;
    }
LABEL_48:
    unint64_t v15 = v22 >> 14;
    if (v22 >> 14 != v14)
    {
      unint64_t v22 = sub_1B5A1BF98();
      unint64_t v15 = v22 >> 14;
    }
  }
  while (v15 != v14);
  unint64_t v20 = v16;
  unint64_t v16 = v90 << 16;
  if (v21)
  {
LABEL_57:
    uint64_t v12 = a1;
    goto LABEL_6;
  }
  if ((_BYTE)v10 == 0xFF)
  {
    uint64_t v12 = a1;
    if (v14 >= v11 >> 14)
    {
LABEL_5:
      uint64_t v17 = sub_1B5A1C038();
      uint64_t v18 = MEMORY[0x1BA9A3760](v17);
      uint64_t v101 = v19;
      uint64_t v102 = v18;
      swift_bridgeObjectRelease();
      LOBYTE(v10) = 1;
      unint64_t v20 = 0xF000000000000007;
LABEL_6:
      if ((_BYTE)v10 != 0xFF)
      {
        *(void *)uint64_t v12 = v102;
        *(void *)(v12 + 8) = v101;
        *(void *)(v12 + 16) = v20;
        *(unsigned char *)(v12 + 24) = v10 & 1;
        return;
      }
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v63 = 5;
      *(void *)(v63 + 8) = 0;
      *(void *)(v63 + 16) = 0;
      *(void *)(v63 + 24) = 0;
      *(unsigned char *)(v63 + 32) = 5;
      goto LABEL_51;
    }
LABEL_72:
    __break(1u);
LABEL_73:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v71 = v94;
    uint64_t v72 = (void (*)(unint64_t, uint64_t, unint64_t, uint64_t))a8;
    a8(v14, v10, v16, v94);
    unint64_t v73 = v14;
    uint64_t v74 = v10;
LABEL_74:
    unint64_t v81 = v16;
    goto LABEL_75;
  }
  unsigned int v96 = v10;
  uint64_t v75 = swift_allocObject();
  if (v14 < v11 >> 14)
  {
LABEL_83:
    __break(1u);
    return;
  }
  uint64_t v76 = v75;
  a6(v102, v101, v20);
  uint64_t v77 = sub_1B5A1C038();
  uint64_t v78 = MEMORY[0x1BA9A3760](v77);
  uint64_t v80 = v79;
  swift_bridgeObjectRelease();
  *(void *)(v76 + 16) = v78;
  *(void *)(v76 + 24) = v80;
  *(void *)(v76 + 32) = 0;
  *(unsigned char *)(v76 + 40) = 0;
  *(void *)(v76 + 48) = 0xF000000000000007;
  a7(&v109, v76, v102, v101, v20, v96 & 1);
  if (!v107)
  {
    swift_release();
    a8(v102, v101, v20, v96);
    a8(v102, v101, v20, v96);
    unint64_t v20 = v110.u64[1];
    uint64_t v101 = v110.i64[0];
    uint64_t v102 = v109;
    LOBYTE(v10) = v111;
    goto LABEL_57;
  }
  swift_release();
  uint64_t v71 = v96;
  uint64_t v72 = (void (*)(unint64_t, uint64_t, unint64_t, uint64_t))a8;
  a8(v102, v101, v20, v96);
  unint64_t v73 = v102;
  uint64_t v74 = v101;
  unint64_t v81 = v20;
LABEL_75:
  v72(v73, v74, v81, v71);
}

uint64_t sub_1B59B9FA8(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        unint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        unint64_t v6 = (unsigned __int8 *)sub_1B5A1C418();
      }
      uint64_t v7 = (uint64_t)sub_1B59BAB68(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        unint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              unint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_1B59BAA80(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

void *sub_1B59BA1F8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651A8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B59BB2D0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1B59BA308(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646C8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B59BD578(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1B59BA418(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1B59BA64C(a1, a2, a3, a4, &qword_1E9D646D0, &qword_1E9D63090);
}

char *sub_1B59BA42C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651B8);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1B59BD384(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1B59BA528(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646E8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B59BD290(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1B59BA638(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1B59BA64C(a1, a2, a3, a4, &qword_1E9D62F18, &qword_1E9D62F90);
}

void *sub_1B59BA64C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      _OWORD v13[2] = v11;
      void v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      unint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1B59BD46C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1B59BA77C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646D8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B59BD66C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1B59BA88C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651B0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B59BD764(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1B59BA99C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63928);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1B59BAA04(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1B5A1C008();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1BA9A37D0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_1B59BAA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B5A1C028();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1B59BADE4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1B5A1C418();
  }
LABEL_7:
  uint64_t v11 = sub_1B59BAB68(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1B59BAB68(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1B59BADE4()
{
  unint64_t v0 = sub_1B5A1C038();
  uint64_t v4 = sub_1B59BAE64(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B59BAE64(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1B59BAFBC(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1B59BA99C(v9, 0);
      unint64_t v12 = sub_1B59BB0BC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1B5A1C418();
LABEL_4:
        JUMPOUT(0x1BA9A3770);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1BA9A3770](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1BA9A3770]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1B59BAFBC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1B59BAA04(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1B59BAA04(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1B59BB0BC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    uint64_t v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1B59BAA04(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1B5A1BFF8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1B5A1C418();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1B59BAA04(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1B5A1BFC8();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1B59BB2D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D640F0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B59BB3DC(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3) {
    return v4;
  }
  v168 = v2;
  uint64_t v176 = MEMORY[0x1E4FBC860];
  sub_1B596928C(0, v3, 0);
  uint64_t v4 = v176;
  uint64_t v166 = qword_1E9D65380;
  uint64_t v163 = a2 + qword_1E9D65378;
  unint64_t v6 = (unsigned char *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = *((void *)v6 - 3);
    uint64_t v8 = *((void *)v6 - 2);
    if ((*v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      goto LABEL_59;
    }
    uint64_t v9 = *((void *)v6 - 1);
    uint64_t v167 = v9;
    if ((~v9 & 0xF000000000000007) != 0) {
      break;
    }
    if (!*(void *)(a2 + v166))
    {
      sub_1B5904B8C(v7, v8, v9, 1);
      swift_bridgeObjectRetain();
      sub_1B590968C(v9);
      goto LABEL_31;
    }
    uint64_t v164 = *(void *)(a2 + v166);
    swift_beginAccess();
    uint64_t v10 = *(void *)v163;
    uint64_t v11 = *(void *)(*(void *)v163 + 16);
    sub_1B5904B8C(v7, v8, v9, 1);
    sub_1B5904B8C(v7, v8, v9, 1);
    if (!v11)
    {
      swift_retain();
LABEL_30:
      swift_endAccess();
      swift_release();
      goto LABEL_31;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v12 = sub_1B59049B8(v7, v8);
    if ((v13 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    uint64_t v14 = *(void *)(v10 + 56) + 32 * v12;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    int v18 = *(unsigned __int8 *)(v14 + 24);
    swift_endAccess();
    uint64_t v161 = v16;
    sub_1B5909638(v15, v16, v17, v18);
    swift_bridgeObjectRelease();
    if (v18 != 1)
    {
      swift_release();
      unint64_t v175 = v15;
      uint64_t v60 = v15;
      goto LABEL_41;
    }
    uint64_t v159 = v15;
    uint64_t v19 = v17;
    uint64_t v154 = v17;
    if ((~v17 & 0xF000000000000007) == 0)
    {
      uint64_t v20 = v164;
      if (*(void *)(v164 + qword_1E9D65380))
      {
        uint64_t v148 = *(void *)(v164 + qword_1E9D65380);
        uint64_t v21 = v164 + qword_1E9D65378;
        swift_beginAccess();
        uint64_t v144 = *(void *)v21;
        uint64_t v22 = *(void *)(*(void *)v21 + 16);
        sub_1B5909638(v159, v16, v17, 1);
        if (v22)
        {
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v23 = sub_1B59049B8(v159, v16);
          if (v24)
          {
            uint64_t v25 = *(void *)(v144 + 56) + 32 * v23;
            uint64_t v145 = *(void *)v25;
            uint64_t v26 = *(void *)(v25 + 16);
            uint64_t v141 = *(void *)(v25 + 8);
            char v27 = *(unsigned char *)(v25 + 24);
            swift_endAccess();
            sub_1B5909638(v145, v141, v26, v27);
            swift_bridgeObjectRelease();
            uint64_t v139 = v26;
            uint64_t v28 = v26;
            char v29 = v27;
            sub_1B59B3D0C(v148, v145, v141, v28, v27, &v172);
            uint64_t v20 = v164;
            if (v168)
            {

              swift_release();
              sub_1B591F344(v145, v141, v139, v29);
              v168 = 0;
              goto LABEL_83;
            }
            v168 = 0;
            swift_release();
            sub_1B591F344(v145, v141, v139, v29);
            uint64_t v112 = v172;
            unint64_t v171 = v172;
            uint64_t v103 = v159;
LABEL_93:
            if ((~v112 & 0xF000000000000007) != 0)
            {
              swift_release();
              swift_bridgeObjectRelease();
              sub_1B591F344(v103, v16, v154, 1);
              unint64_t v175 = v112;
              uint64_t v60 = v112;
              goto LABEL_41;
            }
            sub_1B59619AC();
            uint64_t v113 = (void *)swift_allocError();
            *(void *)uint64_t v114 = v103;
            *(void *)(v114 + 8) = v16;
            *(void *)(v114 + 16) = &type metadata for DecodableState;
            *(unsigned char *)(v114 + 32) = 0;
            swift_willThrow();

            v168 = 0;
            uint64_t v115 = v154;
            goto LABEL_119;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_retain();
        }
        uint64_t v20 = v164;
        swift_endAccess();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1B590968C(v17);
      }
LABEL_83:
      uint64_t v103 = v159;
      uint64_t v172 = v159;
      uint64_t v173 = v16;
      uint64_t v104 = (uint64_t *)(v20 + *(void *)(*(void *)v20 + 112));
      swift_beginAccess();
      uint64_t v105 = *v104;
      uint64_t v106 = *(void *)(v105 + 16);
      swift_bridgeObjectRetain();
      if (v106)
      {
        swift_bridgeObjectRetain();
        uint64_t v107 = sub_1B59049B8(v159, v16);
        if (v108)
        {
          unint64_t v153 = *(void *)(*(void *)(v105 + 56) + 8 * v107);
          uint64_t v109 = swift_bridgeObjectRelease();
          MEMORY[0x1F4188790](v109);
          uint64_t KeyPath = swift_getKeyPath();
          MEMORY[0x1F4188790](KeyPath);
          swift_getKeyPath();
          sub_1B5A1A3C8();
          swift_release();
          uint64_t result = swift_release();
          if ((v153 & 0x8000000000000000) != 0) {
            goto LABEL_146;
          }
          if (v153 >= *(void *)(v170 + 16)) {
            goto LABEL_147;
          }
          unint64_t v171 = *(void *)(v170 + 8 * v153 + 32);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_92;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v111 = *(void *)(v20 + *(void *)(*(void *)v20 + 120));
      if (v111)
      {
        (*(void (**)(unint64_t *__return_ptr, uint64_t *))(*(void *)v111 + 248))(&v171, &v172);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v171 = 0xF000000000000007;
      }
LABEL_92:
      uint64_t v112 = v171;
      goto LABEL_93;
    }
    uint64_t v81 = v164;
    uint64_t v82 = *(void *)(v164 + qword_1E9D65380);
    if (!v82)
    {
      uint64_t v84 = v159;
      uint64_t v86 = v161;
      sub_1B5909638(v159, v161, v19, 1);
      sub_1B590968C(v19);
      goto LABEL_114;
    }
    uint64_t v83 = v164 + qword_1E9D65378;
    swift_beginAccess();
    uint64_t v142 = *(void *)v83;
    uint64_t v146 = *(void *)(*(void *)v83 + 16);
    uint64_t v84 = v159;
    uint64_t v85 = v82;
    uint64_t v86 = v161;
    sub_1B5909638(v159, v161, v19, 1);
    sub_1B590968C(v19);
    uint64_t v150 = v85;
    swift_retain();
    if (!v146) {
      goto LABEL_113;
    }
    swift_bridgeObjectRetain();
    uint64_t v87 = sub_1B59049B8(v159, v161);
    if ((v88 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_113:
      swift_endAccess();
      swift_release();
      uint64_t v81 = v164;
LABEL_114:
      swift_bridgeObjectRetain();
      sub_1B59C83E8(v84, v86, &v171);
      swift_bridgeObjectRelease();
      uint64_t v128 = v171;
      goto LABEL_115;
    }
    uint64_t v89 = *(void *)(v142 + 56) + 32 * v87;
    uint64_t v90 = *(void *)(v89 + 8);
    uint64_t v143 = *(void *)v89;
    uint64_t v147 = *(void *)(v89 + 16);
    char v91 = *(unsigned char *)(v89 + 24);
    swift_endAccess();
    sub_1B5909638(v143, v90, v147, v91);
    swift_bridgeObjectRelease();
    sub_1B59B3D0C(v150, v143, v90, v147, v91, &v172);
    if (v168)
    {

      swift_release();
      sub_1B591F344(v143, v90, v147, v91);
      v168 = 0;
      uint64_t v81 = v164;
      uint64_t v86 = v161;
      goto LABEL_114;
    }
    v168 = 0;
    swift_release();
    sub_1B591F344(v143, v90, v147, v91);
    uint64_t v128 = v172;
    uint64_t v81 = v164;
LABEL_115:
    if ((~v128 & 0xF000000000000007) != 0)
    {
      uint64_t v16 = v161;
      swift_bridgeObjectRelease();
      sub_1B59B5A4C(v128, v81, v154, &v174);
      if (!v168)
      {
        v168 = 0;
        sub_1B5905298(v154);
        sub_1B599FF94(v128);
        sub_1B5905298(v154);
        swift_release();
        sub_1B591F344(v159, v161, v154, 1);
        uint64_t v60 = v174;
        unint64_t v175 = v174;
        goto LABEL_41;
      }
      sub_1B5905298(v154);
      sub_1B599FF94(v128);
      sub_1B5905298(v154);

      v168 = 0;
      uint64_t v115 = v154;
      uint64_t v103 = v159;
    }
    else
    {
      sub_1B59619AC();
      uint64_t v129 = swift_allocError();
      uint64_t v16 = v161;
      *(void *)uint64_t v130 = v84;
      *(void *)(v130 + 8) = v161;
      *(void *)(v130 + 16) = &type metadata for DecodableState;
      *(unsigned char *)(v130 + 32) = 0;
      swift_willThrow();
      sub_1B5905298(v154);
      sub_1B5905298(v154);
      unsigned __int8 v131 = (void *)v129;
      uint64_t v115 = v154;
      uint64_t v103 = v159;

      v168 = 0;
    }
LABEL_119:
    swift_release();
    sub_1B591F344(v103, v16, v115, 1);
LABEL_31:
    uint64_t v172 = v7;
    uint64_t v173 = v8;
    uint64_t v50 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 112));
    swift_beginAccess();
    uint64_t v51 = *v50;
    uint64_t v52 = *(void *)(v51 + 16);
    swift_bridgeObjectRetain();
    if (v52)
    {
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1B59049B8(v7, v8);
      if (v54)
      {
        unint64_t v55 = *(void *)(*(void *)(v51 + 56) + 8 * v53);
        uint64_t v56 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v56);
        uint64_t v57 = swift_getKeyPath();
        MEMORY[0x1F4188790](v57);
        swift_getKeyPath();
        sub_1B5A1A3C8();
        swift_release();
        uint64_t result = swift_release();
        if ((v55 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
          return result;
        }
        if (v55 >= *(void *)(v174 + 16)) {
          goto LABEL_143;
        }
        unint64_t v175 = *(void *)(v174 + 8 * v55 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v59 = *(void *)(a2 + *(void *)(*(void *)a2 + 120));
    if (v59)
    {
      (*(void (**)(unint64_t *__return_ptr, uint64_t *))(*(void *)v59 + 248))(&v175, &v172);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v175 = 0xF000000000000007;
    }
LABEL_40:
    uint64_t v60 = v175;
LABEL_41:
    if ((~v60 & 0xF000000000000007) == 0)
    {
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v134 = v7;
      *(void *)(v134 + 8) = v8;
      *(void *)(v134 + 16) = MEMORY[0x1E4FBB1A0];
      *(unsigned char *)(v134 + 32) = 0;
      swift_willThrow();
      uint64_t v135 = v7;
      uint64_t v136 = v8;
      uint64_t v137 = v167;
LABEL_137:
      sub_1B5904AB4(v135, v136, v137, 1);
      swift_release();
      return v4;
    }
    uint64_t v172 = v60;
    uint64_t v61 = sub_1B59537D8();
    if (v168)
    {
      sub_1B599FF94(v60);
      swift_bridgeObjectRelease();
      sub_1B5904AB4(v7, v8, v167, 1);
      goto LABEL_140;
    }
    uint64_t v63 = v61;
    uint64_t v64 = v62;
    sub_1B599FF94(v60);
    swift_bridgeObjectRelease();
    sub_1B5904AB4(v7, v8, v167, 1);
    uint64_t v7 = v63;
    uint64_t v8 = v64;
LABEL_59:
    uint64_t v176 = v4;
    unint64_t v79 = *(void *)(v4 + 16);
    unint64_t v78 = *(void *)(v4 + 24);
    if (v79 >= v78 >> 1)
    {
      sub_1B596928C(v78 > 1, v79 + 1, 1);
      uint64_t v4 = v176;
    }
    v6 += 32;
    *(void *)(v4 + 16) = v79 + 1;
    uint64_t v80 = v4 + 16 * v79;
    *(void *)(v80 + 32) = v7;
    *(void *)(v80 + 40) = v8;
    if (!--v3) {
      return v4;
    }
  }
  uint64_t v30 = *(void *)(a2 + v166);
  if (!v30)
  {
    sub_1B5904B8C(v7, v8, v9, 1);
    sub_1B5904B8C(v7, v8, v9, 1);
    sub_1B590968C(v9);
    goto LABEL_46;
  }
  swift_beginAccess();
  uint64_t v31 = *(void *)v163;
  uint64_t v32 = *(void *)(*(void *)v163 + 16);
  sub_1B5904B8C(v7, v8, v9, 1);
  sub_1B5904B8C(v7, v8, v9, 1);
  sub_1B590968C(v9);
  uint64_t v165 = v30;
  swift_retain();
  if (!v32) {
    goto LABEL_45;
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1B59049B8(v7, v8);
  if ((v34 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_45:
    swift_endAccess();
    swift_release();
    goto LABEL_46;
  }
  uint64_t v35 = *(void *)(v31 + 56) + 32 * v33;
  uint64_t v37 = *(void *)v35;
  uint64_t v36 = *(void *)(v35 + 8);
  uint64_t v38 = *(void *)(v35 + 16);
  int v39 = *(unsigned __int8 *)(v35 + 24);
  swift_endAccess();
  sub_1B5909638(v37, v36, v38, v39);
  swift_bridgeObjectRelease();
  if (v39 != 1)
  {
    swift_release();
    unint64_t v175 = v37;
    goto LABEL_56;
  }
  uint64_t v162 = v36;
  uint64_t v40 = v165;
  uint64_t v160 = v38;
  if ((~v38 & 0xF000000000000007) != 0)
  {
    uint64_t v92 = *(void *)(v165 + qword_1E9D65380);
    if (v92)
    {
      uint64_t v93 = v165 + qword_1E9D65378;
      swift_beginAccess();
      uint64_t v151 = *(void *)v93;
      uint64_t v156 = *(void *)(*(void *)v93 + 16);
      uint64_t v94 = v162;
      sub_1B5909638(v37, v162, v160, 1);
      sub_1B590968C(v160);
      swift_retain();
      uint64_t v95 = v92;
      if (v156)
      {
        swift_bridgeObjectRetain();
        uint64_t v96 = sub_1B59049B8(v37, v162);
        if (v97)
        {
          uint64_t v98 = *(void *)(v151 + 56) + 32 * v96;
          uint64_t v99 = *(void *)v98;
          uint64_t v100 = *(void *)(v98 + 8);
          uint64_t v152 = v95;
          uint64_t v157 = *(void *)(v98 + 16);
          char v101 = *(unsigned char *)(v98 + 24);
          swift_endAccess();
          sub_1B5909638(v99, v100, v157, v101);
          swift_bridgeObjectRelease();
          sub_1B59B3D0C(v152, v99, v100, v157, v101, &v172);
          if (!v168)
          {
            v168 = 0;
            swift_release();
            sub_1B591F344(v99, v100, v157, v101);
            uint64_t v132 = v172;
            uint64_t v40 = v165;
            goto LABEL_123;
          }

          swift_release();
          sub_1B591F344(v99, v100, v157, v101);
          v168 = 0;
          uint64_t v40 = v165;
          uint64_t v94 = v162;
LABEL_122:
          swift_bridgeObjectRetain();
          sub_1B59C83E8(v37, v94, &v171);
          swift_bridgeObjectRelease();
          uint64_t v132 = v171;
LABEL_123:
          if ((~v132 & 0xF000000000000007) != 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v119 = v160;
            sub_1B59B5A4C(v132, v40, v160, &v174);
            if (!v168)
            {
              v168 = 0;
              sub_1B5905298(v160);
              sub_1B599FF94(v132);
              sub_1B5905298(v160);
              swift_release();
              sub_1B591F344(v37, v162, v160, 1);
              uint64_t v37 = v174;
              unint64_t v175 = v174;
              goto LABEL_56;
            }
            sub_1B5905298(v160);
            sub_1B599FF94(v132);
            sub_1B5905298(v160);

            v168 = 0;
          }
          else
          {
            sub_1B59619AC();
            uint64_t v126 = (void *)swift_allocError();
            *(void *)uint64_t v133 = v37;
            *(void *)(v133 + 8) = v162;
            *(void *)(v133 + 16) = &type metadata for DecodableState;
            *(unsigned char *)(v133 + 32) = 0;
            swift_willThrow();
            uint64_t v119 = v160;
            sub_1B5905298(v160);
            sub_1B5905298(v160);
LABEL_125:

            v168 = 0;
          }
          swift_release();
          sub_1B591F344(v37, v162, v119, 1);
LABEL_46:
          uint64_t v172 = v7;
          uint64_t v173 = v8;
          uint64_t v65 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 112));
          swift_beginAccess();
          uint64_t v66 = *v65;
          uint64_t v67 = *(void *)(v66 + 16);
          swift_bridgeObjectRetain();
          if (v67)
          {
            swift_bridgeObjectRetain();
            uint64_t v68 = sub_1B59049B8(v7, v8);
            if (v69)
            {
              unint64_t v70 = *(void *)(*(void *)(v66 + 56) + 8 * v68);
              uint64_t v71 = swift_bridgeObjectRelease();
              MEMORY[0x1F4188790](v71);
              uint64_t v72 = swift_getKeyPath();
              MEMORY[0x1F4188790](v72);
              swift_getKeyPath();
              sub_1B5A1A3C8();
              swift_release();
              uint64_t result = swift_release();
              if ((v70 & 0x8000000000000000) != 0) {
                goto LABEL_144;
              }
              if (v70 >= *(void *)(v174 + 16)) {
                goto LABEL_145;
              }
              unint64_t v175 = *(void *)(v174 + 8 * v70 + 32);
              swift_retain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_55;
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v73 = *(void *)(a2 + *(void *)(*(void *)a2 + 120));
          if (v73)
          {
            (*(void (**)(unint64_t *__return_ptr, uint64_t *))(*(void *)v73 + 248))(&v175, &v172);
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            unint64_t v175 = 0xF000000000000007;
          }
LABEL_55:
          uint64_t v37 = v175;
          goto LABEL_56;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      swift_release();
      uint64_t v40 = v165;
      goto LABEL_122;
    }
    uint64_t v94 = v162;
    sub_1B5909638(v37, v162, v160, 1);
    sub_1B590968C(v160);
    goto LABEL_122;
  }
  if (!*(void *)(v165 + qword_1E9D65380))
  {
    uint64_t v102 = v162;
    swift_bridgeObjectRetain();
    sub_1B590968C(v160);
    goto LABEL_99;
  }
  uint64_t v155 = *(void *)(v165 + qword_1E9D65380);
  unint64_t v41 = (uint64_t *)(v165 + qword_1E9D65378);
  swift_beginAccess();
  uint64_t v42 = *v41;
  uint64_t v43 = *(void *)(v42 + 16);
  sub_1B5909638(v37, v162, v38, 1);
  if (!v43)
  {
    swift_retain();
    uint64_t v40 = v165;
    goto LABEL_97;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v44 = sub_1B59049B8(v37, v162);
  if ((v45 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = v165;
LABEL_97:
    swift_endAccess();
    swift_release();
LABEL_98:
    uint64_t v102 = v162;
LABEL_99:
    uint64_t v172 = v37;
    uint64_t v173 = v102;
    uint64_t v116 = (uint64_t *)(v40 + *(void *)(*(void *)v40 + 112));
    swift_beginAccess();
    uint64_t v117 = *v116;
    uint64_t v118 = *(void *)(v117 + 16);
    swift_bridgeObjectRetain();
    uint64_t v119 = v160;
    if (v118)
    {
      swift_bridgeObjectRetain();
      uint64_t v120 = sub_1B59049B8(v37, v162);
      if (v121)
      {
        unint64_t v158 = *(void *)(*(void *)(v117 + 56) + 8 * v120);
        uint64_t v122 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v122);
        uint64_t v123 = swift_getKeyPath();
        MEMORY[0x1F4188790](v123);
        swift_getKeyPath();
        sub_1B5A1A3C8();
        swift_release();
        uint64_t result = swift_release();
        if ((v158 & 0x8000000000000000) != 0) {
          goto LABEL_148;
        }
        if (v158 >= *(void *)(v170 + 16)) {
          goto LABEL_149;
        }
        unint64_t v171 = *(void *)(v170 + 8 * v158 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v119 = v160;
        goto LABEL_108;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v124 = *(void *)(v40 + *(void *)(*(void *)v40 + 120));
    if (v124)
    {
      (*(void (**)(unint64_t *__return_ptr, uint64_t *))(*(void *)v124 + 248))(&v171, &v172);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v171 = 0xF000000000000007;
    }
LABEL_108:
    uint64_t v125 = v171;
    goto LABEL_109;
  }
  uint64_t v46 = *(void *)(v42 + 56) + 32 * v44;
  uint64_t v47 = *(void *)(v46 + 8);
  uint64_t v149 = *(void *)v46;
  uint64_t v48 = *(void *)(v46 + 16);
  char v49 = *(unsigned char *)(v46 + 24);
  swift_endAccess();
  sub_1B5909638(v149, v47, v48, v49);
  swift_bridgeObjectRelease();
  char v140 = v49;
  sub_1B59B3D0C(v155, v149, v47, v48, v49, &v172);
  uint64_t v40 = v165;
  if (v168)
  {

    swift_release();
    sub_1B591F344(v149, v47, v48, v140);
    v168 = 0;
    goto LABEL_98;
  }
  v168 = 0;
  swift_release();
  sub_1B591F344(v149, v47, v48, v140);
  uint64_t v125 = v172;
  unint64_t v171 = v172;
  uint64_t v119 = v160;
LABEL_109:
  if ((~v125 & 0xF000000000000007) == 0)
  {
    sub_1B59619AC();
    uint64_t v126 = (void *)swift_allocError();
    *(void *)uint64_t v127 = v37;
    *(void *)(v127 + 8) = v162;
    *(void *)(v127 + 16) = &type metadata for DecodableState;
    *(unsigned char *)(v127 + 32) = 0;
    swift_willThrow();
    goto LABEL_125;
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B591F344(v37, v162, v119, 1);
  unint64_t v175 = v125;
  uint64_t v37 = v125;
LABEL_56:
  if ((~v37 & 0xF000000000000007) == 0)
  {
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v138 = v7;
    *(void *)(v138 + 8) = v8;
    *(void *)(v138 + 16) = MEMORY[0x1E4FBB1A0];
    *(unsigned char *)(v138 + 32) = 0;
    swift_willThrow();
    sub_1B5905298(v167);
    sub_1B5905298(v167);
    uint64_t v135 = v7;
    uint64_t v136 = v8;
    uint64_t v137 = v167;
    goto LABEL_137;
  }
  swift_bridgeObjectRelease();
  uint64_t v74 = sub_1B59B5F3C(v37, a2, v167);
  if (!v168)
  {
    uint64_t v76 = v74;
    uint64_t v77 = v75;
    sub_1B5905298(v167);
    sub_1B599FF94(v37);
    sub_1B5905298(v167);
    sub_1B5904AB4(v7, v8, v167, 1);
    uint64_t v7 = v76;
    uint64_t v8 = v77;
    goto LABEL_59;
  }
  sub_1B5905298(v167);
  sub_1B599FF94(v37);
  sub_1B5905298(v167);
  sub_1B5904AB4(v7, v8, v167, 1);
LABEL_140:
  swift_release();
  return v4;
}

unint64_t sub_1B59BCEDC()
{
  unint64_t result = qword_1E9D65180;
  if (!qword_1E9D65180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65180);
  }
  return result;
}

uint64_t sub_1B59BCF30(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 6;
}

uint64_t sub_1B59BCF3C(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_1B59BCF4C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for StringResolvable()
{
  return &type metadata for StringResolvable;
}

uint64_t destroy for InlineInterpolationString(uint64_t a1)
{
  return sub_1B5904AB4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for InlineInterpolationString(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B5904B8C(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for InlineInterpolationString(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B5904B8C(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B5904AB4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for InlineInterpolationString(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B5904AB4(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for InlineInterpolationString()
{
  return &type metadata for InlineInterpolationString;
}

unsigned char *storeEnumTagSinglePayload for InlineInterpolationString.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59BD150);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InlineInterpolationString.CodingKeys()
{
  return &type metadata for InlineInterpolationString.CodingKeys;
}

unint64_t sub_1B59BD18C()
{
  unint64_t result = qword_1E9D65188;
  if (!qword_1E9D65188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65188);
  }
  return result;
}

unint64_t sub_1B59BD1E4()
{
  unint64_t result = qword_1E9D65190;
  if (!qword_1E9D65190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65190);
  }
  return result;
}

unint64_t sub_1B59BD23C()
{
  unint64_t result = qword_1E9D65198;
  if (!qword_1E9D65198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65198);
  }
  return result;
}

uint64_t sub_1B59BD290(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

char *sub_1B59BD384(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B59BD46C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B59BD578(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B59BD66C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B59BD764(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1B5A1C548();
  __break(1u);
  return result;
}

uint64_t sub_1B59BD858()
{
  return 0x6C6F707265746E69;
}

uint64_t sub_1B59BD878(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6C6F707265746E69 && a2 == 0xEC00000064657461)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B59BD910()
{
  return objectdestroyTm_2((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59BD928()
{
  return objectdestroyTm_2((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59BD940()
{
  return objectdestroyTm_2((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59BD958()
{
  return objectdestroyTm_2((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59BD970()
{
  return objectdestroyTm_2((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59BD988()
{
  return objectdestroyTm_2((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59BD9A8()
{
  return 24;
}

__n128 sub_1B59BD9B4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1B59BD9C8()
{
  return objectdestroyTm_2((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59BD9E0()
{
  return objectdestroyTm_2((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59BD9F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(uint64_t))
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return a5(a3);
  }
  else
  {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1B59BDA5C()
{
  return objectdestroyTm_2((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59BDA74()
{
  return objectdestroyTm_2((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t objectdestroyTm_2(void (*a1)(void, void, void, void))
{
  a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  if ((~*(void *)(v1 + 48) & 0xF000000000000007) != 0) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v1, 56, 7);
}

uint64_t destroy for OnDeleteModifier()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s6LiftUI16OnDeleteModifierVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OnDeleteModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OnDeleteModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnDeleteModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnDeleteModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnDeleteModifier()
{
  return &type metadata for OnDeleteModifier;
}

uint64_t destroy for OnMoveModifier()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for OnMoveModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OnMoveModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OnMoveModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnMoveModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnMoveModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnMoveModifier()
{
  return &type metadata for OnMoveModifier;
}

uint64_t sub_1B59BDED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1B590CA38(a1, (uint64_t)v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651D8);
  if (swift_dynamicCast())
  {
    sub_1B5908BE8(v21, (uint64_t)v26);
    sub_1B59BF3B0(v4, (uint64_t)v29);
    sub_1B59BF3B0((uint64_t)v29, (uint64_t)&v30);
    uint64_t v9 = v30;
    if (v30)
    {
      __swift_project_boxed_opaque_existential_1(v26, v27);
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = a2;
      long long v11 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v10 + 24) = *(_OWORD *)v4;
      *(_OWORD *)(v10 + 40) = v11;
      *(void *)(v10 + 56) = *(void *)(v4 + 32);
      *(void *)(v10 + 64) = v9;
      *(void *)(v10 + 72) = a3;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D651F0);
      uint64_t v20 = a3;
      uint64_t v12 = sub_1B5A1A748();
      uint64_t v24 = v12;
      sub_1B59BF54C(&qword_1E9D651F8, &qword_1E9D651F0);
      uint64_t WitnessTable = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(v23);
      v21[0] = *(_OWORD *)(v4 + 8);
      long long v28 = *(_OWORD *)(v4 + 24);
      sub_1B59BF488((uint64_t)v29);
      sub_1B59BF488((uint64_t)v29);
      swift_retain();
      sub_1B59BF4B4((uint64_t)v21);
      sub_1B59BF4B4((uint64_t)&v28);
      swift_retain();
      sub_1B5A1AAD8();
      swift_release();
      uint64_t v13 = sub_1B59193A4(v9);
      uint64_t v14 = swift_getWitnessTable();
      sub_1B59177F0(v13, a2, v20, v12, v14, a4);
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v26, v27);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D651F0);
      uint64_t v24 = sub_1B5A1A748();
      sub_1B59BF54C(&qword_1E9D651F8, &qword_1E9D651F0);
      uint64_t WitnessTable = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(v23);
      sub_1B5A1AAD8();
      uint64_t v16 = v24;
      uint64_t v17 = WitnessTable;
      int v18 = __swift_project_boxed_opaque_existential_1(v23, v24);
      a4[3] = v16;
      a4[4] = *(void *)(v17 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_1, v18, v16);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    uint64_t v22 = 0;
    memset(v21, 0, sizeof(v21));
    sub_1B59BF350((uint64_t)v21);
    return sub_1B590CA38(a1, (uint64_t)a4);
  }
}

uint64_t sub_1B59BE25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v50 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B5A1A2B8();
  uint64_t v46 = *(void *)(v13 - 8);
  uint64_t v47 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B5A29A70;
  uint64_t v48 = (void *)inited;
  uint64_t v49 = a4;
  uint64_t v17 = *(void *)(a4 + 8);
  uint64_t v18 = *(void *)(a4 + 16);
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v18;
  sub_1B5A1A2C8();
  sub_1B59BF4E0();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1B5A1C1E8();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (!v19)
  {
LABEL_8:
    char v29 = v48;
    sub_1B59A34BC(v20, v48 + 6);
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void *)(v49 + 32);
    v29[7] = *(void *)(v49 + 24);
    v29[8] = v30;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a2;
    v29[9] = v31 | 0x2000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_1B59030D8((uint64_t)v29);
    uint64_t v33 = MEMORY[0x1E4FBC860];
    unint64_t v34 = sub_1B5902F98(MEMORY[0x1E4FBC860]);
    type metadata accessor for RemoteStateStore(0);
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = qword_1E9D65378;
    uint64_t v37 = v50;
    swift_retain();
    swift_retain();
    *(void *)(v35 + v36) = sub_1B5902F98(v33);
    *(void *)(v35 + qword_1E9D65380) = v37;
    swift_retain_n();
    swift_release();
    uint64_t v38 = sub_1B59038C0(v37);
    sub_1B590505C(v32, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B5904C58);
    swift_bridgeObjectRelease();
    swift_release();
    int v39 = (unint64_t *)(v38 + qword_1E9D65378);
    swift_beginAccess();
    *int v39 = v34;
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_1B5A1C188();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v12, 1, 1, v40);
    unint64_t v41 = (void *)swift_allocObject();
    void v41[2] = 0;
    v41[3] = 0;
    v41[4] = a5;
    v41[5] = v38;
    v41[6] = a6;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1B5924038((uint64_t)v12, (uint64_t)&unk_1E9D637B0, (uint64_t)v41);
    swift_release();
    return swift_release();
  }
  uint64_t v21 = v19;
  uint64_t v45 = a2;
  uint64_t v52 = MEMORY[0x1E4FBC860];
  sub_1B596953C(0, v19 & ~(v19 >> 63), 0);
  uint64_t v22 = v52;
  uint64_t result = sub_1B5A1C1D8();
  if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v42 = v12;
    uint64_t v43 = a5;
    uint64_t v44 = a6;
    do
    {
      uint64_t v24 = (void (*)(char *, void))sub_1B5A1C208();
      uint64_t v26 = *v25;
      v24(v51, 0);
      uint64_t v52 = v22;
      unint64_t v28 = *(void *)(v22 + 16);
      unint64_t v27 = *(void *)(v22 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1B596953C(v27 > 1, v28 + 1, 1);
        uint64_t v22 = v52;
      }
      *(void *)(v22 + 16) = v28 + 1;
      *(void *)(v22 + 8 * v28 + 32) = v26;
      sub_1B5A1C1F8();
      --v21;
    }
    while (v21);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v47);
    uint64_t v20 = v52;
    a6 = v44;
    a5 = v43;
    uint64_t v12 = v42;
    a2 = v45;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B59BE6EC(char a1)
{
  return *(void *)&aActions_7[8 * a1];
}

uint64_t sub_1B59BE70C(char *a1, char *a2)
{
  return sub_1B59EF06C(*a1, *a2);
}

uint64_t sub_1B59BE718()
{
  return sub_1B59F1BF8();
}

uint64_t sub_1B59BE720()
{
  return sub_1B59F4330();
}

uint64_t sub_1B59BE728()
{
  return sub_1B59F5AF0();
}

uint64_t sub_1B59BE730@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59C0218();
  *a1 = result;
  return result;
}

uint64_t sub_1B59BE760@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59BE6EC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59BE78C()
{
  return sub_1B59BE6EC(*v0);
}

uint64_t sub_1B59BE794@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59C0218();
  *a1 = result;
  return result;
}

uint64_t sub_1B59BE7BC(uint64_t a1)
{
  unint64_t v2 = sub_1B59BFDAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59BE7F8(uint64_t a1)
{
  unint64_t v2 = sub_1B59BFDAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59BE834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B59BDED0(a1, a2, a3, a4);
}

double sub_1B59BE878@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B59BF608(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B59BE8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  sub_1B590CA38(a1, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651D8);
  if (swift_dynamicCast())
  {
    sub_1B5908BE8(v23, (uint64_t)v28);
    __swift_project_boxed_opaque_existential_1(v28, v28[3]);
    if (a4)
    {
      uint64_t v14 = (void *)swift_allocObject();
      _OWORD v14[2] = a2;
      void v14[3] = a4;
      void v14[4] = a5;
      uint64_t v14[5] = a6;
      uint64_t v14[6] = a4;
      v14[7] = a3;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D65208);
      uint64_t v15 = sub_1B5A1A748();
      uint64_t v26 = v15;
      sub_1B59BF54C(&qword_1E9D65210, &qword_1E9D65208);
      uint64_t WitnessTable = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(v25);
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B5A1AAE8();
      swift_release();
      uint64_t v16 = sub_1B59193A4(a4);
      uint64_t v17 = swift_getWitnessTable();
      sub_1B59177F0(v16, a2, a3, v15, v17, a7);
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D65208);
      uint64_t v26 = sub_1B5A1A748();
      sub_1B59BF54C(&qword_1E9D65210, &qword_1E9D65208);
      uint64_t WitnessTable = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(v25);
      sub_1B5A1AAE8();
      uint64_t v19 = v26;
      uint64_t v20 = WitnessTable;
      uint64_t v21 = __swift_project_boxed_opaque_existential_1(v25, v26);
      a7[3] = v19;
      a7[4] = *(void *)(v20 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a7);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(boxed_opaque_existential_1, v21, v19);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    uint64_t v24 = 0;
    memset(v23, 0, sizeof(v23));
    sub_1B59BF350((uint64_t)v23);
    return sub_1B590CA38(a1, (uint64_t)a7);
  }
}

uint64_t sub_1B59BEC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v46 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1B5A1A2B8();
  uint64_t v44 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
  *(void *)(inited + 32) = a4;
  *(void *)(inited + 40) = a5;
  uint64_t v45 = inited;
  sub_1B5A1A2C8();
  sub_1B59BF4E0();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1B5A1C1E8();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v47 = v13;
  if (!v18)
  {
LABEL_8:
    uint64_t v28 = v45;
    sub_1B59A34BC(v19, (unint64_t *)(v45 + 48));
    swift_bridgeObjectRelease();
    unint64_t v29 = sub_1B59030D8(v28);
    uint64_t v30 = MEMORY[0x1E4FBC860];
    unint64_t v31 = sub_1B5902F98(MEMORY[0x1E4FBC860]);
    type metadata accessor for RemoteStateStore(0);
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = qword_1E9D65378;
    uint64_t v34 = v46;
    swift_retain();
    swift_retain();
    *(void *)(v32 + v33) = sub_1B5902F98(v30);
    *(void *)(v32 + qword_1E9D65380) = v34;
    swift_retain_n();
    swift_release();
    uint64_t v35 = sub_1B59038C0(v34);
    sub_1B590505C(v29, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B5904C58);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v36 = (unint64_t *)(v35 + qword_1E9D65378);
    swift_beginAccess();
    unint64_t *v36 = v31;
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_1B5A1C188();
    uint64_t v38 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v47, 1, 1, v37);
    int v39 = (void *)swift_allocObject();
    v39[2] = 0;
    void v39[3] = 0;
    v39[4] = a6;
    v39[5] = v35;
    v39[6] = a7;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1B5924038(v38, (uint64_t)&unk_1E9D65218, (uint64_t)v39);
    swift_release();
    return swift_release();
  }
  uint64_t v20 = v18;
  uint64_t v43 = v14;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  sub_1B596953C(0, v18 & ~(v18 >> 63), 0);
  uint64_t v21 = v49;
  uint64_t result = sub_1B5A1C1D8();
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v41 = a6;
    uint64_t v42 = a7;
    do
    {
      uint64_t v23 = (void (*)(char *, void))sub_1B5A1C208();
      uint64_t v25 = *v24;
      v23(v48, 0);
      uint64_t v49 = v21;
      unint64_t v27 = *(void *)(v21 + 16);
      unint64_t v26 = *(void *)(v21 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1B596953C(v26 > 1, v27 + 1, 1);
        uint64_t v21 = v49;
      }
      *(void *)(v21 + 16) = v27 + 1;
      *(void *)(v21 + 8 * v27 + 32) = v25;
      sub_1B5A1C1F8();
      --v20;
    }
    while (v20);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v43);
    uint64_t v19 = v49;
    a6 = v41;
    a7 = v42;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B59BF034(char a1)
{
  if (a1) {
    return 0x7465537865646E69;
  }
  else {
    return 0x736E6F69746361;
  }
}

uint64_t sub_1B59BF074(char *a1, char *a2)
{
  return sub_1B59EE768(*a1, *a2);
}

uint64_t sub_1B59BF080()
{
  return sub_1B59F1C64();
}

uint64_t sub_1B59BF088()
{
  return sub_1B59F3DD4();
}

uint64_t sub_1B59BF090()
{
  return sub_1B59F6040();
}

uint64_t sub_1B59BF098@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59BF0F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59BF034(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59BF124()
{
  return sub_1B59BF034(*v0);
}

uint64_t sub_1B59BF12C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59BF190(uint64_t a1)
{
  unint64_t v2 = sub_1B59BFD58();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59BF1CC(uint64_t a1)
{
  unint64_t v2 = sub_1B59BFD58();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59BF208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B59BE8C0(a1, a2, a3, *v4, v4[1], v4[2], a4);
}

uint64_t sub_1B59BF228@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B59BFA14(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

unint64_t sub_1B59BF258(uint64_t a1)
{
  unint64_t result = sub_1B59BF280();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59BF280()
{
  unint64_t result = qword_1E9D651C8;
  if (!qword_1E9D651C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D651C8);
  }
  return result;
}

unint64_t sub_1B59BF2D4(uint64_t a1)
{
  unint64_t result = sub_1B59BF2FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59BF2FC()
{
  unint64_t result = qword_1E9D651D0;
  if (!qword_1E9D651D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D651D0);
  }
  return result;
}

uint64_t sub_1B59BF350(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B59BF3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B59BF418()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1B59BF478(uint64_t a1, uint64_t a2)
{
  return sub_1B59BE25C(a1, a2, v2[2], (uint64_t)(v2 + 3), v2[8], v2[9]);
}

uint64_t sub_1B59BF488(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B59BF4B4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B59BF4E0()
{
  unint64_t result = qword_1E9D65200;
  if (!qword_1E9D65200)
  {
    sub_1B5A1A2C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65200);
  }
  return result;
}

uint64_t sub_1B59BF538()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B59BF54C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B59BF59C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B59BF5F4(uint64_t a1)
{
  return sub_1B59BEC04(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1B59BF608@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65230);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59BFDAC();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
  LOBYTE(v33[0]) = 0;
  sub_1B5951CA4();
  sub_1B5A1C5B8();
  uint64_t v31 = v6;
  unint64_t v29 = a2;
  uint64_t v10 = v35;
  if (v35)
  {
    uint64_t v30 = v5;
    int64_t v11 = *(void *)(v35 + 16);
    if (v11)
    {
      uint64_t v34 = MEMORY[0x1E4FBC860];
      sub_1B596931C(0, v11, 0);
      v28[1] = v10;
      uint64_t v12 = v10 + 32;
      uint64_t v13 = v34;
      do
      {
        sub_1B5951D6C(v12, (uint64_t)v32);
        sub_1B590CA38((uint64_t)v32, (uint64_t)v33);
        sub_1B5951DC8((uint64_t)v32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B596931C(0, *(void *)(v13 + 16) + 1, 1);
          uint64_t v13 = v34;
        }
        unint64_t v15 = *(void *)(v13 + 16);
        unint64_t v14 = *(void *)(v13 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_1B596931C(v14 > 1, v15 + 1, 1);
          uint64_t v13 = v34;
        }
        *(void *)(v13 + 16) = v15 + 1;
        sub_1B5908BE8(v33, v13 + 40 * v15 + 32);
        v12 += 40;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    uint64_t v5 = v30;
  }
  else
  {
    uint64_t v13 = 0;
  }
  LOBYTE(v33[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v16 = v5;
  uint64_t v18 = sub_1B5A1C598();
  unint64_t v19 = v17;
  if (v17) {
    unint64_t v20 = v17;
  }
  else {
    unint64_t v20 = 0xE800000000000000;
  }
  LOBYTE(v33[0]) = 2;
  uint64_t v30 = v20;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1B5A1C598();
  if (v19) {
    uint64_t v23 = v18;
  }
  else {
    uint64_t v23 = 0x7465537865646E69;
  }
  if (v22) {
    uint64_t v24 = v21;
  }
  else {
    uint64_t v24 = 0x74657366666FLL;
  }
  if (v22) {
    unint64_t v25 = v22;
  }
  else {
    unint64_t v25 = 0xE600000000000000;
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v16);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v26 = v30;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v27 = v29;
  void *v29 = v13;
  v27[1] = v23;
  v27[2] = v26;
  v27[3] = v24;
  v27[4] = v25;
  return result;
}

uint64_t sub_1B59BFA14(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65220);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1B59BFD58();
  sub_1B5A1C838();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
    LOBYTE(v17[0]) = 0;
    sub_1B5951CA4();
    sub_1B5A1C5B8();
    uint64_t v7 = v19;
    if (v19)
    {
      int64_t v9 = *(void *)(v19 + 16);
      if (v9)
      {
        uint64_t v14 = v4;
        uint64_t v15 = v3;
        uint64_t v18 = MEMORY[0x1E4FBC860];
        sub_1B596931C(0, v9, 0);
        uint64_t v13 = v7;
        uint64_t v10 = v7 + 32;
        uint64_t v7 = v18;
        do
        {
          sub_1B5951D6C(v10, (uint64_t)v16);
          sub_1B590CA38((uint64_t)v16, (uint64_t)v17);
          sub_1B5951DC8((uint64_t)v16);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B596931C(0, *(void *)(v7 + 16) + 1, 1);
            uint64_t v7 = v18;
          }
          unint64_t v12 = *(void *)(v7 + 16);
          unint64_t v11 = *(void *)(v7 + 24);
          if (v12 >= v11 >> 1)
          {
            sub_1B596931C(v11 > 1, v12 + 1, 1);
            uint64_t v7 = v18;
          }
          *(void *)(v7 + 16) = v12 + 1;
          sub_1B5908BE8(v17, v7 + 40 * v12 + 32);
          v10 += 40;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        uint64_t v4 = v14;
        uint64_t v3 = v15;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = MEMORY[0x1E4FBC860];
      }
    }
    LOBYTE(v17[0]) = 1;
    swift_bridgeObjectRetain();
    sub_1B5A1C598();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1B59BFD58()
{
  unint64_t result = qword_1E9D65228;
  if (!qword_1E9D65228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65228);
  }
  return result;
}

unint64_t sub_1B59BFDAC()
{
  unint64_t result = qword_1E9D65238;
  if (!qword_1E9D65238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65238);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OnMoveModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59BFECCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnMoveModifier.CodingKeys()
{
  return &type metadata for OnMoveModifier.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for OnDeleteModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59BFFD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnDeleteModifier.CodingKeys()
{
  return &type metadata for OnDeleteModifier.CodingKeys;
}

unint64_t sub_1B59C000C()
{
  unint64_t result = qword_1E9D65240;
  if (!qword_1E9D65240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65240);
  }
  return result;
}

unint64_t sub_1B59C0064()
{
  unint64_t result = qword_1E9D65248;
  if (!qword_1E9D65248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65248);
  }
  return result;
}

unint64_t sub_1B59C00BC()
{
  unint64_t result = qword_1E9D65250;
  if (!qword_1E9D65250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65250);
  }
  return result;
}

unint64_t sub_1B59C0114()
{
  unint64_t result = qword_1E9D65258;
  if (!qword_1E9D65258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65258);
  }
  return result;
}

unint64_t sub_1B59C016C()
{
  unint64_t result = qword_1E9D65260;
  if (!qword_1E9D65260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65260);
  }
  return result;
}

unint64_t sub_1B59C01C4()
{
  unint64_t result = qword_1E9D65268;
  if (!qword_1E9D65268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65268);
  }
  return result;
}

uint64_t sub_1B59C0218()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B59C0264()
{
  type metadata accessor for BasicLiftUIDataSource();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = (void *)sub_1B5A1BEE8();
  id v3 = objc_msgSend(v1, sel_objectForInfoDictionaryKey_, v2);

  if (v3)
  {
    sub_1B5A1C2F8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1B59C15B0((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast())
    {
      sub_1B5A1A0A8();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1B5908FC0((uint64_t)v6, &qword_1E9D62BC8);
  }
  sub_1B5A1A0A8();

  return swift_bridgeObjectRelease();
}

uint64_t BasicLiftUIDataSource.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t View.delegate(_:)(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  type metadata accessor for AnyWeakDelegate();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 24) = a2;
  swift_unknownObjectWeakAssign();
  sub_1B5A1B418();
  swift_release();
  return swift_release();
}

uint64_t View.dataSource(_:)(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  type metadata accessor for AnyWeakDataSource();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 24) = a2;
  swift_unknownObjectWeakAssign();
  sub_1B5A1B418();
  swift_release();
  return swift_release();
}

uint64_t sub_1B59C05A0(uint64_t a1)
{
  return LiftUIDataSource.request(for:)(a1);
}

uint64_t LiftUIDataSource.request(for:)(uint64_t a1)
{
  uint64_t v2 = sub_1B5A1A258();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B5A1A088();
}

uint64_t BasicLiftUIDataSource.data(for:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9D65288 + dword_1E9D65288);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1B59B1790;
  return v5(a1);
}

uint64_t BasicLiftUIDataSource.request(for:)(uint64_t a1)
{
  uint64_t v2 = sub_1B5A1A258();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B5A1A088();
}

uint64_t BasicLiftUIDataSource.init()()
{
  return v0;
}

uint64_t BasicLiftUIDataSource.deinit()
{
  return v0;
}

uint64_t BasicLiftUIDataSource.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1B59C0840(uint64_t a1)
{
  uint64_t v2 = sub_1B5A1A258();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B5A1A088();
}

uint64_t sub_1B59C0920(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9D65288 + dword_1E9D65288);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1B59C1638;
  return v5(a1);
}

uint64_t static RemoteLoader.requestWithLiftUIHeaders(request:reloadType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1B5A1A0D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return sub_1B59C0264();
}

uint64_t sub_1B59C0A48()
{
  sub_1B590974C();
  sub_1B5A1A998();
  return v1;
}

uint64_t sub_1B59C0A84()
{
  sub_1B59096F8();
  sub_1B5A1A998();
  return v1;
}

uint64_t sub_1B59C0AD0()
{
  type metadata accessor for BasicLiftUIDataSource();
  uint64_t result = swift_allocObject();
  *(void *)&xmmword_1E9D65270 = result;
  *((void *)&xmmword_1E9D65270 + 1) = &protocol witness table for BasicLiftUIDataSource;
  return result;
}

uint64_t sub_1B59C0B08@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1E9D62B18 != -1) {
    swift_once();
  }
  *a1 = xmmword_1E9D65270;
  return swift_unknownObjectRetain();
}

void sub_1B59C0B7C(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1B59C0B84(uint64_t a1)
{
  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
  v1[3] = swift_task_alloc();
  uint64_t v2 = sub_1B5A1A258();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B59C0C74, 0, 0);
}

uint64_t sub_1B59C0C74()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  sub_1B5A1A098();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1B5908FC0(v0[3], &qword_1E9D638F0);
LABEL_6:
    v0[7] = objc_msgSend(self, sel_sharedSession);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[8] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1B59C0EB8;
    uint64_t v8 = v0[2];
    return MEMORY[0x1F40E65F8](v8, 0);
  }
  (*(void (**)(void, void, void))(v0[5] + 32))(v0[6], v0[3], v0[4]);
  if ((sub_1B5A1A218() & 1) == 0)
  {
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    goto LABEL_6;
  }
  uint64_t v4 = sub_1B5A1A268();
  uint64_t v6 = v5;
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v9(v4, v6);
}

uint64_t sub_1B59C0EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v4;
  *(void *)(v5 + 72) = a1;
  *(void *)(v5 + 80) = a2;
  *(void *)(v5 + 88) = a3;
  *(void *)(v5 + 96) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v6 = sub_1B59C11B4;
  }
  else
  {

    uint64_t v6 = sub_1B59C0FD8;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1B59C0FD8()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  uint64_t v2 = (void *)v0[11];
  if (!v1)
  {
LABEL_4:

    uint64_t v5 = v0[9];
    uint64_t v6 = v0[10];
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v7(v5, v6);
  }
  uint64_t v3 = (void *)v1;
  id v4 = v2;
  if ((char *)objc_msgSend(v3, sel_statusCode) - 200 <= (char *)0x63)
  {
    uint64_t v2 = (void *)v0[11];

    goto LABEL_4;
  }
  unint64_t v9 = v0[10];
  uint64_t v10 = (void *)v0[11];
  uint64_t v11 = v0[9];
  uint64_t v12 = v0[2];
  type metadata accessor for RemoteLoaderError(0);
  sub_1B59B0EFC();
  swift_allocError();
  uint64_t v14 = v13;
  uint64_t v15 = sub_1B5A1A0D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v12, v15);
  swift_storeEnumTagMultiPayload();
  swift_willThrow();

  sub_1B5905904(v11, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1B59C11B4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t dispatch thunk of LiftUIDataSource.request(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LiftUIDataSource.data(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1B59C1358;
  return v9(a1, a2, a3);
}

uint64_t sub_1B59C1358(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t type metadata accessor for BasicLiftUIDataSource()
{
  return self;
}

uint64_t method lookup function for BasicLiftUIDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BasicLiftUIDataSource);
}

uint64_t dispatch thunk of BasicLiftUIDataSource.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1B59C14B4(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy04LiftB00J12UIDataSource_pGGAaBHPxAaBHD1__AiA0cI0HPyHCHCTm(a1, &qword_1E9D652A0, &qword_1E9D652A8);
}

uint64_t sub_1B59C14C8(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy04LiftB00J12UIDataSource_pGGAaBHPxAaBHD1__AiA0cI0HPyHCHCTm(a1, &qword_1E9D652B0, &qword_1E9D652B8);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy04LiftB00J12UIDataSource_pGGAaBHPxAaBHD1__AiA0cI0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getWitnessTable();
}

uint64_t sub_1B59C1560(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B59C15B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for LiftUIDataSourceKey()
{
  return &type metadata for LiftUIDataSourceKey;
}

ValueMetadata *type metadata accessor for LiftUIDelegateKey()
{
  return &type metadata for LiftUIDelegateKey;
}

ValueMetadata *type metadata accessor for SymbolRenderingModeModifier()
{
  return &type metadata for SymbolRenderingModeModifier;
}

uint64_t sub_1B59C1658@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B59C16AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59C1FBC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B59C16D8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B59C1730(uint64_t a1)
{
  unint64_t v2 = sub_1B59C1D8C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59C176C(uint64_t a1)
{
  unint64_t v2 = sub_1B59C1D8C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59C17A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D652E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59C1D8C();
  sub_1B5A1C838();
  if (!v2)
  {
    sub_1B5904A34();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59C1924@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v29 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D652C8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + 8);
  uint64_t v12 = *(void *)(v3 + 16);
  unsigned __int8 v13 = *(unsigned char *)(v3 + 24);
  uint64_t v25 = *(void *)v3;
  uint64_t v10 = v25;
  uint64_t v26 = v11;
  uint64_t v27 = v12;
  unsigned __int8 v28 = v13;
  sub_1B5904B60(v25, v11, v12, v13);
  StringResolvable.resolved(with:)(a2);
  if (v4)
  {

    sub_1B5904A88(v10, v11, v12, v13);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 0;
    sub_1B5904A88(v10, v11, v12, v13);
  }
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  switch(sub_1B59C1C84())
  {
    case 1u:
      sub_1B5A1AD28();
      goto LABEL_9;
    case 2u:
      sub_1B5A1AD38();
      goto LABEL_9;
    case 3u:
      sub_1B5A1AD58();
      goto LABEL_9;
    case 4u:
      uint64_t v16 = sub_1B5A1AD68();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
      goto LABEL_11;
    default:
      sub_1B5A1AD48();
LABEL_9:
      uint64_t v15 = sub_1B5A1AD68();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
LABEL_11:
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D652D0);
      uint64_t v17 = sub_1B5A1A748();
      uint64_t v18 = v29;
      v29[3] = v17;
      unint64_t v19 = sub_1B59C1CD0();
      uint64_t v23 = v14;
      unint64_t v24 = v19;
      v18[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(v18);
      sub_1B5A1B588();
      return sub_1B59C1D2C((uint64_t)v9);
  }
}

uint64_t sub_1B59C1BD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59C1924(a1, a2, a3);
}

uint64_t sub_1B59C1BF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59C17A8(a1, a2);
}

unint64_t sub_1B59C1C08(uint64_t a1)
{
  unint64_t result = sub_1B59C1C30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59C1C30()
{
  unint64_t result = qword_1E9D652C0;
  if (!qword_1E9D652C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D652C0);
  }
  return result;
}

uint64_t sub_1B59C1C84()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B59C1CD0()
{
  unint64_t result = qword_1E9D652D8;
  if (!qword_1E9D652D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D652D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D652D8);
  }
  return result;
}

uint64_t sub_1B59C1D2C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D652C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B59C1D8C()
{
  unint64_t result = qword_1E9D652E8;
  if (!qword_1E9D652E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D652E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SymbolRenderingModeModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59C1E7CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolRenderingModeModifier.CodingKeys()
{
  return &type metadata for SymbolRenderingModeModifier.CodingKeys;
}

unint64_t sub_1B59C1EB8()
{
  unint64_t result = qword_1E9D652F0;
  if (!qword_1E9D652F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D652F0);
  }
  return result;
}

unint64_t sub_1B59C1F10()
{
  unint64_t result = qword_1E9D652F8;
  if (!qword_1E9D652F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D652F8);
  }
  return result;
}

unint64_t sub_1B59C1F68()
{
  unint64_t result = qword_1E9D65300;
  if (!qword_1E9D65300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65300);
  }
  return result;
}

uint64_t sub_1B59C1FBC()
{
  return 0x6E697265646E6572;
}

void *sub_1B59C1FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result = (*(void *(**)(void *__return_ptr))(a3 + 16))(v17);
  if (!v4)
  {
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    sub_1B590CA38((uint64_t)v17, (uint64_t)v16);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v12 = (void *)(v10 + 32);
      do
      {
        uint64_t v13 = v12[3];
        uint64_t v14 = v12[4];
        __swift_project_boxed_opaque_existential_1(v12, v13);
        (*(void (**)(long long *__return_ptr, long long *, uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v16, a1, v13, v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        sub_1B5908BE8(v15, (uint64_t)v16);
        v12 += 5;
        --v11;
      }
      while (v11);
    }
    sub_1B5908BE8(v16, a4);
    swift_bridgeObjectRelease();
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  return result;
}

uint64_t sub_1B59C2120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B59C3AB8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B59C214C(uint64_t a1)
{
  unint64_t v2 = sub_1B59C3CE4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59C2188(uint64_t a1)
{
  unint64_t v2 = sub_1B59C3CE4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59C21C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65338);
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v49 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F00);
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B5A1C4E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1B5A1C828();
  if (qword_1E9D62B28 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v7, (uint64_t)qword_1E9D910E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  if (*(void *)(v11 + 16) && (unint64_t v13 = sub_1B59049D0((uint64_t)v10), (v14 & 1) != 0))
  {
    sub_1B59052CC(*(void *)(v11 + 56) + 32 * v13, (uint64_t)&v57);
  }
  else
  {
    long long v57 = 0u;
    long long v58 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (!*((void *)&v58 + 1))
  {
    sub_1B59C3C4C((uint64_t)&v57);
    goto LABEL_12;
  }
  type metadata accessor for ContentRegistry();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    type metadata accessor for ContentRegistryError();
    sub_1B59C3E00(&qword_1E9D62F08, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = (void *)v56[0];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v16 = sub_1B590C798();
  sub_1B5A1C838();
  if (v2)
  {

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  id v45 = v15;
  uint64_t v18 = v51;
  uint64_t v19 = sub_1B5A1C5E8();
  if (!*(void *)(v19 + 16))
  {
    swift_bridgeObjectRelease();
    type metadata accessor for DynamicKeyError();
    sub_1B59C3E00(&qword_1E9D62F40, (void (*)(uint64_t))type metadata accessor for DynamicKeyError);
    swift_allocError();
    sub_1B5A1C578();
    sub_1B5A1C3C8();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = *(void *)(v19 + 40);
  uint64_t v43 = *(void *)(v19 + 32);
  uint64_t v21 = *(void *)(v19 + 48);
  LODWORD(v44) = *(unsigned __int8 *)(v19 + 56);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1B5A1C578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
  *(void *)(inited + 56) = &type metadata for DynamicKey;
  *(void *)(inited + 64) = v16;
  uint64_t v24 = swift_allocObject();
  *(void *)(inited + 32) = v24;
  uint64_t v25 = v43;
  *(void *)(v24 + 16) = v43;
  *(void *)(v24 + 24) = v20;
  uint64_t v26 = v21;
  *(void *)(v24 + 32) = v21;
  LOBYTE(v21) = v44;
  *(unsigned char *)(v24 + 40) = v44;
  *(void *)&long long v57 = v22;
  swift_bridgeObjectRetain();
  sub_1B590C844(inited);
  uint64_t v27 = sub_1B59E0544(v25, v20);
  uint64_t v29 = v28;
  uint64_t v42 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v52 = v25;
  uint64_t v53 = v20;
  uint64_t v54 = v26;
  char v55 = v21;
  uint64_t v30 = v51;
  sub_1B5A1C588();
  uint64_t v41 = v26;
  *((void *)&v58 + 1) = v42;
  uint64_t v59 = v29;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v57);
  sub_1B5A1C1C8();
  sub_1B5908BE8(&v57, (uint64_t)v60);
  *(void *)&long long v57 = v25;
  *((void *)&v57 + 1) = v20;
  *(void *)&long long v58 = v41;
  BYTE8(v58) = v44;
  sub_1B59C3CE4();
  sub_1B5A1C568();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65348);
  sub_1B59C3D38();
  uint64_t v31 = v48;
  sub_1B5A1C5B8();
  if ((void)v57) {
    uint64_t v32 = v57;
  }
  else {
    uint64_t v32 = MEMORY[0x1E4FBC860];
  }
  int64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v52 = MEMORY[0x1E4FBC860];
    sub_1B596950C(0, v33, 0);
    uint64_t v44 = v32;
    uint64_t v34 = v32 + 32;
    do
    {
      sub_1B590CC6C(v34, (uint64_t)v56);
      sub_1B590CA38((uint64_t)v56, (uint64_t)&v57);
      sub_1B59874DC((uint64_t)v56);
      uint64_t v35 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B596950C(0, *(void *)(v35 + 16) + 1, 1);
        uint64_t v35 = v52;
      }
      unint64_t v37 = *(void *)(v35 + 16);
      unint64_t v36 = *(void *)(v35 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1B596950C(v36 > 1, v37 + 1, 1);
        uint64_t v35 = v52;
      }
      *(void *)(v35 + 16) = v37 + 1;
      sub_1B5908BE8(&v57, v35 + 40 * v37 + 32);
      v34 += 40;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    uint64_t v30 = v51;
    uint64_t v31 = v48;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  uint64_t v38 = v46;
  uint64_t v39 = v61;
  uint64_t v40 = v62;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v60, v61);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v35, v39, v40);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v31);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v30);
  sub_1B590CC6C((uint64_t)v60, v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B59874DC((uint64_t)v60);
}

uint64_t sub_1B59C2C18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59C21C4(a1, a2);
}

uint64_t sub_1B59C2C30@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v36 = a2;
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F00);
  uint64_t v37 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B5A1C4E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1B5A1C828();
  if (qword_1E9D62B28 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1E9D910E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  if (*(void *)(v10 + 16) && (unint64_t v12 = sub_1B59049D0((uint64_t)v9), (v13 & 1) != 0))
  {
    sub_1B59052CC(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v44);
  }
  else
  {
    long long v44 = 0u;
    long long v45 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!*((void *)&v45 + 1))
  {
    sub_1B59C3C4C((uint64_t)&v44);
    goto LABEL_12;
  }
  type metadata accessor for ContentRegistry();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    type metadata accessor for ContentRegistryError();
    sub_1B59C3E00(&qword_1E9D62F08, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v14 = v43;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v15 = sub_1B590C798();
  sub_1B5A1C838();
  if (v2)
  {
  }
  else
  {
    id v35 = v14;
    uint64_t v17 = v38;
    uint64_t v18 = sub_1B5A1C5E8();
    if (*(void *)(v18 + 16))
    {
      uint64_t v19 = *(void *)(v18 + 40);
      uint64_t v34 = *(void *)(v18 + 32);
      uint64_t v33 = *(void *)(v18 + 48);
      int v32 = *(unsigned __int8 *)(v18 + 56);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_1B5A1C578();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F18);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
      *(void *)(inited + 56) = &type metadata for DynamicKey;
      *(void *)(inited + 64) = v15;
      uint64_t v22 = swift_allocObject();
      *(void *)(inited + 32) = v22;
      uint64_t v23 = v34;
      *(void *)(v22 + 16) = v34;
      *(void *)(v22 + 24) = v19;
      uint64_t v24 = v33;
      *(void *)(v22 + 32) = v33;
      char v25 = v32;
      *(unsigned char *)(v22 + 40) = v32;
      *(void *)&long long v44 = v20;
      swift_bridgeObjectRetain();
      sub_1B590C844(inited);
      uint64_t v26 = sub_1B59E08B4(v23, v19);
      uint64_t v30 = v27;
      uint64_t v31 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = v23;
      uint64_t v40 = v19;
      uint64_t v41 = v24;
      char v42 = v25;
      sub_1B5A1C588();
      swift_bridgeObjectRelease();
      *((void *)&v45 + 1) = v31;
      uint64_t v46 = v30;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      sub_1B5A1C1C8();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v17);

      sub_1B5908BE8(&v44, (uint64_t)v47);
      long long v28 = v47[1];
      uint64_t v29 = v36;
      _OWORD *v36 = v47[0];
      v29[1] = v28;
      *((void *)v29 + 4) = v48;
    }
    else
    {
      swift_bridgeObjectRelease();
      type metadata accessor for DynamicKeyError();
      sub_1B59C3E00(&qword_1E9D62F40, (void (*)(uint64_t))type metadata accessor for DynamicKeyError);
      swift_allocError();
      sub_1B5A1C578();
      sub_1B5A1C3C8();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v17);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59C330C(char a1)
{
  if (a1) {
    return 0x61696C6169746E61;
  }
  else {
    return 0x6C6C69466F65;
  }
}

uint64_t sub_1B59C3348@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B59C2C30(a1, a2);
}

uint64_t sub_1B59C3360()
{
  return sub_1B59C330C(*v0);
}

uint64_t sub_1B59C3368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B59C3B48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B59C3390(uint64_t a1)
{
  unint64_t v2 = sub_1B59C37B0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59C33CC(uint64_t a1)
{
  unint64_t v2 = sub_1B59C37B0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FillStyle.init(from:)(void *a1)
{
  return sub_1B59C35FC(a1) & 0x101;
}

uint64_t FillStyle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65308);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59C37B0();
  sub_1B5A1C868();
  char v10 = 0;
  sub_1B5A1C618();
  if (!v1)
  {
    char v9 = 1;
    sub_1B5A1C618();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1B59C3594@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B59C35FC(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1B59C35CC(void *a1)
{
  return FillStyle.encode(to:)(a1);
}

uint64_t sub_1B59C35FC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65330);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59C37B0();
  sub_1B5A1C838();
  if (v1) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v12[15] = 0;
  char v7 = sub_1B5A1C5A8();
  v12[14] = 1;
  char v8 = sub_1B5A1C5A8();
  char v10 = (v8 == 2) | v8;
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  if (v10) {
    int v11 = 256;
  }
  else {
    int v11 = 0;
  }
  return v11 & 0xFFFFFFFE | v7 & 1;
}

unint64_t sub_1B59C37B0()
{
  unint64_t result = qword_1E9D65310;
  if (!qword_1E9D65310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65310);
  }
  return result;
}

uint64_t sub_1B59C3804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1B59C382C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1B59C3840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1B59C3854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1B59C3868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

unsigned char *_s10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59C395CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_1B59C3998()
{
  unint64_t result = qword_1E9D65318;
  if (!qword_1E9D65318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65318);
  }
  return result;
}

unint64_t sub_1B59C39F0()
{
  unint64_t result = qword_1E9D65320;
  if (!qword_1E9D65320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65320);
  }
  return result;
}

unint64_t sub_1B59C3A48()
{
  unint64_t result = qword_1E9D65328;
  if (!qword_1E9D65328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65328);
  }
  return result;
}

uint64_t sub_1B59C3A9C()
{
  return 0x7265696669646F6DLL;
}

uint64_t sub_1B59C3AB8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7265696669646F6DLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B59C3B48(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C6C69466F65 && a2 == 0xE600000000000000;
  if (v3 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61696C6169746E61 && a2 == 0xEB00000000646573)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

ValueMetadata *type metadata accessor for ShapeStyleContentBox()
{
  return &type metadata for ShapeStyleContentBox;
}

uint64_t sub_1B59C3C4C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B59C3CAC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 41, 7);
}

unint64_t sub_1B59C3CE4()
{
  unint64_t result = qword_1E9D65340;
  if (!qword_1E9D65340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65340);
  }
  return result;
}

unint64_t sub_1B59C3D38()
{
  unint64_t result = qword_1E9D65350;
  if (!qword_1E9D65350)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D65348);
    sub_1B59C3DAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65350);
  }
  return result;
}

unint64_t sub_1B59C3DAC()
{
  unint64_t result = qword_1E9D65358;
  if (!qword_1E9D65358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65358);
  }
  return result;
}

uint64_t sub_1B59C3E00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShapeStyleModifierBox()
{
  return &type metadata for ShapeStyleModifierBox;
}

unsigned char *storeEnumTagSinglePayload for ShapeStyleContentBox.ShapeStyleContentCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59C3EF4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShapeStyleContentBox.ShapeStyleContentCodingKeys()
{
  return &type metadata for ShapeStyleContentBox.ShapeStyleContentCodingKeys;
}

unint64_t sub_1B59C3F30()
{
  unint64_t result = qword_1E9D65360;
  if (!qword_1E9D65360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65360);
  }
  return result;
}

unint64_t sub_1B59C3F88()
{
  unint64_t result = qword_1E9D65368;
  if (!qword_1E9D65368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65368);
  }
  return result;
}

unint64_t sub_1B59C3FE0()
{
  unint64_t result = qword_1E9D65370;
  if (!qword_1E9D65370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65370);
  }
  return result;
}

uint64_t RemoteStateStore.__allocating_init()()
{
  return sub_1B59C4064((void (*)(void))RemoteStateStore.init());
}

uint64_t LocalStateStore.__allocating_init()()
{
  return sub_1B59C4064((void (*)(void))LocalStateStore.init());
}

uint64_t sub_1B59C4064(void (*a1)(void))
{
  uint64_t v2 = swift_allocObject();
  a1();
  return v2;
}

uint64_t RemoteStateStore.__allocating_init(parent:initialSet:referenceKeyMap:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = qword_1E9D65378;
  swift_retain();
  *(void *)(v6 + v7) = sub_1B5902F98(MEMORY[0x1E4FBC860]);
  *(void *)(v6 + qword_1E9D65380) = a1;
  swift_retain_n();
  swift_release();
  uint64_t v8 = sub_1B59038C0(a1);
  swift_retain();
  sub_1B590505C(a2, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B59CB93C);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  char v9 = (void *)(v8 + qword_1E9D65378);
  swift_beginAccess();
  *char v9 = a3;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t RemoteStateStore.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B59C87D8(*a1, a2, a3);
}

uint64_t RemoteStateStore.set(reference:value:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  if (*(unsigned char *)(a1 + 24) != 1)
  {
    sub_1B59619AC();
    swift_allocError();
    uint64_t v21 = v20;
    *(void *)(v20 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
    uint64_t v22 = swift_allocObject();
    *(void *)uint64_t v21 = v22;
    *(void *)(v22 + 16) = v5;
    *(void *)(v22 + 24) = v4;
    *(void *)(v22 + 32) = v6;
    *(unsigned char *)(v22 + 40) = 0;
    *(unsigned char *)(v21 + 32) = 2;
    swift_retain();
    return swift_willThrow();
  }
  uint64_t v7 = v2;
  uint64_t v8 = *a2;
  if (!*(void *)(v2 + qword_1E9D65380))
  {
    sub_1B590968C(*(void *)(a1 + 16));
LABEL_11:
    sub_1B59C5588(v7, v8, v5, v4, v6, 1);
    return sub_1B5905298(v6);
  }
  char v9 = (uint64_t *)(v2 + qword_1E9D65378);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(v10 + 16);
  sub_1B590968C(v6);
  swift_retain();
  if (!v11)
  {
LABEL_10:
    swift_endAccess();
    swift_release();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1B59049B8(v5, v4);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v14 = *(void *)(v10 + 56) + 32 * v12;
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)(v14 + 8);
  uint64_t v17 = *(void *)(v14 + 16);
  char v18 = *(unsigned char *)(v14 + 24);
  swift_endAccess();
  sub_1B5909638(v15, v16, v17, v18);
  swift_bridgeObjectRelease();
  sub_1B59C4DA8(v6, v15, v16, v17, v18, (uint64_t)v27);
  if (v3)
  {
    swift_release();
    sub_1B5905298(v6);
    return sub_1B591F344(v15, v16, v17, v18);
  }
  else
  {
    uint64_t v23 = v27[0];
    uint64_t v25 = v27[2];
    uint64_t v26 = v27[1];
    char v24 = v28;
    uint64_t v29 = v8;
    RemoteStateStore.set(reference:value:)(v27, &v29);
    sub_1B591F344(v15, v16, v17, v18);
    swift_release();
    sub_1B5905298(v6);
    return sub_1B591F344(v23, v26, v25, v24);
  }
}

uint64_t LocalStateStore.getScrollViewProxy(key:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1B59C81D8(a1, a2, &v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v6 = sub_1B5A1A778();
    int v7 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a3, v7 ^ 1u, 1, v6);
  }
  else
  {
    sub_1B5908FC0((uint64_t)&v10, &qword_1E9D62BC8);
    uint64_t v9 = sub_1B5A1A778();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a3, 1, 1, v9);
  }
}

void sub_1B59C4598(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v20 = a5 & 1;
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      sub_1B59C4FC4(a1, a4, &v19);
      sub_1B5905298(a4);
      uint64_t v18 = v19;
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(void *)(a6 + 16) = v18;
    }
    else
    {
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(void *)(a6 + 16) = a1;
      sub_1B590D634(a2, a3, a4, 1);
      sub_1B590968C(a1);
    }
    *(unsigned char *)(a6 + 24) = 1;
  }
  else
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1B5A1A328();
    __swift_project_value_buffer(v11, (uint64_t)qword_1E9D910D0);
    uint64_t v12 = sub_1B5A1A308();
    os_log_type_t v13 = sub_1B5A1C258();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1B58FD000, v12, v13, "Attempting to add a subreference to a value", v14, 2u);
      MEMORY[0x1BA9A4780](v14, -1, -1);
    }

    sub_1B59619AC();
    swift_allocError();
    uint64_t v16 = v15;
    *(void *)(v15 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64560);
    uint64_t v17 = swift_allocObject();
    *(void *)uint64_t v16 = v17;
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = a3;
    *(void *)(v17 + 32) = a4;
    *(unsigned char *)(v17 + 40) = 0;
    *(unsigned char *)(v16 + 32) = 2;
    swift_willThrow();
    sub_1B590D6F0(a2, a3, a4, v20);
  }
}

uint64_t sub_1B59C4798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v22 = a5 & 1;
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      sub_1B59C5000(a1, a4, &v21);
      uint64_t result = sub_1B5905298(a4);
      uint64_t v20 = v21;
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(void *)(a6 + 16) = v20;
    }
    else
    {
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(void *)(a6 + 16) = a1;
      sub_1B5904B8C(a2, a3, a4, 1);
      uint64_t result = sub_1B590968C(a1);
    }
    *(unsigned char *)(a6 + 24) = 1;
  }
  else
  {
    uint64_t v12 = qword_1E9D62B20;
    swift_bridgeObjectRetain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1B5A1A328();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E9D910D0);
    uint64_t v14 = sub_1B5A1A308();
    os_log_type_t v15 = sub_1B5A1C258();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1B58FD000, v14, v15, "Attempting to add a subreference to a value", v16, 2u);
      MEMORY[0x1BA9A4780](v16, -1, -1);
    }

    sub_1B59619AC();
    swift_allocError();
    uint64_t v18 = v17;
    *(void *)(v17 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D640F0);
    uint64_t v19 = swift_allocObject();
    *(void *)uint64_t v18 = v19;
    *(void *)(v19 + 16) = a2;
    *(void *)(v19 + 24) = a3;
    *(void *)(v19 + 32) = a4;
    *(unsigned char *)(v19 + 40) = 0;
    *(unsigned char *)(v18 + 32) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return sub_1B5904AB4(a2, a3, a4, v22);
  }
  return result;
}

void sub_1B59C49A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v20 = a5 & 1;
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      sub_1B59C5234(a1, a4, &v19);
      sub_1B5905298(a4);
      uint64_t v18 = v19;
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(void *)(a6 + 16) = v18;
    }
    else
    {
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(void *)(a6 + 16) = a1;
      sub_1B590D634(a2, a3, a4, 1);
      sub_1B590968C(a1);
    }
    *(unsigned char *)(a6 + 24) = 1;
  }
  else
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1B5A1A328();
    __swift_project_value_buffer(v11, (uint64_t)qword_1E9D910D0);
    uint64_t v12 = sub_1B5A1A308();
    os_log_type_t v13 = sub_1B5A1C258();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1B58FD000, v12, v13, "Attempting to add a subreference to a value", v14, 2u);
      MEMORY[0x1BA9A4780](v14, -1, -1);
    }

    sub_1B59619AC();
    swift_allocError();
    uint64_t v16 = v15;
    *(void *)(v15 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F98);
    uint64_t v17 = swift_allocObject();
    *(void *)uint64_t v16 = v17;
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = a3;
    *(void *)(v17 + 32) = a4;
    *(unsigned char *)(v17 + 40) = 0;
    *(unsigned char *)(v16 + 32) = 2;
    swift_willThrow();
    sub_1B590D6F0(a2, a3, a4, v20);
  }
}

void sub_1B59C4BA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v20 = a5 & 1;
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      sub_1B59C5270(a1, a4, &v19);
      sub_1B5905298(a4);
      uint64_t v18 = v19;
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(void *)(a6 + 16) = v18;
    }
    else
    {
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(void *)(a6 + 16) = a1;
      sub_1B590D634(a2, a3, a4, 1);
      sub_1B590968C(a1);
    }
    *(unsigned char *)(a6 + 24) = 1;
  }
  else
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1B5A1A328();
    __swift_project_value_buffer(v11, (uint64_t)qword_1E9D910D0);
    uint64_t v12 = sub_1B5A1A308();
    os_log_type_t v13 = sub_1B5A1C258();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1B58FD000, v12, v13, "Attempting to add a subreference to a value", v14, 2u);
      MEMORY[0x1BA9A4780](v14, -1, -1);
    }

    sub_1B59619AC();
    swift_allocError();
    uint64_t v16 = v15;
    *(void *)(v15 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65440);
    uint64_t v17 = swift_allocObject();
    *(void *)uint64_t v16 = v17;
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = a3;
    *(void *)(v17 + 32) = a4;
    *(unsigned char *)(v17 + 40) = 0;
    *(unsigned char *)(v16 + 32) = 2;
    swift_willThrow();
    sub_1B590D6F0(a2, a3, a4, v20);
  }
}

uint64_t sub_1B59C4DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v22 = a5 & 1;
  if (a5)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1B590968C(a4);
      sub_1B59C52AC(a1, a4, &v21);
      uint64_t result = sub_1B5905298(a4);
      uint64_t v20 = v21;
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(void *)(a6 + 16) = v20;
    }
    else
    {
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(void *)(a6 + 16) = a1;
      sub_1B5909638(a2, a3, a4, 1);
      uint64_t result = sub_1B590968C(a1);
    }
    *(unsigned char *)(a6 + 24) = 1;
  }
  else
  {
    uint64_t v12 = qword_1E9D62B20;
    swift_retain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1B5A1A328();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E9D910D0);
    uint64_t v14 = sub_1B5A1A308();
    os_log_type_t v15 = sub_1B5A1C258();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1B58FD000, v14, v15, "Attempting to add a subreference to a value", v16, 2u);
      MEMORY[0x1BA9A4780](v16, -1, -1);
    }

    sub_1B59619AC();
    swift_allocError();
    uint64_t v18 = v17;
    *(void *)(v17 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
    uint64_t v19 = swift_allocObject();
    *(void *)uint64_t v18 = v19;
    *(void *)(v19 + 16) = a2;
    *(void *)(v19 + 24) = a3;
    *(void *)(v19 + 32) = a4;
    *(unsigned char *)(v19 + 40) = 0;
    *(unsigned char *)(v18 + 32) = 2;
    swift_retain();
    swift_willThrow();
    return sub_1B591F344(a2, a3, a4, v22);
  }
  return result;
}

void sub_1B59C4FC4(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1B59C503C(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B59C4FC4, (void (*)(uint64_t))sub_1B590968C, a3);
}

void sub_1B59C5000(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1B59C503C(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B59C5000, (void (*)(uint64_t))sub_1B590968C, a3);
}

void sub_1B59C503C(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t)@<X4>, void (*a4)(uint64_t)@<X5>, void *a5@<X8>)
{
  if (a2 < 0)
  {
    uint64_t v15 = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v16 = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v17 = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    char v18 = *(unsigned char *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v19 = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v20;
    *(void *)(v20 + 16) = v15;
    *(void *)(v20 + 24) = v16;
    *(void *)(v20 + 32) = v17;
    *(unsigned char *)(v20 + 40) = v18;
    if ((~v19 & 0xF000000000000007) != 0)
    {
      sub_1B591DF88(v15, v16, v17, v18);
      a3(&v23, a1, v19);
      *(void *)(v21 + 48) = v23;
      *a5 = v21 | 0x8000000000000000;
    }
    else
    {
      *(void *)(v20 + 48) = a1;
      *a5 = v20 | 0x8000000000000000;
      a4(a1);
      sub_1B591DF88(v15, v16, v17, v18);
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    unsigned __int8 v11 = *(unsigned char *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 48);
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = v8;
    *(void *)(v13 + 24) = v9;
    *(void *)(v13 + 32) = v10;
    *(unsigned char *)(v13 + 40) = v11;
    if ((~v12 & 0xF000000000000007) != 0)
    {
      sub_1B5904B60(v8, v9, v10, v11);
      a3(&v23, a1, v12);
      *(void *)(v14 + 48) = v23;
      *a5 = v14;
    }
    else
    {
      *(void *)(v13 + 48) = a1;
      *a5 = v13;
      sub_1B5904B60(v8, v9, v10, v11);
      a4(a1);
    }
  }
}

void sub_1B59C5234(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1B59C503C(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B59C5234, (void (*)(uint64_t))sub_1B590968C, a3);
}

void sub_1B59C5270(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1B59C503C(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B59C5270, (void (*)(uint64_t))sub_1B590968C, a3);
}

void sub_1B59C52AC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1B59C503C(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B59C52AC, (void (*)(uint64_t))sub_1B590968C, a3);
}

uint64_t RemoteStateStore.binding<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = 0;
  uint64_t v9[3] = 0;
  void v9[4] = a3;
  void v9[5] = a4;
  v9[6] = v4;
  v9[7] = a1;
  v9[8] = a2;
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = 0;
  uint64_t v10[3] = 0;
  _OWORD v10[4] = a3;
  void v10[5] = a4;
  _OWORD v10[6] = v4;
  uint64_t v10[7] = a1;
  v10[8] = a2;
  sub_1B5A1C2B8();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  return sub_1B5A1BAB8();
}

uint64_t RemoteStateStore.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + qword_1E9D65380);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(v3 + qword_1E9D65378);
    swift_beginAccess();
    uint64_t v9 = *v8;
    uint64_t v10 = *(void *)(v9 + 16);
    swift_retain();
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1B59049B8(a1, a2);
      if (v12)
      {
        uint64_t v13 = *(void *)(v9 + 56) + 32 * v11;
        uint64_t v14 = *(void *)v13;
        uint64_t v15 = *(void *)(v13 + 8);
        uint64_t v16 = *(void *)(v13 + 16);
        char v17 = *(unsigned char *)(v13 + 24);
        swift_endAccess();
        sub_1B5909638(v14, v15, v16, v17);
        swift_bridgeObjectRelease();
        sub_1B59B3D0C(v7, v14, v15, v16, v17, v19);
        swift_release();
        uint64_t result = sub_1B591F344(v14, v15, v16, v17);
        *a3 = v19[0];
        return result;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_release();
  }
  swift_bridgeObjectRetain();
  sub_1B59C83E8(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59C5588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  char v23 = a6 & 1;
  if ((a6 & 1) == 0)
  {
    sub_1B59619AC();
    swift_allocError();
    uint64_t v16 = v15;
    *(void *)(v15 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
    uint64_t v17 = swift_allocObject();
    *(void *)uint64_t v16 = v17;
    *(void *)(v17 + 16) = a3;
    *(void *)(v17 + 24) = a4;
    *(void *)(v17 + 32) = a5;
    *(unsigned char *)(v17 + 40) = 0;
    *(unsigned char *)(v16 + 32) = 2;
    swift_retain_n();
    swift_willThrow();
    return sub_1B591F344(a3, a4, a5, v23);
  }
  swift_bridgeObjectRetain();
  sub_1B590968C(a5);
  RemoteStateStore.subscript.getter(a3, a4, &v22);
  uint64_t v12 = v22;
  if ((~v22 & 0xF000000000000007) == 0)
  {
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v13 = a3;
    *(void *)(v13 + 8) = a4;
    *(void *)(v13 + 16) = &type metadata for DecodableState;
    *(unsigned char *)(v13 + 32) = 0;
    swift_willThrow();
    return sub_1B5905298(a5);
  }
  if ((v22 >> 61) >= 4)
  {
    if (v22 >> 61 == 4)
    {
      if ((~a5 & 0xF000000000000007) != 0)
      {
        char v18 = *(void **)((v22 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1B59A0838(v22);
        sub_1B590968C(a5);
        sub_1B59C6C58(v18, a5, a2, a1, &v22);
        if (v6)
        {
          sub_1B599FF94(v12);
          sub_1B5905298(a5);
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
        uint64_t v21 = v22;
        swift_retain();
        sub_1B59C87D8(v21, a3, a4);
        sub_1B5905298(a5);
        swift_release();
        goto LABEL_19;
      }
    }
    else if ((~a5 & 0xF000000000000007) != 0)
    {
      uint64_t v19 = *(void *)((v22 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1B59A0838(v22);
      sub_1B590968C(a5);
      sub_1B59C5B64(v19, a5, a2, a1, &v22);
      if (v6)
      {

        uint64_t v20 = 0xF000000000000007;
      }
      else
      {
        uint64_t v20 = v22;
        swift_retain();
      }
      sub_1B59C87D8(v20, a3, a4);
      sub_1B5905298(a5);
      sub_1B599FF94(v20);
LABEL_19:
      sub_1B5905298(a5);
      goto LABEL_20;
    }
    sub_1B59A0838(v22);
    swift_retain();
    sub_1B59C87D8(a2, a3, a4);
LABEL_20:
    sub_1B599FF94(v12);
    return sub_1B599FF94(v12);
  }
  swift_retain();
  sub_1B59C87D8(a2, a3, a4);
LABEL_7:
  sub_1B5905298(a5);
  return sub_1B599FF94(v12);
}

uint64_t sub_1B59C587C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  char v27 = a6 & 1;
  if ((a6 & 1) == 0)
  {
    sub_1B59619AC();
    swift_allocError();
    uint64_t v18 = v17;
    *(void *)(v17 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BE0);
    uint64_t v19 = swift_allocObject();
    *(void *)uint64_t v18 = v19;
    *(void *)(v19 + 16) = a3;
    *(void *)(v19 + 24) = a4;
    *(void *)(v19 + 32) = a5;
    *(unsigned char *)(v19 + 40) = 0;
    *(unsigned char *)(v18 + 32) = 2;
    sub_1B5904C08(a3, a4, a5, 0);
    swift_bridgeObjectRetain();
    swift_willThrow();
    return sub_1B5905248(a3, a4, a5, v27);
  }
  swift_bridgeObjectRetain();
  sub_1B590968C(a5);
  RemoteStateStore.subscript.getter(a3, a4, &v26);
  uint64_t v12 = v26;
  if ((~v26 & 0xF000000000000007) == 0)
  {
    sub_1B59619AC();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
    *(void *)uint64_t v14 = a3;
    *(void *)(v14 + 8) = a4;
    *(void *)(v14 + 16) = v15;
    *(unsigned char *)(v14 + 32) = 0;
    swift_willThrow();
    return sub_1B5905298(a5);
  }
  if (v26 >> 61 != 5)
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
    sub_1B5951A10();
    swift_allocError();
    *char v24 = v12;
    v24[1] = v23;
    swift_willThrow();
    goto LABEL_10;
  }
  uint64_t v20 = sub_1B59A5304(*(void *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
  sub_1B599FF94(v12);
  if (v6)
  {
LABEL_10:
    sub_1B5905298(a5);
    return swift_bridgeObjectRelease();
  }
  uint64_t v21 = sub_1B59A5304(v20);
  if ((~a5 & 0xF000000000000007) != 0)
  {
    swift_retain();
    sub_1B59C63C8(v21, a5, a2, a1, &v26);
    uint64_t v25 = v26;
    swift_retain();
    sub_1B59C87D8(v25, a3, a4);
    sub_1B5905298(a5);
    sub_1B599FF94(v25);
    sub_1B5905298(a5);
  }
  else
  {
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1B59A5304(a2);
    sub_1B59C87D8(v22 | 0xA000000000000000, a3, a4);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1B59C5B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    unsigned __int8 v11 = *(unsigned char *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 48);
    v62[0] = *(void *)(a2 + 16);
    uint64_t v9 = v62[0];
    v62[1] = v8;
    v62[2] = v10;
    unsigned __int8 v63 = v11;
    swift_bridgeObjectRetain();
    sub_1B5904B60(v62[0], v8, v10, v11);
    sub_1B590968C(v12);
    unint64_t v13 = StringResolvable.resolved(with:)(a4);
    if (v5)
    {
      swift_bridgeObjectRelease();
      sub_1B5905298(v12);
      uint64_t v15 = v62[0];
      uint64_t v16 = v8;
      uint64_t v17 = v10;
      unsigned __int8 v18 = v11;
      return sub_1B5904A88(v15, v16, v17, v18);
    }
    uint64_t v25 = v13;
    unint64_t v58 = v14;
    uint64_t v55 = v62[0];
    uint64_t v56 = v10;
    unsigned __int8 v57 = v11;
    if ((~v12 & 0xF000000000000007) == 0)
    {
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v62[0] = a1;
      sub_1B5958B30(a3, v25, v58, isUniquelyReferenced_nonNull_native);
      uint64_t v27 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B5904A88(v9, v8, v10, v11);
LABEL_12:
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = sub_1B59A5304(v27);
      uint64_t result = swift_bridgeObjectRelease();
      *a5 = v28 | 0xA000000000000000;
      return result;
    }
    unint64_t v29 = v14;
    uint64_t v54 = v12;
    if (*(void *)(a1 + 16))
    {
      sub_1B590968C(v12);
      swift_bridgeObjectRetain();
      uint64_t v30 = v25;
      uint64_t v31 = sub_1B59049B8(v25, v58);
      if (v32)
      {
        unint64_t v33 = *(void *)(*(void *)(a1 + 56) + 8 * v31);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((v33 >> 61) < 4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1E9D62B20 != -1) {
            swift_once();
          }
          uint64_t v34 = sub_1B5A1A328();
          __swift_project_value_buffer(v34, (uint64_t)qword_1E9D910D0);
          id v35 = sub_1B5A1A308();
          os_log_type_t v36 = sub_1B5A1C278();
          if (os_log_type_enabled(v35, v36))
          {
            uint64_t v37 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v37 = 0;
            _os_log_impl(&dword_1B58FD000, v35, v36, "Referenceable.updatedDict: Have a subreference but next structure is a value", v37, 2u);
            MEMORY[0x1BA9A4780](v37, -1, -1);
          }

          sub_1B59619AC();
          swift_allocError();
          *(void *)uint64_t v38 = 3;
          *(void *)(v38 + 8) = 0;
          *(void *)(v38 + 16) = 0;
          *(void *)(v38 + 24) = 0;
          *(unsigned char *)(v38 + 32) = 5;
          swift_willThrow();
          swift_release();
          sub_1B5905298(v12);
          sub_1B5905298(v12);
          uint64_t v15 = v55;
          uint64_t v16 = v8;
          uint64_t v17 = v10;
          unsigned __int8 v18 = v57;
          return sub_1B5904A88(v15, v16, v17, v18);
        }
        uint64_t v49 = *(void **)((v33 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain();
        if (v33 >> 61 == 4)
        {
          sub_1B59C6C58(v49, v12, a3, a4, (unint64_t *)v62);
          uint64_t v50 = v62[0];
          char v51 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v64 = a1;
          sub_1B5958B30(v50, v30, v58, v51);
          uint64_t v27 = v64;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B5905298(v12);
        }
        else
        {
          sub_1B59C5B64(v62, v49, v12, a3, a4);
          uint64_t v52 = v62[0];
          swift_retain();
          char v53 = swift_isUniquelyReferenced_nonNull_native();
          v62[0] = a1;
          sub_1B5958B30(v52, v30, v58, v53);
          uint64_t v27 = v62[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B5905298(v12);
          swift_release();
        }
        swift_release();
        sub_1B5905298(v12);
        sub_1B5904A88(v55, v8, v10, v57);
        swift_release();
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    uint64_t v39 = v25;
    swift_bridgeObjectRelease();
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1B5A1A328();
    __swift_project_value_buffer(v40, (uint64_t)qword_1E9D910D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v41 = sub_1B5A1A308();
    os_log_type_t v42 = sub_1B5A1C278();
    loga = v41;
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      v62[0] = v44;
      *(_DWORD *)uint64_t v43 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_1B5928EE8(v39, v58, v62);
      sub_1B5A1C2D8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1B5A1BE28();
      unint64_t v47 = v46;
      swift_bridgeObjectRelease();
      uint64_t v64 = sub_1B5928EE8(v45, v47, v62);
      unint64_t v29 = v58;
      sub_1B5A1C2D8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B58FD000, loga, v42, "Referenceable.updatedDict: key not found %s dict: %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v44, -1, -1);
      MEMORY[0x1BA9A4780](v43, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v48 = v39;
    *(void *)(v48 + 8) = v29;
    *(unsigned char *)(v48 + 32) = 4;
    swift_willThrow();
    sub_1B5905298(v54);
    sub_1B5905298(v54);
    uint64_t v15 = v55;
    uint64_t v16 = v8;
    uint64_t v17 = v56;
    unsigned __int8 v18 = v57;
    return sub_1B5904A88(v15, v16, v17, v18);
  }
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1B5A1A328();
  __swift_project_value_buffer(v20, (uint64_t)qword_1E9D910D0);
  uint64_t v21 = sub_1B5A1A308();
  os_log_type_t v22 = sub_1B5A1C278();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_1B58FD000, v21, v22, "Referenceable.updatedDict: trying to modify a dictionary using an index subreference", v23, 2u);
    MEMORY[0x1BA9A4780](v23, -1, -1);
  }

  sub_1B59619AC();
  swift_allocError();
  *(void *)uint64_t v24 = 5;
  *(void *)(v24 + 8) = 0;
  *(void *)(v24 + 16) = 0;
  *(void *)(v24 + 24) = 0;
  *(unsigned char *)(v24 + 32) = 5;
  return swift_willThrow();
}

uint64_t sub_1B59C63C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    unsigned __int8 v11 = *(unsigned char *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 48);
    v64[0] = *(void *)(a2 + 16);
    uint64_t v9 = v64[0];
    v64[1] = v8;
    v64[2] = v10;
    unsigned __int8 v65 = v11;
    swift_bridgeObjectRetain();
    sub_1B5904B60(v64[0], v8, v10, v11);
    sub_1B590968C(v12);
    unint64_t v13 = StringResolvable.resolved(with:)(a4);
    if (v5)
    {
      swift_bridgeObjectRelease();
      sub_1B5905298(v12);
      uint64_t v15 = v64[0];
      uint64_t v16 = v8;
      uint64_t v17 = v10;
      unsigned __int8 v18 = v11;
      return sub_1B5904A88(v15, v16, v17, v18);
    }
    uint64_t v25 = v13;
    unint64_t v60 = v14;
    uint64_t v57 = v64[0];
    uint64_t v58 = v10;
    unsigned __int8 v59 = v11;
    if ((~v12 & 0xF000000000000007) == 0)
    {
      uint64_t v26 = v13;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_1B59A5304(a3);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v64[0] = a1;
      sub_1B5958B30(v27 | 0xA000000000000000, v26, v60, isUniquelyReferenced_nonNull_native);
      uint64_t v29 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B5904A88(v9, v8, v10, v11);
LABEL_12:
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = sub_1B59A5304(v29);
      uint64_t result = swift_bridgeObjectRelease();
      *a5 = v30 | 0xA000000000000000;
      return result;
    }
    unint64_t v31 = v14;
    uint64_t v56 = v12;
    if (*(void *)(a1 + 16))
    {
      sub_1B590968C(v12);
      swift_bridgeObjectRetain();
      uint64_t v32 = v25;
      uint64_t v33 = sub_1B59049B8(v25, v60);
      if (v34)
      {
        unint64_t v35 = *(void *)(*(void *)(a1 + 56) + 8 * v33);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((v35 >> 61) < 4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1E9D62B20 != -1) {
            swift_once();
          }
          uint64_t v36 = sub_1B5A1A328();
          __swift_project_value_buffer(v36, (uint64_t)qword_1E9D910D0);
          uint64_t v37 = sub_1B5A1A308();
          os_log_type_t v38 = sub_1B5A1C278();
          if (os_log_type_enabled(v37, v38))
          {
            uint64_t v39 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v39 = 0;
            _os_log_impl(&dword_1B58FD000, v37, v38, "Referenceable.updatedDict: Have a subreference but next structure is a value", v39, 2u);
            MEMORY[0x1BA9A4780](v39, -1, -1);
          }

          sub_1B59619AC();
          swift_allocError();
          *(void *)uint64_t v40 = 3;
          *(void *)(v40 + 8) = 0;
          *(void *)(v40 + 16) = 0;
          *(void *)(v40 + 24) = 0;
          *(unsigned char *)(v40 + 32) = 5;
          swift_willThrow();
          swift_release();
          sub_1B5905298(v12);
          sub_1B5905298(v12);
          uint64_t v15 = v57;
          uint64_t v16 = v8;
          uint64_t v17 = v10;
          unsigned __int8 v18 = v59;
          return sub_1B5904A88(v15, v16, v17, v18);
        }
        char v51 = *(void **)((v35 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain();
        if (v35 >> 61 == 4)
        {
          sub_1B59C74EC(v51, v12, a3, a4, (unint64_t *)v64);
          uint64_t v52 = v64[0];
          char v53 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v66 = a1;
          sub_1B5958B30(v52, v32, v60, v53);
          uint64_t v29 = v66;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B5905298(v12);
        }
        else
        {
          sub_1B59C63C8(v64, v51, v12, a3, a4);
          uint64_t v54 = v64[0];
          swift_retain();
          char v55 = swift_isUniquelyReferenced_nonNull_native();
          v64[0] = a1;
          sub_1B5958B30(v54, v32, v60, v55);
          uint64_t v29 = v64[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B5905298(v12);
          swift_release();
        }
        swift_release();
        sub_1B5905298(v12);
        sub_1B5904A88(v57, v8, v10, v59);
        swift_release();
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    uint64_t v41 = v25;
    swift_bridgeObjectRelease();
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1B5A1A328();
    __swift_project_value_buffer(v42, (uint64_t)qword_1E9D910D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_1B5A1A308();
    os_log_type_t v44 = sub_1B5A1C278();
    loga = v43;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v64[0] = v46;
      *(_DWORD *)uint64_t v45 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1B5928EE8(v41, v60, v64);
      sub_1B5A1C2D8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1B5A1BE28();
      unint64_t v49 = v48;
      swift_bridgeObjectRelease();
      uint64_t v66 = sub_1B5928EE8(v47, v49, v64);
      unint64_t v31 = v60;
      sub_1B5A1C2D8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B58FD000, loga, v44, "Referenceable.updatedDict: key not found %s dict: %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v46, -1, -1);
      MEMORY[0x1BA9A4780](v45, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v50 = v41;
    *(void *)(v50 + 8) = v31;
    *(unsigned char *)(v50 + 32) = 4;
    swift_willThrow();
    sub_1B5905298(v56);
    sub_1B5905298(v56);
    uint64_t v15 = v57;
    uint64_t v16 = v8;
    uint64_t v17 = v58;
    unsigned __int8 v18 = v59;
    return sub_1B5904A88(v15, v16, v17, v18);
  }
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1B5A1A328();
  __swift_project_value_buffer(v20, (uint64_t)qword_1E9D910D0);
  uint64_t v21 = sub_1B5A1A308();
  os_log_type_t v22 = sub_1B5A1C278();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_1B58FD000, v21, v22, "Referenceable.updatedDict: trying to modify a dictionary using an index subreference", v23, 2u);
    MEMORY[0x1BA9A4780](v23, -1, -1);
  }

  sub_1B59619AC();
  swift_allocError();
  *(void *)uint64_t v24 = 5;
  *(void *)(v24 + 8) = 0;
  *(void *)(v24 + 16) = 0;
  *(void *)(v24 + 24) = 0;
  *(unsigned char *)(v24 + 32) = 5;
  return swift_willThrow();
}

void sub_1B59C6C58(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  if (a2 < 0)
  {
    uint64_t v11 = v5;
    uint64_t v16 = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v17 = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    char v18 = *(unsigned char *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v19 = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    v66[0] = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    v66[1] = v16;
    v66[2] = v17;
    char v67 = v18;
    swift_bridgeObjectRetain();
    uint64_t v64 = v66[0];
    sub_1B591DF88(v66[0], v16, v17, v18);
    uint64_t v65 = v19;
    sub_1B590968C(v19);
    sub_1B5963948(a4);
    if (v21)
    {
      swift_bridgeObjectRelease();
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1B5A1A328();
      __swift_project_value_buffer(v24, (uint64_t)qword_1E9D910D0);
      uint64_t v25 = sub_1B5A1A308();
      os_log_type_t v26 = sub_1B5A1C258();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        _os_log_impl(&dword_1B58FD000, v25, v26, "SubReference to update array, unable to resolve index", v27, 2u);
        MEMORY[0x1BA9A4780](v27, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v28 = 2;
      *(void *)(v28 + 8) = 0;
      *(void *)(v28 + 16) = 0;
      *(void *)(v28 + 24) = 0;
      *(unsigned char *)(v28 + 32) = 5;
      swift_willThrow();
      sub_1B5905298(v65);
      uint64_t v29 = v64;
      goto LABEL_27;
    }
    unint64_t v22 = v20;
    if (v20 < 0 || v20 >= a1[2])
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = v22;
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1B5A1A328();
      __swift_project_value_buffer(v31, (uint64_t)qword_1E9D910D0);
      swift_bridgeObjectRetain_n();
      uint64_t v32 = sub_1B5A1A308();
      os_log_type_t v33 = sub_1B5A1C278();
      if (os_log_type_enabled(v32, v33))
      {
        os_log_type_t type = v33;
        uint64_t v34 = swift_slowAlloc();
        uint64_t v58 = swift_slowAlloc();
        v66[0] = v58;
        *(_DWORD *)uint64_t v34 = 134218242;
        uint64_t v68 = v30;
        sub_1B5A1C2D8();
        *(_WORD *)(v34 + 12) = 2080;
        uint64_t v35 = swift_bridgeObjectRetain();
        char v36 = v18;
        uint64_t v37 = MEMORY[0x1BA9A3890](v35, &type metadata for DecodableState);
        uint64_t v61 = v17;
        unint64_t v39 = v38;
        swift_bridgeObjectRelease();
        uint64_t v40 = v37;
        char v18 = v36;
        uint64_t v41 = v30;
        uint64_t v68 = sub_1B5928EE8(v40, v39, v66);
        sub_1B5A1C2D8();
        swift_bridgeObjectRelease_n();
        uint64_t v17 = v61;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B58FD000, v32, type, "Referenceable.updatedArray: index out of range idx: %ld array: %s", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BA9A4780](v58, -1, -1);
        MEMORY[0x1BA9A4780](v34, -1, -1);

        uint64_t v42 = v64;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v42 = v66[0];
        uint64_t v41 = v30;
      }
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v43 = v41;
      *(unsigned char *)(v43 + 32) = 3;
      swift_willThrow();
      sub_1B5905298(v65);
      uint64_t v29 = v42;
      goto LABEL_27;
    }
    uint64_t v23 = v65;
    if ((~v65 & 0xF000000000000007) == 0)
    {
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_1B59CC268(a1);
      }
      if (v22 < a1[2])
      {
        a1[v22 + 4] = a3;
        swift_release();
        sub_1B591DF0C(v64, v16, v17, v18);
LABEL_15:
        sub_1B59A33C8((uint64_t)a1, a5);
        swift_bridgeObjectRelease();
        return;
      }
      __break(1u);
      goto LABEL_47;
    }
    unint64_t v44 = a1[v20 + 4];
    BOOL v45 = v44 >> 61 == 4;
    if ((v44 >> 61) < 4)
    {
      sub_1B590968C(v65);
      swift_retain();
      swift_bridgeObjectRelease();
      if (qword_1E9D62B20 == -1)
      {
LABEL_30:
        uint64_t v46 = sub_1B5A1A328();
        __swift_project_value_buffer(v46, (uint64_t)qword_1E9D910D0);
        uint64_t v47 = sub_1B5A1A308();
        os_log_type_t v48 = sub_1B5A1C278();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = v16;
          uint64_t v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v50 = 0;
          _os_log_impl(&dword_1B58FD000, v47, v48, "Referenceable.updatedArray: Have a subreference but next structure is a value", v50, 2u);
          char v51 = v50;
          uint64_t v16 = v49;
          MEMORY[0x1BA9A4780](v51, -1, -1);
        }

        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v52 = 3;
        *(void *)(v52 + 8) = 0;
        *(void *)(v52 + 16) = 0;
        *(void *)(v52 + 24) = 0;
        *(unsigned char *)(v52 + 32) = 5;
        swift_willThrow();
        swift_release();
        sub_1B5905298(v65);
        sub_1B5905298(v65);
        uint64_t v29 = v64;
LABEL_27:
        sub_1B591DF0C(v29, v16, v17, v18);
        return;
      }
LABEL_47:
      swift_once();
      goto LABEL_30;
    }
    unint64_t v62 = v20;
    uint64_t v63 = v16;
    uint64_t v53 = v44 & 0x1FFFFFFFFFFFFFFFLL;
    if (v45)
    {
      uint64_t v59 = *(void *)(v53 + 16);
      swift_retain();
      uint64_t v54 = v65;
      sub_1B590968C(v65);
      swift_retain();
      uint64_t v23 = v11;
      sub_1B59C6C58(v66, v59, v65, a3, a4);
      if (v11)
      {
LABEL_41:
        swift_bridgeObjectRelease();
        sub_1B5905298(v54);
        swift_release();
        sub_1B591DF0C(v64, v63, v17, v18);
        sub_1B5905298(v54);
        swift_release();
        return;
      }
      a4 = v66[0];
      a3 = v66[0] & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v55 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_1B59CC268(a1);
      }
      unint64_t v56 = v62;
      if (v62 < a1[2])
      {
LABEL_45:
        a1[v56 + 4] = a4;
        swift_release();
        sub_1B5905298(v65);
        swift_release();
        sub_1B5905298(v65);
        sub_1B591DF0C(v64, v55, v17, v18);
        swift_release();
        swift_release();
        goto LABEL_15;
      }
      __break(1u);
    }
    uint64_t v60 = *(void *)(v53 + 16);
    swift_retain();
    uint64_t v54 = v23;
    sub_1B590968C(v23);
    swift_retain();
    sub_1B59C5B64(v66, v60, v23, a3, a4);
    if (v11) {
      goto LABEL_41;
    }
    a4 = v66[0];
    swift_retain();
    uint64_t v55 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a1 = sub_1B59CC268(a1);
    }
    unint64_t v56 = v62;
    if (v62 >= a1[2])
    {
      __break(1u);
      return;
    }
    goto LABEL_45;
  }
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1B5A1A328();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9D910D0);
  uint64_t v7 = sub_1B5A1A308();
  os_log_type_t v8 = sub_1B5A1C278();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1B58FD000, v7, v8, "Referenceable.updatedArray: trying to modify an array using an key subreference", v9, 2u);
    MEMORY[0x1BA9A4780](v9, -1, -1);
  }

  sub_1B59619AC();
  swift_allocError();
  *(void *)uint64_t v10 = 4;
  *(void *)(v10 + 8) = 0;
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(unsigned char *)(v10 + 32) = 5;
  swift_willThrow();
}

void sub_1B59C74EC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  if (a2 < 0)
  {
    uint64_t v11 = v5;
    uint64_t v16 = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v17 = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    char v18 = *(unsigned char *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v19 = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    v57[0] = *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    v57[1] = v16;
    v57[2] = v17;
    char v58 = v18;
    swift_bridgeObjectRetain();
    uint64_t v54 = v57[0];
    char v55 = v18;
    sub_1B591DF88(v57[0], v16, v17, v18);
    uint64_t v56 = v19;
    sub_1B590968C(v19);
    sub_1B5963948(a4);
    if (v21)
    {
      swift_bridgeObjectRelease();
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1B5A1A328();
      __swift_project_value_buffer(v24, (uint64_t)qword_1E9D910D0);
      uint64_t v25 = sub_1B5A1A308();
      os_log_type_t v26 = sub_1B5A1C258();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        _os_log_impl(&dword_1B58FD000, v25, v26, "SubReference to update array, unable to resolve index", v27, 2u);
        MEMORY[0x1BA9A4780](v27, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v28 = 2;
      *(void *)(v28 + 8) = 0;
      *(void *)(v28 + 16) = 0;
      *(void *)(v28 + 24) = 0;
      *(unsigned char *)(v28 + 32) = 5;
      swift_willThrow();
      sub_1B5905298(v56);
      uint64_t v29 = v54;
      goto LABEL_27;
    }
    if (v20 < 0 || v20 >= a1[2])
    {
      uint64_t v30 = v20;
      swift_bridgeObjectRelease();
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1B5A1A328();
      __swift_project_value_buffer(v31, (uint64_t)qword_1E9D910D0);
      swift_bridgeObjectRetain_n();
      uint64_t v32 = sub_1B5A1A308();
      os_log_type_t v33 = sub_1B5A1C278();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        v57[0] = v47;
        *(_DWORD *)uint64_t v34 = 134218242;
        uint64_t v59 = v30;
        sub_1B5A1C2D8();
        *(_WORD *)(v34 + 12) = 2080;
        uint64_t v48 = v16;
        uint64_t v35 = swift_bridgeObjectRetain();
        uint64_t v36 = MEMORY[0x1BA9A3890](v35, &type metadata for DecodableState);
        uint64_t v52 = v17;
        unint64_t v38 = v37;
        swift_bridgeObjectRelease();
        uint64_t v59 = sub_1B5928EE8(v36, v38, v57);
        uint64_t v16 = v48;
        sub_1B5A1C2D8();
        swift_bridgeObjectRelease_n();
        uint64_t v17 = v52;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B58FD000, v32, v33, "Referenceable.updatedArray: index out of range idx: %ld array: %s", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BA9A4780](v47, -1, -1);
        MEMORY[0x1BA9A4780](v34, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v39 = v30;
      *(unsigned char *)(v39 + 32) = 3;
      swift_willThrow();
      sub_1B5905298(v56);
      uint64_t v29 = v54;
      goto LABEL_27;
    }
    uint64_t v22 = v19;
    if ((~v19 & 0xF000000000000007) == 0)
    {
      unint64_t v51 = v20;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_1B59A5304(a3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_1B59CC268(a1);
      }
      if (v51 < a1[2])
      {
        a1[v51 + 4] = v23 | 0xA000000000000000;
        swift_release();
        sub_1B591DF0C(v54, v16, v17, v18);
LABEL_15:
        sub_1B59A33C8((uint64_t)a1, a5);
        swift_bridgeObjectRelease();
        return;
      }
      __break(1u);
      goto LABEL_46;
    }
    unint64_t v40 = a1[v20 + 4];
    if ((v40 >> 61) < 4)
    {
      sub_1B590968C(v56);
      swift_retain();
      swift_bridgeObjectRelease();
      if (qword_1E9D62B20 == -1)
      {
LABEL_30:
        uint64_t v41 = sub_1B5A1A328();
        __swift_project_value_buffer(v41, (uint64_t)qword_1E9D910D0);
        uint64_t v42 = sub_1B5A1A308();
        os_log_type_t v43 = sub_1B5A1C278();
        if (os_log_type_enabled(v42, v43))
        {
          unint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v44 = 0;
          _os_log_impl(&dword_1B58FD000, v42, v43, "Referenceable.updatedArray: Have a subreference but next structure is a value", v44, 2u);
          MEMORY[0x1BA9A4780](v44, -1, -1);
        }

        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v45 = 3;
        *(void *)(v45 + 8) = 0;
        *(void *)(v45 + 16) = 0;
        *(void *)(v45 + 24) = 0;
        *(unsigned char *)(v45 + 32) = 5;
        swift_willThrow();
        swift_release();
        sub_1B5905298(v56);
        sub_1B5905298(v56);
        uint64_t v29 = v54;
LABEL_27:
        sub_1B591DF0C(v29, v16, v17, v55);
        return;
      }
LABEL_46:
      swift_once();
      goto LABEL_30;
    }
    unint64_t v53 = v20;
    if (v40 >> 61 == 4)
    {
      uint64_t v49 = *(void *)((v40 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      sub_1B590968C(v56);
      swift_retain();
      uint64_t v22 = v11;
      sub_1B59C74EC(v57, v49, v56, a3, a4);
      if (v11)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        sub_1B5905298(v56);
        swift_release();
        sub_1B591DF0C(v54, v16, v17, v18);
        sub_1B5905298(v56);
        swift_release();
        return;
      }
      a4 = v57[0];
      a3 = v57[0] & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_1B59CC268(a1);
      }
      unint64_t v46 = v53;
      if (v53 < a1[2])
      {
LABEL_44:
        a1[v46 + 4] = a4;
        swift_release();
        sub_1B5905298(v56);
        swift_release();
        sub_1B5905298(v56);
        sub_1B591DF0C(v54, v16, v17, v18);
        swift_release();
        swift_release();
        goto LABEL_15;
      }
      __break(1u);
    }
    uint64_t v50 = *(void *)((v40 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_retain();
    sub_1B590968C(v22);
    swift_retain();
    sub_1B59C63C8(v57, v50, v22, a3, a4);
    if (v11) {
      goto LABEL_40;
    }
    a4 = v57[0];
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a1 = sub_1B59CC268(a1);
    }
    unint64_t v46 = v53;
    if (v53 >= a1[2])
    {
      __break(1u);
      return;
    }
    goto LABEL_44;
  }
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1B5A1A328();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9D910D0);
  uint64_t v7 = sub_1B5A1A308();
  os_log_type_t v8 = sub_1B5A1C278();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1B58FD000, v7, v8, "Referenceable.updatedArray: trying to modify an array using an key subreference", v9, 2u);
    MEMORY[0x1BA9A4780](v9, -1, -1);
  }

  sub_1B59619AC();
  swift_allocError();
  *(void *)uint64_t v10 = 4;
  *(void *)(v10 + 8) = 0;
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(unsigned char *)(v10 + 32) = 5;
  swift_willThrow();
}

uint64_t RemoteStateStore.init()()
{
  return sub_1B59CB78C(&qword_1E9D62E78, &qword_1E9D65378, &qword_1E9D65380, &qword_1E9D62E80);
}

void *StateDict.init(parent:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = v4[11];
  sub_1B5A1C108();
  uint64_t v6 = sub_1B5A1A3E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = (char *)v2 + v4[13];
  uint64_t v11 = sub_1B5A1C0C8();
  uint64_t v12 = v4[10];
  uint64_t v13 = v4[12];
  uint64_t v21 = v11;
  uint64_t v14 = sub_1B5A1C108();
  sub_1B59CC084((uint64_t)&v21, v14);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  uint64_t v15 = *(void *)(*v2 + 112);
  swift_getTupleTypeMetadata2();
  sub_1B5A1C0C8();
  *(void *)((char *)v2 + v15) = sub_1B5A1BE38();
  *(void *)((char *)v2 + *(void *)(*v2 + 128)) = 0;
  *(void *)((char *)v2 + *(void *)(*v2 + 120)) = a1;
  if (a1)
  {
    type metadata accessor for StateDict();
    swift_retain();
    swift_getWitnessTable();
    uint64_t v21 = sub_1B5A1A358();
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    uint64_t v17 = (void *)swift_allocObject();
    long long v17[2] = v12;
    void v17[3] = v5;
    v17[4] = v13;
    void v17[5] = v16;
    sub_1B5A1A378();
    uint64_t v18 = sub_1B5A1A3F8();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v18 = 0;
  }
  *(void *)((char *)v2 + *(void *)(*v2 + 128)) = v18;
  swift_release();
  return v2;
}

uint64_t RemoteStateStore.init(parent:initialSet:referenceKeyMap:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = qword_1E9D65378;
  swift_retain();
  *(void *)(v3 + v7) = sub_1B5902F98(MEMORY[0x1E4FBC860]);
  *(void *)(v3 + qword_1E9D65380) = a1;
  swift_retain_n();
  swift_release();
  uint64_t v8 = sub_1B59038C0(a1);
  swift_retain();
  sub_1B590505C(a2, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B59CCE94);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v9 = (void *)(v8 + qword_1E9D65378);
  swift_beginAccess();
  *uint64_t v9 = a3;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B59C81B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B59C9F9C(a1, a2, *a3);
}

uint64_t sub_1B59C81D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  v18[0] = a1;
  v18[1] = a2;
  uint64_t v8 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 112));
  uint64_t result = swift_beginAccess();
  uint64_t v10 = *v8;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B59049B8(a1, a2);
  if ((v12 & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v16 = *(void *)(v4 + *(void *)(*(void *)v4 + 120));
    if (v16) {
      return (*(uint64_t (**)(void *))(*(void *)v16 + 248))(v18);
    }
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  uint64_t v14 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v14);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath);
  swift_getKeyPath();
  sub_1B5A1A3C8();
  swift_release();
  uint64_t result = swift_release();
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(void *)(v17 + 16))
  {
    sub_1B59052CC(v17 + 32 * v13 + 32, (uint64_t)a3);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B59C83E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  v18[0] = a1;
  v18[1] = a2;
  uint64_t v8 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 112));
  uint64_t result = swift_beginAccess();
  uint64_t v10 = *v8;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B59049B8(a1, a2);
  if ((v12 & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v16 = *(void *)(v4 + *(void *)(*(void *)v4 + 120));
    if (v16) {
      return (*(uint64_t (**)(void *))(*(void *)v16 + 248))(v18);
    }
    *a3 = 0xF000000000000007;
    return result;
  }
  unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  uint64_t v14 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v14);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath);
  swift_getKeyPath();
  sub_1B5A1A3C8();
  swift_release();
  uint64_t result = swift_release();
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(void *)(v17 + 16))
  {
    *a3 = *(void *)(v17 + 8 * v13 + 32);
    swift_retain();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B59C85F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *v2;
  uint64_t v7 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 112));
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = *(void *)(v5 + 80);
  uint64_t v10 = *(void *)(v5 + 96);
  swift_bridgeObjectRetain();
  MEMORY[0x1BA9A3670](&v14, a1, v8, v9, MEMORY[0x1E4FBB550], v10);
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v11 = *(uint64_t *)((char *)v2 + *(void *)(*v2 + 120));
    if (v11) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v11 + 248))(a1);
    }
    else {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(*(void *)(v6 + 88) - 8)
    }
                                                                          + 56))(a2, 1, 1, *(void *)(v6 + 88));
  }
  else
  {
    sub_1B59C9A98();
    uint64_t v13 = *(void *)(v6 + 88);
    sub_1B5A1C138();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 0, 1, v13);
  }
}

uint64_t sub_1B59C87D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v23[0] = a2;
  v23[1] = a3;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    uint64_t v6 = v3;
    uint64_t v9 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 112));
    swift_beginAccess();
    uint64_t v10 = *v9;
    if (*(void *)(v10 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1B59049B8(a2, a3);
      if (v12)
      {
        unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
        swift_bridgeObjectRelease();
        uint64_t v14 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v14);
        uint64_t KeyPath = swift_getKeyPath();
        MEMORY[0x1F4188790](KeyPath);
        swift_getKeyPath();
        uint64_t v16 = (void (*)(void *, void))sub_1B5A1A3B8();
        uint64_t v18 = v17;
        uint64_t v19 = (void *)*v17;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v18 = (uint64_t)v19;
        if (result)
        {
          if ((v13 & 0x8000000000000000) == 0) {
            goto LABEL_9;
          }
        }
        else
        {
          uint64_t result = (uint64_t)sub_1B59CC268(v19);
          uint64_t v19 = (void *)result;
          *uint64_t v18 = result;
          if ((v13 & 0x8000000000000000) == 0)
          {
LABEL_9:
            if (v13 < v19[2])
            {
              v19[v13 + 4] = a1;
              swift_retain();
              swift_release();
              v16(v22, 0);
              swift_release();
              goto LABEL_14;
            }
LABEL_19:
            __break(1u);
            return result;
          }
        }
        __break(1u);
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = *(void *)(v6 + *(void *)(*(void *)v6 + 120));
    if (!v20)
    {
      sub_1B59C9F9C(a2, a3, a1);
      sub_1B599FF94(a1);
      return swift_bridgeObjectRelease();
    }
    v22[0] = a1;
    uint64_t v21 = *(void (**)(void *, void *))(*(void *)v20 + 256);
    sub_1B59A0838(a1);
    swift_retain();
    v21(v22, v23);
LABEL_14:
    swift_release();
    return sub_1B599FF94(a1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59C8AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v25[0] = a2;
  v25[1] = a3;
  sub_1B59CC648(a1, (uint64_t)&v22);
  if (!v23)
  {
    sub_1B5908FC0(a1, &qword_1E9D62BC8);
    swift_bridgeObjectRelease();
    return sub_1B5908FC0((uint64_t)&v22, &qword_1E9D62BC8);
  }
  sub_1B59098F4(&v22, v24);
  uint64_t v8 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 112));
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B59049B8(a2, a3);
    if (v11)
    {
      unint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_bridgeObjectRelease();
      uint64_t v13 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v13);
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x1F4188790](KeyPath);
      swift_getKeyPath();
      char v15 = (void (*)(long long *, void))sub_1B5A1A3B8();
      uint64_t v17 = v16;
      uint64_t v18 = (void *)*v16;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v17 = (uint64_t)v18;
      if (result)
      {
        if ((v12 & 0x8000000000000000) == 0) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1B59CC27C(v18);
        uint64_t v18 = (void *)result;
        *uint64_t v17 = result;
        if ((v12 & 0x8000000000000000) == 0)
        {
LABEL_6:
          if (v12 < v18[2])
          {
            __swift_assign_boxed_opaque_existential_0(&v18[4 * v12 + 4], v24);
            v15(&v22, 0);
            swift_release();
LABEL_12:
            swift_release();
            sub_1B5908FC0(a1, &qword_1E9D62BC8);
            return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
          }
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void *)(v4 + *(void *)(*(void *)v4 + 120));
  if (v20)
  {
    sub_1B59052CC((uint64_t)v24, (uint64_t)&v22);
    uint64_t v21 = *(void (**)(long long *, void *))(*(void *)v20 + 256);
    swift_retain();
    v21(&v22, v25);
    goto LABEL_12;
  }
  sub_1B59CA258(a2, a3, (uint64_t)v24);
  sub_1B5908FC0(a1, &qword_1E9D62BC8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59C8DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a2;
  uint64_t v53 = *v2;
  uint64_t v56 = *(char **)(v53 + 80);
  uint64_t v54 = *((void *)v56 - 1);
  MEMORY[0x1F4188790](a1);
  uint64_t v52 = (char *)&v48 - v4;
  uint64_t v6 = *(char **)(v5 + 88);
  uint64_t v7 = sub_1B5A1C2B8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  char v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v48 - v13;
  uint64_t v15 = *((void *)v6 - 1);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v48 - v16;
  uint64_t v18 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, a1, v7);
  uint64_t v19 = v15;
  uint64_t v20 = v15;
  uint64_t v21 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, char *))(v20 + 48))(v14, 1, v6) == 1)
  {
    (*(void (**)(uint64_t, char *))(v54 + 8))(v55, v56);
    long long v22 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v22(v18, v7);
    return ((uint64_t (*)(char *, uint64_t))v22)(v14, v7);
  }
  uint64_t v48 = v11;
  uint64_t v49 = v8;
  uint64_t v50 = v7;
  uint64_t v51 = v18;
  uint64_t v24 = v19;
  uint64_t v25 = v17;
  (*(void (**)(char *, char *, char *))(v19 + 32))(v17, v14, v6);
  os_log_type_t v26 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 112));
  swift_beginAccess();
  uint64_t v27 = *v26;
  uint64_t v28 = *(char **)(v53 + 96);
  swift_bridgeObjectRetain();
  uint64_t v29 = v55;
  uint64_t v30 = v56;
  MEMORY[0x1BA9A3670](&v57, v55, v27, v56, MEMORY[0x1E4FBB550], v28);
  uint64_t v31 = swift_bridgeObjectRelease();
  if (v58)
  {
    uint64_t v32 = v29;
    uint64_t v33 = *(uint64_t *)((char *)v2 + *(void *)(*v2 + 120));
    uint64_t v34 = v50;
    if (v33)
    {
      uint64_t v35 = v54;
      uint64_t v36 = v52;
      (*(void (**)(char *, uint64_t, char *))(v54 + 16))(v52, v32, v56);
      uint64_t v37 = v19;
      unint64_t v38 = *(void (**)(char *, char *, char *))(v19 + 16);
      uint64_t v39 = v48;
      v38(v48, v25, v21);
      (*(void (**)(char *, void, uint64_t, char *))(v24 + 56))(v39, 0, 1, v21);
      unint64_t v40 = *(void (**)(char *, char *))(*(void *)v33 + 256);
      swift_retain();
      v40(v39, v36);
      swift_release();
      (*(void (**)(uint64_t, char *))(v35 + 8))(v55, v56);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v34);
      return (*(uint64_t (**)(char *, char *))(v37 + 8))(v25, v21);
    }
    sub_1B59CA518(v32);
    (*(void (**)(uint64_t, char *))(v54 + 8))(v32, v56);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v34);
  }
  else
  {
    unint64_t v41 = v57;
    MEMORY[0x1F4188790](v31);
    *(&v48 - 4) = v30;
    *(&v48 - 3) = v21;
    *(&v48 - 2) = v28;
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    *(&v48 - 4) = v30;
    *(&v48 - 3) = v21;
    *(&v48 - 2) = v28;
    swift_getKeyPath();
    uint64_t v53 = sub_1B5A1A3B8();
    unint64_t v44 = v43;
    sub_1B5A1C108();
    sub_1B5A1C0B8();
    uint64_t v45 = *v44;
    sub_1B59CC214(v41, v45);
    char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
    uint64_t v47 = v45 & 0xFFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0) {
      uint64_t v47 = v45;
    }
    (*(void (**)(unint64_t, char *, char *))(v19 + 24))(v47+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v41, v25, v21);
    ((void (*)(unint64_t *, void))v53)(&v57, 0);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, char *))(v54 + 8))(v29, v30);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v50);
  }
  return (*(uint64_t (**)(char *, char *))(v19 + 8))(v25, v21);
}

uint64_t (*RemoteStateStore.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  RemoteStateStore.subscript.getter(a2, a3, a1);
  return sub_1B59C9458;
}

uint64_t sub_1B59C9458(uint64_t *a1, char a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = a1[1];
  if ((a2 & 1) == 0) {
    return sub_1B59C87D8(v5, v6, v4);
  }
  sub_1B59A0838(v5);
  sub_1B59C87D8(v5, v6, v4);
  return sub_1B599FF94(v5);
}

uint64_t sub_1B59C94F8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  RemoteStateStore.subscript.getter(a1, a2, &v12);
  uint64_t v8 = v12;
  if ((~v12 & 0xF000000000000007) != 0)
  {
    sub_1B59546FC(a3, a4);
    sub_1B599FF94(v8);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 1;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);
  return v10(a5, v9, 1, a3);
}

uint64_t sub_1B59C95E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = sub_1B5A1C2B8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v20 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v20 - v15, a1, v13);
  uint64_t v17 = *(void *)(a7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v18 = 0xF000000000000007;
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 8))(&v21, a7, a8);
    uint64_t v18 = v21;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v16, a7);
  }
  swift_bridgeObjectRetain();
  return sub_1B59C87D8(v18, a5, a6);
}

void RemoteStateStore.__allocating_init(parent:)()
{
}

void RemoteStateStore.init(parent:)()
{
}

uint64_t sub_1B59C9808()
{
  return sub_1B59CBDD8((uint64_t)&qword_1E9D65378, &qword_1E9D65380);
}

uint64_t RemoteStateStore.deinit()
{
  return sub_1B59CBE78(&qword_1E9D62E78, (uint64_t)&qword_1E9D65378, &qword_1E9D65380);
}

uint64_t sub_1B59C9838(uint64_t *a1)
{
  uint64_t v2 = v1 + *(void *)(*(void *)v1 + 104);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = *(void *)(*(void *)v1 + 120);
  uint64_t v5 = *(void *)(v1 + v4);
  *(void *)(v1 + v4) = 0;
  if (v5)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v6 = *(void *)(v5 + *(void *)(*(void *)v5 + 120));
      swift_retain();
      swift_release();
      uint64_t v5 = v6;
    }
    while (v6);
  }
  swift_release();
  return v1;
}

uint64_t StateDict.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  sub_1B5A1C108();
  uint64_t v2 = sub_1B5A1A3E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(void *)(*(void *)v0 + 120);
  uint64_t v4 = *(void *)(v0 + v3);
  *(void *)(v0 + v3) = 0;
  if (v4)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v5 = *(void *)(v4 + *(void *)(*(void *)v4 + 120));
      swift_retain();
      swift_release();
      uint64_t v4 = v5;
    }
    while (v5);
  }
  swift_release();
  return v0;
}

uint64_t RemoteStateStore.__deallocating_deinit()
{
  return sub_1B59CBF18(RemoteStateStore.deinit);
}

uint64_t sub_1B59C9A98()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B5A1A3C8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B59C9B70()
{
  return sub_1B5A1A3D8();
}

uint64_t sub_1B59C9C44()
{
  if (*(void *)(v0 + *(void *)(*(void *)v0 + 120)))
  {
    swift_beginAccess();
    sub_1B5A1BE48();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v1 = sub_1B5A1C128();
    sub_1B59C9C44(v1);
    sub_1B5A1C388();
    swift_getWitnessTable();
    sub_1B5A1C128();
    sub_1B5A1C0A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B5A1C108();
    swift_getWitnessTable();
    uint64_t v2 = sub_1B5A1C398();
    swift_release();
  }
  else
  {
    swift_beginAccess();
    sub_1B5A1BE48();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    return sub_1B5A1C398();
  }
  return v2;
}

uint64_t sub_1B59C9E94@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return RemoteStateStore.subscript.getter(*a1, a1[1], a2);
}

uint64_t sub_1B59C9EA0(uint64_t *a1, uint64_t *a2)
{
  return sub_1B59C87D8(*a1, *a2, a2[1]);
}

uint64_t (*sub_1B59C9EB0(void *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  RemoteStateStore.subscript.getter(v4, v5, a1);
  return sub_1B59C9F00;
}

uint64_t sub_1B59C9F00(uint64_t *a1, char a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = a1[2];
  if ((a2 & 1) == 0) {
    return sub_1B59C87D8(v5, v6, v4);
  }
  sub_1B59A0838(v5);
  sub_1B59C87D8(v5, v6, v4);
  return sub_1B599FF94(v5);
}

uint64_t sub_1B59C9F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v6 = (void (*)(void *, void))sub_1B5A1A3B8();
  uint64_t v8 = v7;
  uint64_t v9 = *v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = sub_1B59BA308(0, v9[2] + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  unint64_t v12 = v9[2];
  unint64_t v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    uint64_t v9 = sub_1B59BA308((void *)(v11 > 1), v12 + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  _OWORD v9[2] = v12 + 1;
  v9[v12 + 4] = a3;
  v6(v21, 0);
  swift_release();
  uint64_t v13 = swift_release();
  MEMORY[0x1F4188790](v13);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1B5A1A3C8();
  swift_release();
  swift_release();
  uint64_t v15 = *(void *)(v21[0] + 16);
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 112));
  swift_beginAccess();
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *v16;
  *uint64_t v16 = 0x8000000000000000;
  sub_1B59589CC(v15 - 1, a1, a2, v17);
  *uint64_t v16 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1B59CA258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B59052CC(a3, (uint64_t)v20);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v5 = (void (*)(void *, void))sub_1B5A1A3B8();
  uint64_t v7 = v6;
  uint64_t v8 = *v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_1B59BA77C(0, v8[2] + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v8 = sub_1B59BA77C((void *)(v10 > 1), v11 + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  _OWORD v8[2] = v11 + 1;
  sub_1B59098F4(v20, &v8[4 * v11 + 4]);
  v5(v19, 0);
  swift_release();
  uint64_t v12 = swift_release();
  MEMORY[0x1F4188790](v12);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1B5A1A3C8();
  swift_release();
  swift_release();
  uint64_t v14 = *(void *)(*(void *)&v20[0] + 16);
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)(v3 + *(void *)(*(void *)v3 + 112));
  swift_beginAccess();
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  v19[0] = *v15;
  *uint64_t v15 = 0x8000000000000000;
  sub_1B59589CC(v14 - 1, a1, a2, v16);
  *uint64_t v15 = v19[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1B59CA518(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = v2[10];
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = v2[11];
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *))(v10 + 16))((char *)&v15 - v9);
  uint64_t v20 = v3;
  uint64_t v21 = v8;
  uint64_t v11 = v2[12];
  uint64_t v22 = v11;
  swift_getKeyPath();
  uint64_t v17 = v3;
  uint64_t v18 = v8;
  uint64_t v15 = v11;
  uint64_t v19 = v11;
  swift_getKeyPath();
  uint64_t v12 = (void (*)(unsigned char *, void))sub_1B5A1A3B8();
  sub_1B5A1C108();
  sub_1B5A1C0F8();
  v12(v25, 0);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v16, v3);
  sub_1B59C9A98();
  uint64_t v13 = MEMORY[0x1BA9A38E0]();
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFSUB__(v13, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = v13 - 1;
    char v24 = 0;
    swift_beginAccess();
    sub_1B5A1BE68();
    sub_1B5A1BE88();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1B59CA7D0(uint64_t a1)
{
  uint64_t v3 = a1;
  uint64_t v1 = sub_1B5A1C108();
  return sub_1B59CC084((uint64_t)&v3, v1);
}

uint64_t sub_1B59CA818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59C9A98();
  *a1 = result;
  return result;
}

uint64_t sub_1B59CA844()
{
  return sub_1B59C9B70();
}

uint64_t StateDict.__allocating_init(parent:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  StateDict.init(parent:)(a1);
  return v2;
}

uint64_t sub_1B59CA8B0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for StateDict();
    swift_getWitnessTable();
    sub_1B5A1A358();
    swift_release();
    sub_1B5A1A368();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B59CA96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + a3 - 24);
  uint64_t v8 = sub_1B5A1C2B8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v17 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v17 - v13, a3, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  return (*(uint64_t (**)(char *, char *))(**(void **)a2 + 256))(v12, v14);
}

void (*sub_1B59CAB10(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v5 = malloc(0x48uLL);
  *a1 = v5;
  *uint64_t v5 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1B5A1C2B8();
  v5[1] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  _OWORD v5[2] = v8;
  size_t v9 = *(void *)(v8 + 64);
  v5[3] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v5[4] = v10;
  uint64_t v11 = *(void *)(v6 + 80);
  void v5[5] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12;
  v5[6] = v12;
  size_t v14 = *(void *)(v12 + 64);
  v5[7] = malloc(v14);
  v5[8] = malloc(v14);
  (*(void (**)(void))(v13 + 16))();
  sub_1B59C85F8(a2, (uint64_t)v10);
  return sub_1B59CAC98;
}

void sub_1B59CAC98(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 56);
  uint64_t v4 = *(void **)(*(void *)a1 + 64);
  if (a2)
  {
    uint64_t v5 = v2[5];
    uint64_t v6 = v2[6];
    uint64_t v8 = (void *)v2[3];
    uint64_t v7 = (void *)v2[4];
    uint64_t v9 = v2[1];
    uint64_t v10 = v2[2];
    (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v8, v7, v9);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v3, v4, v5);
    sub_1B59C8DB4((uint64_t)v8, (uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    uint64_t v8 = (void *)v2[3];
    uint64_t v7 = (void *)v2[4];
    sub_1B59C8DB4((uint64_t)v7, (uint64_t)v4);
  }
  free(v4);
  free(v3);
  free(v7);
  free(v8);
  free(v2);
}

uint64_t StateDict.__deallocating_deinit()
{
  StateDict.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1B59CADF4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StateDict();
  uint64_t result = sub_1B5A1A358();
  *a1 = result;
  return result;
}

uint64_t StateDict.makeIterator()()
{
  uint64_t v1 = v0;
  sub_1B59C9C44();
  uint64_t v2 = sub_1B5A1C4B8();
  swift_release();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return MEMORY[0x1F4184C58](sub_1B59CC46C, v3, TupleTypeMetadata2);
}

uint64_t sub_1B59CAF14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1B5A1C2B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - v6;
  sub_1B5A1C368();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1B59CB33C((void (*)(char *, char *))sub_1B59CCC28, a1, MEMORY[0x1E4FBC248], TupleTypeMetadata2, v9, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1B59CB080@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *(void *)(*a2 + 88);
  uint64_t v7 = sub_1B5A1C2B8();
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v18 - v12;
  (*(void (**)(uint64_t))(v5 + 248))(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v7);
    uint64_t result = sub_1B5A1C508();
    __break(1u);
  }
  else
  {
    size_t v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v14(v13, v10, v6);
    uint64_t v15 = *(void *)(v5 + 80);
    uint64_t v16 = a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a3, a1, v15);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(v16, v13, v6);
  }
  return result;
}

uint64_t sub_1B59CB33C@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_1B59CB5E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = StateDict.makeIterator()();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1B59CB624()
{
  return 0;
}

uint64_t sub_1B59CB62C()
{
  return 2;
}

uint64_t sub_1B59CB634()
{
  type metadata accessor for StateDict();
  uint64_t v0 = sub_1B59CC478();
  swift_release();
  return v0;
}

void sub_1B59CB684()
{
  type metadata accessor for StateDict();
  JUMPOUT(0x1BA9A3840);
}

uint64_t sub_1B59CB6F4()
{
  return sub_1B5A1C058();
}

uint64_t LocalStateStore.init()()
{
  return sub_1B59CB78C(&qword_1E9D62E28, &qword_1E9D65388, &qword_1E9D65390, &qword_1E9D62E30);
}

uint64_t sub_1B59CB78C(uint64_t *a1, uint64_t *a2, void *a3, uint64_t *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a2;
  swift_retain();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + v12) = sub_1B5902F98(MEMORY[0x1E4FBC860]);
  *(void *)(v4 + *a3) = 0;
  swift_release();
  uint64_t v14 = v4 + *(void *)(*(void *)v4 + 104);
  v17[1] = v13;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1B5A1A388();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v14, v11, v8);
  uint64_t v15 = *(void *)(*(void *)v4 + 112);
  *(void *)(v4 + v15) = sub_1B5902FB0(v13);
  *(void *)(v4 + *(void *)(*(void *)v4 + 128)) = 0;
  *(void *)(v4 + *(void *)(*(void *)v4 + 120)) = 0;
  *(void *)(v4 + *(void *)(*(void *)v4 + 128)) = 0;
  swift_release();
  return v4;
}

uint64_t sub_1B59CB93C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B59C9F9C(a1, a2, *a3);
}

uint64_t LocalStateStore.__allocating_init(parent:initialSet:referenceKeyMap:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = qword_1E9D65388;
  swift_retain();
  *(void *)(v6 + v7) = sub_1B5902F98(MEMORY[0x1E4FBC860]);
  *(void *)(v6 + qword_1E9D65390) = a1;
  swift_retain_n();
  swift_release();
  uint64_t v8 = sub_1B5903B24(a1);
  swift_retain();
  sub_1B59CC47C(a2, (void (*)(uint64_t, uint64_t, unsigned char *))sub_1B59CC474);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  *(void *)(v8 + qword_1E9D65388) = a3;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t LocalStateStore.init(parent:initialSet:referenceKeyMap:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = qword_1E9D65388;
  swift_retain();
  *(void *)(v3 + v7) = sub_1B5902F98(MEMORY[0x1E4FBC860]);
  *(void *)(v3 + qword_1E9D65390) = a1;
  swift_retain_n();
  swift_release();
  uint64_t v8 = sub_1B5903B24(a1);
  swift_retain();
  sub_1B59CC47C(a2, (void (*)(uint64_t, uint64_t, unsigned char *))sub_1B59CCE90);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  *(void *)(v8 + qword_1E9D65388) = a3;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B59CBB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B59CA258(a1, a2, a3);
}

uint64_t LocalStateStore.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1B59C81D8(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t LocalStateStore.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B59CC648(a1, (uint64_t)v7);
  sub_1B59C8AB8((uint64_t)v7, a2, a3);
  return sub_1B5908FC0(a1, &qword_1E9D62BC8);
}

void (*LocalStateStore.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = malloc(0x78uLL);
  *a1 = v7;
  v7[13] = a3;
  v7[14] = v3;
  v7[12] = a2;
  swift_bridgeObjectRetain();
  sub_1B59C81D8(a2, a3, v7);
  swift_bridgeObjectRelease();
  return sub_1B59CBC80;
}

void sub_1B59CBC80(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 32;
  if (a2)
  {
    uint64_t v4 = v2[13];
    uint64_t v5 = v2[12];
    sub_1B59CC648(*a1, v3);
    sub_1B59CC648(v3, (uint64_t)(v2 + 8));
    swift_bridgeObjectRetain();
    sub_1B59C8AB8((uint64_t)(v2 + 8), v5, v4);
    sub_1B5908FC0(v3, &qword_1E9D62BC8);
  }
  else
  {
    uint64_t v6 = v2[13];
    uint64_t v7 = v2[12];
    sub_1B59CC648(*a1, v3);
    swift_bridgeObjectRetain();
    sub_1B59C8AB8(v3, v7, v6);
  }
  sub_1B5908FC0((uint64_t)v2, &qword_1E9D62BC8);
  free(v2);
}

void LocalStateStore.__allocating_init(parent:)()
{
}

void LocalStateStore.init(parent:)()
{
}

uint64_t sub_1B59CBDC4()
{
  return sub_1B59CBDD8((uint64_t)&qword_1E9D65388, &qword_1E9D65390);
}

uint64_t sub_1B59CBDD8(uint64_t a1, void *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + *a2);
  *(void *)(v2 + *a2) = 0;
  if (v4)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v5 = *(void *)(v4 + *a2);
      swift_retain();
      swift_release();
      uint64_t v4 = v5;
    }
    while (v5);
  }
  return swift_release();
}

uint64_t LocalStateStore.deinit()
{
  return sub_1B59CBE78(&qword_1E9D62E28, (uint64_t)&qword_1E9D65388, &qword_1E9D65390);
}

uint64_t sub_1B59CBE78(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1B59C9838(a1);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + *a3);
  *(void *)(v4 + *a3) = 0;
  if (v5)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v6 = *(void *)(v5 + *a3);
      swift_retain();
      swift_release();
      uint64_t v5 = v6;
    }
    while (v6);
  }
  swift_release();
  return v4;
}

uint64_t LocalStateStore.__deallocating_deinit()
{
  return sub_1B59CBF18(LocalStateStore.deinit);
}

uint64_t sub_1B59CBF18(uint64_t (*a1)(void))
{
  uint64_t v1 = a1();
  uint64_t v2 = *(unsigned int *)(*(void *)v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v1 + 52);
  return MEMORY[0x1F4186488](v1, v2, v3);
}

uint64_t sub_1B59CBF70@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  sub_1B59C81D8(v3, v4, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59CBFC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_1B59CC648(a1, (uint64_t)v6);
  sub_1B59C8AB8((uint64_t)v6, v3, v4);
  return sub_1B5908FC0(a1, &qword_1E9D62BC8);
}

void (*sub_1B59CC024(void *a1, uint64_t *a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = LocalStateStore.subscript.modify(v4, *a2, a2[1]);
  return sub_1B5909C6C;
}

uint64_t sub_1B59CC084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  sub_1B5A1A388();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t sub_1B59CC174(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1B5A1C4F8();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1B5A1C0D8();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B59CC214(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

void *sub_1B59CC268(void *a1)
{
  return sub_1B59BA308(0, a1[2], 0, a1);
}

void *sub_1B59CC27C(void *a1)
{
  return sub_1B59BA77C(0, a1[2], 0, a1);
}

uint64_t sub_1B59CC290()
{
  return objectdestroyTm_3((void (*)(void, void, void, void))sub_1B591F344);
}

uint64_t sub_1B59CC2AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B59C94F8(v1[7], v1[8], v1[4], v1[5], a1);
}

uint64_t objectdestroy_2Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B59CC30C(uint64_t a1)
{
  return sub_1B59C95E8(a1, v1[2], v1[3], v1[6], v1[7], v1[8], v1[4], v1[5]);
}

uint64_t type metadata accessor for StateDict()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B59CC338()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B59CC370()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B59CC3A8()
{
  return sub_1B59CA8B0();
}

uint64_t sub_1B59CC3B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59C9A98();
  *a1 = result;
  return result;
}

uint64_t sub_1B59CC3E0()
{
  return sub_1B59C9B70();
}

uint64_t sub_1B59CC40C()
{
  return 24;
}

__n128 sub_1B59CC418(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1B59CC42C()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B59CC46C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B59CAF14(*(void *)(v1 + 24), a1);
}

uint64_t sub_1B59CC47C(uint64_t a1, void (*a2)(uint64_t, uint64_t, unsigned char *))
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v20 + 8 * v9);
      if (!v16)
      {
        int64_t v9 = v15 + 2;
        if (v15 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v20 + 8 * v9);
        if (!v16)
        {
          int64_t v9 = v15 + 3;
          if (v15 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v20 + 8 * v9);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    sub_1B59052CC(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v19);
    v18[0] = v13;
    v18[1] = v14;
    swift_bridgeObjectRetain();
    a2(v13, v14, v19);
    uint64_t result = sub_1B5908FC0((uint64_t)v18, &qword_1E9D65438);
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v7) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v20 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v20 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B59CC648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B59CC6B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B59CC6CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(**(void **)a1 + 248))(a2);
}

uint64_t sub_1B59CC718()
{
  return 24;
}

__n128 sub_1B59CC724(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for RemoteStateStore(uint64_t a1)
{
  return sub_1B59001B4(a1, qword_1E9D65398);
}

uint64_t method lookup function for RemoteStateStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteStateStore);
}

uint64_t dispatch thunk of RemoteStateStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of RemoteStateStore.__allocating_init(parent:initialSet:referenceKeyMap:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t sub_1B59CC7A0()
{
  sub_1B5A1C108();
  uint64_t result = sub_1B5A1A3E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for StateDict(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StateDict);
}

uint64_t dispatch thunk of StateDict.__allocating_init(parent:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of StateDict.keys.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of StateDict.subscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of StateDict.subscript.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of StateDict.subscript.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of StateDict.setLocal(key:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t type metadata accessor for LocalStateStore(uint64_t a1)
{
  return sub_1B59001B4(a1, (uint64_t *)&unk_1E9D65428);
}

uint64_t sub_1B59CC970()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for LocalStateStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LocalStateStore);
}

uint64_t dispatch thunk of LocalStateStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of LocalStateStore.__allocating_init(parent:initialSet:referenceKeyMap:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        unint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1B59CCC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59CB080(a1, v2, a2);
}

uint64_t sub_1B59CCC48()
{
  return objectdestroyTm_3((void (*)(void, void, void, void))sub_1B590D6F0);
}

uint64_t sub_1B59CCC60()
{
  return objectdestroy_54Tm((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59CCC78()
{
  return objectdestroy_54Tm((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59CCC90()
{
  return objectdestroyTm_3((void (*)(void, void, void, void))sub_1B590D6F0);
}

uint64_t sub_1B59CCCA8()
{
  return objectdestroy_54Tm((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59CCCC0()
{
  return objectdestroy_54Tm((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59CCCD8()
{
  return objectdestroyTm_3((void (*)(void, void, void, void))sub_1B590D6F0);
}

uint64_t sub_1B59CCCF0()
{
  return objectdestroy_54Tm((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59CCD08()
{
  return objectdestroy_54Tm((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59CCD20()
{
  return objectdestroy_54Tm((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59CCD38()
{
  return objectdestroy_54Tm((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59CCD50()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B59CCD88()
{
  return objectdestroyTm_3((void (*)(void, void, void, void))sub_1B5904AB4);
}

uint64_t sub_1B59CCDA0()
{
  return objectdestroy_54Tm((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59CCDB8()
{
  return objectdestroy_54Tm((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t objectdestroy_54Tm(void (*a1)(void, void, void, void))
{
  a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  if ((~*(void *)(v1 + 48) & 0xF000000000000007) != 0) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v1, 56, 7);
}

uint64_t sub_1B59CCE30()
{
  return objectdestroyTm_3((void (*)(void, void, void, void))sub_1B5905248);
}

uint64_t objectdestroyTm_3(void (*a1)(void, void, void, void))
{
  a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  return MEMORY[0x1F4186498](v1, 41, 7);
}

void destroy for AnimationAction(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 72);
  if (v2 != 254)
  {
    sub_1B5904A88(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
    if (v2 != 255)
    {
      uint64_t v3 = *(void *)(a1 + 48);
      uint64_t v4 = *(void *)(a1 + 56);
      uint64_t v5 = *(void *)(a1 + 64);
      sub_1B590D6F0(v3, v4, v5, v2 & 1);
    }
  }
}

uint64_t initializeWithCopy for AnimationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 == 254)
  {
    long long v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    uint64_t v9 = *(void *)(a2 + 32);
    unsigned __int8 v10 = *(unsigned char *)(a2 + 40);
    sub_1B5904B60(v7, v8, v9, v10);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    *(unsigned char *)(a1 + 40) = v10;
    if (v5 == 255)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    }
    else
    {
      uint64_t v11 = *(void *)(a2 + 48);
      uint64_t v12 = *(void *)(a2 + 56);
      uint64_t v13 = *(void *)(a2 + 64);
      sub_1B590D634(v11, v12, v13, v5 & 1);
      *(void *)(a1 + 48) = v11;
      *(void *)(a1 + 56) = v12;
      *(void *)(a1 + 64) = v13;
      *(unsigned char *)(a1 + 72) = v5 & 1;
    }
  }
  return a1;
}

uint64_t assignWithCopy for AnimationAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 16);
  int v5 = (long long *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 254)
  {
    if (v6 == 254)
    {
      long long v7 = *v5;
      long long v8 = *(_OWORD *)(a2 + 32);
      long long v9 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      *(_OWORD *)(a1 + 32) = v8;
      *(_OWORD *)(a1 + 48) = v9;
LABEL_4:
      *uint64_t v4 = v7;
      return a1;
    }
    uint64_t v13 = *(void *)(a2 + 16);
    uint64_t v14 = *(void *)(a2 + 24);
    uint64_t v15 = *(void *)(a2 + 32);
    unsigned __int8 v16 = *(unsigned char *)(a2 + 40);
    sub_1B5904B60(v13, v14, v15, v16);
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v14;
    *(void *)(a1 + 32) = v15;
    *(unsigned char *)(a1 + 40) = v16;
    int v17 = *(unsigned __int8 *)(a2 + 72);
    if (v17 == 255)
    {
      long long v18 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      *(_OWORD *)(a1 + 48) = v18;
      return a1;
    }
    goto LABEL_14;
  }
  if (v6 == 254)
  {
    sub_1B59CD234(a1 + 16);
    long long v11 = *(_OWORD *)(a2 + 32);
    long long v10 = *(_OWORD *)(a2 + 48);
    long long v12 = *v5;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)(a1 + 48) = v10;
    *uint64_t v4 = v12;
    return a1;
  }
  uint64_t v19 = *(void *)(a2 + 16);
  uint64_t v20 = *(void *)(a2 + 24);
  uint64_t v21 = *(void *)(a2 + 32);
  unsigned __int8 v22 = *(unsigned char *)(a2 + 40);
  sub_1B5904B60(v19, v20, v21, v22);
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v24 = *(void *)(a1 + 24);
  uint64_t v25 = *(void *)(a1 + 32);
  *(void *)(a1 + 16) = v19;
  *(void *)(a1 + 24) = v20;
  *(void *)(a1 + 32) = v21;
  unsigned __int8 v26 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v22;
  sub_1B5904A88(v23, v24, v25, v26);
  uint64_t v4 = (long long *)(a1 + 48);
  uint64_t v27 = (long long *)(a2 + 48);
  int v17 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v17 == 255)
    {
      long long v7 = *v27;
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      goto LABEL_4;
    }
LABEL_14:
    char v29 = v17 & 1;
    uint64_t v30 = *(void *)(a2 + 48);
    uint64_t v31 = *(void *)(a2 + 56);
    uint64_t v32 = *(void *)(a2 + 64);
    sub_1B590D634(v30, v31, v32, v17 & 1);
    *(void *)(a1 + 48) = v30;
    *(void *)(a1 + 56) = v31;
    *(void *)(a1 + 64) = v32;
    *(unsigned char *)(a1 + 72) = v29;
    return a1;
  }
  if (v17 == 255)
  {
    sub_1B59369A8(a1 + 48);
    long long v28 = *(_OWORD *)(a2 + 57);
    *uint64_t v4 = *v27;
    *(_OWORD *)(a1 + 57) = v28;
  }
  else
  {
    char v33 = v17 & 1;
    uint64_t v34 = *(void *)(a2 + 48);
    uint64_t v35 = *(void *)(a2 + 56);
    uint64_t v36 = *(void *)(a2 + 64);
    sub_1B590D634(v34, v35, v36, v17 & 1);
    uint64_t v37 = *(void *)(a1 + 48);
    uint64_t v38 = *(void *)(a1 + 56);
    uint64_t v39 = *(void *)(a1 + 64);
    char v40 = *(unsigned char *)(a1 + 72);
    *(void *)(a1 + 48) = v34;
    *(void *)(a1 + 56) = v35;
    *(void *)(a1 + 64) = v36;
    *(unsigned char *)(a1 + 72) = v33;
    sub_1B590D6F0(v37, v38, v39, v40);
  }
  return a1;
}

uint64_t sub_1B59CD234(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AnimationAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 72) == 254) {
    goto LABEL_4;
  }
  int v4 = *(unsigned __int8 *)(a2 + 72);
  if (v4 == 254)
  {
    sub_1B59CD234(a1 + 16);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    return a1;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v7;
  sub_1B5904A88(v8, v9, v10, v11);
  int v12 = *(unsigned __int8 *)(a1 + 72);
  if (v12 != 255)
  {
    if (v4 != 255)
    {
      char v13 = v12 & 1;
      uint64_t v14 = *(void *)(a2 + 64);
      uint64_t v15 = *(void *)(a1 + 48);
      uint64_t v16 = *(void *)(a1 + 56);
      uint64_t v17 = *(void *)(a1 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(void *)(a1 + 64) = v14;
      *(unsigned char *)(a1 + 72) = v4 & 1;
      sub_1B590D6F0(v15, v16, v17, v13);
      return a1;
    }
    sub_1B59369A8(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationAction(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 73)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationAction()
{
  return &type metadata for AnimationAction;
}

void sub_1B59CD4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B5A1BDC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1B5A1BDE8();
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)((char *)v49 + 9) = *(long long *)((char *)v2 + 57);
  long long v10 = v2[3];
  long long v48 = v2[2];
  v49[0] = v10;
  long long v11 = v2[1];
  long long v46 = *v2;
  long long v47 = v11;
  uint64_t v12 = BYTE8(v49[1]);
  if (BYTE8(v49[1]) == 254)
  {
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v32 = a2;
    char v33 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = v6;
    uint64_t v35 = v5;
    uint64_t v15 = *((void *)&v49[0] + 1);
    uint64_t v14 = *(void *)&v49[1];
    uint64_t v16 = *((void *)&v48 + 1);
    uint64_t v17 = *(void *)&v49[0];
    uint64_t v19 = *((void *)&v47 + 1);
    uint64_t v18 = v48;
    uint64_t v20 = v47;
    long long aBlock = v47;
    unint64_t v41 = (uint64_t (*)())v48;
    LOBYTE(v42) = BYTE8(v48);
    long long v43 = v49[0];
    uint64_t v44 = *(void *)&v49[1];
    uint64_t v36 = *(void **)&v49[1];
    char v45 = BYTE8(v49[1]);
    sub_1B5904B60(v47, *((uint64_t *)&v47 + 1), v48, BYTE8(v48));
    sub_1B590F04C(v17, v15, v14, v12);
    uint64_t v31 = a1;
    uint64_t v21 = v50;
    sub_1B5961308(a1);
    uint64_t v23 = v22;
    sub_1B59CEC08(v20, v19, v18, v16, v17, v15, (uint64_t)v36, v12, (void (*)(void))sub_1B5904A88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F034);
    uint64_t v50 = v21;
    if (v21) {
      return;
    }
    uint64_t v5 = v35;
    uint64_t v6 = v34;
    uint64_t v9 = v33;
    a2 = v32;
    uint64_t v13 = v23;
    a1 = v31;
  }
  sub_1B597A758();
  uint64_t v36 = (void *)sub_1B5A1C288();
  uint64_t v24 = swift_allocObject();
  long long v25 = v46;
  *(_OWORD *)(v24 + 40) = v47;
  long long v26 = v49[0];
  *(_OWORD *)(v24 + 56) = v48;
  *(_OWORD *)(v24 + 72) = v26;
  *(_OWORD *)(v24 + 81) = *(_OWORD *)((char *)v49 + 9);
  *(void *)(v24 + 16) = v13;
  *(_OWORD *)(v24 + 24) = v25;
  *(void *)(v24 + 104) = a1;
  *(void *)(v24 + 112) = a2;
  *(void *)&long long v43 = sub_1B59CEB88;
  *((void *)&v43 + 1) = v24;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  unint64_t v41 = sub_1B59251B4;
  uint64_t v42 = &block_descriptor_2;
  uint64_t v27 = _Block_copy(&aBlock);
  swift_retain();
  sub_1B592CE80((uint64_t)&v46);
  swift_retain();
  swift_retain();
  swift_release();
  sub_1B5A1BDD8();
  *(void *)&long long aBlock = MEMORY[0x1E4FBC860];
  sub_1B59CEBB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638A0);
  sub_1B59095C8((unint64_t *)&qword_1E9D638A8, &qword_1E9D638A0);
  long long v28 = v38;
  sub_1B5A1C348();
  char v29 = v36;
  MEMORY[0x1BA9A3A90](0, v9, v28, v27);
  _Block_release(v27);
  swift_release();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v28, v5);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v39);
}

uint64_t sub_1B59CD90C(uint64_t a1)
{
  if (a1) {
    swift_retain();
  }
  else {
    sub_1B5A1BCB8();
  }
  sub_1B5A1A5E8();
  return swift_release();
}

uint64_t sub_1B59CD9A8(uint64_t result, uint64_t a2)
{
  uint64_t v4 = result;
  uint64_t v5 = v2[1];
  if (*v2)
  {
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_1B592BFB0(v6, (void (*)(uint64_t, uint64_t, void *))sub_1B592C454);
    __n128 result = swift_bridgeObjectRelease();
  }
  if (v5)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    if (v7)
    {
      uint64_t v8 = (void *)(v5 + 32);
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v9 = v8[3];
        uint64_t v10 = v8[4];
        __swift_project_boxed_opaque_existential_1(v8, v9);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 40))(v4, a2, v9, v10);
        v8 += 5;
        --v7;
      }
      while (v7);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B59CDC78(char a1)
{
  return *(void *)&aBody_3[8 * a1];
}

uint64_t sub_1B59CDC98(char *a1, char *a2)
{
  return sub_1B59EEE98(*a1, *a2);
}

uint64_t sub_1B59CDCA4()
{
  return sub_1B59F1CF0();
}

uint64_t sub_1B59CDCAC()
{
  return sub_1B59F4238();
}

uint64_t sub_1B59CDCB4()
{
  return sub_1B59F5C0C();
}

uint64_t sub_1B59CDCBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59CEF90();
  *a1 = result;
  return result;
}

uint64_t sub_1B59CDCEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59CDC78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59CDD18()
{
  return sub_1B59CDC78(*v0);
}

uint64_t sub_1B59CDD20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59CEF90();
  *a1 = result;
  return result;
}

uint64_t sub_1B59CDD48(uint64_t a1)
{
  unint64_t v2 = sub_1B59CECDC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59CDD84(uint64_t a1)
{
  unint64_t v2 = sub_1B59CECDC();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B59CDDC0(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v79 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F00);
  uint64_t v86 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void (*)(void))__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65460);
  uint64_t v8 = *((void *)v7 - 1);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v87 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1B59CECDC();
  sub_1B5A1C838();
  uint64_t v12 = v2;
  if (v2)
  {
    uint64_t v13 = (uint64_t)v87;
    goto LABEL_3;
  }
  uint64_t v81 = v6;
  uint64_t v80 = v4;
  uint64_t v76 = v8;
  LOBYTE(v91) = 0;
  if ((sub_1B5A1C5F8() & 1) == 0)
  {
    uint64_t v82 = 0;
    uint64_t v13 = (uint64_t)v87;
LABEL_25:
    LOBYTE(v88[0]) = 1;
    sub_1B59CED30();
    sub_1B5A1C5B8();
    if (!v12)
    {
      unint64_t v78 = v7;
      uint64_t v86 = *((void *)&v91 + 1);
      uint64_t v43 = v91;
      uint64_t v44 = v92;
      uint64_t v45 = v93;
      uint64_t v46 = v94;
      uint64_t v47 = v95;
      uint64_t v48 = v96;
      uint64_t v77 = v10;
      uint64_t v49 = v97;
      uint64_t v85 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
      LOBYTE(v91) = 2;
      uint64_t v74 = v43;
      uint64_t v83 = v44;
      uint64_t v81 = (char *)v45;
      uint64_t v80 = v46;
      uint64_t v75 = v47;
      uint64_t v84 = v48;
      sub_1B59CEC08(v43, v86, v44, v45, v46, v47, v48, v49, (void (*)(void))sub_1B5904B60, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F04C);
      sub_1B5951CA4();
      sub_1B5A1C5B8();
      LODWORD(v73) = v49;
      uint64_t v50 = v86;
      uint64_t v51 = (uint64_t)v81;
      uint64_t v52 = v98;
      uint64_t v53 = v76;
      if (v98)
      {
        int64_t v54 = *(void *)(v98 + 16);
        if (v54)
        {
          uint64_t v85 = 0;
          uint64_t v90 = MEMORY[0x1E4FBC860];
          sub_1B596931C(0, v54, 0);
          uint64_t v55 = v52 + 32;
          uint64_t v56 = v90;
          do
          {
            sub_1B5951D6C(v55, (uint64_t)v88);
            sub_1B590CA38((uint64_t)v88, (uint64_t)&v91);
            sub_1B5951DC8((uint64_t)v88);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B596931C(0, *(void *)(v56 + 16) + 1, 1);
              uint64_t v56 = v90;
            }
            unint64_t v58 = *(void *)(v56 + 16);
            unint64_t v57 = *(void *)(v56 + 24);
            if (v58 >= v57 >> 1)
            {
              sub_1B596931C(v57 > 1, v58 + 1, 1);
              uint64_t v56 = v90;
            }
            *(void *)(v56 + 16) = v58 + 1;
            sub_1B5908BE8(&v91, v56 + 40 * v58 + 32);
            v55 += 40;
            --v54;
          }
          while (v54);
          uint64_t v59 = v51;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v59 = (uint64_t)v81;
          swift_bridgeObjectRelease();
          uint64_t v56 = MEMORY[0x1E4FBC860];
        }
        uint64_t v53 = v76;
      }
      else
      {
        uint64_t v56 = 0;
        uint64_t v59 = (uint64_t)v81;
      }
      (*(void (**)(char *, void (*)(void)))(v53 + 8))(v77, v78);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      uint64_t v60 = v74;
      uint64_t v62 = v83;
      uint64_t v61 = v84;
      uint64_t v63 = v80;
      uint64_t v64 = v59;
      sub_1B59CEC08(v74, v50, v83, v59, v80, v75, v84, v73, (void (*)(void))sub_1B5904B60, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F04C);
      uint64_t v85 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F034;
      unint64_t v78 = (void (*)(void))sub_1B5904A88;
      uint64_t v65 = v59;
      uint64_t v66 = v75;
      uint64_t v67 = v61;
      uint64_t v68 = v73;
      sub_1B59CEC08(v60, v50, v62, v65, v63, v75, v67, v73, (void (*)(void))sub_1B5904A88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F034);
      char v69 = v82;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v70 = v79;
      void *v79 = v69;
      v70[1] = v56;
      v70[2] = v60;
      uint64_t v70[3] = v50;
      v70[4] = v62;
      v70[5] = v64;
      uint64_t v71 = v80;
      v70[6] = v80;
      v70[7] = v66;
      uint64_t v72 = v84;
      v70[8] = v84;
      *((unsigned char *)v70 + 72) = v68;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B59CEC08(v60, v50, v62, (uint64_t)v81, v71, v66, v72, v68, v78, v85);
      return;
    }
    (*(void (**)(char *, void (*)(void)))(v76 + 8))(v10, v7);
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  LOBYTE(v91) = 0;
  sub_1B590C798();
  sub_1B5A1C568();
  uint64_t v85 = 0;
  uint64_t v14 = v80;
  uint64_t v15 = sub_1B5A1C5E8();
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t v73 = v15;
  if (!v16)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v20 = v86;
LABEL_24:
    uint64_t v82 = v19;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v81, v14);
    swift_bridgeObjectRelease();
    uint64_t v13 = (uint64_t)v87;
    uint64_t v12 = v85;
    goto LABEL_25;
  }
  uint64_t v17 = v15;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
  uint64_t v74 = sub_1B59095C8((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
  uint64_t v18 = (unsigned char *)(v17 + 56);
  uint64_t v19 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v20 = v86;
  unint64_t v78 = v7;
  uint64_t v77 = v10;
  while (1)
  {
    uint64_t v84 = v16;
    uint64_t v22 = *((void *)v18 - 3);
    uint64_t v23 = *((void *)v18 - 2);
    char v24 = *v18;
    uint64_t v25 = *((void *)v18 - 1);
    v88[0] = v22;
    v88[1] = v23;
    v88[2] = v25;
    char v89 = v24;
    swift_bridgeObjectRetain_n();
    long long v26 = v85;
    sub_1B5A1C5D8();
    uint64_t v85 = v26;
    if (v26)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v81, v14);
      (*(void (**)(char *, void (*)(void)))(v76 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      uint64_t v13 = (uint64_t)v87;
      goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    long long v27 = v91;
    uint64_t v82 = (void *)v92;
    LODWORD(v83) = v93;
    long long v28 = v19;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v88[0] = v28;
    unint64_t v31 = sub_1B59049B8(v22, v23);
    uint64_t v32 = v28[2];
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33)) {
      break;
    }
    char v35 = v30;
    if (v28[3] >= v34)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v19 = (void *)v88[0];
        if (v30) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_1B5959624();
        uint64_t v19 = (void *)v88[0];
        if (v35) {
          goto LABEL_9;
        }
      }
    }
    else
    {
      sub_1B5957D04(v34, isUniquelyReferenced_nonNull_native);
      uint64_t v36 = sub_1B59049B8(v22, v23);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_43;
      }
      unint64_t v31 = v36;
      uint64_t v19 = (void *)v88[0];
      if (v35)
      {
LABEL_9:
        uint64_t v21 = v19[7] + 32 * v31;
        sub_1B591F344(*(void *)v21, *(void *)(v21 + 8), *(void *)(v21 + 16), *(unsigned char *)(v21 + 24));
        *(_OWORD *)uint64_t v21 = v27;
        *(void *)(v21 + 16) = v82;
        *(unsigned char *)(v21 + 24) = v83;
        goto LABEL_10;
      }
    }
    v19[(v31 >> 6) + 8] |= 1 << v31;
    uint64_t v38 = (uint64_t *)(v19[6] + 16 * v31);
    uint64_t *v38 = v22;
    v38[1] = v23;
    uint64_t v39 = v19[7] + 32 * v31;
    *(_OWORD *)uint64_t v39 = v27;
    *(void *)(v39 + 16) = v82;
    *(unsigned char *)(v39 + 24) = v83;
    uint64_t v40 = v19[2];
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v42 = v40 + 1;
    if (v41) {
      goto LABEL_42;
    }
    long long v19[2] = v42;
    swift_bridgeObjectRetain();
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 += 32;
    uint64_t v16 = v84 - 1;
    uint64_t v7 = v78;
    uint64_t v10 = v77;
    uint64_t v14 = v80;
    uint64_t v20 = v86;
    if (v84 == 1) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  sub_1B5A1C738();
  __break(1u);
}

uint64_t sub_1B59CE898(uint64_t a1, uint64_t a2)
{
  sub_1B59CD4A4(a1, a2);
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return sub_1B592D24C(v3);
}

uint64_t sub_1B59CE930@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(v4 + 8);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  if (v8) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1B59193A4(v11);
  swift_bridgeObjectRelease();
  sub_1B59177F0(v12, a2, a3, v9, v10, a4);
  return swift_bridgeObjectRelease();
}

void sub_1B59CE9E8(void *a1@<X0>, void *a2@<X8>)
{
}

unint64_t sub_1B59CEA00(uint64_t a1)
{
  unint64_t result = sub_1B59CEA28();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59CEA28()
{
  unint64_t result = qword_1E9D65448;
  if (!qword_1E9D65448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65448);
  }
  return result;
}

unint64_t sub_1B59CEA7C(uint64_t a1)
{
  unint64_t result = sub_1B59CEAA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59CEAA4()
{
  unint64_t result = qword_1E9D65458;
  if (!qword_1E9D65458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65458);
  }
  return result;
}

uint64_t sub_1B59CEAF8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 96) != 254)
  {
    sub_1B5904A88(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
    int v1 = *(unsigned __int8 *)(v0 + 96);
    if (v1 != 255) {
      sub_1B590D6F0(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1 & 1);
    }
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1B59CEB88()
{
  return sub_1B59CD90C(*(void *)(v0 + 16));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_1B59CEBB0()
{
  unint64_t result = qword_1E9D63898;
  if (!qword_1E9D63898)
  {
    sub_1B5A1BDC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63898);
  }
  return result;
}

void sub_1B59CEC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void), void (*a10)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a8 != 254)
  {
    a9();
    a10(a5, a6, a7, a8);
  }
}

uint64_t sub_1B59CEC90()
{
  return sub_1B59CECA8();
}

uint64_t sub_1B59CECA8()
{
  return sub_1B59CD9A8(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_1B59CECDC()
{
  unint64_t result = qword_1E9D65468;
  if (!qword_1E9D65468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65468);
  }
  return result;
}

unint64_t sub_1B59CED30()
{
  unint64_t result = qword_1E9D65470;
  if (!qword_1E9D65470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65470);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnimationAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59CEE50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationAction.CodingKeys()
{
  return &type metadata for AnimationAction.CodingKeys;
}

unint64_t sub_1B59CEE8C()
{
  unint64_t result = qword_1E9D65478;
  if (!qword_1E9D65478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65478);
  }
  return result;
}

unint64_t sub_1B59CEEE4()
{
  unint64_t result = qword_1E9D65480;
  if (!qword_1E9D65480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65480);
  }
  return result;
}

unint64_t sub_1B59CEF3C()
{
  unint64_t result = qword_1E9D65488;
  if (!qword_1E9D65488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65488);
  }
  return result;
}

uint64_t sub_1B59CEF90()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B59CEFDC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  return sub_1B59CF00C(a4, 0xFuLL, a1, a2, a3);
}

uint64_t sub_1B59CF00C(char *a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  v226 = a1;
  uint64_t v215 = sub_1B5A1C2B8();
  uint64_t v214 = *(void *)(v215 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v215);
  v219 = (char *)&v209 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v212 = (char *)&v209 - v12;
  uint64_t v220 = *(void *)(a5 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v213 = (char *)&v209 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v211 = (char *)&v209 - v15;
  uint64_t v227 = a5;
  uint64_t v16 = type metadata accessor for Referenceable();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v222 = (char *)&v209 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v229 = (char *)&v209 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v217 = (char *)&v209 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  v231 = (char *)&v209 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v225 = (char *)&v209 - v27;
  MEMORY[0x1F4188790](v26);
  v234 = (char *)&v209 - v28;
  uint64_t v29 = sub_1B5A1C2B8();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  v228 = (char *)&v209 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  v223 = (char *)&v209 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  v253 = (char *)&v209 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  v218 = (char *)&v209 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  v216 = (uint64_t *)((char *)&v209 - v40);
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  v221 = (char *)&v209 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  v230 = (uint64_t *)((char *)&v209 - v44);
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  v232 = (char *)&v209 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  v224 = (uint64_t *)((char *)&v209 - v48);
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  v237 = (char *)&v209 - v50;
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  v238 = (uint64_t *)((char *)&v209 - v52);
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  v233 = (uint64_t *)((char *)&v209 - v54);
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  v241 = (char *)&v209 - v56;
  MEMORY[0x1F4188790](v55);
  unint64_t v58 = (char *)&v209 - v57;
  v248 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v249 = v17 + 56;
  v248((char *)&v209 - v57, 1, 1, v16);
  uint64_t v59 = a3 & 0xFFFFFFFFFFFFLL;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v59 = HIBYTE(a4) & 0xF;
  }
  uint64_t v60 = (unsigned int (*)(char *, uint64_t, uint64_t))(a2 >> 14);
  v257 = (unsigned int (*)(char *, uint64_t, uint64_t))(4 * v59);
  v244 = v58;
  uint64_t v236 = v17;
  uint64_t v235 = v30;
  unint64_t v255 = a4;
  uint64_t v256 = a3;
  if (a2 >> 14 == 4 * v59)
  {
    uint64_t v61 = 7;
    if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0) {
      uint64_t v61 = 11;
    }
    v247 = (uint64_t (**)(char *, uint64_t))(v61 | (v59 << 16));
    unint64_t v262 = a2;
    unint64_t v62 = a2;
    uint64_t v63 = v253;
    goto LABEL_7;
  }
  uint64_t v210 = v59;
  uint64_t v252 = v29;
  LOBYTE(v29) = 0;
  unint64_t v250 = v30 + 16;
  v246 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v240 = (void (**)(char *, char *, uint64_t))(v17 + 32);
  v239 = (void (**)(char *, uint64_t))(v17 + 8);
  v247 = (uint64_t (**)(char *, uint64_t))(v30 + 8);
  v245 = (void (**)(char *, uint64_t *, uint64_t))(v30 + 32);
  unint64_t v62 = a2;
  do
  {
    if (v29) {
      unint64_t v62 = a2;
    }
    unint64_t v262 = a2;
    uint64_t v88 = sub_1B5A1C018();
    char v89 = v87;
    if (v88 == 46 && v87 == (void (*)(char *, char *, uint64_t))0xE100000000000000
      || (sub_1B5A1C678() & 1) != 0)
    {
      unint64_t v90 = v62 >> 14;
      if ((unsigned int (*)(char *, uint64_t, uint64_t))(v62 >> 14) != v60)
      {
        v254 = v89;
        long long v91 = v241;
        uint64_t v92 = v252;
        (*(void (**)(char *, char *, uint64_t))v250)(v241, v58, v252);
        if ((*v246)(v91, 1, v16) == 1)
        {
          uint64_t v93 = v16;
          uint64_t v94 = *v247;
          uint64_t result = (*v247)(v91, v92);
          if ((unint64_t)v60 < v90)
          {
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
            goto LABEL_100;
          }
          uint64_t v95 = sub_1B5A1C038();
          uint64_t v96 = MEMORY[0x1BA9A3760](v95);
          uint64_t v98 = v97;
          swift_bridgeObjectRelease();
          uint64_t v99 = v244;
          v94(v244, v92);
          uint64_t v100 = v238;
          uint64_t *v238 = v96;
          v100[1] = v98;
          v100[2] = 0xF000000000000007;
          uint64_t v16 = v93;
          unint64_t v58 = v99;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          uint64_t v106 = v234;
          (*v240)(v234, v91, v16);
          uint64_t result = swift_allocObject();
          if ((unint64_t)v60 < v90) {
            goto LABEL_97;
          }
          unint64_t v107 = result;
          uint64_t v108 = sub_1B5A1C038();
          uint64_t v109 = MEMORY[0x1BA9A3760](v108);
          uint64_t v111 = v110;
          swift_bridgeObjectRelease();
          *(void *)(v107 + 16) = v109;
          *(void *)(v107 + 24) = v111;
          *(void *)(v107 + 32) = 0;
          *(unsigned char *)(v107 + 40) = 0;
          *(void *)(v107 + 48) = 0xF000000000000007;
          unint64_t v258 = v107;
          uint64_t v112 = v233;
          uint64_t v113 = v251;
          Referenceable.addingSubReference(subReference:)((uint64_t)&v258, v16, v233);
          if (v113)
          {
            swift_release();
            swift_bridgeObjectRelease();
            (*v239)(v106, v16);
            return (*v247)(v58, v252);
          }
          uint64_t v251 = 0;
          swift_release();
          (*v239)(v106, v16);
          uint64_t v92 = v252;
          (*v247)(v58, v252);
          uint64_t v100 = v112;
        }
        v248((char *)v100, 0, 1, v16);
        (*v245)(v58, v100, v92);
        char v89 = v254;
        a4 = v255;
      }
      if (v88 == 91 && v89 == (void (*)(char *, char *, uint64_t))0xE100000000000000)
      {
        unint64_t v62 = 0;
        LODWORD(v29) = 1;
      }
      else
      {
        sub_1B5A1C678();
        unint64_t v62 = 0;
        LODWORD(v29) = 1;
        if (v88 == 93 && v89 == (void (*)(char *, char *, uint64_t))0xE100000000000000)
        {
LABEL_55:
          swift_bridgeObjectRelease();
          unint64_t v62 = 0;
LABEL_56:
          a2 = v262;
          uint64_t v115 = v256;
          goto LABEL_57;
        }
      }
      goto LABEL_35;
    }
    char v101 = v237;
    if ((v88 != 91 || v89 != (void (*)(char *, char *, uint64_t))0xE100000000000000)
      && (sub_1B5A1C678() & 1) == 0)
    {
      LODWORD(v29) = 0;
      if (v88 != 93 || v89 != (void (*)(char *, char *, uint64_t))0xE100000000000000) {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      a2 = v262;
LABEL_79:
      uint64_t v173 = *(void (**)(char *, char *, uint64_t))v250;
      unint64_t v174 = v221;
      uint64_t v175 = v252;
      (*(void (**)(char *, char *, uint64_t))v250)(v221, v58, v252);
      v257 = *v246;
      unint64_t v176 = a2 >> 14;
      unint64_t v177 = v62 >> 14;
      if (v257(v174, 1, v16) == 1)
      {
        uint64_t v243 = v16;
        v178 = *v247;
        uint64_t result = (*v247)(v174, v175);
        unint64_t v262 = a2;
        if (v227 == MEMORY[0x1E4FBB550])
        {
          if (v176 < v177) {
            goto LABEL_105;
          }
          uint64_t v179 = sub_1B5A1C038();
          uint64_t v180 = MEMORY[0x1BA9A3760](v179);
          unint64_t v182 = v181;
          swift_bridgeObjectRelease();
          unint64_t v258 = sub_1B59B9FA8(v180, v182);
          LOBYTE(v259) = v183 & 1;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651A0);
          v184 = v212;
          char v185 = swift_dynamicCast();
          uint64_t v186 = v220;
          v187 = *(void (**)(char *, void, uint64_t, void))(v220 + 56);
          if (v185)
          {
            v187(v184, 0, 1, MEMORY[0x1E4FBB550]);
            v188 = v184;
            uint64_t v189 = v252;
            v178(v58, v252);
            v190 = *(void (**)(char *, char *, void))(v186 + 32);
            v191 = v211;
            v190(v211, v188, MEMORY[0x1E4FBB550]);
            v190(v58, v191, MEMORY[0x1E4FBB550]);
            uint64_t v192 = v243;
            swift_storeEnumTagMultiPayload();
            v248(v58, 0, 1, v192);
LABEL_92:
            v207 = v218;
            v173(v218, v58, v189);
            if (v257(v207, 1, v192) == 1)
            {
              v178(v207, v189);
              sub_1B59619AC();
              swift_allocError();
              *(void *)uint64_t v208 = 2;
              *(void *)(v208 + 8) = 0;
              *(void *)(v208 + 16) = 0;
              *(void *)(v208 + 24) = 0;
              *(unsigned char *)(v208 + 32) = 5;
              swift_willThrow();
              return v178(v58, v189);
            }
            else
            {
              v178(v58, v189);
              (*v240)(v226, v207, v192);
              return v262;
            }
          }
          v187(v184, 1, 1, MEMORY[0x1E4FBB550]);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v184, v215);
        }
        if (v176 < v177) {
          goto LABEL_104;
        }
        uint64_t v202 = sub_1B5A1C038();
        uint64_t v203 = MEMORY[0x1BA9A3760](v202);
        uint64_t v205 = v204;
        swift_bridgeObjectRelease();
        uint64_t v189 = v252;
        v178(v58, v252);
        v206 = v238;
        uint64_t *v238 = v203;
        v206[1] = v205;
        v206[2] = 0xF000000000000007;
        uint64_t v192 = v243;
        swift_storeEnumTagMultiPayload();
        v248((char *)v206, 0, 1, v192);
        (*v245)(v58, v206, v189);
        goto LABEL_92;
      }
      v254 = v173;
      v193 = v217;
      (*v240)(v217, v174, v16);
      uint64_t result = swift_allocObject();
      if (v176 < v177) {
        goto LABEL_103;
      }
      unint64_t v194 = result;
      uint64_t v195 = sub_1B5A1C038();
      unint64_t v196 = a2;
      uint64_t v197 = MEMORY[0x1BA9A3760](v195);
      uint64_t v199 = v198;
      swift_bridgeObjectRelease();
      *(void *)(v194 + 16) = v197;
      *(void *)(v194 + 24) = v199;
      *(void *)(v194 + 32) = 0;
      *(unsigned char *)(v194 + 40) = 0;
      *(void *)(v194 + 48) = 0xF000000000000007;
      unint64_t v258 = v194;
      v200 = v216;
      uint64_t v201 = v251;
      Referenceable.addingSubReference(subReference:)((uint64_t)&v258, v16, v216);
      if (v201)
      {
        swift_release();
        (*v239)(v193, v16);
        return (*v247)(v58, v252);
      }
      unint64_t v262 = v196;
      swift_release();
      (*v239)(v193, v16);
      uint64_t v192 = v16;
      v178 = *v247;
      uint64_t v189 = v252;
      (*v247)(v58, v252);
      v248((char *)v200, 0, 1, v192);
      (*v245)(v58, v200, v189);
      uint64_t v173 = v254;
      goto LABEL_92;
    }
    unint64_t v102 = v62 >> 14;
    v254 = v89;
    if ((unsigned int (*)(char *, uint64_t, uint64_t))(v62 >> 14) == v60)
    {
      uint64_t v104 = v251;
      uint64_t v103 = v252;
      uint64_t v105 = (void (**)(char *, uint64_t))v247;
    }
    else
    {
      uint64_t v116 = v252;
      (*(void (**)(char *, char *, uint64_t))v250)(v101, v58, v252);
      if ((*v246)(v101, 1, v16) == 1)
      {
        uint64_t v243 = v16;
        uint64_t v117 = (void (**)(char *, uint64_t))v247;
        uint64_t v118 = *v247;
        uint64_t result = (*v247)(v101, v116);
        if ((unint64_t)v60 < v102) {
          goto LABEL_98;
        }
        uint64_t v119 = sub_1B5A1C038();
        uint64_t v120 = MEMORY[0x1BA9A3760](v119);
        uint64_t v122 = v121;
        swift_bridgeObjectRelease();
        uint64_t v123 = v244;
        v118(v244, v116);
        uint64_t v124 = v238;
        uint64_t *v238 = v120;
        v124[1] = v122;
        v124[2] = 0xF000000000000007;
        uint64_t v16 = v243;
        uint64_t v125 = v123;
        swift_storeEnumTagMultiPayload();
        uint64_t v126 = v124;
        uint64_t v103 = v116;
        uint64_t v104 = v251;
        uint64_t v105 = v117;
        unint64_t v58 = v125;
      }
      else
      {
        uint64_t v127 = v225;
        (*v240)(v225, v101, v16);
        uint64_t result = swift_allocObject();
        if ((unint64_t)v60 < v102) {
          goto LABEL_99;
        }
        unint64_t v128 = result;
        uint64_t v129 = sub_1B5A1C038();
        uint64_t v130 = MEMORY[0x1BA9A3760](v129);
        uint64_t v132 = v131;
        swift_bridgeObjectRelease();
        *(void *)(v128 + 16) = v130;
        *(void *)(v128 + 24) = v132;
        *(void *)(v128 + 32) = 0;
        *(unsigned char *)(v128 + 40) = 0;
        *(void *)(v128 + 48) = 0xF000000000000007;
        unint64_t v258 = v128;
        uint64_t v133 = v224;
        uint64_t v134 = v127;
        uint64_t v135 = v251;
        Referenceable.addingSubReference(subReference:)((uint64_t)&v258, v16, v224);
        uint64_t v104 = v135;
        if (v135)
        {
          swift_release();
          swift_bridgeObjectRelease();
          (*v239)(v134, v16);
          return (*v247)(v58, v252);
        }
        swift_release();
        (*v239)(v134, v16);
        uint64_t v105 = (void (**)(char *, uint64_t))v247;
        uint64_t v103 = v252;
        (*v247)(v58, v252);
        uint64_t v126 = v133;
      }
      v248((char *)v126, 0, 1, v16);
      (*v245)(v58, v126, v103);
    }
    unint64_t v136 = v255;
    uint64_t v137 = v256;
    unint64_t v138 = sub_1B5A1BF98();
    unint64_t v262 = sub_1B59B83CC((unint64_t)&v258, v138, v137, v136);
    if (v104)
    {
      (*v105)(v58, v103);
      return swift_bridgeObjectRelease();
    }
    uint64_t v139 = v103;
    char v140 = v58;
    uint64_t v141 = v258;
    uint64_t v142 = v259;
    uint64_t v242 = v260;
    LODWORD(v243) = v261;
    uint64_t v143 = v232;
    (*(void (**)(char *, char *, uint64_t))v250)(v232, v140, v139);
    if ((*v246)(v143, 1, v16) == 1)
    {
      swift_bridgeObjectRelease();
      v169 = v143;
      uint64_t v170 = *v247;
      uint64_t v171 = v252;
      (*v247)(v169, v252);
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v172 = 2;
      *(void *)(v172 + 8) = 0;
      *(void *)(v172 + 16) = 0;
      *(void *)(v172 + 24) = 0;
      *(unsigned char *)(v172 + 32) = 5;
      swift_willThrow();
      sub_1B590D6F0(v141, v142, v242, v243);
      return v170(v244, v171);
    }
    uint64_t v29 = (uint64_t)v231;
    (*v240)(v231, v143, v16);
    uint64_t v144 = swift_allocObject();
    *(void *)(v144 + 16) = v141;
    *(void *)(v144 + 24) = v142;
    uint64_t v145 = v242;
    *(void *)(v144 + 32) = v242;
    char v146 = v243;
    *(unsigned char *)(v144 + 40) = v243;
    *(void *)(v144 + 48) = 0xF000000000000007;
    unint64_t v258 = v144 | 0x8000000000000000;
    sub_1B590D634(v141, v142, v145, v146);
    uint64_t v147 = v230;
    Referenceable.addingSubReference(subReference:)((uint64_t)&v258, v16, v230);
    sub_1B590D6F0(v141, v142, v242, v243);
    swift_release();
    (*v239)((char *)v29, v16);
    unint64_t v58 = v244;
    uint64_t v148 = v252;
    (*v247)(v244, v252);
    LODWORD(v29) = 1;
    v248((char *)v147, 0, 1, v16);
    (*v245)(v58, v147, v148);
    unint64_t v62 = 0;
    uint64_t v251 = 0;
    if (v88 == 93)
    {
      a4 = v255;
      if (v254 == (void (*)(char *, char *, uint64_t))0xE100000000000000) {
        goto LABEL_55;
      }
    }
    else
    {
      a4 = v255;
    }
LABEL_35:
    char v114 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_56;
    }
    a2 = v262;
    uint64_t v115 = v256;
    if (v114) {
      goto LABEL_79;
    }
LABEL_57:
    uint64_t v60 = (unsigned int (*)(char *, uint64_t, uint64_t))(a2 >> 14);
    if ((unsigned int (*)(char *, uint64_t, uint64_t))(a2 >> 14) != v257)
    {
      a2 = sub_1B5A1BF98();
      uint64_t v60 = (unsigned int (*)(char *, uint64_t, uint64_t))(a2 >> 14);
    }
    uint64_t v63 = v253;
  }
  while (v60 != v257);
  uint64_t v157 = 7;
  if (((a4 >> 60) & ((v115 & 0x800000000000000) == 0)) != 0) {
    uint64_t v157 = 11;
  }
  v247 = (uint64_t (**)(char *, uint64_t))(v157 | (v210 << 16));
  if (v29)
  {
    unint64_t v158 = *(void (**)(char *, char *, uint64_t))v250;
    unint64_t v250 = v250 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v82 = v252;
    uint64_t v85 = v236;
    uint64_t v86 = v235;
    goto LABEL_73;
  }
  unint64_t v262 = a2;
  uint64_t v29 = v252;
LABEL_7:
  uint64_t v64 = v235;
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v235 + 16);
  unint64_t v250 = (v235 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v254 = v65;
  v65(v63, v58, v29);
  uint64_t v66 = v63;
  uint64_t v67 = v236;
  unint64_t v68 = v62 >> 14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v236 + 48))(v66, 1, v16) == 1)
  {
    uint64_t v243 = v16;
    char v69 = *(void (**)(void))(v64 + 8);
    uint64_t v70 = v29;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v69)(v66, v29);
    if (v227 != MEMORY[0x1E4FBB550]) {
      goto LABEL_70;
    }
    if ((unint64_t)v257 >= v68)
    {
      uint64_t v72 = sub_1B5A1C038();
      uint64_t v73 = MEMORY[0x1BA9A3760](v72);
      unint64_t v75 = v74;
      swift_bridgeObjectRelease();
      unint64_t v258 = sub_1B59B9FA8(v73, v75);
      LOBYTE(v259) = v76 & 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D651A0);
      uint64_t v77 = v219;
      char v78 = swift_dynamicCast();
      uint64_t v79 = v220;
      uint64_t v80 = *(void (**)(char *, void, uint64_t, void))(v220 + 56);
      if (v78)
      {
        uint64_t v81 = MEMORY[0x1E4FBB550];
        v80(v77, 0, 1, MEMORY[0x1E4FBB550]);
        uint64_t v82 = v70;
        unint64_t v58 = v244;
        v69();
        uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
        uint64_t v84 = v213;
        v83(v213, v77, v81);
        v83(v58, v84, v81);
        uint64_t v16 = v243;
        swift_storeEnumTagMultiPayload();
        v248(v58, 0, 1, v16);
        uint64_t v85 = v236;
        uint64_t v86 = v235;
LABEL_72:
        unint64_t v158 = v254;
LABEL_73:
        uint64_t v165 = v228;
        v158(v228, v58, v82);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v165, 1, v16) == 1)
        {
          uint64_t v166 = *(void (**)(char *, uint64_t))(v86 + 8);
          v166(v165, v82);
          sub_1B59619AC();
          swift_allocError();
          *(void *)uint64_t v167 = 5;
          *(void *)(v167 + 8) = 0;
          *(void *)(v167 + 16) = 0;
          *(void *)(v167 + 24) = 0;
          *(unsigned char *)(v167 + 32) = 5;
          swift_willThrow();
          return ((uint64_t (*)(char *, uint64_t))v166)(v58, v82);
        }
        else
        {
          v168 = v222;
          (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v222, v165, v16);
          (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v226, v168, v16);
          (*(void (**)(char *, uint64_t))(v85 + 8))(v168, v16);
          (*(void (**)(char *, uint64_t))(v86 + 8))(v58, v82);
          return (uint64_t)v247;
        }
      }
      v80(v77, 1, 1, MEMORY[0x1E4FBB550]);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v77, v215);
LABEL_70:
      if ((unint64_t)v257 >= v68)
      {
        uint64_t v159 = sub_1B5A1C038();
        uint64_t v160 = MEMORY[0x1BA9A3760](v159);
        uint64_t v162 = v161;
        swift_bridgeObjectRelease();
        uint64_t v163 = v70;
        unint64_t v58 = v244;
        v69();
        uint64_t v164 = v238;
        uint64_t *v238 = v160;
        v164[1] = v162;
        v164[2] = 0xF000000000000007;
        uint64_t v16 = v243;
        swift_storeEnumTagMultiPayload();
        v248((char *)v164, 0, 1, v16);
        uint64_t v86 = v235;
        (*(void (**)(char *, uint64_t *, uint64_t))(v235 + 32))(v58, v164, v163);
        uint64_t v82 = v163;
        uint64_t v85 = v236;
        goto LABEL_72;
      }
LABEL_101:
      __break(1u);
    }
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v229, v66, v16);
  uint64_t result = swift_allocObject();
  if ((unint64_t)v257 < v68)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  unint64_t v149 = result;
  uint64_t v82 = v29;
  uint64_t v150 = sub_1B5A1C038();
  uint64_t v151 = MEMORY[0x1BA9A3760](v150);
  uint64_t v153 = v152;
  swift_bridgeObjectRelease();
  *(void *)(v149 + 16) = v151;
  *(void *)(v149 + 24) = v153;
  uint64_t v154 = v229;
  *(void *)(v149 + 32) = 0;
  *(unsigned char *)(v149 + 40) = 0;
  *(void *)(v149 + 48) = 0xF000000000000007;
  unint64_t v258 = v149;
  uint64_t v155 = v223;
  uint64_t v156 = v251;
  Referenceable.addingSubReference(subReference:)((uint64_t)&v258, v16, v223);
  if (!v156)
  {
    swift_release();
    uint64_t v85 = v236;
    (*(void (**)(char *, uint64_t))(v236 + 8))(v154, v16);
    uint64_t v86 = v235;
    (*(void (**)(char *, uint64_t))(v235 + 8))(v58, v82);
    v248(v155, 0, 1, v16);
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v58, v155, v82);
    goto LABEL_72;
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v236 + 8))(v154, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v235 + 8))(v58, v82);
}

uint64_t sub_1B59D0BD8()
{
  return objectdestroyTm_4((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59D0BF0()
{
  return objectdestroyTm_4((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t objectdestroyTm_4(void (*a1)(void, void, void, void))
{
  a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  if ((~*(void *)(v1 + 48) & 0xF000000000000007) != 0) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v1, 56, 7);
}

uint64_t sub_1B59D0C68()
{
  uint64_t v0 = sub_1B5A1A328();
  __swift_allocate_value_buffer(v0, qword_1E9D910D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9D910D0);
  return sub_1B5A1A318();
}

void destroy for PaddingModifier(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), v1);
  }
}

uint64_t initializeWithCopy for PaddingModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unsigned int v3 = *(unsigned __int8 *)(a2 + 32);
  if (v3 <= 0xFD)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v5 = *(void *)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 24);
    sub_1B591DF88(v4, v5, v6, v3);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = v3;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  }
  return a1;
}

uint64_t assignWithCopy for PaddingModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unsigned int v3 = (_OWORD *)(a1 + 8);
  uint64_t v4 = (_OWORD *)(a2 + 8);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) <= 0xFDu)
  {
    if (v5 <= 0xFD)
    {
      uint64_t v11 = *(void *)(a2 + 8);
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      sub_1B591DF88(v11, v12, v13, v5);
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v16 = *(void *)(a1 + 24);
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      char v17 = *(unsigned char *)(a1 + 32);
      *(unsigned char *)(a1 + 32) = v5;
      sub_1B591DF0C(v14, v15, v16, v17);
    }
    else
    {
      sub_1B59316FC(a1 + 8);
      long long v7 = *(_OWORD *)((char *)v4 + 9);
      *unsigned int v3 = *v4;
      *(_OWORD *)((char *)v3 + 9) = v7;
    }
  }
  else if (v5 <= 0xFD)
  {
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    sub_1B591DF88(v8, v9, v10, v5);
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v5;
  }
  else
  {
    long long v6 = *v4;
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
    *unsigned int v3 = v6;
  }
  return a1;
}

uint64_t assignWithTake for PaddingModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unsigned int v3 = (_OWORD *)(a1 + 8);
  uint64_t v4 = (_OWORD *)(a2 + 8);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 32);
  if (v5 <= 0xFD)
  {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 32);
    if (v6 <= 0xFD)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(void *)(a1 + 24) = v7;
      *(unsigned char *)(a1 + 32) = v6;
      sub_1B591DF0C(v8, v9, v10, v5);
      return a1;
    }
    sub_1B59316FC(a1 + 8);
  }
  *unsigned int v3 = *v4;
  *(_OWORD *)((char *)v3 + 9) = *(_OWORD *)((char *)v4 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaddingModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if ((v3 & 0x7E) != 0) {
    int v4 = 126 - (v3 & 0x7E | (v3 >> 7));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaddingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      *(unsigned char *)(result + 32) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaddingModifier()
{
  return &type metadata for PaddingModifier;
}

uint64_t sub_1B59D0FD0(char a1)
{
  if (a1) {
    return 0x6874676E656CLL;
  }
  else {
    return 0x7365676465;
  }
}

uint64_t sub_1B59D1000(char *a1, char *a2)
{
  return sub_1B59EEA6C(*a1, *a2);
}

uint64_t sub_1B59D100C()
{
  return sub_1B59F1D5C();
}

uint64_t sub_1B59D1014()
{
  return sub_1B59F3FC8();
}

uint64_t sub_1B59D101C()
{
  return sub_1B59F5E60();
}

uint64_t sub_1B59D1024@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59D1084@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59D0FD0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59D10B0()
{
  return sub_1B59D0FD0(*v0);
}

uint64_t sub_1B59D10B8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59D111C(uint64_t a1)
{
  unint64_t v2 = sub_1B59D166C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59D1158(uint64_t a1)
{
  unint64_t v2 = sub_1B59D166C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59D1194@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65498);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59D166C();
  sub_1B5A1C838();
  if (!v2)
  {
    char v18 = 0;
    sub_1B59D16C0();
    sub_1B5A1C5B8();
    switch((char)v15)
    {
      case 1:
        char v9 = sub_1B5A1B158();
        break;
      case 2:
        char v9 = sub_1B5A1B148();
        break;
      case 3:
        char v9 = sub_1B5A1B168();
        break;
      case 4:
      case 7:
        char v9 = sub_1B5A1B128();
        break;
      case 5:
        char v9 = sub_1B5A1B118();
        break;
      case 6:
        char v9 = sub_1B5A1B178();
        break;
      default:
        char v9 = sub_1B5A1B138();
        break;
    }
    char v10 = v9;
    char v18 = 1;
    sub_1B59358E8();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v11 = v16;
    char v12 = v17;
    long long v13 = v15;
    *(unsigned char *)a2 = v10;
    *(_OWORD *)(a2 + 8) = v13;
    *(void *)(a2 + 24) = v11;
    *(unsigned char *)(a2 + 32) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59D13F0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned int v6 = *(unsigned __int8 *)(v3 + 32);
  if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(v3 + 8);
    uint64_t v10 = *(void *)(v3 + 16);
    uint64_t v11 = *(void *)(v3 + 24);
    sub_1B591DF88(v9, v10, v11, v6);
    sub_1B5963534(a2);
    sub_1B59325C0(v9, v10, v11, v6);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3[3] = sub_1B5A1A748();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B718();
}

uint64_t sub_1B59D15C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59D13F0(a1, a2, a3);
}

uint64_t sub_1B59D15D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59D1194(a1, a2);
}

unint64_t sub_1B59D15F0(uint64_t a1)
{
  unint64_t result = sub_1B59D1618();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D1618()
{
  unint64_t result = qword_1E9D65490;
  if (!qword_1E9D65490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65490);
  }
  return result;
}

unint64_t sub_1B59D166C()
{
  unint64_t result = qword_1E9D654A0;
  if (!qword_1E9D654A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D654A0);
  }
  return result;
}

unint64_t sub_1B59D16C0()
{
  unint64_t result = qword_1E9D654A8;
  if (!qword_1E9D654A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D654A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PaddingModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59D17E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaddingModifier.CodingKeys()
{
  return &type metadata for PaddingModifier.CodingKeys;
}

unint64_t sub_1B59D181C()
{
  unint64_t result = qword_1E9D654B0;
  if (!qword_1E9D654B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D654B0);
  }
  return result;
}

unint64_t sub_1B59D1874()
{
  unint64_t result = qword_1E9D654B8;
  if (!qword_1E9D654B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D654B8);
  }
  return result;
}

unint64_t sub_1B59D18CC()
{
  unint64_t result = qword_1E9D654C0;
  if (!qword_1E9D654C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D654C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityRemoveTraitsModifier()
{
  return &type metadata for AccessibilityRemoveTraitsModifier;
}

ValueMetadata *type metadata accessor for AccessibilityAddTraitsModifier()
{
  return &type metadata for AccessibilityAddTraitsModifier;
}

unint64_t sub_1B59D1940(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_1B590D634(*(void *)a2, v8, v9, v10);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = *(int *)(a3 + 20);
    char v12 = (char *)(a1 + v11);
    long long v13 = (char *)(a2 + v11);
    uint64_t v14 = sub_1B5A1B088();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654C8);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    char v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654D0);
    v12[v18[9]] = v13[v18[9]];
    *(void *)&v12[v18[10]] = *(void *)&v13[v18[10]];
    v12[v18[11]] = v13[v18[11]];
  }
  swift_retain();
  return a1;
}

uint64_t sub_1B59D1B0C(uint64_t a1, uint64_t a2)
{
  sub_1B590D6F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B5A1B088();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654D0);
  return swift_release();
}

uint64_t sub_1B59D1BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_1B590D634(*(void *)a2, v7, v8, v9);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)(a1 + v10);
  char v12 = (char *)(a2 + v10);
  uint64_t v13 = sub_1B5A1B088();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654C8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654D0);
  v11[v16[9]] = v12[v16[9]];
  *(void *)&v11[v16[10]] = *(void *)&v12[v16[10]];
  v11[v16[11]] = v12[v16[11]];
  swift_retain();
  return a1;
}

uint64_t sub_1B59D1D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_1B590D634(*(void *)a2, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  sub_1B590D6F0(v10, v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = sub_1B5A1B088();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v7) = v19(v15, 1, v17);
  int v20 = v19(v16, 1, v17);
  if (!v7)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654C8);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  uint64_t v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654D0);
  v15[v22[9]] = v16[v22[9]];
  *(void *)&v15[v22[10]] = *(void *)&v16[v22[10]];
  swift_retain();
  swift_release();
  v15[v22[11]] = v16[v22[11]];
  return a1;
}

_OWORD *sub_1B59D1F60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1B5A1B088();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654C8);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654D0);
  v5[v10[9]] = v6[v10[9]];
  *(void *)&v5[v10[10]] = *(void *)&v6[v10[10]];
  v5[v10[11]] = v6[v10[11]];
  return a1;
}

uint64_t sub_1B59D20AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B590D6F0(v8, v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 20);
  char v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = sub_1B5A1B088();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654C8);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654D0);
  v13[v21[9]] = v14[v21[9]];
  *(void *)&v13[v21[10]] = *(void *)&v14[v21[10]];
  swift_release();
  v13[v21[11]] = v14[v21[11]];
  return a1;
}

uint64_t sub_1B59D2288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B59D229C);
}

uint64_t sub_1B59D229C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654D0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1B59D2348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B59D235C);
}

uint64_t sub_1B59D235C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 24) = -(char)a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D654D0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AccessibilityFocusedModifier()
{
  uint64_t result = qword_1E9D654D8;
  if (!qword_1E9D654D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B59D2450()
{
  sub_1B59D24E8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1B59D24E8()
{
  if (!qword_1E9D654E8)
  {
    unint64_t v0 = sub_1B5A1B058();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9D654E8);
    }
  }
}

ValueMetadata *type metadata accessor for AccessibilityHeadingModifier()
{
  return &type metadata for AccessibilityHeadingModifier;
}

ValueMetadata *type metadata accessor for AccessibilityChildrenModifier()
{
  return &type metadata for AccessibilityChildrenModifier;
}

ValueMetadata *type metadata accessor for AccessibilityElementModifier()
{
  return &type metadata for AccessibilityElementModifier;
}

uint64_t destroy for AccessibilityActionModifier(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 0xFD)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    uint64_t v6 = *(void *)(a1 + 24);
    return sub_1B5904A88(v4, v5, v6, v3);
  }
  return result;
}

uint64_t initializeWithCopy for AccessibilityActionModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    sub_1B5904B60(v6, v7, v8, v5);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = v5;
  }
  else
  {
    *uint64_t v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  }
  return a1;
}

uint64_t assignWithCopy for AccessibilityActionModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 8);
  unsigned int v5 = (_OWORD *)(a2 + 8);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 8);
      uint64_t v13 = *(void *)(a2 + 16);
      uint64_t v14 = *(void *)(a2 + 24);
      sub_1B5904B60(v12, v13, v14, v6);
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = *(void *)(a1 + 16);
      uint64_t v17 = *(void *)(a1 + 24);
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 32);
      *(unsigned char *)(a1 + 32) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 8);
      long long v8 = *(_OWORD *)(a2 + 17);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 17) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 16);
    uint64_t v11 = *(void *)(a2 + 24);
    sub_1B5904B60(v9, v10, v11, v6);
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    *(unsigned char *)(a1 + 32) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
    *uint64_t v4 = v7;
  }
  return a1;
}

uint64_t assignWithTake for AccessibilityActionModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 <= 0xFD)
  {
    unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 <= 0xFD)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(void *)(a1 + 24) = v6;
      *(unsigned char *)(a1 + 32) = v5;
      sub_1B5904A88(v7, v8, v9, v4);
      return a1;
    }
    sub_1B590DA50(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilityActionModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityActionModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityActionModifier()
{
  return &type metadata for AccessibilityActionModifier;
}

ValueMetadata *type metadata accessor for AccessibilityHintModifier()
{
  return &type metadata for AccessibilityHintModifier;
}

ValueMetadata *type metadata accessor for AccessibilityValueModifier()
{
  return &type metadata for AccessibilityValueModifier;
}

ValueMetadata *type metadata accessor for AccessibilityHiddenModifier()
{
  return &type metadata for AccessibilityHiddenModifier;
}

ValueMetadata *type metadata accessor for AccessibilityIdentifierModifier()
{
  return &type metadata for AccessibilityIdentifierModifier;
}

ValueMetadata *type metadata accessor for AccessibilityLabelModifier()
{
  return &type metadata for AccessibilityLabelModifier;
}

uint64_t sub_1B59D2918@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B59D2924@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59D693C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B59D2950@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B59D295C(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5D98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59D2998(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5D98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59D29D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59D2E1C(a1, &qword_1E9D655F0, (void (*)(void))sub_1B59D5D98, MEMORY[0x1E4FBBDB8], a2);
}

uint64_t sub_1B59D2A30@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B59D2A3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59D697C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B59D2A68@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B59D2A74(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5D44();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59D2AB0(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5D44();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59D2AEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59D2E1C(a1, &qword_1E9D655E0, (void (*)(void))sub_1B59D5D44, MEMORY[0x1E4FBBDB8], a2);
}

uint64_t sub_1B59D2B3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AccessibilityFocusedModifier();
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)&v8[*(int *)(v6 + 28)];
  sub_1B5A1B048();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B5908FC0(v9, &qword_1E9D654D0);
  }
  else
  {
    uint64_t v17 = a2;
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    sub_1B59095C8((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
    sub_1B5A1C6C8();
    uint64_t v10 = v14;
    char v11 = v15;
    *(_OWORD *)uint64_t v8 = v13;
    *((void *)v8 + 2) = v10;
    v8[24] = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    sub_1B59D5B10((uint64_t)v8, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B59D5B74((uint64_t)v8);
  }
}

uint64_t sub_1B59D2CEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59D2B3C(a1, a2);
}

uint64_t sub_1B59D2D10@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B59D2D1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59D6950();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B59D2D48@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B59D2D54(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5C24();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59D2D90(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5C24();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59D2DCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59D2E1C(a1, &qword_1E9D655C0, (void (*)(void))sub_1B59D5C24, MEMORY[0x1E4FBBDB0], a2);
}

uint64_t sub_1B59D2E1C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, void (*a4)(long long *__return_ptr)@<X4>, uint64_t a5@<X8>)
{
  void (*v20)(long long *__return_ptr);

  uint64_t v20 = a4;
  uint64_t v15 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v16 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1B5A1C838();
  if (!v5)
  {
    uint64_t v11 = v15;
    sub_1B5904A34();
    v20(&v17);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v8);
    uint64_t v12 = v18;
    char v13 = v19;
    *(_OWORD *)uint64_t v11 = v17;
    *(void *)(v11 + 16) = v12;
    *(unsigned char *)(v11 + 24) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59D2FB0@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B59D2FBC@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B59D2FC8(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5BD0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59D3004(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5BD0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59D3040()
{
  return sub_1B5A1BB28();
}

uint64_t sub_1B59D3114(char a1)
{
  if (a1) {
    return 0x694B6E6F69746361;
  }
  else {
    return 0x6E6F69746361;
  }
}

uint64_t sub_1B59D314C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = swift_getOpaqueTypeMetadata2();
  a2[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B5A1B5A8();
}

uint64_t sub_1B59D3250@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B59D56F0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B59D327C(char *a1, char *a2)
{
  return sub_1B59ED08C(*a1, *a2);
}

uint64_t sub_1B59D3288()
{
  return sub_1B59F1DD8();
}

uint64_t sub_1B59D3290()
{
  return sub_1B59F2FF4();
}

uint64_t sub_1B59D3298()
{
  return sub_1B59F709C();
}

uint64_t sub_1B59D32A0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59D3300@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59D3114(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59D332C()
{
  return sub_1B59D3114(*v0);
}

uint64_t sub_1B59D3334@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59D3398(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5C78();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59D33D4(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5C78();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59D3410@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D655D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59D5C78();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
  LOBYTE(v25) = 0;
  sub_1B59D5CCC((unint64_t *)&qword_1E9D64340, &qword_1E9D64338, (void (*)(void))sub_1B5951D18);
  sub_1B5A1C5D8();
  uint64_t v22 = v6;
  uint64_t v23 = v5;
  uint64_t v10 = v29;
  int64_t v11 = *(void *)(v29 + 16);
  if (v11)
  {
    uint64_t v21 = a2;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1B596931C(0, v11, 0);
    v20[1] = v10;
    uint64_t v12 = v10 + 32;
    uint64_t v13 = v28;
    do
    {
      sub_1B5951D6C(v12, (uint64_t)v24);
      sub_1B590CA38((uint64_t)v24, (uint64_t)&v25);
      sub_1B5951DC8((uint64_t)v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B596931C(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v28;
      }
      unint64_t v15 = *(void *)(v13 + 16);
      unint64_t v14 = *(void *)(v13 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1B596931C(v14 > 1, v15 + 1, 1);
        uint64_t v13 = v28;
      }
      *(void *)(v13 + 16) = v15 + 1;
      sub_1B5908BE8(&v25, v13 + 40 * v15 + 32);
      v12 += 40;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a2 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  v24[0] = 1;
  sub_1B5904A34();
  swift_bridgeObjectRetain();
  uint64_t v16 = v23;
  sub_1B5A1C5B8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v16);
  long long v17 = v25;
  uint64_t v18 = v26;
  unsigned __int8 v19 = v27;
  swift_bridgeObjectRetain();
  sub_1B5904BDC(v17, *((uint64_t *)&v17 + 1), v18, v19);
  swift_bridgeObjectRelease();
  *(void *)a2 = v13;
  *(_OWORD *)(a2 + 8) = v17;
  *(void *)(a2 + 24) = v18;
  *(unsigned char *)(a2 + 32) = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1B5904B4C(v17, *((uint64_t *)&v17 + 1), v18, v19);
}

uint64_t sub_1B59D37B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65550);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B5A1B038();
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v16 = v4[1];
  long long v57 = *v4;
  long long v58 = v16;
  unsigned __int8 v59 = *((unsigned char *)v4 + 32);
  unsigned __int8 v17 = v59;
  uint64_t v50 = a2;
  if (v59 > 0xFDu)
  {
    uint64_t v53 = v5;
    uint64_t v18 = v49;
LABEL_15:
    uint64_t v34 = a1[3];
    uint64_t v35 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v34);
    uint64_t v36 = sub_1B59193A4(v57);
    uint64_t v37 = v50;
    uint64_t v38 = v51;
    sub_1B59177F0(v36, v50, v51, v34, v35, &v54);
    swift_bridgeObjectRelease();
    uint64_t v39 = v56;
    __swift_project_boxed_opaque_existential_1(&v54, v56);
    uint64_t v60 = View.anyView.getter(v39);
    uint64_t v40 = swift_allocObject();
    long long v41 = v58;
    *(_OWORD *)(v40 + 16) = v57;
    *(_OWORD *)(v40 + 32) = v41;
    *(unsigned char *)(v40 + 48) = v59;
    *(void *)(v40 + 56) = v37;
    *(void *)(v40 + 64) = v38;
    sub_1B59D5320((uint64_t)&v57);
    swift_retain();
    swift_retain();
    sub_1B5A1B018();
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65558);
    uint64_t v43 = v52;
    v52[3] = v42;
    v43[4] = sub_1B59D537C();
    __swift_allocate_boxed_opaque_existential_1(v43);
    sub_1B5A1B578();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v11);
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
  }
  uint64_t v46 = (char *)&v45 - v15;
  uint64_t v47 = v10;
  uint64_t v48 = v11;
  uint64_t v19 = *((void *)&v57 + 1);
  long long v20 = v58;
  uint64_t v54 = *((void *)&v57 + 1);
  long long v55 = v58;
  LOBYTE(v56) = v59;
  sub_1B5904B60(*((uint64_t *)&v57 + 1), v58, *((uint64_t *)&v58 + 1), v59);
  StringResolvable.resolved(with:)(a2);
  if (v5)
  {

    sub_1B5904B4C(v19, v20, *((uint64_t *)&v20 + 1), v17);
    uint64_t v53 = 0;
    uint64_t v11 = v48;
    uint64_t v18 = v49;
    goto LABEL_15;
  }
  uint64_t v53 = 0;
  sub_1B5904B4C(v19, v20, *((uint64_t *)&v20 + 1), v17);
  uint64_t v21 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v21 == 2)
  {
    uint64_t v22 = (uint64_t)v47;
    sub_1B5A1B028();
    uint64_t v11 = v48;
    uint64_t v18 = v49;
  }
  else
  {
    uint64_t v11 = v48;
    uint64_t v18 = v49;
    if (v21 == 1)
    {
      uint64_t v22 = (uint64_t)v47;
      sub_1B5A1B008();
    }
    else
    {
      if (v21)
      {
        uint64_t v22 = (uint64_t)v47;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v47, 1, 1, v48);
        goto LABEL_14;
      }
      uint64_t v22 = (uint64_t)v47;
      sub_1B5A1B018();
    }
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v22, 1, v11) == 1)
  {
LABEL_14:
    sub_1B5908FC0(v22, &qword_1E9D65550);
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v46, v22, v11);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  uint64_t v25 = sub_1B59193A4(v57);
  uint64_t v26 = v50;
  uint64_t v27 = v51;
  sub_1B59177F0(v25, v50, v51, v23, v24, &v54);
  swift_bridgeObjectRelease();
  uint64_t v28 = v56;
  __swift_project_boxed_opaque_existential_1(&v54, v56);
  uint64_t v60 = View.anyView.getter(v28);
  uint64_t v29 = swift_allocObject();
  long long v30 = v58;
  *(_OWORD *)(v29 + 16) = v57;
  *(_OWORD *)(v29 + 32) = v30;
  *(unsigned char *)(v29 + 48) = v59;
  *(void *)(v29 + 56) = v26;
  *(void *)(v29 + 64) = v27;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65558);
  uint64_t v32 = v52;
  v52[3] = v31;
  v32[4] = sub_1B59D537C();
  __swift_allocate_boxed_opaque_existential_1(v32);
  sub_1B59D5320((uint64_t)&v57);
  swift_retain();
  swift_retain();
  uint64_t v33 = v46;
  sub_1B5A1B578();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v33, v11);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
}

uint64_t sub_1B59D3D38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v13 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  unint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = 0;
  void v14[3] = 0;
  void v14[4] = v12;
  uint64_t v14[5] = a2;
  uint64_t v14[6] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B5924038((uint64_t)v11, a5, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1B59D3E54@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B59D37B4(a1, a2, a3, a4);
}

uint64_t sub_1B59D3E6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59D3410(a1, a2);
}

uint64_t sub_1B59D3E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B59D6998(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B59D3EB4(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5ABC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59D3EF0(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5ABC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59D3F2C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59D407C(a1, a2, MEMORY[0x1E4F3E838], a3);
}

uint64_t sub_1B59D3F58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59D407C(a1, a2, MEMORY[0x1E4F3E838], a3);
}

void *sub_1B59D3F88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B59D58B8(a1, &qword_1E9D655A0, (void (*)(void))sub_1B59D5ABC);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B59D3FD8(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5A68();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59D4014(uint64_t a1)
{
  unint64_t v2 = sub_1B59D5A68();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59D4050@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59D407C(a1, a2, MEMORY[0x1E4F3E8B0], a3);
}

uint64_t sub_1B59D407C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, void, void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v60 = a4;
  uint64_t v61 = a3;
  unsigned __int8 v59 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65578);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v75 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1B5A1ACA8();
  uint64_t v7 = *(void *)(v77 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v77);
  uint64_t v71 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v70 = (char *)v57 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)v57 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  unint64_t v74 = (char *)v57 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  unint64_t v62 = (char *)v57 - v18;
  MEMORY[0x1F4188790](v17);
  long long v58 = (char *)v57 - v19;
  swift_retain();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1B59D5568(v20, a2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v22 = v21[2];
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v76 = v7;
  if (v22)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = v21 + 5;
    uint64_t v25 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      swift_bridgeObjectRetain();
      char v26 = sub_1B59D551C();
      if (v26 != 16)
      {
        char v27 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v25 = sub_1B59BA42C(0, *((void *)v25 + 2) + 1, 1, v25);
        }
        unint64_t v29 = *((void *)v25 + 2);
        unint64_t v28 = *((void *)v25 + 3);
        if (v29 >= v28 >> 1) {
          uint64_t v25 = sub_1B59BA42C((char *)(v28 > 1), v29 + 1, 1, v25);
        }
        *((void *)v25 + 2) = v29 + 1;
        v25[v29 + 32] = v27;
      }
      v24 += 2;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v7 = v76;
  }
  else
  {
    uint64_t v25 = (char *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  int64_t v30 = *((void *)v25 + 2);
  if (v30)
  {
    uint64_t v78 = v23;
    sub_1B59692CC(0, v30, 0);
    uint64_t v31 = 0;
    uint64_t v32 = v78;
    uint64_t v33 = v77;
    do
    {
      switch(v25[v31 + 32])
      {
        case 1:
          sub_1B5A1AC48();
          break;
        case 2:
          sub_1B5A1AC38();
          break;
        case 3:
          sub_1B5A1AB88();
          break;
        case 4:
          sub_1B5A1AC18();
          break;
        case 5:
          sub_1B5A1ABD8();
          break;
        case 6:
          sub_1B5A1AC78();
          break;
        case 7:
          sub_1B5A1ABB8();
          break;
        case 8:
          sub_1B5A1AC58();
          break;
        case 9:
          sub_1B5A1ABC8();
          break;
        case 10:
          sub_1B5A1ABA8();
          break;
        case 11:
          sub_1B5A1ABE8();
          break;
        case 12:
          sub_1B5A1AC88();
          break;
        case 13:
          sub_1B5A1AB98();
          break;
        case 14:
          sub_1B5A1AC08();
          break;
        case 15:
          sub_1B5A1ABF8();
          break;
        default:
          sub_1B5A1AC68();
          break;
      }
      uint64_t v78 = v32;
      unint64_t v35 = *(void *)(v32 + 16);
      unint64_t v34 = *(void *)(v32 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1B59692CC(v34 > 1, v35 + 1, 1);
        uint64_t v33 = v77;
        uint64_t v32 = v78;
      }
      ++v31;
      *(void *)(v32 + 16) = v35 + 1;
      uint64_t v7 = v76;
      (*(void (**)(unint64_t, char *, uint64_t))(v76 + 32))(v32+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v76 + 72) * v35, v14, v33);
    }
    while (v30 != v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = MEMORY[0x1E4FBC860];
    uint64_t v33 = v77;
  }
  uint64_t v36 = v62;
  sub_1B5A1AC98();
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v73 = v7 + 16;
  v72(v74, v36, v33);
  uint64_t v37 = *(void *)(v32 + 16);
  uint64_t v38 = v75;
  if (v37)
  {
    unint64_t v39 = v32 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v67 = *(void *)(v7 + 72);
    unint64_t v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v66 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v64 = (void (**)(char *, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    char v69 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v57[1] = (v7 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v65 = v32;
    long long v41 = v70;
    uint64_t v40 = v71;
    uint64_t v42 = v64;
    while (1)
    {
      v72(v38, (char *)v39, v33);
      uint64_t v43 = *v69;
      (*v69)(v38, 0, 1, v33);
      if ((*v68)(v38, 1, v33) == 1) {
        break;
      }
      uint64_t v63 = v43;
      uint64_t v44 = *v66;
      (*v66)(v41, v75, v33);
      uint64_t v45 = v74;
      sub_1B5A1AC28();
      uint64_t v46 = *v42;
      (*v42)(v41, v77);
      v46(v45, v77);
      uint64_t v33 = v77;
      v44(v45, v40, v77);
      uint64_t v38 = v75;
      v39 += v67;
      if (!--v37)
      {
        v63(v75, 1, 1, v33);
        break;
      }
    }
  }
  else
  {
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v47(v38, 1, 1, v33);
  }
  swift_bridgeObjectRelease();
  uint64_t v48 = v76;
  uint64_t v49 = v58;
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v58, v74, v33);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v48 + 8);
  v50(v62, v33);
  swift_bridgeObjectRelease();
  uint64_t v51 = __swift_project_boxed_opaque_existential_1(v59, v59[3]);
  MEMORY[0x1F4188790](v51);
  (*(void (**)(char *))(v53 + 16))((char *)v57 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_1B5A1BA88();
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65558);
  long long v55 = v60;
  v60[3] = v54;
  v55[4] = sub_1B59D537C();
  __swift_allocate_boxed_opaque_existential_1(v55);
  v61(v49, MEMORY[0x1E4F3EE00], MEMORY[0x1E4F3EDF8]);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v50)(v49, v33);
}

uint64_t sub_1B59D4898@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59D407C(a1, a2, MEMORY[0x1E4F3E8B0], a3);
}

void *sub_1B59D48C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B59D58B8(a1, &qword_1E9D65580, (void (*)(void))sub_1B59D5A68);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1B59D4918(uint64_t a1)
{
  unint64_t result = sub_1B59D4940();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4940()
{
  unint64_t result = qword_1E9D654F0;
  if (!qword_1E9D654F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D654F0);
  }
  return result;
}

unint64_t sub_1B59D4994(uint64_t a1)
{
  unint64_t result = sub_1B59D49BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D49BC()
{
  unint64_t result = qword_1E9D654F8;
  if (!qword_1E9D654F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D654F8);
  }
  return result;
}

uint64_t sub_1B59D4A10(uint64_t a1)
{
  uint64_t result = sub_1B59D5428(&qword_1E9D65500, (void (*)(uint64_t))type metadata accessor for AccessibilityFocusedModifier);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4A68(uint64_t a1)
{
  unint64_t result = sub_1B59D4A90();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4A90()
{
  unint64_t result = qword_1E9D65508;
  if (!qword_1E9D65508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65508);
  }
  return result;
}

unint64_t sub_1B59D4AE4(uint64_t a1)
{
  unint64_t result = sub_1B59D4B0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4B0C()
{
  unint64_t result = qword_1E9D65510;
  if (!qword_1E9D65510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65510);
  }
  return result;
}

unint64_t sub_1B59D4B60(uint64_t a1)
{
  unint64_t result = sub_1B59D4B88();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4B88()
{
  unint64_t result = qword_1E9D65518;
  if (!qword_1E9D65518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65518);
  }
  return result;
}

unint64_t sub_1B59D4BDC(uint64_t a1)
{
  unint64_t result = sub_1B59D4C04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4C04()
{
  unint64_t result = qword_1E9D65520;
  if (!qword_1E9D65520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65520);
  }
  return result;
}

unint64_t sub_1B59D4C58(uint64_t a1)
{
  unint64_t result = sub_1B59D4C80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4C80()
{
  unint64_t result = qword_1E9D65528;
  if (!qword_1E9D65528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65528);
  }
  return result;
}

unint64_t sub_1B59D4CD4(uint64_t a1)
{
  unint64_t result = sub_1B59D4CFC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4CFC()
{
  unint64_t result = qword_1E9D65530;
  if (!qword_1E9D65530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65530);
  }
  return result;
}

unint64_t sub_1B59D4D50(uint64_t a1)
{
  unint64_t result = sub_1B59D4D78();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4D78()
{
  unint64_t result = qword_1E9D65538;
  if (!qword_1E9D65538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65538);
  }
  return result;
}

unint64_t sub_1B59D4DCC(uint64_t a1)
{
  unint64_t result = sub_1B59D4DF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4DF4()
{
  unint64_t result = qword_1E9D65540;
  if (!qword_1E9D65540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65540);
  }
  return result;
}

unint64_t sub_1B59D4E48(uint64_t a1)
{
  unint64_t result = sub_1B59D4E70();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D4E70()
{
  unint64_t result = qword_1E9D65548;
  if (!qword_1E9D65548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65548);
  }
  return result;
}

unint64_t sub_1B59D4EC4(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6567616D497369;
      break;
    case 2:
      unint64_t result = 0x6B6E694C7369;
      break;
    case 3:
      unint64_t result = 0x7463656C65537369;
      break;
    case 4:
      return result;
    case 5:
      unint64_t result = 0x6150736573756163;
      break;
    case 6:
      unint64_t result = 0x7265646165487369;
      break;
    case 7:
      unint64_t result = 0x616F6279654B7369;
      break;
    case 8:
      unint64_t result = 0x6C61646F4D7369;
      break;
    case 9:
      unint64_t result = 0x6863726165537369;
      break;
    case 10:
      unint64_t result = 0x6369746174537369;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0x656C67676F547369;
      break;
    case 13:
      unint64_t result = 0x756F537379616C70;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 15:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      unint64_t result = 0x6E6F747475427369;
      break;
  }
  return result;
}

uint64_t sub_1B59D50E0(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1B59D4EC4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B59D4EC4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B59D516C()
{
  char v1 = *v0;
  sub_1B5A1C7A8();
  sub_1B59D4EC4(v1);
  sub_1B5A1BF88();
  swift_bridgeObjectRelease();
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59D51D0()
{
  sub_1B59D4EC4(*v0);
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59D5224()
{
  char v1 = *v0;
  sub_1B5A1C7A8();
  sub_1B59D4EC4(v1);
  sub_1B5A1BF88();
  swift_bridgeObjectRelease();
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59D5284@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59D551C();
  *a1 = result;
  return result;
}

unint64_t sub_1B59D52B4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B59D4EC4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59D52E4()
{
  return sub_1B59D3D38(v0 + 2, v0[7], v0[8], (uint64_t)&unk_1F0EAA708, (uint64_t)&unk_1E9D65570);
}

uint64_t sub_1B59D5320(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_1B5904BDC(v2, v3, v4, v5);
  return a1;
}

unint64_t sub_1B59D537C()
{
  unint64_t result = qword_1E9D65560;
  if (!qword_1E9D65560)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D65558);
    sub_1B59D5428(&qword_1E9D65568, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65560);
  }
  return result;
}

uint64_t sub_1B59D5428(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_5()
{
  swift_bridgeObjectRelease();
  unsigned int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v1);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B59D54D4()
{
  return sub_1B59D3D38(v0 + 2, v0[7], v0[8], (uint64_t)&unk_1F0EAA6E0, (uint64_t)&unk_1E9D637B0);
}

uint64_t sub_1B59D551C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10) {
    return 16;
  }
  else {
    return v0;
  }
}

void *sub_1B59D5568(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  unsigned __int8 v5 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 56);
  uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v6 = *((void *)v5 - 3);
    uint64_t v7 = *((void *)v5 - 2);
    uint64_t v8 = *((void *)v5 - 1);
    unsigned __int8 v9 = *v5;
    sub_1B5904B60(v6, v7, v8, *v5);
    unint64_t v10 = StringResolvable.resolved(with:)(a2);
    if (v3)
    {

      sub_1B5904A88(v6, v7, v8, v9);
      uint64_t v3 = 0;
    }
    else
    {
      unint64_t v12 = v10;
      uint64_t v13 = v11;
      sub_1B5904A88(v6, v7, v8, v9);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v14 = v20;
      }
      else {
        unint64_t v14 = sub_1B59BA528(0, v20[2] + 1, 1, v20);
      }
      unint64_t v16 = v14[2];
      unint64_t v15 = v14[3];
      if (v16 >= v15 >> 1) {
        unint64_t v14 = sub_1B59BA528((void *)(v15 > 1), v16 + 1, 1, v14);
      }
      _OWORD v14[2] = v16 + 1;
      uint64_t v20 = v14;
      uint64_t v17 = &v14[2 * v16];
      v17[4] = v12;
      void v17[5] = v13;
    }
    v5 += 32;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1B59D56F0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D655B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59D5BD0();
  sub_1B5A1C838();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    sub_1B59D5CCC((unint64_t *)&qword_1E9D63B38, &qword_1E9D63B30, (void (*)(void))sub_1B5914100);
    sub_1B5A1C5D8();
    uint64_t v7 = sub_1B59196AC(v9[1]);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

void *sub_1B59D58B8(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  unint64_t v10 = v9;
  sub_1B5A1C838();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65590);
    sub_1B59D5CCC(&qword_1E9D65598, &qword_1E9D65590, (void (*)(void))sub_1B5904A34);
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    unint64_t v10 = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v10;
}

unint64_t sub_1B59D5A68()
{
  unint64_t result = qword_1E9D65588;
  if (!qword_1E9D65588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65588);
  }
  return result;
}

unint64_t sub_1B59D5ABC()
{
  unint64_t result = qword_1E9D655A8;
  if (!qword_1E9D655A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D655A8);
  }
  return result;
}

uint64_t sub_1B59D5B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessibilityFocusedModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B59D5B74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccessibilityFocusedModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B59D5BD0()
{
  unint64_t result = qword_1E9D655B8;
  if (!qword_1E9D655B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D655B8);
  }
  return result;
}

unint64_t sub_1B59D5C24()
{
  unint64_t result = qword_1E9D655C8;
  if (!qword_1E9D655C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D655C8);
  }
  return result;
}

unint64_t sub_1B59D5C78()
{
  unint64_t result = qword_1E9D655D8;
  if (!qword_1E9D655D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D655D8);
  }
  return result;
}

uint64_t sub_1B59D5CCC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B59D5D44()
{
  unint64_t result = qword_1E9D655E8;
  if (!qword_1E9D655E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D655E8);
  }
  return result;
}

unint64_t sub_1B59D5D98()
{
  unint64_t result = qword_1E9D655F8;
  if (!qword_1E9D655F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D655F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityLabelModifier.CodingKeys()
{
  return &type metadata for AccessibilityLabelModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilityIdentifierModifier.CodingKeys()
{
  return &type metadata for AccessibilityIdentifierModifier.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AccessibilityActionModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59D5EDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityActionModifier.CodingKeys()
{
  return &type metadata for AccessibilityActionModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilityElementModifier.CodingKeys()
{
  return &type metadata for AccessibilityElementModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilityChildrenModifier.CodingKeys()
{
  return &type metadata for AccessibilityChildrenModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilityAddTraitsModifier.CodingKeys()
{
  return &type metadata for AccessibilityAddTraitsModifier.CodingKeys;
}

unsigned char *_s6LiftUI26AccessibilityLabelModifierV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59D5FE0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityRemoveTraitsModifier.CodingKeys()
{
  return &type metadata for AccessibilityRemoveTraitsModifier.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AccessibilityTraitString(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AccessibilityTraitString(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59D6174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityTraitString()
{
  return &type metadata for AccessibilityTraitString;
}

unint64_t sub_1B59D61B0()
{
  unint64_t result = qword_1E9D65600;
  if (!qword_1E9D65600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65600);
  }
  return result;
}

unint64_t sub_1B59D6208()
{
  unint64_t result = qword_1E9D65608;
  if (!qword_1E9D65608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65608);
  }
  return result;
}

unint64_t sub_1B59D6260()
{
  unint64_t result = qword_1E9D65610;
  if (!qword_1E9D65610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65610);
  }
  return result;
}

unint64_t sub_1B59D62B8()
{
  unint64_t result = qword_1E9D65618;
  if (!qword_1E9D65618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65618);
  }
  return result;
}

unint64_t sub_1B59D6310()
{
  unint64_t result = qword_1E9D65620;
  if (!qword_1E9D65620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65620);
  }
  return result;
}

unint64_t sub_1B59D6368()
{
  unint64_t result = qword_1E9D65628;
  if (!qword_1E9D65628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65628);
  }
  return result;
}

unint64_t sub_1B59D63C0()
{
  unint64_t result = qword_1E9D65630;
  if (!qword_1E9D65630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65630);
  }
  return result;
}

unint64_t sub_1B59D6418()
{
  unint64_t result = qword_1E9D65638;
  if (!qword_1E9D65638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65638);
  }
  return result;
}

unint64_t sub_1B59D6470()
{
  unint64_t result = qword_1E9D65640;
  if (!qword_1E9D65640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65640);
  }
  return result;
}

unint64_t sub_1B59D64C8()
{
  unint64_t result = qword_1E9D65648;
  if (!qword_1E9D65648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65648);
  }
  return result;
}

unint64_t sub_1B59D6520()
{
  unint64_t result = qword_1E9D65650;
  if (!qword_1E9D65650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65650);
  }
  return result;
}

unint64_t sub_1B59D6578()
{
  unint64_t result = qword_1E9D65658;
  if (!qword_1E9D65658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65658);
  }
  return result;
}

unint64_t sub_1B59D65D0()
{
  unint64_t result = qword_1E9D65660;
  if (!qword_1E9D65660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65660);
  }
  return result;
}

unint64_t sub_1B59D6628()
{
  unint64_t result = qword_1E9D65668;
  if (!qword_1E9D65668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65668);
  }
  return result;
}

unint64_t sub_1B59D6680()
{
  unint64_t result = qword_1E9D65670;
  if (!qword_1E9D65670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65670);
  }
  return result;
}

unint64_t sub_1B59D66D8()
{
  unint64_t result = qword_1E9D65678;
  if (!qword_1E9D65678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65678);
  }
  return result;
}

unint64_t sub_1B59D6730()
{
  unint64_t result = qword_1E9D65680;
  if (!qword_1E9D65680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65680);
  }
  return result;
}

unint64_t sub_1B59D6788()
{
  unint64_t result = qword_1E9D65688;
  if (!qword_1E9D65688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65688);
  }
  return result;
}

unint64_t sub_1B59D67E0()
{
  unint64_t result = qword_1E9D65690;
  if (!qword_1E9D65690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65690);
  }
  return result;
}

unint64_t sub_1B59D6838()
{
  unint64_t result = qword_1E9D65698;
  if (!qword_1E9D65698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65698);
  }
  return result;
}

unint64_t sub_1B59D6890()
{
  unint64_t result = qword_1E9D656A0;
  if (!qword_1E9D656A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D656A0);
  }
  return result;
}

unint64_t sub_1B59D68E8()
{
  unint64_t result = qword_1E9D656A8;
  if (!qword_1E9D656A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D656A8);
  }
  return result;
}

uint64_t sub_1B59D693C()
{
  return 0x6C6562616CLL;
}

uint64_t sub_1B59D6950()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1B59D6968()
{
  return 0x737469617274;
}

uint64_t sub_1B59D697C()
{
  return 0x696669746E656469;
}

uint64_t sub_1B59D6998(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x737469617274 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t destroy for ConfirmationDialogModifier(uint64_t a1)
{
  sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v2);
  }
  sub_1B590D6F0(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 128))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 104);
  }
  return result;
}

uint64_t initializeWithCopy for ConfirmationDialogModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  unsigned int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a2 + 48);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  char v15 = *(unsigned char *)(a2 + 88);
  sub_1B590D634(v12, v13, v14, v15);
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(unsigned char *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v16 = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = v16;
    *(void *)(a1 + 136) = v17;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))(a1 + 104, a2 + 104, v16);
  }
  else
  {
    long long v18 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v18;
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
  }
  return a1;
}

uint64_t assignWithCopy for ConfirmationDialogModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B5904A88(v8, v9, v10, v11);
  uint64_t v12 = (_OWORD *)(a1 + 32);
  uint64_t v13 = (_OWORD *)(a2 + 32);
  unsigned int v14 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v14 <= 0xFD)
    {
      uint64_t v20 = *(void *)(a2 + 32);
      uint64_t v21 = *(void *)(a2 + 40);
      uint64_t v22 = *(void *)(a2 + 48);
      sub_1B5904B60(v20, v21, v22, *(unsigned char *)(a2 + 56));
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v24 = *(void *)(a1 + 40);
      uint64_t v25 = *(void *)(a1 + 48);
      *(void *)(a1 + 32) = v20;
      *(void *)(a1 + 40) = v21;
      *(void *)(a1 + 48) = v22;
      unsigned __int8 v26 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v14;
      sub_1B5904A88(v23, v24, v25, v26);
    }
    else
    {
      sub_1B590DA50(a1 + 32);
      long long v16 = *(_OWORD *)(a2 + 41);
      *uint64_t v12 = *v13;
      *(_OWORD *)(a1 + 41) = v16;
    }
  }
  else if (v14 <= 0xFD)
  {
    uint64_t v17 = *(void *)(a2 + 32);
    uint64_t v18 = *(void *)(a2 + 40);
    uint64_t v19 = *(void *)(a2 + 48);
    sub_1B5904B60(v17, v18, v19, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 32) = v17;
    *(void *)(a1 + 40) = v18;
    *(void *)(a1 + 48) = v19;
    *(unsigned char *)(a1 + 56) = v14;
  }
  else
  {
    long long v15 = *v13;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    *uint64_t v12 = v15;
  }
  uint64_t v27 = *(void *)(a2 + 64);
  uint64_t v28 = *(void *)(a2 + 72);
  uint64_t v29 = *(void *)(a2 + 80);
  char v30 = *(unsigned char *)(a2 + 88);
  sub_1B590D634(v27, v28, v29, v30);
  uint64_t v31 = *(void *)(a1 + 64);
  uint64_t v32 = *(void *)(a1 + 72);
  uint64_t v33 = *(void *)(a1 + 80);
  char v34 = *(unsigned char *)(a1 + 88);
  *(void *)(a1 + 64) = v27;
  *(void *)(a1 + 72) = v28;
  *(void *)(a1 + 80) = v29;
  *(unsigned char *)(a1 + 88) = v30;
  sub_1B590D6F0(v31, v32, v33, v34);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(a2 + 128);
  if (!*(void *)(a1 + 128))
  {
    if (v35)
    {
      *(void *)(a1 + 128) = v35;
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      (**(void (***)(uint64_t, uint64_t))(v35 - 8))(a1 + 104, a2 + 104);
      return a1;
    }
LABEL_14:
    long long v36 = *(_OWORD *)(a2 + 104);
    long long v37 = *(_OWORD *)(a2 + 120);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v36;
    *(_OWORD *)(a1 + 120) = v37;
    return a1;
  }
  if (!v35)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 104);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 104), (uint64_t *)(a2 + 104));
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for ConfirmationDialogModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5904A88(v6, v7, v8, v9);
  unsigned int v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + 56);
  if (v11 > 0xFD)
  {
    sub_1B590DA50(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v12;
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B5904A88(v13, v14, v15, v10);
LABEL_6:
  uint64_t v16 = *(void *)(a2 + 80);
  char v17 = *(unsigned char *)(a2 + 88);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  char v21 = *(unsigned char *)(a1 + 88);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v16;
  *(unsigned char *)(a1 + 88) = v17;
  sub_1B590D6F0(v18, v19, v20, v21);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 128)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 104);
  }
  long long v22 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v22;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConfirmationDialogModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 96);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ConfirmationDialogModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 0;
    }
    if (a2) {
      *(void *)(result + 96) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfirmationDialogModifier()
{
  return &type metadata for ConfirmationDialogModifier;
}

uint64_t sub_1B59D7024@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v52 = a3;
  uint64_t v7 = a1[3];
  uint64_t v53 = a1[4];
  uint64_t v64 = __swift_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t v9 = *(void *)(v3 + 16);
  unsigned __int8 v10 = *(unsigned char *)(v3 + 24);
  uint64_t v54 = *(void *)v3;
  uint64_t v55 = v8;
  uint64_t v56 = v9;
  LOBYTE(v57) = v10;
  sub_1B5904B60(v54, v8, v9, v10);
  unint64_t v11 = StringResolvable.resolved(with:)(a2);
  if (v4) {
    return sub_1B5904A88(v54, v8, v9, v10);
  }
  unint64_t v14 = v11;
  uint64_t v51 = v7;
  uint64_t v15 = v12;
  sub_1B5904A88(v54, v8, v9, v10);
  unint64_t v62 = v14;
  uint64_t v63 = v15;
  uint64_t v16 = *(void *)(v5 + 64);
  uint64_t v17 = *(void *)(v5 + 72);
  uint64_t v18 = *(void *)(v5 + 80);
  char v19 = *(unsigned char *)(v5 + 88);
  sub_1B590D634(v16, v17, v18, v19);
  uint64_t v20 = sub_1B59966F8(a2, v16, v17, v18, v19);
  uint64_t v22 = v21;
  uint64_t v50 = v20;
  uint64_t v48 = v15;
  int v49 = v23;
  sub_1B590D6F0(v16, v17, v18, v19);
  unsigned int v24 = *(unsigned __int8 *)(v5 + 56);
  if (v24 <= 0xFD)
  {
    uint64_t v25 = *(void *)(v5 + 40);
    uint64_t v26 = *(void *)(v5 + 48);
    uint64_t v54 = *(void *)(v5 + 32);
    uint64_t v55 = v25;
    uint64_t v56 = v26;
    LOBYTE(v57) = v24;
    uint64_t v47 = v25;
    sub_1B5904B60(v54, v25, v26, v24);
    StringResolvable.resolved(with:)(a2);
    uint64_t v43 = v22;
    sub_1B5904B4C(v54, v47, v26, v24);
  }
  else
  {
    uint64_t v43 = v22;
  }
  unint64_t v27 = sub_1B5A1C558();
  uint64_t v28 = swift_bridgeObjectRelease();
  uint64_t v48 = &v43;
  unsigned int v29 = 0x10200u >> (8 * v27);
  if (v27 >= 3) {
    unsigned int v29 = 0;
  }
  LODWORD(v47) = v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v46 = v42;
  _OWORD v42[2] = v5;
  MEMORY[0x1F4188790](v30);
  uint64_t v45 = v41;
  void v41[2] = v5;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63410);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63440);
  unint64_t v33 = sub_1B5943480();
  uint64_t v34 = sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
  uint64_t v44 = v34;
  uint64_t v35 = sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
  uint64_t v54 = v51;
  uint64_t v55 = MEMORY[0x1E4FBB1A0];
  uint64_t v36 = v51;
  uint64_t v56 = v31;
  uint64_t v57 = v32;
  uint64_t v37 = v32;
  uint64_t v38 = v53;
  uint64_t v58 = v53;
  unint64_t v59 = v33;
  uint64_t v60 = v34;
  uint64_t v61 = v35;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v40 = v52;
  v52[3] = OpaqueTypeMetadata2;
  uint64_t v54 = v36;
  uint64_t v55 = MEMORY[0x1E4FBB1A0];
  uint64_t v56 = v31;
  uint64_t v57 = v37;
  uint64_t v58 = v38;
  unint64_t v59 = v33;
  uint64_t v60 = v44;
  uint64_t v61 = v35;
  v40[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v40);
  sub_1B5A1B558();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59D7498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 96);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8) {
    uint64_t v9 = v8;
  }
  v11[1] = v9;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
  sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
  sub_1B5A1BB28();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t sub_1B59D762C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B5921484(a1 + 104, (uint64_t)v7);
  uint64_t v3 = v8;
  if (v8)
  {
    uint64_t v4 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    uint64_t result = sub_1B5908FC0((uint64_t)v7, &qword_1E9D632B0);
    uint64_t v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1B59D76C8(char a1)
{
  return *(void *)&aTitle_5[8 * a1];
}

uint64_t sub_1B59D76E8(char *a1, char *a2)
{
  return sub_1B59ED130(*a1, *a2);
}

uint64_t sub_1B59D76F4()
{
  return sub_1B59F1E5C();
}

uint64_t sub_1B59D76FC()
{
  return sub_1B59F3060();
}

uint64_t sub_1B59D7704()
{
  return sub_1B59F7034();
}

uint64_t sub_1B59D770C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59D8180();
  *a1 = result;
  return result;
}

uint64_t sub_1B59D773C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59D76C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59D7768()
{
  return sub_1B59D76C8(*v0);
}

uint64_t sub_1B59D7770@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59D8180();
  *a1 = result;
  return result;
}

uint64_t sub_1B59D7798(uint64_t a1)
{
  unint64_t v2 = sub_1B59D7E40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59D77D4(uint64_t a1)
{
  unint64_t v2 = sub_1B59D7E40();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B59D7810(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D656B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59D7E40();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v25 = a1;
    LOBYTE(v37) = 0;
    sub_1B5904A34();
    sub_1B5A1C5D8();
    long long v40 = v27;
    uint64_t v23 = v28;
    uint64_t v24 = *((void *)&v27 + 1);
    uint64_t v41 = v28;
    int v22 = BYTE8(v28);
    char v42 = BYTE8(v28);
    LOBYTE(v37) = 2;
    sub_1B5A1C5B8();
    long long v19 = v27;
    long long v43 = v27;
    uint64_t v20 = v28;
    uint64_t v44 = v28;
    int v21 = BYTE8(v28);
    char v45 = BYTE8(v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    LOBYTE(v37) = 1;
    sub_1B59095C8((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
    sub_1B5A1C5D8();
    long long v17 = v27;
    long long v46 = v27;
    uint64_t v18 = v28;
    uint64_t v47 = v28;
    int v16 = BYTE8(v28);
    char v48 = BYTE8(v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    LOBYTE(v37) = 3;
    sub_1B592FA5C();
    sub_1B5A1C5B8();
    if ((void)v27)
    {
      uint64_t v15 = sub_1B59196AC(v27);
      swift_bridgeObjectRelease();
      uint64_t v8 = v15;
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v15 = v8;
    uint64_t v49 = v8;
    char v26 = 4;
    sub_1B5914100();
    sub_1B5A1C5B8();
    if (*((void *)&v27 + 1))
    {
      *((void *)&v38 + 1) = &type metadata for ViewContent;
      unint64_t v39 = sub_1B5914034();
      uint64_t v9 = swift_allocObject();
      *(void *)&long long v37 = v9;
      long long v10 = v34;
      *(_OWORD *)(v9 + 112) = v33;
      *(_OWORD *)(v9 + 128) = v10;
      *(_OWORD *)(v9 + 144) = v35;
      *(void *)(v9 + 160) = v36;
      long long v11 = v30;
      *(_OWORD *)(v9 + 48) = v29;
      *(_OWORD *)(v9 + 64) = v11;
      long long v12 = v32;
      *(_OWORD *)(v9 + 80) = v31;
      *(_OWORD *)(v9 + 96) = v12;
      long long v13 = v28;
      *(_OWORD *)(v9 + 16) = v27;
      *(_OWORD *)(v9 + 32) = v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_1B5908FC0((uint64_t)&v27, &qword_1E9D63B40);
      long long v37 = 0u;
      long long v38 = 0u;
      unint64_t v39 = 0;
    }
    uint64_t v14 = v51;
    sub_1B59215A0((uint64_t)&v37, (uint64_t)&v50);
    sub_1B59D7E94((uint64_t)&v40, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    sub_1B59D7ECC((uint64_t)&v40);
  }
}

void sub_1B59D7D4C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B59D7D64(uint64_t a1)
{
  unint64_t result = sub_1B59D7D8C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D7D8C()
{
  unint64_t result = qword_1E9D656B0;
  if (!qword_1E9D656B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D656B0);
  }
  return result;
}

uint64_t sub_1B59D7DE0()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B59D7E2C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B59D7498(*(void *)(v1 + 16), a1);
}

uint64_t sub_1B59D7E34@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B59D762C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1B59D7E40()
{
  unint64_t result = qword_1E9D656C0;
  if (!qword_1E9D656C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D656C0);
  }
  return result;
}

uint64_t sub_1B59D7E94(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B59D7ECC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B59D7EFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

unsigned char *storeEnumTagSinglePayload for ConfirmationDialogModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59D8040);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfirmationDialogModifier.CodingKeys()
{
  return &type metadata for ConfirmationDialogModifier.CodingKeys;
}

unint64_t sub_1B59D807C()
{
  unint64_t result = qword_1E9D656C8;
  if (!qword_1E9D656C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D656C8);
  }
  return result;
}

unint64_t sub_1B59D80D4()
{
  unint64_t result = qword_1E9D656D0;
  if (!qword_1E9D656D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D656D0);
  }
  return result;
}

unint64_t sub_1B59D812C()
{
  unint64_t result = qword_1E9D656D8;
  if (!qword_1E9D656D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D656D8);
  }
  return result;
}

uint64_t sub_1B59D8180()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for PickerStyleModifier()
{
  return &type metadata for PickerStyleModifier;
}

uint64_t destroy for TagModifier(uint64_t a1)
{
  return sub_1B591F344(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for TagModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B5909638(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for TagModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B5909638(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B591F344(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for TagModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B591F344(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for TagModifier()
{
  return &type metadata for TagModifier;
}

uint64_t sub_1B59D8320@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v9 = *(void *)v3;
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t v10 = *(void *)(v3 + 16);
  char v11 = *(unsigned char *)(v3 + 24);
  sub_1B5909638(*(void *)v3, v8, v10, v11);
  sub_1B59B3D0C(a2, v9, v8, v10, v11, &v22);
  if (v4)
  {

    sub_1B591F344(v9, v8, v10, v11);
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1B5A1A328();
    __swift_project_value_buffer(v12, (uint64_t)qword_1E9D910D0);
    long long v13 = sub_1B5A1A308();
    os_log_type_t v14 = sub_1B5A1C278();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1B58FD000, v13, v14, "TagModifier Unable to resolve tag value", v15, 2u);
      MEMORY[0x1BA9A4780](v15, -1, -1);
    }

    return sub_1B590CA38((uint64_t)a1, (uint64_t)a3);
  }
  else
  {
    sub_1B591F344(v9, v8, v10, v11);
    uint64_t v17 = v22;
    uint64_t v19 = a1[3];
    uint64_t v18 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    uint64_t v22 = v17;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D656F0);
    sub_1B5A1A748();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D656F8);
    a3[3] = sub_1B5A1A748();
    sub_1B59095C8(&qword_1E9D65700, &qword_1E9D656F0);
    swift_getWitnessTable();
    sub_1B59095C8(&qword_1E9D65708, &qword_1E9D656F8);
    a3[4] = swift_getWitnessTable();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
    unint64_t v21 = sub_1B591EF2C();
    sub_1B59D85E8((uint64_t)&v22, 1, v19, (uint64_t)&type metadata for DecodableState, v18, v21, (uint64_t)boxed_opaque_existential_1);
    return swift_release();
  }
}

uint64_t sub_1B59D85E8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v34 = a5;
  v30[1] = a3;
  int v35 = a2;
  uint64_t v43 = a7;
  uint64_t v10 = sub_1B5A1C2B8();
  uint64_t v46 = a6;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v39 = v10;
  uint64_t v11 = sub_1B5A1A838();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  MEMORY[0x1F4188790](v11);
  long long v40 = (char *)v30 - v12;
  uint64_t v31 = sub_1B5A1A838();
  uint64_t v13 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v15 = (char *)v30 - v14;
  sub_1B5A1A848();
  swift_getWitnessTable();
  uint64_t v32 = sub_1B5A1AFF8();
  uint64_t v16 = sub_1B5A1A748();
  uint64_t v36 = *(void *)(v16 - 8);
  uint64_t v37 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v30 - v17;
  uint64_t v19 = *(void *)(a4 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v30[0] = a1;
  v20(v15, a1, a4);
  unint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
  v21(v15, 0, 1, a4);
  long long v33 = v18;
  uint64_t v22 = v34;
  sub_1B5A1B6A8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v31);
  if (v35)
  {
    uint64_t v23 = v40;
    v20(v40, v30[0], a4);
    v21(v23, 0, 1, a4);
    uint64_t v24 = swift_checkMetadataState();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
  }
  else
  {
    uint64_t v25 = swift_checkMetadataState();
    uint64_t v23 = v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v40, 1, 1, v25);
  }
  sub_1B5A1A848();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v44 = v22;
  uint64_t v45 = v26;
  uint64_t v27 = v37;
  swift_getWitnessTable();
  swift_getWitnessTable();
  long long v28 = v33;
  sub_1B5A1B6A8();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v28, v27);
}

uint64_t sub_1B59D8A88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
    sub_1B59095C8((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
    sub_1B5A1C6C8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *(_OWORD *)a2 = v6;
    *(void *)(a2 + 16) = v7;
    *(unsigned char *)(a2 + 24) = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59D8BB0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59D8320(a1, a2, a3);
}

uint64_t sub_1B59D8BC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59D8A88(a1, a2);
}

uint64_t sub_1B59D8BE0@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v6 = sub_1B5A1A9C8();
      uint64_t v7 = MEMORY[0x1E4F3D308];
      a2[3] = v6;
      a2[4] = v7;
      __swift_allocate_boxed_opaque_existential_1(a2);
      uint64_t result = sub_1B5A1A9B8();
      break;
    case 2:
      uint64_t v8 = sub_1B5A1B0A8();
      uint64_t v9 = MEMORY[0x1E4F3DCA0];
      a2[3] = v8;
      a2[4] = v9;
      __swift_allocate_boxed_opaque_existential_1(a2);
      uint64_t result = sub_1B5A1B098();
      break;
    case 3:
      uint64_t v10 = sub_1B5A1AB68();
      uint64_t v11 = MEMORY[0x1E4F3D478];
      a2[3] = v10;
      a2[4] = v11;
      __swift_allocate_boxed_opaque_existential_1(a2);
      uint64_t result = sub_1B5A1AB58();
      break;
    case 4:
      uint64_t v12 = sub_1B5A1AE88();
      uint64_t v13 = MEMORY[0x1E4F3D7D0];
      a2[3] = v12;
      a2[4] = v13;
      __swift_allocate_boxed_opaque_existential_1(a2);
      uint64_t result = sub_1B5A1AE78();
      break;
    case 5:
      uint64_t v14 = sub_1B5A1A738();
      uint64_t v15 = MEMORY[0x1E4F3CC08];
      a2[3] = v14;
      a2[4] = v15;
      __swift_allocate_boxed_opaque_existential_1(a2);
      uint64_t result = sub_1B5A1A728();
      break;
    case 6:
      uint64_t v16 = sub_1B5A1A868();
      uint64_t v17 = MEMORY[0x1E4F3CE00];
      a2[3] = v16;
      a2[4] = v17;
      __swift_allocate_boxed_opaque_existential_1(a2);
      uint64_t result = sub_1B5A1A858();
      break;
    default:
      uint64_t v3 = sub_1B5A1AAA8();
      uint64_t v4 = MEMORY[0x1E4F3D420];
      a2[3] = v3;
      a2[4] = v4;
      __swift_allocate_boxed_opaque_existential_1(a2);
      uint64_t result = sub_1B5A1AA98();
      break;
  }
  return result;
}

uint64_t sub_1B59D8D54@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned int v7 = *(unsigned __int8 *)(v3 + 24);
  if (v7 <= 0xFD)
  {
    uint64_t v10 = *(void *)v3;
    uint64_t v9 = *(void *)(v3 + 8);
    uint64_t v11 = *(void *)(v3 + 16);
    v21[0] = v10;
    v21[1] = v9;
    long long v21[2] = v11;
    LOBYTE(v22) = v7;
    sub_1B5904B60(v10, v9, v11, v7);
    StringResolvable.resolved(with:)(a2);
    if (v4) {

    }
    sub_1B5904B4C(v10, v9, v11, v7);
  }
  char v12 = sub_1B59D918C();
  if (v12 == 7)
  {
    uint64_t v22 = sub_1B5A1AAA8();
    uint64_t v23 = MEMORY[0x1E4F3D420];
    __swift_allocate_boxed_opaque_existential_1(v21);
    sub_1B5A1AA98();
  }
  else
  {
    sub_1B59D8BE0(v12, (uint64_t *)&v18);
    sub_1B5908BE8(&v18, (uint64_t)v21);
  }
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v15 = v22;
  uint64_t v16 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  *(void *)&long long v18 = v13;
  *((void *)&v18 + 1) = v15;
  uint64_t v19 = v14;
  uint64_t v20 = v16;
  a3[3] = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v18 = v13;
  *((void *)&v18 + 1) = v15;
  uint64_t v19 = v14;
  uint64_t v20 = v16;
  a3[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B5A1B428();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t sub_1B59D8F50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_1B5904A34();
  sub_1B5A1C6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v8;
  *(unsigned char *)(a2 + 24) = v9;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59D9064@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59D8D54(a1, a2, a3);
}

uint64_t sub_1B59D907C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59D8F50(a1, a2);
}

unint64_t sub_1B59D9094(uint64_t a1)
{
  unint64_t result = sub_1B59D90BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D90BC()
{
  unint64_t result = qword_1E9D656E0;
  if (!qword_1E9D656E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D656E0);
  }
  return result;
}

unint64_t sub_1B59D9110(uint64_t a1)
{
  unint64_t result = sub_1B59D9138();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D9138()
{
  unint64_t result = qword_1E9D656E8;
  if (!qword_1E9D656E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D656E8);
  }
  return result;
}

uint64_t sub_1B59D918C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t initializeWithCopy for LayoutPriorityModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for LayoutPriorityModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B591DF0C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for LayoutPriorityModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B591DF0C(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for LayoutPriorityModifier()
{
  return &type metadata for LayoutPriorityModifier;
}

ValueMetadata *type metadata accessor for MultiLineTextAlignmentModifier()
{
  return &type metadata for MultiLineTextAlignmentModifier;
}

uint64_t sub_1B59D931C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65720);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59D9940();
  sub_1B5A1C838();
  if (!v2)
  {
    sub_1B59358E8();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59D949C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B59D9E14(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B59D94C8(uint64_t a1)
{
  unint64_t v2 = sub_1B59D9940();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59D9504(uint64_t a1)
{
  unint64_t v2 = sub_1B59D9940();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59D9540@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)v3;
  uint64_t v10 = *(void *)(v3 + 8);
  uint64_t v11 = *(void *)(v3 + 16);
  char v12 = *(unsigned char *)(v3 + 24);
  sub_1B591DF88(*(void *)v3, v10, v11, v12);
  sub_1B5963534(a2);
  LOBYTE(a2) = v8;
  sub_1B591DF0C(v7, v10, v11, v12);
  if (a2) {
    return sub_1B590CA38((uint64_t)a1, (uint64_t)a3);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E48);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64E50, &qword_1E9D64E48);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B4C8();
}

uint64_t sub_1B59D96B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59D931C(a1, a2);
}

uint64_t sub_1B59D96CC(char a1)
{
  return *(void *)&aLeading_5[8 * a1];
}

uint64_t sub_1B59D96EC(char *a1, char *a2)
{
  return sub_1B59ED1B8(*a1, *a2);
}

uint64_t sub_1B59D96F8()
{
  return sub_1B59F1EC8();
}

uint64_t sub_1B59D9700()
{
  return sub_1B59F30B4();
}

uint64_t sub_1B59D9708()
{
  return sub_1B59F64A4();
}

uint64_t sub_1B59D9710@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59D9EF0();
  *a1 = result;
  return result;
}

uint64_t sub_1B59D9740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59D96CC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59D976C()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B59D97CC()
{
  return sub_1B5A1C068();
}

unint64_t sub_1B59D981C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B59D9994(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1B59D9848(uint64_t a1)
{
  unint64_t result = sub_1B59D9870();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D9870()
{
  unint64_t result = qword_1E9D65710;
  if (!qword_1E9D65710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65710);
  }
  return result;
}

unint64_t sub_1B59D98C4(uint64_t a1)
{
  unint64_t result = sub_1B59D98EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59D98EC()
{
  unint64_t result = qword_1E9D65718;
  if (!qword_1E9D65718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65718);
  }
  return result;
}

unint64_t sub_1B59D9940()
{
  unint64_t result = qword_1E9D65728;
  if (!qword_1E9D65728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65728);
  }
  return result;
}

unint64_t sub_1B59D9994(void *a1)
{
  unint64_t v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1B59D9A70();
    sub_1B5A1C6C8();
    unint64_t v3 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

unint64_t sub_1B59D9A70()
{
  unint64_t result = qword_1E9D65730;
  if (!qword_1E9D65730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65730);
  }
  return result;
}

unsigned char *_s6LiftUI30MultiLineTextAlignmentModifierVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59D9B90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextAlignmentName()
{
  return &type metadata for TextAlignmentName;
}

unsigned char *storeEnumTagSinglePayload for LayoutPriorityModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59D9C64);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutPriorityModifier.CodingKeys()
{
  return &type metadata for LayoutPriorityModifier.CodingKeys;
}

unint64_t sub_1B59D9CA0()
{
  unint64_t result = qword_1E9D65738;
  if (!qword_1E9D65738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65738);
  }
  return result;
}

unint64_t sub_1B59D9CF8()
{
  unint64_t result = qword_1E9D65740;
  if (!qword_1E9D65740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65740);
  }
  return result;
}

unint64_t sub_1B59D9D50()
{
  unint64_t result = qword_1E9D65748;
  if (!qword_1E9D65748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65748);
  }
  return result;
}

unint64_t sub_1B59D9DA8()
{
  unint64_t result = qword_1E9D65750;
  if (!qword_1E9D65750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65750);
  }
  return result;
}

uint64_t sub_1B59D9DFC()
{
  return 0x797469726F697270;
}

uint64_t sub_1B59D9E14(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

unint64_t sub_1B59D9E9C()
{
  unint64_t result = qword_1E9D65758;
  if (!qword_1E9D65758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65758);
  }
  return result;
}

uint64_t sub_1B59D9EF0()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

id ContentRegistry.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t sub_1B59D9F74()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D650A0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B5A1C4E8();
  __swift_allocate_value_buffer(v3, qword_1E9D910E8);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E9D910E8);
  sub_1B5A1C4D8();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

void *sub_1B59DA0AC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65AE8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B5A2BE50;
  *(void *)(v0 + 32) = 1954047316;
  *(void *)(v0 + 40) = 0xE400000000000000;
  unint64_t v1 = sub_1B593CEF8();
  *(void *)(v0 + 48) = &type metadata for TextView;
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = 0x6B6361745356;
  *(void *)(v0 + 72) = 0xE600000000000000;
  unint64_t v2 = sub_1B596CD78();
  *(void *)(v0 + 80) = &type metadata for VStackView;
  *(void *)(v0 + 88) = v2;
  *(void *)(v0 + 96) = 0x6B6361745348;
  *(void *)(v0 + 104) = 0xE600000000000000;
  unint64_t v3 = sub_1B596DA60();
  *(void *)(v0 + 112) = &type metadata for HStackView;
  *(void *)(v0 + 120) = v3;
  *(void *)(v0 + 128) = 0x6B636174535ALL;
  *(void *)(v0 + 136) = 0xE600000000000000;
  unint64_t v4 = sub_1B596DE28();
  *(void *)(v0 + 144) = &type metadata for ZStackView;
  *(void *)(v0 + 152) = v4;
  *(void *)(v0 + 160) = 0x61745356797A614CLL;
  *(void *)(v0 + 168) = 0xEA00000000006B63;
  unint64_t v5 = sub_1B596E4C0();
  *(void *)(v0 + 176) = &type metadata for LazyVStackView;
  *(void *)(v0 + 184) = v5;
  *(void *)(v0 + 192) = 0x61745348797A614CLL;
  *(void *)(v0 + 200) = 0xEA00000000006B63;
  unint64_t v6 = sub_1B596F428();
  *(void *)(v0 + 208) = &type metadata for LazyHStackView;
  *(void *)(v0 + 216) = v6;
  *(void *)(v0 + 224) = 1953720652;
  *(void *)(v0 + 232) = 0xE400000000000000;
  unint64_t v7 = sub_1B592E6E0();
  *(void *)(v0 + 240) = &type metadata for ListView;
  *(void *)(v0 + 248) = v7;
  *(void *)(v0 + 256) = 0x6E6F6974636553;
  *(void *)(v0 + 264) = 0xE700000000000000;
  unint64_t v8 = sub_1B592F0F0();
  *(void *)(v0 + 272) = &type metadata for SectionView;
  *(void *)(v0 + 280) = v8;
  *(void *)(v0 + 288) = 0x72656469766944;
  *(void *)(v0 + 296) = 0xE700000000000000;
  unint64_t v9 = sub_1B592F4C4();
  *(void *)(v0 + 304) = &type metadata for DividerView;
  *(void *)(v0 + 312) = v9;
  *(void *)(v0 + 320) = 0x6567616D49;
  *(void *)(v0 + 328) = 0xE500000000000000;
  unint64_t v10 = sub_1B59E039C();
  *(void *)(v0 + 336) = &type metadata for SymbolView;
  *(void *)(v0 + 344) = v10;
  *(void *)(v0 + 352) = 0x616D49636E797341;
  *(void *)(v0 + 360) = 0xEA00000000006567;
  unint64_t v11 = sub_1B59E03F0();
  *(void *)(v0 + 368) = &type metadata for AsyncImageView;
  *(void *)(v0 + 376) = v11;
  strcpy((char *)(v0 + 384), "ProgressView");
  *(unsigned char *)(v0 + 397) = 0;
  *(_WORD *)(v0 + 398) = -5120;
  unint64_t v12 = sub_1B593E614();
  *(void *)(v0 + 400) = &type metadata for ProgressView;
  *(void *)(v0 + 408) = v12;
  *(void *)(v0 + 416) = 0x726563617053;
  *(void *)(v0 + 424) = 0xE600000000000000;
  unint64_t v13 = sub_1B593E6B0();
  *(void *)(v0 + 432) = &type metadata for SpacerView;
  *(void *)(v0 + 440) = v13;
  *(void *)(v0 + 448) = 0x6E6F74747542;
  *(void *)(v0 + 456) = 0xE600000000000000;
  unint64_t v14 = sub_1B597CA7C();
  *(void *)(v0 + 464) = &type metadata for ButtonView;
  *(void *)(v0 + 472) = v14;
  *(void *)(v0 + 480) = 1802398028;
  *(void *)(v0 + 488) = 0xE400000000000000;
  uint64_t v15 = type metadata accessor for LinkView();
  uint64_t v16 = sub_1B59E04FC(&qword_1E9D63D58, 255, (void (*)(uint64_t))type metadata accessor for LinkView);
  *(void *)(v0 + 496) = v15;
  *(void *)(v0 + 504) = v16;
  *(void *)(v0 + 512) = 0x726F6C6F43;
  *(void *)(v0 + 520) = 0xE500000000000000;
  unint64_t v17 = sub_1B593EEB8();
  *(void *)(v0 + 528) = &type metadata for ColorView;
  *(void *)(v0 + 536) = v17;
  strcpy((char *)(v0 + 544), "RemoteContent");
  *(_WORD *)(v0 + 558) = -4864;
  uint64_t v18 = type metadata accessor for RemoteContentView(0);
  uint64_t v19 = sub_1B59E04FC(&qword_1E9D62BF0, 255, (void (*)(uint64_t))type metadata accessor for RemoteContentView);
  *(void *)(v0 + 560) = v18;
  *(void *)(v0 + 568) = v19;
  *(void *)(v0 + 576) = 0x697461676976614ELL;
  *(void *)(v0 + 584) = 0xEF6B636174536E6FLL;
  unint64_t v20 = sub_1B5971758();
  *(void *)(v0 + 592) = &type metadata for NavigationStackView;
  *(void *)(v0 + 600) = v20;
  strcpy((char *)(v0 + 608), "NavigationView");
  *(unsigned char *)(v0 + 623) = -18;
  unint64_t v21 = sub_1B5971E4C();
  *(void *)(v0 + 624) = &type metadata for NavigatingView;
  *(void *)(v0 + 632) = v21;
  strcpy((char *)(v0 + 640), "NavigationLink");
  *(unsigned char *)(v0 + 655) = -18;
  unint64_t v22 = sub_1B59730BC();
  *(void *)(v0 + 656) = &type metadata for NavigationLinkView;
  *(void *)(v0 + 664) = v22;
  *(void *)(v0 + 672) = 0x656C67676F54;
  *(void *)(v0 + 680) = 0xE600000000000000;
  unint64_t v23 = sub_1B5940298();
  *(void *)(v0 + 688) = &type metadata for ToggleView;
  *(void *)(v0 + 696) = v23;
  *(void *)(v0 + 704) = 0x6C6562614CLL;
  *(void *)(v0 + 712) = 0xE500000000000000;
  unint64_t v24 = sub_1B5940BA4();
  *(void *)(v0 + 720) = &type metadata for LabelView;
  *(void *)(v0 + 728) = v24;
  *(void *)(v0 + 736) = 0x69566C6C6F726353;
  *(void *)(v0 + 744) = 0xEA00000000007765;
  unint64_t v25 = sub_1B5940C40();
  *(void *)(v0 + 752) = &type metadata for ScrollingView;
  *(void *)(v0 + 760) = v25;
  *(void *)(v0 + 768) = 0x70756F7247;
  *(void *)(v0 + 776) = 0xE500000000000000;
  unint64_t v26 = sub_1B5941034();
  *(void *)(v0 + 784) = &type metadata for GroupView;
  *(void *)(v0 + 792) = v26;
  *(void *)(v0 + 800) = 26185;
  *(void *)(v0 + 808) = 0xE200000000000000;
  unint64_t v27 = sub_1B5947028();
  *(void *)(v0 + 816) = &type metadata for IfView;
  *(void *)(v0 + 824) = v27;
  *(void *)(v0 + 832) = 0x68636145726F46;
  *(void *)(v0 + 840) = 0xE700000000000000;
  unint64_t v28 = sub_1B5942708();
  *(void *)(v0 + 848) = &type metadata for ForEachView;
  *(void *)(v0 + 856) = v28;
  *(void *)(v0 + 864) = 1836216134;
  *(void *)(v0 + 872) = 0xE400000000000000;
  unint64_t v29 = sub_1B5942BA0();
  *(void *)(v0 + 880) = &type metadata for FormView;
  *(void *)(v0 + 888) = v29;
  *(void *)(v0 + 896) = 0x686353726F6C6F43;
  *(void *)(v0 + 904) = 0xEB00000000656D65;
  uint64_t v30 = type metadata accessor for ColorSchemeReader();
  uint64_t v31 = sub_1B59E04FC(&qword_1E9D65B00, 255, (void (*)(uint64_t))type metadata accessor for ColorSchemeReader);
  *(void *)(v0 + 912) = v30;
  *(void *)(v0 + 920) = v31;
  strcpy((char *)(v0 + 928), "GeometryReader");
  *(unsigned char *)(v0 + 943) = -18;
  unint64_t v32 = sub_1B59E0444();
  *(void *)(v0 + 944) = &type metadata for GeometryReaderView;
  *(void *)(v0 + 952) = v32;
  *(void *)(v0 + 960) = 0xD000000000000010;
  *(void *)(v0 + 968) = 0x80000001B5A33B60;
  unint64_t v33 = sub_1B59E0498();
  *(void *)(v0 + 976) = &type metadata for ScrollViewReaderView;
  *(void *)(v0 + 984) = v33;
  *(void *)(v0 + 992) = 0x6569567974706D45;
  *(void *)(v0 + 1000) = 0xE900000000000077;
  unint64_t v34 = sub_1B5942E38();
  *(void *)(v0 + 1008) = &type metadata for EmptyViewView;
  *(void *)(v0 + 1016) = v34;
  *(void *)(v0 + 1024) = 0x72656B636950;
  *(void *)(v0 + 1032) = 0xE600000000000000;
  unint64_t v35 = sub_1B5977618();
  *(void *)(v0 + 1040) = &type metadata for PickerView;
  *(void *)(v0 + 1048) = v35;
  *(void *)(v0 + 1056) = 0x7474754274696445;
  *(void *)(v0 + 1064) = 0xEA00000000006E6FLL;
  unint64_t v36 = sub_1B597CE38();
  *(void *)(v0 + 1072) = &type metadata for EditButtonView;
  *(void *)(v0 + 1080) = v36;
  uint64_t result = (void *)sub_1B5903374(v0);
  off_1E9D65760 = result;
  return result;
}

void *sub_1B59DA714()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65B18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B5A2BE60;
  *(void *)(inited + 32) = 0x656C63726943;
  *(void *)(inited + 40) = 0xE600000000000000;
  unint64_t v1 = sub_1B590E388();
  *(void *)(inited + 48) = &type metadata for CircleView;
  *(void *)(inited + 56) = v1;
  *(void *)(inited + 64) = 0x657370696C6C45;
  *(void *)(inited + 72) = 0xE700000000000000;
  unint64_t v2 = sub_1B590E544();
  *(void *)(inited + 80) = &type metadata for EllipseView;
  *(void *)(inited + 88) = v2;
  *(void *)(inited + 96) = 0x656C7573706143;
  *(void *)(inited + 104) = 0xE700000000000000;
  unint64_t v3 = sub_1B590E700();
  *(void *)(inited + 112) = &type metadata for CapsuleView;
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 128) = 0x6C676E6174636552;
  *(void *)(inited + 136) = 0xE900000000000065;
  unint64_t v4 = sub_1B590E8BC();
  *(void *)(inited + 144) = &type metadata for RectangleView;
  *(void *)(inited + 152) = v4;
  *(void *)(inited + 160) = 0xD000000000000010;
  *(void *)(inited + 168) = 0x80000001B5A33BA0;
  unint64_t v5 = sub_1B590EACC();
  *(void *)(inited + 176) = &type metadata for RoundedRectangleView;
  *(void *)(inited + 184) = v5;
  uint64_t result = (void *)sub_1B5903368(inited);
  off_1E9D65768 = result;
  return result;
}

void *sub_1B59DA834()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65B28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B5A2BE60;
  *(void *)(inited + 32) = 0x726F6C6F43;
  *(void *)(inited + 40) = 0xE500000000000000;
  unint64_t v1 = sub_1B59E0710();
  *(void *)(inited + 48) = &type metadata for ColorShapeStyle;
  *(void *)(inited + 56) = v1;
  *(void *)(inited + 64) = 0x6C6169726574614DLL;
  *(void *)(inited + 72) = 0xE800000000000000;
  unint64_t v2 = sub_1B59E0764();
  *(void *)(inited + 80) = &type metadata for MaterialShapeStyle;
  *(void *)(inited + 88) = v2;
  strcpy((char *)(inited + 96), "LinearGradient");
  *(unsigned char *)(inited + 111) = -18;
  unint64_t v3 = sub_1B59E07B8();
  *(void *)(inited + 112) = &type metadata for LinearGradientShapeStyle;
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 128) = 0x4772616C75676E41;
  *(void *)(inited + 136) = 0xEF746E6569646172;
  unint64_t v4 = sub_1B59E080C();
  *(void *)(inited + 144) = &type metadata for AngularGradientShapeStyle;
  *(void *)(inited + 152) = v4;
  strcpy((char *)(inited + 160), "RadialGradient");
  *(unsigned char *)(inited + 175) = -18;
  unint64_t v5 = sub_1B59E0860();
  *(void *)(inited + 176) = &type metadata for RadialGradientShapeStyle;
  *(void *)(inited + 184) = v5;
  uint64_t result = (void *)sub_1B59034D4(inited);
  off_1E9D65770 = result;
  return result;
}

void *sub_1B59DA964()
{
  uint64_t result = (void *)sub_1B59034E0(MEMORY[0x1E4FBC860]);
  off_1E9D65778 = result;
  return result;
}

void *sub_1B59DA98C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65800);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B5A2BE70;
  *(void *)(v0 + 32) = 0x676E6964646170;
  *(void *)(v0 + 40) = 0xE700000000000000;
  unint64_t v1 = sub_1B59DE764();
  *(void *)(v0 + 48) = &type metadata for PaddingModifier;
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = 0x726564726F62;
  *(void *)(v0 + 72) = 0xE600000000000000;
  unint64_t v2 = sub_1B59DE7B8();
  *(void *)(v0 + 80) = &type metadata for BorderModifier;
  *(void *)(v0 + 88) = v2;
  strcpy((char *)(v0 + 96), "roundedBorder");
  *(_WORD *)(v0 + 110) = -4864;
  unint64_t v3 = sub_1B59DE80C();
  *(void *)(v0 + 112) = &type metadata for RoundedBorderModifier;
  *(void *)(v0 + 120) = v3;
  *(void *)(v0 + 128) = 0x756F72676B636162;
  *(void *)(v0 + 136) = 0xEF726F6C6F43646ELL;
  unint64_t v4 = sub_1B59DE860();
  *(void *)(v0 + 144) = &type metadata for BackgroundColorModifier;
  *(void *)(v0 + 152) = v4;
  *(void *)(v0 + 160) = 0x756F726765726F66;
  *(void *)(v0 + 168) = 0xEF726F6C6F43646ELL;
  unint64_t v5 = sub_1B59DE8B4();
  *(void *)(v0 + 176) = &type metadata for ForegroundColorModifier;
  *(void *)(v0 + 184) = v5;
  *(void *)(v0 + 192) = 0x756F726765726F66;
  *(void *)(v0 + 200) = 0xEF656C797453646ELL;
  unint64_t v6 = sub_1B59DE908();
  *(void *)(v0 + 208) = &type metadata for ForegroundStyleModifier;
  *(void *)(v0 + 216) = v6;
  *(void *)(v0 + 224) = 0x6F43746E65636361;
  *(void *)(v0 + 232) = 0xEB00000000726F6CLL;
  unint64_t v7 = sub_1B59DE95C();
  *(void *)(v0 + 240) = &type metadata for AccentColorModifier;
  *(void *)(v0 + 248) = v7;
  *(void *)(v0 + 256) = 1953393012;
  *(void *)(v0 + 264) = 0xE400000000000000;
  unint64_t v8 = sub_1B59DE9B0();
  *(void *)(v0 + 272) = &type metadata for TintColorModifier;
  *(void *)(v0 + 280) = v8;
  *(void *)(v0 + 288) = 0x656D617266;
  *(void *)(v0 + 296) = 0xE500000000000000;
  unint64_t v9 = sub_1B59DEA04();
  *(void *)(v0 + 304) = &type metadata for FrameModifier;
  *(void *)(v0 + 312) = v9;
  *(void *)(v0 + 320) = 0x696D694C656E696CLL;
  *(void *)(v0 + 328) = 0xE900000000000074;
  unint64_t v10 = sub_1B59DEA58();
  *(void *)(v0 + 336) = &type metadata for LineLimitModifier;
  *(void *)(v0 + 344) = v10;
  *(void *)(v0 + 352) = 0xD000000000000016;
  *(void *)(v0 + 360) = 0x80000001B5A33820;
  unint64_t v11 = sub_1B59DEAAC();
  *(void *)(v0 + 368) = &type metadata for MultiLineTextAlignmentModifier;
  *(void *)(v0 + 376) = v11;
  strcpy((char *)(v0 + 384), "cornerRadius");
  *(unsigned char *)(v0 + 397) = 0;
  *(_WORD *)(v0 + 398) = -5120;
  unint64_t v12 = sub_1B59DEB00();
  *(void *)(v0 + 400) = &type metadata for CornerRadiusModifier;
  *(void *)(v0 + 408) = v12;
  *(void *)(v0 + 416) = 0x536C6F72746E6F63;
  *(void *)(v0 + 424) = 0xEB00000000657A69;
  uint64_t v13 = type metadata accessor for ControlSizeModifier();
  uint64_t v14 = sub_1B59E04FC(&qword_1E9D65868, 255, (void (*)(uint64_t))type metadata accessor for ControlSizeModifier);
  *(void *)(v0 + 432) = v13;
  *(void *)(v0 + 440) = v14;
  *(void *)(v0 + 448) = 0x74536E6F74747562;
  *(void *)(v0 + 456) = 0xEB00000000656C79;
  unint64_t v15 = sub_1B59DEB54();
  *(void *)(v0 + 464) = &type metadata for ButtonStyleModifier;
  *(void *)(v0 + 472) = v15;
  strcpy((char *)(v0 + 480), "layoutPriority");
  *(unsigned char *)(v0 + 495) = -18;
  unint64_t v16 = sub_1B59DEBA8();
  *(void *)(v0 + 496) = &type metadata for LayoutPriorityModifier;
  *(void *)(v0 + 504) = v16;
  *(void *)(v0 + 512) = 1953394534;
  *(void *)(v0 + 520) = 0xE400000000000000;
  unint64_t v17 = sub_1B59DEBFC();
  *(void *)(v0 + 528) = &type metadata for FontModifier;
  *(void *)(v0 + 536) = v17;
  *(void *)(v0 + 544) = 0x7472656C61;
  *(void *)(v0 + 552) = 0xE500000000000000;
  unint64_t v18 = sub_1B59DEC50();
  *(void *)(v0 + 560) = &type metadata for AlertModifier;
  *(void *)(v0 + 568) = v18;
  *(void *)(v0 + 576) = 0xD000000000000012;
  *(void *)(v0 + 584) = 0x80000001B5A33840;
  unint64_t v19 = sub_1B59DECA4();
  *(void *)(v0 + 592) = &type metadata for ConfirmationDialogModifier;
  *(void *)(v0 + 600) = v19;
  *(void *)(v0 + 608) = 26217;
  *(void *)(v0 + 616) = 0xE200000000000000;
  unint64_t v20 = sub_1B59DECF8();
  *(void *)(v0 + 624) = &type metadata for IfModifier;
  *(void *)(v0 + 632) = v20;
  *(void *)(v0 + 640) = 0x776F64616873;
  *(void *)(v0 + 648) = 0xE600000000000000;
  unint64_t v21 = sub_1B59DED4C();
  *(void *)(v0 + 656) = &type metadata for ShadowModifier;
  *(void *)(v0 + 664) = v21;
  *(void *)(v0 + 672) = 0x697461676976616ELL;
  *(void *)(v0 + 680) = 0xEF656C7469546E6FLL;
  unint64_t v22 = sub_1B59DEDA0();
  *(void *)(v0 + 688) = &type metadata for NavigationTitleModifier;
  *(void *)(v0 + 696) = v22;
  *(void *)(v0 + 704) = 0xD00000000000001DLL;
  *(void *)(v0 + 712) = 0x80000001B5A33860;
  unint64_t v23 = sub_1B59DEDF4();
  *(void *)(v0 + 720) = &type metadata for NavigationBarTitleDisplayModeModifier;
  *(void *)(v0 + 728) = v23;
  *(void *)(v0 + 736) = 0x656B6F727473;
  *(void *)(v0 + 744) = 0xE600000000000000;
  unint64_t v24 = sub_1B597B040();
  *(void *)(v0 + 752) = &type metadata for StrokeModifier;
  *(void *)(v0 + 760) = v24;
  *(void *)(v0 + 768) = 0x7A69536465786966;
  *(void *)(v0 + 776) = 0xE900000000000065;
  unint64_t v25 = sub_1B59DEE48();
  *(void *)(v0 + 784) = &type metadata for FixedSizeModifier;
  *(void *)(v0 + 792) = v25;
  *(void *)(v0 + 800) = 0x7061685370696C63;
  *(void *)(v0 + 808) = 0xE900000000000065;
  unint64_t v26 = sub_1B59DEE9C();
  *(void *)(v0 + 816) = &type metadata for ClipShapeModifier;
  *(void *)(v0 + 824) = v26;
  *(void *)(v0 + 832) = 0x7465656873;
  *(void *)(v0 + 840) = 0xE500000000000000;
  unint64_t v27 = sub_1B59DEEF0();
  *(void *)(v0 + 848) = &type metadata for SheetModifier;
  *(void *)(v0 + 856) = v27;
  *(void *)(v0 + 864) = 0x7261657070416E6FLL;
  *(void *)(v0 + 872) = 0xE800000000000000;
  unint64_t v28 = sub_1B59DEF44();
  *(void *)(v0 + 880) = &type metadata for OnAppearModifier;
  *(void *)(v0 + 888) = v28;
  strcpy((char *)(v0 + 896), "onTapGesture");
  *(unsigned char *)(v0 + 909) = 0;
  *(_WORD *)(v0 + 910) = -5120;
  unint64_t v29 = sub_1B59A0438();
  *(void *)(v0 + 912) = &type metadata for OnTapModifier;
  *(void *)(v0 + 920) = v29;
  *(void *)(v0 + 928) = 0x756F72676B636162;
  *(void *)(v0 + 936) = 0xEA0000000000646ELL;
  unint64_t v30 = sub_1B59DEF98();
  *(void *)(v0 + 944) = &type metadata for BackgroundModifier;
  *(void *)(v0 + 952) = v30;
  *(void *)(v0 + 960) = 0x79616C7265766FLL;
  *(void *)(v0 + 968) = 0xE700000000000000;
  unint64_t v31 = sub_1B59DEFEC();
  *(void *)(v0 + 976) = &type metadata for OverlayModifier;
  *(void *)(v0 + 984) = v31;
  *(void *)(v0 + 992) = 0x6F6974616D696E61;
  *(void *)(v0 + 1000) = 0xE90000000000006ELL;
  unint64_t v32 = sub_1B59DF040();
  *(void *)(v0 + 1008) = &type metadata for AnimationModifier;
  *(void *)(v0 + 1016) = v32;
  *(void *)(v0 + 1024) = 1684828002;
  *(void *)(v0 + 1032) = 0xE400000000000000;
  unint64_t v33 = sub_1B59DF094();
  *(void *)(v0 + 1040) = &type metadata for BoldModifier;
  *(void *)(v0 + 1048) = v33;
  *(void *)(v0 + 1056) = 0x63696C617469;
  *(void *)(v0 + 1064) = 0xE600000000000000;
  unint64_t v34 = sub_1B59DF0E8();
  *(void *)(v0 + 1072) = &type metadata for ItalicModifier;
  *(void *)(v0 + 1080) = v34;
  *(void *)(v0 + 1088) = 0x636170736F6E6F6DLL;
  *(void *)(v0 + 1096) = 0xEA00000000006465;
  unint64_t v35 = sub_1B59DF13C();
  *(void *)(v0 + 1104) = &type metadata for MonospacedModifier;
  *(void *)(v0 + 1112) = v35;
  *(void *)(v0 + 1120) = 0x636170736F6E6F6DLL;
  *(void *)(v0 + 1128) = 0xEF74696769446465;
  unint64_t v36 = sub_1B59DF190();
  *(void *)(v0 + 1136) = &type metadata for MonospacedDigitModifier;
  *(void *)(v0 + 1144) = v36;
  *(void *)(v0 + 1152) = 0x676E696E72656BLL;
  *(void *)(v0 + 1160) = 0xE700000000000000;
  unint64_t v37 = sub_1B59DF1E4();
  *(void *)(v0 + 1168) = &type metadata for KerningModifier;
  *(void *)(v0 + 1176) = v37;
  *(void *)(v0 + 1184) = 0x676E696B63617274;
  *(void *)(v0 + 1192) = 0xE800000000000000;
  unint64_t v38 = sub_1B59DF238();
  *(void *)(v0 + 1200) = &type metadata for TrackingModifier;
  *(void *)(v0 + 1208) = v38;
  strcpy((char *)(v0 + 1216), "baselineOffset");
  *(unsigned char *)(v0 + 1231) = -18;
  unint64_t v39 = sub_1B59DF28C();
  *(void *)(v0 + 1232) = &type metadata for BaselineOffsetModifier;
  *(void *)(v0 + 1240) = v39;
  *(void *)(v0 + 1248) = 0x6C7974536D726F66;
  *(void *)(v0 + 1256) = 0xE900000000000065;
  unint64_t v40 = sub_1B59DF2E0();
  *(void *)(v0 + 1264) = &type metadata for FormStyleModifier;
  *(void *)(v0 + 1272) = v40;
  *(void *)(v0 + 1280) = 0x666645656C616373;
  *(void *)(v0 + 1288) = 0xEB00000000746365;
  unint64_t v41 = sub_1B59DF334();
  *(void *)(v0 + 1296) = &type metadata for ScaleEffectModifier;
  *(void *)(v0 + 1304) = v41;
  *(void *)(v0 + 1312) = 0x6152746365707361;
  *(void *)(v0 + 1320) = 0xEB000000006F6974;
  unint64_t v42 = sub_1B59DF388();
  *(void *)(v0 + 1328) = &type metadata for AspectRatioModifier;
  *(void *)(v0 + 1336) = v42;
  *(void *)(v0 + 1344) = 0xD000000000000012;
  *(void *)(v0 + 1352) = 0x80000001B5A33880;
  unint64_t v43 = sub_1B59DF3DC();
  *(void *)(v0 + 1360) = &type metadata for AccessibilityLabelModifier;
  *(void *)(v0 + 1368) = v43;
  *(void *)(v0 + 1376) = 0xD000000000000017;
  *(void *)(v0 + 1384) = 0x80000001B5A338A0;
  unint64_t v44 = sub_1B59DF430();
  *(void *)(v0 + 1392) = &type metadata for AccessibilityIdentifierModifier;
  *(void *)(v0 + 1400) = v44;
  *(void *)(v0 + 1408) = 0xD000000000000013;
  *(void *)(v0 + 1416) = 0x80000001B5A338C0;
  unint64_t v45 = sub_1B59DF484();
  *(void *)(v0 + 1424) = &type metadata for AccessibilityHiddenModifier;
  *(void *)(v0 + 1432) = v45;
  *(void *)(v0 + 1440) = 0xD000000000000013;
  *(void *)(v0 + 1448) = 0x80000001B5A338E0;
  unint64_t v46 = sub_1B59DF4D8();
  *(void *)(v0 + 1456) = &type metadata for SymbolRenderingModeModifier;
  *(void *)(v0 + 1464) = v46;
  *(void *)(v0 + 1472) = 0x6163536567616D69;
  *(void *)(v0 + 1480) = 0xEA0000000000656CLL;
  unint64_t v47 = sub_1B59DF52C();
  *(void *)(v0 + 1488) = &type metadata for ImageScaleModifier;
  *(void *)(v0 + 1496) = v47;
  *(void *)(v0 + 1504) = 0x7261626C6F6F74;
  *(void *)(v0 + 1512) = 0xE700000000000000;
  unint64_t v48 = sub_1B59DF580();
  *(void *)(v0 + 1520) = &type metadata for ToolbarModifier;
  *(void *)(v0 + 1528) = v48;
  strcpy((char *)(v0 + 1536), "contentShape");
  *(unsigned char *)(v0 + 1549) = 0;
  *(_WORD *)(v0 + 1550) = -5120;
  unint64_t v49 = sub_1B59DF5D4();
  *(void *)(v0 + 1552) = &type metadata for ContentShapeModifier;
  *(void *)(v0 + 1560) = v49;
  *(void *)(v0 + 1568) = 0x7453656C67676F74;
  *(void *)(v0 + 1576) = 0xEB00000000656C79;
  unint64_t v50 = sub_1B59DF628();
  *(void *)(v0 + 1584) = &type metadata for ToggleStyleModifier;
  *(void *)(v0 + 1592) = v50;
  *(void *)(v0 + 1600) = 0x64656C6261736964;
  *(void *)(v0 + 1608) = 0xE800000000000000;
  unint64_t v51 = sub_1B59DF67C();
  *(void *)(v0 + 1616) = &type metadata for DisabledModifier;
  *(void *)(v0 + 1624) = v51;
  *(void *)(v0 + 1632) = 0xD00000000000001DLL;
  *(void *)(v0 + 1640) = 0x80000001B5A33900;
  unint64_t v52 = sub_1B59DF6D0();
  *(void *)(v0 + 1648) = &type metadata for NavigationBarBackButtonHiddenModifier;
  *(void *)(v0 + 1656) = v52;
  *(void *)(v0 + 1664) = 0x74657366666FLL;
  *(void *)(v0 + 1672) = 0xE600000000000000;
  unint64_t v53 = sub_1B59DF724();
  *(void *)(v0 + 1680) = &type metadata for OffsetModifier;
  *(void *)(v0 + 1688) = v53;
  strcpy((char *)(v0 + 1696), "listRowInsets");
  *(_WORD *)(v0 + 1710) = -4864;
  unint64_t v54 = sub_1B59DF778();
  *(void *)(v0 + 1712) = &type metadata for ListRowInsetsModifier;
  *(void *)(v0 + 1720) = v54;
  *(void *)(v0 + 1728) = 0xD000000000000010;
  *(void *)(v0 + 1736) = 0x80000001B5A33920;
  unint64_t v55 = sub_1B59DF7CC();
  *(void *)(v0 + 1744) = &type metadata for ListRowSeparatorModifier;
  *(void *)(v0 + 1752) = v55;
  *(void *)(v0 + 1760) = 0x6C7974537473696CLL;
  *(void *)(v0 + 1768) = 0xE900000000000065;
  unint64_t v56 = sub_1B59DF820();
  *(void *)(v0 + 1776) = &type metadata for ListStyleModifier;
  *(void *)(v0 + 1784) = v56;
  *(void *)(v0 + 1792) = 0xD000000000000011;
  *(void *)(v0 + 1800) = 0x80000001B5A33940;
  unint64_t v57 = sub_1B59DF874();
  *(void *)(v0 + 1808) = &type metadata for ListRowBackgroundModifier;
  *(void *)(v0 + 1816) = v57;
  *(void *)(v0 + 1824) = 0x7070617369446E6FLL;
  *(void *)(v0 + 1832) = 0xEB00000000726165;
  unint64_t v58 = sub_1B59DF8C8();
  *(void *)(v0 + 1840) = &type metadata for OnDisappearModifier;
  *(void *)(v0 + 1848) = v58;
  *(void *)(v0 + 1856) = 0xD00000000000001ALL;
  *(void *)(v0 + 1864) = 0x80000001B5A33960;
  unint64_t v59 = sub_1B59DF91C();
  *(void *)(v0 + 1872) = &type metadata for InteractiveDismissDisabledModifier;
  *(void *)(v0 + 1880) = v59;
  *(void *)(v0 + 1888) = 0x64657070696C63;
  *(void *)(v0 + 1896) = 0xE700000000000000;
  unint64_t v60 = sub_1B59DF970();
  *(void *)(v0 + 1904) = &type metadata for ClippedModifier;
  *(void *)(v0 + 1912) = v60;
  *(void *)(v0 + 1920) = 0xD000000000000011;
  *(void *)(v0 + 1928) = 0x80000001B5A33980;
  unint64_t v61 = sub_1B59DF9C4();
  *(void *)(v0 + 1936) = &type metadata for ButtonBorderShapeModifier;
  *(void *)(v0 + 1944) = v61;
  *(void *)(v0 + 1952) = 25705;
  *(void *)(v0 + 1960) = 0xE200000000000000;
  unint64_t v62 = sub_1B59DFA18();
  *(void *)(v0 + 1968) = &type metadata for IdentifierModifier;
  *(void *)(v0 + 1976) = v62;
  *(void *)(v0 + 1984) = 0x65676E6168436E6FLL;
  *(void *)(v0 + 1992) = 0xE800000000000000;
  unint64_t v63 = sub_1B59DFA6C();
  *(void *)(v0 + 2000) = &type metadata for OnChangeModifier;
  *(void *)(v0 + 2008) = v63;
  *(void *)(v0 + 2016) = 0xD000000000000015;
  *(void *)(v0 + 2024) = 0x80000001B5A339A0;
  unint64_t v64 = sub_1B59DFAC0();
  *(void *)(v0 + 2032) = &type metadata for NavigationDestinationModifier;
  *(void *)(v0 + 2040) = v64;
  strcpy((char *)(v0 + 2048), "alignmentGuide");
  *(unsigned char *)(v0 + 2063) = -18;
  unint64_t v65 = sub_1B59DFB14();
  *(void *)(v0 + 2064) = &type metadata for AlignmentGuideModifier;
  *(void *)(v0 + 2072) = v65;
  *(void *)(v0 + 2080) = 1802723693;
  *(void *)(v0 + 2088) = 0xE400000000000000;
  unint64_t v66 = sub_1B59DFB68();
  *(void *)(v0 + 2096) = &type metadata for MaskModifier;
  *(void *)(v0 + 2104) = v66;
  *(void *)(v0 + 2112) = 0xD000000000000012;
  *(void *)(v0 + 2120) = 0x80000001B5A339C0;
  unint64_t v67 = sub_1B59DFBBC();
  *(void *)(v0 + 2128) = &type metadata for ListSectionSpacingModifier;
  *(void *)(v0 + 2136) = v67;
  *(void *)(v0 + 2144) = 0xD000000000000012;
  *(void *)(v0 + 2152) = 0x80000001B5A339E0;
  unint64_t v68 = sub_1B59DFC10();
  *(void *)(v0 + 2160) = &type metadata for AccessibilityValueModifier;
  *(void *)(v0 + 2168) = v68;
  *(void *)(v0 + 2176) = 0xD000000000000011;
  *(void *)(v0 + 2184) = 0x80000001B5A33A00;
  unint64_t v69 = sub_1B59DFC64();
  *(void *)(v0 + 2192) = &type metadata for AccessibilityHintModifier;
  *(void *)(v0 + 2200) = v69;
  *(void *)(v0 + 2208) = 0xD000000000000013;
  *(void *)(v0 + 2216) = 0x80000001B5A33A20;
  unint64_t v70 = sub_1B59DFCB8();
  *(void *)(v0 + 2224) = &type metadata for AccessibilityActionModifier;
  *(void *)(v0 + 2232) = v70;
  *(void *)(v0 + 2240) = 0xD000000000000014;
  *(void *)(v0 + 2248) = 0x80000001B5A33A40;
  unint64_t v71 = sub_1B59DFD0C();
  *(void *)(v0 + 2256) = &type metadata for AccessibilityElementModifier;
  *(void *)(v0 + 2264) = v71;
  *(void *)(v0 + 2272) = 0xD000000000000015;
  *(void *)(v0 + 2280) = 0x80000001B5A33A60;
  unint64_t v72 = sub_1B59DFD60();
  *(void *)(v0 + 2288) = &type metadata for AccessibilityChildrenModifier;
  *(void *)(v0 + 2296) = v72;
  *(void *)(v0 + 2304) = 0xD000000000000014;
  *(void *)(v0 + 2312) = 0x80000001B5A33A80;
  unint64_t v73 = sub_1B59DFDB4();
  *(void *)(v0 + 2320) = &type metadata for AccessibilityHeadingModifier;
  *(void *)(v0 + 2328) = v73;
  *(void *)(v0 + 2336) = 0xD000000000000014;
  *(void *)(v0 + 2344) = 0x80000001B5A33AA0;
  uint64_t v74 = type metadata accessor for AccessibilityFocusedModifier();
  uint64_t v75 = sub_1B59E04FC(&qword_1E9D65A38, 255, (void (*)(uint64_t))type metadata accessor for AccessibilityFocusedModifier);
  *(void *)(v0 + 2352) = v74;
  *(void *)(v0 + 2360) = v75;
  *(void *)(v0 + 2368) = 0xD000000000000016;
  *(void *)(v0 + 2376) = 0x80000001B5A33AC0;
  unint64_t v76 = sub_1B59DFE08();
  *(void *)(v0 + 2384) = &type metadata for AccessibilityAddTraitsModifier;
  *(void *)(v0 + 2392) = v76;
  *(void *)(v0 + 2400) = 0xD000000000000019;
  *(void *)(v0 + 2408) = 0x80000001B5A33AE0;
  unint64_t v77 = sub_1B59DFE5C();
  *(void *)(v0 + 2416) = &type metadata for AccessibilityRemoveTraitsModifier;
  *(void *)(v0 + 2424) = v77;
  *(void *)(v0 + 2432) = 6775156;
  *(void *)(v0 + 2440) = 0xE300000000000000;
  unint64_t v78 = sub_1B59DFEB0();
  *(void *)(v0 + 2448) = &type metadata for TagModifier;
  *(void *)(v0 + 2456) = v78;
  *(void *)(v0 + 2464) = 0x745372656B636970;
  *(void *)(v0 + 2472) = 0xEB00000000656C79;
  unint64_t v79 = sub_1B59DFF04();
  *(void *)(v0 + 2480) = &type metadata for PickerStyleModifier;
  *(void *)(v0 + 2488) = v79;
  *(void *)(v0 + 2496) = 0x65766F4D6E6FLL;
  *(void *)(v0 + 2504) = 0xE600000000000000;
  unint64_t v80 = sub_1B59DFF58();
  *(void *)(v0 + 2512) = &type metadata for OnMoveModifier;
  *(void *)(v0 + 2520) = v80;
  *(void *)(v0 + 2528) = 0x6574656C65446E6FLL;
  *(void *)(v0 + 2536) = 0xE800000000000000;
  unint64_t v81 = sub_1B59DFFAC();
  *(void *)(v0 + 2544) = &type metadata for OnDeleteModifier;
  *(void *)(v0 + 2552) = v81;
  *(void *)(v0 + 2560) = 0xD000000000000017;
  *(void *)(v0 + 2568) = 0x80000001B5A33B00;
  unint64_t v82 = sub_1B59E0000();
  *(void *)(v0 + 2576) = &type metadata for ScrollContentBackgroundModifier;
  *(void *)(v0 + 2584) = v82;
  uint64_t result = (void *)sub_1B59034B0(v0);
  off_1E9D65780 = result;
  return result;
}

void *sub_1B59DB8DC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65A78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B5A2BE80;
  *(void *)(inited + 32) = 0x7373696D736964;
  *(void *)(inited + 40) = 0xE700000000000000;
  uint64_t v1 = type metadata accessor for DismissAction(0);
  uint64_t v2 = sub_1B59E04FC(&qword_1E9D65A80, 255, (void (*)(uint64_t))type metadata accessor for DismissAction);
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 64) = 7628147;
  *(void *)(inited + 72) = 0xE300000000000000;
  unint64_t v3 = sub_1B59E0054();
  *(void *)(inited + 80) = &type metadata for SetAction;
  *(void *)(inited + 88) = v3;
  *(void *)(inited + 96) = 0x7571655270747468;
  *(void *)(inited + 104) = 0xEB00000000747365;
  unint64_t v4 = sub_1B59E00A8();
  *(void *)(inited + 112) = &type metadata for HTTPRequestAction;
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 128) = 0x4C52556E65706FLL;
  *(void *)(inited + 136) = 0xE700000000000000;
  uint64_t v5 = type metadata accessor for OpenURLAction(0);
  uint64_t v6 = sub_1B59E04FC(&qword_1E9D65A98, 255, (void (*)(uint64_t))type metadata accessor for OpenURLAction);
  *(void *)(inited + 144) = v5;
  *(void *)(inited + 152) = v6;
  *(void *)(inited + 160) = 0x64616F6C6572;
  *(void *)(inited + 168) = 0xE600000000000000;
  unint64_t v7 = sub_1B59E00FC();
  *(void *)(inited + 176) = &type metadata for ReloadAction;
  *(void *)(inited + 184) = v7;
  *(void *)(inited + 192) = 26217;
  *(void *)(inited + 200) = 0xE200000000000000;
  unint64_t v8 = sub_1B59E0150();
  *(void *)(inited + 208) = &type metadata for IfAction;
  *(void *)(inited + 216) = v8;
  strcpy((char *)(inited + 224), "withAnimation");
  *(_WORD *)(inited + 238) = -4864;
  unint64_t v9 = sub_1B59E01A4();
  *(void *)(inited + 240) = &type metadata for AnimationAction;
  *(void *)(inited + 248) = v9;
  *(void *)(inited + 256) = 0x6F546C6C6F726373;
  *(void *)(inited + 264) = 0xE800000000000000;
  uint64_t v10 = type metadata accessor for ScrollAction();
  uint64_t v11 = sub_1B59E04FC(&qword_1E9D65AB8, 255, (void (*)(uint64_t))type metadata accessor for ScrollAction);
  *(void *)(inited + 272) = v10;
  *(void *)(inited + 280) = v11;
  *(void *)(inited + 288) = 0x766F4D7961727261;
  *(void *)(inited + 296) = 0xE900000000000065;
  unint64_t v12 = sub_1B59E01F8();
  *(void *)(inited + 304) = &type metadata for MoveAction;
  *(void *)(inited + 312) = v12;
  *(void *)(inited + 320) = 0x6C65447961727261;
  *(void *)(inited + 328) = 0xEB00000000657465;
  unint64_t v13 = sub_1B59E024C();
  *(void *)(inited + 336) = &type metadata for DeleteAction;
  *(void *)(inited + 344) = v13;
  *(void *)(inited + 352) = 0x656C654474636964;
  *(void *)(inited + 360) = 0xEA00000000006574;
  unint64_t v14 = sub_1B59E02A0();
  *(void *)(inited + 368) = &type metadata for DictDeleteAction;
  *(void *)(inited + 376) = v14;
  *(void *)(inited + 384) = 0x7070417961727261;
  *(void *)(inited + 392) = 0xEB00000000646E65;
  unint64_t v15 = sub_1B59E02F4();
  *(void *)(inited + 400) = &type metadata for AppendAction;
  *(void *)(inited + 408) = v15;
  *(void *)(inited + 416) = 0x6D65527961727261;
  *(void *)(inited + 424) = 0xEF7473614C65766FLL;
  unint64_t v16 = sub_1B59E0348();
  *(void *)(inited + 432) = &type metadata for RemoveLastAction;
  *(void *)(inited + 440) = v16;
  uint64_t result = (void *)sub_1B59034BC(inited);
  off_1E9D65788 = result;
  return result;
}

void *sub_1B59DBC08()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
  *(void *)(inited + 32) = 0x6C62617A69736572;
  *(void *)(inited + 40) = 0xE900000000000065;
  uint64_t v1 = type metadata accessor for ResizableImageModifier();
  uint64_t v2 = sub_1B59E04FC(&qword_1E9D657F8, 255, (void (*)(uint64_t))type metadata accessor for ResizableImageModifier);
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v2;
  uint64_t result = (void *)sub_1B59034C8(inited);
  off_1E9D65790 = result;
  return result;
}

id ContentRegistry.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC6LiftUI15ContentRegistry_contentRegistry;
  uint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)&v0[v1] = sub_1B5903374(MEMORY[0x1E4FBC860]);
  uint64_t v4 = OBJC_IVAR____TtC6LiftUI15ContentRegistry_shapeRegistry;
  *(void *)&v2[v4] = sub_1B5903368(v3);
  uint64_t v5 = OBJC_IVAR____TtC6LiftUI15ContentRegistry_modifierRegistry;
  *(void *)&v2[v5] = sub_1B59034B0(v3);
  uint64_t v6 = OBJC_IVAR____TtC6LiftUI15ContentRegistry_imageModifierRegistry;
  *(void *)&v2[v6] = sub_1B59034C8(v3);
  uint64_t v7 = OBJC_IVAR____TtC6LiftUI15ContentRegistry_actionRegistry;
  *(void *)&v2[v7] = sub_1B59034BC(v3);

  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for ContentRegistry();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1B59DBDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B59DBE44(a1, a2, a3, a4, &OBJC_IVAR____TtC6LiftUI15ContentRegistry_contentRegistry, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5958CF8);
}

uint64_t sub_1B59DBDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B59DBE44(a1, a2, a3, a4, &OBJC_IVAR____TtC6LiftUI15ContentRegistry_shapeRegistry, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5958D04);
}

uint64_t sub_1B59DBDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B59DBE44(a1, a2, a3, a4, &OBJC_IVAR____TtC6LiftUI15ContentRegistry_modifierRegistry, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5958E9C);
}

uint64_t sub_1B59DBE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B59DBE44(a1, a2, a3, a4, &OBJC_IVAR____TtC6LiftUI15ContentRegistry_imageModifierRegistry, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5958EA8);
}

uint64_t sub_1B59DBE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B59DBE44(a1, a2, a3, a4, &OBJC_IVAR____TtC6LiftUI15ContentRegistry_actionRegistry, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5958EB4);
}

uint64_t sub_1B59DBE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v12 = (uint64_t *)(v6 + *a5);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v12;
  *unint64_t v12 = 0x8000000000000000;
  a6(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
  *unint64_t v12 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1B59DBF14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6LiftUI15ContentRegistry_contentRegistry);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B59049B8(a1, a2);
    if (v8)
    {
      long long v15 = *(_OWORD *)(*(void *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1E9D62B30 != -1) {
    swift_once();
  }
  objc_super v9 = off_1E9D65760;
  if (*((void *)off_1E9D65760 + 2))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B59049B8(a1, a2);
    if (v11)
    {
      long long v15 = *(_OWORD *)(v9[7] + 16 * v10);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentRegistryError();
  sub_1B59E04FC(&qword_1E9D62F08, 255, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
  swift_allocError();
  unint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8);
  *unint64_t v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B5A1C3A8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  sub_1B5A1C3C8();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1B59DC15C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6LiftUI15ContentRegistry_shapeRegistry);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B59049B8(a1, a2);
    if (v8)
    {
      long long v15 = *(_OWORD *)(*(void *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1E9D62B38 != -1) {
    swift_once();
  }
  objc_super v9 = off_1E9D65768;
  if (*((void *)off_1E9D65768 + 2))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B59049B8(a1, a2);
    if (v11)
    {
      long long v15 = *(_OWORD *)(v9[7] + 16 * v10);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentRegistryError();
  sub_1B59E04FC(&qword_1E9D62F08, 255, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
  swift_allocError();
  unint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8);
  *unint64_t v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B5A1C3A8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  sub_1B5A1C3C8();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1B59DC3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6LiftUI15ContentRegistry_modifierRegistry);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B59049B8(a1, a2);
    if (v8)
    {
      long long v15 = *(_OWORD *)(*(void *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1E9D62B50 != -1) {
    swift_once();
  }
  objc_super v9 = off_1E9D65780;
  if (*((void *)off_1E9D65780 + 2))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B59049B8(a1, a2);
    if (v11)
    {
      long long v15 = *(_OWORD *)(v9[7] + 16 * v10);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentRegistryError();
  sub_1B59E04FC(&qword_1E9D62F08, 255, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
  swift_allocError();
  unint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8);
  *unint64_t v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B5A1C3A8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  sub_1B5A1C3C8();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1B59DC5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6LiftUI15ContentRegistry_imageModifierRegistry);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B59049B8(a1, a2);
    if (v8)
    {
      long long v15 = *(_OWORD *)(*(void *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1E9D62B60 != -1) {
    swift_once();
  }
  objc_super v9 = off_1E9D65790;
  if (*((void *)off_1E9D65790 + 2))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B59049B8(a1, a2);
    if (v11)
    {
      long long v15 = *(_OWORD *)(v9[7] + 16 * v10);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentRegistryError();
  sub_1B59E04FC(&qword_1E9D62F08, 255, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
  swift_allocError();
  unint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8);
  *unint64_t v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B5A1C3A8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  sub_1B5A1C3C8();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1B59DC834(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6LiftUI15ContentRegistry_actionRegistry);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B59049B8(a1, a2);
    if (v8)
    {
      long long v15 = *(_OWORD *)(*(void *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1E9D62B58 != -1) {
    swift_once();
  }
  objc_super v9 = off_1E9D65788;
  if (*((void *)off_1E9D65788 + 2))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B59049B8(a1, a2);
    if (v11)
    {
      long long v15 = *(_OWORD *)(v9[7] + 16 * v10);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentRegistryError();
  sub_1B59E04FC(&qword_1E9D62F08, 255, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
  swift_allocError();
  unint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8);
  *unint64_t v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B5A1C3A8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  sub_1B5A1C3C8();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

id ContentRegistry.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContentRegistry();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B59DCB2C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContentRegistryError();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B5A1C3F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B59DE700(v2, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v12 = 1;
  if (EnumCaseMultiPayload != 7)
  {
    swift_bridgeObjectRelease();
    unint64_t v13 = &v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48)];
    unint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v14(v10, v13, v7);
    v14(a1, v10, v7);
    uint64_t v12 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v12, 1, v7);
}

uint64_t sub_1B59DCD04()
{
  sub_1B59096A4();
  sub_1B5A1A998();
  return v1;
}

uint64_t type metadata accessor for ContentRegistry()
{
  return self;
}

uint64_t _s7SwiftUI4ViewP04LiftB0E15contentRegistryyQrAD07ContentF0CF_0()
{
  return swift_release();
}

id sub_1B59DCDE4()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ContentRegistry()), sel_init);
  qword_1E9D65798 = (uint64_t)result;
  return result;
}

id sub_1B59DCE14@<X0>(void *a1@<X8>)
{
  if (qword_1E9D62B68 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1E9D65798;
  *a1 = qword_1E9D65798;
  return v2;
}

uint64_t sub_1B59DCE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1B59E04FC(&qword_1E9D65B20, a2, (void (*)(uint64_t))type metadata accessor for ContentRegistry);
  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t method lookup function for ContentRegistry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ContentRegistry);
}

uint64_t dispatch thunk of ContentRegistry.addViewType(_:id:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ContentRegistry.addShapeType(_:id:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ContentRegistry.addModifierType(_:id:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ContentRegistry.addImageModifierType(_:id:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ContentRegistry.addActionType(_:id:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t sub_1B59DD048()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B59DD0B8()
{
  unint64_t result = qword_1E9D657D0;
  if (!qword_1E9D657D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D657C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D657D0);
  }
  return result;
}

uint64_t *sub_1B59DD114(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1B5A1C3F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1B59DD52C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
      uint64_t v4 = sub_1B5A1C3F8();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(v3, v4);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1B59DD604(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1B5A1C3F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1B59DD9C0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B59DDDC4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_1B5A1C3F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1B59DDDC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentRegistryError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ContentRegistryError()
{
  uint64_t result = qword_1E9D657E0;
  if (!qword_1E9D657E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1B59DDE6C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      *a1 = *a2;
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1B5A1C3F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1B59DE20C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B59DDDC4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        *a1 = *a2;
        uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_1B5A1C3F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1B59DE5BC()
{
  uint64_t result = sub_1B5A1C3F8();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v9 = &v8;
    swift_getTupleTypeLayout2();
    uint64_t v10 = &v7;
    swift_getTupleTypeLayout2();
    uint64_t v11 = &v6;
    swift_getTupleTypeLayout2();
    uint64_t v12 = &v5;
    swift_getTupleTypeLayout2();
    unint64_t v13 = &v4;
    swift_getTupleTypeLayout2();
    unint64_t v14 = &v3;
    swift_getTupleTypeLayout2();
    long long v15 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1B59DE700(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentRegistryError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B59DE764()
{
  unint64_t result = qword_1E9D65808;
  if (!qword_1E9D65808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65808);
  }
  return result;
}

unint64_t sub_1B59DE7B8()
{
  unint64_t result = qword_1E9D65810;
  if (!qword_1E9D65810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65810);
  }
  return result;
}

unint64_t sub_1B59DE80C()
{
  unint64_t result = qword_1E9D65818;
  if (!qword_1E9D65818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65818);
  }
  return result;
}

unint64_t sub_1B59DE860()
{
  unint64_t result = qword_1E9D65820;
  if (!qword_1E9D65820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65820);
  }
  return result;
}

unint64_t sub_1B59DE8B4()
{
  unint64_t result = qword_1E9D65828;
  if (!qword_1E9D65828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65828);
  }
  return result;
}

unint64_t sub_1B59DE908()
{
  unint64_t result = qword_1E9D65830;
  if (!qword_1E9D65830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65830);
  }
  return result;
}

unint64_t sub_1B59DE95C()
{
  unint64_t result = qword_1E9D65838;
  if (!qword_1E9D65838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65838);
  }
  return result;
}

unint64_t sub_1B59DE9B0()
{
  unint64_t result = qword_1E9D65840;
  if (!qword_1E9D65840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65840);
  }
  return result;
}

unint64_t sub_1B59DEA04()
{
  unint64_t result = qword_1E9D65848;
  if (!qword_1E9D65848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65848);
  }
  return result;
}

unint64_t sub_1B59DEA58()
{
  unint64_t result = qword_1E9D65850;
  if (!qword_1E9D65850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65850);
  }
  return result;
}

unint64_t sub_1B59DEAAC()
{
  unint64_t result = qword_1E9D65858;
  if (!qword_1E9D65858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65858);
  }
  return result;
}

unint64_t sub_1B59DEB00()
{
  unint64_t result = qword_1E9D65860;
  if (!qword_1E9D65860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65860);
  }
  return result;
}

unint64_t sub_1B59DEB54()
{
  unint64_t result = qword_1E9D65870;
  if (!qword_1E9D65870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65870);
  }
  return result;
}

unint64_t sub_1B59DEBA8()
{
  unint64_t result = qword_1E9D65878;
  if (!qword_1E9D65878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65878);
  }
  return result;
}

unint64_t sub_1B59DEBFC()
{
  unint64_t result = qword_1E9D65880;
  if (!qword_1E9D65880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65880);
  }
  return result;
}

unint64_t sub_1B59DEC50()
{
  unint64_t result = qword_1E9D65888;
  if (!qword_1E9D65888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65888);
  }
  return result;
}

unint64_t sub_1B59DECA4()
{
  unint64_t result = qword_1E9D65890;
  if (!qword_1E9D65890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65890);
  }
  return result;
}

unint64_t sub_1B59DECF8()
{
  unint64_t result = qword_1E9D65898;
  if (!qword_1E9D65898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65898);
  }
  return result;
}

unint64_t sub_1B59DED4C()
{
  unint64_t result = qword_1E9D658A0;
  if (!qword_1E9D658A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658A0);
  }
  return result;
}

unint64_t sub_1B59DEDA0()
{
  unint64_t result = qword_1E9D658A8;
  if (!qword_1E9D658A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658A8);
  }
  return result;
}

unint64_t sub_1B59DEDF4()
{
  unint64_t result = qword_1E9D658B0;
  if (!qword_1E9D658B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658B0);
  }
  return result;
}

unint64_t sub_1B59DEE48()
{
  unint64_t result = qword_1E9D658B8;
  if (!qword_1E9D658B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658B8);
  }
  return result;
}

unint64_t sub_1B59DEE9C()
{
  unint64_t result = qword_1E9D658C0;
  if (!qword_1E9D658C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658C0);
  }
  return result;
}

unint64_t sub_1B59DEEF0()
{
  unint64_t result = qword_1E9D658C8;
  if (!qword_1E9D658C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658C8);
  }
  return result;
}

unint64_t sub_1B59DEF44()
{
  unint64_t result = qword_1E9D658D0;
  if (!qword_1E9D658D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658D0);
  }
  return result;
}

unint64_t sub_1B59DEF98()
{
  unint64_t result = qword_1E9D658D8;
  if (!qword_1E9D658D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658D8);
  }
  return result;
}

unint64_t sub_1B59DEFEC()
{
  unint64_t result = qword_1E9D658E0;
  if (!qword_1E9D658E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658E0);
  }
  return result;
}

unint64_t sub_1B59DF040()
{
  unint64_t result = qword_1E9D658E8;
  if (!qword_1E9D658E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658E8);
  }
  return result;
}

unint64_t sub_1B59DF094()
{
  unint64_t result = qword_1E9D658F0;
  if (!qword_1E9D658F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658F0);
  }
  return result;
}

unint64_t sub_1B59DF0E8()
{
  unint64_t result = qword_1E9D658F8;
  if (!qword_1E9D658F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D658F8);
  }
  return result;
}

unint64_t sub_1B59DF13C()
{
  unint64_t result = qword_1E9D65900;
  if (!qword_1E9D65900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65900);
  }
  return result;
}

unint64_t sub_1B59DF190()
{
  unint64_t result = qword_1E9D65908;
  if (!qword_1E9D65908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65908);
  }
  return result;
}

unint64_t sub_1B59DF1E4()
{
  unint64_t result = qword_1E9D65910;
  if (!qword_1E9D65910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65910);
  }
  return result;
}

unint64_t sub_1B59DF238()
{
  unint64_t result = qword_1E9D65918;
  if (!qword_1E9D65918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65918);
  }
  return result;
}

unint64_t sub_1B59DF28C()
{
  unint64_t result = qword_1E9D65920;
  if (!qword_1E9D65920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65920);
  }
  return result;
}

unint64_t sub_1B59DF2E0()
{
  unint64_t result = qword_1E9D65928;
  if (!qword_1E9D65928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65928);
  }
  return result;
}

unint64_t sub_1B59DF334()
{
  unint64_t result = qword_1E9D65930;
  if (!qword_1E9D65930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65930);
  }
  return result;
}

unint64_t sub_1B59DF388()
{
  unint64_t result = qword_1E9D65938;
  if (!qword_1E9D65938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65938);
  }
  return result;
}

unint64_t sub_1B59DF3DC()
{
  unint64_t result = qword_1E9D65940;
  if (!qword_1E9D65940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65940);
  }
  return result;
}

unint64_t sub_1B59DF430()
{
  unint64_t result = qword_1E9D65948;
  if (!qword_1E9D65948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65948);
  }
  return result;
}

unint64_t sub_1B59DF484()
{
  unint64_t result = qword_1E9D65950;
  if (!qword_1E9D65950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65950);
  }
  return result;
}

unint64_t sub_1B59DF4D8()
{
  unint64_t result = qword_1E9D65958;
  if (!qword_1E9D65958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65958);
  }
  return result;
}

unint64_t sub_1B59DF52C()
{
  unint64_t result = qword_1E9D65960;
  if (!qword_1E9D65960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65960);
  }
  return result;
}

unint64_t sub_1B59DF580()
{
  unint64_t result = qword_1E9D65968;
  if (!qword_1E9D65968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65968);
  }
  return result;
}

unint64_t sub_1B59DF5D4()
{
  unint64_t result = qword_1E9D65970;
  if (!qword_1E9D65970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65970);
  }
  return result;
}

unint64_t sub_1B59DF628()
{
  unint64_t result = qword_1E9D65978;
  if (!qword_1E9D65978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65978);
  }
  return result;
}

unint64_t sub_1B59DF67C()
{
  unint64_t result = qword_1E9D65980;
  if (!qword_1E9D65980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65980);
  }
  return result;
}

unint64_t sub_1B59DF6D0()
{
  unint64_t result = qword_1E9D65988;
  if (!qword_1E9D65988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65988);
  }
  return result;
}

unint64_t sub_1B59DF724()
{
  unint64_t result = qword_1E9D65990;
  if (!qword_1E9D65990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65990);
  }
  return result;
}

unint64_t sub_1B59DF778()
{
  unint64_t result = qword_1E9D65998;
  if (!qword_1E9D65998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65998);
  }
  return result;
}

unint64_t sub_1B59DF7CC()
{
  unint64_t result = qword_1E9D659A0;
  if (!qword_1E9D659A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659A0);
  }
  return result;
}

unint64_t sub_1B59DF820()
{
  unint64_t result = qword_1E9D659A8;
  if (!qword_1E9D659A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659A8);
  }
  return result;
}

unint64_t sub_1B59DF874()
{
  unint64_t result = qword_1E9D659B0;
  if (!qword_1E9D659B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659B0);
  }
  return result;
}

unint64_t sub_1B59DF8C8()
{
  unint64_t result = qword_1E9D659B8;
  if (!qword_1E9D659B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659B8);
  }
  return result;
}

unint64_t sub_1B59DF91C()
{
  unint64_t result = qword_1E9D659C0;
  if (!qword_1E9D659C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659C0);
  }
  return result;
}

unint64_t sub_1B59DF970()
{
  unint64_t result = qword_1E9D659C8;
  if (!qword_1E9D659C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659C8);
  }
  return result;
}

unint64_t sub_1B59DF9C4()
{
  unint64_t result = qword_1E9D659D0;
  if (!qword_1E9D659D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659D0);
  }
  return result;
}

unint64_t sub_1B59DFA18()
{
  unint64_t result = qword_1E9D659D8;
  if (!qword_1E9D659D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659D8);
  }
  return result;
}

unint64_t sub_1B59DFA6C()
{
  unint64_t result = qword_1E9D659E0;
  if (!qword_1E9D659E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659E0);
  }
  return result;
}

unint64_t sub_1B59DFAC0()
{
  unint64_t result = qword_1E9D659E8;
  if (!qword_1E9D659E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659E8);
  }
  return result;
}

unint64_t sub_1B59DFB14()
{
  unint64_t result = qword_1E9D659F0;
  if (!qword_1E9D659F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659F0);
  }
  return result;
}

unint64_t sub_1B59DFB68()
{
  unint64_t result = qword_1E9D659F8;
  if (!qword_1E9D659F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D659F8);
  }
  return result;
}

unint64_t sub_1B59DFBBC()
{
  unint64_t result = qword_1E9D65A00;
  if (!qword_1E9D65A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A00);
  }
  return result;
}

unint64_t sub_1B59DFC10()
{
  unint64_t result = qword_1E9D65A08;
  if (!qword_1E9D65A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A08);
  }
  return result;
}

unint64_t sub_1B59DFC64()
{
  unint64_t result = qword_1E9D65A10;
  if (!qword_1E9D65A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A10);
  }
  return result;
}

unint64_t sub_1B59DFCB8()
{
  unint64_t result = qword_1E9D65A18;
  if (!qword_1E9D65A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A18);
  }
  return result;
}

unint64_t sub_1B59DFD0C()
{
  unint64_t result = qword_1E9D65A20;
  if (!qword_1E9D65A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A20);
  }
  return result;
}

unint64_t sub_1B59DFD60()
{
  unint64_t result = qword_1E9D65A28;
  if (!qword_1E9D65A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A28);
  }
  return result;
}

unint64_t sub_1B59DFDB4()
{
  unint64_t result = qword_1E9D65A30;
  if (!qword_1E9D65A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A30);
  }
  return result;
}

unint64_t sub_1B59DFE08()
{
  unint64_t result = qword_1E9D65A40;
  if (!qword_1E9D65A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A40);
  }
  return result;
}

unint64_t sub_1B59DFE5C()
{
  unint64_t result = qword_1E9D65A48;
  if (!qword_1E9D65A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A48);
  }
  return result;
}

unint64_t sub_1B59DFEB0()
{
  unint64_t result = qword_1E9D65A50;
  if (!qword_1E9D65A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A50);
  }
  return result;
}

unint64_t sub_1B59DFF04()
{
  unint64_t result = qword_1E9D65A58;
  if (!qword_1E9D65A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A58);
  }
  return result;
}

unint64_t sub_1B59DFF58()
{
  unint64_t result = qword_1E9D65A60;
  if (!qword_1E9D65A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A60);
  }
  return result;
}

unint64_t sub_1B59DFFAC()
{
  unint64_t result = qword_1E9D65A68;
  if (!qword_1E9D65A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A68);
  }
  return result;
}

unint64_t sub_1B59E0000()
{
  unint64_t result = qword_1E9D65A70;
  if (!qword_1E9D65A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A70);
  }
  return result;
}

unint64_t sub_1B59E0054()
{
  unint64_t result = qword_1E9D65A88;
  if (!qword_1E9D65A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A88);
  }
  return result;
}

unint64_t sub_1B59E00A8()
{
  unint64_t result = qword_1E9D65A90;
  if (!qword_1E9D65A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65A90);
  }
  return result;
}

unint64_t sub_1B59E00FC()
{
  unint64_t result = qword_1E9D65AA0;
  if (!qword_1E9D65AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65AA0);
  }
  return result;
}

unint64_t sub_1B59E0150()
{
  unint64_t result = qword_1E9D65AA8;
  if (!qword_1E9D65AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65AA8);
  }
  return result;
}

unint64_t sub_1B59E01A4()
{
  unint64_t result = qword_1E9D65AB0;
  if (!qword_1E9D65AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65AB0);
  }
  return result;
}

unint64_t sub_1B59E01F8()
{
  unint64_t result = qword_1E9D65AC0;
  if (!qword_1E9D65AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65AC0);
  }
  return result;
}

unint64_t sub_1B59E024C()
{
  unint64_t result = qword_1E9D65AC8;
  if (!qword_1E9D65AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65AC8);
  }
  return result;
}

unint64_t sub_1B59E02A0()
{
  unint64_t result = qword_1E9D65AD0;
  if (!qword_1E9D65AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65AD0);
  }
  return result;
}

unint64_t sub_1B59E02F4()
{
  unint64_t result = qword_1E9D65AD8;
  if (!qword_1E9D65AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65AD8);
  }
  return result;
}

unint64_t sub_1B59E0348()
{
  unint64_t result = qword_1E9D65AE0;
  if (!qword_1E9D65AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65AE0);
  }
  return result;
}

unint64_t sub_1B59E039C()
{
  unint64_t result = qword_1E9D65AF0;
  if (!qword_1E9D65AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65AF0);
  }
  return result;
}

unint64_t sub_1B59E03F0()
{
  unint64_t result = qword_1E9D65AF8;
  if (!qword_1E9D65AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65AF8);
  }
  return result;
}

unint64_t sub_1B59E0444()
{
  unint64_t result = qword_1E9D65B08;
  if (!qword_1E9D65B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B08);
  }
  return result;
}

unint64_t sub_1B59E0498()
{
  unint64_t result = qword_1E9D65B10;
  if (!qword_1E9D65B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B10);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentRegistryKey()
{
  return &type metadata for ContentRegistryKey;
}

uint64_t sub_1B59E04FC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1B59E0544(uint64_t a1, uint64_t a2)
{
  if (qword_1E9D62B40 != -1) {
    swift_once();
  }
  uint64_t v4 = off_1E9D65770;
  if (!*((void *)off_1E9D65770 + 2)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B59049B8(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    type metadata accessor for ContentRegistryError();
    sub_1B59E04FC(&qword_1E9D62F08, 255, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
    swift_allocError();
    uint64_t v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8);
    *uint64_t v9 = a1;
    v9[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B5A1C3A8();
    swift_bridgeObjectRelease();
    v11[0] = 0xD000000000000019;
    v11[1] = 0x80000001B5A33BC0;
    char v7 = v11;
    sub_1B5A1BFA8();
    sub_1B5A1C3C8();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v7;
  }
  char v7 = *(void **)(v4[7] + 16 * v5);
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1B59E0710()
{
  unint64_t result = qword_1E9D65B30;
  if (!qword_1E9D65B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B30);
  }
  return result;
}

unint64_t sub_1B59E0764()
{
  unint64_t result = qword_1E9D65B38;
  if (!qword_1E9D65B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B38);
  }
  return result;
}

unint64_t sub_1B59E07B8()
{
  unint64_t result = qword_1E9D65B40;
  if (!qword_1E9D65B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B40);
  }
  return result;
}

unint64_t sub_1B59E080C()
{
  unint64_t result = qword_1E9D65B48;
  if (!qword_1E9D65B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B48);
  }
  return result;
}

unint64_t sub_1B59E0860()
{
  unint64_t result = qword_1E9D65B50;
  if (!qword_1E9D65B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9D65B50);
  }
  return result;
}

void *sub_1B59E08B4(uint64_t a1, uint64_t a2)
{
  if (qword_1E9D62B48 != -1) {
    swift_once();
  }
  uint64_t v4 = off_1E9D65778;
  if (!*((void *)off_1E9D65778 + 2)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B59049B8(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    type metadata accessor for ContentRegistryError();
    sub_1B59E04FC(&qword_1E9D62F08, 255, (void (*)(uint64_t))type metadata accessor for ContentRegistryError);
    swift_allocError();
    uint64_t v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8);
    *uint64_t v9 = a1;
    v9[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B5A1C3A8();
    swift_bridgeObjectRelease();
    v11[0] = 0xD000000000000022;
    v11[1] = 0x80000001B5A33BE0;
    char v7 = v11;
    sub_1B5A1BFA8();
    sub_1B5A1C3C8();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v7;
  }
  char v7 = *(void **)(v4[7] + 16 * v5);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B59E0A80()
{
  sub_1B59AFEEC(v0 + 16);
  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t type metadata accessor for AnyWeakDelegate()
{
  return self;
}

uint64_t sub_1B59E0ADC(uint64_t a1)
{
  uint64_t result = MEMORY[0x1BA9A4850](v1 + 16);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
    swift_unknownObjectRelease();
    return v6;
  }
  return result;
}

uint64_t sub_1B59E0B50()
{
  uint64_t result = MEMORY[0x1BA9A4850](v0 + 16);
  if (result)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
    swift_unknownObjectRelease();
    return v4;
  }
  return result;
}

uint64_t sub_1B59E0BB8(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1BA9A4850](v2 + 16);
  if (result)
  {
    uint64_t v6 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B59E0C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1BA9A4850](v3 + 16);
  if (result)
  {
    uint64_t v8 = *(void *)(v3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B59E0CF8(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1B59E0D18, 0, 0);
}

uint64_t sub_1B59E0D18()
{
  uint64_t v1 = MEMORY[0x1BA9A4850](v0[3] + 16);
  v0[4] = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0[3] + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 16) + **(int **)(v2 + 16));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[5] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1B59E0EF8;
    uint64_t v5 = v0[2];
    return v12(v5, ObjectType, v2);
  }
  else
  {
    uint64_t v7 = v0[2];
    type metadata accessor for RemoteLoaderError(0);
    sub_1B59B0EFC();
    swift_allocError();
    uint64_t v9 = v8;
    uint64_t v10 = sub_1B5A1A0D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v7, v10);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1B59E0EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 48) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1B59E1094;
  }
  else
  {
    *(void *)(v6 + 56) = a2;
    *(void *)(v6 + 64) = a1;
    uint64_t v7 = sub_1B59E102C;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1B59E102C()
{
  swift_unknownObjectRelease();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  return v1(v2, v3);
}

uint64_t sub_1B59E1094()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for AnyWeakDataSource()
{
  return self;
}

uint64_t sub_1B59E111C(uint64_t a1)
{
  if (MEMORY[0x1BA9A4850](v1 + 16))
  {
    uint64_t v3 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(a1, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  else
  {
    type metadata accessor for RemoteLoaderError(0);
    sub_1B59B0EFC();
    swift_allocError();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1B5A1A258();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, a1, v8);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

uint64_t sub_1B59E1228(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_1B59B1790;
  return MEMORY[0x1F4188298](sub_1B59E0D18, 0, 0);
}

uint64_t sub_1B59E12D4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t type metadata accessor for AnyWeakRemoteLoader()
{
  return self;
}

uint64_t sub_1B59E1334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1B59E135C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5998634(a1, a2, *(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), a3);
}

uint64_t sub_1B59E1380(char a1)
{
  return *(void *)&aCenter_3[8 * a1];
}

uint64_t sub_1B59E13A0(char a1)
{
  return *(void *)&aLeading_6[8 * a1];
}

uint64_t sub_1B59E13C0(char a1)
{
  return qword_1B5A2C440[a1];
}

uint64_t sub_1B59E13E0(char *a1, char *a2)
{
  return sub_1B59EF624(*a1, *a2);
}

uint64_t sub_1B59E13EC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59E1434()
{
  return sub_1B59F46BC();
}

uint64_t sub_1B59E143C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59E1480@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59E17E0();
  *a1 = result;
  return result;
}

uint64_t sub_1B59E14B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59E1380(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59E14DC()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B59E153C()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B59E158C()
{
  return sub_1B59F6FCC();
}

uint64_t sub_1B59E1594@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B59E15CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59E13A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59E15F8()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B59E1658()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B59E16A8(char *a1, char *a2)
{
  return sub_1B59ED474(*a1, *a2);
}

uint64_t sub_1B59E16B4()
{
  return sub_1B59F1F34();
}

uint64_t sub_1B59E16BC()
{
  return sub_1B59F3268();
}

uint64_t sub_1B59E16C4()
{
  return sub_1B59F6DB4();
}

uint64_t sub_1B59E16CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B59E1704@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59E13C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59E1730()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B59E1790()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B59E17E0()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B59E182C()
{
  return sub_1B590FF48();
}

uint64_t sub_1B59E1838()
{
  return sub_1B590FF48();
}

uint64_t getEnumTagSinglePayload for AlignmentType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AlignmentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59E19A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlignmentType()
{
  return &type metadata for AlignmentType;
}

ValueMetadata *type metadata accessor for VerticalAlignmentString()
{
  return &type metadata for VerticalAlignmentString;
}

unsigned char *_s6LiftUI23VerticalAlignmentStringOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59E1AB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HorizontalAlignmentString()
{
  return &type metadata for HorizontalAlignmentString;
}

unint64_t sub_1B59E1AF4()
{
  unint64_t result = qword_1E9D65B68;
  if (!qword_1E9D65B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B68);
  }
  return result;
}

unint64_t sub_1B59E1B4C()
{
  unint64_t result = qword_1E9D65B70;
  if (!qword_1E9D65B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B70);
  }
  return result;
}

unint64_t sub_1B59E1BA4()
{
  unint64_t result = qword_1E9D65B78;
  if (!qword_1E9D65B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B78);
  }
  return result;
}

unint64_t sub_1B59E1BF8()
{
  unint64_t result = qword_1E9D65B80;
  if (!qword_1E9D65B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B80);
  }
  return result;
}

unint64_t sub_1B59E1C4C()
{
  unint64_t result = qword_1E9D65B88;
  if (!qword_1E9D65B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B88);
  }
  return result;
}

unint64_t sub_1B59E1CA0()
{
  unint64_t result = qword_1E9D65B90;
  if (!qword_1E9D65B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B90);
  }
  return result;
}

void destroy for OnChangeModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B591F344(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  int v2 = *(unsigned __int8 *)(a1 + 64);
  if (v2 != 255) {
    sub_1B590D6F0(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v2 & 1);
  }
  int v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 != 255) {
    sub_1B591F344(*(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v3 & 1);
  }
  int v4 = *(unsigned __int8 *)(a1 + 128);
  if (v4 != 255)
  {
    uint64_t v5 = *(void *)(a1 + 104);
    uint64_t v6 = *(void *)(a1 + 112);
    uint64_t v7 = *(void *)(a1 + 120);
    sub_1B591F344(v5, v6, v7, v4 & 1);
  }
}

uint64_t initializeWithCopy for OnChangeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1B5909638(v4, v5, v6, v7);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  int v8 = *(unsigned __int8 *)(a2 + 64);
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  }
  else
  {
    char v9 = v8 & 1;
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a2 + 48);
    uint64_t v12 = *(void *)(a2 + 56);
    sub_1B590D634(v10, v11, v12, v8 & 1);
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    *(unsigned char *)(a1 + 64) = v9;
  }
  int v13 = *(unsigned __int8 *)(a2 + 96);
  if (v13 == 255)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  else
  {
    char v14 = v13 & 1;
    uint64_t v15 = *(void *)(a2 + 72);
    uint64_t v16 = *(void *)(a2 + 80);
    uint64_t v17 = *(void *)(a2 + 88);
    sub_1B5909638(v15, v16, v17, v13 & 1);
    *(void *)(a1 + 72) = v15;
    *(void *)(a1 + 80) = v16;
    *(void *)(a1 + 88) = v17;
    *(unsigned char *)(a1 + 96) = v14;
  }
  int v18 = *(unsigned __int8 *)(a2 + 128);
  if (v18 == 255)
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  }
  else
  {
    char v19 = v18 & 1;
    uint64_t v20 = *(void *)(a2 + 104);
    uint64_t v21 = *(void *)(a2 + 112);
    uint64_t v22 = *(void *)(a2 + 120);
    sub_1B5909638(v20, v21, v22, v18 & 1);
    *(void *)(a1 + 104) = v20;
    *(void *)(a1 + 112) = v21;
    *(void *)(a1 + 120) = v22;
    *(unsigned char *)(a1 + 128) = v19;
  }
  return a1;
}

uint64_t assignWithCopy for OnChangeModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1B5909638(v4, v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_1B591F344(v8, v9, v10, v11);
  uint64_t v12 = (long long *)(a1 + 40);
  int v13 = (long long *)(a2 + 40);
  int v14 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v14 == 255)
    {
      long long v16 = *v13;
      *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
      *uint64_t v12 = v16;
    }
    else
    {
      char v25 = v14 & 1;
      uint64_t v26 = *(void *)(a2 + 40);
      uint64_t v27 = *(void *)(a2 + 48);
      uint64_t v28 = *(void *)(a2 + 56);
      sub_1B590D634(v26, v27, v28, v14 & 1);
      *(void *)(a1 + 40) = v26;
      *(void *)(a1 + 48) = v27;
      *(void *)(a1 + 56) = v28;
      *(unsigned char *)(a1 + 64) = v25;
    }
  }
  else if (v14 == 255)
  {
    sub_1B5908FC0(a1 + 40, &qword_1E9D63220);
    long long v15 = *(_OWORD *)(a2 + 49);
    *uint64_t v12 = *v13;
    *(_OWORD *)(a1 + 49) = v15;
  }
  else
  {
    char v17 = v14 & 1;
    uint64_t v18 = *(void *)(a2 + 40);
    uint64_t v19 = *(void *)(a2 + 48);
    uint64_t v20 = *(void *)(a2 + 56);
    sub_1B590D634(v18, v19, v20, v14 & 1);
    uint64_t v21 = *(void *)(a1 + 40);
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = *(void *)(a1 + 56);
    char v24 = *(unsigned char *)(a1 + 64);
    *(void *)(a1 + 40) = v18;
    *(void *)(a1 + 48) = v19;
    *(void *)(a1 + 56) = v20;
    *(unsigned char *)(a1 + 64) = v17;
    sub_1B590D6F0(v21, v22, v23, v24);
  }
  unint64_t v29 = (long long *)(a1 + 72);
  unint64_t v30 = (long long *)(a2 + 72);
  int v31 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v31 == 255)
    {
      long long v33 = *v30;
      *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
      long long *v29 = v33;
    }
    else
    {
      char v42 = v31 & 1;
      uint64_t v43 = *(void *)(a2 + 72);
      uint64_t v44 = *(void *)(a2 + 80);
      uint64_t v45 = *(void *)(a2 + 88);
      sub_1B5909638(v43, v44, v45, v31 & 1);
      *(void *)(a1 + 72) = v43;
      *(void *)(a1 + 80) = v44;
      *(void *)(a1 + 88) = v45;
      *(unsigned char *)(a1 + 96) = v42;
    }
  }
  else if (v31 == 255)
  {
    sub_1B5908FC0(a1 + 72, &qword_1E9D63930);
    long long v32 = *(_OWORD *)(a2 + 81);
    long long *v29 = *v30;
    *(_OWORD *)(a1 + 81) = v32;
  }
  else
  {
    char v34 = v31 & 1;
    uint64_t v35 = *(void *)(a2 + 72);
    uint64_t v36 = *(void *)(a2 + 80);
    uint64_t v37 = *(void *)(a2 + 88);
    sub_1B5909638(v35, v36, v37, v31 & 1);
    uint64_t v38 = *(void *)(a1 + 72);
    uint64_t v39 = *(void *)(a1 + 80);
    uint64_t v40 = *(void *)(a1 + 88);
    char v41 = *(unsigned char *)(a1 + 96);
    *(void *)(a1 + 72) = v35;
    *(void *)(a1 + 80) = v36;
    *(void *)(a1 + 88) = v37;
    *(unsigned char *)(a1 + 96) = v34;
    sub_1B591F344(v38, v39, v40, v41);
  }
  unint64_t v46 = (long long *)(a1 + 104);
  unint64_t v47 = (long long *)(a2 + 104);
  int v48 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v48 == 255)
    {
      long long v50 = *v47;
      *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
      *unint64_t v46 = v50;
    }
    else
    {
      char v59 = v48 & 1;
      uint64_t v60 = *(void *)(a2 + 104);
      uint64_t v61 = *(void *)(a2 + 112);
      uint64_t v62 = *(void *)(a2 + 120);
      sub_1B5909638(v60, v61, v62, v48 & 1);
      *(void *)(a1 + 104) = v60;
      *(void *)(a1 + 112) = v61;
      *(void *)(a1 + 120) = v62;
      *(unsigned char *)(a1 + 128) = v59;
    }
  }
  else if (v48 == 255)
  {
    sub_1B5908FC0(a1 + 104, &qword_1E9D63930);
    long long v49 = *(_OWORD *)(a2 + 113);
    *unint64_t v46 = *v47;
    *(_OWORD *)(a1 + 113) = v49;
  }
  else
  {
    char v51 = v48 & 1;
    uint64_t v52 = *(void *)(a2 + 104);
    uint64_t v53 = *(void *)(a2 + 112);
    uint64_t v54 = *(void *)(a2 + 120);
    sub_1B5909638(v52, v53, v54, v48 & 1);
    uint64_t v55 = *(void *)(a1 + 104);
    uint64_t v56 = *(void *)(a1 + 112);
    uint64_t v57 = *(void *)(a1 + 120);
    char v58 = *(unsigned char *)(a1 + 128);
    *(void *)(a1 + 104) = v52;
    *(void *)(a1 + 112) = v53;
    *(void *)(a1 + 120) = v54;
    *(unsigned char *)(a1 + 128) = v51;
    sub_1B591F344(v55, v56, v57, v58);
  }
  return a1;
}

uint64_t assignWithTake for OnChangeModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  sub_1B591F344(v6, v7, v8, v9);
  int v10 = *(unsigned __int8 *)(a1 + 64);
  if (v10 == 255) {
    goto LABEL_4;
  }
  int v11 = *(unsigned __int8 *)(a2 + 64);
  if (v11 == 255)
  {
    sub_1B5908FC0(a1 + 40, &qword_1E9D63220);
LABEL_4:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
    goto LABEL_6;
  }
  char v12 = v10 & 1;
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v13;
  *(unsigned char *)(a1 + 64) = v11 & 1;
  sub_1B590D6F0(v14, v15, v16, v12);
LABEL_6:
  int v17 = *(unsigned __int8 *)(a1 + 96);
  if (v17 == 255)
  {
LABEL_9:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
    goto LABEL_11;
  }
  int v18 = *(unsigned __int8 *)(a2 + 96);
  if (v18 == 255)
  {
    sub_1B5908FC0(a1 + 72, &qword_1E9D63930);
    goto LABEL_9;
  }
  char v19 = v17 & 1;
  uint64_t v20 = *(void *)(a2 + 88);
  uint64_t v21 = *(void *)(a1 + 72);
  uint64_t v22 = *(void *)(a1 + 80);
  uint64_t v23 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v20;
  *(unsigned char *)(a1 + 96) = v18 & 1;
  sub_1B591F344(v21, v22, v23, v19);
LABEL_11:
  int v24 = *(unsigned __int8 *)(a1 + 128);
  if (v24 != 255)
  {
    int v25 = *(unsigned __int8 *)(a2 + 128);
    if (v25 != 255)
    {
      char v26 = v24 & 1;
      uint64_t v27 = *(void *)(a2 + 120);
      uint64_t v28 = *(void *)(a1 + 104);
      uint64_t v29 = *(void *)(a1 + 112);
      uint64_t v30 = *(void *)(a1 + 120);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(void *)(a1 + 120) = v27;
      *(unsigned char *)(a1 + 128) = v25 & 1;
      sub_1B591F344(v28, v29, v30, v26);
      return a1;
    }
    sub_1B5908FC0(a1 + 104, &qword_1E9D63930);
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnChangeModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 129)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnChangeModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnChangeModifier()
{
  return &type metadata for OnChangeModifier;
}

ValueMetadata *type metadata accessor for OnDisappearModifier()
{
  return &type metadata for OnDisappearModifier;
}

ValueMetadata *type metadata accessor for OnTapModifier()
{
  return &type metadata for OnTapModifier;
}

ValueMetadata *type metadata accessor for OnAppearModifier()
{
  return &type metadata for OnAppearModifier;
}

uint64_t sub_1B59E2494@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B59E24A4@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B59E24B0(uint64_t a1)
{
  unint64_t v2 = sub_1B59E47EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59E24EC(uint64_t a1)
{
  unint64_t v2 = sub_1B59E47EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59E2528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B59E2690(a1, a2, a3, (uint64_t)&unk_1F0EAA758, (uint64_t)&unk_1E9D637B0);
}

uint64_t sub_1B59E2548@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B59E27F0(a1, a2, a3, (uint64_t)sub_1B59E40D0, MEMORY[0x1E4F3EA38], a4);
}

void *sub_1B59E2590@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1B59E4488(a1, &qword_1E9D65BF8, (void (*)(void))sub_1B59E47EC);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B59E25E0@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B59E25EC@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B59E25F8(uint64_t a1)
{
  unint64_t v2 = sub_1B59E4744();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59E2634(uint64_t a1)
{
  unint64_t v2 = sub_1B59E4744();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59E2670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B59E2690(a1, a2, a3, (uint64_t)&unk_1F0EAA7F8, (uint64_t)&unk_1E9D65BB8);
}

uint64_t sub_1B59E2690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v9 - 8);
  int v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = 0;
  void v13[3] = 0;
  v13[4] = a1;
  void v13[5] = a2;
  v13[6] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B5924038((uint64_t)v11, a5, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1B59E27A8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B59E27F0(a1, a2, a3, (uint64_t)sub_1B59E411C, MEMORY[0x1E4F3E420], a4);
}

uint64_t sub_1B59E27F0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, void (*a5)(uint64_t, void *, uint64_t, uint64_t)@<X7>, uint64_t *a6@<X8>)
{
  uint64_t v9 = *v6;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = v9;
  uint64_t v12[3] = a2;
  void v12[4] = a3;
  uint64_t v13 = sub_1B5A1A748();
  void v20[3] = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  v20[4] = WitnessTable;
  __swift_allocate_boxed_opaque_existential_1(v20);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  a5(a4, v12, v10, v11);
  swift_release();
  uint64_t v15 = sub_1B59193A4(v9);
  sub_1B59177F0(v15, a2, a3, v13, WitnessTable, a6);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

void *sub_1B59E2954@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1B59E4488(a1, &qword_1E9D65BD8, (void (*)(void))sub_1B59E4744);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B59E29A4@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C00(a1);
}

uint64_t sub_1B59E29B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59E4E5C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B59E29D8@<X0>(BOOL *a1@<X8>)
{
  return sub_1B5942C5C(a1);
}

uint64_t sub_1B59E29E4(uint64_t a1)
{
  unint64_t v2 = sub_1B59E4798();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59E2A20(uint64_t a1)
{
  unint64_t v2 = sub_1B59E4798();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59E2A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B5A1A328();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
  uint64_t v10 = sub_1B5A1A308();
  os_log_type_t v11 = sub_1B5A1C278();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1B58FD000, v10, v11, "onTapGesture!", v12, 2u);
    MEMORY[0x1BA9A4780](v12, -1, -1);
  }

  uint64_t v13 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = 0;
  void v14[3] = 0;
  void v14[4] = a1;
  uint64_t v14[5] = a2;
  uint64_t v14[6] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B5924038((uint64_t)v8, (uint64_t)&unk_1E9D642D8, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1B59E2C3C(char a1)
{
  return *(void *)&aActions_8[8 * a1];
}

uint64_t sub_1B59E2C5C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *v4;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  uint64_t v10[3] = a2;
  void v10[4] = a3;
  v16[0] = v8;
  v16[1] = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  void v16[3] = OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  void v16[4] = OpaqueTypeConformance2;
  __swift_allocate_boxed_opaque_existential_1(v16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B5A1B478();
  swift_release();
  uint64_t v13 = sub_1B59193A4(v7);
  sub_1B59177F0(v13, a2, a3, OpaqueTypeMetadata2, OpaqueTypeConformance2, a4);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

void *sub_1B59E2DCC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B59E4488(a1, &qword_1E9D65BE8, (void (*)(void))sub_1B59E4798);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B59E2E1C(char *a1, char *a2)
{
  return sub_1B59EE814(*a1, *a2);
}

uint64_t sub_1B59E2E28()
{
  return sub_1B59F1FA0();
}

uint64_t sub_1B59E2E30()
{
  return sub_1B59F3E48();
}

uint64_t sub_1B59E2E38()
{
  return sub_1B59F5FD8();
}

uint64_t sub_1B59E2E40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59E4E74();
  *a1 = result;
  return result;
}

uint64_t sub_1B59E2E70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59E2C3C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59E2E9C()
{
  return sub_1B59E2C3C(*v0);
}

uint64_t sub_1B59E2EA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59E4E74();
  *a1 = result;
  return result;
}

uint64_t sub_1B59E2ECC(uint64_t a1)
{
  unint64_t v2 = sub_1B59E42FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59E2F08(uint64_t a1)
{
  unint64_t v2 = sub_1B59E42FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B59E2F44(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v85 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65BC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59E42FC();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
  LOBYTE(v59) = 0;
  sub_1B5951CA4();
  sub_1B5A1C5D8();
  long long v50 = a1;
  char v51 = v8;
  uint64_t v49 = v6;
  unint64_t v9 = v77;
  int64_t v10 = *(void *)(v77 + 16);
  if (v10)
  {
    *((void *)&v48 + 1) = 0;
    uint64_t v80 = MEMORY[0x1E4FBC860];
    sub_1B596931C(0, v10, 0);
    *(void *)&long long v48 = v9;
    uint64_t v11 = v9 + 32;
    uint64_t v12 = v80;
    do
    {
      sub_1B5951D6C(v11, (uint64_t)&v52);
      sub_1B590CA38((uint64_t)&v52, (uint64_t)&v59);
      sub_1B5951DC8((uint64_t)&v52);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B596931C(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v80;
      }
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v13 = *(void *)(v12 + 24);
      if (v9 >= v13 >> 1)
      {
        sub_1B596931C(v13 > 1, v9 + 1, 1);
        uint64_t v12 = v80;
      }
      *(void *)(v12 + 16) = v9 + 1;
      sub_1B5908BE8(&v59, v12 + 40 * v9 + 32);
      v11 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v3 = *((void *)&v48 + 1);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
  LOBYTE(v52) = 1;
  uint64_t v14 = sub_1B59E4350((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
  swift_bridgeObjectRetain();
  uint64_t v15 = v51;
  sub_1B5A1C5D8();
  uint64_t v16 = v3;
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = v14;
    uint64_t v40 = v5;
    long long v17 = v59;
    uint64_t v43 = 0;
    uint64_t v18 = v60;
    int v19 = v61;
    char v84 = v61;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    LOBYTE(v52) = 2;
    unint64_t v41 = v17;
    uint64_t v20 = v40;
    uint64_t v46 = v18;
    uint64_t v47 = *((void *)&v17 + 1);
    uint64_t v21 = v18;
    uint64_t v16 = v43;
    sub_1B5909638(v17, *((uint64_t *)&v17 + 1), v21, v19);
    sub_1B59E4350((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
    sub_1B5A1C5B8();
    if (!v16)
    {
      int v37 = v19;
      long long v22 = v59;
      LOBYTE(v52) = 3;
      uint64_t v38 = v60;
      int v42 = v61;
      sub_1B590F04C(v59, *((uint64_t *)&v59 + 1), v60, v61);
      sub_1B5A1C5B8();
      long long v48 = v22;
      long long v23 = v59;
      LOBYTE(v80) = 4;
      uint64_t v45 = v60;
      int v36 = v61;
      sub_1B592C3E8(v59, *((uint64_t *)&v59 + 1), v60, v61);
      sub_1B5A1C5B8();
      uint64_t v44 = *((void *)&v23 + 1);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v20);
      char v51 = (char *)v77;
      *(void *)&long long v52 = v12;
      uint64_t v49 = v78;
      unsigned __int8 v24 = v42;
      uint64_t v43 = *((void *)&v78 + 1);
      LODWORD(v40) = v79;
      *((void *)&v52 + 1) = v41;
      *(void *)&long long v53 = v47;
      *((void *)&v53 + 1) = v46;
      unsigned __int8 v26 = v36;
      char v25 = v37;
      v54[0] = v37;
      *(_OWORD *)&v54[8] = v48;
      *(void *)&v54[24] = v38;
      v55[0] = v42;
      *(_OWORD *)&v55[8] = v23;
      uint64_t v27 = v45;
      *(void *)&v55[24] = v45;
      LOBYTE(v56) = v36;
      *((void *)&v56 + 1) = v77;
      long long v57 = v78;
      unsigned __int8 v58 = v79;
      sub_1B59E4210((uint64_t)&v52);
      sub_1B592C43C(v23, *((uint64_t *)&v23 + 1), v27, v26);
      sub_1B590F034(v48, *((uint64_t *)&v48 + 1), v38, v24);
      uint64_t v28 = v41;
      uint64_t v29 = v46;
      uint64_t v30 = v47;
      sub_1B591F344(v41, v47, v46, v25);
      swift_bridgeObjectRelease();
      long long v31 = v57;
      uint64_t v32 = v85;
      *(_OWORD *)(v85 + 96) = v56;
      *(_OWORD *)(v32 + 112) = v31;
      *(unsigned char *)(v32 + 128) = v58;
      long long v33 = *(_OWORD *)&v54[16];
      *(_OWORD *)(v32 + 32) = *(_OWORD *)v54;
      *(_OWORD *)(v32 + 48) = v33;
      long long v34 = *(_OWORD *)&v55[16];
      *(_OWORD *)(v32 + 64) = *(_OWORD *)v55;
      *(_OWORD *)(v32 + 80) = v34;
      long long v35 = v53;
      *(_OWORD *)uint64_t v32 = v52;
      *(_OWORD *)(v32 + 16) = v35;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      *(void *)&long long v59 = v12;
      *((void *)&v59 + 1) = v28;
      uint64_t v60 = v30;
      uint64_t v61 = v29;
      char v62 = v84;
      *(_DWORD *)unint64_t v63 = *(_DWORD *)v83;
      *(_DWORD *)&v63[3] = *(_DWORD *)&v83[3];
      long long v64 = v48;
      uint64_t v65 = v38;
      unsigned __int8 v66 = v24;
      *(_DWORD *)unint64_t v67 = *(_DWORD *)v82;
      *(_DWORD *)&v67[3] = *(_DWORD *)&v82[3];
      uint64_t v68 = v23;
      uint64_t v69 = v44;
      uint64_t v70 = v45;
      char v71 = v36;
      *(_DWORD *)unint64_t v72 = *(_DWORD *)v81;
      *(_DWORD *)&v72[3] = *(_DWORD *)&v81[3];
      unint64_t v73 = v51;
      uint64_t v74 = v49;
      uint64_t v75 = v43;
      char v76 = v40;
      sub_1B59E43A0((uint64_t)&v59);
      return;
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v20);
    unint64_t v9 = v41;
    sub_1B591F344(v41, v47, v46, v19);
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  swift_bridgeObjectRelease();
  if (!v16) {
    sub_1B591F344(v9, v47, v46, v84);
  }
}

uint64_t sub_1B59E36C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *a2;
  if (*(unsigned char *)(a1 + 24) == 1)
  {
    v11[0] = *(void *)a1;
    v11[1] = v2;
    void v11[2] = v4;
    char v12 = 1;
    uint64_t v10 = v5;
    return RemoteStateStore.set(reference:value:)((uint64_t)v11, &v10);
  }
  else
  {
    v11[0] = *(void *)a1;
    swift_retain();
    uint64_t v7 = sub_1B59537D8();
    uint64_t v9 = v8;
    swift_retain();
    sub_1B59C87D8(v5, v7, v9);
    return sub_1B591F344(v3, v2, v4, 0);
  }
}

uint64_t sub_1B59E39A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  long long v9 = v4[7];
  long long v43 = v4[6];
  long long v44 = v9;
  char v45 = *((unsigned char *)v4 + 128);
  long long v10 = v4[3];
  long long v39 = v4[2];
  long long v40 = v10;
  long long v11 = v4[5];
  long long v41 = v4[4];
  long long v42 = v11;
  long long v12 = v4[1];
  long long v37 = *v4;
  long long v38 = v12;
  uint64_t v13 = *((void *)&v37 + 1);
  long long v14 = v12;
  char v15 = v39;
  sub_1B5909638(*((uint64_t *)&v37 + 1), v12, *((uint64_t *)&v12 + 1), v39);
  sub_1B59B3D0C(a2, *((uint64_t *)&v37 + 1), v14, *((uint64_t *)&v14 + 1), v39, v34);
  uint64_t result = sub_1B591F344(v13, v14, *((uint64_t *)&v14 + 1), v15);
  if (!v5)
  {
    uint64_t v32 = a4;
    uint64_t v17 = v34[0];
    unsigned __int8 v18 = v41;
    if (v41 != 255)
    {
      uint64_t v19 = *((void *)&v39 + 1);
      long long v20 = v40;
      sub_1B590D634(*((uint64_t *)&v39 + 1), v40, *((uint64_t *)&v40 + 1), v41 & 1);
      sub_1B59B4120(a2, v19, v20, *((uint64_t *)&v20 + 1), v18 & 1);
      sub_1B590F034(v19, v20, *((uint64_t *)&v20 + 1), v18);
    }
    uint64_t v22 = a1[3];
    uint64_t v21 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v22);
    uint64_t v46 = v17;
    uint64_t v23 = swift_allocObject();
    long long v24 = v44;
    *(_OWORD *)(v23 + 112) = v43;
    *(_OWORD *)(v23 + 128) = v24;
    *(unsigned char *)(v23 + 144) = v45;
    long long v25 = v40;
    *(_OWORD *)(v23 + 48) = v39;
    *(_OWORD *)(v23 + 64) = v25;
    long long v26 = v42;
    *(_OWORD *)(v23 + 80) = v41;
    *(_OWORD *)(v23 + 96) = v26;
    long long v27 = v38;
    *(_OWORD *)(v23 + 16) = v37;
    *(_OWORD *)(v23 + 32) = v27;
    *(void *)(v23 + 152) = a2;
    *(void *)(v23 + 160) = a3;
    unint64_t v28 = sub_1B595D5B4();
    v34[0] = v22;
    v34[1] = (uint64_t)&type metadata for DecodableState;
    _OWORD v34[2] = v21;
    unint64_t v35 = v28;
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    unint64_t v35 = OpaqueTypeMetadata2;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v36 = OpaqueTypeConformance2;
    __swift_allocate_boxed_opaque_existential_1(v34);
    sub_1B59E4210((uint64_t)&v37);
    swift_retain();
    swift_retain();
    sub_1B5A1B748();
    swift_release();
    uint64_t v30 = sub_1B59193A4(v37);
    sub_1B59177F0(v30, a2, a3, OpaqueTypeMetadata2, OpaqueTypeConformance2, v32);
    swift_bridgeObjectRelease();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  return result;
}

uint64_t sub_1B59E3C94(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v10 - 8);
  long long v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a2;
  int v14 = *((unsigned __int8 *)a3 + 96);
  if (v14 != 255)
  {
    uint64_t v16 = a3[10];
    uint64_t v15 = a3[11];
    uint64_t v17 = a3[9];
    uint64_t v18 = *a1;
    uint64_t v29 = v17;
    uint64_t v30 = v16;
    uint64_t v31 = v15;
    char v32 = v14 & 1;
    uint64_t v28 = v18;
    sub_1B5909638(v17, v16, v15, v14 & 1);
    sub_1B59E36C0((uint64_t)&v29, &v28);
    sub_1B592C43C(v17, v16, v15, v14);
  }
  int v19 = *((unsigned __int8 *)a3 + 128);
  if (v19 != 255)
  {
    uint64_t v21 = a3[14];
    uint64_t v20 = a3[15];
    uint64_t v22 = a3[13];
    uint64_t v29 = v22;
    uint64_t v30 = v21;
    uint64_t v31 = v20;
    char v32 = v19 & 1;
    uint64_t v28 = v13;
    sub_1B5909638(v22, v21, v20, v19 & 1);
    sub_1B59E36C0((uint64_t)&v29, &v28);
    sub_1B592C43C(v22, v21, v20, v19);
  }
  uint64_t v23 = *a3;
  uint64_t v24 = sub_1B5A1C188();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 1, 1, v24);
  long long v25 = (void *)swift_allocObject();
  void v25[2] = 0;
  uint64_t v25[3] = 0;
  v25[4] = v23;
  v25[5] = a4;
  _OWORD v25[6] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B5924038((uint64_t)v12, (uint64_t)&unk_1E9D65BC0, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_1B59E3EA8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B59E39A0(a1, a2, a3, a4);
}

void sub_1B59E3EC0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B59E3ED8(uint64_t a1)
{
  unint64_t result = sub_1B59E3F00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59E3F00()
{
  unint64_t result = qword_1E9D65B98;
  if (!qword_1E9D65B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65B98);
  }
  return result;
}

unint64_t sub_1B59E3F54(uint64_t a1)
{
  unint64_t result = sub_1B59E3F7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59E3F7C()
{
  unint64_t result = qword_1E9D65BA0;
  if (!qword_1E9D65BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65BA0);
  }
  return result;
}

unint64_t sub_1B59E3FD0(uint64_t a1)
{
  unint64_t result = sub_1B59E3FF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59E3FF8()
{
  unint64_t result = qword_1E9D65BA8;
  if (!qword_1E9D65BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65BA8);
  }
  return result;
}

unint64_t sub_1B59E404C(uint64_t a1)
{
  unint64_t result = sub_1B59E4074();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59E4074()
{
  unint64_t result = qword_1E9D65BB0;
  if (!qword_1E9D65BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65BB0);
  }
  return result;
}

uint64_t sub_1B59E40D0()
{
  return sub_1B59E2690(v0[2], v0[3], v0[4], (uint64_t)&unk_1F0EAA758, (uint64_t)&unk_1E9D637B0);
}

uint64_t sub_1B59E411C()
{
  return sub_1B59E2690(v0[2], v0[3], v0[4], (uint64_t)&unk_1F0EAA7F8, (uint64_t)&unk_1E9D65BB8);
}

uint64_t sub_1B59E4158()
{
  swift_bridgeObjectRelease();
  sub_1B591F344(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  int v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 != 255) {
    sub_1B590D6F0(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), v1 & 1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 112);
  if (v2 != 255) {
    sub_1B591F344(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), v2 & 1);
  }
  int v3 = *(unsigned __int8 *)(v0 + 144);
  if (v3 != 255) {
    sub_1B591F344(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), v3 & 1);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B59E4204(uint64_t *a1, uint64_t *a2)
{
  return sub_1B59E3C94(a1, a2, v2 + 2, v2[19], v2[20]);
}

uint64_t sub_1B59E4210(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v17 = *(void *)(a1 + 112);
  uint64_t v18 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 120);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 64);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 96);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 128);
  swift_bridgeObjectRetain();
  sub_1B5909638(v2, v3, v4, v5);
  sub_1B590F04C(v6, v7, v8, v9);
  sub_1B592C3E8(v14, v13, v12, v10);
  sub_1B592C3E8(v18, v17, v16, v15);
  return a1;
}

unint64_t sub_1B59E42FC()
{
  unint64_t result = qword_1E9D65BD0;
  if (!qword_1E9D65BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65BD0);
  }
  return result;
}

uint64_t sub_1B59E4350(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B59E43A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v17 = *(void *)(a1 + 112);
  uint64_t v18 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 120);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 64);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 96);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 128);
  swift_bridgeObjectRelease();
  sub_1B591F344(v2, v3, v4, v5);
  sub_1B590F034(v6, v7, v8, v9);
  sub_1B592C43C(v14, v13, v12, v10);
  sub_1B592C43C(v18, v17, v16, v15);
  return a1;
}

void *sub_1B59E4488(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  unsigned __int8 v10 = v9;
  sub_1B5A1C838();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v11 = a1;
    uint64_t v12 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
    sub_1B5951CA4();
    sub_1B5A1C5D8();
    uint64_t v14 = v29;
    int64_t v15 = *(void *)(v29 + 16);
    if (v15)
    {
      uint64_t v22 = v8;
      uint64_t v23 = 0;
      uint64_t v24 = v6;
      uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
      sub_1B596931C(0, v15, 0);
      uint64_t v16 = v14 + 32;
      unsigned __int8 v10 = v28;
      do
      {
        sub_1B5951D6C(v16, (uint64_t)v26);
        sub_1B590CA38((uint64_t)v26, (uint64_t)v27);
        sub_1B5951DC8((uint64_t)v26);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B596931C(0, v10[2] + 1, 1);
          unsigned __int8 v10 = v28;
        }
        unint64_t v18 = v10[2];
        unint64_t v17 = v10[3];
        if (v18 >= v17 >> 1)
        {
          sub_1B596931C(v17 > 1, v18 + 1, 1);
          unsigned __int8 v10 = v28;
        }
        _OWORD v10[2] = v18 + 1;
        sub_1B5908BE8(v27, (uint64_t)&v10[5 * v18 + 4]);
        v16 += 40;
        --v15;
      }
      while (v15);
      uint64_t v19 = v12;
      uint64_t v20 = (uint64_t)v11;
      swift_bridgeObjectRelease();
      uint64_t v6 = v24;
      uint64_t v8 = v22;
    }
    else
    {
      uint64_t v19 = v12;
      swift_bridgeObjectRelease();
      unsigned __int8 v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v20 = (uint64_t)v11;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
    __swift_destroy_boxed_opaque_existential_1(v20);
  }
  return v10;
}

unint64_t sub_1B59E4744()
{
  unint64_t result = qword_1E9D65BE0;
  if (!qword_1E9D65BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65BE0);
  }
  return result;
}

unint64_t sub_1B59E4798()
{
  unint64_t result = qword_1E9D65BF0;
  if (!qword_1E9D65BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65BF0);
  }
  return result;
}

unint64_t sub_1B59E47EC()
{
  unint64_t result = qword_1E9D65C00;
  if (!qword_1E9D65C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C00);
  }
  return result;
}

ValueMetadata *type metadata accessor for OnAppearModifier.CodingKeys()
{
  return &type metadata for OnAppearModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for OnTapModifier.CodingKeys()
{
  return &type metadata for OnTapModifier.CodingKeys;
}

unsigned char *_s6LiftUI16OnAppearModifierV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59E4900);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnDisappearModifier.CodingKeys()
{
  return &type metadata for OnDisappearModifier.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for OnChangeModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59E4A04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnChangeModifier.CodingKeys()
{
  return &type metadata for OnChangeModifier.CodingKeys;
}

unint64_t sub_1B59E4A40()
{
  unint64_t result = qword_1E9D65C08;
  if (!qword_1E9D65C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C08);
  }
  return result;
}

unint64_t sub_1B59E4A98()
{
  unint64_t result = qword_1E9D65C10;
  if (!qword_1E9D65C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C10);
  }
  return result;
}

unint64_t sub_1B59E4AF0()
{
  unint64_t result = qword_1E9D65C18;
  if (!qword_1E9D65C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C18);
  }
  return result;
}

unint64_t sub_1B59E4B48()
{
  unint64_t result = qword_1E9D65C20;
  if (!qword_1E9D65C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C20);
  }
  return result;
}

unint64_t sub_1B59E4BA0()
{
  unint64_t result = qword_1E9D65C28;
  if (!qword_1E9D65C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C28);
  }
  return result;
}

unint64_t sub_1B59E4BF8()
{
  unint64_t result = qword_1E9D65C30;
  if (!qword_1E9D65C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C30);
  }
  return result;
}

unint64_t sub_1B59E4C50()
{
  unint64_t result = qword_1E9D65C38;
  if (!qword_1E9D65C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C38);
  }
  return result;
}

unint64_t sub_1B59E4CA8()
{
  unint64_t result = qword_1E9D65C40;
  if (!qword_1E9D65C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C40);
  }
  return result;
}

unint64_t sub_1B59E4D00()
{
  unint64_t result = qword_1E9D65C48;
  if (!qword_1E9D65C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C48);
  }
  return result;
}

unint64_t sub_1B59E4D58()
{
  unint64_t result = qword_1E9D65C50;
  if (!qword_1E9D65C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C50);
  }
  return result;
}

unint64_t sub_1B59E4DB0()
{
  unint64_t result = qword_1E9D65C58;
  if (!qword_1E9D65C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65C58);
  }
  return result;
}

unint64_t sub_1B59E4E08()
{
  unint64_t result = qword_1E9D65C60[0];
  if (!qword_1E9D65C60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9D65C60);
  }
  return result;
}

uint64_t sub_1B59E4E5C()
{
  return 0x736E6F69746361;
}

uint64_t sub_1B59E4E74()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

void sub_1B59E4EC4(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *v3;
  if (*v3 < 0)
  {
    uint64_t v15 = v7 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = *(void *)(v15 + 24);
    uint64_t v18 = *(void *)(v15 + 32);
    char v19 = *(unsigned char *)(v15 + 40);
    uint64_t v20 = *(void *)(v15 + 48);
    uint64_t v21 = swift_allocObject();
    uint64_t v22 = v21;
    *(void *)(v21 + 16) = v16;
    *(void *)(v21 + 24) = v17;
    *(void *)(v21 + 32) = v18;
    *(unsigned char *)(v21 + 40) = v19;
    if ((~v20 & 0xF000000000000007) != 0)
    {
      uint64_t v23 = v6;
      uint64_t v24 = v20;
      sub_1B591DF88(v16, v17, v18, v19);
      sub_1B59E4EC4(&v25, &v23, a2);
      *(void *)(v22 + 48) = v25;
      *a3 = v22 | 0x8000000000000000;
    }
    else
    {
      *(void *)(v21 + 48) = v6;
      *a3 = v21 | 0x8000000000000000;
      sub_1B590968C(v6);
      sub_1B591DF88(v16, v17, v18, v19);
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v7 + 16);
    uint64_t v9 = *(void *)(v7 + 24);
    uint64_t v10 = *(void *)(v7 + 32);
    unsigned __int8 v11 = *(unsigned char *)(v7 + 40);
    uint64_t v12 = *(void *)(v7 + 48);
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = v8;
    *(void *)(v13 + 24) = v9;
    *(void *)(v13 + 32) = v10;
    *(unsigned char *)(v13 + 40) = v11;
    if ((~v12 & 0xF000000000000007) != 0)
    {
      uint64_t v23 = v6;
      uint64_t v24 = v12;
      sub_1B5904B60(v8, v9, v10, v11);
      sub_1B59E4EC4(&v25, &v23, a2);
      *(void *)(v14 + 48) = v25;
      *a3 = v14;
    }
    else
    {
      *(void *)(v13 + 48) = v6;
      *a3 = v13;
      sub_1B5904B60(v8, v9, v10, v11);
      sub_1B590968C(v6);
    }
  }
}

void sub_1B59E50BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *v4;
  uint64_t v72 = a3;
  if (v11 < 0)
  {
    uint64_t v19 = v11 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v20 = *(void *)(v19 + 24);
    uint64_t v21 = *(void *)(v19 + 32);
    char v22 = *(unsigned char *)(v19 + 40);
    uint64_t v23 = *(void *)(v19 + 48);
    uint64_t v68 = *(void *)(v19 + 16);
    uint64_t v69 = v20;
    uint64_t v70 = v21;
    char v71 = v22;
    uint64_t v63 = v68;
    uint64_t v67 = v20;
    sub_1B591DF88(v68, v20, v21, v22);
    sub_1B590968C(v23);
    sub_1B5963948(a2);
    if (v25)
    {
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1B5A1A328();
      __swift_project_value_buffer(v37, (uint64_t)qword_1E9D910D0);
      long long v38 = sub_1B5A1A308();
      os_log_type_t v39 = sub_1B5A1C258();
      if (os_log_type_enabled(v38, v39))
      {
        char v40 = v22;
        long long v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v41 = 0;
        _os_log_impl(&dword_1B58FD000, v38, v39, "SubReference to find binding, unable to resolve index", v41, 2u);
        long long v42 = v41;
        char v22 = v40;
        MEMORY[0x1BA9A4780](v42, -1, -1);
      }

      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v43 = 2;
      *(void *)(v43 + 8) = 0;
      *(void *)(v43 + 16) = 0;
      *(void *)(v43 + 24) = 0;
      *(unsigned char *)(v43 + 32) = 5;
      swift_willThrow();
      sub_1B5905298(v23);
      uint64_t v44 = v63;
      uint64_t v45 = v67;
      uint64_t v46 = v21;
      char v47 = v22;
    }
    else
    {
      uint64_t v26 = v24;
      char v61 = v22;
      if ((~v23 & 0xF000000000000007) == 0)
      {
        uint64_t v27 = (void *)swift_allocObject();
        long long v27[2] = 0;
        void v27[3] = 0;
        uint64_t v29 = *(void *)(v72 + 16);
        uint64_t v28 = *(void *)(v72 + 24);
        uint64_t v72 = v21;
        v27[4] = v29;
        uint64_t v27[5] = a4;
        v27[6] = v28;
        v27[7] = v9;
        v27[8] = v8;
        v27[9] = v10;
        v27[10] = v26;
        uint64_t v30 = (void *)swift_allocObject();
        void v30[2] = 0;
        v30[3] = 0;
        v30[4] = v29;
        v30[5] = a4;
        v30[6] = v28;
        v30[7] = v9;
        v30[8] = v8;
        v30[9] = v10;
        v30[10] = v26;
        sub_1B5A1C2B8();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        sub_1B5A1BAB8();
        sub_1B591DF0C(v63, v67, v72, v61);
        return;
      }
      long long v53 = (void *)swift_allocObject();
      _OWORD v53[2] = 0;
      v53[3] = 0;
      v53[4] = v9;
      v53[5] = v8;
      v53[6] = v10;
      v53[7] = v26;
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = 0;
      v54[3] = 0;
      v54[4] = v9;
      v54[5] = v8;
      v54[6] = v10;
      v54[7] = v26;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      sub_1B590968C(v23);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
      sub_1B5A1BAB8();
      sub_1B5A1BAE8();
      uint64_t v55 = v69;
      if (v69)
      {
        uint64_t v56 = v68;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B59E50BC(&v68, a2, v72, a4);
        sub_1B5905298(v23);
        sub_1B599F540(v56, v55);
        sub_1B591DF0C(v63, v67, v21, v61);
        sub_1B599F540(v56, v55);
        uint64_t v52 = v23;
        goto LABEL_19;
      }
      sub_1B59619AC();
      swift_allocError();
      *(void *)uint64_t v58 = 1;
      *(void *)(v58 + 8) = 0;
      *(void *)(v58 + 16) = 0;
      *(void *)(v58 + 24) = 0;
      *(unsigned char *)(v58 + 32) = 5;
      swift_willThrow();
      sub_1B5905298(v23);
      sub_1B5905298(v23);
      uint64_t v44 = v63;
      uint64_t v45 = v67;
      uint64_t v46 = v21;
      char v47 = v61;
    }
    sub_1B591DF0C(v44, v45, v46, v47);
    return;
  }
  uint64_t v60 = v10;
  uint64_t v62 = v9;
  uint64_t v66 = v8;
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void *)(v11 + 24);
  uint64_t v14 = *(void *)(v11 + 32);
  unsigned __int8 v15 = *(unsigned char *)(v11 + 40);
  uint64_t v16 = *(void *)(v11 + 48);
  uint64_t v68 = v12;
  uint64_t v69 = v13;
  uint64_t v70 = v14;
  char v71 = v15;
  sub_1B5904B60(v12, v13, v14, v15);
  sub_1B590968C(v16);
  unint64_t v17 = StringResolvable.resolved(with:)(a2);
  if (v5)
  {
    sub_1B5905298(v16);
    sub_1B5904A88(v12, v13, v14, v15);
    return;
  }
  unint64_t v31 = v17;
  uint64_t v32 = v18;
  unsigned __int8 v59 = v15;
  uint64_t v65 = a4;
  if ((~v16 & 0xF000000000000007) == 0)
  {
    long long v33 = (void *)swift_allocObject();
    long long v33[2] = 0;
    v33[3] = 0;
    uint64_t v34 = *(void *)(v72 + 16);
    uint64_t v35 = *(void *)(v72 + 24);
    v33[4] = v34;
    v33[5] = a4;
    v33[6] = v35;
    v33[7] = v62;
    v33[8] = v66;
    v33[9] = v60;
    v33[10] = v31;
    v33[11] = v32;
    uint64_t v36 = (void *)swift_allocObject();
    v36[2] = 0;
    v36[3] = 0;
    void v36[4] = v34;
    v36[5] = a4;
    v36[6] = v35;
    v36[7] = v62;
    v36[8] = v66;
    v36[9] = v60;
    v36[10] = v31;
    v36[11] = v32;
    sub_1B5A1C2B8();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1B5A1BAB8();
    sub_1B5904A88(v12, v13, v14, v59);
    return;
  }
  long long v48 = (void *)swift_allocObject();
  v48[2] = 0;
  v48[3] = 0;
  v48[4] = v62;
  v48[5] = v66;
  v48[6] = v60;
  v48[7] = v31;
  v48[8] = v32;
  uint64_t v49 = (void *)swift_allocObject();
  v49[2] = 0;
  _OWORD v49[3] = 0;
  v49[4] = v62;
  v49[5] = v66;
  v49[6] = v60;
  v49[7] = v31;
  v49[8] = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B590968C(v16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
  sub_1B5A1BAB8();
  sub_1B5A1BAE8();
  uint64_t v50 = v69;
  if (v69)
  {
    uint64_t v51 = v68;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B59E50BC(&v68, a2, v72, v65);
    sub_1B5905298(v16);
    sub_1B599F540(v51, v50);
    sub_1B5904A88(v12, v13, v14, v15);
    sub_1B599F540(v51, v50);
    uint64_t v52 = v16;
LABEL_19:
    sub_1B5905298(v52);
    return;
  }
  sub_1B59619AC();
  swift_allocError();
  *(void *)uint64_t v57 = 1;
  *(void *)(v57 + 8) = 0;
  *(void *)(v57 + 16) = 0;
  *(void *)(v57 + 24) = 0;
  *(unsigned char *)(v57 + 32) = 5;
  swift_willThrow();
  sub_1B5905298(v16);
  sub_1B5905298(v16);
  sub_1B5904A88(v12, v13, v14, v15);
}

void sub_1B59E5934(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = *a1;
  uint64_t v8 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = *(void *)(v8 + 16);
    uint64_t v9 = *(void *)(v8 + 24);
    uint64_t v11 = *(void *)(v8 + 32);
    unsigned __int8 v12 = *(unsigned char *)(v8 + 40);
    uint64_t v13 = *(void *)(v8 + 48);
    sub_1B5904B60(v10, v9, v11, v12);
    sub_1B590968C(v13);
    unint64_t v14 = StringResolvable.resolved(with:)(a2);
    if (v5)
    {
LABEL_3:
      sub_1B5905298(v13);
      sub_1B5904A88(v10, v9, v11, v12);
      return;
    }
    uint64_t v43 = v15;
    if (v7 >> 61 == 5)
    {
      uint64_t v27 = v14;
      uint64_t v28 = sub_1B59A5304(*(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
      if (!*(void *)(v28 + 16) || (uint64_t v41 = v28, v29 = sub_1B59049B8(v27, v43), (v30 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v40 = v7;
        *(unsigned char *)(v40 + 32) = 1;
        swift_retain();
        swift_willThrow();
        goto LABEL_3;
      }
      uint64_t v31 = *(void *)(*(void *)(v41 + 56) + 8 * v29);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      if ((~v13 & 0xF000000000000007) == 0)
      {
        sub_1B59546FC(*(void *)(a3 + 16), a4);
        sub_1B5904A88(v10, v9, v11, v12);
        goto LABEL_15;
      }
      uint64_t v46 = v31;
      swift_retain();
      sub_1B59E5934(&v46, a2, a3, a4);
      sub_1B5905298(v13);
      sub_1B5904A88(v10, v9, v11, v12);
      swift_release();
      sub_1B5905298(v13);
    }
    else
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
      sub_1B5951A10();
      swift_allocError();
      unint64_t *v38 = v7;
      v38[1] = v37;
      swift_retain();
      swift_willThrow();
      sub_1B5905298(v13);
      sub_1B5904A88(v10, v9, v11, v12);
      swift_bridgeObjectRelease();
    }
    return;
  }
  uint64_t v16 = v8 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v18 = *(void *)(v16 + 16);
  uint64_t v17 = *(void *)(v16 + 24);
  uint64_t v19 = *(void *)(v16 + 32);
  char v20 = *(unsigned char *)(v16 + 40);
  uint64_t v21 = *(void *)(v16 + 48);
  sub_1B591DF88(v18, v17, v19, v20);
  uint64_t v42 = v21;
  sub_1B590968C(v21);
  sub_1B5963948(a2);
  if (v23)
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1B5A1A328();
    __swift_project_value_buffer(v32, (uint64_t)qword_1E9D910D0);
    long long v33 = sub_1B5A1A308();
    os_log_type_t v34 = sub_1B5A1C258();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_1B58FD000, v33, v34, "SubReference to find value, unable to resolve index", v35, 2u);
      MEMORY[0x1BA9A4780](v35, -1, -1);
    }

    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v36 = 2;
    *(void *)(v36 + 8) = 0;
    *(void *)(v36 + 16) = 0;
    *(void *)(v36 + 24) = 0;
    *(unsigned char *)(v36 + 32) = 5;
    goto LABEL_23;
  }
  uint64_t v24 = v22;
  unint64_t v25 = sub_1B59B4C2C(v7);
  if (v5)
  {
LABEL_24:
    sub_1B5905298(v42);
    sub_1B591DF0C(v18, v17, v19, v20);
    return;
  }
  if (v24 < 0 || v24 >= *(void *)(v25 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1B59619AC();
    swift_allocError();
    *(void *)uint64_t v39 = v7;
    *(unsigned char *)(v39 + 32) = 1;
    swift_retain();
LABEL_23:
    swift_willThrow();
    goto LABEL_24;
  }
  uint64_t v26 = *(void *)(v25 + 8 * v24 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  if ((~v21 & 0xF000000000000007) == 0)
  {
    sub_1B59546FC(*(void *)(a3 + 16), a4);
    sub_1B591DF0C(v18, v17, v19, v20);
LABEL_15:
    swift_release();
    return;
  }
  uint64_t v46 = v26;
  swift_retain();
  sub_1B59E5934(&v46, a2, a3, a4);
  sub_1B5905298(v21);
  sub_1B591DF0C(v18, v17, v19, v20);
  swift_release();
  sub_1B5905298(v21);
}

void sub_1B59E5E94(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  char v26 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *v2;
  if (*v2 < 0)
  {
    uint64_t v18 = v6 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v19 = *(void *)(v18 + 16);
    uint64_t v20 = *(void *)(v18 + 24);
    uint64_t v21 = *(void *)(v18 + 32);
    char v22 = *(unsigned char *)(v18 + 40);
    uint64_t v23 = *(void *)(v18 + 48);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v19;
    *(void *)(v24 + 24) = v20;
    *(void *)(v24 + 32) = v21;
    *(unsigned char *)(v24 + 40) = v22;
    if ((~v23 & 0xF000000000000007) != 0)
    {
      uint64_t v32 = v23;
      uint64_t v28 = v4;
      uint64_t v29 = v3;
      uint64_t v30 = v5;
      char v31 = v26;
      sub_1B591DF88(v19, v20, v21, v22);
      sub_1B59E5E94(&v33, &v28);
      *(void *)(v24 + 48) = v33;
      *a2 = v24 | 0x8000000000000000;
      return;
    }
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v4;
    *(void *)(v25 + 24) = v3;
    *(void *)(v25 + 32) = v5;
    *(unsigned char *)(v25 + 40) = v26;
    *(void *)(v25 + 48) = 0xF000000000000007;
    *(void *)(v24 + 48) = v25 | 0x8000000000000000;
    *a2 = v24 | 0x8000000000000000;
    sub_1B591DF88(v4, v3, v5, v26);
    uint64_t v14 = v19;
    uint64_t v15 = v20;
    uint64_t v16 = v21;
    char v17 = v22;
  }
  else
  {
    uint64_t v7 = *(void *)(v6 + 16);
    uint64_t v8 = *(void *)(v6 + 24);
    uint64_t v9 = *(void *)(v6 + 32);
    unsigned __int8 v10 = *(unsigned char *)(v6 + 40);
    uint64_t v11 = *(void *)(v6 + 48);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v7;
    *(void *)(v12 + 24) = v8;
    *(void *)(v12 + 32) = v9;
    *(unsigned char *)(v12 + 40) = v10;
    if ((~v11 & 0xF000000000000007) != 0)
    {
      uint64_t v32 = v11;
      uint64_t v28 = v4;
      uint64_t v29 = v3;
      uint64_t v30 = v5;
      char v31 = v26;
      sub_1B5904B60(v7, v8, v9, v10);
      sub_1B59E5E94(&v33, &v28);
      *(void *)(v12 + 48) = v33;
      *a2 = v12;
      return;
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v4;
    *(void *)(v13 + 24) = v3;
    *(void *)(v13 + 32) = v5;
    *(unsigned char *)(v13 + 40) = v26;
    *(void *)(v13 + 48) = 0xF000000000000007;
    *(void *)(v12 + 48) = v13 | 0x8000000000000000;
    *a2 = v12;
    sub_1B5904B60(v7, v8, v9, v10);
    uint64_t v14 = v4;
    uint64_t v15 = v3;
    uint64_t v16 = v5;
    char v17 = v26;
  }
  sub_1B591DF88(v14, v15, v16, v17);
}

BOOL sub_1B59E6104(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1B59E6114()
{
  return sub_1B5A1C7B8();
}

uint64_t sub_1B59E613C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v3 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7865646E69 && a2 == 0xE500000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1954047342 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B59E625C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59E62A4(char a1)
{
  return qword_1B5A2CCD8[a1];
}

BOOL sub_1B59E62C4(char *a1, char *a2)
{
  return sub_1B59E6104(*a1, *a2);
}

uint64_t sub_1B59E62D8()
{
  return sub_1B59E625C();
}

uint64_t sub_1B59E62E4()
{
  return sub_1B59E6114();
}

uint64_t sub_1B59E62F0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59E6338()
{
  return sub_1B59E62A4(*v0);
}

uint64_t sub_1B59E6344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B59E613C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B59E6374@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59E7764();
  *a1 = result;
  return result;
}

uint64_t sub_1B59E63A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B59E63F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t SubReference.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  char v22 = a3;
  *(void *)&long long v23 = a2;
  type metadata accessor for SubReference.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1B5A1C608();
  uint64_t v21 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v21 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C838();
  if (!v3)
  {
    uint64_t v9 = v21;
    uint64_t v8 = v22;
    type metadata accessor for SubReference();
    char v27 = 2;
    swift_getWitnessTable();
    sub_1B5A1C5B8();
    unsigned __int8 v10 = v7;
    uint64_t v11 = v24;
    char v27 = 0;
    sub_1B5904A34();
    sub_1B5A1C5B8();
    uint64_t v12 = v9;
    unsigned __int8 v13 = v26;
    if (v26 < 0xFEu)
    {
      uint64_t v16 = v25;
      long long v23 = v24;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v5);
      unint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = v23;
      *(void *)(v17 + 32) = v16;
      *(unsigned char *)(v17 + 40) = v13;
      *(void *)(v17 + 48) = v11;
    }
    else
    {
      char v27 = 1;
      sub_1B595E25C();
      sub_1B5A1C5B8();
      unsigned __int8 v14 = v26;
      if (v26 >= 0xFEu)
      {
        sub_1B59619AC();
        swift_allocError();
        *(void *)uint64_t v15 = 2;
        *(void *)(v15 + 8) = 0;
        *(void *)(v15 + 16) = 0;
        *(void *)(v15 + 24) = 0;
        *(unsigned char *)(v15 + 32) = 5;
        swift_willThrow();
        sub_1B5905298(v11);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v5);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      uint64_t v19 = v25;
      long long v23 = v24;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v5);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = v23;
      *(void *)(v20 + 32) = v19;
      *(unsigned char *)(v20 + 40) = v14;
      *(void *)(v20 + 48) = v11;
      unint64_t v17 = v20 | 0x8000000000000000;
    }
    *uint64_t v8 = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for SubReference.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for SubReference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B59E6804()
{
  return objectdestroyTm_6((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59E681C()
{
  return objectdestroyTm_6((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t sub_1B59E6834@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  return SubReference.init(from:)(a1, *(void *)(a2 + 24), a3);
}

uint64_t sub_1B59E6854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

unsigned char *sub_1B59E685C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59E6928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1B59E6950()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B59E696C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B59E6988()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B59E69A4@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, void *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v9, v6);
  if (v9 >> 61 == 5)
  {
    uint64_t v7 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1B59B300C(a1, a2, v7, a3);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_release();
    *a3 = 0xF000000000000007;
  }
  return result;
}

uint64_t sub_1B59E6A6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = *a1;
  uint64_t v18 = a4;
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v21);
  if (v21 >> 61 == 5)
  {
    uint64_t v14 = *(void *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    unint64_t v21 = v14;
    swift_bridgeObjectRetain();
    if ((~v13 & 0xF000000000000007) != 0)
    {
      sub_1B59A0838(v13);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = v14;
      sub_1B5958B30(v13, a7, a8, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B5957208(a7, a8, &v18);
      swift_bridgeObjectRelease();
      sub_1B599FF94(v18);
      uint64_t v14 = v21;
    }
    uint64_t v18 = a4;
    uint64_t v19 = a5;
    uint64_t v20 = a6;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1B59A5304(v14);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1B5A1BAA8();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1B59E6C2C@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v14, v9);
  if (v14 >> 61 != 5)
  {
    swift_release();
LABEL_8:
    uint64_t v13 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v13, 1, a3);
  }
  uint64_t v10 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v10 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  sub_1B59049B8(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B59546FC(a3, a5);
  swift_release();
  uint64_t v13 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v13, 1, a3);
}

uint64_t sub_1B59E6DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v34 = a1;
  uint64_t v35 = a8;
  uint64_t v14 = sub_1B5A1C2B8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)v31 - v16;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v40);
  if (v40 >> 61 == 5)
  {
    uint64_t v32 = a6;
    uint64_t v33 = a7;
    v31[1] = v18;
    unint64_t v19 = *(void *)((v40 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    unint64_t v40 = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v34, v14);
    uint64_t v20 = *(void *)(a9 - 8);
    int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, a9);
    uint64_t v22 = a4;
    uint64_t v23 = a5;
    uint64_t v24 = v35;
    if (v21 == 1)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      swift_bridgeObjectRetain();
      sub_1B5957208(v33, v24, &v37);
      swift_bridgeObjectRelease();
      sub_1B599FF94(v37);
      uint64_t v25 = v40;
    }
    else
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(a10 + 8))(&v37, a9);
      uint64_t v26 = v37;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v17, a9);
      swift_bridgeObjectRetain();
      uint64_t v27 = v40;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v37 = v27;
      sub_1B5958B30(v26, v33, v24, isUniquelyReferenced_nonNull_native);
      uint64_t v25 = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v37 = v22;
    uint64_t v38 = v23;
    uint64_t v39 = v32;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1B59A5304(v25);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    unint64_t v36 = v29 | 0xA000000000000000;
    sub_1B5A1BAA8();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1B59E70B0@<X0>(unint64_t a1@<X5>, unint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v8, v4);
  if (v8 >> 61 != 4)
  {
    uint64_t result = swift_release();
    unint64_t v7 = 0xF000000000000007;
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v5 + 16) > a1)
  {
    unint64_t v7 = *(void *)(v5 + 8 * a1 + 32);
    swift_retain();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_6:
    *a2 = v7;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B59E7170(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v8 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v11);
  if (v11 >> 61 != 4) {
    return swift_release();
  }
  uint64_t v9 = *(void **)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if ((~v8 & 0xF000000000000007) == 0) {
    return swift_bridgeObjectRelease();
  }
  swift_retain_n();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((a7 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t result = (uint64_t)sub_1B59CC268(v9);
  uint64_t v9 = (void *)result;
  if ((a7 & 0x8000000000000000) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if (v9[2] <= a7)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v9[a7 + 4] = v8;
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B59A33C8((uint64_t)v9, &v11);
  swift_bridgeObjectRelease();
  sub_1B5A1BAA8();
  sub_1B599FF94(v8);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B59E72F0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v12, v8);
  if (v12 >> 61 != 4)
  {
    swift_release();
LABEL_7:
    uint64_t v11 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a4, v11, 1, a2);
  }
  uint64_t v9 = *(void *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (a1 < 0 || *(void *)(v9 + 16) <= a1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1B59546FC(a2, a3);
  swift_release();
  uint64_t v11 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a4, v11, 1, a2);
}

uint64_t sub_1B59E7434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v30 = a7;
  uint64_t v14 = sub_1B5A1C2B8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v19 = *(void *)(a8 - 8);
  MEMORY[0x1F4188790](v16);
  int v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a5;
  uint64_t v34 = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E68);
  MEMORY[0x1BA9A3290](&v35);
  if (v35 >> 61 != 4) {
    return swift_release();
  }
  uint64_t v27 = a4;
  uint64_t v22 = *(void **)((v35 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, a8) == 1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v18, a8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a9 + 8))(&v32, a8, a9);
  uint64_t v24 = v32;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    unint64_t v25 = v30;
    if ((v30 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = (uint64_t)sub_1B59CC268(v22);
  uint64_t v22 = (void *)result;
  unint64_t v25 = v30;
  if ((v30 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
LABEL_7:
  if (v22[2] <= v25)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v22[v25 + 4] = v24;
  swift_release();
  uint64_t v32 = v27;
  uint64_t v33 = v29;
  uint64_t v34 = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B59A33C8((uint64_t)v22, &v35);
  swift_bridgeObjectRelease();
  unint64_t v31 = v35;
  sub_1B5A1BAA8();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, a8);
}

uint64_t sub_1B59E7764()
{
  return 3;
}

uint64_t sub_1B59E7770@<X0>(uint64_t a1@<X8>)
{
  return sub_1B59E72F0(v1[10], v1[4], v1[5], a1);
}

uint64_t objectdestroy_14Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1B59E7800(uint64_t a1)
{
  return sub_1B59E7434(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1B59E783C@<X0>(unint64_t *a1@<X8>)
{
  return sub_1B59E70B0(*(void *)(v1 + 56), a1);
}

uint64_t sub_1B59E7854@<X0>(uint64_t a1@<X8>)
{
  return sub_1B59E6C2C(v1[10], v1[11], v1[4], a1, v1[5]);
}

uint64_t objectdestroy_26Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1B59E78EC(uint64_t a1)
{
  return sub_1B59E6DA0(a1, v1[2], v1[3], v1[7], v1[8], v1[9], v1[10], v1[11], v1[4], v1[5]);
}

uint64_t sub_1B59E792C@<X0>(void *a1@<X8>)
{
  return sub_1B59E69A4(*(void *)(v1 + 56), *(void *)(v1 + 64), a1);
}

uint64_t sub_1B59E7944()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B59E797C()
{
  return objectdestroyTm_6((void (*)(void, void, void, void))sub_1B591DF0C);
}

uint64_t sub_1B59E7994()
{
  return objectdestroyTm_6((void (*)(void, void, void, void))sub_1B5904A88);
}

uint64_t objectdestroyTm_6(void (*a1)(void, void, void, void))
{
  a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  if ((~*(void *)(v1 + 48) & 0xF000000000000007) != 0) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v1, 56, 7);
}

uint64_t destroy for SheetModifier(uint64_t a1)
{
  sub_1B590D6F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SheetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B590D634(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  long long v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 32, a2 + 32);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SheetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B590D634(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B590D6F0(v8, v9, v10, v11);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SheetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B590D6F0(v6, v7, v8, v9);
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SheetModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SheetModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SheetModifier()
{
  return &type metadata for SheetModifier;
}

uint64_t sub_1B59E7CCC(char a1)
{
  return *(void *)&aIspresenconten[8 * a1];
}

uint64_t sub_1B59E7CEC(char *a1, char *a2)
{
  return sub_1B59EF39C(*a1, *a2);
}

uint64_t sub_1B59E7CF8()
{
  return sub_1B59F200C();
}

uint64_t sub_1B59E7D00()
{
  return sub_1B59F452C();
}

uint64_t sub_1B59E7D08()
{
  return sub_1B59F5874();
}

uint64_t sub_1B59E7D10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59E8B3C();
  *a1 = result;
  return result;
}

uint64_t sub_1B59E7D40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59E7CCC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59E7D6C()
{
  return sub_1B59E7CCC(*v0);
}

uint64_t sub_1B59E7D74@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59E8B3C();
  *a1 = result;
  return result;
}

uint64_t sub_1B59E7D9C(uint64_t a1)
{
  unint64_t v2 = sub_1B59E8834();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59E7DD8(uint64_t a1)
{
  unint64_t v2 = sub_1B59E8834();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B59E7E14(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65D70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59E8834();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    v18[0] = 0;
    sub_1B5915308();
    sub_1B5A1C5D8();
    long long v24 = v20;
    uint64_t v25 = v21;
    char v26 = (char)v22;
    v18[0] = 1;
    uint64_t v22 = &type metadata for ViewContent;
    unint64_t v23 = sub_1B5914034();
    *(void *)&long long v20 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    sub_1B5908BE8(&v20, (uint64_t)v27);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
    LOBYTE(v20) = 2;
    sub_1B5951CA4();
    sub_1B5A1C5B8();
    if (v28)
    {
      int64_t v9 = *(void *)(v28 + 16);
      if (v9)
      {
        uint64_t v16 = a2;
        uint64_t v17 = v6;
        uint64_t v19 = MEMORY[0x1E4FBC860];
        uint64_t v10 = v28;
        sub_1B596931C(0, v9, 0);
        v15[1] = v10;
        uint64_t v11 = v10 + 32;
        uint64_t v12 = v19;
        do
        {
          sub_1B5951D6C(v11, (uint64_t)v18);
          sub_1B590CA38((uint64_t)v18, (uint64_t)&v20);
          sub_1B5951DC8((uint64_t)v18);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B596931C(0, *(void *)(v12 + 16) + 1, 1);
            uint64_t v12 = v19;
          }
          unint64_t v14 = *(void *)(v12 + 16);
          unint64_t v13 = *(void *)(v12 + 24);
          if (v14 >= v13 >> 1)
          {
            sub_1B596931C(v13 > 1, v14 + 1, 1);
            uint64_t v12 = v19;
          }
          *(void *)(v12 + 16) = v14 + 1;
          sub_1B5908BE8(&v20, v12 + 40 * v14 + 32);
          v11 += 40;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        uint64_t v6 = v17;
        a2 = v16;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      uint64_t v12 = 0;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v27[5] = v12;
    sub_1B59E8694((uint64_t)&v24, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B59E8900((uint64_t)&v24);
  }
}

void sub_1B59E8238(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v8 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  uint64_t v9 = *(void *)v4;
  uint64_t v10 = *(void *)(v4 + 8);
  uint64_t v11 = *(void *)(v4 + 16);
  char v12 = *(unsigned char *)(v4 + 24);
  sub_1B590D634(*(void *)v4, v10, v11, v12);
  sub_1B59966F8(a2, v9, v10, v11, v12);
  sub_1B590D6F0(v9, v10, v11, v12);
  if (!v5)
  {
    sub_1B59E8694(v4, (uint64_t)v27);
    uint64_t v13 = swift_allocObject();
    long long v14 = v27[3];
    *(_OWORD *)(v13 + 48) = v27[2];
    *(_OWORD *)(v13 + 64) = v14;
    *(_OWORD *)(v13 + 80) = v27[4];
    long long v15 = v27[1];
    *(_OWORD *)(v13 + 16) = v27[0];
    *(_OWORD *)(v13 + 32) = v15;
    uint64_t v16 = v28;
    *(void *)(v13 + 96) = a2;
    *(void *)(v13 + 104) = v16;
    sub_1B59E8694(v4, (uint64_t)&v22);
    uint64_t v17 = (_OWORD *)swift_allocObject();
    long long v18 = v25;
    void v17[3] = v24;
    v17[4] = v18;
    void v17[5] = v26;
    long long v19 = v23;
    v17[1] = v22;
    void v17[2] = v19;
    *(void *)&long long v22 = v8;
    *((void *)&v22 + 1) = MEMORY[0x1E4F3EE00];
    uint64_t v20 = MEMORY[0x1E4F3EDF8];
    *(void *)&long long v23 = v21;
    *((void *)&v23 + 1) = MEMORY[0x1E4F3EDF8];
    a4[3] = swift_getOpaqueTypeMetadata2();
    *(void *)&long long v22 = v8;
    *((void *)&v22 + 1) = MEMORY[0x1E4F3EE00];
    *(void *)&long long v23 = v21;
    *((void *)&v23 + 1) = v20;
    a4[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(a4);
    swift_retain();
    swift_retain();
    sub_1B5A1B698();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1B59E84BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  uint64_t result = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 72);
  if (v10)
  {
    uint64_t v11 = sub_1B5A1C188();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    char v12 = (void *)swift_allocObject();
    _OWORD v12[2] = 0;
    uint64_t v12[3] = 0;
    void v12[4] = v10;
    void v12[5] = a2;
    uint64_t v12[6] = a3;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1B5924038((uint64_t)v9, (uint64_t)&unk_1E9D637B0, (uint64_t)v12);
    return swift_release();
  }
  return result;
}

void sub_1B59E85E8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
}

void sub_1B59E8600(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B59E8618(uint64_t a1)
{
  unint64_t result = sub_1B59E8640();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59E8640()
{
  unint64_t result = qword_1E9D65D68;
  if (!qword_1E9D65D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65D68);
  }
  return result;
}

uint64_t sub_1B59E8694(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B59E86CC()
{
  sub_1B590D6F0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1B59E872C()
{
  return sub_1B59E84BC(v0 + 16, *(void *)(v0 + 96), *(void *)(v0 + 104));
}

uint64_t sub_1B59E8738()
{
  sub_1B590D6F0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1B59E8788@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[9];
  uint64_t v4 = v1[10];
  __swift_project_boxed_opaque_existential_1(v1 + 6, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  *a1 = result;
  return result;
}

uint64_t sub_1B59E87E4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

unint64_t sub_1B59E8834()
{
  unint64_t result = qword_1E9D65D78;
  if (!qword_1E9D65D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65D78);
  }
  return result;
}

uint64_t sub_1B59E8888()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B59E8900(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SheetModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59E89FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SheetModifier.CodingKeys()
{
  return &type metadata for SheetModifier.CodingKeys;
}

unint64_t sub_1B59E8A38()
{
  unint64_t result = qword_1E9D65D80;
  if (!qword_1E9D65D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65D80);
  }
  return result;
}

unint64_t sub_1B59E8A90()
{
  unint64_t result = qword_1E9D65D88;
  if (!qword_1E9D65D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65D88);
  }
  return result;
}

unint64_t sub_1B59E8AE8()
{
  unint64_t result = qword_1E9D65D90;
  if (!qword_1E9D65D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65D90);
  }
  return result;
}

uint64_t sub_1B59E8B3C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t destroy for AsyncImageView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v2);
  }
  sub_1B591DF0C(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for AsyncImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    sub_1B5904B60(v6, v7, v8, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  char v12 = *(unsigned char *)(a2 + 72);
  sub_1B591DF88(v9, v10, v11, v12);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v13;
    *(void *)(a1 + 120) = v14;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 88, a2 + 88, v13);
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v15;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
  }
  uint64_t v16 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v16;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AsyncImageView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unsigned int v5 = (_OWORD *)(a2 + 16);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = *(void *)(a2 + 32);
      sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 40));
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v16 = *(void *)(a1 + 24);
      uint64_t v17 = *(void *)(a1 + 32);
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 40);
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 16);
      long long v8 = *(_OWORD *)(a2 + 25);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 25) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 40));
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *uint64_t v4 = v7;
  }
  uint64_t v19 = *(void *)(a2 + 48);
  uint64_t v20 = *(void *)(a2 + 56);
  uint64_t v21 = *(void *)(a2 + 64);
  char v22 = *(unsigned char *)(a2 + 72);
  sub_1B591DF88(v19, v20, v21, v22);
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v25 = *(void *)(a1 + 64);
  *(void *)(a1 + 48) = v19;
  *(void *)(a1 + 56) = v20;
  *(void *)(a1 + 64) = v21;
  char v26 = *(unsigned char *)(a1 + 72);
  *(unsigned char *)(a1 + 72) = v22;
  sub_1B591DF0C(v23, v24, v25, v26);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(a2 + 112);
  if (!*(void *)(a1 + 112))
  {
    if (v27)
    {
      *(void *)(a1 + 112) = v27;
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      (**(void (***)(uint64_t, uint64_t))(v27 - 8))(a1 + 88, a2 + 88);
      goto LABEL_15;
    }
LABEL_14:
    long long v28 = *(_OWORD *)(a2 + 88);
    long long v29 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(_OWORD *)(a1 + 88) = v28;
    *(_OWORD *)(a1 + 104) = v29;
    goto LABEL_15;
  }
  if (!v27)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
LABEL_15:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

uint64_t assignWithTake for AsyncImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unsigned int v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (v6 > 0xFD)
  {
    sub_1B590DA50(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v6;
  sub_1B5904A88(v8, v9, v10, v5);
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 64);
  char v12 = *(unsigned char *)(a2 + 72);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v11;
  char v16 = *(unsigned char *)(a1 + 72);
  *(unsigned char *)(a1 + 72) = v12;
  sub_1B591DF0C(v13, v14, v15, v16);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  }
  long long v17 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v17;
  uint64_t v18 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

ValueMetadata *type metadata accessor for AsyncImageView()
{
  return &type metadata for AsyncImageView;
}

uint64_t destroy for SymbolView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v2);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), v3);
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 104);
  if (v4 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SymbolView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    sub_1B5904B60(v6, v7, v8, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  unsigned int v9 = *(unsigned __int8 *)(a2 + 72);
  if (v9 <= 0xFD)
  {
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    sub_1B5904B60(v10, v11, v12, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(unsigned char *)(a1 + 72) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  }
  unsigned int v13 = *(unsigned __int8 *)(a2 + 104);
  if (v13 <= 0xFD)
  {
    uint64_t v14 = *(void *)(a2 + 80);
    uint64_t v15 = *(void *)(a2 + 88);
    uint64_t v16 = *(void *)(a2 + 96);
    sub_1B5904B60(v14, v15, v16, *(unsigned char *)(a2 + 104));
    *(void *)(a1 + 80) = v14;
    *(void *)(a1 + 88) = v15;
    *(void *)(a1 + 96) = v16;
    *(unsigned char *)(a1 + 104) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  }
  uint64_t v17 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v17;
  uint64_t v18 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SymbolView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unsigned int v5 = (_OWORD *)(a2 + 16);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = *(void *)(a2 + 32);
      sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 40));
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v16 = *(void *)(a1 + 24);
      uint64_t v17 = *(void *)(a1 + 32);
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 40);
      *(unsigned char *)(a1 + 40) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 16);
      long long v8 = *(_OWORD *)(a2 + 25);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 25) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 40));
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *uint64_t v4 = v7;
  }
  uint64_t v19 = (_OWORD *)(a1 + 48);
  uint64_t v20 = (_OWORD *)(a2 + 48);
  unsigned int v21 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) <= 0xFDu)
  {
    if (v21 <= 0xFD)
    {
      uint64_t v27 = *(void *)(a2 + 48);
      uint64_t v28 = *(void *)(a2 + 56);
      uint64_t v29 = *(void *)(a2 + 64);
      sub_1B5904B60(v27, v28, v29, *(unsigned char *)(a2 + 72));
      uint64_t v30 = *(void *)(a1 + 48);
      uint64_t v31 = *(void *)(a1 + 56);
      uint64_t v32 = *(void *)(a1 + 64);
      *(void *)(a1 + 48) = v27;
      *(void *)(a1 + 56) = v28;
      *(void *)(a1 + 64) = v29;
      unsigned __int8 v33 = *(unsigned char *)(a1 + 72);
      *(unsigned char *)(a1 + 72) = v21;
      sub_1B5904A88(v30, v31, v32, v33);
    }
    else
    {
      sub_1B590DA50(a1 + 48);
      long long v23 = *(_OWORD *)(a2 + 57);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 57) = v23;
    }
  }
  else if (v21 <= 0xFD)
  {
    uint64_t v24 = *(void *)(a2 + 48);
    uint64_t v25 = *(void *)(a2 + 56);
    uint64_t v26 = *(void *)(a2 + 64);
    sub_1B5904B60(v24, v25, v26, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 48) = v24;
    *(void *)(a1 + 56) = v25;
    *(void *)(a1 + 64) = v26;
    *(unsigned char *)(a1 + 72) = v21;
  }
  else
  {
    long long v22 = *v20;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *uint64_t v19 = v22;
  }
  uint64_t v34 = (_OWORD *)(a1 + 80);
  unint64_t v35 = (_OWORD *)(a2 + 80);
  unsigned int v36 = *(unsigned __int8 *)(a2 + 104);
  if (*(unsigned __int8 *)(a1 + 104) <= 0xFDu)
  {
    if (v36 <= 0xFD)
    {
      uint64_t v42 = *(void *)(a2 + 80);
      uint64_t v43 = *(void *)(a2 + 88);
      uint64_t v44 = *(void *)(a2 + 96);
      sub_1B5904B60(v42, v43, v44, *(unsigned char *)(a2 + 104));
      uint64_t v45 = *(void *)(a1 + 80);
      uint64_t v46 = *(void *)(a1 + 88);
      uint64_t v47 = *(void *)(a1 + 96);
      *(void *)(a1 + 80) = v42;
      *(void *)(a1 + 88) = v43;
      *(void *)(a1 + 96) = v44;
      unsigned __int8 v48 = *(unsigned char *)(a1 + 104);
      *(unsigned char *)(a1 + 104) = v36;
      sub_1B5904A88(v45, v46, v47, v48);
    }
    else
    {
      sub_1B590DA50(a1 + 80);
      long long v38 = *(_OWORD *)(a2 + 89);
      *uint64_t v34 = *v35;
      *(_OWORD *)(a1 + 89) = v38;
    }
  }
  else if (v36 <= 0xFD)
  {
    uint64_t v39 = *(void *)(a2 + 80);
    uint64_t v40 = *(void *)(a2 + 88);
    uint64_t v41 = *(void *)(a2 + 96);
    sub_1B5904B60(v39, v40, v41, *(unsigned char *)(a2 + 104));
    *(void *)(a1 + 80) = v39;
    *(void *)(a1 + 88) = v40;
    *(void *)(a1 + 96) = v41;
    *(unsigned char *)(a1 + 104) = v36;
  }
  else
  {
    long long v37 = *v35;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    *uint64_t v34 = v37;
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t assignWithTake for SymbolView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unsigned int v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (v6 > 0xFD)
  {
    sub_1B590DA50(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v6;
  sub_1B5904A88(v8, v9, v10, v5);
LABEL_6:
  unsigned int v11 = *(unsigned __int8 *)(a1 + 72);
  if (v11 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    goto LABEL_11;
  }
  unsigned int v12 = *(unsigned __int8 *)(a2 + 72);
  if (v12 > 0xFD)
  {
    sub_1B590DA50(a1 + 48);
    goto LABEL_9;
  }
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v13;
  *(unsigned char *)(a1 + 72) = v12;
  sub_1B5904A88(v14, v15, v16, v11);
LABEL_11:
  unsigned int v17 = *(unsigned __int8 *)(a1 + 104);
  if (v17 <= 0xFD)
  {
    unsigned int v18 = *(unsigned __int8 *)(a2 + 104);
    if (v18 <= 0xFD)
    {
      uint64_t v19 = *(void *)(a2 + 96);
      uint64_t v20 = *(void *)(a1 + 80);
      uint64_t v21 = *(void *)(a1 + 88);
      uint64_t v22 = *(void *)(a1 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(void *)(a1 + 96) = v19;
      *(unsigned char *)(a1 + 104) = v18;
      sub_1B5904A88(v20, v21, v22, v17);
      goto LABEL_16;
    }
    sub_1B590DA50(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
LABEL_16:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolView()
{
  return &type metadata for SymbolView;
}

uint64_t sub_1B59E97B8@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[6];
  long long v4 = v1[7];
  long long v5 = v1[4];
  long long v36 = v1[5];
  long long v37 = v3;
  long long v6 = v1[8];
  long long v38 = v4;
  long long v39 = v6;
  long long v7 = v1[3];
  long long v33 = v1[2];
  long long v34 = v7;
  long long v35 = v5;
  long long v8 = v1[1];
  long long v31 = *v1;
  long long v32 = v8;
  if (BYTE8(v37) > 0xFDu)
  {
    unsigned __int8 v10 = BYTE8(v33);
    if (BYTE8(v33) <= 0xFDu)
    {
      long long v11 = v32;
      long long v30 = v32;
      uint64_t v12 = v33;
      if (!(void)v39)
      {
        sub_1B591E83C((uint64_t)&v31);
        sub_1B5904BDC(v11, *((uint64_t *)&v11 + 1), v12, v10);
        goto LABEL_24;
      }
      sub_1B5904BDC(v32, *((uint64_t *)&v32 + 1), v33, BYTE8(v33));
      uint64_t v13 = swift_retain();
      StringResolvable.resolved(with:)(v13);
      sub_1B5904B4C(v32, *((uint64_t *)&v32 + 1), v33, BYTE8(v33));
      swift_release();
      if (BYTE8(v35) <= 0xFDu)
      {
        long long v30 = v34;
        swift_retain();
        sub_1B5904BDC(v34, *((uint64_t *)&v34 + 1), v35, BYTE8(v35));
        StringResolvable.resolved(with:)(v39);
        sub_1B5904B4C(v34, *((uint64_t *)&v34 + 1), v35, BYTE8(v35));
        swift_release();
        uint64_t v21 = (void *)sub_1B5A1BEE8();
        swift_bridgeObjectRelease();
        id v22 = objc_msgSend(self, sel_bundleWithIdentifier_, v21);

        sub_1B5A1B968();
        uint64_t v23 = *(void *)(v38 + 16);
        if (v23)
        {
          uint64_t v24 = (void *)(v38 + 32);
          swift_retain();
          swift_bridgeObjectRetain();
          do
          {
            uint64_t v25 = v24[3];
            uint64_t v26 = v24[4];
            __swift_project_boxed_opaque_existential_1(v24, v25);
            uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
            uint64_t v28 = swift_retain();
            v27(v28, v25, v26);
            swift_release_n();
            v24 += 5;
            --v23;
          }
          while (v23);
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_1B5A1AE58();
LABEL_14:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63478);
    sub_1B59EC06C((unint64_t *)&qword_1E9D63470, &qword_1E9D63478);
    uint64_t result = sub_1B5A1AE58();
    *(void *)a1 = v30;
    *(unsigned char *)(a1 + 8) = BYTE8(v30);
    *(unsigned char *)(a1 + 9) = BYTE9(v30);
    return result;
  }
  *(void *)&long long v30 = v36;
  WORD4(v30) = WORD4(v36);
  if ((void)v39)
  {
    sub_1B5904BDC(v36, *((uint64_t *)&v36 + 1), v37, BYTE8(v37));
    uint64_t v9 = swift_retain();
    StringResolvable.resolved(with:)(v9);
    sub_1B5904B4C(v36, *((uint64_t *)&v36 + 1), v37, BYTE8(v37));
    swift_release();
    sub_1B5A1B928();
    uint64_t v14 = *(void *)(v38 + 16);
    if (v14)
    {
      uint64_t v29 = a1;
      uint64_t v15 = (void *)(v38 + 32);
      swift_retain();
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v16 = v15[3];
        uint64_t v17 = v15[4];
        __swift_project_boxed_opaque_existential_1(v15, v16);
        unsigned int v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
        uint64_t v19 = swift_retain();
        v18(v19, v16, v17);
        swift_release_n();
        v15 += 5;
        --v14;
      }
      while (v14);
      swift_release();
      swift_bridgeObjectRelease();
      a1 = v29;
    }
    goto LABEL_14;
  }
  sub_1B5904BDC(v36, *((uint64_t *)&v36 + 1), v37, BYTE8(v37));
  sub_1B591E83C((uint64_t)&v31);
LABEL_24:
  type metadata accessor for RemoteStateStore(0);
  sub_1B59776E8();
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

unint64_t sub_1B59E9CE4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614E6D6574737973;
      break;
    case 2:
      unint64_t result = 0x646F4D6567616D69;
      break;
    case 3:
      unint64_t result = 1701667182;
      break;
    case 4:
      return result;
    default:
      unint64_t result = 25705;
      break;
  }
  return result;
}

unint64_t sub_1B59E9D94(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614E6D6574737973;
      break;
    case 2:
      unint64_t result = 0x646F4D6567616D69;
      break;
    case 3:
      unint64_t result = 1701667182;
      break;
    case 4:
      return result;
    default:
      unint64_t result = 25705;
      break;
  }
  return result;
}

uint64_t sub_1B59E9E44(unsigned __int8 *a1, char *a2)
{
  return sub_1B59EFCE8(*a1, *a2);
}

uint64_t sub_1B59E9E50()
{
  return sub_1B59F2078();
}

uint64_t sub_1B59E9E58()
{
  return sub_1B59F4AFC();
}

uint64_t sub_1B59E9E60()
{
  return sub_1B59F5124();
}

uint64_t sub_1B59E9E68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59EC84C();
  *a1 = result;
  return result;
}

unint64_t sub_1B59E9EA0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B59E9CE4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B59E9ECC()
{
  return sub_1B59E9D94(*v0);
}

uint64_t sub_1B59E9ED4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59EC84C();
  *a1 = result;
  return result;
}

uint64_t sub_1B59E9F04(uint64_t a1)
{
  unint64_t v2 = sub_1B59EC3E0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59E9F40(uint64_t a1)
{
  unint64_t v2 = sub_1B59EC3E0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59E9F7C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v73 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  uint64_t v75 = v4;
  MEMORY[0x1F4188790](v3);
  long long v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65DE8);
  uint64_t v76 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B59776E8();
  uint64_t v10 = sub_1B5A1A918();
  uint64_t v72 = v11;
  uint64_t v12 = a1[3];
  unint64_t v77 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B59EC3E0();
  swift_retain();
  uint64_t v13 = v112;
  sub_1B5A1C838();
  if (v13)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v75;
    LOBYTE(v88) = 0;
    uint64_t v15 = sub_1B5A1C598();
    uint64_t v18 = v16;
    if (v16)
    {
      uint64_t v68 = v15;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v68 = sub_1B5A1A288();
      uint64_t v18 = v19;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v74);
    }
    LOBYTE(v79) = 1;
    sub_1B5904A34();
    swift_bridgeObjectRetain();
    sub_1B5A1C5B8();
    uint64_t v112 = 0;
    uint64_t v65 = v18;
    uint64_t v20 = *((void *)&v88 + 1);
    uint64_t v21 = v89;
    id v22 = v9;
    int v23 = v90;
    LOBYTE(v79) = 3;
    uint64_t v75 = v88;
    sub_1B5904BDC(v88, *((uint64_t *)&v88 + 1), v89, v90);
    sub_1B5A1C5B8();
    uint64_t v67 = v21;
    LODWORD(v74) = v23;
    uint64_t v61 = v20;
    uint64_t v24 = *((void *)&v88 + 1);
    uint64_t v25 = v7;
    uint64_t v26 = v89;
    LODWORD(v21) = v90;
    LOBYTE(v79) = 4;
    uint64_t v66 = v88;
    sub_1B5904BDC(v88, *((uint64_t *)&v88 + 1), v89, v90);
    sub_1B5A1C5B8();
    int v64 = v21;
    uint64_t v62 = v24;
    uint64_t v63 = v26;
    uint64_t v27 = *((void *)&v88 + 1);
    uint64_t v28 = v88;
    uint64_t v29 = v89;
    int v30 = v90;
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65DD0);
    uint64_t v60 = v28;
    LOBYTE(v88) = 2;
    uint64_t v70 = v27;
    int v71 = v30;
    sub_1B5904BDC(v28, v27, v29, v30);
    sub_1B59EC12C();
    sub_1B5A1C5B8();
    uint64_t v31 = v76;
    uint64_t v32 = v25;
    uint64_t v69 = v29;
    uint64_t v112 = v22;
    uint64_t v33 = v108;
    uint64_t v34 = v75;
    if (v108)
    {
      uint64_t v59 = v32;
      int64_t v35 = *(void *)(v108 + 16);
      long long v36 = v73;
      if (v35)
      {
        uint64_t v78 = MEMORY[0x1E4FBC860];
        sub_1B59694AC(0, v35, 0);
        uint64_t v37 = v33 + 32;
        uint64_t v38 = v78;
        do
        {
          sub_1B59EC224(v37, (uint64_t)&v79);
          sub_1B590CA38((uint64_t)&v79, (uint64_t)&v88);
          sub_1B59EC280((uint64_t)&v79);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B59694AC(0, *(void *)(v38 + 16) + 1, 1);
            uint64_t v38 = v78;
          }
          unint64_t v40 = *(void *)(v38 + 16);
          unint64_t v39 = *(void *)(v38 + 24);
          unint64_t v41 = v40 + 1;
          if (v40 >= v39 >> 1)
          {
            unint64_t v57 = v40 + 1;
            sub_1B59694AC(v39 > 1, v40 + 1, 1);
            unint64_t v41 = v57;
            uint64_t v38 = v78;
          }
          *(void *)(v38 + 16) = v41;
          sub_1B5908BE8(&v88, v38 + 40 * v40 + 32);
          v37 += 40;
          --v35;
          long long v36 = v73;
        }
        while (v35);
        swift_bridgeObjectRelease();
        uint64_t v34 = v75;
        uint64_t v31 = v76;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v38 = MEMORY[0x1E4FBC860];
        uint64_t v34 = v75;
      }
      uint64_t v32 = v59;
    }
    else
    {
      uint64_t v38 = MEMORY[0x1E4FBC860];
      long long v36 = v73;
    }
    uint64_t v42 = v65;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v112, v32);
    *(void *)&long long v79 = v68;
    *((void *)&v79 + 1) = v42;
    uint64_t v43 = v61;
    *(void *)&long long v80 = v66;
    *((void *)&v80 + 1) = v62;
    *(void *)&long long v81 = v63;
    BYTE8(v81) = v64;
    *(void *)&long long v82 = v60;
    *((void *)&v82 + 1) = v70;
    *(void *)&long long v83 = v69;
    BYTE8(v83) = v71;
    uint64_t v44 = v34;
    *(void *)&long long v84 = v34;
    *((void *)&v84 + 1) = v61;
    uint64_t v45 = v67;
    *(void *)&long long v85 = v67;
    unsigned __int8 v46 = v74;
    BYTE8(v85) = v74;
    *(void *)&long long v86 = v38;
    *((void *)&v86 + 1) = MEMORY[0x1E4FBC860];
    *(void *)&long long v87 = v10;
    uint64_t v58 = v10;
    *((void *)&v87 + 1) = v72;
    sub_1B591E83C((uint64_t)&v79);
    swift_release();
    sub_1B5904B4C(v44, v43, v45, v46);
    sub_1B5904B4C(v60, v70, v69, v71);
    uint64_t v47 = v66;
    uint64_t v48 = v62;
    uint64_t v49 = v63;
    char v50 = v64;
    sub_1B5904B4C(v66, v62, v63, v64);
    uint64_t v51 = v65;
    swift_bridgeObjectRelease();
    long long v52 = v86;
    v36[6] = v85;
    v36[7] = v52;
    v36[8] = v87;
    long long v53 = v82;
    v36[2] = v81;
    v36[3] = v53;
    long long v54 = v84;
    void v36[4] = v83;
    v36[5] = v54;
    long long v55 = v80;
    _OWORD *v36 = v79;
    v36[1] = v55;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    *(void *)&long long v88 = v68;
    *((void *)&v88 + 1) = v51;
    uint64_t v89 = v47;
    uint64_t v90 = v48;
    uint64_t v91 = v49;
    char v92 = v50;
    *(_DWORD *)uint64_t v93 = v111[0];
    *(_DWORD *)&v93[3] = *(_DWORD *)((char *)v111 + 3);
    uint64_t v94 = v60;
    uint64_t v95 = v70;
    uint64_t v96 = v69;
    char v97 = v71;
    *(_DWORD *)uint64_t v98 = *(_DWORD *)v110;
    *(_DWORD *)&v98[3] = *(_DWORD *)&v110[3];
    uint64_t v99 = v75;
    uint64_t v100 = v61;
    uint64_t v101 = v67;
    char v102 = v74;
    *(_DWORD *)uint64_t v103 = *(_DWORD *)v109;
    *(_DWORD *)&v103[3] = *(_DWORD *)&v109[3];
    uint64_t v104 = v38;
    uint64_t v105 = MEMORY[0x1E4FBC860];
    uint64_t v106 = v58;
    uint64_t v107 = v72;
    return sub_1B59EC434((uint64_t)&v88);
  }
}

uint64_t sub_1B59EA84C@<X0>(uint64_t *a1@<X8>)
{
  sub_1B59E97B8((uint64_t)&v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63460);
  sub_1B59EC34C();
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

uint64_t sub_1B59EA8C0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B59E9F7C(a1, a2);
}

uint64_t sub_1B59EA8D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B59EA8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B59EBC54(a1, a2, a3, (void (*)(void))sub_1B59E039C, (void (*)(void))sub_1B591E750);
}

uint64_t sub_1B59EA920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D634B0);
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  long long v55 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v56 = (char *)&v49 - v7;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65DA8);
  MEMORY[0x1F4188790](v59);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D634A0);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  long long v52 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  long long v53 = (char *)&v49 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v49 - v20;
  MEMORY[0x1F4188790](v19);
  int v23 = (char *)&v49 - v22;
  unsigned int v24 = *(unsigned __int8 *)(v2 + 40);
  uint64_t v61 = v10;
  uint64_t v62 = a1;
  uint64_t v60 = v9;
  uint64_t v51 = v25;
  if (v24 <= 0xFD)
  {
    uint64_t v49 = v17;
    uint64_t v58 = v21;
    uint64_t v50 = v4;
    uint64_t v26 = *(void *)(v2 + 16);
    uint64_t v27 = *(void *)(v2 + 24);
    uint64_t v28 = *(void *)(v2 + 32);
    uint64_t v67 = v26;
    *(void *)&long long v68 = v27;
    *((void *)&v68 + 1) = v28;
    char v69 = v24;
    if (!*(void *)(v2 + 136))
    {
      uint64_t v32 = *(void *)(v2 + 144);
      sub_1B5904B60(v26, v27, v28, v24);
LABEL_14:
      type metadata accessor for RemoteStateStore(0);
      sub_1B59776E8();
      sub_1B5A1A908();
      __break(1u);
      goto LABEL_15;
    }
    sub_1B5904BDC(v26, v27, v28, v24);
    uint64_t v29 = swift_retain();
    StringResolvable.resolved(with:)(v29);
    sub_1B5904B4C(v26, v27, v28, v24);
    swift_release();
    uint64_t v4 = v50;
    uint64_t v21 = v58;
    uint64_t v17 = v49;
  }
  int v30 = v23;
  sub_1B5A1A248();
  swift_bridgeObjectRelease();
  uint64_t v67 = *(void *)(v2 + 80);
  uint64_t v31 = v67;
  sub_1B5909890(v2 + 88, (uint64_t)&v68, &qword_1E9D632B0);
  if (!v31)
  {
    sub_1B5908FC0((uint64_t)&v68, &qword_1E9D632B0);
    goto LABEL_9;
  }
  if (!v70)
  {
LABEL_9:
    sub_1B5909890((uint64_t)v23, (uint64_t)v17, &qword_1E9D638F0);
    uint64_t v43 = *(void *)(v2 + 48);
    uint64_t v26 = *(void *)(v2 + 56);
    uint64_t v58 = v23;
    uint64_t v28 = *(void *)(v2 + 64);
    char v44 = *(unsigned char *)(v2 + 72);
    uint64_t v67 = v43;
    *(void *)&long long v68 = v26;
    *((void *)&v68 + 1) = v28;
    char v69 = v44;
    uint64_t v9 = *(char **)(v2 + 136);
    if (v9)
    {
      swift_retain();
      sub_1B591DF88(v43, v26, v28, v44);
      sub_1B5963534((uint64_t)v9);
      swift_release();
      sub_1B591DF0C(v43, v26, v28, v44);
      uint64_t v45 = v55;
      sub_1B5A1A438();
      uint64_t v46 = v57;
      uint64_t v47 = v56;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v56, v45, v4);
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v60, v47, v4);
      swift_storeEnumTagMultiPayload();
      sub_1B59EBDBC(&qword_1E9D63498, &qword_1E9D634A0);
      sub_1B59EBDBC(&qword_1E9D634A8, &qword_1E9D634B0);
      sub_1B5A1AE58();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v4);
      uint64_t v42 = (uint64_t)v58;
      return sub_1B5908FC0(v42, &qword_1E9D638F0);
    }
    uint64_t v32 = *(void *)(v2 + 144);
    sub_1B591DF88(v43, v26, v28, v44);
    goto LABEL_14;
  }
  sub_1B5908BE8(&v68, (uint64_t)v66);
  sub_1B5909890((uint64_t)v23, (uint64_t)v21, &qword_1E9D638F0);
  uint64_t v32 = *(void *)(v2 + 48);
  uint64_t v9 = *(char **)(v2 + 56);
  uint64_t v58 = v21;
  uint64_t v26 = *(void *)(v2 + 64);
  LOBYTE(v28) = *(unsigned char *)(v2 + 72);
  *(void *)&long long v63 = v32;
  *((void *)&v63 + 1) = v9;
  uint64_t v64 = v26;
  char v65 = v28;
  uint64_t v33 = *(void *)(v2 + 136);
  if (v33)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_1B591DF88(v32, (uint64_t)v9, v26, v28);
    sub_1B5963534(v33);
    swift_release();
    sub_1B591DF0C(v32, (uint64_t)v9, v26, v28);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v31;
    sub_1B590CA38((uint64_t)v66, (uint64_t)&v63);
    uint64_t v35 = swift_allocObject();
    sub_1B5908BE8(&v63, v35 + 16);
    uint64_t v36 = (uint64_t)v58;
    sub_1B5909890((uint64_t)v58, v51, &qword_1E9D638F0);
    uint64_t v37 = (void *)swift_allocObject();
    v37[2] = sub_1B59EBE44;
    v37[3] = v34;
    v37[4] = sub_1B59EBE84;
    void v37[5] = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65DB0);
    sub_1B59EC06C(&qword_1E9D65DB8, &qword_1E9D65DB0);
    uint64_t v38 = v52;
    sub_1B5A1A428();
    sub_1B5908FC0(v36, &qword_1E9D638F0);
    uint64_t v39 = v54;
    unint64_t v40 = v53;
    uint64_t v41 = v61;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v53, v38, v61);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v60, v40, v41);
    swift_storeEnumTagMultiPayload();
    sub_1B59EBDBC(&qword_1E9D63498, &qword_1E9D634A0);
    sub_1B59EBDBC(&qword_1E9D634A8, &qword_1E9D634B0);
    sub_1B5A1AE58();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
    uint64_t v42 = (uint64_t)v30;
    return sub_1B5908FC0(v42, &qword_1E9D638F0);
  }
LABEL_15:
  swift_bridgeObjectRetain_n();
  sub_1B591DF88(v32, (uint64_t)v9, v26, v28);
  type metadata accessor for RemoteStateStore(0);
  sub_1B59776E8();
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B59EB220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = (void *)(a2 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v7 = v6[3];
      uint64_t v8 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v7);
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
      uint64_t v10 = swift_retain();
      a1 = v9(v10, v7, v8);
      swift_release_n();
      v6 += 5;
      --v5;
    }
    while (v5);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_retain();
  }
  *a3 = a1;
  return result;
}

uint64_t sub_1B59EB2F4(char a1)
{
  return qword_1B5A2D348[a1];
}

uint64_t sub_1B59EB314(char *a1, char *a2)
{
  return sub_1B59EF314(*a1, *a2);
}

uint64_t sub_1B59EB320()
{
  return sub_1B59F2170();
}

uint64_t sub_1B59EB328()
{
  return sub_1B59F44D8();
}

uint64_t sub_1B59EB330()
{
  return sub_1B59F58DC();
}

uint64_t sub_1B59EB338@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59EC84C();
  *a1 = result;
  return result;
}

uint64_t sub_1B59EB370@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59EB2F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59EB39C()
{
  return sub_1B59EB2F4(*v0);
}

uint64_t sub_1B59EB3A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59EC84C();
  *a1 = result;
  return result;
}

uint64_t sub_1B59EB3D4(uint64_t a1)
{
  unint64_t v2 = sub_1B59EC0D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59EB410(uint64_t a1)
{
  unint64_t v2 = sub_1B59EC0D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59EB44C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_1B5A1A2A8();
  uint64_t v38 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65DC0);
  uint64_t v40 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64[5] = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B59776E8();
  v64[6] = sub_1B5A1A918();
  v64[7] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59EC0D8();
  uint64_t v10 = v65;
  sub_1B5A1C838();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v11 = a1;
    uint64_t v12 = v39;
    v43.i8[0] = 0;
    uint64_t v14 = sub_1B5A1C598();
    uint64_t v16 = v13;
    uint64_t v37 = v8;
    uint64_t v65 = v6;
    if (!v13)
    {
      sub_1B5A1A298();
      uint64_t v14 = sub_1B5A1A288();
      uint64_t v16 = v17;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v3);
    }
    uint64_t v18 = (uint64_t)v11;
    v56[0] = v14;
    v56[1] = v16;
    LOBYTE(v53) = 2;
    sub_1B59358E8();
    sub_1B5A1C5B8();
    uint64_t v20 = v44;
    v21.i32[0] = 253;
    if (BYTE8(v44) <= 0xFDu) {
      char v22 = BYTE8(v44);
    }
    else {
      char v22 = 0;
    }
    v19.i32[0] = BYTE8(v44);
    int8x16_t v23 = vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_u32(v19, v21), 0), (int8x16_t)xmmword_1B5A2CEE0, v43);
    if (BYTE8(v44) > 0xFDu) {
      uint64_t v20 = 0;
    }
    int8x16_t v60 = v23;
    uint64_t v61 = v20;
    char v62 = v22;
    LOBYTE(v53) = 1;
    sub_1B5904A34();
    sub_1B5A1C5D8();
    int8x16_t v57 = v43;
    uint64_t v58 = v44;
    char v59 = BYTE8(v44);
    LOBYTE(v42) = 3;
    sub_1B5914100();
    sub_1B5A1C5B8();
    if (v43.i64[1])
    {
      *((void *)&v54 + 1) = &type metadata for ViewContent;
      unint64_t v55 = sub_1B5914034();
      uint64_t v24 = swift_allocObject();
      *(void *)&long long v53 = v24;
      long long v25 = v50;
      *(_OWORD *)(v24 + 112) = v49;
      *(_OWORD *)(v24 + 128) = v25;
      *(_OWORD *)(v24 + 144) = v51;
      *(void *)(v24 + 160) = v52;
      long long v26 = v46;
      *(_OWORD *)(v24 + 48) = v45;
      *(_OWORD *)(v24 + 64) = v26;
      long long v27 = v48;
      *(_OWORD *)(v24 + 80) = v47;
      *(_OWORD *)(v24 + 96) = v27;
      long long v28 = v44;
      *(int8x16_t *)(v24 + 16) = v43;
      *(_OWORD *)(v24 + 32) = v28;
    }
    else
    {
      sub_1B5908FC0((uint64_t)&v43, &qword_1E9D63B40);
      long long v53 = 0u;
      long long v54 = 0u;
      unint64_t v55 = 0;
    }
    uint64_t v29 = v12;
    sub_1B59215A0((uint64_t)&v53, (uint64_t)v64);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65DD0);
    v43.i8[0] = 4;
    sub_1B59EC12C();
    sub_1B5A1C5B8();
    uint64_t v30 = v42;
    uint64_t v31 = v40;
    if (v42)
    {
      uint64_t v38 = v18;
      int64_t v32 = *(void *)(v42 + 16);
      if (v32)
      {
        uint64_t v41 = MEMORY[0x1E4FBC860];
        sub_1B59694AC(0, v32, 0);
        uint64_t v33 = v30 + 32;
        uint64_t v34 = v41;
        do
        {
          sub_1B59EC224(v33, (uint64_t)&v53);
          sub_1B590CA38((uint64_t)&v53, (uint64_t)&v43);
          sub_1B59EC280((uint64_t)&v53);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B59694AC(0, *(void *)(v34 + 16) + 1, 1);
            uint64_t v34 = v41;
          }
          unint64_t v36 = *(void *)(v34 + 16);
          unint64_t v35 = *(void *)(v34 + 24);
          if (v36 >= v35 >> 1)
          {
            sub_1B59694AC(v35 > 1, v36 + 1, 1);
            uint64_t v34 = v41;
          }
          *(void *)(v34 + 16) = v36 + 1;
          sub_1B5908BE8((long long *)v43.i8, v34 + 40 * v36 + 32);
          v33 += 40;
          --v32;
        }
        while (v32);
        uint64_t v29 = v12;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v34 = MEMORY[0x1E4FBC860];
      }
      uint64_t v31 = v40;
      uint64_t v18 = v38;
    }
    else
    {
      uint64_t v34 = 0;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v65);
    uint64_t v63 = v34;
    sub_1B591EAC0((uint64_t)v56, v29);
    __swift_destroy_boxed_opaque_existential_1(v18);
    return sub_1B59EC1F4((uint64_t)v56);
  }
}

uint64_t sub_1B59EBB08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63488);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1B59EA920((uint64_t)&v10 - v6);
  sub_1B5909890((uint64_t)v7, (uint64_t)v5, &qword_1E9D63488);
  sub_1B591E924();
  uint64_t v8 = sub_1B5A1BA88();
  uint64_t result = sub_1B5908FC0((uint64_t)v7, &qword_1E9D63488);
  *a1 = v8;
  return result;
}

uint64_t sub_1B59EBBF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59EB44C(a1, a2);
}

uint64_t sub_1B59EBC0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B59EBC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B59EBC54(a1, a2, a3, (void (*)(void))sub_1B59E03F0, (void (*)(void))sub_1B591E9E4);
}

uint64_t sub_1B59EBC54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B59EBCC4(uint64_t a1)
{
  unint64_t result = sub_1B59EBCEC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B59EBCEC()
{
  unint64_t result = qword_1E9D65D98;
  if (!qword_1E9D65D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65D98);
  }
  return result;
}

unint64_t sub_1B59EBD40(uint64_t a1)
{
  unint64_t result = sub_1B59EBD68();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B59EBD68()
{
  unint64_t result = qword_1E9D65DA0;
  if (!qword_1E9D65DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65DA0);
  }
  return result;
}

uint64_t sub_1B59EBDBC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B59EBE0C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B59EBE44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B59EB220(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1B59EBE4C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1B59EBE84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  *a1 = result;
  return result;
}

uint64_t sub_1B59EBEE0(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  if (sub_1B5A1A718())
  {
    a2(&v7);
    swift_retain_n();
    sub_1B5A1AE58();
    swift_release_n();
    swift_release();
  }
  else
  {
    a4(&v7);
    sub_1B5A1AE58();
  }
  return v7;
}

uint64_t sub_1B59EBFF4()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B59EC034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B59EBEE0(a1, *(void (**)(uint64_t *__return_ptr))(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t *__return_ptr))(v2 + 32));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1B59EC06C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B59EC0D8()
{
  unint64_t result = qword_1E9D65DC8;
  if (!qword_1E9D65DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65DC8);
  }
  return result;
}

unint64_t sub_1B59EC12C()
{
  unint64_t result = qword_1E9D65DD8;
  if (!qword_1E9D65DD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D65DD0);
    sub_1B59EC1A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65DD8);
  }
  return result;
}

unint64_t sub_1B59EC1A0()
{
  unint64_t result = qword_1E9D65DE0;
  if (!qword_1E9D65DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65DE0);
  }
  return result;
}

uint64_t sub_1B59EC1F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B59EC224(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B59EC280(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B59EC2D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

unint64_t sub_1B59EC34C()
{
  unint64_t result = qword_1E9D63468;
  if (!qword_1E9D63468)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63460);
    sub_1B59EC06C((unint64_t *)&qword_1E9D63470, &qword_1E9D63478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63468);
  }
  return result;
}

unint64_t sub_1B59EC3E0()
{
  unint64_t result = qword_1E9D65DF0;
  if (!qword_1E9D65DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65DF0);
  }
  return result;
}

uint64_t sub_1B59EC434(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 96);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 72);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 104);
  swift_bridgeObjectRelease();
  sub_1B5904B4C(v2, v3, v4, v8);
  sub_1B5904B4C(v5, v6, v7, v9);
  sub_1B5904B4C(v14, v13, v12, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SymbolView.SymbolViewCodingKeys()
{
  return &type metadata for SymbolView.SymbolViewCodingKeys;
}

unsigned char *_s6LiftUI10SymbolViewV20SymbolViewCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59EC5FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AsyncImageView.CodingKeys()
{
  return &type metadata for AsyncImageView.CodingKeys;
}

unint64_t sub_1B59EC640()
{
  unint64_t result = qword_1E9D65DF8;
  if (!qword_1E9D65DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65DF8);
  }
  return result;
}

unint64_t sub_1B59EC698()
{
  unint64_t result = qword_1E9D65E00;
  if (!qword_1E9D65E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E00);
  }
  return result;
}

unint64_t sub_1B59EC6F0()
{
  unint64_t result = qword_1E9D65E08;
  if (!qword_1E9D65E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E08);
  }
  return result;
}

unint64_t sub_1B59EC748()
{
  unint64_t result = qword_1E9D65E10;
  if (!qword_1E9D65E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E10);
  }
  return result;
}

unint64_t sub_1B59EC7A0()
{
  unint64_t result = qword_1E9D65E18;
  if (!qword_1E9D65E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E18);
  }
  return result;
}

unint64_t sub_1B59EC7F8()
{
  unint64_t result = qword_1E9D65E20;
  if (!qword_1E9D65E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E20);
  }
  return result;
}

uint64_t sub_1B59EC84C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B59EC894(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x636E657265666572;
  }
  else {
    uint64_t v3 = 0x65756C6176;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000065;
  }
  if (a2) {
    uint64_t v5 = 0x636E657265666572;
  }
  else {
    uint64_t v5 = 0x65756C6176;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000065;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EC938(char a1, char a2)
{
  unint64_t v3 = 0xE100000000000000;
  uint64_t v4 = 114;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 103;
      break;
    case 2:
      uint64_t v4 = 98;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v4 = 0x7974696361706FLL;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE100000000000000;
  uint64_t v6 = 114;
  switch(a2)
  {
    case 1:
      if (v4 == 103) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v6 = 98;
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0xE700000000000000;
      if (v4 == 0x7974696361706FLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B5A1C678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B59ECA74(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7974696361706FLL;
  }
  else {
    uint64_t v3 = 0x6574696877;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7974696361706FLL;
  }
  else {
    uint64_t v5 = 0x6574696877;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59ECB14(char a1, char a2)
{
  if (qword_1B5A2E4E0[a1] == qword_1B5A2E4E0[a2] && qword_1B5A2E4F8[a1] == qword_1B5A2E4F8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ECBA0(char a1, char a2)
{
  if (qword_1B5A2E550[a1] == qword_1B5A2E550[a2] && qword_1B5A2E580[a1] == qword_1B5A2E580[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ECC2C(char a1, char a2)
{
  if (qword_1B5A2E4B0[a1] == qword_1B5A2E4B0[a2] && qword_1B5A2E4C8[a1] == qword_1B5A2E4C8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ECCB4(char a1, char a2)
{
  if (qword_1B5A2E470[a1] == qword_1B5A2E470[a2] && qword_1B5A2E490[a1] == qword_1B5A2E490[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ECD3C(char a1, char a2)
{
  if (*(void *)&aConditiothen_0[8 * a1] == *(void *)&aConditiothen_0[8 * a2]
    && *(void *)&aN_0[8 * a1] == *(void *)&aN_0[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ECDC4(char a1, char a2)
{
  if (*(void *)&aHorizontvertic_0[8 * a1] == *(void *)&aHorizontvertic_0[8 * a2]
    && *(void *)&aAl_0[8 * a1] == *(void *)&aAl_0[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ECE4C(char a1, char a2)
{
  if (qword_1B5A2E3D0[a1] == qword_1B5A2E3D0[a2] && qword_1B5A2E3F0[a1] == qword_1B5A2E3F0[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ECED4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000016;
    }
    else {
      unint64_t v3 = 0x74616E6974736564;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x80000001B5A32830;
    }
    else {
      unint64_t v4 = 0xEB000000006E6F69;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000016;
      }
      else {
        unint64_t v6 = 0x74616E6974736564;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x80000001B5A32830;
      }
      else {
        unint64_t v7 = 0xEB000000006E6F69;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xEB00000000646574;
    unint64_t v3 = 0x6E65736572507369;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xEB00000000646574;
  if (v3 != 0x6E65736572507369)
  {
LABEL_21:
    char v8 = sub_1B5A1C678();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B59ED000(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x65746F6F466E6970;
  }
  else {
    uint64_t v2 = 0x65646165486E6970;
  }
  if (a2) {
    uint64_t v3 = 0x65746F6F466E6970;
  }
  else {
    uint64_t v3 = 0x65646165486E6970;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B59ED08C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x694B6E6F69746361;
  }
  else {
    uint64_t v3 = 0x6E6F69746361;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xEA0000000000646ELL;
  }
  if (a2) {
    uint64_t v5 = 0x694B6E6F69746361;
  }
  else {
    uint64_t v5 = 0x6E6F69746361;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000646ELL;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59ED130(char a1, char a2)
{
  if (*(void *)&aTitle_6[8 * a1] == *(void *)&aTitle_6[8 * a2] && qword_1B5A2E3A8[a1] == qword_1B5A2E3A8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ED1B8(char a1, char a2)
{
  if (*(void *)&aLeading_7[8 * a1] == *(void *)&aLeading_7[8 * a2]
    && *(void *)&aTrailing_7[8 * a1 + 8] == *(void *)&aTrailing_7[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ED240(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x737569646172;
  }
  else {
    uint64_t v3 = 0x6570616873;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x737569646172;
  }
  else {
    uint64_t v5 = 0x6570616873;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59ED2DC(char a1, char a2)
{
  if (*(void *)&aGradientcenter_1[8 * a1] == *(void *)&aGradientcenter_1[8 * a2]
    && *(void *)&aStartangendang_0[8 * a1 + 16] == *(void *)&aStartangendang_0[8 * a2 + 16])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ED364(char a1, char a2)
{
  if (*(void *)&aGradientcenter_2[8 * a1] == *(void *)&aGradientcenter_2[8 * a2]
    && *(void *)&aStartradendrad_0[8 * a1 + 16] == *(void *)&aStartradendrad_0[8 * a2 + 16])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ED3EC(char a1, char a2)
{
  if (*(void *)&aGradientstartp_0[8 * a1] == *(void *)&aGradientstartp_0[8 * a2]
    && *(void *)&aGradientstartp_0[8 * a1 + 24] == *(void *)&aGradientstartp_0[8 * a2 + 24])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ED474(char a1, char a2)
{
  if (qword_1B5A2E260[a1] == qword_1B5A2E260[a2] && qword_1B5A2E278[a1] == qword_1B5A2E278[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ED4FC(char a1, char a2)
{
  if (qword_1B5A2E210[a1] == qword_1B5A2E210[a2] && qword_1B5A2E238[a1] == qword_1B5A2E238[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ED584(char a1, char a2)
{
  if (*(void *)&aPrimary_1[8 * a1] == *(void *)&aPrimary_1[8 * a2]
    && *(void *)&aSecondartertia[8 * a1 + 16] == *(void *)&aSecondartertia[8 * a2 + 16])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ED60C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7465736E49706163;
  }
  else {
    uint64_t v3 = 0x676E697A69736572;
  }
  if (v2) {
    unint64_t v4 = 0xEC00000065646F4DLL;
  }
  else {
    unint64_t v4 = 0xE900000000000073;
  }
  if (a2) {
    uint64_t v5 = 0x7465736E49706163;
  }
  else {
    uint64_t v5 = 0x676E697A69736572;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000073;
  }
  else {
    unint64_t v6 = 0xEC00000065646F4DLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59ED6BC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E6F697461636F6CLL;
  }
  else {
    uint64_t v3 = 0x726F6C6F63;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6E6F697461636F6CLL;
  }
  else {
    uint64_t v5 = 0x726F6C6F63;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59ED75C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 103;
    }
    else {
      uint64_t v3 = 0x6F69736E656D6964;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE100000000000000;
    }
    else {
      unint64_t v4 = 0xED000079654B736ELL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 103;
      }
      else {
        uint64_t v6 = 0x6F69736E656D6964;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE100000000000000;
      }
      else {
        unint64_t v7 = 0xED000079654B736ELL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v3 = 0x56657475706D6F63;
    unint64_t v4 = 0xEC00000065756C61;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xEC00000065756C61;
  if (v3 != 0x56657475706D6F63)
  {
LABEL_21:
    char v8 = sub_1B5A1C678();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B59ED888(char a1, char a2)
{
  if (*(void *)&aRadius_4[8 * a1] == *(void *)&aRadius_4[8 * a2]
    && *(void *)&aLinewidt[8 * a1 + 8] == *(void *)&aLinewidt[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59ED910(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000001B5A327F0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x656C7573706163;
      break;
    case 2:
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x656C63726963;
      break;
    case 4:
      unint64_t v3 = 0xEC00000072656472;
      unint64_t v5 = 0x6F426E6F74747562;
      break;
    default:
      unint64_t v3 = 0xE900000000000063;
      unint64_t v5 = 0x6974616D6F747561;
      break;
  }
  unint64_t v6 = 0x80000001B5A327F0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x656C7573706163) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      goto LABEL_12;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v2 = 0x656C63726963;
LABEL_12:
      if (v5 == v2) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xEC00000072656472;
      if (v5 != 0x6F426E6F74747562) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
      unint64_t v6 = 0xE900000000000063;
      if (v5 != 0x6974616D6F747561) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B5A1C678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B59EDAE4(char a1, char a2)
{
  if (qword_1B5A2E180[a1] == qword_1B5A2E180[a2] && qword_1B5A2E198[a1] == qword_1B5A2E198[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EDB6C(char a1, char a2)
{
  if (qword_1B5A2E140[a1] == qword_1B5A2E140[a2] && qword_1B5A2E160[a1] == qword_1B5A2E160[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EDBF4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x61696C6169746E61;
  }
  else {
    uint64_t v3 = 0x737569646172;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000646573;
  }
  if (a2) {
    uint64_t v5 = 0x61696C6169746E61;
  }
  else {
    uint64_t v5 = 0x737569646172;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000646573;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EDC9C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 121;
    }
    else {
      uint64_t v3 = 1701667182;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE100000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 121;
      }
      else {
        uint64_t v6 = 1701667182;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE100000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE100000000000000;
    uint64_t v3 = 120;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE100000000000000;
  if (v3 != 120)
  {
LABEL_21:
    char v8 = sub_1B5A1C678();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B59EDD78(char a1, char a2)
{
  if (qword_1B5A2E100[a1] == qword_1B5A2E100[a2] && qword_1B5A2E120[a1] == qword_1B5A2E120[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EDE00(char a1, char a2)
{
  if (*(void *)&aReferencsubref_0[8 * a1] == *(void *)&aReferencsubref_0[8 * a2]
    && *(void *)&aReferencsubref_0[8 * a1 + 24] == *(void *)&aReferencsubref_0[8 * a2 + 24])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EDE88(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7377656976;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7377656976;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EDF1C(char a1, char a2)
{
  if (*(void *)&aEqualto_1[8 * a1] == *(void *)&aEqualto_1[8 * a2]
    && *(void *)&aNotequalgreate[8 * a1 + 24] == *(void *)&aNotequalgreate[8 * a2 + 24])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EDFA4(char a1, char a2)
{
  if (*(void *)&aWidth_5[8 * a1] == *(void *)&aWidth_5[8 * a2]
    && *(void *)&aContentm_0[8 * a1 + 8] == *(void *)&aContentm_0[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE02C(char a1, char a2)
{
  if (qword_1B5A2E050[a1] == qword_1B5A2E050[a2] && qword_1B5A2E070[a1] == qword_1B5A2E070[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE0B4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x73726F6C6F63;
  }
  else {
    uint64_t v3 = 0x73706F7473;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x73726F6C6F63;
  }
  else {
    uint64_t v5 = 0x73706F7473;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EE150(char a1, char a2)
{
  if (qword_1B5A2E020[a1] == qword_1B5A2E020[a2] && qword_1B5A2E038[a1] == qword_1B5A2E038[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE1D8(char a1, char a2)
{
  if (*(void *)&aAutomatibutton_0[8 * a1] == *(void *)&aAutomatibutton_0[8 * a2]
    && *(void *)&aC_2[8 * a1] == *(void *)&aC_2[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE260(char a1, char a2)
{
  if (*(void *)&aSize_4[8 * a1] == *(void *)&aSize_4[8 * a2] && qword_1B5A2DFD8[a1] == qword_1B5A2DFD8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE2E8(char a1, char a2)
{
  if (qword_1B5A2DF80[a1] == qword_1B5A2DF80[a2] && qword_1B5A2DFA0[a1] == qword_1B5A2DFA0[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE370(char a1, char a2)
{
  if (qword_1B5A2DF50[a1] == qword_1B5A2DF50[a2] && qword_1B5A2DF68[a1] == qword_1B5A2DF68[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE3F8(char a1, char a2)
{
  if (qword_1B5A2DED0[a1] == qword_1B5A2DED0[a2] && qword_1B5A2DF10[a1] == qword_1B5A2DF10[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE480(char a1, char a2)
{
  if (qword_1B5A2DE50[a1] == qword_1B5A2DE50[a2] && qword_1B5A2DE90[a1] == qword_1B5A2DE90[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE508(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C61636974726576;
  }
  else {
    uint64_t v3 = 0x746E6F7A69726F68;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000006C61;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6C61636974726576;
  }
  else {
    uint64_t v5 = 0x746E6F7A69726F68;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000006C61;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EE5B0(char a1, char a2)
{
  if (*(void *)&aMini_2[8 * a1] == *(void *)&aMini_2[8 * a2] && qword_1B5A2DE30[a1] == qword_1B5A2DE30[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE638(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 7629158;
  }
  else {
    uint64_t v3 = 1819044198;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE300000000000000;
  }
  if (a2) {
    uint64_t v5 = 7629158;
  }
  else {
    uint64_t v5 = 1819044198;
  }
  if (a2) {
    unint64_t v6 = 0xE300000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EE6CC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x68637465727473;
  }
  else {
    uint64_t v3 = 1701603700;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x68637465727473;
  }
  else {
    uint64_t v5 = 1701603700;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EE768(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7465537865646E69;
  }
  else {
    uint64_t v3 = 0x736E6F69746361;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xEB0000000079654BLL;
  }
  if (a2) {
    uint64_t v5 = 0x7465537865646E69;
  }
  else {
    uint64_t v5 = 0x736E6F69746361;
  }
  if (a2) {
    unint64_t v6 = 0xEB0000000079654BLL;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EE814(char a1, char a2)
{
  if (*(void *)&aActions_9[8 * a1] == *(void *)&aActions_9[8 * a2]
    && *(void *)&aOldvaluenewval_0[8 * a1 + 16] == *(void *)&aOldvaluenewval_0[8 * a2 + 16])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EE89C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x616E6F6974636964;
  }
  else {
    uint64_t v3 = 7955819;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000007972;
  }
  if (a2) {
    uint64_t v5 = 0x616E6F6974636964;
  }
  else {
    uint64_t v5 = 7955819;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000007972;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EE93C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E656D6563616C70;
  }
  else {
    uint64_t v3 = 0x746E65746E6F63;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000074;
  }
  if (a2) {
    uint64_t v5 = 0x6E656D6563616C70;
  }
  else {
    uint64_t v5 = 0x746E65746E6F63;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000074;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EE9E4(char a1, char a2)
{
  if (qword_1B5A2DD90[a1] == qword_1B5A2DD90[a2] && qword_1B5A2DDA8[a1] == qword_1B5A2DDA8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EEA6C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6874676E656CLL;
  }
  else {
    uint64_t v3 = 0x7365676465;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6874676E656CLL;
  }
  else {
    uint64_t v5 = 0x7365676465;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EEB08(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6F697469646E6F63;
  }
  else {
    uint64_t v3 = 0x726F74617265706FLL;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE90000000000006ELL;
  }
  if (a2) {
    uint64_t v5 = 0x6F697469646E6F63;
  }
  else {
    uint64_t v5 = 0x726F74617265706FLL;
  }
  if (a2) {
    unint64_t v6 = 0xE90000000000006ELL;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EEBB0(char a1, char a2)
{
  if (*(void *)&aAutomaticolumn[8 * a1] == *(void *)&aAutomaticolumn[8 * a2]
    && *(void *)&aC_1[8 * a1] == *(void *)&aC_1[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EEC38(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x726F6C6F63;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x726F6C6F63;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EECCC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000001B5A32330;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6E69616C70;
      break;
    case 3:
      unint64_t v3 = 0xEA00000000007373;
      unint64_t v5 = 0x656C726564726F62;
      break;
    case 4:
      unint64_t v3 = 0xE900000000000063;
      unint64_t v5 = 0x6974616D6F747561;
      break;
    default:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6465726564726F62;
      break;
  }
  unint64_t v6 = 0x80000001B5A32330;
  switch(a2)
  {
    case 1:
      goto LABEL_12;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6E69616C70) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xEA00000000007373;
      unint64_t v2 = 0x656C726564726F62;
LABEL_12:
      if (v5 == v2) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE900000000000063;
      if (v5 != 0x6974616D6F747561) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6465726564726F62) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B5A1C678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B59EEE98(char a1, char a2)
{
  if (*(void *)&aBody_4[8 * a1] == *(void *)&aBody_4[8 * a2] && qword_1B5A2DD48[a1] == qword_1B5A2DD48[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EEF20(char a1, char a2)
{
  unint64_t v3 = 0xE100000000000000;
  uint64_t v4 = 120;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v4 = 0x737569646172;
      break;
    case 2:
      break;
    case 3:
      uint64_t v4 = 121;
      break;
    default:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x726F6C6F63;
      break;
  }
  unint64_t v5 = 0xE100000000000000;
  uint64_t v6 = 120;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE600000000000000;
      uint64_t v6 = 0x737569646172;
      goto LABEL_9;
    case 2:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
      goto LABEL_12;
    case 3:
      if (v4 == 121) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
      unint64_t v5 = 0xE500000000000000;
      if (v4 != 0x726F6C6F63) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B5A1C678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B59EF06C(char a1, char a2)
{
  if (*(void *)&aActions_10[8 * a1] == *(void *)&aActions_10[8 * a2]
    && *(void *)&aIndexsetoffset_2[8 * a1 + 16] == *(void *)&aIndexsetoffset_2[8 * a2 + 16])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EF0F4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 2003134838;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 2003134838;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EF184(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 29295;
  }
  else {
    uint64_t v3 = 6581857;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE200000000000000;
  }
  if (a2) {
    uint64_t v5 = 29295;
  }
  else {
    uint64_t v5 = 6581857;
  }
  if (a2) {
    unint64_t v6 = 0xE200000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EF214(char a1, char a2)
{
  if (qword_1B5A2E140[a1] == qword_1B5A2E140[a2] && qword_1B5A2E160[a1] == qword_1B5A2E160[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EF29C(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x6874646977;
  }
  else {
    uint64_t v2 = 0x726F6C6F63;
  }
  if (a2) {
    uint64_t v3 = 0x6874646977;
  }
  else {
    uint64_t v3 = 0x726F6C6F63;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B59EF314(char a1, char a2)
{
  if (qword_1B5A2DCB0[a1] == qword_1B5A2DCB0[a2] && qword_1B5A2DCD8[a1] == qword_1B5A2DCD8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EF39C(char a1, char a2)
{
  if (*(void *)&aIspresenconten_0[8 * a1] == *(void *)&aIspresenconten_0[8 * a2]
    && *(void *)&aOndismisted_0[8 * a1 + 8] == *(void *)&aOndismisted_0[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EF424(char a1, char a2)
{
  if (qword_1B5A2DC40[a1] == qword_1B5A2DC40[a2] && qword_1B5A2DC60[a1] == qword_1B5A2DC60[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EF4AC(char a1, char a2)
{
  if (qword_1B5A2DC18[a1] == qword_1B5A2DC18[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1B59EF514(char a1, char a2)
{
  if (*(void *)&aWidth_6[8 * a1] == *(void *)&aWidth_6[8 * a2]
    && *(void *)&aAlignmenminwid[8 * a1 + 56] == *(void *)&aAlignmenminwid[8 * a2 + 56])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EF59C(char a1, char a2)
{
  if (qword_1B5A2DBA8[a1] == qword_1B5A2DBA8[a2] && qword_1B5A2DBE0[a1] == qword_1B5A2DBE0[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EF624(char a1, char a2)
{
  if (*(void *)&aCenter_4[8 * a1] == *(void *)&aCenter_4[8 * a2]
    && *(void *)&aTopleaditoptra_0[8 * a1 + 32] == *(void *)&aTopleaditoptra_0[8 * a2 + 32])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EF6AC(char a1, char a2)
{
  if (*(void *)&aTitle_7[8 * a1] == *(void *)&aTitle_7[8 * a2] && qword_1B5A2DB88[a1] == qword_1B5A2DB88[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EF734(char a1, char a2)
{
  if (qword_1B5A2DB38[a1] == qword_1B5A2DB38[a2] && qword_1B5A2DB50[a1] == qword_1B5A2DB50[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EF7BC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6D6574737973;
  }
  else {
    uint64_t v3 = 0x656C797473;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6D6574737973;
  }
  else {
    uint64_t v5 = 0x656C797473;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EF858(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7961727261;
  }
  else {
    uint64_t v3 = 0x7465537865646E69;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7961727261;
  }
  else {
    uint64_t v5 = 0x7465537865646E69;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EF8F8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656D656C4577656ELL;
  }
  else {
    uint64_t v3 = 0x7961727261;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xEA0000000000746ELL;
  }
  if (a2) {
    uint64_t v5 = 0x656D656C4577656ELL;
  }
  else {
    uint64_t v5 = 0x7961727261;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000746ELL;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EF99C(char a1, char a2)
{
  if (qword_1B5A2DD90[a1] == qword_1B5A2DD90[a2] && qword_1B5A2DDA8[a1] == qword_1B5A2DDA8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EFA24(char a1, char a2)
{
  if (qword_1B5A2DAF8[a1] == qword_1B5A2DAF8[a2] && qword_1B5A2DB18[a1] == qword_1B5A2DB18[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EFAAC(char a1, char a2)
{
  if (qword_1B5A2DAB8[a1] == qword_1B5A2DAB8[a2] && qword_1B5A2DAD8[a1] == qword_1B5A2DAD8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EFB34(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656C797473;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656C797473;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EFBC8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656C646E7562;
  }
  else {
    uint64_t v3 = 1701667182;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656C646E7562;
  }
  else {
    uint64_t v5 = 1701667182;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EFC60(char a1, char a2)
{
  if (qword_1B5A2DAA0[a1] == qword_1B5A2DAA0[a2] && qword_1B5A2E4F8[a1] == qword_1B5A2E4F8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EFCE8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000001B5A32920;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x614E6D6574737973;
      unint64_t v3 = 0xEA0000000000656DLL;
      break;
    case 2:
      unint64_t v5 = 0x646F4D6567616D69;
      unint64_t v3 = 0xEE00737265696669;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1701667182;
      break;
    case 4:
      break;
    default:
      unint64_t v3 = 0xE200000000000000;
      unint64_t v5 = 25705;
      break;
  }
  unint64_t v6 = 0x80000001B5A32920;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA0000000000656DLL;
      if (v5 == 0x614E6D6574737973) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0x646F4D6567616D69;
      unint64_t v6 = 0xEE00737265696669;
      goto LABEL_12;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1701667182) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 4:
LABEL_12:
      if (v5 == v2) {
        goto LABEL_13;
      }
      goto LABEL_16;
    default:
      unint64_t v6 = 0xE200000000000000;
      if (v5 != 25705) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B5A1C678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B59EFEA8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x74676E654C6E696DLL;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000068;
  }
  if (a2) {
    uint64_t v5 = 0x74676E654C6E696DLL;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000068;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B59EFF44(char a1, char a2)
{
  if (*(void *)&aData_5[8 * a1] == *(void *)&aData_5[8 * a2]
    && *(void *)&aViewandd_1[8 * a1 + 8] == *(void *)&aViewandd_1[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59EFFCC(char a1, char a2)
{
  if (qword_1B5A2DA20[a1] == qword_1B5A2DA20[a2] && qword_1B5A2DA48[a1] == qword_1B5A2DA48[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59F0054(char a1, char a2)
{
  if (*(void *)&aIndexsetoffset[8 * a1] == *(void *)&aIndexsetoffset[8 * a2]
    && qword_1B5A2DA08[a1] == qword_1B5A2DA08[a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59F00DC(char a1, char a2)
{
  if (*(void *)&aConditiothen_0[8 * a1] == *(void *)&aConditiothen_0[8 * a2]
    && *(void *)&aN_0[8 * a1] == *(void *)&aN_0[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59F0164(char a1, char a2)
{
  if (qword_1B5A2D9B0[a1] == qword_1B5A2D9B0[a2] && qword_1B5A2D9D0[a1] == qword_1B5A2D9D0[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59F01EC(char a1, char a2)
{
  if (qword_1B5A2D980[a1] == qword_1B5A2D980[a2] && qword_1B5A2D998[a1] == qword_1B5A2D998[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B59F0274()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F02E0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F034C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F03C0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F042C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F052C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F05B4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F063C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F06A8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0730()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F079C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0820()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F08A0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F091C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0988()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F09F4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0A60()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0ACC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0B48()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0BB8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0C24()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0C90()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0CFC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0D68()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0DD4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0E40()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0EC0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0F2C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F0FA8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1008()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1074()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1120()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1194()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1200()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F126C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F12D8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F134C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F13BC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1428()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F149C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1518()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1584()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1614()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1680()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F16EC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1758()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F17C4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F18C8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1944()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F19FC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1AB4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1B20()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1B8C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1BF8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1C64()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1CF0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1D5C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1DD8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1E5C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1EC8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1F34()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F1FA0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F200C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2078()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2170()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F21DC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2248()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F22B8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2340()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F23AC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2434()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F24A0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2520()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F25D0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2648()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F26B8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2724()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2790()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2810()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F287C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F28E8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2968()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F29EC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2A58()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2AC4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F2B30()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2B9C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2C38()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2CA0()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2CF8()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2D50()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2DA4()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2DF8()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2E4C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2EA0()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2EF4()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2F94()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F2FF4()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3060()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F30B4()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3108()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F316C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F31C0()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3214()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3268()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F32BC()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3310()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3364()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F33DC()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3444()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F34D8()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F352C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F361C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3670()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F36C4()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3734()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F37A0()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F37F4()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3848()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F38A4()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F38F8()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F394C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F39A0()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3A04()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3A58()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3AAC()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3B00()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3B54()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3BA8()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3BFC()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3C50()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3CC0()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3D14()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3D70()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3DD4()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3E48()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3E9C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3F04()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3F74()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F3FC8()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F402C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F409C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F40F0()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F414C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4238()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F428C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4330()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4384()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F43DC()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4434()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4488()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F44D8()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F452C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4580()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F45D4()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4614()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4668()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F46BC()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4710()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4764()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F47B8()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F481C()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4884()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F48F0()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4944()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4998()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F49EC()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4A48()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4AA8()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4AFC()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4BE0()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4C44()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4C98()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4CEC()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4D40()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4D94()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4DE8()
{
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B59F4E3C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F4EA4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F4F0C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F4F74()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F4FDC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5044()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F50AC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5124()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5218()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5280()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F52F4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5364()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F53CC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5434()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F549C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F551C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5598()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5610()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5678()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F56E0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5748()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F57B0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F580C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5874()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F58DC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5944()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F59B0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5A18()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5A84()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5AF0()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5B58()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5C0C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5C74()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5D74()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5DDC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5E60()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5ED8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5F5C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F5FD8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6040()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F60C8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6140()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F61A8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6218()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6280()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6304()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F636C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F63D4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F643C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F64A4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F650C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6574()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F65EC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6654()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F66BC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6728()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6790()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F67F8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6878()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F68FC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6964()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F69CC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6ACC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6B34()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6BDC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6C58()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6CE4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6D4C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6DB4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6E1C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6E84()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6EEC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6F54()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F6FCC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F7034()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F709C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F711C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F7198()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F724C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F72B4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F731C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F7384()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F73EC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F7454()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F74C4()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F752C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F759C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F7604()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F7680()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F772C()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F77AC(unint64_t *a1, unint64_t *a2, char a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  switch(a3)
  {
    case 1:
      if ((~v3 & 0xF000000000000007) == 0)
      {
        if ((~v4 & 0xF000000000000007) == 0) {
          goto LABEL_44;
        }
        goto LABEL_21;
      }
      unint64_t v19 = *a1;
      if ((~v4 & 0xF000000000000007) == 0)
      {
        swift_retain();
LABEL_21:
        sub_1B59A0838(v4);
        sub_1B599FF94(v3);
        sub_1B599FF94(v4);
        char v5 = 1;
        return v5 & 1;
      }
      unint64_t v18 = v4;
      sub_1B59A0838(v3);
      sub_1B59A0838(v3);
      char v8 = _s6LiftUI14DecodableStateO2eeoiySbAC_ACtFZ_0((uint64_t *)&v19, &v18);
      swift_release();
      sub_1B599FF94(v3);
      char v5 = v8 ^ 1;
      return v5 & 1;
    case 2:
      if ((~v3 & 0xF000000000000007) == 0) {
        goto LABEL_29;
      }
      if (v3 >> 61 == 1)
      {
        double v6 = (double)*(uint64_t *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      }
      else
      {
        if (v3 >> 61 != 2)
        {
LABEL_29:
          if (qword_1E9D62B20 != -1) {
            swift_once();
          }
          uint64_t v10 = sub_1B5A1A328();
          __swift_project_value_buffer(v10, (uint64_t)qword_1E9D910D0);
          uint64_t v11 = sub_1B5A1A308();
          os_log_type_t v12 = sub_1B5A1C258();
          if (os_log_type_enabled(v11, v12))
          {
            uint64_t v13 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v13 = 0;
            uint64_t v14 = "LogicOperation >, unable to determine rhs or lhs value";
            goto LABEL_42;
          }
          goto LABEL_43;
        }
        double v6 = *(double *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      }
      if ((~v4 & 0xF000000000000007) != 0)
      {
        if (v4 >> 61 == 1)
        {
          BOOL v9 = (double)*(uint64_t *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) < v6;
          goto LABEL_49;
        }
        if (v4 >> 61 == 2)
        {
          BOOL v9 = *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) < v6;
          goto LABEL_49;
        }
      }
      goto LABEL_29;
    case 3:
      if ((~v3 & 0xF000000000000007) == 0) {
        goto LABEL_38;
      }
      if (v3 >> 61 == 1)
      {
        double v7 = (double)*(uint64_t *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      }
      else
      {
        if (v3 >> 61 != 2) {
          goto LABEL_38;
        }
        double v7 = *(double *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      }
      if ((~v4 & 0xF000000000000007) != 0)
      {
        if (v4 >> 61 == 1)
        {
          double v15 = (double)*(uint64_t *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_48:
          BOOL v9 = v7 < v15;
LABEL_49:
          char v5 = v9;
          return v5 & 1;
        }
        if (v4 >> 61 == 2)
        {
          double v15 = *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          goto LABEL_48;
        }
      }
LABEL_38:
      if (qword_1E9D62B20 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1B5A1A328();
      __swift_project_value_buffer(v16, (uint64_t)qword_1E9D910D0);
      uint64_t v11 = sub_1B5A1A308();
      os_log_type_t v12 = sub_1B5A1C258();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        uint64_t v14 = "LogicOperation <, unable to determine rhs or lhs value";
LABEL_42:
        _os_log_impl(&dword_1B58FD000, v11, v12, v14, v13, 2u);
        MEMORY[0x1BA9A4780](v13, -1, -1);
      }
LABEL_43:

LABEL_44:
      char v5 = 0;
      return v5 & 1;
    default:
      if ((~v3 & 0xF000000000000007) == 0)
      {
        if ((~v4 & 0xF000000000000007) == 0)
        {
          char v5 = 1;
          return v5 & 1;
        }
        goto LABEL_18;
      }
      unint64_t v19 = *a1;
      if ((~v4 & 0xF000000000000007) == 0)
      {
        swift_retain();
LABEL_18:
        sub_1B59A0838(v4);
        sub_1B599FF94(v3);
        sub_1B599FF94(v4);
        goto LABEL_44;
      }
      unint64_t v18 = v4;
      sub_1B59A0838(v3);
      sub_1B59A0838(v3);
      char v5 = _s6LiftUI14DecodableStateO2eeoiySbAC_ACtFZ_0((uint64_t *)&v19, &v18);
      swift_release();
      sub_1B599FF94(v3);
      return v5 & 1;
  }
}

uint64_t sub_1B59F7B6C(char a1)
{
  return *(void *)&aEqualto_1[8 * a1];
}

uint64_t sub_1B59F7B8C(char a1)
{
  if (a1) {
    return 29295;
  }
  else {
    return 6581857;
  }
}

uint64_t sub_1B59F7BB0(char *a1, char *a2)
{
  return sub_1B59EDF1C(*a1, *a2);
}

uint64_t sub_1B59F7BBC()
{
  return sub_1B59F21DC();
}

uint64_t sub_1B59F7BC4()
{
  return sub_1B59F38A4();
}

uint64_t sub_1B59F7BCC()
{
  return sub_1B59F66BC();
}

uint64_t sub_1B59F7BD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59F939C();
  *a1 = result;
  return result;
}

uint64_t sub_1B59F7C04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59F7B6C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59F7C30(char *a1, char *a2)
{
  return sub_1B59EF184(*a1, *a2);
}

uint64_t sub_1B59F7C3C()
{
  return sub_1B59F2248();
}

uint64_t sub_1B59F7C44()
{
  return sub_1B59F43DC();
}

uint64_t sub_1B59F7C4C()
{
  return sub_1B59F5A18();
}

uint64_t sub_1B59F7C54@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B59F7C60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59F7B8C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59F7C8C()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B59F7CEC(char a1)
{
  if (a1) {
    return 0x6F697469646E6F63;
  }
  else {
    return 0x726F74617265706FLL;
  }
}

uint64_t sub_1B59F7D28(char *a1, char *a2)
{
  return sub_1B59EEB08(*a1, *a2);
}

uint64_t sub_1B59F7D34()
{
  return sub_1B59F22B8();
}

uint64_t sub_1B59F7D3C()
{
  return sub_1B59F402C();
}

uint64_t sub_1B59F7D44()
{
  return sub_1B59F5DDC();
}

uint64_t sub_1B59F7D4C@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B59F7D58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59F7CEC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59F7D84()
{
  return sub_1B59F7CEC(*v0);
}

uint64_t sub_1B59F7D8C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59F7DF0(uint64_t a1)
{
  unint64_t v2 = sub_1B59F92F4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59F7E2C(uint64_t a1)
{
  unint64_t v2 = sub_1B59F92F4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59F7E68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B59F911C(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result & 1;
    *(void *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1B59F7E9C(char a1)
{
  return qword_1B5A2E550[a1];
}

uint64_t sub_1B59F7EBC(char *a1, char *a2)
{
  return sub_1B59ECBA0(*a1, *a2);
}

uint64_t sub_1B59F7EC8()
{
  return sub_1B59F2340();
}

uint64_t sub_1B59F7ED0()
{
  return sub_1B59F2CF8();
}

uint64_t sub_1B59F7ED8()
{
  return sub_1B59F74C4();
}

uint64_t sub_1B59F7EE0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59F986C();
  *a1 = result;
  return result;
}

uint64_t sub_1B59F7F10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59F7E9C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59F7F3C()
{
  return sub_1B59F7E9C(*v0);
}

uint64_t sub_1B59F7F44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59F986C();
  *a1 = result;
  return result;
}

uint64_t sub_1B59F7F6C(uint64_t a1)
{
  unint64_t v2 = sub_1B59F8A00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59F7FA8(uint64_t a1)
{
  unint64_t v2 = sub_1B59F8A00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59F7FE4(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65E30);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 80) = 0;
  *(void *)(v1 + 88) = 0;
  uint64_t v24 = v1;
  long long v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v8 = sub_1B59F8A00();
  sub_1B5A1C838();
  if (v2)
  {
    uint64_t v9 = v24;
LABEL_4:
    swift_release();
    type metadata accessor for Condition();
    swift_deallocPartialClassInstance();
    goto LABEL_5;
  }
  uint64_t v10 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
  char v29 = 0;
  sub_1B59F8A54();
  uint64_t v11 = v7;
  sub_1B5A1C5D8();
  uint64_t v12 = v27;
  unsigned __int8 v13 = v28;
  uint64_t v9 = v24;
  *(_OWORD *)(v24 + 16) = v26;
  *(void *)(v9 + 32) = v12;
  *(unsigned char *)(v9 + 40) = v13;
  char v29 = 1;
  sub_1B5A1C5B8();
  unsigned __int8 v15 = v28;
  if (v28 == 255)
  {
    char v29 = 2;
    sub_1B5A1C5B8();
    unsigned __int8 v15 = v28;
    if (v28 == 255)
    {
      char v29 = 3;
      sub_1B5A1C5B8();
      unsigned __int8 v15 = v28;
      if (v28 == 255)
      {
        char v29 = 4;
        sub_1B5A1C5B8();
        unsigned __int8 v15 = v28;
        if (v28 == 255)
        {
          uint64_t v16 = sub_1B5A1C408();
          swift_allocError();
          uint64_t v18 = v17;
          v23[1] = v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D646B0) + 48);
          *(void *)(v18 + 24) = &type metadata for Condition.CodingKeys;
          *(void *)(v18 + 32) = v8;
          *(unsigned char *)uint64_t v18 = 1;
          __swift_project_boxed_opaque_existential_1(v25, v25[3]);
          sub_1B5A1C7F8();
          sub_1B5A1C3C8();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x1E4FBBA68], v16);
          swift_willThrow();
          uint64_t v9 = v24;
          (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v4);
          sub_1B591F344(*(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(unsigned char *)(v9 + 40));
          goto LABEL_4;
        }
        uint64_t v20 = v27;
        long long v21 = v26;
        char v19 = 3;
      }
      else
      {
        uint64_t v20 = v27;
        long long v21 = v26;
        char v19 = 2;
      }
    }
    else
    {
      uint64_t v20 = v27;
      long long v21 = v26;
      char v19 = 1;
    }
  }
  else
  {
    char v19 = 0;
    uint64_t v20 = v27;
    long long v21 = v26;
  }
  *(unsigned char *)(v9 + 41) = v19;
  *(_OWORD *)(v9 + 48) = v21;
  *(void *)(v9 + 64) = v20;
  *(unsigned char *)(v9 + 72) = v15 & 1;
  LOBYTE(v26) = 5;
  if (sub_1B5A1C5F8())
  {
    char v29 = 5;
    sub_1B59F8AB0();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    uint64_t v22 = *((void *)&v26 + 1);
    *(void *)(v9 + 80) = v26;
    *(void *)(v9 + 88) = v22;
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  }
LABEL_5:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v9;
}

uint64_t sub_1B59F84BC(uint64_t a1)
{
  char v3 = *(unsigned char *)(v1 + 41);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  sub_1B5909638(v4, v5, v6, v7);
  sub_1B59B3D0C(a1, v4, v5, v6, v7, &v18);
  sub_1B591F344(v4, v5, v6, v7);
  uint64_t v8 = v18;
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v11 = *(void *)(v1 + 64);
  char v12 = *(unsigned char *)(v1 + 72);
  sub_1B5909638(v9, v10, v11, v12);
  sub_1B59B3D0C(a1, v9, v10, v11, v12, v17);
  sub_1B591F344(v9, v10, v11, v12);
  uint64_t v13 = v17[0];
  uint64_t v14 = sub_1B59F77AC((unint64_t *)&v18, (unint64_t *)v17, v3);
  sub_1B599FF94(v13);
  sub_1B599FF94(v8);
  if (!*(void *)(v1 + 88)) {
    return v14 & 1;
  }
  if (*(unsigned char *)(v1 + 80))
  {
    if (v14)
    {
      LOBYTE(v14) = 1;
      return v14 & 1;
    }
  }
  else if ((v14 & 1) == 0)
  {
    LOBYTE(v14) = 0;
    return v14 & 1;
  }
  swift_retain();
  char v16 = sub_1B59F84BC(a1);
  swift_release();
  return v16 & 1;
}

uint64_t sub_1B59F8684()
{
  sub_1B591F344(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_1B591F344(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_release();
  return MEMORY[0x1F4186488](v0, 96, 7);
}

uint64_t type metadata accessor for Condition()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for LogicalOperator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LogicalOperator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LogicalOperator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LogicalOperator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LogicalOperator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LogicalOperator()
{
  return &type metadata for LogicalOperator;
}

unsigned char *storeEnumTagSinglePayload for ComparisonOperation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59F8918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparisonOperation()
{
  return &type metadata for ComparisonOperation;
}

unint64_t sub_1B59F8954()
{
  unint64_t result = qword_1E9D65E28;
  if (!qword_1E9D65E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E28);
  }
  return result;
}

uint64_t sub_1B59F89A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Condition();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1B59F7FE4(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

unint64_t sub_1B59F8A00()
{
  unint64_t result = qword_1E9D65E38;
  if (!qword_1E9D65E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E38);
  }
  return result;
}

unint64_t sub_1B59F8A54()
{
  unint64_t result = qword_1E9D63AC0;
  if (!qword_1E9D63AC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D63AC0);
  }
  return result;
}

unint64_t sub_1B59F8AB0()
{
  unint64_t result = qword_1E9D65E40;
  if (!qword_1E9D65E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E40);
  }
  return result;
}

uint64_t sub_1B59F8B04()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8B10()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8B28()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8B40()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8B5C()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8B7C()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8B94()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8BA8()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8BC0()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8BD4()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8BF0()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8C04()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8C14()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8C38()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8C4C()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8C60()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8C84()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8C9C()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8CB8()
{
  return sub_1B59F8CD8();
}

uint64_t sub_1B59F8CD8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F8D24()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8D30()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8D48()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8D60()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8D7C()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8D9C()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8DB4()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8DC8()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8DE0()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8DF4()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8E10()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8E24()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8E34()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8E58()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8E6C()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8E80()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8EA4()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8EBC()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8ED8()
{
  return sub_1B5A1BF88();
}

uint64_t sub_1B59F8EF8()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8F04()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8F18()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8F38()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8F48()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8F60()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8F78()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8F90()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8FB4()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8FC8()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8FE4()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F8FF8()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F901C()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F9030()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F904C()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F9064()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F907C()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F9098()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F90AC()
{
  return sub_1B59F90CC();
}

uint64_t sub_1B59F90CC()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B59F911C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65E48);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59F92F4();
  sub_1B5A1C838();
  v8[30] = 0;
  sub_1B59F9348();
  sub_1B5A1C5D8();
  uint64_t v6 = v8[31];
  type metadata accessor for Condition();
  v8[15] = 1;
  sub_1B59A8050();
  sub_1B5A1C5D8();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

unint64_t sub_1B59F92F4()
{
  unint64_t result = qword_1E9D65E50;
  if (!qword_1E9D65E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E50);
  }
  return result;
}

unint64_t sub_1B59F9348()
{
  unint64_t result = qword_1E9D65E58;
  if (!qword_1E9D65E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E58);
  }
  return result;
}

uint64_t sub_1B59F939C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for LogicalOperator.CodingKeys()
{
  return &type metadata for LogicalOperator.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Condition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59F94C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Condition.CodingKeys()
{
  return &type metadata for Condition.CodingKeys;
}

unsigned char *_s6LiftUI14LogicOperationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59F95CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LogicOperation()
{
  return &type metadata for LogicOperation;
}

unint64_t sub_1B59F9608()
{
  unint64_t result = qword_1E9D65E60;
  if (!qword_1E9D65E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E60);
  }
  return result;
}

unint64_t sub_1B59F9660()
{
  unint64_t result = qword_1E9D65E68;
  if (!qword_1E9D65E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E68);
  }
  return result;
}

unint64_t sub_1B59F96B8()
{
  unint64_t result = qword_1E9D65E70;
  if (!qword_1E9D65E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E70);
  }
  return result;
}

unint64_t sub_1B59F9710()
{
  unint64_t result = qword_1E9D65E78;
  if (!qword_1E9D65E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E78);
  }
  return result;
}

unint64_t sub_1B59F9768()
{
  unint64_t result = qword_1E9D65E80;
  if (!qword_1E9D65E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E80);
  }
  return result;
}

unint64_t sub_1B59F97C0()
{
  unint64_t result = qword_1E9D65E88;
  if (!qword_1E9D65E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E88);
  }
  return result;
}

unint64_t sub_1B59F9818()
{
  unint64_t result = qword_1E9D65E90;
  if (!qword_1E9D65E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E90);
  }
  return result;
}

uint64_t sub_1B59F986C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B59F98B8()
{
  unint64_t result = qword_1E9D65E98;
  if (!qword_1E9D65E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65E98);
  }
  return result;
}

uint64_t initializeWithCopy for CornerRadiusModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for CornerRadiusModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  char v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B591DF0C(v8, v9, v10, v11);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CornerRadiusModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  char v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B591DF0C(v6, v7, v8, v9);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for CornerRadiusModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 26)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 25);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CornerRadiusModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 25) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CornerRadiusModifier()
{
  return &type metadata for CornerRadiusModifier;
}

void sub_1B59F9B10(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65EA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59FA17C();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v22 = 0;
    sub_1B59358E8();
    sub_1B5A1C5D8();
    uint64_t v9 = v17;
    uint64_t v10 = v18;
    LOBYTE(v17) = 1;
    uint64_t v16 = v19;
    int v21 = v20;
    sub_1B591DF88(v9, v18, v19, v20);
    char v11 = sub_1B5A1C5A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    char v12 = (v11 == 2) | v11 & 1;
    uint64_t v13 = v16;
    *(void *)(a2 + 16) = v16;
    char v14 = v21;
    *(unsigned char *)(a2 + 24) = v21;
    *(unsigned char *)(a2 + 25) = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B591DF0C(v9, v10, v13, v14);
  }
}

uint64_t sub_1B59F9D60(char a1)
{
  if (a1) {
    return 0x61696C6169746E61;
  }
  else {
    return 0x737569646172;
  }
}

uint64_t sub_1B59F9D9C(char *a1, char *a2)
{
  return sub_1B59EDBF4(*a1, *a2);
}

uint64_t sub_1B59F9DA8()
{
  return sub_1B59F23AC();
}

uint64_t sub_1B59F9DB0()
{
  return sub_1B59F36C4();
}

uint64_t sub_1B59F9DB8()
{
  return sub_1B59F6878();
}

uint64_t sub_1B59F9DC0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59F9E20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59F9D60(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59F9E4C()
{
  return sub_1B59F9D60(*v0);
}

uint64_t sub_1B59F9E54@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B59F9EB8(uint64_t a1)
{
  unint64_t v2 = sub_1B59FA17C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59F9EF4(uint64_t a1)
{
  unint64_t v2 = sub_1B59FA17C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59F9F30@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)v3;
  uint64_t v10 = *(void *)(v3 + 8);
  uint64_t v11 = *(void *)(v3 + 16);
  char v12 = *(unsigned char *)(v3 + 24);
  sub_1B591DF88(*(void *)v3, v10, v11, v12);
  sub_1B5963534(a2);
  LOBYTE(a2) = v8;
  sub_1B591DF0C(v7, v10, v11, v12);
  if (a2) {
    return sub_1B590CA38((uint64_t)a1, (uint64_t)a3);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E38);
  a3[3] = sub_1B5A1A748();
  sub_1B59FA120();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B468();
}

void sub_1B59FA08C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B59FA0A4(uint64_t a1)
{
  unint64_t result = sub_1B59FA0CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59FA0CC()
{
  unint64_t result = qword_1E9D65EA0;
  if (!qword_1E9D65EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65EA0);
  }
  return result;
}

unint64_t sub_1B59FA120()
{
  unint64_t result = qword_1E9D64E40;
  if (!qword_1E9D64E40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64E40);
  }
  return result;
}

unint64_t sub_1B59FA17C()
{
  unint64_t result = qword_1E9D65EB0;
  if (!qword_1E9D65EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65EB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CornerRadiusModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59FA29CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CornerRadiusModifier.CodingKeys()
{
  return &type metadata for CornerRadiusModifier.CodingKeys;
}

unint64_t sub_1B59FA2D8()
{
  unint64_t result = qword_1E9D65EB8;
  if (!qword_1E9D65EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65EB8);
  }
  return result;
}

unint64_t sub_1B59FA330()
{
  unint64_t result = qword_1E9D65EC0;
  if (!qword_1E9D65EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65EC0);
  }
  return result;
}

unint64_t sub_1B59FA388()
{
  unint64_t result = qword_1E9D65EC8;
  if (!qword_1E9D65EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65EC8);
  }
  return result;
}

uint64_t destroy for ReloadAction(uint64_t a1)
{
  swift_release();
  sub_1B5904A88(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v2);
  }
  int v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 != 255) {
    sub_1B5905248(*(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v3 & 1);
  }
  sub_1B590D6F0(*(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v5 = *(void *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 152);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 160);
  return sub_1B5904A88(v4, v5, v6, v7);
}

uint64_t initializeWithCopy for ReloadAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  swift_retain();
  sub_1B5904B60(v4, v5, v6, v7);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  unsigned int v8 = *(unsigned __int8 *)(a2 + 64);
  if (v8 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 40);
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 64));
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(unsigned char *)(a1 + 64) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  }
  int v12 = *(unsigned __int8 *)(a2 + 96);
  if (v12 == 255)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  else
  {
    char v13 = v12 & 1;
    uint64_t v14 = *(void *)(a2 + 72);
    uint64_t v15 = *(void *)(a2 + 80);
    uint64_t v16 = *(void *)(a2 + 88);
    sub_1B5904C08(v14, v15, v16, v12 & 1);
    *(void *)(a1 + 72) = v14;
    *(void *)(a1 + 80) = v15;
    *(void *)(a1 + 88) = v16;
    *(unsigned char *)(a1 + 96) = v13;
  }
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  char v20 = *(unsigned char *)(a2 + 128);
  sub_1B590D634(v17, v18, v19, v20);
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(unsigned char *)(a1 + 128) = v20;
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  unsigned __int8 v24 = *(unsigned char *)(a2 + 160);
  sub_1B5904B60(v21, v22, v23, v24);
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(unsigned char *)(a1 + 160) = v24;
  return a1;
}

uint64_t assignWithCopy for ReloadAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1B5904B60(v4, v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1B5904A88(v8, v9, v10, v11);
  int v12 = (_OWORD *)(a1 + 40);
  char v13 = (_OWORD *)(a2 + 40);
  unsigned int v14 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) <= 0xFDu)
  {
    if (v14 <= 0xFD)
    {
      uint64_t v20 = *(void *)(a2 + 40);
      uint64_t v21 = *(void *)(a2 + 48);
      uint64_t v22 = *(void *)(a2 + 56);
      sub_1B5904B60(v20, v21, v22, *(unsigned char *)(a2 + 64));
      uint64_t v23 = *(void *)(a1 + 40);
      uint64_t v24 = *(void *)(a1 + 48);
      uint64_t v25 = *(void *)(a1 + 56);
      *(void *)(a1 + 40) = v20;
      *(void *)(a1 + 48) = v21;
      *(void *)(a1 + 56) = v22;
      unsigned __int8 v26 = *(unsigned char *)(a1 + 64);
      *(unsigned char *)(a1 + 64) = v14;
      sub_1B5904A88(v23, v24, v25, v26);
    }
    else
    {
      sub_1B590DA50(a1 + 40);
      long long v16 = *(_OWORD *)(a2 + 49);
      *int v12 = *v13;
      *(_OWORD *)(a1 + 49) = v16;
    }
  }
  else if (v14 <= 0xFD)
  {
    uint64_t v17 = *(void *)(a2 + 40);
    uint64_t v18 = *(void *)(a2 + 48);
    uint64_t v19 = *(void *)(a2 + 56);
    sub_1B5904B60(v17, v18, v19, *(unsigned char *)(a2 + 64));
    *(void *)(a1 + 40) = v17;
    *(void *)(a1 + 48) = v18;
    *(void *)(a1 + 56) = v19;
    *(unsigned char *)(a1 + 64) = v14;
  }
  else
  {
    long long v15 = *v13;
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
    *int v12 = v15;
  }
  uint64_t v27 = (long long *)(a1 + 72);
  unsigned __int8 v28 = (long long *)(a2 + 72);
  int v29 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v29 == 255)
    {
      long long v31 = *v28;
      *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
      *uint64_t v27 = v31;
    }
    else
    {
      char v40 = v29 & 1;
      uint64_t v41 = *(void *)(a2 + 72);
      uint64_t v42 = *(void *)(a2 + 80);
      uint64_t v43 = *(void *)(a2 + 88);
      sub_1B5904C08(v41, v42, v43, v29 & 1);
      *(void *)(a1 + 72) = v41;
      *(void *)(a1 + 80) = v42;
      *(void *)(a1 + 88) = v43;
      *(unsigned char *)(a1 + 96) = v40;
    }
  }
  else if (v29 == 255)
  {
    sub_1B5908FC0(a1 + 72, &qword_1E9D62BE0);
    long long v30 = *(_OWORD *)(a2 + 81);
    *uint64_t v27 = *v28;
    *(_OWORD *)(a1 + 81) = v30;
  }
  else
  {
    char v32 = v29 & 1;
    uint64_t v33 = *(void *)(a2 + 72);
    uint64_t v34 = *(void *)(a2 + 80);
    uint64_t v35 = *(void *)(a2 + 88);
    sub_1B5904C08(v33, v34, v35, v29 & 1);
    uint64_t v36 = *(void *)(a1 + 72);
    uint64_t v37 = *(void *)(a1 + 80);
    uint64_t v38 = *(void *)(a1 + 88);
    char v39 = *(unsigned char *)(a1 + 96);
    *(void *)(a1 + 72) = v33;
    *(void *)(a1 + 80) = v34;
    *(void *)(a1 + 88) = v35;
    *(unsigned char *)(a1 + 96) = v32;
    sub_1B5905248(v36, v37, v38, v39);
  }
  uint64_t v44 = *(void *)(a2 + 104);
  uint64_t v45 = *(void *)(a2 + 112);
  uint64_t v46 = *(void *)(a2 + 120);
  char v47 = *(unsigned char *)(a2 + 128);
  sub_1B590D634(v44, v45, v46, v47);
  uint64_t v48 = *(void *)(a1 + 104);
  uint64_t v49 = *(void *)(a1 + 112);
  uint64_t v50 = *(void *)(a1 + 120);
  char v51 = *(unsigned char *)(a1 + 128);
  *(void *)(a1 + 104) = v44;
  *(void *)(a1 + 112) = v45;
  *(void *)(a1 + 120) = v46;
  *(unsigned char *)(a1 + 128) = v47;
  sub_1B590D6F0(v48, v49, v50, v51);
  uint64_t v52 = *(void *)(a2 + 136);
  uint64_t v53 = *(void *)(a2 + 144);
  uint64_t v54 = *(void *)(a2 + 152);
  unsigned __int8 v55 = *(unsigned char *)(a2 + 160);
  sub_1B5904B60(v52, v53, v54, v55);
  uint64_t v56 = *(void *)(a1 + 136);
  uint64_t v57 = *(void *)(a1 + 144);
  uint64_t v58 = *(void *)(a1 + 152);
  *(void *)(a1 + 136) = v52;
  *(void *)(a1 + 144) = v53;
  *(void *)(a1 + 152) = v54;
  unsigned __int8 v59 = *(unsigned char *)(a1 + 160);
  *(unsigned char *)(a1 + 160) = v55;
  sub_1B5904A88(v56, v57, v58, v59);
  return a1;
}

__n128 __swift_memcpy161_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for ReloadAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v5;
  sub_1B5904A88(v6, v7, v8, v9);
  unsigned int v10 = *(unsigned __int8 *)(a1 + 64);
  if (v10 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + 64);
  if (v11 > 0xFD)
  {
    sub_1B590DA50(a1 + 40);
LABEL_4:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v12;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1B5904A88(v13, v14, v15, v10);
LABEL_6:
  int v16 = *(unsigned __int8 *)(a1 + 96);
  if (v16 != 255)
  {
    int v17 = *(unsigned __int8 *)(a2 + 96);
    if (v17 != 255)
    {
      char v18 = v16 & 1;
      uint64_t v19 = *(void *)(a2 + 88);
      uint64_t v20 = *(void *)(a1 + 72);
      uint64_t v21 = *(void *)(a1 + 80);
      uint64_t v22 = *(void *)(a1 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = v19;
      *(unsigned char *)(a1 + 96) = v17 & 1;
      sub_1B5905248(v20, v21, v22, v18);
      goto LABEL_11;
    }
    sub_1B5908FC0(a1 + 72, &qword_1E9D62BE0);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
LABEL_11:
  uint64_t v23 = *(void *)(a2 + 120);
  char v24 = *(unsigned char *)(a2 + 128);
  uint64_t v25 = *(void *)(a1 + 104);
  uint64_t v26 = *(void *)(a1 + 112);
  uint64_t v27 = *(void *)(a1 + 120);
  char v28 = *(unsigned char *)(a1 + 128);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = v23;
  *(unsigned char *)(a1 + 128) = v24;
  sub_1B590D6F0(v25, v26, v27, v28);
  uint64_t v29 = *(void *)(a2 + 152);
  char v30 = *(unsigned char *)(a2 + 160);
  uint64_t v31 = *(void *)(a1 + 136);
  uint64_t v32 = *(void *)(a1 + 144);
  uint64_t v33 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = v29;
  unsigned __int8 v34 = *(unsigned char *)(a1 + 160);
  *(unsigned char *)(a1 + 160) = v30;
  sub_1B5904A88(v31, v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReloadAction(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 161)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReloadAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 160) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 161) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 161) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReloadAction()
{
  return &type metadata for ReloadAction;
}

uint64_t sub_1B59FAAE8(uint64_t a1)
{
  *(void *)(v2 + 392) = a1;
  uint64_t v3 = sub_1B5A1BDC8();
  *(void *)(v2 + 400) = v3;
  *(void *)(v2 + 408) = *(void *)(v3 - 8);
  *(void *)(v2 + 416) = swift_task_alloc();
  uint64_t v4 = sub_1B5A1BDE8();
  *(void *)(v2 + 424) = v4;
  *(void *)(v2 + 432) = *(void *)(v4 - 8);
  *(void *)(v2 + 440) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638F0);
  *(void *)(v2 + 448) = swift_task_alloc();
  uint64_t v5 = sub_1B5A1A258();
  *(void *)(v2 + 456) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v2 + 464) = v6;
  *(void *)(v2 + 472) = *(void *)(v6 + 64);
  *(void *)(v2 + 480) = swift_task_alloc();
  *(void *)(v2 + 488) = swift_task_alloc();
  *(void *)(v2 + 496) = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v2 + 144) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v2 + 160) = v7;
  *(unsigned char *)(v2 + 176) = *(unsigned char *)(v1 + 160);
  long long v8 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v2 + 96) = v8;
  long long v9 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v2 + 128) = v9;
  long long v10 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v10;
  long long v11 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 64) = v11;
  return MEMORY[0x1F4188298](sub_1B59FACE4, 0, 0);
}

uint64_t sub_1B59FACE4()
{
  uint64_t v86 = v0;
  uint64_t v1 = *(void *)(v0 + 392);
  sub_1B5951704(v0 + 152, v0 + 328);
  sub_1B5951704(v0 + 328, v0 + 264);
  sub_1B5951760(v0 + 328);
  unint64_t v2 = StringResolvable.resolved(with:)(v1);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 392);
  sub_1B5951794(v0 + 328);
  v6._countAndFlagsBits = v2;
  v6._object = v4;
  ReloadType.init(rawValue:)(v6);
  int v7 = LOBYTE(v84[0]);
  sub_1B5951704(v0 + 24, v0 + 232);
  sub_1B5951704(v0 + 232, v0 + 296);
  sub_1B5951760(v0 + 232);
  StringResolvable.resolved(with:)(v5);
  sub_1B5951794(v0 + 232);
  unsigned int v10 = *(unsigned __int8 *)(v0 + 80);
  if (v10 <= 0xFD)
  {
    int v80 = LOBYTE(v84[0]);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v15 = *(void *)(v0 + 392);
    v84[0] = *(void *)(v0 + 56);
    v84[1] = v13;
    v84[2] = v14;
    char v85 = v10;
    sub_1B5904B60(v84[0], v13, v14, v10);
    unint64_t v11 = StringResolvable.resolved(with:)(v15);
    uint64_t v12 = v16;
    sub_1B5904B4C(v84[0], v13, v14, v10);
    int v7 = v80;
  }
  else
  {
    unint64_t v11 = 0;
    uint64_t v12 = (void *)0xE000000000000000;
  }
  v17._countAndFlagsBits = v11;
  v17._object = v12;
  HTTPRequestMethod.init(rawValue:)(v17);
  int v18 = *(unsigned __int8 *)(v0 + 112);
  if (v18 == 255)
  {
    uint64_t v24 = 0;
    unint64_t v26 = 0xF000000000000000;
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 96);
    uint64_t v19 = *(void *)(v0 + 104);
    uint64_t v21 = *(void *)(v0 + 88);
    uint64_t v22 = *(void *)(v0 + 392);
    sub_1B5904C08(v21, v20, v19, v18 & 1);
    uint64_t v23 = sub_1B59B4750(v22, v21, v20, v19, v18 & 1);
    sub_1B5905230(v21, v20, v19, v18);
    sub_1B5A1A168();
    swift_allocObject();
    sub_1B5A1A158();
    *(void *)(v0 + 384) = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
    sub_1B5951940();
    uint64_t v24 = sub_1B5A1A148();
    unint64_t v26 = v25;
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = *(void *)(v0 + 456);
  uint64_t v28 = *(void *)(v0 + 464);
  uint64_t v29 = *(void *)(v0 + 448);
  sub_1B5A1A248();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v27) == 1)
  {
    sub_1B5908FC0(*(void *)(v0 + 448), &qword_1E9D638F0);
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1B5A1A328();
    __swift_project_value_buffer(v30, (uint64_t)qword_1E9D910D0);
    uint64_t v31 = sub_1B5A1A308();
    os_log_type_t v32 = sub_1B5A1C258();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_1B58FD000, v31, v32, "Failed to resolve url on ReloadAction.", v33, 2u);
      MEMORY[0x1BA9A4780](v33, -1, -1);
    }

    type metadata accessor for RemoteLoaderError(0);
    sub_1B59FCB44((unint64_t *)&qword_1E9D62BD0, (void (*)(uint64_t))type metadata accessor for RemoteLoaderError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1B59B0EE8(v24, v26);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v8 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    unint64_t v78 = v26;
    uint64_t v82 = v24;
    unint64_t v77 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v0 + 464) + 32);
    v77(*(void *)(v0 + 496), *(void *)(v0 + 448), *(void *)(v0 + 456));
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v34 = *(void *)(v0 + 488);
    uint64_t v35 = *(void *)(v0 + 496);
    uint64_t v36 = *(void *)(v0 + 456);
    uint64_t v37 = *(void *)(v0 + 464);
    uint64_t v38 = sub_1B5A1A328();
    __swift_project_value_buffer(v38, (uint64_t)qword_1E9D910D0);
    uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
    v75(v34, v35, v36);
    char v39 = sub_1B5A1A308();
    os_log_type_t v40 = sub_1B5A1C278();
    BOOL v41 = os_log_type_enabled(v39, v40);
    uint64_t v42 = *(void *)(v0 + 488);
    uint64_t v43 = *(void *)(v0 + 456);
    uint64_t v44 = *(void *)(v0 + 464);
    if (v41)
    {
      int v81 = v7;
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      v84[0] = v76;
      *(_DWORD *)uint64_t v45 = 136315138;
      sub_1B59FCB44(&qword_1E9D642F0, MEMORY[0x1E4F276F0]);
      uint64_t v46 = sub_1B5A1C638();
      *(void *)(v0 + 368) = sub_1B5928EE8(v46, v47, v84);
      sub_1B5A1C2D8();
      swift_bridgeObjectRelease();
      long long v79 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v79(v42, v43);
      _os_log_impl(&dword_1B58FD000, v39, v40, "Reload Action: %s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9A4780](v76, -1, -1);
      uint64_t v48 = v45;
      int v7 = v81;
      MEMORY[0x1BA9A4780](v48, -1, -1);
    }
    else
    {
      long long v79 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v79(v42, v43);
    }

    uint64_t v49 = *(void *)(v0 + 496);
    uint64_t v51 = *(void *)(v0 + 472);
    uint64_t v50 = *(void *)(v0 + 480);
    uint64_t v53 = *(void *)(v0 + 456);
    uint64_t v52 = *(void *)(v0 + 464);
    uint64_t v67 = *(void *)(v0 + 440);
    uint64_t v73 = *(void *)(v0 + 432);
    uint64_t v74 = *(void *)(v0 + 424);
    uint64_t v72 = *(void *)(v0 + 408);
    if (v7 == 3) {
      char v54 = 2;
    }
    else {
      char v54 = v7;
    }
    char v66 = v54;
    uint64_t v70 = *(void *)(v0 + 400);
    uint64_t v71 = *(void *)(v0 + 416);
    uint64_t v65 = *(void *)(v0 + 392);
    sub_1B597A758();
    char v69 = (void *)sub_1B5A1C288();
    uint64_t v68 = v53;
    v75(v50, v49, v53);
    unint64_t v55 = (*(unsigned __int8 *)(v52 + 80) + 185) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v56 = swift_allocObject();
    long long v57 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v56 + 136) = *(_OWORD *)(v0 + 128);
    long long v58 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v56 + 152) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v56 + 168) = v58;
    long long v59 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v56 + 72) = *(_OWORD *)(v0 + 64);
    long long v60 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v56 + 88) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v56 + 104) = v60;
    *(_OWORD *)(v56 + 120) = v57;
    long long v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v56 + 24) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v56 + 40) = v61;
    *(unsigned char *)(v56 + 16) = v83;
    *(unsigned char *)(v56 + 184) = *(unsigned char *)(v0 + 176);
    *(_OWORD *)(v56 + 56) = v59;
    v77(v56 + v55, v50, v53);
    unint64_t v62 = v56 + ((v55 + v51 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v62 = v65;
    *(unsigned char *)(v62 + 8) = v66;
    uint64_t v63 = (uint64_t *)(v56 + ((v55 + v51 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t *v63 = v82;
    v63[1] = v78;
    *(void *)(v0 + 216) = sub_1B59FCA0C;
    *(void *)(v0 + 224) = v56;
    *(void *)(v0 + 184) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 192) = 1107296256;
    *(void *)(v0 + 200) = sub_1B59251B4;
    *(void *)(v0 + 208) = &block_descriptor_3;
    uint64_t v64 = _Block_copy((const void *)(v0 + 184));
    sub_1B592CAC8(v0 + 16);
    swift_retain();
    sub_1B59FCAD0(v82, v78);
    sub_1B5A1BDD8();
    *(void *)(v0 + 360) = MEMORY[0x1E4FBC860];
    sub_1B59FCB44((unint64_t *)&qword_1E9D63898, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D638A0);
    sub_1B59095C8((unint64_t *)&qword_1E9D638A8, &qword_1E9D638A0);
    sub_1B5A1C348();
    MEMORY[0x1BA9A3A90](0, v67, v71, v64);
    _Block_release(v64);

    sub_1B59B0EE8(v82, v78);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v70);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v67, v74);
    v79(v49, v68);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v8 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v8();
}

uint64_t sub_1B59FB8E0(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, unint64_t a7)
{
  unint64_t v37 = a7;
  uint64_t v38 = a4;
  int v39 = a5;
  unsigned int v11 = a1;
  uint64_t v12 = type metadata accessor for RemoteContent(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  Swift::String v17 = (char *)&v37 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BA0);
  uint64_t v19 = *(int *)(v18 + 48);
  uint64_t v20 = *(int *)(v18 + 64);
  uint64_t v21 = sub_1B5A1A258();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  if (v11 > 1)
  {
    uint64_t v27 = (uint64_t *)&v15[v20];
    v22(v15, a3, v21);
    v15[v19] = a1;
    unint64_t v28 = v37;
    *uint64_t v27 = a6;
    v27[1] = v28;
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = *(void *)(a2 + 104);
    uint64_t v30 = *(void *)(a2 + 112);
    uint64_t v31 = *(void *)(a2 + 120);
    char v32 = *(unsigned char *)(a2 + 128);
    sub_1B59FCAD0(a6, v28);
    sub_1B590D634(v29, v30, v31, v32);
    char v35 = sub_1B59B4120(v38, v29, v30, v31, v32);
    sub_1B590D6F0(v29, v30, v31, v32);
    v41[0] = v39;
    RemoteLoader.reload(content:showLoading:reloadtype:)((uint64_t)v15, v35 & 1, v41);
    uint64_t v34 = (uint64_t)v15;
  }
  else
  {
    v22(v17, a3, v21);
    v17[v19] = a1;
    *(_OWORD *)&v17[v20] = xmmword_1B5A1D190;
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = *(void *)(a2 + 104);
    uint64_t v24 = *(void *)(a2 + 112);
    uint64_t v25 = *(void *)(a2 + 120);
    char v26 = *(unsigned char *)(a2 + 128);
    sub_1B590D634(v23, v24, v25, v26);
    char v33 = sub_1B59B4120(v38, v23, v24, v25, v26);
    sub_1B590D6F0(v23, v24, v25, v26);
    char v40 = v39;
    RemoteLoader.reload(content:showLoading:reloadtype:)((uint64_t)v17, v33 & 1, &v40);
    uint64_t v34 = (uint64_t)v17;
  }
  return sub_1B59FCB8C(v34);
}

uint64_t sub_1B59FBB7C(char a1)
{
  return qword_1B5A2E8F0[a1];
}

uint64_t sub_1B59FBB9C()
{
  return sub_1B59FBB7C(*v0);
}

uint64_t sub_1B59FBBA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B59FCF58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B59FBBCC(uint64_t a1)
{
  unint64_t v2 = sub_1B59FCBE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59FBC08(uint64_t a1)
{
  unint64_t v2 = sub_1B59FCBE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B59FBC44(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65EF0);
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v103 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B5A1C4E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1B5A1C828();
  if (qword_1E9D62B08 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1E9D91098);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  if (*(void *)(v10 + 16) && (unint64_t v12 = sub_1B59049D0((uint64_t)v9), (v13 & 1) != 0)) {
    sub_1B59052CC(*(void *)(v10 + 56) + 32 * v12, (uint64_t)v73);
  }
  else {
    memset(v73, 0, sizeof(v73));
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!*((void *)&v73[1] + 1))
  {
    sub_1B5908FC0((uint64_t)v73, &qword_1E9D62BC8);
    goto LABEL_15;
  }
  type metadata accessor for AnyWeakRemoteLoader();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    type metadata accessor for RemoteLoaderError(0);
    sub_1B59FCB44((unint64_t *)&qword_1E9D62BD0, (void (*)(uint64_t))type metadata accessor for RemoteLoaderError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return;
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_release();
    goto LABEL_15;
  }
  uint64_t v15 = Strong;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59FCBE8();
  swift_retain();
  sub_1B5A1C838();
  if (v2)
  {
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_release();
  }
  else
  {
    v64[0] = 0;
    unint64_t v16 = sub_1B5904A34();
    sub_1B5A1C5D8();
    uint64_t v17 = *(void *)&v73[1];
    v64[0] = 1;
    long long v58 = v73[0];
    int v48 = BYTE8(v73[1]);
    sub_1B5904B60(*(uint64_t *)&v73[0], *((uint64_t *)&v73[0] + 1), *(uint64_t *)&v73[1], BYTE8(v73[1]));
    unint64_t v47 = v16;
    sub_1B5A1C5B8();
    uint64_t v57 = v17;
    uint64_t v56 = *((void *)&v73[0] + 1);
    uint64_t v18 = *(void *)&v73[0];
    uint64_t v19 = *(void *)&v73[1];
    int v20 = BYTE8(v73[1]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BE0);
    v64[0] = 2;
    uint64_t v60 = v18;
    uint64_t v55 = v19;
    sub_1B5904BDC(v18, v56, v19, v20);
    sub_1B59095C8((unint64_t *)&qword_1E9D62BE8, &qword_1E9D62BE0);
    sub_1B5A1C5B8();
    int v54 = v20;
    long long v21 = v73[0];
    uint64_t v52 = *(void *)&v73[1];
    int v53 = BYTE8(v73[1]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    v64[0] = 3;
    long long v59 = v21;
    sub_1B5904BF0(v21, *((uint64_t *)&v21 + 1), v52, v53);
    sub_1B59095C8((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
    sub_1B5A1C5B8();
    if (BYTE8(v73[1]) == 255)
    {
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      int v25 = 0;
    }
    else
    {
      uint64_t v23 = *((void *)&v73[0] + 1);
      uint64_t v24 = *(void *)&v73[1];
      int v25 = BYTE8(v73[1]) & 1;
      uint64_t v22 = *(void *)&v73[0];
    }
    char v99 = v25;
    LOBYTE(v73[0]) = 4;
    uint64_t v51 = v23;
    int v46 = v25;
    sub_1B590D634(v22, v23, v24, v25);
    sub_1B5A1C5B8();
    uint64_t v49 = v24;
    uint64_t v50 = v22;
    uint64_t v26 = v57;
    if (v97 <= 0xFDu)
    {
      unint64_t v47 = v96;
      unint64_t v45 = v95;
      uint64_t v43 = v94;
      uint64_t v27 = v103;
      int v44 = v97;
    }
    else
    {
      unint64_t v47 = 0;
      int v44 = 0;
      unint64_t v45 = 0xEB00000000617461;
      uint64_t v43 = 0x44646E4177656976;
      uint64_t v27 = v103;
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v27, v63);
    *(void *)uint64_t v64 = v15;
    *(_OWORD *)&v64[8] = v58;
    *(void *)&v64[24] = v26;
    LOBYTE(v65) = v48;
    *((void *)&v65 + 1) = v60;
    *(void *)&long long v66 = v56;
    *((void *)&v66 + 1) = v55;
    v67[0] = v54;
    *(_OWORD *)&v67[8] = v59;
    uint64_t v28 = v51;
    uint64_t v29 = v52;
    *(void *)&v67[24] = v52;
    LOBYTE(v68) = v53;
    uint64_t v31 = v49;
    uint64_t v30 = v50;
    *((void *)&v68 + 1) = v50;
    *(void *)&long long v69 = v51;
    *((void *)&v69 + 1) = v49;
    char v32 = v46;
    LOBYTE(v70) = v46;
    *((void *)&v70 + 1) = v43;
    *(void *)&long long v71 = v45;
    *((void *)&v71 + 1) = v47;
    char v72 = v44;
    sub_1B592CAC8((uint64_t)v64);
    sub_1B590D6F0(v30, v28, v31, v32);
    sub_1B5905230(v59, *((uint64_t *)&v59 + 1), v29, v53);
    uint64_t v33 = v60;
    sub_1B5904B4C(v60, v56, v55, v54);
    long long v34 = v58;
    uint64_t v35 = v57;
    LOBYTE(v29) = v48;
    sub_1B5904A88(v58, *((uint64_t *)&v58 + 1), v57, v48);
    swift_release();
    long long v36 = v71;
    uint64_t v37 = v61;
    *(_OWORD *)(v61 + 128) = v70;
    *(_OWORD *)(v37 + 144) = v36;
    *(unsigned char *)(v37 + 160) = v72;
    long long v38 = *(_OWORD *)&v67[16];
    *(_OWORD *)(v37 + 64) = *(_OWORD *)v67;
    *(_OWORD *)(v37 + 80) = v38;
    long long v39 = v69;
    *(_OWORD *)(v37 + 96) = v68;
    *(_OWORD *)(v37 + 112) = v39;
    long long v40 = *(_OWORD *)&v64[16];
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v64;
    *(_OWORD *)(v37 + 16) = v40;
    long long v41 = v66;
    *(_OWORD *)(v37 + 32) = v65;
    *(_OWORD *)(v37 + 48) = v41;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *(void *)&v73[0] = v15;
    *(_OWORD *)((char *)v73 + 8) = v34;
    *((void *)&v73[1] + 1) = v35;
    char v74 = v29;
    *(_DWORD *)uint64_t v75 = v102[0];
    *(_DWORD *)&v75[3] = *(_DWORD *)((char *)v102 + 3);
    uint64_t v76 = v33;
    uint64_t v77 = v56;
    uint64_t v78 = v55;
    char v79 = v54;
    *(_DWORD *)int v80 = *(_DWORD *)v101;
    *(_DWORD *)&v80[3] = *(_DWORD *)&v101[3];
    long long v81 = v59;
    uint64_t v82 = v52;
    char v83 = v53;
    *(_DWORD *)long long v84 = *(_DWORD *)v100;
    *(_DWORD *)&uint64_t v84[3] = *(_DWORD *)&v100[3];
    uint64_t v85 = v50;
    uint64_t v86 = v51;
    uint64_t v87 = v49;
    char v88 = v99;
    *(_DWORD *)uint64_t v89 = *(_DWORD *)v98;
    *(_DWORD *)&v89[3] = *(_DWORD *)&v98[3];
    uint64_t v90 = v43;
    unint64_t v91 = v45;
    unint64_t v92 = v47;
    char v93 = v44;
    sub_1B59FCC3C((uint64_t)v73);
  }
}

uint64_t sub_1B59FC700(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1B5921C08;
  return sub_1B59FAAE8(a1);
}

void sub_1B59FC794(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B59FC7AC(uint64_t a1)
{
  unint64_t result = sub_1B59FC7D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59FC7D4()
{
  unint64_t result = qword_1E9D65ED0;
  if (!qword_1E9D65ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65ED0);
  }
  return result;
}

unint64_t sub_1B59FC828(uint64_t a1)
{
  unint64_t result = sub_1B59FC850();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59FC850()
{
  unint64_t result = qword_1E9D65EE0;
  if (!qword_1E9D65EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9D65EE0);
  }
  return result;
}

uint64_t sub_1B59FC8A4()
{
  uint64_t v1 = sub_1B5A1A258();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 185) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64) + 23;
  swift_release();
  sub_1B5904A88(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  unsigned int v6 = *(unsigned __int8 *)(v0 + 88);
  if (v6 <= 0xFD) {
    sub_1B5904A88(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), v6);
  }
  unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  int v8 = *(unsigned __int8 *)(v0 + 120);
  if (v8 != 255) {
    sub_1B5905248(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), v8 & 1);
  }
  sub_1B590D6F0(*(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(unsigned char *)(v0 + 152));
  sub_1B5904A88(*(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(unsigned char *)(v0 + 184));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  unint64_t v9 = *(void *)(v0 + v7 + 8);
  if (v9 >> 60 != 15) {
    sub_1B5905904(*(void *)(v0 + v7), v9);
  }
  return MEMORY[0x1F4186498](v0, v7 + 16, v3 | 7);
}

uint64_t sub_1B59FCA0C()
{
  uint64_t v1 = *(void *)(sub_1B5A1A258() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 185) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = *(void *)v5;
  unint64_t v7 = (uint64_t *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  int v10 = *(unsigned __int8 *)(v5 + 8);
  unsigned __int8 v11 = *(unsigned char *)(v0 + 16);
  return sub_1B59FB8E0(v11, v0 + 24, v4, v6, v10, v8, v9);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1B59FCAD0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1B5905744(a1, a2);
  }
  return a1;
}

uint64_t sub_1B59FCAE4(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1B59FCB1C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1B59FCB44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B59FCB8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoteContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B59FCBE8()
{
  unint64_t result = qword_1E9D65EF8;
  if (!qword_1E9D65EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65EF8);
  }
  return result;
}

uint64_t sub_1B59FCC3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 112);
  uint64_t v19 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 120);
  uint64_t v21 = *(void *)(a1 + 144);
  uint64_t v22 = *(void *)(a1 + 136);
  uint64_t v20 = *(void *)(a1 + 152);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 64);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 96);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 160);
  char v16 = *(unsigned char *)(a1 + 128);
  swift_release();
  sub_1B5904A88(v2, v3, v4, v8);
  sub_1B5904B4C(v5, v6, v7, v9);
  sub_1B5905230(v14, v13, v12, v10);
  sub_1B590D6F0(v19, v18, v17, v16);
  sub_1B5904A88(v22, v21, v20, v15);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ReloadAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59FCE18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReloadAction.CodingKeys()
{
  return &type metadata for ReloadAction.CodingKeys;
}

unint64_t sub_1B59FCE54()
{
  unint64_t result = qword_1E9D65F00;
  if (!qword_1E9D65F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F00);
  }
  return result;
}

unint64_t sub_1B59FCEAC()
{
  unint64_t result = qword_1E9D65F08;
  if (!qword_1E9D65F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F08);
  }
  return result;
}

unint64_t sub_1B59FCF04()
{
  unint64_t result = qword_1E9D65F10;
  if (!qword_1E9D65F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F10);
  }
  return result;
}

uint64_t sub_1B59FCF58(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v3 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874654D70747468 && a2 == 0xEA0000000000646FLL || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64616F4C776F6873 && a2 == 0xEB00000000676E69 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t destroy for AnimationModifier(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 != 254)
  {
    sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
    if (v2 != 255) {
      sub_1B590D6F0(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v2 & 1);
    }
  }
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 88);
  return sub_1B5904A88(v3, v4, v5, v6);
}

uint64_t initializeWithCopy for AnimationModifier(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 56);
  if (v4 == 254)
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  else
  {
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    uint64_t v8 = a2[2];
    unsigned __int8 v9 = *((unsigned char *)a2 + 24);
    sub_1B5904B60(*a2, v7, v8, v9);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v9;
    if (v4 == 255)
    {
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
    }
    else
    {
      uint64_t v10 = a2[4];
      uint64_t v11 = a2[5];
      uint64_t v12 = a2[6];
      sub_1B590D634(v10, v11, v12, v4 & 1);
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      *(void *)(a1 + 48) = v12;
      *(unsigned char *)(a1 + 56) = v4 & 1;
    }
  }
  uint64_t v13 = a2[8];
  uint64_t v14 = a2[9];
  uint64_t v15 = a2[10];
  unsigned __int8 v16 = *((unsigned char *)a2 + 88);
  sub_1B5904B60(v13, v14, v15, v16);
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(unsigned char *)(a1 + 88) = v16;
  return a1;
}

uint64_t assignWithCopy for AnimationModifier(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 254)
  {
    if (v4 == 254)
    {
      long long v5 = *a2;
      long long v6 = a2[1];
      long long v7 = a2[2];
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = v7;
      *(_OWORD *)a1 = v5;
      goto LABEL_15;
    }
    uint64_t v11 = *(void *)a2;
    uint64_t v12 = *((void *)a2 + 1);
    uint64_t v13 = *((void *)a2 + 2);
    unsigned __int8 v14 = *((unsigned char *)a2 + 24);
    sub_1B5904B60(*(void *)a2, v12, v13, v14);
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v13;
    *(unsigned char *)(a1 + 24) = v14;
    int v15 = *((unsigned __int8 *)a2 + 56);
    if (v15 == 255)
    {
      long long v16 = a2[2];
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *(_OWORD *)(a1 + 32) = v16;
      goto LABEL_15;
    }
LABEL_13:
    char v29 = v15 & 1;
    uint64_t v30 = *((void *)a2 + 4);
    uint64_t v31 = *((void *)a2 + 5);
    uint64_t v32 = *((void *)a2 + 6);
    sub_1B590D634(v30, v31, v32, v15 & 1);
    *(void *)(a1 + 32) = v30;
    *(void *)(a1 + 40) = v31;
    *(void *)(a1 + 48) = v32;
    *(unsigned char *)(a1 + 56) = v29;
    goto LABEL_15;
  }
  if (v4 == 254)
  {
    sub_1B59CD234(a1);
    long long v9 = a2[1];
    long long v8 = a2[2];
    long long v10 = *a2;
    *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)a1 = v10;
    goto LABEL_15;
  }
  uint64_t v17 = *(void *)a2;
  uint64_t v18 = *((void *)a2 + 1);
  uint64_t v19 = *((void *)a2 + 2);
  unsigned __int8 v20 = *((unsigned char *)a2 + 24);
  sub_1B5904B60(*(void *)a2, v18, v19, v20);
  uint64_t v21 = *(void *)a1;
  uint64_t v22 = *(void *)(a1 + 8);
  uint64_t v23 = *(void *)(a1 + 16);
  *(void *)a1 = v17;
  *(void *)(a1 + 8) = v18;
  *(void *)(a1 + 16) = v19;
  unsigned __int8 v24 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v20;
  sub_1B5904A88(v21, v22, v23, v24);
  int v25 = (long long *)(a1 + 32);
  uint64_t v26 = a2 + 2;
  int v15 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v15 == 255)
    {
      long long v28 = *v26;
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *int v25 = v28;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v15 == 255)
  {
    sub_1B59369A8(a1 + 32);
    long long v27 = *(long long *)((char *)a2 + 41);
    *int v25 = *v26;
    *(_OWORD *)(a1 + 41) = v27;
  }
  else
  {
    char v33 = v15 & 1;
    uint64_t v34 = *((void *)a2 + 4);
    uint64_t v35 = *((void *)a2 + 5);
    uint64_t v36 = *((void *)a2 + 6);
    sub_1B590D634(v34, v35, v36, v15 & 1);
    uint64_t v37 = *(void *)(a1 + 32);
    uint64_t v38 = *(void *)(a1 + 40);
    uint64_t v39 = *(void *)(a1 + 48);
    char v40 = *(unsigned char *)(a1 + 56);
    *(void *)(a1 + 32) = v34;
    *(void *)(a1 + 40) = v35;
    *(void *)(a1 + 48) = v36;
    *(unsigned char *)(a1 + 56) = v33;
    sub_1B590D6F0(v37, v38, v39, v40);
  }
LABEL_15:
  uint64_t v41 = *((void *)a2 + 8);
  uint64_t v42 = *((void *)a2 + 9);
  uint64_t v43 = *((void *)a2 + 10);
  unsigned __int8 v44 = *((unsigned char *)a2 + 88);
  sub_1B5904B60(v41, v42, v43, v44);
  uint64_t v45 = *(void *)(a1 + 64);
  uint64_t v46 = *(void *)(a1 + 72);
  uint64_t v47 = *(void *)(a1 + 80);
  *(void *)(a1 + 64) = v41;
  *(void *)(a1 + 72) = v42;
  *(void *)(a1 + 80) = v43;
  unsigned __int8 v48 = *(unsigned char *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v44;
  sub_1B5904A88(v45, v46, v47, v48);
  return a1;
}

uint64_t assignWithTake for AnimationModifier(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 56) == 254) {
    goto LABEL_4;
  }
  int v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 == 254)
  {
    sub_1B59CD234(a1);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B5904A88(v8, v9, v10, v11);
  int v12 = *(unsigned __int8 *)(a1 + 56);
  if (v12 != 255)
  {
    if (v4 != 255)
    {
      char v13 = v12 & 1;
      uint64_t v14 = *(void *)(a2 + 48);
      uint64_t v15 = *(void *)(a1 + 32);
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = v14;
      *(unsigned char *)(a1 + 56) = v4 & 1;
      sub_1B590D6F0(v15, v16, v17, v13);
      goto LABEL_10;
    }
    sub_1B59369A8(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_10:
  uint64_t v18 = *(void *)(a2 + 80);
  char v19 = *(unsigned char *)(a2 + 88);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  uint64_t v22 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v18;
  unsigned __int8 v23 = *(unsigned char *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v19;
  sub_1B5904A88(v20, v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  int v4 = v3 ^ 0xFF;
  if ((int)(v3 ^ 0xFF) <= 1) {
    int v4 = 1;
  }
  int v5 = v4 - 2;
  if (v3 <= 1) {
    int v6 = -1;
  }
  else {
    int v6 = v5;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 89) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -2 - a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModifier()
{
  return &type metadata for AnimationModifier;
}

uint64_t sub_1B59FD6D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v22 = *(void *)v3;
  uint64_t v23 = *(void *)(v3 + 8);
  uint64_t v24 = *(void *)(v3 + 16);
  uint64_t v25 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 48);
  uint64_t v17 = *(void *)(v3 + 40);
  uint64_t v18 = *(void *)(v3 + 32);
  unsigned int v21 = *(unsigned __int8 *)(v3 + 56);
  uint64_t v7 = *(void *)(v3 + 72);
  uint64_t v8 = *(void *)(v3 + 80);
  unsigned __int8 v9 = *(unsigned char *)(v3 + 88);
  uint64_t v26 = *(void *)(v3 + 64);
  uint64_t v27 = v7;
  uint64_t v28 = v8;
  char v29 = v9;
  sub_1B5904B60(v26, v7, v8, v9);
  unint64_t v10 = StringResolvable.resolved(with:)(a2);
  uint64_t v12 = v11;
  uint64_t result = sub_1B5904A88(v26, v7, v8, v9);
  if (!v4)
  {
    if (v21 != 254)
    {
      uint64_t v26 = v22;
      uint64_t v27 = v23;
      uint64_t v28 = v24;
      char v29 = v25;
      uint64_t v30 = v18;
      uint64_t v31 = v17;
      uint64_t v32 = v6;
      char v33 = v21;
      sub_1B5904B60(v22, v23, v24, v25);
      sub_1B590F04C(v18, v17, v6, v21);
      sub_1B5961308(a2);
      sub_1B59FE0C8(v22, v23, v24, v25, v18, v17, v6, v21, (void (*)(void))sub_1B5904A88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F034);
    }
    uint64_t v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    RemoteStateStore.subscript.getter(v10, v12, &v26);
    swift_bridgeObjectRelease();
    uint64_t v15 = v26;
    uint64_t v36 = v26;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D65F20);
    a3[3] = sub_1B5A1A748();
    unint64_t v16 = sub_1B59FDFA4();
    uint64_t v34 = v14;
    unint64_t v35 = v16;
    a3[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64E60);
    sub_1B59FE000();
    sub_1B5A1B758();
    swift_release();
    return sub_1B599FF94(v15);
  }
  return result;
}

uint64_t sub_1B59FD9C0(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 0x6F6974616D696E61;
  }
}

uint64_t sub_1B59FD9F8()
{
  return sub_1B59FD9C0(*v0);
}

uint64_t sub_1B59FDA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B59FE35C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B59FDA28(uint64_t a1)
{
  unint64_t v2 = sub_1B59FE074();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59FDA64(uint64_t a1)
{
  unint64_t v2 = sub_1B59FE074();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B59FDAA0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65F38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59FE074();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v49 = 0;
    sub_1B59CED30();
    sub_1B5A1C5B8();
    uint64_t v9 = v43;
    char v49 = 1;
    uint64_t v38 = v41;
    uint64_t v39 = v40;
    uint64_t v36 = v42;
    uint64_t v37 = v44;
    uint64_t v33 = v45;
    uint64_t v35 = v46;
    unsigned int v48 = v47;
    sub_1B59FE0C8(v40, v41, v42, v43, v44, v45, v46, v47, (void (*)(void))sub_1B5904B60, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F04C);
    sub_1B5904A34();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v34 = v9;
    uint64_t v10 = v40;
    uint64_t v11 = v41;
    uint64_t v28 = v41;
    uint64_t v12 = v42;
    LODWORD(v32) = v43;
    uint64_t v13 = v9;
    uint64_t v14 = v36;
    uint64_t v15 = v33;
    uint64_t v16 = v35;
    sub_1B59FE0C8(v39, v38, v36, v13, v37, v33, v35, v48, (void (*)(void))sub_1B5904B60, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F04C);
    uint64_t v30 = v12;
    uint64_t v31 = v10;
    sub_1B5904B60(v10, v11, v12, v32);
    char v29 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F034;
    uint64_t v27 = (void (*)(void))sub_1B5904A88;
    uint64_t v18 = v38;
    uint64_t v17 = v39;
    uint64_t v19 = v14;
    uint64_t v20 = v34;
    uint64_t v21 = v37;
    uint64_t v22 = v16;
    uint64_t v23 = v48;
    sub_1B59FE0C8(v39, v38, v19, v34, v37, v15, v22, v48, (void (*)(void))sub_1B5904A88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B590F034);
    *(void *)a2 = v17;
    *(void *)(a2 + 8) = v18;
    uint64_t v24 = v36;
    *(void *)(a2 + 16) = v36;
    *(void *)(a2 + 24) = v20;
    *(void *)(a2 + 32) = v21;
    *(void *)(a2 + 40) = v15;
    uint64_t v25 = v35;
    *(void *)(a2 + 48) = v35;
    *(unsigned char *)(a2 + 56) = v23;
    uint64_t v26 = v28;
    *(void *)(a2 + 64) = v31;
    *(void *)(a2 + 72) = v26;
    *(void *)(a2 + 80) = v30;
    LOBYTE(v18) = v32;
    *(unsigned char *)(a2 + 88) = v32;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B59FE0C8(v39, v38, v24, v34, v37, v15, v25, v23, v27, v29);
    sub_1B5904A88(v31, v26, v30, v18);
  }
}

uint64_t sub_1B59FDEF8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B59FD6D0(a1, a2, a3);
}

void sub_1B59FDF10(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B59FDF28(uint64_t a1)
{
  unint64_t result = sub_1B59FDF50();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59FDF50()
{
  unint64_t result = qword_1E9D65F18;
  if (!qword_1E9D65F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F18);
  }
  return result;
}

unint64_t sub_1B59FDFA4()
{
  unint64_t result = qword_1E9D65F28;
  if (!qword_1E9D65F28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D65F20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F28);
  }
  return result;
}

unint64_t sub_1B59FE000()
{
  unint64_t result = qword_1E9D65F30;
  if (!qword_1E9D65F30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E60);
    sub_1B595D5B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F30);
  }
  return result;
}

unint64_t sub_1B59FE074()
{
  unint64_t result = qword_1E9D65F40;
  if (!qword_1E9D65F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F40);
  }
  return result;
}

void sub_1B59FE0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void), void (*a10)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a8 != 254)
  {
    a9();
    a10(a5, a6, a7, a8);
  }
}

unsigned char *storeEnumTagSinglePayload for AnimationModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59FE21CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModifier.CodingKeys()
{
  return &type metadata for AnimationModifier.CodingKeys;
}

unint64_t sub_1B59FE258()
{
  unint64_t result = qword_1E9D65F48;
  if (!qword_1E9D65F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F48);
  }
  return result;
}

unint64_t sub_1B59FE2B0()
{
  unint64_t result = qword_1E9D65F50;
  if (!qword_1E9D65F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F50);
  }
  return result;
}

unint64_t sub_1B59FE308()
{
  unint64_t result = qword_1E9D65F58;
  if (!qword_1E9D65F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F58);
  }
  return result;
}

uint64_t sub_1B59FE35C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL;
  if (v3 || (sub_1B5A1C678() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

ValueMetadata *type metadata accessor for FormStyleModifier()
{
  return &type metadata for FormStyleModifier;
}

uint64_t sub_1B59FE458(char a1)
{
  return *(void *)&aAutomaticolumn_0[8 * a1];
}

uint64_t sub_1B59FE478(char *a1, char *a2)
{
  return sub_1B59EEBB0(*a1, *a2);
}

uint64_t sub_1B59FE484()
{
  return sub_1B59F2434();
}

uint64_t sub_1B59FE48C()
{
  return sub_1B59F409C();
}

uint64_t sub_1B59FE494()
{
  return sub_1B59F5D74();
}

uint64_t sub_1B59FE49C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B59FEE90();
  *a1 = result;
  return result;
}

uint64_t sub_1B59FE4CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B59FE458(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B59FE4F8()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B59FE558()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B59FE5A8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B59FE5FC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B59FE654(uint64_t a1)
{
  unint64_t v2 = sub_1B59FEA14();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59FE690(uint64_t a1)
{
  unint64_t v2 = sub_1B59FEA14();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59FE6CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65F68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59FEA14();
  sub_1B5A1C838();
  if (!v2)
  {
    sub_1B59FEA68();
    sub_1B5A1C5D8();
    if (v16)
    {
      if (v16 == 1)
      {
        uint64_t v12 = sub_1B5A1A788();
        uint64_t v13 = sub_1B59FEABC(&qword_1E9D65F88, MEMORY[0x1E4F3CCB8]);
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11);
        sub_1B5A1BD08();
      }
      else
      {
        uint64_t v12 = sub_1B5A1A7B8();
        uint64_t v13 = sub_1B59FEABC(&qword_1E9D65F80, MEMORY[0x1E4F3CCE8]);
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11);
        sub_1B5A1BD18();
      }
    }
    else
    {
      uint64_t v12 = sub_1B5A1AA68();
      uint64_t v13 = sub_1B59FEABC(&qword_1E9D65F90, MEMORY[0x1E4F3D400]);
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11);
      sub_1B5A1AA58();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1B5908BE8(&v11, (uint64_t)v14);
    long long v9 = v14[1];
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v9;
    *(void *)(a2 + 32) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59FE980@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59FE6CC(a1, a2);
}

unint64_t sub_1B59FE998(uint64_t a1)
{
  unint64_t result = sub_1B59FE9C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B59FE9C0()
{
  unint64_t result = qword_1E9D65F60;
  if (!qword_1E9D65F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F60);
  }
  return result;
}

unint64_t sub_1B59FEA14()
{
  unint64_t result = qword_1E9D65F70;
  if (!qword_1E9D65F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F70);
  }
  return result;
}

unint64_t sub_1B59FEA68()
{
  unint64_t result = qword_1E9D65F78;
  if (!qword_1E9D65F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F78);
  }
  return result;
}

uint64_t sub_1B59FEABC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormStyleString(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B59FEBD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormStyleString()
{
  return &type metadata for FormStyleString;
}

unsigned char *storeEnumTagSinglePayload for FormStyleModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59FECA4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormStyleModifier.CodingKeys()
{
  return &type metadata for FormStyleModifier.CodingKeys;
}

unint64_t sub_1B59FECE0()
{
  unint64_t result = qword_1E9D65F98;
  if (!qword_1E9D65F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65F98);
  }
  return result;
}

unint64_t sub_1B59FED38()
{
  unint64_t result = qword_1E9D65FA0;
  if (!qword_1E9D65FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65FA0);
  }
  return result;
}

unint64_t sub_1B59FED90()
{
  unint64_t result = qword_1E9D65FA8;
  if (!qword_1E9D65FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65FA8);
  }
  return result;
}

unint64_t sub_1B59FEDE8()
{
  unint64_t result = qword_1E9D65FB0;
  if (!qword_1E9D65FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65FB0);
  }
  return result;
}

unint64_t sub_1B59FEE3C()
{
  unint64_t result = qword_1E9D65FB8;
  if (!qword_1E9D65FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65FB8);
  }
  return result;
}

uint64_t sub_1B59FEE90()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t destroy for LiftUIViewResponse(void *a1)
{
  uint64_t result = a1[1];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[8]) {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 5));
    }
    if (a1[13]) {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 10));
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for LiftUIViewResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    unsigned int v6 = (_OWORD *)(a2 + 40);
    uint64_t v7 = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40, v7);
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *v6;
      *(_OWORD *)(a1 + 56) = v13;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
    }
    uint64_t v14 = (_OWORD *)(a1 + 80);
    uint64_t v15 = (_OWORD *)(a2 + 80);
    uint64_t v16 = *(void *)(a2 + 104);
    if (v16)
    {
      uint64_t v17 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v16;
      *(void *)(a1 + 112) = v17;
      (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v14, v15);
    }
    else
    {
      long long v18 = *(_OWORD *)(a2 + 96);
      *uint64_t v14 = *v15;
      *(_OWORD *)(a1 + 96) = v18;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
    }
    uint64_t v19 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v19;
    uint64_t v20 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v20;
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v9;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
  }
  return a1;
}

uint64_t assignWithCopy for LiftUIViewResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 64);
      if (*(void *)(a1 + 64))
      {
        if (v5)
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
          goto LABEL_15;
        }
        __swift_destroy_boxed_opaque_existential_1(a1 + 40);
      }
      else if (v5)
      {
        *(void *)(a1 + 64) = v5;
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
        goto LABEL_15;
      }
      long long v23 = *(_OWORD *)(a2 + 40);
      long long v24 = *(_OWORD *)(a2 + 56);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(_OWORD *)(a1 + 40) = v23;
      *(_OWORD *)(a1 + 56) = v24;
LABEL_15:
      uint64_t v25 = *(void *)(a2 + 104);
      if (*(void *)(a1 + 104))
      {
        if (v25)
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
LABEL_25:
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          swift_retain();
          swift_release();
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          swift_retain();
          swift_release();
          *(void *)(a1 + 144) = *(void *)(a2 + 144);
          return a1;
        }
        __swift_destroy_boxed_opaque_existential_1(a1 + 80);
      }
      else if (v25)
      {
        *(void *)(a1 + 104) = v25;
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        (**(void (***)(uint64_t, uint64_t))(v25 - 8))(a1 + 80, a2 + 80);
        goto LABEL_25;
      }
      long long v31 = *(_OWORD *)(a2 + 80);
      long long v32 = *(_OWORD *)(a2 + 96);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(_OWORD *)(a1 + 80) = v31;
      *(_OWORD *)(a1 + 96) = v32;
      goto LABEL_25;
    }
    sub_1B591CC10(a1);
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    long long v10 = *(_OWORD *)(a2 + 80);
    long long v12 = *(_OWORD *)(a2 + 32);
    long long v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 48) = v11;
    long long v14 = *(_OWORD *)(a2 + 112);
    long long v13 = *(_OWORD *)(a2 + 128);
    long long v15 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v14;
    *(_OWORD *)(a1 + 128) = v13;
    *(_OWORD *)(a1 + 96) = v15;
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    unsigned int v6 = (_OWORD *)(a1 + 40);
    uint64_t v7 = (long long *)(a2 + 40);
    uint64_t v8 = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 64) = v8;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40, v8);
    }
    else
    {
      long long v26 = *v7;
      long long v27 = *(_OWORD *)(a2 + 56);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *unsigned int v6 = v26;
      *(_OWORD *)(a1 + 56) = v27;
    }
    uint64_t v28 = (_OWORD *)(a1 + 80);
    char v29 = (long long *)(a2 + 80);
    uint64_t v30 = *(void *)(a2 + 104);
    if (v30)
    {
      *(void *)(a1 + 104) = v30;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      (**(void (***)(_OWORD *, long long *))(v30 - 8))(v28, v29);
    }
    else
    {
      long long v33 = *v29;
      long long v34 = *(_OWORD *)(a2 + 96);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *uint64_t v28 = v33;
      *(_OWORD *)(a1 + 96) = v34;
    }
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    long long v17 = *(_OWORD *)(a2 + 32);
    long long v18 = *(_OWORD *)(a2 + 48);
    long long v19 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v19;
    *(_OWORD *)(a1 + 32) = v17;
    *(_OWORD *)(a1 + 48) = v18;
    long long v20 = *(_OWORD *)(a2 + 96);
    long long v21 = *(_OWORD *)(a2 + 112);
    long long v22 = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v21;
    *(_OWORD *)(a1 + 128) = v22;
    *(_OWORD *)(a1 + 96) = v20;
  }
  return a1;
}

uint64_t assignWithTake for LiftUIViewResponse(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_9;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    sub_1B591CC10(a1);
LABEL_9:
    long long v9 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v9;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (*(void *)(a1 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiftUIViewResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 152)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LiftUIViewResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 152) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiftUIViewResponse()
{
  return &type metadata for LiftUIViewResponse;
}

void *initializeBufferWithCopyOfBuffer for LiftUIDataResponse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LiftUIDataResponse()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for LiftUIDataResponse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LiftUIDataResponse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LiftUIDataResponse(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LiftUIDataResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiftUIDataResponse()
{
  return &type metadata for LiftUIDataResponse;
}

uint64_t sub_1B59FF7C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65FD8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59FFD50();
  sub_1B5A1C838();
  if (!v2)
  {
    uint64_t v8 = v18;
    sub_1B5914100();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1B59FFDA4((uint64_t)&v15, (uint64_t)v16);
    long long v9 = v16[7];
    *(_OWORD *)(v8 + 96) = v16[6];
    *(_OWORD *)(v8 + 112) = v9;
    *(_OWORD *)(v8 + 128) = v16[8];
    *(void *)(v8 + 144) = v17;
    long long v10 = v16[3];
    *(_OWORD *)(v8 + 32) = v16[2];
    *(_OWORD *)(v8 + 48) = v10;
    long long v11 = v16[5];
    *(_OWORD *)(v8 + 64) = v16[4];
    *(_OWORD *)(v8 + 80) = v11;
    long long v12 = v16[1];
    *(_OWORD *)uint64_t v8 = v16[0];
    *(_OWORD *)(v8 + 16) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B59FF978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5A00124(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B59FF9A4(uint64_t a1)
{
  unint64_t v2 = sub_1B59FFC80();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59FF9E0(uint64_t a1)
{
  unint64_t v2 = sub_1B59FFC80();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B59FFA1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B59FFB08(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B59FFA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5A0019C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B59FFA78(uint64_t a1)
{
  unint64_t v2 = sub_1B59FFD50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B59FFAB4(uint64_t a1)
{
  unint64_t v2 = sub_1B59FFD50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B59FFAF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B59FF7C8(a1, a2);
}

void *sub_1B59FFB08(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D65FC0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B59FFC80();
  sub_1B5A1C838();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64308);
    sub_1B59FFCD4();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    long long v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1B59FFC80()
{
  unint64_t result = qword_1E9D65FC8;
  if (!qword_1E9D65FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65FC8);
  }
  return result;
}

unint64_t sub_1B59FFCD4()
{
  unint64_t result = qword_1E9D65FD0;
  if (!qword_1E9D65FD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64308);
    sub_1B5958CA4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65FD0);
  }
  return result;
}

unint64_t sub_1B59FFD50()
{
  unint64_t result = qword_1E9D65FE0;
  if (!qword_1E9D65FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65FE0);
  }
  return result;
}

uint64_t sub_1B59FFDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for LiftUIViewResponse.CodingKeys()
{
  return &type metadata for LiftUIViewResponse.CodingKeys;
}

unsigned char *_s6LiftUI18LiftUIViewResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B59FFEBCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiftUIDataResponse.CodingKeys()
{
  return &type metadata for LiftUIDataResponse.CodingKeys;
}

unint64_t sub_1B59FFEF8()
{
  unint64_t result = qword_1E9D65FE8;
  if (!qword_1E9D65FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65FE8);
  }
  return result;
}

unint64_t sub_1B59FFF50()
{
  unint64_t result = qword_1E9D65FF0;
  if (!qword_1E9D65FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65FF0);
  }
  return result;
}

unint64_t sub_1B59FFFA8()
{
  unint64_t result = qword_1E9D65FF8;
  if (!qword_1E9D65FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D65FF8);
  }
  return result;
}

unint64_t sub_1B5A00000()
{
  unint64_t result = qword_1E9D66000;
  if (!qword_1E9D66000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66000);
  }
  return result;
}

unint64_t sub_1B5A00058()
{
  unint64_t result = qword_1E9D66008;
  if (!qword_1E9D66008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66008);
  }
  return result;
}

unint64_t sub_1B5A000B0()
{
  unint64_t result = qword_1E9D66010;
  if (!qword_1E9D66010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66010);
  }
  return result;
}

uint64_t sub_1B5A00104()
{
  return 1635017060;
}

uint64_t sub_1B5A00114()
{
  return 2003134838;
}

uint64_t sub_1B5A00124(uint64_t a1, uint64_t a2)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B5A0019C(uint64_t a1, uint64_t a2)
{
  if (a1 == 2003134838 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B5A00218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1B5A0022C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1B5A00240(char a1)
{
  return *(void *)&aBlue_1[8 * a1];
}

uint64_t sub_1B5A00260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5A092D0(v2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ColorDecodingError);
  swift_bridgeObjectRelease();
  uint64_t v6 = &v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48)];
  uint64_t v7 = sub_1B5A1C3F8();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t sub_1B5A0037C(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1B5A00240(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B5A00240(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B5A1C678();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B5A00408()
{
  char v1 = *v0;
  sub_1B5A1C7A8();
  sub_1B5A00240(v1);
  sub_1B5A1BF88();
  swift_bridgeObjectRelease();
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5A0046C()
{
  sub_1B5A00240(*v0);
  sub_1B5A1BF88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5A004C0()
{
  char v1 = *v0;
  sub_1B5A1C7A8();
  sub_1B5A00240(v1);
  sub_1B5A1BF88();
  swift_bridgeObjectRelease();
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5A00520@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A07BB8();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A00550@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A00240(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A0057C()
{
  return sub_1B5A1C078();
}

uint64_t sub_1B5A005DC()
{
  return sub_1B5A1C068();
}

uint64_t sub_1B5A0062C(char a1)
{
  uint64_t v2 = sub_1B5A1B7D8();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  switch(a1)
  {
    case 1:
      uint64_t result = MEMORY[0x1F40FC3C0](v3);
      break;
    case 2:
      uint64_t result = MEMORY[0x1F40FC3E0](v3);
      break;
    case 3:
      uint64_t result = MEMORY[0x1F40FC400](v3);
      break;
    case 4:
      uint64_t result = MEMORY[0x1F40FC408](v3);
      break;
    case 5:
      uint64_t result = MEMORY[0x1F40FC3A0](v3);
      break;
    case 6:
      uint64_t result = MEMORY[0x1F40FC420](v3);
      break;
    case 7:
      uint64_t result = sub_1B5A1B7E8();
      break;
    case 8:
      uint64_t result = MEMORY[0x1F40FC3A8](v3);
      break;
    case 9:
      uint64_t result = MEMORY[0x1F40FC398](v3);
      break;
    case 10:
      uint64_t result = MEMORY[0x1F40FC428](v3);
      break;
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      uint64_t result = MEMORY[0x1F40FC380](v3);
      break;
    case 17:
      uint64_t result = MEMORY[0x1F40FC3B8](v3);
      break;
    case 18:
      uint64_t result = MEMORY[0x1F40FC370](v3);
      break;
    case 19:
    case 20:
      (*(void (**)(char *, void))(v5 + 104))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F3EB10]);
      uint64_t result = sub_1B5A1B908();
      break;
    case 21:
      id v6 = objc_msgSend(self, sel_magentaColor);
      JUMPOUT(0x1BA9A2FB0);
    case 22:
      uint64_t result = MEMORY[0x1F40FC3E8](v3);
      break;
    case 23:
      uint64_t result = MEMORY[0x1F40FC498](v3);
      break;
    case 24:
      uint64_t result = MEMORY[0x1F40FC450](v3);
      break;
    default:
      uint64_t result = MEMORY[0x1F40FC368](v3);
      break;
  }
  return result;
}

uint64_t sub_1B5A00A10()
{
  return sub_1B5A0062C(*v0);
}

void sub_1B5A00A18(char a1)
{
  switch(a1)
  {
    case 1:
      id v1 = objc_msgSend(self, sel_systemBrownColor);
      break;
    case 2:
      id v1 = objc_msgSend(self, sel_systemGreenColor);
      break;
    case 3:
      id v1 = objc_msgSend(self, sel_systemIndigoColor);
      break;
    case 4:
      id v1 = objc_msgSend(self, sel_systemOrangeColor);
      break;
    case 5:
      id v1 = objc_msgSend(self, sel_systemPinkColor);
      break;
    case 6:
      id v1 = objc_msgSend(self, sel_systemPurpleColor);
      break;
    case 7:
      id v1 = objc_msgSend(self, sel_systemRedColor);
      break;
    case 8:
      id v1 = objc_msgSend(self, sel_systemTealColor);
      break;
    case 9:
      id v1 = objc_msgSend(self, sel_systemMintColor);
      break;
    case 10:
      id v1 = objc_msgSend(self, sel_systemYellowColor);
      break;
    case 11:
      id v1 = objc_msgSend(self, sel_systemGrayColor);
      break;
    case 12:
      id v1 = objc_msgSend(self, sel_systemGray2Color);
      break;
    case 13:
      id v1 = objc_msgSend(self, sel_systemGray3Color);
      break;
    case 14:
      id v1 = objc_msgSend(self, sel_systemGray4Color);
      break;
    case 15:
      id v1 = objc_msgSend(self, sel_systemGray5Color);
      break;
    case 16:
      id v1 = objc_msgSend(self, sel_systemGray6Color);
      break;
    case 17:
      JUMPOUT(0x1B5A1B858);
    case 18:
      id v1 = objc_msgSend(self, sel_systemCyanColor);
      break;
    case 19:
      id v1 = objc_msgSend(self, sel_darkGrayColor);
      break;
    case 20:
      id v1 = objc_msgSend(self, sel_lightGrayColor);
      break;
    case 21:
      id v1 = objc_msgSend(self, sel_magentaColor);
      break;
    case 22:
      JUMPOUT(0x1B5A1B888);
    case 23:
      JUMPOUT(0x1B5A1B8E8);
    case 24:
      JUMPOUT(0x1B5A1B8D8);
    default:
      id v1 = objc_msgSend(self, sel_systemBlueColor);
      break;
  }
  id v2 = v1;
  JUMPOUT(0x1BA9A2FB0);
}

void sub_1B5A00DC4()
{
  sub_1B5A00A18(*v0);
}

unint64_t sub_1B5A00DCC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B5A07AC0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B5A00DF8(uint64_t a1)
{
  uint64_t v19 = sub_1B5A1B7D8();
  uint64_t v3 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)v1;
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v16 = *(void *)(v1 + 40);
  uint64_t v17 = v9;
  unsigned int v11 = *(unsigned __int8 *)(v1 + 56);
  char v12 = *(unsigned char *)(v1 + 24);
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  uint64_t v22 = v8;
  char v23 = v12;
  sub_1B591DF88(v6, v7, v8, v12);
  uint64_t v18 = a1;
  sub_1B5963534(a1);
  sub_1B591DF0C(v6, v7, v8, v12);
  if (v11 <= 0xFD)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v16;
    uint64_t v20 = v17;
    uint64_t v21 = v16;
    uint64_t v22 = v10;
    char v23 = v11;
    sub_1B591DF88(v17, v16, v10, v11);
    sub_1B5963534(v18);
    sub_1B59325C0(v13, v14, v10, v11);
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3EB10], v19);
  return sub_1B5A1B908();
}

uint64_t sub_1B5A00FE8(char a1)
{
  if (a1) {
    return 0x7974696361706FLL;
  }
  else {
    return 0x6574696877;
  }
}

uint64_t sub_1B5A0101C(char *a1, char *a2)
{
  return sub_1B59ECA74(*a1, *a2);
}

uint64_t sub_1B5A01028()
{
  return sub_1B59F24A0();
}

uint64_t sub_1B5A01030()
{
  return sub_1B59F2C38();
}

uint64_t sub_1B5A01038()
{
  return sub_1B59F7604();
}

uint64_t sub_1B5A01040@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5A0104C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A00FE8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A01078()
{
  return sub_1B5A00FE8(*v0);
}

uint64_t sub_1B5A01080@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B5A0108C(uint64_t a1)
{
  unint64_t v2 = sub_1B5A0788C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A010C8(uint64_t a1)
{
  unint64_t v2 = sub_1B5A0788C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5A01104(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D661C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A0788C();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v30 = 0;
    sub_1B59358E8();
    sub_1B5A1C5D8();
    uint64_t v9 = v26;
    char v30 = 1;
    uint64_t v23 = v27;
    uint64_t v24 = v25;
    int v29 = v28;
    sub_1B591DF88(v25, v26, v27, v28);
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v25;
    uint64_t v21 = v26;
    uint64_t v22 = v25;
    uint64_t v11 = v27;
    uint64_t v20 = v27;
    HIDWORD(v19) = v28;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v14 = v29;
    sub_1B591DF88(v24, v9, v23, v29);
    uint64_t v15 = v10;
    uint64_t v16 = v21;
    uint64_t v17 = v11;
    LOBYTE(v11) = BYTE4(v19);
    sub_1B591DF74(v15, v21, v17, SBYTE4(v19));
    sub_1B591DF0C(v13, v9, v12, v14);
    *(void *)a2 = v13;
    *(void *)(a2 + 8) = v9;
    *(void *)(a2 + 16) = v12;
    *(unsigned char *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v22;
    *(void *)(a2 + 40) = v16;
    uint64_t v18 = v20;
    *(void *)(a2 + 48) = v20;
    *(unsigned char *)(a2 + 56) = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B591DF0C(v13, v9, v12, v14);
    sub_1B59325C0(v22, v21, v18, v11);
  }
}

void sub_1B5A013D4(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1B5A013EC(uint64_t a1)
{
  uint64_t v3 = sub_1B5A1B7D8();
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v45 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)v1;
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  char v11 = *(unsigned char *)(v1 + 56);
  uint64_t v12 = *(void *)(v1 + 64);
  uint64_t v50 = *(void *)(v1 + 72);
  uint64_t v51 = v12;
  uint64_t v49 = *(void *)(v1 + 80);
  int v48 = *(unsigned __int8 *)(v1 + 88);
  uint64_t v13 = *(void *)(v1 + 96);
  uint64_t v41 = *(void *)(v1 + 104);
  uint64_t v42 = v13;
  uint64_t v40 = *(void *)(v1 + 112);
  unsigned int v44 = *(unsigned __int8 *)(v1 + 120);
  char v14 = *(unsigned char *)(v1 + 24);
  uint64_t v52 = v5;
  uint64_t v53 = v6;
  uint64_t v54 = v7;
  char v55 = v14;
  sub_1B591DF88(v5, v6, v7, v14);
  uint64_t v43 = sub_1B5963534(a1);
  char v16 = v15;
  sub_1B591DF0C(v5, v6, v7, v14);
  if (v16) {
    goto LABEL_9;
  }
  uint64_t v52 = v9;
  uint64_t v53 = v8;
  uint64_t v54 = v10;
  char v55 = v11;
  sub_1B591DF88(v9, v8, v10, v11);
  uint64_t v17 = sub_1B5963534(a1);
  char v19 = v18;
  sub_1B591DF0C(v9, v8, v10, v11);
  if (v19) {
    goto LABEL_9;
  }
  uint64_t v21 = v50;
  uint64_t v20 = v51;
  uint64_t v52 = v51;
  uint64_t v53 = v50;
  uint64_t v22 = v49;
  uint64_t v54 = v49;
  char v23 = v48;
  char v55 = v48;
  sub_1B591DF88(v51, v50, v49, v48);
  uint64_t v24 = sub_1B5963534(a1);
  char v26 = v25;
  sub_1B591DF0C(v20, v21, v22, v23);
  if (v26)
  {
LABEL_9:
    JUMPOUT(0x1B5A1B888);
  }
  double v27 = *(double *)&v43;
  double v28 = *(double *)&v24;
  double v29 = 1.0;
  char v30 = v44;
  if (v44 <= 0xFD)
  {
    uint64_t v32 = v41;
    uint64_t v31 = v42;
    uint64_t v52 = v42;
    uint64_t v53 = v41;
    uint64_t v33 = v40;
    uint64_t v54 = v40;
    char v55 = v44;
    sub_1B591DF88(v42, v41, v40, v44);
    double v34 = COERCE_DOUBLE(sub_1B5963534(a1));
    char v36 = v35;
    sub_1B59325C0(v31, v32, v33, v30);
    if (v36) {
      double v29 = 1.0;
    }
    else {
      double v29 = v34;
    }
  }
  uint64_t v37 = v45;
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v45, *MEMORY[0x1E4F3EB10], v47);
  return MEMORY[0x1BA9A30F0](v37, v27, *(double *)&v17, v28, v29);
}

uint64_t sub_1B5A016F0(char a1)
{
  uint64_t result = 114;
  switch(a1)
  {
    case 1:
      uint64_t result = 103;
      break;
    case 2:
      uint64_t result = 98;
      break;
    case 3:
      uint64_t result = 0x7974696361706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B5A01758(char a1)
{
  uint64_t result = 114;
  switch(a1)
  {
    case 1:
      uint64_t result = 103;
      break;
    case 2:
      uint64_t result = 98;
      break;
    case 3:
      uint64_t result = 0x7974696361706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B5A017C0(char *a1, char *a2)
{
  return sub_1B59EC938(*a1, *a2);
}

uint64_t sub_1B5A017CC()
{
  return sub_1B59F2520();
}

uint64_t sub_1B5A017D4()
{
  return sub_1B59F2B9C();
}

uint64_t sub_1B5A017DC()
{
  return sub_1B59F7680();
}

uint64_t sub_1B5A017E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A07C0C();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A01814@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A016F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A01840()
{
  return sub_1B5A01758(*v0);
}

uint64_t sub_1B5A01848@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A07C0C();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A01870(uint64_t a1)
{
  unint64_t v2 = sub_1B5A078E0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A018AC(uint64_t a1)
{
  unint64_t v2 = sub_1B5A078E0();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5A018E8(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D661D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1B5A078E0();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  }
  else
  {
    uint64_t v43 = a2;
    uint64_t v44 = v6;
    LOBYTE(v46) = 0;
    sub_1B59358E8();
    sub_1B5A1C5D8();
    uint64_t v10 = v53;
    int v11 = v56;
    LOBYTE(v46) = 1;
    uint64_t v42 = v54;
    uint64_t v12 = v55;
    sub_1B591DF88(v53, v54, v55, v56);
    sub_1B5A1C5D8();
    int v35 = v11;
    uint64_t v36 = v12;
    uint64_t v34 = v10;
    uint64_t v13 = v53;
    uint64_t v14 = v55;
    LODWORD(v10) = v56;
    LOBYTE(v46) = 2;
    uint64_t v40 = v54;
    sub_1B591DF88(v53, v54, v55, v56);
    uint64_t v33 = 0;
    sub_1B5A1C5D8();
    int v72 = v10;
    uint64_t v37 = v13;
    uint64_t v38 = v14;
    uint64_t v15 = v53;
    uint64_t v16 = v54;
    char v73 = 3;
    uint64_t v41 = v55;
    int v32 = v56;
    sub_1B591DF88(v53, v54, v55, v56);
    sub_1B5A1C5B8();
    uint64_t v39 = v16;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v5);
    uint64_t v33 = *((void *)&v69 + 1);
    uint64_t v44 = v69;
    uint64_t v31 = v70;
    int v30 = v71;
    uint64_t v17 = v34;
    uint64_t v18 = v16;
    uint64_t v19 = v41;
    *(void *)&long long v46 = v34;
    *((void *)&v46 + 1) = v42;
    uint64_t v20 = v37;
    *(void *)&long long v47 = v36;
    BYTE8(v47) = v35;
    *(void *)&long long v48 = v37;
    *((void *)&v48 + 1) = v40;
    *(void *)&long long v49 = v38;
    char v21 = v72;
    BYTE8(v49) = v72;
    *(void *)&long long v50 = v15;
    *((void *)&v50 + 1) = v16;
    *(void *)&long long v51 = v41;
    LOBYTE(v16) = v32;
    BYTE8(v51) = v32;
    v52[0] = v69;
    *(void *)&v52[1] = v70;
    BYTE8(v52[1]) = v71;
    sub_1B5A07934((uint64_t)&v46, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591DF88, (void (*)(uint64_t, uint64_t, uint64_t, void))sub_1B591DF74);
    sub_1B591DF0C(v15, v18, v19, v16);
    uint64_t v22 = v40;
    sub_1B591DF0C(v20, v40, v38, v21);
    uint64_t v23 = v17;
    uint64_t v24 = v36;
    LOBYTE(v19) = v35;
    sub_1B591DF0C(v17, v42, v36, v35);
    long long v25 = v51;
    char v26 = v43;
    v43[4] = v50;
    void v26[5] = v25;
    v26[6] = v52[0];
    *(_OWORD *)((char *)v26 + 105) = *(_OWORD *)((char *)v52 + 9);
    long long v27 = v47;
    *char v26 = v46;
    v26[1] = v27;
    long long v28 = v49;
    uint64_t v26[2] = v48;
    void v26[3] = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    uint64_t v53 = v23;
    uint64_t v54 = v42;
    uint64_t v55 = v24;
    unsigned __int8 v56 = v19;
    uint64_t v57 = v20;
    uint64_t v58 = v22;
    uint64_t v59 = v38;
    char v60 = v72;
    uint64_t v61 = v15;
    uint64_t v62 = v39;
    uint64_t v63 = v41;
    char v64 = v32;
    uint64_t v65 = v44;
    uint64_t v66 = v33;
    uint64_t v67 = v31;
    char v68 = v30;
    sub_1B5A07934((uint64_t)&v53, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591DF0C, (void (*)(uint64_t, uint64_t, uint64_t, void))sub_1B59325C0);
  }
}

void sub_1B5A01ED0(void *a1@<X0>, _OWORD *a2@<X8>)
{
}

uint64_t sub_1B5A01EE8(char a1)
{
  if (a1) {
    return 0x656C646E7562;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1B5A01F14(char *a1, char *a2)
{
  return sub_1B59EFBC8(*a1, *a2);
}

uint64_t sub_1B5A01F20()
{
  return sub_1B59F25D0();
}

uint64_t sub_1B5A01F28()
{
  return sub_1B59F4A48();
}

uint64_t sub_1B5A01F30()
{
  return sub_1B59F5280();
}

uint64_t sub_1B5A01F38@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5A01F44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A01EE8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A01F70()
{
  return sub_1B5A01EE8(*v0);
}

uint64_t sub_1B5A01F78@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B5A01F84(uint64_t a1)
{
  unint64_t v2 = sub_1B5A07A18();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A01FC0(uint64_t a1)
{
  unint64_t v2 = sub_1B5A07A18();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A01FFC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  id v3 = (id)v0[3];
  swift_bridgeObjectRetain();
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)sub_1B5A1BEE8();
    swift_bridgeObjectRelease();
    id v3 = objc_msgSend(self, sel_bundleWithIdentifier_, v4);
  }
  return MEMORY[0x1F40FC4C8](v1, v2, v3);
}

uint64_t sub_1B5A020AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B5A07178(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

void sub_1B5A020DC()
{
  sub_1B59311FC(*v0);
  JUMPOUT(0x1BA9A2FB0);
}

unint64_t sub_1B5A02108@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B5A07380(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B5A02134@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F00);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v9 = sub_1B590C798();
  sub_1B5A1C838();
  if (!v2)
  {
    uint64_t v42 = v5;
    uint64_t v10 = sub_1B5A1C5E8();
    if (*(void *)(v10 + 16))
    {
      uint64_t v12 = *(void *)(v10 + 32);
      uint64_t v11 = *(void *)(v10 + 40);
      uint64_t v41 = *(void *)(v10 + 48);
      char v13 = *(unsigned char *)(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      BOOL v14 = v12 == 1701667182 && v11 == 0xE400000000000000;
      if (v14 || (sub_1B5A1C678() & 1) != 0)
      {
        uint64_t v46 = v12;
        uint64_t v47 = v11;
        uint64_t v48 = v41;
        LOBYTE(v49) = v13;
        sub_1B5A1C588();
        swift_bridgeObjectRelease();
        __swift_project_boxed_opaque_existential_1(v50, v51);
        sub_1B5A1C818();
        __swift_project_boxed_opaque_existential_1(&v46, v49);
        sub_1B5A07748();
        sub_1B5A1C6C8();
        char v20 = v45;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
        uint64_t v53 = &type metadata for NamedStandardColor;
        unint64_t v21 = sub_1B5A077F0();
LABEL_25:
        unint64_t v54 = v21;
        LOBYTE(v52) = v20;
LABEL_26:
        uint64_t v19 = v42;
        goto LABEL_27;
      }
      BOOL v15 = v12 == 0x6D6574737973 && v11 == 0xE600000000000000;
      if (v15 || (sub_1B5A1C678() & 1) != 0)
      {
        uint64_t v46 = v12;
        uint64_t v47 = v11;
        uint64_t v48 = v41;
        LOBYTE(v49) = v13;
        sub_1B5A1C588();
        uint64_t v16 = v43;
        swift_bridgeObjectRelease();
        __swift_project_boxed_opaque_existential_1(v50, v51);
        sub_1B5A1C818();
        __swift_project_boxed_opaque_existential_1(&v46, v49);
        sub_1B5A07748();
        sub_1B5A1C6C8();
        char v23 = v45;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
        uint64_t v53 = &type metadata for NamedSystemColor;
        unint64_t v54 = sub_1B5A0779C();
        LOBYTE(v52) = v23;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v4);
        sub_1B5908BE8(&v52, (uint64_t)v55);
LABEL_28:
        long long v22 = v55[1];
        *(_OWORD *)uint64_t v16 = v55[0];
        *((_OWORD *)v16 + 1) = v22;
        *((void *)v16 + 4) = v56;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      }
      BOOL v18 = v12 == 1869508461 && v11 == 0xE400000000000000;
      if (v18 || (sub_1B5A1C678() & 1) != 0)
      {
        uint64_t v46 = v12;
        uint64_t v47 = v11;
        uint64_t v48 = v41;
        LOBYTE(v49) = v13;
        sub_1B5A1C588();
        swift_bridgeObjectRelease();
        uint64_t v53 = &type metadata for MonoColor;
        unint64_t v54 = sub_1B5988B1C();
        *(void *)&long long v52 = swift_allocObject();
        sub_1B5A01104(v50, v52 + 16);
LABEL_24:
        uint64_t v19 = v42;
LABEL_27:
        (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
        sub_1B5908BE8(&v52, (uint64_t)v55);
        uint64_t v16 = v43;
        goto LABEL_28;
      }
      BOOL v24 = v12 == 6449010 && v11 == 0xE300000000000000;
      if (v24 || (sub_1B5A1C678() & 1) != 0)
      {
        uint64_t v46 = v12;
        uint64_t v47 = v11;
        uint64_t v48 = v41;
        LOBYTE(v49) = v13;
        sub_1B5A1C588();
        swift_bridgeObjectRelease();
        uint64_t v53 = &type metadata for RGBAColor;
        unint64_t v54 = sub_1B5A07624();
        *(void *)&long long v52 = swift_allocObject();
        sub_1B5A018E8(v50, (_OWORD *)(v52 + 16));
        goto LABEL_24;
      }
      BOOL v25 = v12 == 0x656C646E7562 && v11 == 0xE600000000000000;
      if (v25 || (sub_1B5A1C678() & 1) != 0)
      {
        uint64_t v46 = v12;
        uint64_t v47 = v11;
        uint64_t v48 = v41;
        LOBYTE(v49) = v13;
        sub_1B5A1C588();
        swift_bridgeObjectRelease();
        uint64_t v26 = sub_1B5A07178(v50);
        uint64_t v28 = v27;
        uint64_t v30 = v29;
        uint64_t v32 = v31;
        uint64_t v53 = &type metadata for BundleColor;
        unint64_t v54 = sub_1B5A07590();
        uint64_t v33 = (void *)swift_allocObject();
        *(void *)&long long v52 = v33;
        long long v33[2] = v26;
        v33[3] = v28;
        v33[4] = v30;
        v33[5] = v32;
        goto LABEL_26;
      }
      BOOL v34 = v12 == 0x746E656D656C65 && v11 == 0xE700000000000000;
      if (v34 || (sub_1B5A1C678() & 1) != 0)
      {
        uint64_t v46 = v12;
        uint64_t v47 = v11;
        uint64_t v48 = v41;
        LOBYTE(v49) = v13;
        sub_1B5A1C588();
        swift_bridgeObjectRelease();
        char v20 = sub_1B5A07380(v50);
        uint64_t v53 = &type metadata for ElementColor;
        unint64_t v21 = sub_1B5A0753C();
        goto LABEL_25;
      }
      type metadata accessor for ColorDecodingError();
      sub_1B5A07844(&qword_1E9D66188, (void (*)(uint64_t))type metadata accessor for ColorDecodingError);
      swift_allocError();
      uint64_t v36 = v35;
      uint64_t v43 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
      void *v36 = v12;
      v36[1] = v11;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1B5A1C578();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62F18);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
      *(void *)(inited + 56) = &type metadata for DynamicKey;
      *(void *)(inited + 64) = v9;
      uint64_t v39 = inited;
      uint64_t v40 = swift_allocObject();
      *(void *)(v39 + 32) = v40;
      *(void *)(v40 + 16) = v12;
      *(void *)(v40 + 24) = v11;
      *(void *)(v40 + 32) = v41;
      *(unsigned char *)(v40 + 40) = v13;
      *(void *)&long long v52 = v37;
      swift_bridgeObjectRetain();
      sub_1B590C844(v39);
      *(void *)&long long v52 = 0;
      *((void *)&v52 + 1) = 0xE000000000000000;
      sub_1B5A1C3A8();
      swift_bridgeObjectRelease();
      *(void *)&long long v52 = 0xD000000000000013;
      *((void *)&v52 + 1) = 0x80000001B5A33D80;
      sub_1B5A1BFA8();
      swift_bridgeObjectRelease();
      sub_1B5A1C3C8();
    }
    else
    {
      swift_bridgeObjectRelease();
      type metadata accessor for DynamicKeyError();
      sub_1B5A07844(&qword_1E9D62F40, (void (*)(uint64_t))type metadata accessor for DynamicKeyError);
      swift_allocError();
      sub_1B5A1C578();
      sub_1B5A1C3C8();
      swift_storeEnumTagMultiPayload();
    }
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
}

uint64_t sub_1B5A02BD0(char a1)
{
  if (a1) {
    return 0x6874646977;
  }
  else {
    return 0x726F6C6F63;
  }
}

uint64_t sub_1B5A02BF8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1B5A02134(a1, a2);
}

uint64_t sub_1B5A02C10(char *a1, char *a2)
{
  return sub_1B59EF29C(*a1, *a2);
}

uint64_t sub_1B5A02C1C()
{
  return sub_1B59F2648();
}

uint64_t sub_1B5A02C24()
{
  return sub_1B59F4488();
}

uint64_t sub_1B5A02C2C()
{
  return sub_1B59F5944();
}

uint64_t sub_1B5A02C34@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5A02C40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A02BD0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A02C6C()
{
  return sub_1B5A02BD0(*v0);
}

uint64_t sub_1B5A02C74@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B5A02C80(uint64_t a1)
{
  unint64_t v2 = sub_1B5A064A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A02CBC(uint64_t a1)
{
  unint64_t v2 = sub_1B5A064A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A02CF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66100);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A064A8();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  sub_1B5939638();
  sub_1B5A1C5D8();
  sub_1B5908BE8(&v10, (uint64_t)v13);
  char v17 = 1;
  sub_1B59358E8();
  sub_1B5A1C5B8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v14 = v10;
  uint64_t v15 = v11;
  char v16 = v12;
  sub_1B5A064FC((uint64_t)v13, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B5A06534((uint64_t)v13);
}

uint64_t sub_1B5A02F0C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned int v7 = *(unsigned __int8 *)(v3 + 64);
  if (v7 <= 0xFD)
  {
    uint64_t v11 = *(void *)(v3 + 40);
    uint64_t v12 = *(void *)(v3 + 48);
    uint64_t v13 = *(void *)(v3 + 56);
    sub_1B591DF88(v11, v12, v13, v7);
    sub_1B5963534(a2);
    sub_1B59325C0(v11, v12, v13, v7);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v3, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v8, v9);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D66058);
  a3[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D66060, &qword_1E9D66058);
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B5A1B6B8();
  return swift_release();
}

uint64_t sub_1B5A031C0(char a1)
{
  return *(void *)&aRadius_5[8 * a1];
}

uint64_t sub_1B5A031E0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5A02F0C(a1, a2, a3);
}

uint64_t sub_1B5A031F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A02CF8(a1, a2);
}

uint64_t sub_1B5A03210(char *a1, char *a2)
{
  return sub_1B59ED888(*a1, *a2);
}

uint64_t sub_1B5A0321C()
{
  return sub_1B59F26B8();
}

uint64_t sub_1B5A03224()
{
  return sub_1B59F34D8();
}

uint64_t sub_1B5A0322C()
{
  return sub_1B59F6ACC();
}

uint64_t sub_1B5A03234@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A0326C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A031C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A03298()
{
  return sub_1B5A031C0(*v0);
}

uint64_t sub_1B5A032A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A032D0(uint64_t a1)
{
  unint64_t v2 = sub_1B5A063EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A0330C(uint64_t a1)
{
  unint64_t v2 = sub_1B5A063EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5A03348(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D660F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A063EC();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v18 = 0;
    sub_1B59358E8();
    sub_1B5A1C5D8();
    long long v12 = v9;
    uint64_t v13 = v10;
    char v14 = v11;
    char v18 = 1;
    sub_1B5939638();
    sub_1B5A1C5D8();
    sub_1B5908BE8(&v9, (uint64_t)v15);
    char v18 = 2;
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_OWORD *)&v15[40] = v9;
    uint64_t v16 = v10;
    char v17 = v11;
    sub_1B5A06440((uint64_t)&v12, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B5A06478((uint64_t)&v12);
  }
}

uint64_t sub_1B5A035EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v50 = a1;
  uint64_t v4 = v3;
  uint64_t v49 = (uint64_t *)a3;
  uint64_t v47 = sub_1B5A1A808();
  MEMORY[0x1F4188790](v47);
  uint64_t v48 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66068);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + 8);
  uint64_t v12 = *(void *)(v3 + 16);
  char v13 = *(unsigned char *)(v3 + 24);
  *(void *)&long long v53 = *(void *)v3;
  uint64_t v10 = v53;
  *((void *)&v53 + 1) = v11;
  *(void *)&long long v54 = v12;
  BYTE8(v54) = v13;
  sub_1B591DF88(v53, v11, v12, v13);
  uint64_t v46 = a2;
  uint64_t v14 = sub_1B5963534(a2);
  char v16 = v15;
  sub_1B591DF0C(v10, v11, v12, v13);
  if (v16) {
    return sub_1B590CA38((uint64_t)v50, (uint64_t)v49);
  }
  uint64_t v44 = v9;
  uint64_t v45 = v7;
  unsigned int v17 = *(unsigned __int8 *)(v4 + 96);
  uint64_t v18 = v46;
  if (v17 <= 0xFD)
  {
    uint64_t v20 = *(void *)(v4 + 80);
    uint64_t v19 = *(void *)(v4 + 88);
    uint64_t v21 = *(void *)(v4 + 72);
    *(void *)&long long v53 = v21;
    *((void *)&v53 + 1) = v20;
    *(void *)&long long v54 = v19;
    BYTE8(v54) = v17;
    sub_1B591DF88(v21, v20, v19, v17);
    sub_1B5963534(v18);
    sub_1B59325C0(v21, v20, v19, v17);
  }
  uint64_t v22 = v50[4];
  __swift_project_boxed_opaque_existential_1(v50, v50[3]);
  char v23 = v48;
  BOOL v24 = (char *)v48 + *(int *)(v47 + 20);
  uint64_t v25 = *MEMORY[0x1E4F3D4A0];
  uint64_t v26 = sub_1B5A1AB78();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
  *char v23 = v14;
  v23[1] = v14;
  uint64_t v27 = (void *)(v4 + 32);
  uint64_t v29 = *(void *)(v4 + 56);
  uint64_t v28 = *(void *)(v4 + 64);
  __swift_project_boxed_opaque_existential_1(v27, v29);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v18, v29, v28);
  sub_1B5A1A518();
  uint64_t v31 = (uint64_t)v44;
  sub_1B5A092D0((uint64_t)v23, (uint64_t)v44, MEMORY[0x1E4F3CDB8]);
  uint64_t v32 = v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66070) + 36);
  long long v33 = v54;
  *(_OWORD *)uint64_t v32 = v53;
  *(_OWORD *)(v32 + 16) = v33;
  *(void *)(v32 + 32) = v55;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66078);
  *(void *)(v31 + *(int *)(v34 + 52)) = v30;
  *(_WORD *)(v31 + *(int *)(v34 + 56)) = 256;
  uint64_t v35 = sub_1B5A1BC48();
  uint64_t v37 = v36;
  uint64_t v38 = (uint64_t *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66080) + 36));
  uint64_t *v38 = v35;
  v38[1] = v37;
  sub_1B5A06304((uint64_t)v23);
  sub_1B5A1BC48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D66088);
  uint64_t v39 = sub_1B5A1A748();
  uint64_t v40 = v49;
  _OWORD v49[3] = v39;
  uint64_t v41 = sub_1B59095C8(&qword_1E9D66090, &qword_1E9D66088);
  uint64_t v51 = v22;
  uint64_t v52 = v41;
  v40[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v40);
  sub_1B59095C8(&qword_1E9D66098, &qword_1E9D66068);
  sub_1B5A1B708();
  return sub_1B5908FC0(v31, &qword_1E9D66068);
}

uint64_t sub_1B5A03A1C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B5A035EC(a1, a2, a3);
}

void sub_1B5A03A34(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1B5A03A4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A0557C(a1, a2);
}

uint64_t sub_1B5A03A64@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5A05698(a1, a2, MEMORY[0x1E4F3E578], a3);
}

unint64_t sub_1B5A03A90()
{
  v2[0] = 0;
  v2[1] = 0xE000000000000000;
  sub_1B5A1C3A8();
  swift_bridgeObjectRelease();
  unint64_t v3 = 0xD00000000000001ALL;
  unint64_t v4 = 0x80000001B5A33D40;
  sub_1B590CA38(v0, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64740);
  sub_1B5A1BF48();
  sub_1B5A1BFA8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  return v3;
}

uint64_t sub_1B5A03B38(char a1)
{
  return *(void *)&aPrimary_2[8 * a1];
}

uint64_t sub_1B5A03B5C(char *a1, char *a2)
{
  return sub_1B59ED584(*a1, *a2);
}

uint64_t sub_1B5A03B68()
{
  return sub_1B59F2724();
}

uint64_t sub_1B5A03B70()
{
  return sub_1B59F3310();
}

uint64_t sub_1B5A03B78()
{
  return sub_1B59F6CE4();
}

uint64_t sub_1B5A03B80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A03BB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A03B38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A03BE4()
{
  return sub_1B5A03B38(*v0);
}

uint64_t sub_1B5A03BEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A03C1C(uint64_t a1)
{
  unint64_t v2 = sub_1B5A06564();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A03C58(uint64_t a1)
{
  unint64_t v2 = sub_1B5A06564();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A03C94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66110);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A06564();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v11[0] = 0;
  sub_1B5939638();
  sub_1B5A1C5D8();
  sub_1B5908BE8(&v13, (uint64_t)v16);
  char v19 = 1;
  sub_1B5A1C5B8();
  if (v12)
  {
    sub_1B590CA38((uint64_t)v11, (uint64_t)&v13);
    sub_1B593968C((uint64_t)v11);
  }
  else
  {
    sub_1B5908FC0((uint64_t)v11, &qword_1E9D64DE0);
    long long v13 = 0u;
    long long v14 = 0u;
    uint64_t v15 = 0;
  }
  sub_1B5A065B8((uint64_t)&v13, (uint64_t)&v17);
  char v19 = 2;
  sub_1B5A1C5B8();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  if (v12)
  {
    sub_1B590CA38((uint64_t)v11, (uint64_t)&v13);
    sub_1B593968C((uint64_t)v11);
  }
  else
  {
    sub_1B5908FC0((uint64_t)v11, &qword_1E9D64DE0);
    long long v13 = 0u;
    long long v14 = 0u;
    uint64_t v15 = 0;
  }
  sub_1B5A065B8((uint64_t)&v13, (uint64_t)&v18);
  sub_1B5A06620((uint64_t)v16, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B5A06658((uint64_t)v16);
}

uint64_t sub_1B5A03FA8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1B5A045D4((uint64_t)(v3 + 5), (uint64_t)&v27);
  if (v28)
  {
    sub_1B5908BE8(&v27, (uint64_t)v30);
    sub_1B5A045D4((uint64_t)(v3 + 10), (uint64_t)&v23);
    if (v24)
    {
      sub_1B5908BE8(&v23, (uint64_t)&v27);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      uint64_t v7 = v3[3];
      uint64_t v8 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v7);
      *(void *)&long long v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, v7, v8);
      uint64_t v10 = v31;
      uint64_t v9 = v32;
      __swift_project_boxed_opaque_existential_1(v30, v31);
      uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v10, v9);
      uint64_t v11 = v28;
      uint64_t v12 = v29;
      __swift_project_boxed_opaque_existential_1(&v27, v28);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a2, v11, v12);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D660C0);
      a3[3] = sub_1B5A1A748();
      sub_1B59095C8(&qword_1E9D660C8, &qword_1E9D660C0);
      a3[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(a3);
      sub_1B5A1B4E8();
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
    }
    else
    {
      sub_1B5908FC0((uint64_t)&v23, &qword_1E9D66018);
      uint64_t v18 = a1[3];
      uint64_t v17 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v18);
      uint64_t v19 = v3[3];
      uint64_t v20 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v19);
      *(void *)&long long v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a2, v19, v20);
      uint64_t v21 = v31;
      uint64_t v22 = v32;
      __swift_project_boxed_opaque_existential_1(v30, v31);
      *(void *)&long long v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(a2, v21, v22);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D660B0);
      a3[3] = sub_1B5A1A748();
      sub_1B59095C8(&qword_1E9D660B8, &qword_1E9D660B0);
      a3[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(a3);
      MEMORY[0x1BA9A2CF0](&v27, &v23, v18, MEMORY[0x1E4F3EB98], MEMORY[0x1E4F3EB98], v17, MEMORY[0x1E4F3EB78], MEMORY[0x1E4F3EB78]);
      swift_release();
      swift_release();
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  else
  {
    sub_1B5908FC0((uint64_t)&v27, &qword_1E9D66018);
    uint64_t v13 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v14 = v3[3];
    uint64_t v15 = v3[4];
    __swift_project_boxed_opaque_existential_1(v3, v14);
    v30[0] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a2, v14, v15);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D660A0);
    a3[3] = sub_1B5A1A748();
    uint64_t v25 = v13;
    uint64_t v26 = sub_1B59095C8(&qword_1E9D660A8, &qword_1E9D660A0);
    a3[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B5A1B4D8();
    return swift_release();
  }
}

uint64_t sub_1B5A04464@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5A03FA8(a1, a2, a3);
}

uint64_t sub_1B5A0447C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A03C94(a1, a2);
}

unint64_t sub_1B5A04494()
{
  v2[0] = 0;
  v2[1] = 0xE000000000000000;
  sub_1B5A1C3A8();
  swift_bridgeObjectRelease();
  unint64_t v3 = 0xD00000000000001ALL;
  unint64_t v4 = 0x80000001B5A33D60;
  sub_1B590CA38(v0, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64740);
  sub_1B5A1BF48();
  sub_1B5A1BFA8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  sub_1B5A045D4(v0 + 40, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66018);
  sub_1B5A1BF48();
  sub_1B5A1BFA8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  sub_1B5A045D4(v0 + 80, (uint64_t)v2);
  sub_1B5A1BF48();
  sub_1B5A1BFA8();
  swift_bridgeObjectRelease();
  sub_1B5A1BFA8();
  return v3;
}

uint64_t sub_1B5A045D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for TintColorModifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = v3;
  return a1;
}

uint64_t assignWithCopy for TintColorModifier(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1B590CCCC(a1);
    char v4 = *(unsigned char *)(a2 + 40);
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = v4;
  }
  return a1;
}

_OWORD *assignWithTake for TintColorModifier(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1B590CCCC((uint64_t)a1);
    long long v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TintColorModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TintColorModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TintColorModifier()
{
  return &type metadata for TintColorModifier;
}

uint64_t initializeWithCopy for TintColorModifier.TintType(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    char v5 = 1;
  }
  else
  {
    char v5 = 0;
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
  }
  (**(void (***)(uint64_t))(v4 - 8))(a1);
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for TintColorModifier.TintType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    if (v4 == 1)
    {
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t assignWithTake for TintColorModifier.TintType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v4 == 1;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TintColorModifier.TintType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TintColorModifier.TintType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TintColorModifier.TintType()
{
  return &type metadata for TintColorModifier.TintType;
}

ValueMetadata *type metadata accessor for AccentColorModifier()
{
  return &type metadata for AccentColorModifier;
}

ValueMetadata *type metadata accessor for BackgroundColorModifier()
{
  return &type metadata for BackgroundColorModifier;
}

void destroy for RoundedBorderModifier(uint64_t a1)
{
  sub_1B591DF0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  unsigned int v2 = *(unsigned __int8 *)(a1 + 96);
  if (v2 <= 0xFD)
  {
    uint64_t v3 = *(void *)(a1 + 72);
    uint64_t v4 = *(void *)(a1 + 80);
    uint64_t v5 = *(void *)(a1 + 88);
    sub_1B591DF0C(v3, v4, v5, v2);
  }
}

uint64_t initializeWithCopy for RoundedBorderModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  long long v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 32, a2 + 32);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 96);
  if (v9 <= 0xFD)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    uint64_t v11 = *(void *)(a2 + 80);
    uint64_t v12 = *(void *)(a2 + 88);
    sub_1B591DF88(v10, v11, v12, v9);
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = v12;
    *(unsigned char *)(a1 + 96) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  return a1;
}

uint64_t assignWithCopy for RoundedBorderModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  char v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B591DF0C(v8, v9, v10, v11);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  uint64_t v12 = (_OWORD *)(a1 + 72);
  uint64_t v13 = (_OWORD *)(a2 + 72);
  unsigned int v14 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) <= 0xFDu)
  {
    if (v14 <= 0xFD)
    {
      uint64_t v20 = *(void *)(a2 + 72);
      uint64_t v21 = *(void *)(a2 + 80);
      uint64_t v22 = *(void *)(a2 + 88);
      sub_1B591DF88(v20, v21, v22, v14);
      uint64_t v23 = *(void *)(a1 + 72);
      uint64_t v24 = *(void *)(a1 + 80);
      uint64_t v25 = *(void *)(a1 + 88);
      *(void *)(a1 + 72) = v20;
      *(void *)(a1 + 80) = v21;
      *(void *)(a1 + 88) = v22;
      char v26 = *(unsigned char *)(a1 + 96);
      *(unsigned char *)(a1 + 96) = v14;
      sub_1B591DF0C(v23, v24, v25, v26);
    }
    else
    {
      sub_1B59316FC(a1 + 72);
      long long v16 = *(_OWORD *)(a2 + 81);
      *uint64_t v12 = *v13;
      *(_OWORD *)(a1 + 81) = v16;
    }
  }
  else if (v14 <= 0xFD)
  {
    uint64_t v17 = *(void *)(a2 + 72);
    uint64_t v18 = *(void *)(a2 + 80);
    uint64_t v19 = *(void *)(a2 + 88);
    sub_1B591DF88(v17, v18, v19, v14);
    *(void *)(a1 + 72) = v17;
    *(void *)(a1 + 80) = v18;
    *(void *)(a1 + 88) = v19;
    *(unsigned char *)(a1 + 96) = v14;
  }
  else
  {
    long long v15 = *v13;
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
    *uint64_t v12 = v15;
  }
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for RoundedBorderModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  char v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B591DF0C(v6, v7, v8, v9);
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  unsigned int v11 = *(unsigned __int8 *)(a1 + 96);
  if (v11 <= 0xFD)
  {
    unsigned int v12 = *(unsigned __int8 *)(a2 + 96);
    if (v12 <= 0xFD)
    {
      uint64_t v13 = *(void *)(a2 + 88);
      uint64_t v14 = *(void *)(a1 + 72);
      uint64_t v15 = *(void *)(a1 + 80);
      uint64_t v16 = *(void *)(a1 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = v13;
      *(unsigned char *)(a1 + 96) = v12;
      sub_1B591DF0C(v14, v15, v16, v11);
      return a1;
    }
    sub_1B59316FC(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoundedBorderModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 97)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoundedBorderModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoundedBorderModifier()
{
  return &type metadata for RoundedBorderModifier;
}

void destroy for BorderModifier(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  if (v2 <= 0xFD)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 56);
    sub_1B591DF0C(v3, v4, v5, v2);
  }
}

uint64_t initializeWithCopy for BorderModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  unsigned int v5 = *(unsigned __int8 *)(a2 + 64);
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 40);
    uint64_t v7 = *(void *)(a2 + 48);
    uint64_t v8 = *(void *)(a2 + 56);
    sub_1B591DF88(v6, v7, v8, v5);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = v8;
    *(unsigned char *)(a1 + 64) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  }
  return a1;
}

uint64_t assignWithCopy for BorderModifier(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  long long v4 = (_OWORD *)(a1 + 40);
  unsigned int v5 = (_OWORD *)(a2 + 40);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 40);
      uint64_t v13 = *(void *)(a2 + 48);
      uint64_t v14 = *(void *)(a2 + 56);
      sub_1B591DF88(v12, v13, v14, v6);
      uint64_t v15 = *(void *)(a1 + 40);
      uint64_t v16 = *(void *)(a1 + 48);
      uint64_t v17 = *(void *)(a1 + 56);
      *(void *)(a1 + 40) = v12;
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v14;
      char v18 = *(unsigned char *)(a1 + 64);
      *(unsigned char *)(a1 + 64) = v6;
      sub_1B591DF0C(v15, v16, v17, v18);
    }
    else
    {
      sub_1B59316FC(a1 + 40);
      long long v8 = *(_OWORD *)(a2 + 49);
      *long long v4 = *v5;
      *(_OWORD *)(a1 + 49) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 40);
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    sub_1B591DF88(v9, v10, v11, v6);
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(unsigned char *)(a1 + 64) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
    *long long v4 = v7;
  }
  return a1;
}

uint64_t assignWithTake for BorderModifier(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 <= 0xFD)
  {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 64);
    if (v6 <= 0xFD)
    {
      uint64_t v7 = *(void *)(a2 + 56);
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v9 = *(void *)(a1 + 48);
      uint64_t v10 = *(void *)(a1 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = v7;
      *(unsigned char *)(a1 + 64) = v6;
      sub_1B591DF0C(v8, v9, v10, v5);
      return a1;
    }
    sub_1B59316FC(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  return a1;
}

ValueMetadata *type metadata accessor for BorderModifier()
{
  return &type metadata for BorderModifier;
}

ValueMetadata *type metadata accessor for ForegroundColorModifier()
{
  return &type metadata for ForegroundColorModifier;
}

uint64_t destroy for ForegroundStyleModifier(uint64_t a1)
{
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (*(void *)(a1 + 64)) {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  if (*(void *)(a1 + 104))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  return result;
}

uint64_t initializeWithCopy for ForegroundStyleModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  unsigned int v5 = (_OWORD *)(a1 + 40);
  unsigned int v6 = (_OWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 64);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 56);
    *unsigned int v5 = *v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  uint64_t v10 = (_OWORD *)(a1 + 80);
  uint64_t v11 = (_OWORD *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 104);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v12;
    *(void *)(a1 + 112) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 96);
    *uint64_t v10 = *v11;
    *(_OWORD *)(a1 + 96) = v14;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  return a1;
}

uint64_t assignWithCopy for ForegroundStyleModifier(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v4 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  else if (v4)
  {
    *(void *)(a1 + 64) = v4;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 56) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 104);
  if (!*(void *)(a1 + 104))
  {
    if (v7)
    {
      *(void *)(a1 + 104) = v7;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 80, a2 + 80);
      return a1;
    }
LABEL_14:
    long long v8 = *(_OWORD *)(a2 + 80);
    long long v9 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v8;
    *(_OWORD *)(a1 + 96) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  return a1;
}

uint64_t assignWithTake for ForegroundStyleModifier(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (*(void *)(a1 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for ForegroundStyleModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForegroundStyleModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForegroundStyleModifier()
{
  return &type metadata for ForegroundStyleModifier;
}

uint64_t sub_1B5A0557C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1B5939638();
    sub_1B5A1C6C8();
    sub_1B5908BE8(&v7, (uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    long long v5 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5A0566C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5A05698(a1, a2, MEMORY[0x1E4F3E3A8], a3);
}

uint64_t sub_1B5A05698@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  uint64_t v11 = v4[3];
  uint64_t v10 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v11);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, v11, v10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E18);
  a4[3] = sub_1B5A1A748();
  sub_1B59095C8(&qword_1E9D64E20, &qword_1E9D64E18);
  a4[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a4);
  a3(v12, v8, v9);
  return swift_release();
}

uint64_t sub_1B5A057DC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5A05830@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A07B9C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B5A0585C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5A058B4(uint64_t a1)
{
  unint64_t v2 = sub_1B5A06398();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A058F0(uint64_t a1)
{
  unint64_t v2 = sub_1B5A06398();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A0592C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D660E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A06398();
  sub_1B5A1C838();
  if (!v2)
  {
    if (sub_1B5A1C5F8())
    {
      sub_1B5987488();
      sub_1B5A1C5D8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1B5908BE8(v12, (uint64_t)&v13);
      sub_1B5908BE8(&v13, (uint64_t)&v15);
      v16[24] = 0;
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1B5A1C818();
      __swift_project_boxed_opaque_existential_1(&v13, v14);
      sub_1B5939638();
      sub_1B5A1C6C8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1B5908BE8(v11, (uint64_t)v12);
      sub_1B5908BE8(v12, (uint64_t)&v15);
      v16[24] = 1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
    }
    long long v10 = *(_OWORD *)v16;
    *a2 = v15;
    a2[1] = v10;
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)&v16[9];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5A05BB8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = v3;
  sub_1B5A06360(v5, (uint64_t)v38);
  if (v39 == 1)
  {
    sub_1B5908BE8(v38, (uint64_t)v35);
    uint64_t v9 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v10 = v36;
    uint64_t v11 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    v32[0] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a2, v10, v11);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D660D0);
    a3[3] = sub_1B5A1A748();
    uint64_t v28 = v9;
    uint64_t v29 = sub_1B59095C8(&qword_1E9D660D8, &qword_1E9D660D0);
    a3[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B5A1B658();
    swift_release();
  }
  else
  {
    sub_1B5908BE8(v38, (uint64_t)v35);
    uint64_t v12 = a1[4];
    long long v13 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v14 = v36;
    uint64_t v15 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    sub_1B59C1FE0(a2, v14, v15, (uint64_t)v32);
    if (!v4)
    {
      uint64_t v16 = v33;
      uint64_t v40 = v34;
      uint64_t v17 = __swift_project_boxed_opaque_existential_1(v32, v33);
      uint64_t v26 = sub_1B5A1C2B8();
      long long v27 = &v25;
      uint64_t v18 = *(void *)(v26 - 8);
      MEMORY[0x1F4188790](v26);
      uint64_t v20 = (char *)&v25 - v19;
      uint64_t v21 = *(void *)(v16 - 8);
      uint64_t v25 = v13;
      uint64_t v22 = v21;
      (*(void (**)(char *, void *, uint64_t))(v21 + 16))((char *)&v25 - v19, v17, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v16);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D660D0);
      a3[3] = sub_1B5A1A748();
      uint64_t v23 = sub_1B59095C8(&qword_1E9D660D8, &qword_1E9D660D0);
      uint64_t v30 = v12;
      uint64_t v31 = v23;
      a3[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(a3);
      sub_1B5A1B658();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v26);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

uint64_t sub_1B5A05F70@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5A05BB8(a1, a2, a3);
}

uint64_t sub_1B5A05F88@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B5A0592C(a1, a2);
}

unint64_t sub_1B5A05FA0(uint64_t a1)
{
  unint64_t result = sub_1B5A05FC8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A05FC8()
{
  unint64_t result = qword_1E9D66020;
  if (!qword_1E9D66020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66020);
  }
  return result;
}

unint64_t sub_1B5A0601C(uint64_t a1)
{
  unint64_t result = sub_1B5A06044();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A06044()
{
  unint64_t result = qword_1E9D66028;
  if (!qword_1E9D66028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66028);
  }
  return result;
}

unint64_t sub_1B5A06098(uint64_t a1)
{
  unint64_t result = sub_1B5A060C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A060C0()
{
  unint64_t result = qword_1E9D66030;
  if (!qword_1E9D66030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66030);
  }
  return result;
}

unint64_t sub_1B5A06114(uint64_t a1)
{
  unint64_t result = sub_1B5A0613C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0613C()
{
  unint64_t result = qword_1E9D66038;
  if (!qword_1E9D66038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66038);
  }
  return result;
}

unint64_t sub_1B5A06190(uint64_t a1)
{
  unint64_t result = sub_1B5A061B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A061B8()
{
  unint64_t result = qword_1E9D66040;
  if (!qword_1E9D66040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66040);
  }
  return result;
}

unint64_t sub_1B5A0620C(uint64_t a1)
{
  unint64_t result = sub_1B5A06234();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A06234()
{
  unint64_t result = qword_1E9D66048;
  if (!qword_1E9D66048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66048);
  }
  return result;
}

unint64_t sub_1B5A06288(uint64_t a1)
{
  unint64_t result = sub_1B5A062B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A062B0()
{
  unint64_t result = qword_1E9D66050;
  if (!qword_1E9D66050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66050);
  }
  return result;
}

uint64_t sub_1B5A06304(uint64_t a1)
{
  uint64_t v2 = sub_1B5A1A808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B5A06360(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B5A06398()
{
  unint64_t result = qword_1E9D660E8;
  if (!qword_1E9D660E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D660E8);
  }
  return result;
}

unint64_t sub_1B5A063EC()
{
  unint64_t result = qword_1E9D660F8;
  if (!qword_1E9D660F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D660F8);
  }
  return result;
}

uint64_t sub_1B5A06440(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5A06478(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B5A064A8()
{
  unint64_t result = qword_1E9D66108;
  if (!qword_1E9D66108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66108);
  }
  return result;
}

uint64_t sub_1B5A064FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5A06534(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B5A06564()
{
  unint64_t result = qword_1E9D66118;
  if (!qword_1E9D66118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66118);
  }
  return result;
}

uint64_t sub_1B5A065B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5A06620(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5A06658(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for ForegroundStyleModifier.CodingKeys()
{
  return &type metadata for ForegroundStyleModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for BorderModifier.CodingKeys()
{
  return &type metadata for BorderModifier.CodingKeys;
}

unsigned char *_s6LiftUI23ForegroundStyleModifierV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A0677CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoundedBorderModifier.CodingKeys()
{
  return &type metadata for RoundedBorderModifier.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TintColorModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5A06850);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TintColorModifier.CodingKeys()
{
  return &type metadata for TintColorModifier.CodingKeys;
}

void destroy for MonoColor(uint64_t a1)
{
  sub_1B591DF0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 <= 0xFD)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    sub_1B591DF0C(v3, v4, v5, v2);
  }
}

uint64_t initializeWithCopy for MonoColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  unsigned int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a2 + 48);
    sub_1B591DF88(v9, v10, v11, v8);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  return a1;
}

uint64_t assignWithCopy for MonoColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  char v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B591DF0C(v8, v9, v10, v11);
  uint64_t v12 = (_OWORD *)(a1 + 32);
  long long v13 = (_OWORD *)(a2 + 32);
  unsigned int v14 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v14 <= 0xFD)
    {
      uint64_t v20 = *(void *)(a2 + 32);
      uint64_t v21 = *(void *)(a2 + 40);
      uint64_t v22 = *(void *)(a2 + 48);
      sub_1B591DF88(v20, v21, v22, v14);
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v24 = *(void *)(a1 + 40);
      uint64_t v25 = *(void *)(a1 + 48);
      *(void *)(a1 + 32) = v20;
      *(void *)(a1 + 40) = v21;
      *(void *)(a1 + 48) = v22;
      char v26 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v14;
      sub_1B591DF0C(v23, v24, v25, v26);
    }
    else
    {
      sub_1B59316FC(a1 + 32);
      long long v16 = *(_OWORD *)(a2 + 41);
      *uint64_t v12 = *v13;
      *(_OWORD *)(a1 + 41) = v16;
    }
  }
  else if (v14 <= 0xFD)
  {
    uint64_t v17 = *(void *)(a2 + 32);
    uint64_t v18 = *(void *)(a2 + 40);
    uint64_t v19 = *(void *)(a2 + 48);
    sub_1B591DF88(v17, v18, v19, v14);
    *(void *)(a1 + 32) = v17;
    *(void *)(a1 + 40) = v18;
    *(void *)(a1 + 48) = v19;
    *(unsigned char *)(a1 + 56) = v14;
  }
  else
  {
    long long v15 = *v13;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    *uint64_t v12 = v15;
  }
  return a1;
}

uint64_t assignWithTake for MonoColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  char v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B591DF0C(v6, v7, v8, v9);
  unsigned int v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 <= 0xFD)
  {
    unsigned int v11 = *(unsigned __int8 *)(a2 + 56);
    if (v11 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 48);
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(a1 + 40);
      uint64_t v15 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = v12;
      *(unsigned char *)(a1 + 56) = v11;
      sub_1B591DF0C(v13, v14, v15, v10);
      return a1;
    }
    sub_1B59316FC(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for MonoColor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 24) & 0x7E | (*(unsigned __int8 *)(a1 + 24) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MonoColor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonoColor()
{
  return &type metadata for MonoColor;
}

ValueMetadata *type metadata accessor for AnyCodableColor()
{
  return &type metadata for AnyCodableColor;
}

unint64_t sub_1B5A06C5C()
{
  unint64_t result = qword_1E9D66120;
  if (!qword_1E9D66120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66120);
  }
  return result;
}

unint64_t sub_1B5A06CB4()
{
  unint64_t result = qword_1E9D66128;
  if (!qword_1E9D66128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66128);
  }
  return result;
}

unint64_t sub_1B5A06D0C()
{
  unint64_t result = qword_1E9D66130;
  if (!qword_1E9D66130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66130);
  }
  return result;
}

unint64_t sub_1B5A06D64()
{
  unint64_t result = qword_1E9D66138;
  if (!qword_1E9D66138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66138);
  }
  return result;
}

unint64_t sub_1B5A06DBC()
{
  unint64_t result = qword_1E9D66140;
  if (!qword_1E9D66140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66140);
  }
  return result;
}

unint64_t sub_1B5A06E14()
{
  unint64_t result = qword_1E9D66148;
  if (!qword_1E9D66148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66148);
  }
  return result;
}

unint64_t sub_1B5A06E6C()
{
  unint64_t result = qword_1E9D66150;
  if (!qword_1E9D66150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66150);
  }
  return result;
}

unint64_t sub_1B5A06EC4()
{
  unint64_t result = qword_1E9D66158;
  if (!qword_1E9D66158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66158);
  }
  return result;
}

unint64_t sub_1B5A06F1C()
{
  unint64_t result = qword_1E9D66160;
  if (!qword_1E9D66160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66160);
  }
  return result;
}

unint64_t sub_1B5A06F74()
{
  unint64_t result = qword_1E9D66168;
  if (!qword_1E9D66168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66168);
  }
  return result;
}

unint64_t sub_1B5A06FCC()
{
  unint64_t result = qword_1E9D66170;
  if (!qword_1E9D66170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66170);
  }
  return result;
}

unint64_t sub_1B5A07024()
{
  unint64_t result = qword_1E9D66178;
  if (!qword_1E9D66178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66178);
  }
  return result;
}

unint64_t sub_1B5A07078(uint64_t a1)
{
  unint64_t result = sub_1B5A070A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A070A0()
{
  unint64_t result = qword_1E9D66180;
  if (!qword_1E9D66180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66180);
  }
  return result;
}

uint64_t type metadata accessor for ColorDecodingError()
{
  uint64_t result = qword_1E9D661F8;
  if (!qword_1E9D661F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B5A07140()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1B5A07178(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D661E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A07A18();
  sub_1B5A1C838();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_1B5A1C5C8();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_1B5A1C598();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1B5A07380(void *a1)
{
  unint64_t v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    sub_1B5A07A6C();
    sub_1B5A1C6C8();
    unint64_t v3 = v5;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

unint64_t sub_1B5A0753C()
{
  unint64_t result = qword_1E9D66190;
  if (!qword_1E9D66190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66190);
  }
  return result;
}

unint64_t sub_1B5A07590()
{
  unint64_t result = qword_1E9D66198;
  if (!qword_1E9D66198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66198);
  }
  return result;
}

uint64_t sub_1B5A075E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_1B5A07624()
{
  unint64_t result = qword_1E9D661A0;
  if (!qword_1E9D661A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D661A0);
  }
  return result;
}

uint64_t sub_1B5A07678()
{
  sub_1B591DF0C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_1B591DF0C(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  sub_1B591DF0C(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(unsigned char *)(v0 + 104));
  unsigned int v1 = *(unsigned __int8 *)(v0 + 136);
  if (v1 <= 0xFD) {
    sub_1B591DF0C(*(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), v1);
  }
  return MEMORY[0x1F4186498](v0, 137, 7);
}

uint64_t sub_1B5A076F0()
{
  sub_1B591DF0C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  unsigned int v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 <= 0xFD) {
    sub_1B591DF0C(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), v1);
  }
  return MEMORY[0x1F4186498](v0, 73, 7);
}

unint64_t sub_1B5A07748()
{
  unint64_t result = qword_1E9D661A8;
  if (!qword_1E9D661A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D661A8);
  }
  return result;
}

unint64_t sub_1B5A0779C()
{
  unint64_t result = qword_1E9D661B0;
  if (!qword_1E9D661B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D661B0);
  }
  return result;
}

unint64_t sub_1B5A077F0()
{
  unint64_t result = qword_1E9D661B8;
  if (!qword_1E9D661B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D661B8);
  }
  return result;
}

uint64_t sub_1B5A07844(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B5A0788C()
{
  unint64_t result = qword_1E9D661C8;
  if (!qword_1E9D661C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D661C8);
  }
  return result;
}

unint64_t sub_1B5A078E0()
{
  unint64_t result = qword_1E9D661D8;
  if (!qword_1E9D661D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D661D8);
  }
  return result;
}

uint64_t sub_1B5A07934(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 88);
  unsigned int v14 = *(unsigned __int8 *)(a1 + 120);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  a2(v5, v6, v7, v11);
  a2(v8, v9, v10, v12);
  a3(v17, v16, v15, v14);
  return a1;
}

unint64_t sub_1B5A07A18()
{
  unint64_t result = qword_1E9D661E8;
  if (!qword_1E9D661E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D661E8);
  }
  return result;
}

unint64_t sub_1B5A07A6C()
{
  unint64_t result = qword_1E9D661F0;
  if (!qword_1E9D661F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D661F0);
  }
  return result;
}

unint64_t sub_1B5A07AC0(void *a1)
{
  unint64_t v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1C818();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1B5A07748();
    sub_1B5A1C6C8();
    unint64_t v3 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1B5A07B9C()
{
  return 0x7974536570616873;
}

uint64_t sub_1B5A07BB8()
{
  unint64_t v0 = sub_1B5A1C728();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19) {
    return 25;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B5A07C0C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for BundleColor.CodingKeys()
{
  return &type metadata for BundleColor.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RGBAColor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A07D34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RGBAColor.CodingKeys()
{
  return &type metadata for RGBAColor.CodingKeys;
}

unsigned char *_s6LiftUI14BorderModifierV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A07E38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonoColor.CodingKeys()
{
  return &type metadata for MonoColor.CodingKeys;
}

ValueMetadata *type metadata accessor for NamedStandardColor()
{
  return &type metadata for NamedStandardColor;
}

ValueMetadata *type metadata accessor for NamedSystemColor()
{
  return &type metadata for NamedSystemColor;
}

uint64_t _s6LiftUI9ColorNameOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE8) {
    goto LABEL_17;
  }
  if (a2 + 24 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 24) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 24;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v8 = v6 - 25;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6LiftUI9ColorNameOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *unint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A07FF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorName()
{
  return &type metadata for ColorName;
}

void destroy for RGBAColor(uint64_t a1)
{
  sub_1B591DF0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_1B591DF0C(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  sub_1B591DF0C(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 120);
  if (v2 <= 0xFD)
  {
    uint64_t v3 = *(void *)(a1 + 96);
    uint64_t v4 = *(void *)(a1 + 104);
    uint64_t v5 = *(void *)(a1 + 112);
    sub_1B591DF0C(v3, v4, v5, v2);
  }
}

uint64_t initializeWithCopy for RGBAColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  sub_1B591DF88(v8, v9, v10, v11);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  char v15 = *(unsigned char *)(a2 + 88);
  sub_1B591DF88(v12, v13, v14, v15);
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(unsigned char *)(a1 + 88) = v15;
  unsigned int v16 = *(unsigned __int8 *)(a2 + 120);
  if (v16 <= 0xFD)
  {
    uint64_t v17 = *(void *)(a2 + 96);
    uint64_t v18 = *(void *)(a2 + 104);
    uint64_t v19 = *(void *)(a2 + 112);
    sub_1B591DF88(v17, v18, v19, v16);
    *(void *)(a1 + 96) = v17;
    *(void *)(a1 + 104) = v18;
    *(void *)(a1 + 112) = v19;
    *(unsigned char *)(a1 + 120) = v16;
  }
  else
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  }
  return a1;
}

uint64_t assignWithCopy for RGBAColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B591DF88(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  char v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B591DF0C(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  char v15 = *(unsigned char *)(a2 + 56);
  sub_1B591DF88(v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  char v19 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v15;
  sub_1B591DF0C(v16, v17, v18, v19);
  uint64_t v20 = *(void *)(a2 + 64);
  uint64_t v21 = *(void *)(a2 + 72);
  uint64_t v22 = *(void *)(a2 + 80);
  char v23 = *(unsigned char *)(a2 + 88);
  sub_1B591DF88(v20, v21, v22, v23);
  uint64_t v24 = *(void *)(a1 + 64);
  uint64_t v25 = *(void *)(a1 + 72);
  uint64_t v26 = *(void *)(a1 + 80);
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v21;
  *(void *)(a1 + 80) = v22;
  char v27 = *(unsigned char *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v23;
  sub_1B591DF0C(v24, v25, v26, v27);
  uint64_t v28 = (_OWORD *)(a1 + 96);
  uint64_t v29 = (_OWORD *)(a2 + 96);
  unsigned int v30 = *(unsigned __int8 *)(a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) <= 0xFDu)
  {
    if (v30 <= 0xFD)
    {
      uint64_t v36 = *(void *)(a2 + 96);
      uint64_t v37 = *(void *)(a2 + 104);
      uint64_t v38 = *(void *)(a2 + 112);
      sub_1B591DF88(v36, v37, v38, v30);
      uint64_t v39 = *(void *)(a1 + 96);
      uint64_t v40 = *(void *)(a1 + 104);
      uint64_t v41 = *(void *)(a1 + 112);
      *(void *)(a1 + 96) = v36;
      *(void *)(a1 + 104) = v37;
      *(void *)(a1 + 112) = v38;
      char v42 = *(unsigned char *)(a1 + 120);
      *(unsigned char *)(a1 + 120) = v30;
      sub_1B591DF0C(v39, v40, v41, v42);
    }
    else
    {
      sub_1B59316FC(a1 + 96);
      long long v32 = *(_OWORD *)(a2 + 105);
      *uint64_t v28 = *v29;
      *(_OWORD *)(a1 + 105) = v32;
    }
  }
  else if (v30 <= 0xFD)
  {
    uint64_t v33 = *(void *)(a2 + 96);
    uint64_t v34 = *(void *)(a2 + 104);
    uint64_t v35 = *(void *)(a2 + 112);
    sub_1B591DF88(v33, v34, v35, v30);
    *(void *)(a1 + 96) = v33;
    *(void *)(a1 + 104) = v34;
    *(void *)(a1 + 112) = v35;
    *(unsigned char *)(a1 + 120) = v30;
  }
  else
  {
    long long v31 = *v29;
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
    *uint64_t v28 = v31;
  }
  return a1;
}

uint64_t assignWithTake for RGBAColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  char v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B591DF0C(v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v10;
  char v15 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B591DF0C(v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a2 + 80);
  char v17 = *(unsigned char *)(a2 + 88);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v16;
  char v21 = *(unsigned char *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v17;
  sub_1B591DF0C(v18, v19, v20, v21);
  unsigned int v22 = *(unsigned __int8 *)(a1 + 120);
  if (v22 <= 0xFD)
  {
    unsigned int v23 = *(unsigned __int8 *)(a2 + 120);
    if (v23 <= 0xFD)
    {
      uint64_t v24 = *(void *)(a2 + 112);
      uint64_t v25 = *(void *)(a1 + 96);
      uint64_t v26 = *(void *)(a1 + 104);
      uint64_t v27 = *(void *)(a1 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(void *)(a1 + 112) = v24;
      *(unsigned char *)(a1 + 120) = v23;
      sub_1B591DF0C(v25, v26, v27, v22);
      return a1;
    }
    sub_1B59316FC(a1 + 96);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  return a1;
}

ValueMetadata *type metadata accessor for RGBAColor()
{
  return &type metadata for RGBAColor;
}

uint64_t destroy for BundleColor()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BundleColor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BundleColor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for BundleColor(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BundleColor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BundleColor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleColor()
{
  return &type metadata for BundleColor;
}

unsigned char *storeEnumTagSinglePayload for ElementColor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A0870CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ElementColor()
{
  return &type metadata for ElementColor;
}

uint64_t *sub_1B5A08744(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
    uint64_t v8 = (char *)a1 + v7;
    char v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1B5A1C3F8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1B5A08820(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
  uint64_t v3 = sub_1B5A1C3F8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *sub_1B5A088A0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRetain();
  uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1B5A1C3F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

void *sub_1B5A08930(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1B5A1C3F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1B5A089D4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1B5A1C3F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1B5A08A60(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8) + 48);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1B5A1C3F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t sub_1B5A08AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1B5A08B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D657D8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t sub_1B5A08BE4(uint64_t a1)
{
  uint64_t result = sub_1B5A1C3F8();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

unint64_t sub_1B5A08CA4()
{
  unint64_t result = qword_1E9D66208;
  if (!qword_1E9D66208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66208);
  }
  return result;
}

unint64_t sub_1B5A08CFC()
{
  unint64_t result = qword_1E9D66210;
  if (!qword_1E9D66210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66210);
  }
  return result;
}

unint64_t sub_1B5A08D54()
{
  unint64_t result = qword_1E9D66218;
  if (!qword_1E9D66218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66218);
  }
  return result;
}

unint64_t sub_1B5A08DAC()
{
  unint64_t result = qword_1E9D66220;
  if (!qword_1E9D66220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66220);
  }
  return result;
}

unint64_t sub_1B5A08E04()
{
  unint64_t result = qword_1E9D66228;
  if (!qword_1E9D66228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66228);
  }
  return result;
}

unint64_t sub_1B5A08E5C()
{
  unint64_t result = qword_1E9D66230;
  if (!qword_1E9D66230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66230);
  }
  return result;
}

unint64_t sub_1B5A08EB4()
{
  unint64_t result = qword_1E9D66238;
  if (!qword_1E9D66238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66238);
  }
  return result;
}

unint64_t sub_1B5A08F0C()
{
  unint64_t result = qword_1E9D66240;
  if (!qword_1E9D66240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66240);
  }
  return result;
}

unint64_t sub_1B5A08F64()
{
  unint64_t result = qword_1E9D66248;
  if (!qword_1E9D66248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66248);
  }
  return result;
}

unint64_t sub_1B5A08FBC()
{
  unint64_t result = qword_1E9D66250;
  if (!qword_1E9D66250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66250);
  }
  return result;
}

unint64_t sub_1B5A09010(uint64_t a1)
{
  unint64_t result = sub_1B5A09038();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A09038()
{
  unint64_t result = qword_1E9D66258;
  if (!qword_1E9D66258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66258);
  }
  return result;
}

unint64_t sub_1B5A0908C(uint64_t a1)
{
  unint64_t result = sub_1B5A090B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A090B4()
{
  unint64_t result = qword_1E9D66260;
  if (!qword_1E9D66260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66260);
  }
  return result;
}

unint64_t sub_1B5A09108(uint64_t a1)
{
  unint64_t result = sub_1B5A09130();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A09130()
{
  unint64_t result = qword_1E9D66268;
  if (!qword_1E9D66268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66268);
  }
  return result;
}

unint64_t sub_1B5A09184(uint64_t a1)
{
  unint64_t result = sub_1B5A091AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A091AC()
{
  unint64_t result = qword_1E9D66270;
  if (!qword_1E9D66270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66270);
  }
  return result;
}

unint64_t sub_1B5A09200(uint64_t a1)
{
  unint64_t result = sub_1B5A09228();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A09228()
{
  unint64_t result = qword_1E9D66278;
  if (!qword_1E9D66278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66278);
  }
  return result;
}

unint64_t sub_1B5A0927C()
{
  unint64_t result = qword_1E9D66280;
  if (!qword_1E9D66280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66280);
  }
  return result;
}

uint64_t sub_1B5A092D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1B5A09338@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B5A00DCC(a1, a2);
}

ValueMetadata *type metadata accessor for ContentShapeModifier()
{
  return &type metadata for ContentShapeModifier;
}

ValueMetadata *type metadata accessor for ClipShapeModifier()
{
  return &type metadata for ClipShapeModifier;
}

uint64_t sub_1B5A09374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5A09E1C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B5A093A0(uint64_t a1)
{
  unint64_t v2 = sub_1B5A09ABC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A093DC(uint64_t a1)
{
  unint64_t v2 = sub_1B5A09ABC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A09418@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A09674(a1, &qword_1E9D662A8, (void (*)(void))sub_1B5A09ABC, a2);
}

void *sub_1B5A09454@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v12[3] = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = v4[3];
  uint64_t v9 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v10);
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48))(v12, a2, a3, v10, v9);
  if (!v5)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64E88);
    a4[3] = sub_1B5A1A748();
    sub_1B59095C8(&qword_1E9D64E90, &qword_1E9D64E88);
    a4[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(a4);
    sub_1B590D4D8();
    sub_1B5A1B768();
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_1B5A095C0(uint64_t a1)
{
  unint64_t v2 = sub_1B5A09A68();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A095FC(uint64_t a1)
{
  unint64_t v2 = sub_1B5A09A68();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A09638@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A09674(a1, &qword_1E9D66298, (void (*)(void))sub_1B5A09A68, a2);
}

uint64_t sub_1B5A09674@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v14 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v18 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1B5A1C838();
  if (!v4)
  {
    uint64_t v10 = v14;
    sub_1B5987530();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v7);
    sub_1B5908BE8(&v15, (uint64_t)v16);
    long long v11 = v16[1];
    *(_OWORD *)uint64_t v10 = v16[0];
    *(_OWORD *)(v10 + 16) = v11;
    *(void *)(v10 + 32) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void *sub_1B5A09804@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v12[3] = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = v4[3];
  uint64_t v9 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v10);
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48))(v12, a2, a3, v10, v9);
  if (!v5)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64EB0);
    a4[3] = sub_1B5A1A748();
    sub_1B59095C8(&qword_1E9D64EB8, &qword_1E9D64EB0);
    a4[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1(a4);
    sub_1B590D4D8();
    sub_1B5A1B458();
    return (void *)swift_release();
  }
  return result;
}

unint64_t sub_1B5A09970(uint64_t a1)
{
  unint64_t result = sub_1B5A09998();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A09998()
{
  unint64_t result = qword_1E9D66288;
  if (!qword_1E9D66288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66288);
  }
  return result;
}

unint64_t sub_1B5A099EC(uint64_t a1)
{
  unint64_t result = sub_1B5A09A14();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A09A14()
{
  unint64_t result = qword_1E9D66290;
  if (!qword_1E9D66290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66290);
  }
  return result;
}

unint64_t sub_1B5A09A68()
{
  unint64_t result = qword_1E9D662A0;
  if (!qword_1E9D662A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D662A0);
  }
  return result;
}

unint64_t sub_1B5A09ABC()
{
  unint64_t result = qword_1E9D662B0;
  if (!qword_1E9D662B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D662B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClipShapeModifier.CodingKeys()
{
  return &type metadata for ClipShapeModifier.CodingKeys;
}

unsigned char *_s6LiftUI17ClipShapeModifierV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5A09BC0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentShapeModifier.CodingKeys()
{
  return &type metadata for ContentShapeModifier.CodingKeys;
}

unint64_t sub_1B5A09BFC()
{
  unint64_t result = qword_1E9D662B8;
  if (!qword_1E9D662B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D662B8);
  }
  return result;
}

unint64_t sub_1B5A09C54()
{
  unint64_t result = qword_1E9D662C0;
  if (!qword_1E9D662C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D662C0);
  }
  return result;
}

unint64_t sub_1B5A09CAC()
{
  unint64_t result = qword_1E9D662C8;
  if (!qword_1E9D662C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D662C8);
  }
  return result;
}

unint64_t sub_1B5A09D04()
{
  unint64_t result = qword_1E9D662D0;
  if (!qword_1E9D662D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D662D0);
  }
  return result;
}

unint64_t sub_1B5A09D5C()
{
  unint64_t result = qword_1E9D662D8;
  if (!qword_1E9D662D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D662D8);
  }
  return result;
}

unint64_t sub_1B5A09DB4()
{
  unint64_t result = qword_1E9D662E0;
  if (!qword_1E9D662E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D662E0);
  }
  return result;
}

uint64_t sub_1B5A09E08()
{
  return 0x6570616873;
}

uint64_t sub_1B5A09E1C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6570616873 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B5A1C678();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t destroy for DictDeleteAction(uint64_t a1)
{
  sub_1B5904AB4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  char v5 = *(unsigned char *)(a1 + 56);
  return sub_1B5905248(v2, v3, v4, v5);
}

uint64_t initializeWithCopy for DictDeleteAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B8C(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 48);
  LOBYTE(v2) = *(unsigned char *)(v2 + 56);
  sub_1B5904C08(v8, v9, v10, v2);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v2;
  return a1;
}

uint64_t assignWithCopy for DictDeleteAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B8C(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B5904AB4(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v14 = *(void *)(v2 + 48);
  LOBYTE(v2) = *(unsigned char *)(v2 + 56);
  sub_1B5904C08(v12, v13, v14, v2);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  char v18 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 56) = v2;
  sub_1B5905248(v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for DictDeleteAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5904AB4(v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B5905248(v12, v13, v14, v15);
  return a1;
}

ValueMetadata *type metadata accessor for DictDeleteAction()
{
  return &type metadata for DictDeleteAction;
}

uint64_t sub_1B5A0A0B4(char a1)
{
  if (a1) {
    return 0x616E6F6974636964;
  }
  else {
    return 7955819;
  }
}

uint64_t sub_1B5A0A0E8(char *a1, char *a2)
{
  return sub_1B59EE89C(*a1, *a2);
}

uint64_t sub_1B5A0A0F4()
{
  return sub_1B59F2790();
}

uint64_t sub_1B5A0A0FC()
{
  return sub_1B59F3E9C();
}

uint64_t sub_1B5A0A104()
{
  return sub_1B59F5F5C();
}

uint64_t sub_1B5A0A10C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5A0A16C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A0A0B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A0A198()
{
  return sub_1B5A0A0B4(*v0);
}

uint64_t sub_1B5A0A1A0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B5A0A204(uint64_t a1)
{
  unint64_t v2 = sub_1B5A0AD1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A0A240(uint64_t a1)
{
  unint64_t v2 = sub_1B5A0AD1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A0A27C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66310);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A0AD1C();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D640F0);
  char v38 = 0;
  sub_1B59E4350(&qword_1E9D641E0, &qword_1E9D640F0);
  sub_1B5A1C5D8();
  uint64_t v9 = v33;
  uint64_t v29 = a2;
  uint64_t v30 = v34;
  uint64_t v10 = v35;
  char v11 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62BE0);
  char v38 = 1;
  uint64_t v31 = v9;
  uint64_t v32 = v10;
  uint64_t v12 = v9;
  uint64_t v13 = v30;
  uint64_t v14 = v10;
  LOBYTE(v10) = v11;
  sub_1B5904B8C(v12, v30, v14, v11);
  sub_1B59E4350((unint64_t *)&qword_1E9D62BE8, &qword_1E9D62BE0);
  sub_1B5A1C5D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v33;
  uint64_t v27 = v33;
  uint64_t v28 = v34;
  uint64_t v16 = v35;
  char v17 = v36;
  int v37 = v36;
  uint64_t v18 = v13;
  uint64_t v19 = v31;
  char v20 = v10;
  uint64_t v21 = v32;
  sub_1B5904B8C(v31, v18, v32, v20);
  uint64_t v22 = v15;
  uint64_t v23 = v28;
  sub_1B5904C08(v22, v28, v16, v17);
  sub_1B5904AB4(v19, v18, v21, v20);
  uint64_t v24 = v29;
  uint64_t *v29 = v19;
  v24[1] = v18;
  long long v24[2] = v21;
  *((unsigned char *)v24 + 24) = v20;
  uint64_t v25 = v27;
  uint64_t v24[4] = v27;
  v24[5] = v23;
  v24[6] = v16;
  LOBYTE(v23) = v37;
  *((unsigned char *)v24 + 56) = v37;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1B5904AB4(v19, v18, v21, v20);
  return sub_1B5905248(v25, v28, v16, v23);
}

uint64_t sub_1B5A0A598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  uint64_t v7[5] = a7;
  id v7[2] = a4;
  void v7[3] = a5;
  sub_1B5A1C168();
  v7[6] = sub_1B5A1C158();
  uint64_t v9 = sub_1B5A1C148();
  return MEMORY[0x1F4188298](sub_1B5A0A634, v9, v8);
}

uint64_t sub_1B5A0A634()
{
  uint64_t v12 = v0;
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  swift_release();
  uint64_t v3 = *(void *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = *(void *)(v2 + 48);
  char v6 = *(unsigned char *)(v2 + 56);
  sub_1B5904C08(v3, v4, v5, v6);
  uint64_t v7 = sub_1B59B4750(v1, v3, v4, v5, v6);
  sub_1B5905248(v3, v4, v5, v6);
  uint64_t v8 = v0[3];
  sub_1B5957208(v0[4], v0[5], &v11);
  sub_1B599FF94(v11);
  sub_1B5904C08(v3, v4, v5, v6);
  sub_1B59C587C(v8, v7, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  sub_1B5905248(v3, v4, v5, v6);
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1B5A0A790(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9D66308 + dword_1E9D66308);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1B5921C08;
  return v5(a1);
}

uint64_t sub_1B5A0A83C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B5A0A27C(a1, a2);
}

unint64_t sub_1B5A0A854(uint64_t a1)
{
  unint64_t result = sub_1B5A0A87C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0A87C()
{
  unint64_t result = qword_1E9D662E8;
  if (!qword_1E9D662E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D662E8);
  }
  return result;
}

unint64_t sub_1B5A0A8D0(uint64_t a1)
{
  unint64_t result = sub_1B5A0A8F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0A8F8()
{
  unint64_t result = qword_1E9D662F8;
  if (!qword_1E9D662F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9D662F8);
  }
  return result;
}

uint64_t sub_1B5A0A94C(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  *(void *)(v2 + 88) = swift_task_alloc();
  long long v3 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 57) = *(_OWORD *)((char *)v1 + 41);
  return MEMORY[0x1F4188298](sub_1B5A0A9F8, 0, 0);
}

uint64_t sub_1B5A0A9F8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 40);
  sub_1B5904B8C(v1, v3, v4, v5);
  uint64_t v6 = sub_1B59B3EBC(v2, v1, v3, v4, v5);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = v6;
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v0 + 80);
  sub_1B5904AB4(v1, v3, v4, v5);
  uint64_t v12 = sub_1B5A1C188();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
  sub_1B5A1C168();
  sub_1B592D580(v0 + 16);
  swift_retain();
  uint64_t v13 = sub_1B5A1C158();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBCFD8];
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v15;
  long long v16 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v14 + 48) = v16;
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v14 + 73) = *(_OWORD *)(v0 + 57);
  *(void *)(v14 + 96) = v11;
  *(void *)(v14 + 104) = v8;
  *(void *)(v14 + 112) = v10;
  sub_1B5923814(v7, (uint64_t)&unk_1E9D63A70, v14);
  swift_release();
  swift_task_dealloc();
  char v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1B5A0ABDC()
{
  swift_unknownObjectRelease();
  sub_1B5904AB4(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  sub_1B5905248(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1B5A0AC44(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[14];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1B5921C08;
  return sub_1B5A0A598(a1, v4, v5, v6, v7, v8, v9);
}

unint64_t sub_1B5A0AD1C()
{
  unint64_t result = qword_1E9D66318;
  if (!qword_1E9D66318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66318);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DictDeleteAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A0AE3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DictDeleteAction.CodingKeys()
{
  return &type metadata for DictDeleteAction.CodingKeys;
}

unint64_t sub_1B5A0AE78()
{
  unint64_t result = qword_1E9D66320;
  if (!qword_1E9D66320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66320);
  }
  return result;
}

unint64_t sub_1B5A0AED0()
{
  unint64_t result = qword_1E9D66328;
  if (!qword_1E9D66328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66328);
  }
  return result;
}

unint64_t sub_1B5A0AF28()
{
  unint64_t result = qword_1E9D66330;
  if (!qword_1E9D66330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66330);
  }
  return result;
}

ValueMetadata *type metadata accessor for IfAction()
{
  return &type metadata for IfAction;
}

uint64_t sub_1B5A0AF8C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (a4) {
    uint64_t v12 = a4;
  }
  else {
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1B59193A4(v12);
  swift_bridgeObjectRelease();
  sub_1B59177F0(v13, a2, a3, v10, v11, v20);
  swift_bridgeObjectRelease();
  uint64_t v14 = v21;
  uint64_t v15 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  if (a5) {
    uint64_t v16 = a5;
  }
  else {
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1B59193A4(v16);
  swift_bridgeObjectRelease();
  sub_1B59177F0(v17, a2, a3, v14, v15, a6);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

uint64_t sub_1B5A0B0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  void v5[4] = a3;
  _OWORD v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  v5[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B5A0B154, 0, 0);
}

uint64_t sub_1B5A0B154()
{
  if (sub_1B59F84BC(v0[2]))
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1B5A1A328();
    __swift_project_value_buffer(v1, (uint64_t)qword_1E9D910D0);
    uint64_t v2 = sub_1B5A1A308();
    os_log_type_t v3 = sub_1B5A1C278();
    if (os_log_type_enabled(v2, v3))
    {
      unsigned int v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v4 = 0;
      _os_log_impl(&dword_1B58FD000, v2, v3, "If Action: condition satisfied", v4, 2u);
      MEMORY[0x1BA9A4780](v4, -1, -1);
    }
    uint64_t v5 = v0[5];

    if (v5)
    {
      uint64_t v6 = v0[7];
      uint64_t v7 = v0[5];
      uint64_t v9 = v0[2];
      uint64_t v8 = v0[3];
      uint64_t v10 = sub_1B5A1C188();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
      uint64_t v11 = (void *)swift_allocObject();
      long long v11[2] = 0;
      void v11[3] = 0;
      void v11[4] = v7;
      void v11[5] = v9;
      _OWORD v11[6] = v8;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v12 = &unk_1E9D66358;
LABEL_14:
      sub_1B5924038(v0[7], (uint64_t)v12, (uint64_t)v11);
      swift_release();
    }
  }
  else
  {
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1B5A1A328();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E9D910D0);
    uint64_t v14 = sub_1B5A1A308();
    os_log_type_t v15 = sub_1B5A1C278();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1B58FD000, v14, v15, "If Action: condition NOT satisfied", v16, 2u);
      MEMORY[0x1BA9A4780](v16, -1, -1);
    }
    uint64_t v17 = v0[6];

    if (v17)
    {
      uint64_t v18 = v0[6];
      uint64_t v19 = v0[7];
      uint64_t v21 = v0[2];
      uint64_t v20 = v0[3];
      uint64_t v22 = sub_1B5A1C188();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v19, 1, 1, v22);
      uint64_t v11 = (void *)swift_allocObject();
      long long v11[2] = 0;
      void v11[3] = 0;
      void v11[4] = v18;
      void v11[5] = v21;
      _OWORD v11[6] = v20;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v12 = &unk_1E9D637B0;
      goto LABEL_14;
    }
  }
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_1B5A0B480(char a1)
{
  return *(void *)&aConditiothen_1[8 * a1];
}

uint64_t sub_1B5A0B4A0(char *a1, char *a2)
{
  return sub_1B59ECD3C(*a1, *a2);
}

uint64_t sub_1B5A0B4AC()
{
  return sub_1B59F2810();
}

uint64_t sub_1B5A0B4B4()
{
  return sub_1B59F2DF8();
}

uint64_t sub_1B5A0B4BC()
{
  return sub_1B59F731C();
}

uint64_t sub_1B5A0B4C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A0BF28();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A0B4F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A0B480(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A0B520()
{
  return sub_1B5A0B480(*v0);
}

uint64_t sub_1B5A0B528@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A0BF28();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A0B550(uint64_t a1)
{
  unint64_t v2 = sub_1B5A0BCC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A0B58C(uint64_t a1)
{
  unint64_t v2 = sub_1B5A0BCC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A0B5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1B5921C08;
  return sub_1B5A0B0B8(a1, a2, v6, v7, v8);
}

uint64_t sub_1B5A0B688@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B5A0AF8C(a1, a2, a3, *(void *)(v4 + 8), *(void *)(v4 + 16), a4);
}

void *sub_1B5A0B6A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B5A0B7D4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

unint64_t sub_1B5A0B6D4(uint64_t a1)
{
  unint64_t result = sub_1B5A0B6FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0B6FC()
{
  unint64_t result = qword_1E9D66338;
  if (!qword_1E9D66338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66338);
  }
  return result;
}

unint64_t sub_1B5A0B750(uint64_t a1)
{
  unint64_t result = sub_1B5A0B778();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0B778()
{
  unint64_t result = qword_1E9D66348;
  if (!qword_1E9D66348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9D66348);
  }
  return result;
}

void *sub_1B5A0B7D4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66360);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A0BCC8();
  sub_1B5A1C838();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for Condition();
    v32[0] = 0;
    sub_1B59A8050();
    sub_1B5A1C5D8();
    uint64_t v8 = *(void **)&v33[0];
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D64338);
    LOBYTE(v33[0]) = 1;
    unint64_t v10 = sub_1B5951CA4();
    swift_retain();
    sub_1B5A1C5B8();
    uint64_t v30 = 0;
    unint64_t v31 = v10;
    uint64_t v28 = v8;
    uint64_t v29 = v9;
    if (v35)
    {
      int64_t v11 = *(void *)(v35 + 16);
      if (v11)
      {
        uint64_t v26 = v4;
        uint64_t v27 = v3;
        uint64_t v34 = MEMORY[0x1E4FBC860];
        unint64_t v12 = v35;
        sub_1B596931C(0, v11, 0);
        uint64_t v13 = v12 + 32;
        uint64_t v14 = v34;
        do
        {
          sub_1B5951D6C(v13, (uint64_t)v32);
          sub_1B590CA38((uint64_t)v32, (uint64_t)v33);
          sub_1B5951DC8((uint64_t)v32);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B596931C(0, *(void *)(v14 + 16) + 1, 1);
            uint64_t v14 = v34;
          }
          unint64_t v16 = *(void *)(v14 + 16);
          unint64_t v15 = *(void *)(v14 + 24);
          if (v16 >= v15 >> 1)
          {
            sub_1B596931C(v15 > 1, v16 + 1, 1);
            uint64_t v14 = v34;
          }
          *(void *)(v14 + 16) = v16 + 1;
          sub_1B5908BE8(v33, v14 + 40 * v16 + 32);
          v13 += 40;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease();
        uint64_t v4 = v26;
        uint64_t v3 = v27;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    LOBYTE(v33[0]) = 2;
    swift_bridgeObjectRetain();
    uint64_t v17 = v30;
    sub_1B5A1C5B8();
    if (v17)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v18 = v30;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_release();
      if (!v18) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (v35)
      {
        int64_t v19 = *(void *)(v35 + 16);
        if (v19)
        {
          uint64_t v26 = v4;
          uint64_t v27 = v3;
          uint64_t v34 = MEMORY[0x1E4FBC860];
          unint64_t v20 = v35;
          sub_1B596931C(0, v19, 0);
          unint64_t v31 = v20;
          uint64_t v21 = v20 + 32;
          uint64_t v22 = v34;
          do
          {
            sub_1B5951D6C(v21, (uint64_t)v32);
            sub_1B590CA38((uint64_t)v32, (uint64_t)v33);
            sub_1B5951DC8((uint64_t)v32);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B596931C(0, *(void *)(v22 + 16) + 1, 1);
              uint64_t v22 = v34;
            }
            unint64_t v24 = *(void *)(v22 + 16);
            unint64_t v23 = *(void *)(v22 + 24);
            if (v24 >= v23 >> 1)
            {
              sub_1B596931C(v23 > 1, v24 + 1, 1);
              uint64_t v22 = v34;
            }
            *(void *)(v22 + 16) = v24 + 1;
            sub_1B5908BE8(v33, v22 + 40 * v24 + 32);
            v21 += 40;
            --v19;
          }
          while (v19);
          swift_bridgeObjectRelease();
          uint64_t v4 = v26;
          uint64_t v3 = v27;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v28;
      swift_release();
    }
  }
  return a1;
}

unint64_t sub_1B5A0BCC8()
{
  unint64_t result = qword_1E9D66368;
  if (!qword_1E9D66368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66368);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IfAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A0BDE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IfAction.CodingKeys()
{
  return &type metadata for IfAction.CodingKeys;
}

unint64_t sub_1B5A0BE24()
{
  unint64_t result = qword_1E9D66370;
  if (!qword_1E9D66370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66370);
  }
  return result;
}

unint64_t sub_1B5A0BE7C()
{
  unint64_t result = qword_1E9D66378;
  if (!qword_1E9D66378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66378);
  }
  return result;
}

unint64_t sub_1B5A0BED4()
{
  unint64_t result = qword_1E9D66380;
  if (!qword_1E9D66380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66380);
  }
  return result;
}

uint64_t sub_1B5A0BF28()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for RemoveLastAction()
{
  return &type metadata for RemoveLastAction;
}

uint64_t destroy for AppendAction(uint64_t a1, uint64_t a2)
{
  return sub_1B5A0C028(a1, a2, (void (*)(void, void, void, void))sub_1B591F344);
}

uint64_t initializeWithCopy for AppendAction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B5A0C094(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1B5909638);
}

uint64_t *assignWithCopy for AppendAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B5A0C158(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1B5909638, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591F344);
}

uint64_t *assignWithTake for AppendAction(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B5A0C238(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591F344);
}

ValueMetadata *type metadata accessor for AppendAction()
{
  return &type metadata for AppendAction;
}

uint64_t destroy for DeleteAction(uint64_t a1, uint64_t a2)
{
  return sub_1B5A0C028(a1, a2, (void (*)(void, void, void, void))sub_1B5905248);
}

uint64_t sub_1B5A0C028(uint64_t a1, uint64_t a2, void (*a3)(void, void, void, void))
{
  a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  return sub_1B591F344(v4, v5, v6, v7);
}

uint64_t initializeWithCopy for DeleteAction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B5A0C094(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1B5904C08);
}

uint64_t sub_1B5A0C094(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a2;
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v7, v8, v9);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = v4[4];
  uint64_t v11 = v4[5];
  uint64_t v12 = v4[6];
  LOBYTE(v4) = *((unsigned char *)v4 + 56);
  sub_1B5909638(v10, v11, v12, (char)v4);
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(unsigned char *)(a1 + 56) = (_BYTE)v4;
  return a1;
}

uint64_t *assignWithCopy for DeleteAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B5A0C158(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1B5904C08, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5905248);
}

uint64_t *sub_1B5A0C158(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = a2;
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v9, v10, v11);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = *((unsigned __int8 *)a1 + 24);
  *a1 = v8;
  a1[1] = v9;
  a1[2] = v10;
  *((unsigned char *)a1 + 24) = v11;
  a5(v12, v13, v14, v15);
  uint64_t v16 = v6[4];
  uint64_t v17 = v6[5];
  uint64_t v18 = v6[6];
  LOBYTE(v6) = *((unsigned char *)v6 + 56);
  sub_1B5909638(v16, v17, v18, (char)v6);
  uint64_t v19 = a1[4];
  uint64_t v20 = a1[5];
  uint64_t v21 = a1[6];
  char v22 = *((unsigned char *)a1 + 56);
  a1[4] = v16;
  a1[5] = v17;
  a1[6] = v18;
  *((unsigned char *)a1 + 56) = (_BYTE)v6;
  sub_1B591F344(v19, v20, v21, v22);
  return a1;
}

uint64_t *assignWithTake for DeleteAction(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B5A0C238(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5905248);
}

uint64_t *sub_1B5A0C238(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v12 = *((unsigned __int8 *)a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v7;
  *((unsigned char *)a1 + 24) = v8;
  a4(v9, v10, v11, v12);
  uint64_t v13 = *(void *)(a2 + 48);
  char v14 = *(unsigned char *)(a2 + 56);
  uint64_t v15 = a1[4];
  uint64_t v16 = a1[5];
  uint64_t v17 = a1[6];
  char v18 = *((unsigned char *)a1 + 56);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  a1[6] = v13;
  *((unsigned char *)a1 + 56) = v14;
  sub_1B591F344(v15, v16, v17, v18);
  return a1;
}

ValueMetadata *type metadata accessor for DeleteAction()
{
  return &type metadata for DeleteAction;
}

uint64_t destroy for MoveAction(uint64_t a1)
{
  sub_1B5905248(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_1B591DF0C(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  char v5 = *(unsigned char *)(a1 + 88);
  return sub_1B591F344(v2, v3, v4, v5);
}

uint64_t initializeWithCopy for MoveAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904C08(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 48);
  char v11 = *(unsigned char *)(v2 + 56);
  sub_1B591DF88(v8, v9, v10, v11);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  uint64_t v12 = *(void *)(v2 + 64);
  uint64_t v13 = *(void *)(v2 + 72);
  uint64_t v14 = *(void *)(v2 + 80);
  LOBYTE(v2) = *(unsigned char *)(v2 + 88);
  sub_1B5909638(v12, v13, v14, v2);
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(unsigned char *)(a1 + 88) = v2;
  return a1;
}

uint64_t assignWithCopy for MoveAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904C08(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B5905248(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v14 = *(void *)(v2 + 48);
  char v15 = *(unsigned char *)(v2 + 56);
  sub_1B591DF88(v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  char v19 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v15;
  sub_1B591DF0C(v16, v17, v18, v19);
  uint64_t v20 = *(void *)(v2 + 64);
  uint64_t v21 = *(void *)(v2 + 72);
  uint64_t v22 = *(void *)(v2 + 80);
  LOBYTE(v2) = *(unsigned char *)(v2 + 88);
  sub_1B5909638(v20, v21, v22, v2);
  uint64_t v23 = *(void *)(a1 + 64);
  uint64_t v24 = *(void *)(a1 + 72);
  uint64_t v25 = *(void *)(a1 + 80);
  char v26 = *(unsigned char *)(a1 + 88);
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v21;
  *(void *)(a1 + 80) = v22;
  *(unsigned char *)(a1 + 88) = v2;
  sub_1B591F344(v23, v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for MoveAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5905248(v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v10;
  char v15 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B591DF0C(v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a2 + 80);
  char v17 = *(unsigned char *)(a2 + 88);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  char v21 = *(unsigned char *)(a1 + 88);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v16;
  *(unsigned char *)(a1 + 88) = v17;
  sub_1B591F344(v18, v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MoveAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 89) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAction()
{
  return &type metadata for MoveAction;
}

uint64_t sub_1B5A0C620(char a1)
{
  return *(void *)&aIndexsetoffset_0[8 * a1];
}

uint64_t sub_1B5A0C640(char *a1, char *a2)
{
  return sub_1B59F0054(*a1, *a2);
}

uint64_t sub_1B5A0C64C()
{
  return sub_1B59F287C();
}

uint64_t sub_1B5A0C654()
{
  return sub_1B59F4CEC();
}

uint64_t sub_1B5A0C65C()
{
  return sub_1B59F4F74();
}

uint64_t sub_1B5A0C664@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A1102C();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A0C694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A0C620(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A0C6C0()
{
  return sub_1B5A0C620(*v0);
}

uint64_t sub_1B5A0C6C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A1102C();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A0C6F0(uint64_t a1)
{
  unint64_t v2 = sub_1B5A108B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A0C72C(uint64_t a1)
{
  unint64_t v2 = sub_1B5A108B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5A0C768(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66490);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A108B4();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66480);
    char v54 = 0;
    sub_1B59095C8(&qword_1E9D66488, &qword_1E9D66480);
    sub_1B5A1C5B8();
    uint64_t v47 = a2;
    if (v52 == 255)
    {
      uint64_t v9 = 0xF000000000000007;
      uint64_t v10 = 0xE800000000000000;
      uint64_t v11 = 0x7465537865646E69;
      int v12 = 1;
    }
    else
    {
      uint64_t v10 = v50;
      uint64_t v9 = v51;
      int v12 = v52 & 1;
      uint64_t v11 = v49;
    }
    int v53 = v12;
    char v54 = 1;
    sub_1B5904C08(v11, v10, v9, v12);
    sub_1B595E25C();
    sub_1B5A1C5B8();
    uint64_t v45 = v9;
    uint64_t v46 = v11;
    uint64_t v44 = v10;
    if (v52 >= 0xFEu) {
      uint64_t v13 = 0x74657366666FLL;
    }
    else {
      uint64_t v13 = v49;
    }
    if (v52 >= 0xFEu) {
      uint64_t v14 = 0xE600000000000000;
    }
    else {
      uint64_t v14 = v50;
    }
    if (v52 >= 0xFEu) {
      unint64_t v15 = 0xF000000000000007;
    }
    else {
      unint64_t v15 = v51;
    }
    if (v52 >= 0xFEu) {
      int v16 = 1;
    }
    else {
      int v16 = v52;
    }
    int v48 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
    char v54 = 2;
    uint64_t v42 = v13;
    uint64_t v43 = v14;
    unint64_t v41 = v15;
    uint64_t v17 = v15;
    char v18 = v48;
    sub_1B591DF88(v13, v14, v17, v48);
    sub_1B59095C8((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v19 = v49;
    uint64_t v20 = v50;
    uint64_t v39 = v50;
    uint64_t v37 = v51;
    int v40 = v52;
    uint64_t v21 = v44;
    sub_1B5904C08(v46, v44, v45, v53);
    uint64_t v23 = v42;
    uint64_t v22 = v43;
    uint64_t v24 = v41;
    sub_1B591DF88(v42, v43, v41, v18);
    uint64_t v38 = v19;
    uint64_t v25 = v20;
    uint64_t v26 = v37;
    sub_1B5909638(v19, v25, v37, v40);
    uint64_t v27 = v23;
    uint64_t v28 = v24;
    sub_1B591DF0C(v27, v22, v24, v18);
    uint64_t v29 = v45;
    uint64_t v30 = v46;
    char v31 = v53;
    sub_1B5905248(v46, v21, v45, v53);
    uint64_t v32 = v47;
    uint64_t *v47 = v30;
    v32[1] = v21;
    v32[2] = v29;
    *((unsigned char *)v32 + 24) = v31;
    uint64_t v34 = v42;
    uint64_t v33 = v43;
    v32[4] = v42;
    v32[5] = v33;
    v32[6] = v28;
    LOBYTE(v29) = v48;
    *((unsigned char *)v32 + 56) = v48;
    v32[8] = v19;
    uint64_t v35 = v39;
    v32[9] = v39;
    v32[10] = v26;
    char v36 = v40;
    *((unsigned char *)v32 + 88) = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1B5905248(v46, v44, v45, v53);
    sub_1B591DF0C(v34, v33, v28, v29);
    sub_1B591F344(v38, v35, v26, v36);
  }
}

uint64_t sub_1B5A0CC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7[5] = a6;
  v7[6] = a7;
  void v7[3] = a4;
  v7[4] = a5;
  sub_1B5A1C168();
  v7[7] = sub_1B5A1C158();
  uint64_t v9 = sub_1B5A1C148();
  return MEMORY[0x1F4188298](sub_1B5A0CCD4, v9, v8);
}

uint64_t sub_1B5A0CCD4()
{
  char v18 = v0;
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  swift_release();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 72);
  uint64_t v5 = *(void *)(v2 + 80);
  char v6 = *(unsigned char *)(v2 + 88);
  sub_1B5909638(v3, v4, v5, v6);
  sub_1B59B3D0C(v1, v3, v4, v5, v6, v15);
  sub_1B591F344(v3, v4, v5, v6);
  if ((unint64_t)v15[0] >> 61 == 4)
  {
    uint64_t v7 = *(void *)((v15[0] & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    v0[2] = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
    sub_1B59095C8(&qword_1E9D63530, &qword_1E9D62E80);
    sub_1B5A1BEC8();
    v15[0] = v3;
    v15[1] = v4;
    void v15[2] = v5;
    char v16 = v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v0[2];
    unint64_t v17 = v8 | 0x8000000000000000;
    sub_1B5909638(v3, v4, v5, v6);
    RemoteStateStore.set(reference:value:)((uint64_t)v15, (uint64_t *)&v17);
    swift_release();
    sub_1B591F344(v3, v4, v5, v6);
  }
  else
  {
    swift_release();
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1B5A1A328();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
    uint64_t v10 = sub_1B5A1A308();
    os_log_type_t v11 = sub_1B5A1C258();
    if (os_log_type_enabled(v10, v11))
    {
      int v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v12 = 0;
      _os_log_impl(&dword_1B58FD000, v10, v11, "Unable to decode array", v12, 2u);
      MEMORY[0x1BA9A4780](v12, -1, -1);
    }
  }
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1B5A0CFA4(char a1)
{
  if (a1) {
    return 0x7961727261;
  }
  else {
    return 0x7465537865646E69;
  }
}

uint64_t sub_1B5A0CFD8(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9D663E8 + dword_1E9D663E8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1B5921C08;
  return v5(a1);
}

void sub_1B5A0D084(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

unint64_t sub_1B5A0D09C(uint64_t a1)
{
  unint64_t result = sub_1B5A0D0C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0D0C4()
{
  unint64_t result = qword_1E9D66388;
  if (!qword_1E9D66388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66388);
  }
  return result;
}

uint64_t sub_1B5A0D118(char *a1, char *a2)
{
  return sub_1B59EF858(*a1, *a2);
}

uint64_t sub_1B5A0D124()
{
  return sub_1B59F28E8();
}

uint64_t sub_1B5A0D12C()
{
  return sub_1B59F481C();
}

uint64_t sub_1B5A0D134()
{
  return sub_1B59F551C();
}

uint64_t sub_1B5A0D13C@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5A0D148@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A0CFA4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A0D174()
{
  return sub_1B5A0CFA4(*v0);
}

uint64_t sub_1B5A0D17C@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B5A0D188(uint64_t a1)
{
  unint64_t v2 = sub_1B5A10860();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A0D1C4(uint64_t a1)
{
  unint64_t v2 = sub_1B5A10860();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A0D200@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66470);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A10860();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66480);
  char v31 = 0;
  sub_1B59095C8(&qword_1E9D66488, &qword_1E9D66480);
  sub_1B5A1C5B8();
  if (v29 == 255)
  {
    uint64_t v24 = 0xE800000000000000;
    uint64_t v25 = 0xF000000000000007;
    uint64_t v10 = 0x7465537865646E69;
    int v30 = 1;
  }
  else
  {
    int v30 = v29 & 1;
    uint64_t v10 = v26;
    uint64_t v24 = v27;
    uint64_t v25 = v28;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
  char v31 = 1;
  sub_1B5904C08(v10, v24, v25, v30);
  sub_1B59095C8((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
  sub_1B5A1C5D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v26;
  uint64_t v22 = v27;
  uint64_t v23 = v26;
  uint64_t v12 = v28;
  uint64_t v21 = v28;
  HIDWORD(v20) = v29;
  uint64_t v13 = v24;
  uint64_t v14 = v25;
  char v15 = v30;
  sub_1B5904C08(v10, v24, v25, v30);
  uint64_t v16 = v11;
  uint64_t v17 = v22;
  uint64_t v18 = v12;
  LOBYTE(v12) = BYTE4(v20);
  sub_1B5909638(v16, v22, v18, SBYTE4(v20));
  sub_1B5905248(v10, v13, v14, v15);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v14;
  *(unsigned char *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v23;
  *(void *)(a2 + 40) = v17;
  uint64_t v19 = v21;
  *(void *)(a2 + 48) = v21;
  *(unsigned char *)(a2 + 56) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1B5905248(v10, v13, v14, v15);
  return sub_1B591F344(v23, v22, v19, v12);
}

uint64_t sub_1B5A0D568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[4] = a5;
  uint64_t v6[5] = a6;
  uint64_t v6[3] = a4;
  sub_1B5A1C168();
  v6[6] = sub_1B5A1C158();
  uint64_t v8 = sub_1B5A1C148();
  return MEMORY[0x1F4188298](sub_1B5A0D604, v8, v7);
}

uint64_t sub_1B5A0D604()
{
  uint64_t v18 = v0;
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  swift_release();
  uint64_t v3 = *(void *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = *(void *)(v2 + 48);
  char v6 = *(unsigned char *)(v2 + 56);
  sub_1B5909638(v3, v4, v5, v6);
  sub_1B59B3D0C(v1, v3, v4, v5, v6, v15);
  sub_1B591F344(v3, v4, v5, v6);
  if ((unint64_t)v15[0] >> 61 == 4)
  {
    uint64_t v7 = *(void *)((v15[0] & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    v0[2] = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
    sub_1B59095C8(&qword_1E9D63530, &qword_1E9D62E80);
    sub_1B59095C8(&qword_1E9D63540, &qword_1E9D62E80);
    sub_1B5A1C218();
    v15[0] = v3;
    v15[1] = v4;
    void v15[2] = v5;
    char v16 = v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v0[2];
    unint64_t v17 = v8 | 0x8000000000000000;
    sub_1B5909638(v3, v4, v5, v6);
    RemoteStateStore.set(reference:value:)((uint64_t)v15, (uint64_t *)&v17);
    swift_release();
    sub_1B591F344(v3, v4, v5, v6);
  }
  else
  {
    swift_release();
    if (qword_1E9D62B20 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1B5A1A328();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
    uint64_t v10 = sub_1B5A1A308();
    os_log_type_t v11 = sub_1B5A1C258();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1B58FD000, v10, v11, "Unable to decode array", v12, 2u);
      MEMORY[0x1BA9A4780](v12, -1, -1);
    }
  }
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1B5A0D8F8(char a1)
{
  if (a1) {
    return 0x656D656C4577656ELL;
  }
  else {
    return 0x7961727261;
  }
}

uint64_t sub_1B5A0D930(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9D66408 + dword_1E9D66408);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1B592D9C8;
  return v5(a1);
}

uint64_t sub_1B5A0D9DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A0D200(a1, a2);
}

unint64_t sub_1B5A0D9F4(uint64_t a1)
{
  unint64_t result = sub_1B5A0DA1C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0DA1C()
{
  unint64_t result = qword_1E9D66390;
  if (!qword_1E9D66390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66390);
  }
  return result;
}

uint64_t sub_1B5A0DA70(char *a1, char *a2)
{
  return sub_1B59EF8F8(*a1, *a2);
}

uint64_t sub_1B5A0DA7C()
{
  return sub_1B59F2968();
}

uint64_t sub_1B5A0DA84()
{
  return sub_1B59F4884();
}

uint64_t sub_1B5A0DA8C()
{
  return sub_1B59F549C();
}

uint64_t sub_1B5A0DA94@<X0>(char *a1@<X8>)
{
  return sub_1B5932F20(a1);
}

uint64_t sub_1B5A0DAA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A0D8F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A0DACC()
{
  return sub_1B5A0D8F8(*v0);
}

uint64_t sub_1B5A0DAD4@<X0>(char *a1@<X8>)
{
  return sub_1B5932FBC(a1);
}

uint64_t sub_1B5A0DAE0(uint64_t a1)
{
  unint64_t v2 = sub_1B5A1080C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A0DB1C(uint64_t a1)
{
  unint64_t v2 = sub_1B5A1080C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A0DB58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66460);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1080C();
  sub_1B5A1C838();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
  char v33 = 0;
  sub_1B59095C8((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
  sub_1B5A1C5D8();
  char v33 = 1;
  uint64_t v26 = v29;
  uint64_t v27 = v28;
  uint64_t v25 = v30;
  int v32 = v31;
  sub_1B5909638(v28, v29, v30, v31);
  sub_1B5A1C5D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v9 = v28;
  uint64_t v23 = v29;
  uint64_t v24 = v28;
  uint64_t v10 = v30;
  uint64_t v22 = v30;
  int v21 = v31;
  uint64_t v12 = v26;
  uint64_t v11 = v27;
  uint64_t v13 = v25;
  char v14 = v32;
  sub_1B5909638(v27, v26, v25, v32);
  uint64_t v15 = v9;
  uint64_t v16 = v23;
  uint64_t v17 = v10;
  LOBYTE(v10) = v21;
  sub_1B5909638(v15, v23, v17, v21);
  sub_1B591F344(v11, v12, v13, v14);
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v13;
  *(unsigned char *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v24;
  *(void *)(a2 + 40) = v16;
  uint64_t v18 = v22;
  *(void *)(a2 + 48) = v22;
  *(unsigned char *)(a2 + 56) = v10;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1B591F344(v11, v12, v13, v14);
  return sub_1B591F344(v24, v23, v18, v10);
}

uint64_t sub_1B5A0DE54(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v26 = *(void *)v1;
  uint64_t v24 = *(void *)(v1 + 8);
  uint64_t v25 = *(void *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 56);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B5A1A328();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
  uint64_t v10 = sub_1B5A1A308();
  os_log_type_t v11 = sub_1B5A1C278();
  if (os_log_type_enabled(v10, v11))
  {
    char v12 = v4;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1B58FD000, v10, v11, "performing AppendAction", v13, 2u);
    char v14 = v13;
    char v4 = v12;
    uint64_t v3 = v2;
    MEMORY[0x1BA9A4780](v14, -1, -1);
  }

  sub_1B5909638(v5, v6, v7, v8);
  sub_1B59B3D0C(a1, v5, v6, v7, v8, v28);
  uint64_t result = sub_1B591F344(v5, v6, v7, v8);
  if (!v3)
  {
    uint64_t v16 = v28[0];
    sub_1B5909638(v26, v24, v25, v4);
    sub_1B59B3D0C(a1, v26, v24, v25, v4, v28);
    sub_1B591F344(v26, v24, v25, v4);
    if ((unint64_t)v28[0] >> 61 == 4)
    {
      uint64_t v17 = *(void **)((v28[0] & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_bridgeObjectRetain();
      swift_release();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v17 = sub_1B59BA308(0, v17[2] + 1, 1, v17);
      }
      unint64_t v19 = v17[2];
      unint64_t v18 = v17[3];
      if (v19 >= v18 >> 1) {
        uint64_t v17 = sub_1B59BA308((void *)(v18 > 1), v19 + 1, 1, v17);
      }
      uint64_t v17[2] = v19 + 1;
      v17[v19 + 4] = v16;
      v28[0] = v26;
      v28[1] = v24;
      void v28[2] = v25;
      char v29 = v4;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v17;
      unint64_t v30 = v20 | 0x8000000000000000;
      sub_1B5909638(v26, v24, v25, v4);
      RemoteStateStore.set(reference:value:)((uint64_t)v28, (uint64_t *)&v30);
      swift_release();
      swift_release();
      return sub_1B591F344(v26, v24, v25, v4);
    }
    else
    {
      swift_release();
      int v21 = sub_1B5A1A308();
      os_log_type_t v22 = sub_1B5A1C258();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_1B58FD000, v21, v22, "Unable to decode array", v23, 2u);
        MEMORY[0x1BA9A4780](v23, -1, -1);
      }

      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B5A0E204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a4;
  v5[3] = a5;
  sub_1B5A1C168();
  void v5[4] = sub_1B5A1C158();
  uint64_t v7 = sub_1B5A1C148();
  return MEMORY[0x1F4188298](sub_1B5A0E29C, v7, v6);
}

uint64_t sub_1B5A0E29C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  sub_1B5A0DE54(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1B5A0E340(uint64_t a1)
{
  uint64_t v16 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  uint64_t v4 = swift_task_alloc();
  long long v5 = v1[1];
  long long v13 = *v1;
  long long v14 = v5;
  v15[0] = v1[2];
  *(_OWORD *)((char *)v15 + 9) = *(long long *)((char *)v1 + 41);
  uint64_t v6 = sub_1B5A1C188();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_1B5A1C168();
  sub_1B5A10348((uint64_t)&v13, (void (*)(void, void, void, void))sub_1B5909638);
  swift_retain();
  uint64_t v7 = sub_1B5A1C158();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x1E4FBCFD8];
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v9;
  long long v10 = v14;
  *(_OWORD *)(v8 + 32) = v13;
  *(_OWORD *)(v8 + 48) = v10;
  *(_OWORD *)(v8 + 64) = v15[0];
  *(_OWORD *)(v8 + 73) = *(_OWORD *)((char *)v15 + 9);
  *(void *)(v8 + 96) = a1;
  sub_1B5923814(v4, (uint64_t)&unk_1E9D66430, v8);
  swift_release();
  swift_task_dealloc();
  os_log_type_t v11 = *(uint64_t (**)(void))(v2 + 8);
  return sub_1B592D24C(v11);
}

uint64_t sub_1B5A0E4F0(uint64_t a1)
{
  return sub_1B5A1018C(a1);
}

uint64_t sub_1B5A0E508@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A0DB58(a1, a2);
}

unint64_t sub_1B5A0E520(uint64_t a1)
{
  unint64_t result = sub_1B5A0E548();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0E548()
{
  unint64_t result = qword_1E9D66398;
  if (!qword_1E9D66398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66398);
  }
  return result;
}

uint64_t sub_1B5A0E5A8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5A0E5FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A11018();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B5A0E628@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5A0E680(uint64_t a1)
{
  unint64_t v2 = sub_1B5A107B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A0E6BC(uint64_t a1)
{
  unint64_t v2 = sub_1B5A107B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A0E6F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66450);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A107B8();
  sub_1B5A1C838();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63930);
    sub_1B59095C8((unint64_t *)&qword_1E9D63AC0, &qword_1E9D63930);
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1B5A0E8A4(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  char v8 = *(unsigned char *)(v1 + 24);
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B5A1A328();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E9D910D0);
  char v10 = sub_1B5A1A308();
  os_log_type_t v11 = sub_1B5A1C278();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = a1;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1B58FD000, v10, v11, "performing RemoveLastAction", v13, 2u);
    char v14 = v13;
    a1 = v12;
    uint64_t v3 = v2;
    MEMORY[0x1BA9A4780](v14, -1, -1);
  }

  sub_1B5909638(v6, v5, v7, v8);
  sub_1B59B3D0C(a1, v6, v5, v7, v8, v25);
  sub_1B591F344(v6, v5, v7, v8);
  if (v3) {
    return;
  }
  uint64_t v15 = a1;
  uint64_t v16 = v25[0];
  if ((unint64_t)v25[0] >> 61 != 4)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62E80);
    sub_1B5951A10();
    swift_allocError();
    *unint64_t v18 = v16;
    v18[1] = v17;
    swift_willThrow();
    return;
  }
  swift_release();
  sub_1B5909638(v6, v5, v7, v8);
  sub_1B59B3D0C(v15, v6, v5, v7, v8, v25);
  sub_1B591F344(v6, v5, v7, v8);
  if ((unint64_t)v25[0] >> 61 != 4)
  {
    swift_release();
LABEL_16:
    os_log_type_t v22 = sub_1B5A1A308();
    os_log_type_t v23 = sub_1B5A1C258();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1B58FD000, v22, v23, "Unable to decode array, or array length is 0", v24, 2u);
      MEMORY[0x1BA9A4780](v24, -1, -1);
    }

    return;
  }
  unint64_t v19 = *(void **)((v25[0] & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (!v19[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v20 = v19[2];
    if (v20)
    {
LABEL_13:
      long long v19[2] = v20 - 1;
      swift_release();
      v25[0] = v6;
      v25[1] = v5;
      void v25[2] = v7;
      char v26 = v8;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v19;
      unint64_t v27 = v21 | 0x8000000000000000;
      sub_1B5909638(v6, v5, v7, v8);
      RemoteStateStore.set(reference:value:)((uint64_t)v25, (uint64_t *)&v27);
      swift_release();
      sub_1B591F344(v6, v5, v7, v8);
      return;
    }
  }
  else
  {
    unint64_t v19 = sub_1B59CC268(v19);
    uint64_t v20 = v19[2];
    if (v20) {
      goto LABEL_13;
    }
  }
  __break(1u);
}

uint64_t sub_1B5A0EC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 56) = a7;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 40) = a8;
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a5;
  sub_1B5A1C168();
  *(void *)(v8 + 48) = sub_1B5A1C158();
  uint64_t v10 = sub_1B5A1C148();
  return MEMORY[0x1F4188298](sub_1B5A0ED1C, v10, v9);
}

uint64_t sub_1B5A0ED1C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  sub_1B5A0E8A4(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1B5A0EDC8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *(void *)v1;
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  char v8 = *(unsigned char *)(v1 + 24);
  uint64_t v9 = sub_1B5A1C188();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  sub_1B5A1C168();
  sub_1B5909638(v5, v6, v7, v8);
  swift_retain();
  uint64_t v10 = sub_1B5A1C158();
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBCFD8];
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v12;
  *(void *)(v11 + 32) = v5;
  *(void *)(v11 + 40) = v6;
  *(void *)(v11 + 48) = v7;
  *(unsigned char *)(v11 + 56) = v8;
  *(void *)(v11 + 64) = a1;
  sub_1B5923814(v4, (uint64_t)&unk_1E9D66448, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v2 + 8);
  return sub_1B592D24C(v13);
}

void sub_1B5A0EF68(uint64_t a1)
{
}

uint64_t sub_1B5A0EF80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A0E6F8(a1, a2);
}

unint64_t sub_1B5A0EF98(uint64_t a1)
{
  unint64_t result = sub_1B5A0EFC0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0EFC0()
{
  unint64_t result = qword_1E9D663A0;
  if (!qword_1E9D663A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D663A0);
  }
  return result;
}

unint64_t sub_1B5A0F014(uint64_t a1)
{
  unint64_t result = sub_1B5A0F03C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0F03C()
{
  unint64_t result = qword_1E9D663B0;
  if (!qword_1E9D663B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D663B0);
  }
  return result;
}

unint64_t sub_1B5A0F090(uint64_t a1)
{
  unint64_t result = sub_1B5A0F0B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0F0B8()
{
  unint64_t result = qword_1E9D663C0;
  if (!qword_1E9D663C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D663C0);
  }
  return result;
}

unint64_t sub_1B5A0F10C(uint64_t a1)
{
  unint64_t result = sub_1B5A0F134();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0F134()
{
  unint64_t result = qword_1E9D663D0;
  if (!qword_1E9D663D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D663D0);
  }
  return result;
}

unint64_t sub_1B5A0F188(uint64_t a1)
{
  unint64_t result = sub_1B5A0F1B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A0F1B0()
{
  unint64_t result = qword_1E9D663E0;
  if (!qword_1E9D663E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D663E0);
  }
  return result;
}

uint64_t sub_1B5A0F204(uint64_t a1)
{
  *(void *)(v2 + 192) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  *(void *)(v2 + 200) = swift_task_alloc();
  uint64_t v3 = sub_1B5A1A2C8();
  *(void *)(v2 + 208) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)(v2 + 216) = v4;
  *(void *)(v2 + 224) = *(void *)(v4 + 64);
  *(void *)(v2 + 232) = swift_task_alloc();
  *(void *)(v2 + 240) = swift_task_alloc();
  *(void *)(v2 + 248) = swift_task_alloc();
  long long v5 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v5;
  *(_OWORD *)(v2 + 80) = v1[4];
  *(_OWORD *)(v2 + 89) = *(_OWORD *)((char *)v1 + 73);
  long long v6 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v6;
  return MEMORY[0x1F4188298](sub_1B5A0F338, 0, 0);
}

uint64_t sub_1B5A0F338()
{
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B5A1A328();
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9D910D0);
  uint64_t v2 = sub_1B5A1A308();
  os_log_type_t v3 = sub_1B5A1C278();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1B58FD000, v2, v3, "performing MoveAction", v4, 2u);
    MEMORY[0x1BA9A4780](v4, -1, -1);
  }
  long long v5 = *(NSObject **)(v0 + 192);

  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = *(void *)(v0 + 32);
  char v9 = *(unsigned char *)(v0 + 40);
  sub_1B5904C08(v6, v7, v8, v9);
  uint64_t v10 = sub_1B59B4998(v5, v6, v7, v8, v9);
  sub_1B5905248(v6, v7, v8, v9);
  sub_1B5A0F768();
  sub_1B5A1C338();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(v10 + 32);
    do
    {
      uint64_t v13 = *v12++;
      *(void *)(v0 + 184) = v13;
      sub_1B5A1C318();
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 248);
  uint64_t v15 = *(void *)(v0 + 216);
  uint64_t v16 = *(void *)(v0 + 200);
  uint64_t v32 = *(void *)(v0 + 208);
  uint64_t v33 = *(void *)(v0 + 232);
  uint64_t v17 = *(void *)(v0 + 192);
  uint64_t v35 = *(void *)(v0 + 224);
  char v36 = *(void (**)(uint64_t))(v15 + 32);
  v36(v14);
  sub_1B5A0F7C0(v0 + 48, v0 + 112);
  sub_1B5A0F7C0(v0 + 112, v0 + 144);
  sub_1B5966F78(v0 + 112);
  sub_1B5963948(v17);
  uint64_t v19 = v18;
  char v21 = v20;
  sub_1B5966FAC(v0 + 112);
  if (v21) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v19;
  }
  uint64_t v34 = v22;
  uint64_t v23 = sub_1B5A1C188();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v16, 1, 1, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v33, v14, v32);
  sub_1B5A1C168();
  sub_1B592D140(v0 + 16);
  swift_retain();
  uint64_t v24 = sub_1B5A1C158();
  unint64_t v25 = (*(unsigned __int8 *)(v15 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = MEMORY[0x1E4FBCFD8];
  *(void *)(v26 + 16) = v24;
  *(void *)(v26 + 24) = v27;
  long long v28 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v26 + 80) = v28;
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v26 + 105) = *(_OWORD *)(v0 + 89);
  long long v29 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v26 + 48) = v29;
  *(void *)(v26 + 128) = v17;
  ((void (*)(unint64_t, uint64_t, uint64_t))v36)(v26 + v25, v33, v32);
  *(void *)(v26 + ((v35 + v25 + 7) & 0xFFFFFFFFFFFFFFF8)) = v34;
  sub_1B5923814(v16, (uint64_t)&unk_1E9D66400, v26);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v32);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

unint64_t sub_1B5A0F768()
{
  unint64_t result = qword_1E9D663F0;
  if (!qword_1E9D663F0)
  {
    sub_1B5A1A2C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9D663F0);
  }
  return result;
}

uint64_t sub_1B5A0F7C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5A0F81C()
{
  uint64_t v1 = sub_1B5A1A2C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 136) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  sub_1B5905248(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  sub_1B591DF0C(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  sub_1B591F344(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(unsigned char *)(v0 + 120));
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1B5A0F92C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1B5A1A2C8() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = (uint64_t)(v1 + 4);
  uint64_t v9 = v1[16];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1B5921C08;
  return sub_1B5A0CC38(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1B5A0FA68()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B5A0FAA0(uint64_t a1)
{
  *(void *)(v2 + 96) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  *(void *)(v2 + 104) = swift_task_alloc();
  uint64_t v3 = sub_1B5A1A2C8();
  *(void *)(v2 + 112) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)(v2 + 120) = v4;
  *(void *)(v2 + 128) = *(void *)(v4 + 64);
  *(void *)(v2 + 136) = swift_task_alloc();
  *(void *)(v2 + 144) = swift_task_alloc();
  *(void *)(v2 + 152) = swift_task_alloc();
  long long v5 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v5;
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 57) = *(_OWORD *)((char *)v1 + 41);
  return MEMORY[0x1F4188298](sub_1B5A0FBCC, 0, 0);
}

uint64_t sub_1B5A0FBCC()
{
  if (qword_1E9D62B20 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B5A1A328();
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9D910D0);
  uint64_t v2 = sub_1B5A1A308();
  os_log_type_t v3 = sub_1B5A1C278();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1B58FD000, v2, v3, "performing DeleteAction", v4, 2u);
    MEMORY[0x1BA9A4780](v4, -1, -1);
  }
  long long v5 = *(NSObject **)(v0 + 96);

  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = *(void *)(v0 + 32);
  char v9 = *(unsigned char *)(v0 + 40);
  sub_1B5904C08(v6, v7, v8, v9);
  uint64_t v10 = sub_1B59B4998(v5, v6, v7, v8, v9);
  sub_1B5905248(v6, v7, v8, v9);
  sub_1B5A0F768();
  sub_1B5A1C338();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(v10 + 32);
    do
    {
      uint64_t v13 = *v12++;
      *(void *)(v0 + 88) = v13;
      sub_1B5A1C318();
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 152);
  uint64_t v15 = *(void *)(v0 + 136);
  uint64_t v17 = *(void *)(v0 + 112);
  uint64_t v16 = *(void *)(v0 + 120);
  uint64_t v19 = *(void *)(v0 + 96);
  uint64_t v18 = *(void *)(v0 + 104);
  uint64_t v28 = v15;
  uint64_t v29 = v18;
  unint64_t v30 = *(void (**)(uint64_t))(v16 + 32);
  v30(v14);
  uint64_t v20 = sub_1B5A1C188();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v14, v17);
  sub_1B5A1C168();
  sub_1B5A10348(v0 + 16, (void (*)(void, void, void, void))sub_1B5904C08);
  swift_retain();
  uint64_t v21 = sub_1B5A1C158();
  unint64_t v22 = (*(unsigned __int8 *)(v16 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = MEMORY[0x1E4FBCFD8];
  *(void *)(v23 + 16) = v21;
  *(void *)(v23 + 24) = v24;
  long long v25 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v23 + 48) = v25;
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v23 + 73) = *(_OWORD *)(v0 + 57);
  *(void *)(v23 + 96) = v19;
  ((void (*)(unint64_t, uint64_t, uint64_t))v30)(v23 + v22, v28, v17);
  sub_1B5923814(v29, (uint64_t)&unk_1E9D66418, v23);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_1B5A0FF94()
{
  uint64_t v1 = sub_1B5A1A2C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 104) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  sub_1B5905248(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  sub_1B591F344(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1B5A10088(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1B5A1A2C8() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (uint64_t)(v1 + 4);
  uint64_t v8 = v1[12];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1B592D9C8;
  return sub_1B5A0D568(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1B5A1018C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = v1[1];
  long long v16 = *v1;
  long long v17 = v6;
  v18[0] = v1[2];
  *(_OWORD *)((char *)v18 + 9) = *(long long *)((char *)v1 + 41);
  if (objc_msgSend(self, sel_isMainThread))
  {
    long long v7 = v1[1];
    v14[0] = *v1;
    v14[1] = v7;
    v15[0] = v1[2];
    *(_OWORD *)((char *)v15 + 9) = *(long long *)((char *)v1 + 41);
    return sub_1B5A0DE54(a1);
  }
  else
  {
    uint64_t v9 = sub_1B5A1C188();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
    sub_1B5A1C168();
    sub_1B5A10348((uint64_t)&v16, (void (*)(void, void, void, void))sub_1B5909638);
    swift_retain();
    uint64_t v10 = sub_1B5A1C158();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = MEMORY[0x1E4FBCFD8];
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v12;
    long long v13 = v17;
    *(_OWORD *)(v11 + 32) = v16;
    *(_OWORD *)(v11 + 48) = v13;
    *(_OWORD *)(v11 + 64) = v18[0];
    *(_OWORD *)(v11 + 73) = *(_OWORD *)((char *)v18 + 9);
    *(void *)(v11 + 96) = a1;
    sub_1B5923814((uint64_t)v5, (uint64_t)&unk_1E9D66428, v11);
    return swift_release();
  }
}

uint64_t sub_1B5A10348(uint64_t a1, void (*a2)(void, void, void, void))
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  sub_1B5909638(v3, v4, v5, v6);
  return a1;
}

uint64_t sub_1B5A103B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[12];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1B592D9C8;
  return sub_1B5A0E204(a1, v4, v5, v6, v7);
}

uint64_t objectdestroy_24Tm()
{
  swift_unknownObjectRelease();
  sub_1B591F344(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  sub_1B591F344(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_release();
  return MEMORY[0x1F4186498](v0, 104, 7);
}

void sub_1B5A104E0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63780);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v1;
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  char v9 = *(unsigned char *)(v1 + 24);
  if (objc_msgSend(self, sel_isMainThread))
  {
    v14[0] = v7;
    v14[1] = v6;
    _OWORD v14[2] = v8;
    char v15 = v9;
    sub_1B5A0E8A4(a1);
  }
  else
  {
    uint64_t v10 = sub_1B5A1C188();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
    sub_1B5A1C168();
    sub_1B5909638(v7, v6, v8, v9);
    swift_retain();
    uint64_t v11 = sub_1B5A1C158();
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = MEMORY[0x1E4FBCFD8];
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v13;
    *(void *)(v12 + 32) = v7;
    *(void *)(v12 + 40) = v6;
    *(void *)(v12 + 48) = v8;
    *(unsigned char *)(v12 + 56) = v9;
    *(void *)(v12 + 64) = a1;
    sub_1B5923814((uint64_t)v5, (uint64_t)&unk_1E9D66440, v12);
    swift_release();
  }
}

uint64_t sub_1B5A10684(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1B592D9C8;
  return sub_1B5A0EC7C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroy_35Tm_0()
{
  swift_unknownObjectRelease();
  sub_1B591F344(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

unint64_t sub_1B5A107B8()
{
  unint64_t result = qword_1E9D66458;
  if (!qword_1E9D66458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66458);
  }
  return result;
}

unint64_t sub_1B5A1080C()
{
  unint64_t result = qword_1E9D66468;
  if (!qword_1E9D66468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66468);
  }
  return result;
}

unint64_t sub_1B5A10860()
{
  unint64_t result = qword_1E9D66478;
  if (!qword_1E9D66478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66478);
  }
  return result;
}

unint64_t sub_1B5A108B4()
{
  unint64_t result = qword_1E9D66498;
  if (!qword_1E9D66498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66498);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MoveAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A109D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAction.CodingKeys()
{
  return &type metadata for MoveAction.CodingKeys;
}

ValueMetadata *type metadata accessor for DeleteAction.CodingKeys()
{
  return &type metadata for DeleteAction.CodingKeys;
}

unsigned char *_s6LiftUI12DeleteActionV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A10AECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppendAction.CodingKeys()
{
  return &type metadata for AppendAction.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RemoveLastAction.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5A10BC0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoveLastAction.CodingKeys()
{
  return &type metadata for RemoveLastAction.CodingKeys;
}

unint64_t sub_1B5A10BFC()
{
  unint64_t result = qword_1E9D664A0;
  if (!qword_1E9D664A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664A0);
  }
  return result;
}

unint64_t sub_1B5A10C54()
{
  unint64_t result = qword_1E9D664A8;
  if (!qword_1E9D664A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664A8);
  }
  return result;
}

unint64_t sub_1B5A10CAC()
{
  unint64_t result = qword_1E9D664B0;
  if (!qword_1E9D664B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664B0);
  }
  return result;
}

unint64_t sub_1B5A10D04()
{
  unint64_t result = qword_1E9D664B8;
  if (!qword_1E9D664B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664B8);
  }
  return result;
}

unint64_t sub_1B5A10D5C()
{
  unint64_t result = qword_1E9D664C0;
  if (!qword_1E9D664C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664C0);
  }
  return result;
}

unint64_t sub_1B5A10DB4()
{
  unint64_t result = qword_1E9D664C8;
  if (!qword_1E9D664C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664C8);
  }
  return result;
}

unint64_t sub_1B5A10E0C()
{
  unint64_t result = qword_1E9D664D0;
  if (!qword_1E9D664D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664D0);
  }
  return result;
}

unint64_t sub_1B5A10E64()
{
  unint64_t result = qword_1E9D664D8;
  if (!qword_1E9D664D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664D8);
  }
  return result;
}

unint64_t sub_1B5A10EBC()
{
  unint64_t result = qword_1E9D664E0;
  if (!qword_1E9D664E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664E0);
  }
  return result;
}

unint64_t sub_1B5A10F14()
{
  unint64_t result = qword_1E9D664E8;
  if (!qword_1E9D664E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664E8);
  }
  return result;
}

unint64_t sub_1B5A10F6C()
{
  unint64_t result = qword_1E9D664F0;
  if (!qword_1E9D664F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664F0);
  }
  return result;
}

unint64_t sub_1B5A10FC4()
{
  unint64_t result = qword_1E9D664F8;
  if (!qword_1E9D664F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D664F8);
  }
  return result;
}

uint64_t sub_1B5A11018()
{
  return 0x7961727261;
}

uint64_t sub_1B5A1102C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t destroy for AlertModifier(uint64_t a1)
{
  sub_1B5904A88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_1B590D6F0(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 96))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  }
  return result;
}

uint64_t initializeWithCopy for AlertModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  sub_1B590D634(v8, v9, v10, v11);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v12;
    *(void *)(a1 + 104) = v13;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8))(a1 + 72, a2 + 72, v12);
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v14;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
  }
  return a1;
}

uint64_t assignWithCopy for AlertModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B5904B60(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B5904A88(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  char v15 = *(unsigned char *)(a2 + 56);
  sub_1B590D634(v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  char v19 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 56) = v15;
  sub_1B590D6F0(v16, v17, v18, v19);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 96);
  if (!*(void *)(a1 + 96))
  {
    if (v20)
    {
      *(void *)(a1 + 96) = v20;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 72, a2 + 72);
      return a1;
    }
LABEL_7:
    long long v21 = *(_OWORD *)(a2 + 72);
    long long v22 = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_OWORD *)(a1 + 72) = v21;
    *(_OWORD *)(a1 + 88) = v22;
    return a1;
  }
  if (!v20)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 72);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
  return a1;
}

uint64_t assignWithTake for AlertModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B5904A88(v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B590D6F0(v12, v13, v14, v15);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 96)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  }
  long long v16 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v16;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlertModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 64) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertModifier()
{
  return &type metadata for AlertModifier;
}

uint64_t sub_1B5A114C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1B5A1151C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v5 + 32);
  uint64_t v10 = *(void *)(v5 + 40);
  uint64_t v11 = *(void *)(v5 + 48);
  char v12 = *(unsigned char *)(v5 + 56);
  sub_1B590D634(v9, v10, v11, v12);
  uint64_t v13 = sub_1B59966F8(a2, v9, v10, v11, v12);
  if (v4)
  {

    sub_1B590D6F0(v9, v10, v11, v12);
    return sub_1B590CA38((uint64_t)a1, a3);
  }
  else
  {
    int v45 = v15;
    uint64_t v46 = v14;
    uint64_t v57 = v13;
    sub_1B590D6F0(v9, v10, v11, v12);
    uint64_t v17 = a1[3];
    uint64_t v42 = a1[4];
    uint64_t v43 = v17;
    uint64_t v44 = __swift_project_boxed_opaque_existential_1(a1, v17);
    uint64_t v18 = *(void *)(v5 + 8);
    uint64_t v19 = *(void *)(v5 + 16);
    unsigned __int8 v20 = *(unsigned char *)(v5 + 24);
    uint64_t v47 = *(void *)v5;
    uint64_t v48 = v18;
    uint64_t v49 = v19;
    LOBYTE(v50) = v20;
    sub_1B5904B60(v47, v18, v19, v20);
    uint64_t v38 = (uint64_t *)a3;
    unint64_t v21 = StringResolvable.resolved(with:)(a2);
    uint64_t v23 = v22;
    v37[1] = 0;
    uint64_t v24 = sub_1B5904A88(v47, v18, v19, v20);
    unint64_t v41 = v37;
    unint64_t v55 = v21;
    uint64_t v56 = v23;
    uint64_t v25 = MEMORY[0x1F4188790](v24);
    int v40 = v36;
    v36[2] = v5;
    MEMORY[0x1F4188790](v25);
    uint64_t v39 = v35;
    v35[2] = v5;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63410);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D63440);
    unint64_t v28 = sub_1B5943480();
    uint64_t v29 = sub_1B591E560((unint64_t *)&qword_1E9D63418, &qword_1E9D63410);
    uint64_t v30 = sub_1B591E560((unint64_t *)&qword_1E9D63438, &qword_1E9D63440);
    uint64_t v31 = v42;
    uint64_t v32 = v43;
    uint64_t v47 = v43;
    uint64_t v48 = MEMORY[0x1E4FBB1A0];
    uint64_t v49 = v26;
    uint64_t v50 = v27;
    uint64_t v51 = v42;
    unint64_t v52 = v28;
    uint64_t v53 = v29;
    uint64_t v54 = v30;
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t v34 = v38;
    v38[3] = OpaqueTypeMetadata2;
    uint64_t v47 = v32;
    uint64_t v48 = MEMORY[0x1E4FBB1A0];
    uint64_t v49 = v26;
    uint64_t v50 = v27;
    uint64_t v51 = v31;
    unint64_t v52 = v28;
    uint64_t v53 = v29;
    uint64_t v54 = v30;
    v34[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v34);
    sub_1B5A1B668();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B5A118A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63410);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8) {
    uint64_t v9 = v8;
  }
  v11[1] = v9;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D633B8);
  sub_1B59095C8(&qword_1E9D633C0, &qword_1E9D633B8);
  sub_1B5A1BB28();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t sub_1B5A11A38@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B5921484(a1 + 72, (uint64_t)v7);
  uint64_t v3 = v8;
  if (v8)
  {
    uint64_t v4 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    uint64_t result = sub_1B5908FC0((uint64_t)v7, &qword_1E9D632B0);
    uint64_t v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1B5A11AD4(char a1)
{
  return *(void *)&aTitle_8[8 * a1];
}

uint64_t sub_1B5A11AF4(char *a1, char *a2)
{
  return sub_1B59EF6AC(*a1, *a2);
}

uint64_t sub_1B5A11B00()
{
  return sub_1B59F29EC();
}

uint64_t sub_1B5A11B08()
{
  return sub_1B59F4710();
}

uint64_t sub_1B5A11B10()
{
  return sub_1B59F5678();
}

uint64_t sub_1B5A11B18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A124FC();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A11B48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A11AD4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A11B74()
{
  return sub_1B5A11AD4(*v0);
}

uint64_t sub_1B5A11B7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A124FC();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A11BA4(uint64_t a1)
{
  unint64_t v2 = sub_1B5A121BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A11BE0(uint64_t a1)
{
  unint64_t v2 = sub_1B5A121BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5A11C1C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66508);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A121BC();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v22 = a1;
    LOBYTE(v34) = 0;
    sub_1B5904A34();
    sub_1B5A1C5D8();
    long long v37 = v24;
    uint64_t v20 = v25;
    uint64_t v21 = *((void *)&v24 + 1);
    uint64_t v38 = v25;
    int v19 = BYTE8(v25);
    char v39 = BYTE8(v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    LOBYTE(v34) = 1;
    sub_1B59095C8((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
    sub_1B5A1C5D8();
    long long v17 = v24;
    long long v40 = v24;
    v15[1] = v25;
    uint64_t v41 = v25;
    int v16 = BYTE8(v25);
    char v42 = BYTE8(v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63B30);
    LOBYTE(v34) = 2;
    sub_1B592FA5C();
    sub_1B5A1C5B8();
    if ((void)v24)
    {
      uint64_t v18 = sub_1B59196AC(v24);
      swift_bridgeObjectRelease();
      uint64_t v8 = v18;
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v18 = v8;
    uint64_t v43 = v8;
    char v23 = 3;
    sub_1B5914100();
    sub_1B5A1C5B8();
    if (*((void *)&v24 + 1))
    {
      *((void *)&v35 + 1) = &type metadata for ViewContent;
      unint64_t v36 = sub_1B5914034();
      uint64_t v9 = swift_allocObject();
      *(void *)&long long v34 = v9;
      long long v10 = v31;
      *(_OWORD *)(v9 + 112) = v30;
      *(_OWORD *)(v9 + 128) = v10;
      *(_OWORD *)(v9 + 144) = v32;
      *(void *)(v9 + 160) = v33;
      long long v11 = v27;
      *(_OWORD *)(v9 + 48) = v26;
      *(_OWORD *)(v9 + 64) = v11;
      long long v12 = v29;
      *(_OWORD *)(v9 + 80) = v28;
      *(_OWORD *)(v9 + 96) = v12;
      long long v13 = v25;
      *(_OWORD *)(v9 + 16) = v24;
      *(_OWORD *)(v9 + 32) = v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_1B5908FC0((uint64_t)&v24, &qword_1E9D63B40);
      long long v34 = 0u;
      long long v35 = 0u;
      unint64_t v36 = 0;
    }
    uint64_t v14 = v45;
    sub_1B59215A0((uint64_t)&v34, (uint64_t)&v44);
    sub_1B5A12210((uint64_t)&v37, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    sub_1B5A12248((uint64_t)&v37);
  }
}

uint64_t sub_1B5A120B8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B5A1151C(a1, a2, a3);
}

void sub_1B5A120D0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B5A120E8(uint64_t a1)
{
  unint64_t result = sub_1B5A12110();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A12110()
{
  unint64_t result = qword_1E9D66500;
  if (!qword_1E9D66500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66500);
  }
  return result;
}

uint64_t sub_1B5A12164@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_1B5A121BC()
{
  unint64_t result = qword_1E9D66510;
  if (!qword_1E9D66510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66510);
  }
  return result;
}

uint64_t sub_1B5A12210(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5A12248(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5A12278()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

unsigned char *storeEnumTagSinglePayload for AlertModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A123BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertModifier.CodingKeys()
{
  return &type metadata for AlertModifier.CodingKeys;
}

unint64_t sub_1B5A123F8()
{
  unint64_t result = qword_1E9D66518;
  if (!qword_1E9D66518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66518);
  }
  return result;
}

unint64_t sub_1B5A12450()
{
  unint64_t result = qword_1E9D66520;
  if (!qword_1E9D66520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66520);
  }
  return result;
}

unint64_t sub_1B5A124A8()
{
  unint64_t result = qword_1E9D66528;
  if (!qword_1E9D66528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66528);
  }
  return result;
}

uint64_t sub_1B5A124FC()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for OverlayModifier()
{
  return &type metadata for OverlayModifier;
}

uint64_t sub_1B5A12558(uint64_t a1)
{
  unint64_t v2 = sub_1B5A1297C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A12594(uint64_t a1)
{
  unint64_t v2 = sub_1B5A1297C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A125D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66538);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A1297C();
  sub_1B5A1C838();
  if (!v2)
  {
    long long v12 = &type metadata for ViewContent;
    unint64_t v13 = sub_1B5914034();
    *(void *)&long long v11 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1B5908BE8(&v11, (uint64_t)v14);
    long long v9 = v14[1];
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v9;
    *(void *)(a2 + 32) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5A12788@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = sub_1B5A1A748();
  sub_1B5A12920();
  a2[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B5A1B6F8();
}

uint64_t sub_1B5A1288C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A125D0(a1, a2);
}

unint64_t sub_1B5A128A4(uint64_t a1)
{
  unint64_t result = sub_1B5A128CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A128CC()
{
  unint64_t result = qword_1E9D66530;
  if (!qword_1E9D66530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66530);
  }
  return result;
}

unint64_t sub_1B5A12920()
{
  unint64_t result = qword_1E9D64EA8;
  if (!qword_1E9D64EA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D64EA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D64EA8);
  }
  return result;
}

unint64_t sub_1B5A1297C()
{
  unint64_t result = qword_1E9D66540;
  if (!qword_1E9D66540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66540);
  }
  return result;
}

uint64_t sub_1B5A129D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

unsigned char *storeEnumTagSinglePayload for OverlayModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5A12AE4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OverlayModifier.CodingKeys()
{
  return &type metadata for OverlayModifier.CodingKeys;
}

unint64_t sub_1B5A12B20()
{
  unint64_t result = qword_1E9D66548;
  if (!qword_1E9D66548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66548);
  }
  return result;
}

unint64_t sub_1B5A12B78()
{
  unint64_t result = qword_1E9D66550;
  if (!qword_1E9D66550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66550);
  }
  return result;
}

unint64_t sub_1B5A12BD0()
{
  unint64_t result = qword_1E9D66558;
  if (!qword_1E9D66558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66558);
  }
  return result;
}

uint64_t destroy for ScrollViewReaderView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), v2);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ScrollViewReaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 80);
  if (v9 <= 0xFD)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    uint64_t v11 = *(void *)(a2 + 64);
    uint64_t v12 = *(void *)(a2 + 72);
    sub_1B5904B60(v10, v11, v12, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    *(unsigned char *)(a1 + 80) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  }
  uint64_t v13 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v13;
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScrollViewReaderView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 56);
      uint64_t v13 = *(void *)(a2 + 64);
      uint64_t v14 = *(void *)(a2 + 72);
      sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 80));
      uint64_t v15 = *(void *)(a1 + 56);
      uint64_t v16 = *(void *)(a1 + 64);
      uint64_t v17 = *(void *)(a1 + 72);
      *(void *)(a1 + 56) = v12;
      *(void *)(a1 + 64) = v13;
      *(void *)(a1 + 72) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 80);
      *(unsigned char *)(a1 + 80) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 56);
      long long v8 = *(_OWORD *)(a2 + 65);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 65) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 56);
    uint64_t v10 = *(void *)(a2 + 64);
    uint64_t v11 = *(void *)(a2 + 72);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v11;
    *(unsigned char *)(a1 + 80) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
    *uint64_t v4 = v7;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t assignWithTake for ScrollViewReaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 <= 0xFD)
  {
    unsigned int v7 = *(unsigned __int8 *)(a2 + 80);
    if (v7 <= 0xFD)
    {
      uint64_t v8 = *(void *)(a2 + 72);
      uint64_t v9 = *(void *)(a1 + 56);
      uint64_t v10 = *(void *)(a1 + 64);
      uint64_t v11 = *(void *)(a1 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(void *)(a1 + 72) = v8;
      *(unsigned char *)(a1 + 80) = v7;
      sub_1B5904A88(v9, v10, v11, v6);
      goto LABEL_6;
    }
    sub_1B590DA50(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
LABEL_6:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

ValueMetadata *type metadata accessor for ScrollViewReaderView()
{
  return &type metadata for ScrollViewReaderView;
}

uint64_t destroy for GeometryReaderView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), v2);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for GeometryReaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 80);
  if (v9 <= 0xFD)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    uint64_t v11 = *(void *)(a2 + 64);
    uint64_t v12 = *(void *)(a2 + 72);
    sub_1B5904B60(v10, v11, v12, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    *(unsigned char *)(a1 + 80) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  }
  uint64_t v13 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GeometryReaderView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v12 = *(void *)(a2 + 56);
      uint64_t v13 = *(void *)(a2 + 64);
      uint64_t v14 = *(void *)(a2 + 72);
      sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 80));
      uint64_t v15 = *(void *)(a1 + 56);
      uint64_t v16 = *(void *)(a1 + 64);
      uint64_t v17 = *(void *)(a1 + 72);
      *(void *)(a1 + 56) = v12;
      *(void *)(a1 + 64) = v13;
      *(void *)(a1 + 72) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 80);
      *(unsigned char *)(a1 + 80) = v6;
      sub_1B5904A88(v15, v16, v17, v18);
    }
    else
    {
      sub_1B590DA50(a1 + 56);
      long long v8 = *(_OWORD *)(a2 + 65);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 65) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 56);
    uint64_t v10 = *(void *)(a2 + 64);
    uint64_t v11 = *(void *)(a2 + 72);
    sub_1B5904B60(v9, v10, v11, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v11;
    *(unsigned char *)(a1 + 80) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
    *uint64_t v4 = v7;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for GeometryReaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 <= 0xFD)
  {
    unsigned int v7 = *(unsigned __int8 *)(a2 + 80);
    if (v7 <= 0xFD)
    {
      uint64_t v8 = *(void *)(a2 + 72);
      uint64_t v9 = *(void *)(a1 + 56);
      uint64_t v10 = *(void *)(a1 + 64);
      uint64_t v11 = *(void *)(a1 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(void *)(a1 + 72) = v8;
      *(unsigned char *)(a1 + 80) = v7;
      sub_1B5904A88(v9, v10, v11, v6);
      goto LABEL_6;
    }
    sub_1B590DA50(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
LABEL_6:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

ValueMetadata *type metadata accessor for GeometryReaderView()
{
  return &type metadata for GeometryReaderView;
}

uint64_t sub_1B5A133BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    unsigned int v11 = *((unsigned __int8 *)a2 + 80);
    if (v11 <= 0xFD)
    {
      uint64_t v13 = a2[7];
      uint64_t v14 = a2[8];
      uint64_t v15 = a2[9];
      sub_1B5904B60(v13, v14, v15, *((unsigned char *)a2 + 80));
      *(void *)(a1 + 56) = v13;
      *(void *)(a1 + 64) = v14;
      *(void *)(a1 + 72) = v15;
      *(unsigned char *)(a1 + 80) = v11;
    }
    else
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(a1 + 65) = *(_OWORD *)((char *)a2 + 65);
    }
    uint64_t v16 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v16;
    *(void *)(a1 + 104) = a2[13];
    uint64_t v17 = *(int *)(a3 + 36);
    unsigned __int8 v18 = (void *)(a1 + v17);
    int v19 = (uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_1B5A1A4D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *unsigned __int8 v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B5A135A8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  unsigned int v4 = *(unsigned __int8 *)(a1 + 80);
  if (v4 <= 0xFD) {
    sub_1B5904A88(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), v4);
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1B5A1A4D8();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1B5A13690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  unsigned int v11 = *(unsigned __int8 *)(a2 + 80);
  if (v11 <= 0xFD)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = *(void *)(a2 + 64);
    uint64_t v14 = *(void *)(a2 + 72);
    sub_1B5904B60(v12, v13, v14, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v14;
    *(unsigned char *)(a1 + 80) = v11;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  }
  uint64_t v15 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = (void *)(a1 + v16);
  unsigned __int8 v18 = (void *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1B5A1A4D8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1B5A13824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v6 = (_OWORD *)(a1 + 56);
  uint64_t v7 = (_OWORD *)(a2 + 56);
  unsigned int v8 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) <= 0xFDu)
  {
    if (v8 <= 0xFD)
    {
      uint64_t v14 = *(void *)(a2 + 56);
      uint64_t v15 = *(void *)(a2 + 64);
      uint64_t v16 = *(void *)(a2 + 72);
      sub_1B5904B60(v14, v15, v16, *(unsigned char *)(a2 + 80));
      uint64_t v17 = *(void *)(a1 + 56);
      uint64_t v18 = *(void *)(a1 + 64);
      uint64_t v19 = *(void *)(a1 + 72);
      *(void *)(a1 + 56) = v14;
      *(void *)(a1 + 64) = v15;
      *(void *)(a1 + 72) = v16;
      unsigned __int8 v20 = *(unsigned char *)(a1 + 80);
      *(unsigned char *)(a1 + 80) = v8;
      sub_1B5904A88(v17, v18, v19, v20);
    }
    else
    {
      sub_1B590DA50(a1 + 56);
      long long v10 = *(_OWORD *)(a2 + 65);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 65) = v10;
    }
  }
  else if (v8 <= 0xFD)
  {
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 72);
    sub_1B5904B60(v11, v12, v13, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v13;
    *(unsigned char *)(a1 + 80) = v8;
  }
  else
  {
    long long v9 = *v7;
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
    *uint64_t v6 = v9;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  if (a1 != a2)
  {
    uint64_t v21 = *(int *)(a3 + 36);
    uint64_t v22 = (void *)(a1 + v21);
    char v23 = (void *)(a2 + v21);
    sub_1B5908FC0(a1 + v21, &qword_1E9D62ED0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_1B5A1A4D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *uint64_t v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B5A13A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1B5A1A4D8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1B5A13B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  unsigned int v8 = *(unsigned __int8 *)(a1 + 80);
  if (v8 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v9 = *(unsigned __int8 *)(a2 + 80);
  if (v9 > 0xFD)
  {
    sub_1B590DA50(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = v9;
  sub_1B5904A88(v11, v12, v13, v8);
LABEL_6:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 36);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    sub_1B5908FC0(a1 + v14, &qword_1E9D62ED0);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_1B5A1A4D8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B5A13CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5A13CE8);
}

uint64_t sub_1B5A13CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66560);
    unsigned int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1B5A13D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5A13DB0);
}

uint64_t sub_1B5A13DB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66560);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ColorSchemeReader()
{
  uint64_t result = qword_1E9D66568;
  if (!qword_1E9D66568) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B5A13EA8()
{
  sub_1B5A13F6C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1B5A13F6C()
{
  if (!qword_1E9D66578)
  {
    sub_1B5A1A4D8();
    unint64_t v0 = sub_1B5A1A4F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9D66578);
    }
  }
}

uint64_t sub_1B5A13FC4()
{
  unint64_t v1 = 0xD000000000000016;
  unsigned int v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 > 0xFD) {
    return v1;
  }
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  if (*(void *)(v0 + 96))
  {
    sub_1B5904BDC(v4, v3, v5, v2);
    uint64_t v6 = swift_retain();
    unint64_t v7 = StringResolvable.resolved(with:)(v6);
    sub_1B5904B4C(v4, v3, v5, v2);
    swift_release();
    return v7;
  }
  sub_1B5904B60(v4, v3, v5, v2);
  type metadata accessor for RemoteStateStore(0);
  sub_1B5A16770((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B5A14144@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1B5A1A4D8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = v1[5];
  uint64_t v11 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  uint64_t v13 = v1[12];
  if (v13)
  {
    uint64_t v14 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E38);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
    swift_retain();
    *(void *)(inited + 32) = sub_1B5A13FC4();
    *(void *)(inited + 40) = v16;
    type metadata accessor for ColorSchemeReader();
    sub_1B5904608((uint64_t)v9);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4F3C5C0], v3);
    char v17 = sub_1B5A1A4C8();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v7, v3);
    v18(v9, v3);
    BOOL v19 = (v17 & 1) == 0;
    if (v17) {
      uint64_t v20 = 0x746867696CLL;
    }
    else {
      uint64_t v20 = 1802658148;
    }
    if (v19) {
      unint64_t v21 = 0xE400000000000000;
    }
    else {
      unint64_t v21 = 0xE500000000000000;
    }
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v20;
    *(void *)(v22 + 24) = v21;
    *(void *)(inited + 48) = v22;
    unint64_t v23 = sub_1B59030D8(inited);
    uint64_t v24 = MEMORY[0x1E4FBC860];
    unint64_t v25 = sub_1B5902F98(MEMORY[0x1E4FBC860]);
    type metadata accessor for RemoteStateStore(0);
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = qword_1E9D65378;
    swift_retain();
    *(void *)(v26 + v27) = sub_1B5902F98(v24);
    *(void *)(v26 + qword_1E9D65380) = v13;
    swift_retain_n();
    swift_release();
    uint64_t v28 = sub_1B59038C0(v13);
    swift_retain();
    sub_1B590505C(v23, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B5904C58);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    long long v29 = (unint64_t *)(v28 + qword_1E9D65378);
    swift_beginAccess();
    unint64_t *v29 = v25;
    swift_bridgeObjectRelease();
    sub_1B5A16770((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A348();
    *a1 = v14;
    a1[1] = result;
    a1[2] = v28;
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B5A16770((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5A144F0(char a1)
{
  return qword_1B5A31A58[a1];
}

uint64_t sub_1B5A14510(char *a1, char *a2)
{
  return sub_1B59EE150(*a1, *a2);
}

uint64_t sub_1B5A1451C()
{
  return sub_1B59F2A58();
}

uint64_t sub_1B5A14524()
{
  return sub_1B59F3A04();
}

uint64_t sub_1B5A1452C()
{
  return sub_1B59F6140();
}

uint64_t sub_1B5A14534@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A1456C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A144F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A14598()
{
  return sub_1B5A144F0(*v0);
}

uint64_t sub_1B5A145A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A145D0(uint64_t a1)
{
  unint64_t v2 = sub_1B5A16978();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A1460C(uint64_t a1)
{
  unint64_t v2 = sub_1B5A16978();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A14648@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v28 = sub_1B5A1A2A8();
  uint64_t v30 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D665C0);
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorSchemeReader();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v11 + 11) = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B5A16770((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  *((void *)v11 + 12) = sub_1B5A1A918();
  *((void *)v11 + 13) = v12;
  uint64_t v13 = (uint64_t *)&v11[*(int *)(v9 + 44)];
  *uint64_t v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62ED0);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a1[3];
  long long v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1B5A16978();
  uint64_t v15 = v33;
  sub_1B5A1C838();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1B5908FC0((uint64_t)v13, &qword_1E9D66560);
  }
  else
  {
    uint64_t v17 = v30;
    uint64_t v16 = v31;
    LOBYTE(v34) = 0;
    uint64_t v18 = sub_1B5A1C598();
    uint64_t v21 = v19;
    uint64_t v33 = v5;
    if (!v19)
    {
      uint64_t v22 = v4;
      sub_1B5A1A298();
      uint64_t v23 = sub_1B5A1A288();
      uint64_t v21 = v24;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v28);
      uint64_t v18 = v23;
    }
    *(void *)uint64_t v11 = v18;
    *((void *)v11 + 1) = v21;
    char v38 = 1;
    unint64_t v36 = &type metadata for ViewContent;
    unint64_t v37 = sub_1B5914034();
    *(void *)&long long v34 = swift_allocObject();
    sub_1B5914100();
    uint64_t v25 = v33;
    sub_1B5A1C5D8();
    sub_1B5908BE8(&v34, (uint64_t)(v11 + 16));
    char v38 = 2;
    sub_1B5904A34();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v25);
    uint64_t v26 = v35;
    char v27 = (char)v36;
    *(_OWORD *)(v11 + 56) = v34;
    *((void *)v11 + 9) = v26;
    v11[80] = v27;
    sub_1B5A169CC((uint64_t)v11, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    return sub_1B5A16A30((uint64_t)v11);
  }
}

uint64_t sub_1B5A14AAC@<X0>(uint64_t *a1@<X8>)
{
  sub_1B5A14144((uint64_t *)&v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D62CC8);
  sub_1B59080C4();
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A14B18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A14648(a1, a2);
}

uint64_t sub_1B5A14B30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5A14B4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5A14C04()
{
  uint64_t v1 = 0x797274656D6F6567;
  unsigned int v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 > 0xFD) {
    return v1;
  }
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  if (*(void *)(v0 + 96))
  {
    sub_1B5904BDC(v4, v3, v5, v2);
    uint64_t v6 = swift_retain();
    unint64_t v7 = StringResolvable.resolved(with:)(v6);
    sub_1B5904B4C(v4, v3, v5, v2);
    swift_release();
    return v7;
  }
  sub_1B5904B60(v4, v3, v5, v2);
  type metadata accessor for RemoteStateStore(0);
  sub_1B5A16770((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B5A14D80@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v3);
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v5 = a1[12];
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63E38);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
    swift_retain();
    *(void *)(inited + 32) = sub_1B5A14C04();
    *(void *)(inited + 40) = v7;
    uint64_t v8 = swift_initStackObject();
    *(_OWORD *)(v8 + 16) = xmmword_1B5A29A70;
    *(void *)(v8 + 32) = 1702521203;
    *(void *)(v8 + 40) = 0xE400000000000000;
    uint64_t v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_1B5A29A70;
    *(void *)(v9 + 32) = 0x6874646977;
    *(void *)(v9 + 40) = 0xE500000000000000;
    uint64_t v10 = swift_allocObject();
    sub_1B5A1A5A8();
    *(void *)(v10 + 16) = v11;
    *(void *)(v9 + 48) = v10 | 0x4000000000000000;
    uint64_t v12 = swift_allocObject();
    *(void *)(v9 + 56) = 0x746867696568;
    *(void *)(v9 + 64) = 0xE600000000000000;
    uint64_t v13 = swift_allocObject();
    sub_1B5A1A5A8();
    *(void *)(v13 + 16) = v14;
    *(void *)(v9 + 72) = v13 | 0x4000000000000000;
    *(void *)(v12 + 16) = sub_1B59030D8(v9);
    *(void *)(v8 + 48) = v12 | 0xA000000000000000;
    strcpy((char *)(v8 + 56), "safeAreaInsets");
    *(unsigned char *)(v8 + 71) = -18;
    uint64_t v15 = swift_initStackObject();
    *(_OWORD *)(v15 + 16) = xmmword_1B5A31340;
    *(void *)(v15 + 32) = 7368564;
    *(void *)(v15 + 40) = 0xE300000000000000;
    uint64_t v16 = swift_allocObject();
    sub_1B5A1A598();
    *(void *)(v16 + 16) = v17;
    *(void *)(v15 + 48) = v16 | 0x4000000000000000;
    *(void *)(v15 + 56) = 0x676E696C69617274;
    *(void *)(v15 + 64) = 0xE800000000000000;
    uint64_t v18 = swift_allocObject();
    sub_1B5A1A598();
    *(void *)(v18 + 16) = v19;
    *(void *)(v15 + 72) = v18 | 0x4000000000000000;
    *(void *)(v15 + 80) = 0x6D6F74746F62;
    *(void *)(v15 + 88) = 0xE600000000000000;
    uint64_t v20 = swift_allocObject();
    sub_1B5A1A598();
    *(void *)(v20 + 16) = v21;
    *(void *)(v15 + 96) = v20 | 0x4000000000000000;
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = swift_allocObject();
    *(void *)(v15 + 104) = 0x676E696461656CLL;
    *(void *)(v15 + 112) = 0xE700000000000000;
    uint64_t v24 = swift_allocObject();
    sub_1B5A1A598();
    *(void *)(v24 + 16) = v25;
    *(void *)(v15 + 120) = v24 | 0x4000000000000000;
    *(void *)(v23 + 16) = sub_1B59030D8(v15);
    *(void *)(v8 + 72) = v23 | 0xA000000000000000;
    *(void *)(v22 + 16) = sub_1B59030D8(v8);
    *(void *)(inited + 48) = v22 | 0xA000000000000000;
    unint64_t v26 = sub_1B59030D8(inited);
    uint64_t v27 = MEMORY[0x1E4FBC860];
    unint64_t v28 = sub_1B5902F98(MEMORY[0x1E4FBC860]);
    type metadata accessor for RemoteStateStore(0);
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = qword_1E9D65378;
    swift_retain();
    *(void *)(v29 + v30) = sub_1B5902F98(v27);
    *(void *)(v29 + qword_1E9D65380) = v5;
    swift_retain_n();
    swift_release();
    uint64_t v31 = sub_1B59038C0(v5);
    swift_retain();
    sub_1B590505C(v26, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B5904C58);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    long long v32 = (unint64_t *)(v31 + qword_1E9D65378);
    swift_beginAccess();
    *long long v32 = v28;
    swift_bridgeObjectRelease();
    sub_1B5A16770((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A348();
    *a2 = v34;
    a2[1] = result;
    a2[2] = v31;
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B5A16770((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5A15254@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A1528C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A152BC(uint64_t a1)
{
  unint64_t v2 = sub_1B5A168CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A152F8(uint64_t a1)
{
  unint64_t v2 = sub_1B5A168CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A15334@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v4 = sub_1B5A1A2A8();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D665B0);
  uint64_t v20 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B5A16770((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v31 = sub_1B5A1A918();
  uint64_t v32 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A168CC();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v11 = v33;
    LOBYTE(v22) = 0;
    uint64_t v12 = sub_1B5A1C598();
    uint64_t v15 = v13;
    if (v13)
    {
      uint64_t v16 = v12;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v16 = sub_1B5A1A288();
      uint64_t v15 = v17;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
    }
    v26[0] = v16;
    v26[1] = v15;
    char v21 = 1;
    uint64_t v24 = &type metadata for ViewContent;
    unint64_t v25 = sub_1B5914034();
    *(void *)&long long v22 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    sub_1B5908BE8(&v22, (uint64_t)v27);
    char v21 = 2;
    sub_1B5904A34();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
    *(_OWORD *)&v27[40] = v22;
    uint64_t v28 = v23;
    char v29 = (char)v24;
    sub_1B591FCE0((uint64_t)v26, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B5A16920((uint64_t)v26);
  }
}

uint64_t sub_1B5A15740@<X0>(uint64_t *a1@<X8>)
{
  sub_1B591FCE0(v1, (uint64_t)v8);
  uint64_t v3 = (_OWORD *)swift_allocObject();
  long long v4 = v8[5];
  void v3[5] = v8[4];
  uint64_t v3[6] = v4;
  v3[7] = v8[6];
  long long v5 = v8[1];
  v3[1] = v8[0];
  v3[2] = v5;
  long long v6 = v8[3];
  v3[3] = v8[2];
  v3[4] = v6;
  *(void *)&v8[0] = sub_1B591FD40;
  *((void *)&v8[0] + 1) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63688);
  sub_1B59095C8(&qword_1E9D63690, &qword_1E9D63688);
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

__n128 sub_1B5A15810@<Q0>(uint64_t (**a1)@<X0>(uint64_t *@<X8>)@<X8>)
{
  sub_1B591FCE0(v1, (uint64_t)v7);
  uint64_t v3 = swift_allocObject();
  long long v4 = v7[5];
  *(_OWORD *)(v3 + 80) = v7[4];
  *(_OWORD *)(v3 + 96) = v4;
  *(_OWORD *)(v3 + 112) = v7[6];
  long long v5 = v7[1];
  *(_OWORD *)(v3 + 16) = v7[0];
  *(_OWORD *)(v3 + 32) = v5;
  __n128 result = (__n128)v7[3];
  *(_OWORD *)(v3 + 48) = v7[2];
  *(__n128 *)(v3 + 64) = result;
  *a1 = sub_1B5A16F4C;
  a1[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v3;
  return result;
}

uint64_t sub_1B5A1588C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A15334(a1, a2);
}

uint64_t sub_1B5A158A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5A158C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B5A158EC(a1, a2, a3, (void (*)(void))sub_1B59E0444, (void (*)(void))sub_1B591FD48);
}

uint64_t sub_1B5A158EC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5A1595C()
{
  uint64_t v1 = 0x69566C6C6F726373;
  unsigned int v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 > 0xFD) {
    return v1;
  }
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  if (*(void *)(v0 + 96))
  {
    sub_1B5904BDC(v4, v3, v5, v2);
    uint64_t v6 = swift_retain();
    unint64_t v7 = StringResolvable.resolved(with:)(v6);
    sub_1B5904B4C(v4, v3, v5, v2);
    swift_release();
    return v7;
  }
  sub_1B5904B60(v4, v3, v5, v2);
  type metadata accessor for RemoteStateStore(0);
  sub_1B5A16770((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t result = sub_1B5A1A908();
  __break(1u);
  return result;
}

uint64_t sub_1B5A15AE0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = a2[5];
  uint64_t v7 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  uint64_t v9 = a2[14];
  if (v9)
  {
    uint64_t v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66598);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B5A1D730;
    swift_retain();
    *(void *)(inited + 32) = sub_1B5A1595C();
    *(void *)(inited + 40) = v12;
    uint64_t v13 = sub_1B5A1A778();
    *(void *)(inited + 72) = v13;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_1, a1, v13);
    unint64_t v15 = sub_1B5903614(inited);
    uint64_t v16 = MEMORY[0x1E4FBC860];
    unint64_t v17 = sub_1B5902F98(MEMORY[0x1E4FBC860]);
    type metadata accessor for LocalStateStore(0);
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = qword_1E9D65388;
    swift_retain();
    *(void *)(v18 + v19) = sub_1B5902F98(v16);
    *(void *)(v18 + qword_1E9D65390) = v9;
    swift_retain_n();
    swift_release();
    uint64_t v20 = sub_1B5903B24(v9);
    swift_retain();
    sub_1B59CC47C(v15, (void (*)(uint64_t, uint64_t, unsigned char *))sub_1B5A167B8);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    *(void *)(v20 + qword_1E9D65388) = v17;
    swift_bridgeObjectRelease();
    sub_1B5A16770(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
    uint64_t result = sub_1B5A1A348();
    *a3 = v10;
    a3[1] = result;
    a3[2] = v20;
  }
  else
  {
    type metadata accessor for LocalStateStore(0);
    sub_1B5A16770(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
    uint64_t result = sub_1B5A1A908();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5A15D6C(char a1)
{
  return qword_1B5A31A88[a1];
}

uint64_t sub_1B5A15D8C(char *a1, char *a2)
{
  return sub_1B59F01EC(*a1, *a2);
}

uint64_t sub_1B5A15D98()
{
  return sub_1B59F2AC4();
}

uint64_t sub_1B5A15DA0()
{
  return sub_1B59F4DE8();
}

uint64_t sub_1B5A15DA8()
{
  return sub_1B59F4E3C();
}

uint64_t sub_1B5A15DB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A15DE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A15D6C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A15E14()
{
  return sub_1B5A15D6C(*v0);
}

uint64_t sub_1B5A15E1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B590FF48();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A15E4C(uint64_t a1)
{
  unint64_t v2 = sub_1B5A167C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A15E88(uint64_t a1)
{
  unint64_t v2 = sub_1B5A167C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A15EC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v4 = sub_1B5A1A2A8();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D665A0);
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x1E4FBC860];
  type metadata accessor for RemoteStateStore(0);
  sub_1B5A16770((unint64_t *)&qword_1E9D62B90, (void (*)(uint64_t))type metadata accessor for RemoteStateStore);
  uint64_t v32 = sub_1B5A1A918();
  uint64_t v33 = v10;
  type metadata accessor for LocalStateStore(0);
  sub_1B5A16770(&qword_1E9D62B98, (void (*)(uint64_t))type metadata accessor for LocalStateStore);
  uint64_t v34 = sub_1B5A1A918();
  uint64_t v35 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A167C8();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v12 = v36;
    LOBYTE(v23) = 0;
    uint64_t v13 = sub_1B5A1C598();
    uint64_t v16 = v14;
    if (v14)
    {
      uint64_t v17 = v13;
    }
    else
    {
      sub_1B5A1A298();
      uint64_t v17 = sub_1B5A1A288();
      uint64_t v16 = v18;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
    }
    v27[0] = v17;
    v27[1] = v16;
    char v22 = 1;
    unint64_t v25 = &type metadata for ViewContent;
    unint64_t v26 = sub_1B5914034();
    *(void *)&long long v23 = swift_allocObject();
    sub_1B5914100();
    sub_1B5A1C5D8();
    sub_1B5908BE8(&v23, (uint64_t)v28);
    char v22 = 2;
    sub_1B5904A34();
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
    *(_OWORD *)&v28[40] = v23;
    uint64_t v29 = v24;
    char v30 = (char)v25;
    sub_1B591FE08((uint64_t)v27, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B5A16894((uint64_t)v27);
  }
}

uint64_t sub_1B5A1632C@<X0>(uint64_t *a1@<X8>)
{
  sub_1B591FE08(v1, (uint64_t)v9);
  uint64_t v3 = (_OWORD *)swift_allocObject();
  long long v4 = v9[5];
  void v3[5] = v9[4];
  uint64_t v3[6] = v4;
  long long v5 = v9[7];
  v3[7] = v9[6];
  v3[8] = v5;
  long long v6 = v9[1];
  v3[1] = v9[0];
  v3[2] = v6;
  long long v7 = v9[3];
  v3[3] = v9[2];
  v3[4] = v7;
  *(void *)&v9[0] = sub_1B591FE68;
  *((void *)&v9[0] + 1) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D636A0);
  sub_1B59095C8(&qword_1E9D636A8, &qword_1E9D636A0);
  uint64_t result = sub_1B5A1BA88();
  *a1 = result;
  return result;
}

double sub_1B5A163FC@<D0>(uint64_t (**a1)@<X0>(uint64_t@<X0>, uint64_t *@<X8>)@<X8>)
{
  sub_1B591FE08(v1, (uint64_t)v9);
  uint64_t v3 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))swift_allocObject();
  long long v4 = v13;
  *((_OWORD *)v3 + 5) = v12;
  *((_OWORD *)v3 + 6) = v4;
  long long v5 = v15;
  *((_OWORD *)v3 + 7) = v14;
  *((_OWORD *)v3 + 8) = v5;
  long long v6 = v9[1];
  *((_OWORD *)v3 + 1) = v9[0];
  *((_OWORD *)v3 + 2) = v6;
  double result = *(double *)&v10;
  long long v8 = v11;
  *((_OWORD *)v3 + 3) = v10;
  *((_OWORD *)v3 + 4) = v8;
  *a1 = sub_1B5A16F48;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B5A16478@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A15EC4(a1, a2);
}

uint64_t sub_1B5A16490()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5A164AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B5A158EC(a1, a2, a3, (void (*)(void))sub_1B59E0498, (void (*)(void))sub_1B591FE70);
}

unint64_t sub_1B5A164D8(uint64_t a1)
{
  unint64_t result = sub_1B5A16500();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5A16500()
{
  unint64_t result = qword_1E9D66580;
  if (!qword_1E9D66580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66580);
  }
  return result;
}

unint64_t sub_1B5A16554(uint64_t a1)
{
  unint64_t result = sub_1B5A1657C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B5A1657C()
{
  unint64_t result = qword_1E9D66588;
  if (!qword_1E9D66588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66588);
  }
  return result;
}

uint64_t sub_1B5A165D0(uint64_t a1)
{
  uint64_t result = sub_1B5A16770(&qword_1E9D66590, (void (*)(uint64_t))type metadata accessor for ColorSchemeReader);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B5A16628()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B5A16660(uint64_t a1)
{
  uint64_t v2 = sub_1B5A1A4D8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B5A1A938();
}

uint64_t sub_1B5A16728()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B5A16738()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B5A16770(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B5A167B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B59CBB14(a1, a2, a3);
}

unint64_t sub_1B5A167C8()
{
  unint64_t result = qword_1E9D665A8;
  if (!qword_1E9D665A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D665A8);
  }
  return result;
}

uint64_t sub_1B5A1681C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1B5A16894(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B5A168CC()
{
  unint64_t result = qword_1E9D665B8;
  if (!qword_1E9D665B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D665B8);
  }
  return result;
}

uint64_t sub_1B5A16920(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5A16950()
{
  return sub_1B5A1A928();
}

unint64_t sub_1B5A16978()
{
  unint64_t result = qword_1E9D665C8;
  if (!qword_1E9D665C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D665C8);
  }
  return result;
}

uint64_t sub_1B5A169CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ColorSchemeReader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5A16A30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorSchemeReader();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ColorSchemeReader.CodingKeys()
{
  return &type metadata for ColorSchemeReader.CodingKeys;
}

ValueMetadata *type metadata accessor for GeometryReaderView.CodingKeys()
{
  return &type metadata for GeometryReaderView.CodingKeys;
}

unsigned char *_s6LiftUI17ColorSchemeReaderV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A16B7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollViewReaderView.CodingKeys()
{
  return &type metadata for ScrollViewReaderView.CodingKeys;
}

uint64_t sub_1B5A16BB4()
{
  return sub_1B59095C8(&qword_1E9D636A8, &qword_1E9D636A0);
}

uint64_t sub_1B5A16BF0()
{
  return sub_1B59095C8(&qword_1E9D63690, &qword_1E9D63688);
}

unint64_t sub_1B5A16C34()
{
  unint64_t result = qword_1E9D665D0;
  if (!qword_1E9D665D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D665D0);
  }
  return result;
}

unint64_t sub_1B5A16C8C()
{
  unint64_t result = qword_1E9D665D8;
  if (!qword_1E9D665D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D665D8);
  }
  return result;
}

unint64_t sub_1B5A16CE4()
{
  unint64_t result = qword_1E9D665E0;
  if (!qword_1E9D665E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D665E0);
  }
  return result;
}

unint64_t sub_1B5A16D3C()
{
  unint64_t result = qword_1E9D665E8;
  if (!qword_1E9D665E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D665E8);
  }
  return result;
}

unint64_t sub_1B5A16D94()
{
  unint64_t result = qword_1E9D665F0;
  if (!qword_1E9D665F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D665F0);
  }
  return result;
}

unint64_t sub_1B5A16DEC()
{
  unint64_t result = qword_1E9D665F8;
  if (!qword_1E9D665F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D665F8);
  }
  return result;
}

unint64_t sub_1B5A16E44()
{
  unint64_t result = qword_1E9D66600;
  if (!qword_1E9D66600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66600);
  }
  return result;
}

unint64_t sub_1B5A16E9C()
{
  unint64_t result = qword_1E9D66608;
  if (!qword_1E9D66608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66608);
  }
  return result;
}

unint64_t sub_1B5A16EF4()
{
  unint64_t result = qword_1E9D66610;
  if (!qword_1E9D66610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66610);
  }
  return result;
}

uint64_t assignWithCopy for ClippedModifier(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v4 == 255)
    {
      long long v6 = *a2;
      *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      char v15 = v4 & 1;
      uint64_t v16 = *(void *)a2;
      uint64_t v17 = *((void *)a2 + 1);
      uint64_t v18 = *((void *)a2 + 2);
      sub_1B590D634(*(void *)a2, v17, v18, v4 & 1);
      *(void *)a1 = v16;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = v18;
      *(unsigned char *)(a1 + 24) = v15;
    }
  }
  else if (v4 == 255)
  {
    sub_1B5947804(a1);
    long long v5 = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 9) = v5;
  }
  else
  {
    char v7 = v4 & 1;
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *((void *)a2 + 1);
    uint64_t v10 = *((void *)a2 + 2);
    sub_1B590D634(*(void *)a2, v9, v10, v4 & 1);
    uint64_t v11 = *(void *)a1;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 16);
    char v14 = *(unsigned char *)(a1 + 24);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(unsigned char *)(a1 + 24) = v7;
    sub_1B590D6F0(v11, v12, v13, v14);
  }
  return a1;
}

uint64_t assignWithTake for ClippedModifier(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 != 255)
  {
    int v5 = *(unsigned __int8 *)(a2 + 24);
    if (v5 != 255)
    {
      char v6 = v4 & 1;
      uint64_t v7 = *(void *)(a2 + 16);
      uint64_t v8 = *(void *)a1;
      uint64_t v9 = *(void *)(a1 + 8);
      uint64_t v10 = *(void *)(a1 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = v7;
      *(unsigned char *)(a1 + 24) = v5 & 1;
      sub_1B590D6F0(v8, v9, v10, v6);
      return a1;
    }
    sub_1B5947804(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  return a1;
}

ValueMetadata *type metadata accessor for ClippedModifier()
{
  return &type metadata for ClippedModifier;
}

void destroy for FrameModifier(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 <= 0xFD) {
    sub_1B591DF0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v2);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), v3);
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 88);
  if (v4 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v4);
  }
  unsigned int v5 = *(unsigned __int8 *)(a1 + 120);
  if (v5 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v5);
  }
  unsigned int v6 = *(unsigned __int8 *)(a1 + 152);
  if (v6 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), v6);
  }
  unsigned int v7 = *(unsigned __int8 *)(a1 + 184);
  if (v7 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), v7);
  }
  unsigned int v8 = *(unsigned __int8 *)(a1 + 216);
  if (v8 <= 0xFD) {
    sub_1B591DF0C(*(void *)(a1 + 192), *(void *)(a1 + 200), *(void *)(a1 + 208), v8);
  }
  unsigned int v9 = *(unsigned __int8 *)(a1 + 248);
  if (v9 <= 0xFD)
  {
    uint64_t v10 = *(void *)(a1 + 224);
    uint64_t v11 = *(void *)(a1 + 232);
    uint64_t v12 = *(void *)(a1 + 240);
    sub_1B591DF0C(v10, v11, v12, v9);
  }
}

uint64_t initializeWithCopy for FrameModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 <= 0xFD)
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    sub_1B591DF88(*(void *)a2, v6, v7, v4);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  unsigned int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a2 + 48);
    sub_1B591DF88(v9, v10, v11, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  unsigned int v12 = *(unsigned __int8 *)(a2 + 88);
  if (v12 <= 0xFD)
  {
    uint64_t v13 = *(void *)(a2 + 64);
    uint64_t v14 = *(void *)(a2 + 72);
    uint64_t v15 = *(void *)(a2 + 80);
    sub_1B591DF88(v13, v14, v15, *(unsigned char *)(a2 + 88));
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v14;
    *(void *)(a1 + 80) = v15;
    *(unsigned char *)(a1 + 88) = v12;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  unsigned int v16 = *(unsigned __int8 *)(a2 + 120);
  if (v16 <= 0xFD)
  {
    uint64_t v17 = *(void *)(a2 + 96);
    uint64_t v18 = *(void *)(a2 + 104);
    uint64_t v19 = *(void *)(a2 + 112);
    sub_1B591DF88(v17, v18, v19, *(unsigned char *)(a2 + 120));
    *(void *)(a1 + 96) = v17;
    *(void *)(a1 + 104) = v18;
    *(void *)(a1 + 112) = v19;
    *(unsigned char *)(a1 + 120) = v16;
  }
  else
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  }
  unsigned int v20 = *(unsigned __int8 *)(a2 + 152);
  if (v20 <= 0xFD)
  {
    uint64_t v21 = *(void *)(a2 + 128);
    uint64_t v22 = *(void *)(a2 + 136);
    uint64_t v23 = *(void *)(a2 + 144);
    sub_1B591DF88(v21, v22, v23, *(unsigned char *)(a2 + 152));
    *(void *)(a1 + 128) = v21;
    *(void *)(a1 + 136) = v22;
    *(void *)(a1 + 144) = v23;
    *(unsigned char *)(a1 + 152) = v20;
  }
  else
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  }
  unsigned int v24 = *(unsigned __int8 *)(a2 + 184);
  if (v24 <= 0xFD)
  {
    uint64_t v25 = *(void *)(a2 + 160);
    uint64_t v26 = *(void *)(a2 + 168);
    uint64_t v27 = *(void *)(a2 + 176);
    sub_1B591DF88(v25, v26, v27, *(unsigned char *)(a2 + 184));
    *(void *)(a1 + 160) = v25;
    *(void *)(a1 + 168) = v26;
    *(void *)(a1 + 176) = v27;
    *(unsigned char *)(a1 + 184) = v24;
  }
  else
  {
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
  }
  unsigned int v28 = *(unsigned __int8 *)(a2 + 216);
  if (v28 <= 0xFD)
  {
    uint64_t v29 = *(void *)(a2 + 192);
    uint64_t v30 = *(void *)(a2 + 200);
    uint64_t v31 = *(void *)(a2 + 208);
    sub_1B591DF88(v29, v30, v31, *(unsigned char *)(a2 + 216));
    *(void *)(a1 + 192) = v29;
    *(void *)(a1 + 200) = v30;
    *(void *)(a1 + 208) = v31;
    *(unsigned char *)(a1 + 216) = v28;
  }
  else
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
  }
  unsigned int v32 = *(unsigned __int8 *)(a2 + 248);
  if (v32 <= 0xFD)
  {
    uint64_t v33 = *(void *)(a2 + 224);
    uint64_t v34 = *(void *)(a2 + 232);
    uint64_t v35 = *(void *)(a2 + 240);
    sub_1B591DF88(v33, v34, v35, *(unsigned char *)(a2 + 248));
    *(void *)(a1 + 224) = v33;
    *(void *)(a1 + 232) = v34;
    *(void *)(a1 + 240) = v35;
    *(unsigned char *)(a1 + 248) = v32;
  }
  else
  {
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 233) = *(_OWORD *)(a2 + 233);
  }
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  return a1;
}

uint64_t assignWithCopy for FrameModifier(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) <= 0xFDu)
  {
    if (v4 <= 0xFD)
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      sub_1B591DF88(*(void *)a2, v11, v12, v4);
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = *(void *)(a1 + 16);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      char v16 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v4;
      sub_1B591DF0C(v13, v14, v15, v16);
    }
    else
    {
      sub_1B59316FC(a1);
      long long v6 = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 9) = v6;
    }
  }
  else if (v4 <= 0xFD)
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    uint64_t v9 = *((void *)a2 + 2);
    sub_1B591DF88(*(void *)a2, v8, v9, v4);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v4;
  }
  else
  {
    long long v5 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v5;
  }
  uint64_t v17 = (_OWORD *)(a1 + 32);
  uint64_t v18 = a2 + 2;
  unsigned int v19 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v19 <= 0xFD)
    {
      uint64_t v25 = *((void *)a2 + 4);
      uint64_t v26 = *((void *)a2 + 5);
      uint64_t v27 = *((void *)a2 + 6);
      sub_1B591DF88(v25, v26, v27, *((unsigned char *)a2 + 56));
      uint64_t v28 = *(void *)(a1 + 32);
      uint64_t v29 = *(void *)(a1 + 40);
      uint64_t v30 = *(void *)(a1 + 48);
      *(void *)(a1 + 32) = v25;
      *(void *)(a1 + 40) = v26;
      *(void *)(a1 + 48) = v27;
      char v31 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v19;
      sub_1B591DF0C(v28, v29, v30, v31);
    }
    else
    {
      sub_1B59316FC(a1 + 32);
      long long v21 = *(long long *)((char *)a2 + 41);
      *uint64_t v17 = *v18;
      *(_OWORD *)(a1 + 41) = v21;
    }
  }
  else if (v19 <= 0xFD)
  {
    uint64_t v22 = *((void *)a2 + 4);
    uint64_t v23 = *((void *)a2 + 5);
    uint64_t v24 = *((void *)a2 + 6);
    sub_1B591DF88(v22, v23, v24, *((unsigned char *)a2 + 56));
    *(void *)(a1 + 32) = v22;
    *(void *)(a1 + 40) = v23;
    *(void *)(a1 + 48) = v24;
    *(unsigned char *)(a1 + 56) = v19;
  }
  else
  {
    long long v20 = *v18;
    *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
    *uint64_t v17 = v20;
  }
  unsigned int v32 = (_OWORD *)(a1 + 64);
  uint64_t v33 = a2 + 4;
  unsigned int v34 = *((unsigned __int8 *)a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) <= 0xFDu)
  {
    if (v34 <= 0xFD)
    {
      uint64_t v40 = *((void *)a2 + 8);
      uint64_t v41 = *((void *)a2 + 9);
      uint64_t v42 = *((void *)a2 + 10);
      sub_1B591DF88(v40, v41, v42, *((unsigned char *)a2 + 88));
      uint64_t v43 = *(void *)(a1 + 64);
      uint64_t v44 = *(void *)(a1 + 72);
      uint64_t v45 = *(void *)(a1 + 80);
      *(void *)(a1 + 64) = v40;
      *(void *)(a1 + 72) = v41;
      *(void *)(a1 + 80) = v42;
      char v46 = *(unsigned char *)(a1 + 88);
      *(unsigned char *)(a1 + 88) = v34;
      sub_1B591DF0C(v43, v44, v45, v46);
    }
    else
    {
      sub_1B59316FC(a1 + 64);
      long long v36 = *(long long *)((char *)a2 + 73);
      *unsigned int v32 = *v33;
      *(_OWORD *)(a1 + 73) = v36;
    }
  }
  else if (v34 <= 0xFD)
  {
    uint64_t v37 = *((void *)a2 + 8);
    uint64_t v38 = *((void *)a2 + 9);
    uint64_t v39 = *((void *)a2 + 10);
    sub_1B591DF88(v37, v38, v39, *((unsigned char *)a2 + 88));
    *(void *)(a1 + 64) = v37;
    *(void *)(a1 + 72) = v38;
    *(void *)(a1 + 80) = v39;
    *(unsigned char *)(a1 + 88) = v34;
  }
  else
  {
    long long v35 = *v33;
    *(_OWORD *)(a1 + 73) = *(long long *)((char *)a2 + 73);
    *unsigned int v32 = v35;
  }
  uint64_t v47 = (_OWORD *)(a1 + 96);
  uint64_t v48 = a2 + 6;
  unsigned int v49 = *((unsigned __int8 *)a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) <= 0xFDu)
  {
    if (v49 <= 0xFD)
    {
      uint64_t v55 = *((void *)a2 + 12);
      uint64_t v56 = *((void *)a2 + 13);
      uint64_t v57 = *((void *)a2 + 14);
      sub_1B591DF88(v55, v56, v57, *((unsigned char *)a2 + 120));
      uint64_t v58 = *(void *)(a1 + 96);
      uint64_t v59 = *(void *)(a1 + 104);
      uint64_t v60 = *(void *)(a1 + 112);
      *(void *)(a1 + 96) = v55;
      *(void *)(a1 + 104) = v56;
      *(void *)(a1 + 112) = v57;
      char v61 = *(unsigned char *)(a1 + 120);
      *(unsigned char *)(a1 + 120) = v49;
      sub_1B591DF0C(v58, v59, v60, v61);
    }
    else
    {
      sub_1B59316FC(a1 + 96);
      long long v51 = *(long long *)((char *)a2 + 105);
      _OWORD *v47 = *v48;
      *(_OWORD *)(a1 + 105) = v51;
    }
  }
  else if (v49 <= 0xFD)
  {
    uint64_t v52 = *((void *)a2 + 12);
    uint64_t v53 = *((void *)a2 + 13);
    uint64_t v54 = *((void *)a2 + 14);
    sub_1B591DF88(v52, v53, v54, *((unsigned char *)a2 + 120));
    *(void *)(a1 + 96) = v52;
    *(void *)(a1 + 104) = v53;
    *(void *)(a1 + 112) = v54;
    *(unsigned char *)(a1 + 120) = v49;
  }
  else
  {
    long long v50 = *v48;
    *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
    _OWORD *v47 = v50;
  }
  uint64_t v62 = (_OWORD *)(a1 + 128);
  uint64_t v63 = a2 + 8;
  unsigned int v64 = *((unsigned __int8 *)a2 + 152);
  if (*(unsigned __int8 *)(a1 + 152) <= 0xFDu)
  {
    if (v64 <= 0xFD)
    {
      uint64_t v70 = *((void *)a2 + 16);
      uint64_t v71 = *((void *)a2 + 17);
      uint64_t v72 = *((void *)a2 + 18);
      sub_1B591DF88(v70, v71, v72, *((unsigned char *)a2 + 152));
      uint64_t v73 = *(void *)(a1 + 128);
      uint64_t v74 = *(void *)(a1 + 136);
      uint64_t v75 = *(void *)(a1 + 144);
      *(void *)(a1 + 128) = v70;
      *(void *)(a1 + 136) = v71;
      *(void *)(a1 + 144) = v72;
      char v76 = *(unsigned char *)(a1 + 152);
      *(unsigned char *)(a1 + 152) = v64;
      sub_1B591DF0C(v73, v74, v75, v76);
    }
    else
    {
      sub_1B59316FC(a1 + 128);
      long long v66 = *(long long *)((char *)a2 + 137);
      *uint64_t v62 = *v63;
      *(_OWORD *)(a1 + 137) = v66;
    }
  }
  else if (v64 <= 0xFD)
  {
    uint64_t v67 = *((void *)a2 + 16);
    uint64_t v68 = *((void *)a2 + 17);
    uint64_t v69 = *((void *)a2 + 18);
    sub_1B591DF88(v67, v68, v69, *((unsigned char *)a2 + 152));
    *(void *)(a1 + 128) = v67;
    *(void *)(a1 + 136) = v68;
    *(void *)(a1 + 144) = v69;
    *(unsigned char *)(a1 + 152) = v64;
  }
  else
  {
    long long v65 = *v63;
    *(_OWORD *)(a1 + 137) = *(long long *)((char *)a2 + 137);
    *uint64_t v62 = v65;
  }
  uint64_t v77 = (_OWORD *)(a1 + 160);
  uint64_t v78 = a2 + 10;
  unsigned int v79 = *((unsigned __int8 *)a2 + 184);
  if (*(unsigned __int8 *)(a1 + 184) <= 0xFDu)
  {
    if (v79 <= 0xFD)
    {
      uint64_t v85 = *((void *)a2 + 20);
      uint64_t v86 = *((void *)a2 + 21);
      uint64_t v87 = *((void *)a2 + 22);
      sub_1B591DF88(v85, v86, v87, *((unsigned char *)a2 + 184));
      uint64_t v88 = *(void *)(a1 + 160);
      uint64_t v89 = *(void *)(a1 + 168);
      uint64_t v90 = *(void *)(a1 + 176);
      *(void *)(a1 + 160) = v85;
      *(void *)(a1 + 168) = v86;
      *(void *)(a1 + 176) = v87;
      char v91 = *(unsigned char *)(a1 + 184);
      *(unsigned char *)(a1 + 184) = v79;
      sub_1B591DF0C(v88, v89, v90, v91);
    }
    else
    {
      sub_1B59316FC(a1 + 160);
      long long v81 = *(long long *)((char *)a2 + 169);
      *uint64_t v77 = *v78;
      *(_OWORD *)(a1 + 169) = v81;
    }
  }
  else if (v79 <= 0xFD)
  {
    uint64_t v82 = *((void *)a2 + 20);
    uint64_t v83 = *((void *)a2 + 21);
    uint64_t v84 = *((void *)a2 + 22);
    sub_1B591DF88(v82, v83, v84, *((unsigned char *)a2 + 184));
    *(void *)(a1 + 160) = v82;
    *(void *)(a1 + 168) = v83;
    *(void *)(a1 + 176) = v84;
    *(unsigned char *)(a1 + 184) = v79;
  }
  else
  {
    long long v80 = *v78;
    *(_OWORD *)(a1 + 169) = *(long long *)((char *)a2 + 169);
    *uint64_t v77 = v80;
  }
  unint64_t v92 = (_OWORD *)(a1 + 192);
  char v93 = a2 + 12;
  unsigned int v94 = *((unsigned __int8 *)a2 + 216);
  if (*(unsigned __int8 *)(a1 + 216) <= 0xFDu)
  {
    if (v94 <= 0xFD)
    {
      uint64_t v100 = *((void *)a2 + 24);
      uint64_t v101 = *((void *)a2 + 25);
      uint64_t v102 = *((void *)a2 + 26);
      sub_1B591DF88(v100, v101, v102, *((unsigned char *)a2 + 216));
      uint64_t v103 = *(void *)(a1 + 192);
      uint64_t v104 = *(void *)(a1 + 200);
      uint64_t v105 = *(void *)(a1 + 208);
      *(void *)(a1 + 192) = v100;
      *(void *)(a1 + 200) = v101;
      *(void *)(a1 + 208) = v102;
      char v106 = *(unsigned char *)(a1 + 216);
      *(unsigned char *)(a1 + 216) = v94;
      sub_1B591DF0C(v103, v104, v105, v106);
    }
    else
    {
      sub_1B59316FC(a1 + 192);
      long long v96 = *(long long *)((char *)a2 + 201);
      *unint64_t v92 = *v93;
      *(_OWORD *)(a1 + 201) = v96;
    }
  }
  else if (v94 <= 0xFD)
  {
    uint64_t v97 = *((void *)a2 + 24);
    uint64_t v98 = *((void *)a2 + 25);
    uint64_t v99 = *((void *)a2 + 26);
    sub_1B591DF88(v97, v98, v99, *((unsigned char *)a2 + 216));
    *(void *)(a1 + 192) = v97;
    *(void *)(a1 + 200) = v98;
    *(void *)(a1 + 208) = v99;
    *(unsigned char *)(a1 + 216) = v94;
  }
  else
  {
    long long v95 = *v93;
    *(_OWORD *)(a1 + 201) = *(long long *)((char *)a2 + 201);
    *unint64_t v92 = v95;
  }
  uint64_t v107 = (_OWORD *)(a1 + 224);
  uint64_t v108 = a2 + 14;
  unsigned int v109 = *((unsigned __int8 *)a2 + 248);
  if (*(unsigned __int8 *)(a1 + 248) <= 0xFDu)
  {
    if (v109 <= 0xFD)
    {
      uint64_t v115 = *((void *)a2 + 28);
      uint64_t v116 = *((void *)a2 + 29);
      uint64_t v117 = *((void *)a2 + 30);
      sub_1B591DF88(v115, v116, v117, *((unsigned char *)a2 + 248));
      uint64_t v118 = *(void *)(a1 + 224);
      uint64_t v119 = *(void *)(a1 + 232);
      uint64_t v120 = *(void *)(a1 + 240);
      *(void *)(a1 + 224) = v115;
      *(void *)(a1 + 232) = v116;
      *(void *)(a1 + 240) = v117;
      char v121 = *(unsigned char *)(a1 + 248);
      *(unsigned char *)(a1 + 248) = v109;
      sub_1B591DF0C(v118, v119, v120, v121);
    }
    else
    {
      sub_1B59316FC(a1 + 224);
      long long v111 = *(long long *)((char *)a2 + 233);
      *uint64_t v107 = *v108;
      *(_OWORD *)(a1 + 233) = v111;
    }
  }
  else if (v109 <= 0xFD)
  {
    uint64_t v112 = *((void *)a2 + 28);
    uint64_t v113 = *((void *)a2 + 29);
    uint64_t v114 = *((void *)a2 + 30);
    sub_1B591DF88(v112, v113, v114, *((unsigned char *)a2 + 248));
    *(void *)(a1 + 224) = v112;
    *(void *)(a1 + 232) = v113;
    *(void *)(a1 + 240) = v114;
    *(unsigned char *)(a1 + 248) = v109;
  }
  else
  {
    long long v110 = *v108;
    *(_OWORD *)(a1 + 233) = *(long long *)((char *)a2 + 233);
    *uint64_t v107 = v110;
  }
  *(void *)(a1 + 256) = *((void *)a2 + 32);
  *(void *)(a1 + 264) = *((void *)a2 + 33);
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

uint64_t assignWithTake for FrameModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 > 0xFD)
  {
    sub_1B59316FC(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B591DF0C(v7, v8, v9, v4);
LABEL_6:
  unsigned int v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_11;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + 56);
  if (v11 > 0xFD)
  {
    sub_1B59316FC(a1 + 32);
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v12;
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B591DF0C(v13, v14, v15, v10);
LABEL_11:
  unsigned int v16 = *(unsigned __int8 *)(a1 + 88);
  if (v16 > 0xFD)
  {
LABEL_14:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    goto LABEL_16;
  }
  unsigned int v17 = *(unsigned __int8 *)(a2 + 88);
  if (v17 > 0xFD)
  {
    sub_1B59316FC(a1 + 64);
    goto LABEL_14;
  }
  uint64_t v18 = *(void *)(a2 + 80);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v18;
  *(unsigned char *)(a1 + 88) = v17;
  sub_1B591DF0C(v19, v20, v21, v16);
LABEL_16:
  unsigned int v22 = *(unsigned __int8 *)(a1 + 120);
  if (v22 > 0xFD)
  {
LABEL_19:
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
    goto LABEL_21;
  }
  unsigned int v23 = *(unsigned __int8 *)(a2 + 120);
  if (v23 > 0xFD)
  {
    sub_1B59316FC(a1 + 96);
    goto LABEL_19;
  }
  uint64_t v24 = *(void *)(a2 + 112);
  uint64_t v25 = *(void *)(a1 + 96);
  uint64_t v26 = *(void *)(a1 + 104);
  uint64_t v27 = *(void *)(a1 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = v24;
  *(unsigned char *)(a1 + 120) = v23;
  sub_1B591DF0C(v25, v26, v27, v22);
LABEL_21:
  unsigned int v28 = *(unsigned __int8 *)(a1 + 152);
  if (v28 > 0xFD)
  {
LABEL_24:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
    goto LABEL_26;
  }
  unsigned int v29 = *(unsigned __int8 *)(a2 + 152);
  if (v29 > 0xFD)
  {
    sub_1B59316FC(a1 + 128);
    goto LABEL_24;
  }
  uint64_t v30 = *(void *)(a2 + 144);
  uint64_t v31 = *(void *)(a1 + 128);
  uint64_t v32 = *(void *)(a1 + 136);
  uint64_t v33 = *(void *)(a1 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = v30;
  *(unsigned char *)(a1 + 152) = v29;
  sub_1B591DF0C(v31, v32, v33, v28);
LABEL_26:
  unsigned int v34 = *(unsigned __int8 *)(a1 + 184);
  if (v34 > 0xFD)
  {
LABEL_29:
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    goto LABEL_31;
  }
  unsigned int v35 = *(unsigned __int8 *)(a2 + 184);
  if (v35 > 0xFD)
  {
    sub_1B59316FC(a1 + 160);
    goto LABEL_29;
  }
  uint64_t v36 = *(void *)(a2 + 176);
  uint64_t v37 = *(void *)(a1 + 160);
  uint64_t v38 = *(void *)(a1 + 168);
  uint64_t v39 = *(void *)(a1 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = v36;
  *(unsigned char *)(a1 + 184) = v35;
  sub_1B591DF0C(v37, v38, v39, v34);
LABEL_31:
  unsigned int v40 = *(unsigned __int8 *)(a1 + 216);
  if (v40 > 0xFD)
  {
LABEL_34:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
    goto LABEL_36;
  }
  unsigned int v41 = *(unsigned __int8 *)(a2 + 216);
  if (v41 > 0xFD)
  {
    sub_1B59316FC(a1 + 192);
    goto LABEL_34;
  }
  uint64_t v42 = *(void *)(a2 + 208);
  uint64_t v43 = *(void *)(a1 + 192);
  uint64_t v44 = *(void *)(a1 + 200);
  uint64_t v45 = *(void *)(a1 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = v42;
  *(unsigned char *)(a1 + 216) = v41;
  sub_1B591DF0C(v43, v44, v45, v40);
LABEL_36:
  unsigned int v46 = *(unsigned __int8 *)(a1 + 248);
  if (v46 <= 0xFD)
  {
    unsigned int v47 = *(unsigned __int8 *)(a2 + 248);
    if (v47 <= 0xFD)
    {
      uint64_t v48 = *(void *)(a2 + 240);
      uint64_t v49 = *(void *)(a1 + 224);
      uint64_t v50 = *(void *)(a1 + 232);
      uint64_t v51 = *(void *)(a1 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(void *)(a1 + 240) = v48;
      *(unsigned char *)(a1 + 248) = v47;
      sub_1B591DF0C(v49, v50, v51, v46);
      goto LABEL_41;
    }
    sub_1B59316FC(a1 + 224);
  }
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 233) = *(_OWORD *)(a2 + 233);
LABEL_41:
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  return a1;
}

uint64_t getEnumTagSinglePayload for FrameModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 272)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if ((v3 & 0x7E) != 0) {
    int v4 = 126 - (v3 & 0x7E | (v3 >> 7));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FrameModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 272) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 272) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FrameModifier()
{
  return &type metadata for FrameModifier;
}

uint64_t sub_1B5A17EBC(char a1)
{
  return *(void *)&aWidth_7[8 * a1];
}

uint64_t sub_1B5A17EDC(char *a1, char *a2)
{
  return sub_1B59EF514(*a1, *a2);
}

uint64_t sub_1B5A17EE8()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5A17F30()
{
  return sub_1B59F4614();
}

uint64_t sub_1B5A17F38()
{
  return sub_1B5A1C7E8();
}

uint64_t sub_1B5A17F7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A1A00C();
  *a1 = result;
  return result;
}

uint64_t sub_1B5A17FAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A17EBC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B5A17FD8()
{
  return sub_1B5A17EBC(*v0);
}

uint64_t sub_1B5A17FE0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5A1A00C();
  *a1 = result;
  return result;
}

void sub_1B5A18008(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1B5A18014(uint64_t a1)
{
  unint64_t v2 = sub_1B5A19A1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A18050(uint64_t a1)
{
  unint64_t v2 = sub_1B5A19A1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B5A1808C(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v136 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66638);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A19A1C();
  sub_1B5A1C838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v84 = v5;
    LOBYTE(v85[0]) = 0;
    unint64_t v8 = sub_1B59358E8();
    sub_1B5A1C5B8();
    uint64_t v83 = a1;
    uint64_t v9 = v86;
    uint64_t v10 = v87;
    unint64_t v11 = v8;
    uint64_t v12 = v88;
    LODWORD(v8) = v89;
    LOBYTE(v85[0]) = 1;
    sub_1B591DF74(v86, v87, v88, v89);
    unint64_t v82 = v11;
    sub_1B5A1C5B8();
    uint64_t v75 = v10;
    uint64_t v76 = v9;
    uint64_t v74 = v12;
    int v77 = v8;
    uint64_t v13 = v86;
    uint64_t v14 = v87;
    LOBYTE(v85[0]) = 3;
    uint64_t v78 = v88;
    int v79 = v89;
    sub_1B591DF74(v86, v87, v88, v89);
    sub_1B5A1C5B8();
    uint64_t v80 = v13;
    uint64_t v81 = v14;
    uint64_t v15 = v86;
    uint64_t v16 = v88;
    LODWORD(v14) = v89;
    LOBYTE(v85[0]) = 4;
    uint64_t v73 = v87;
    sub_1B591DF74(v86, v87, v88, v89);
    sub_1B5A1C5B8();
    uint64_t v72 = v15;
    int v52 = v14;
    uint64_t v53 = v16;
    uint64_t v17 = v86;
    uint64_t v18 = v87;
    uint64_t v19 = v88;
    LODWORD(v15) = v89;
    LOBYTE(v85[0]) = 5;
    sub_1B591DF74(v86, v87, v88, v89);
    uint64_t v51 = 0;
    sub_1B5A1C5B8();
    int v55 = v15;
    uint64_t v54 = v19;
    uint64_t v56 = v17;
    uint64_t v57 = v18;
    uint64_t v20 = v86;
    uint64_t v21 = v87;
    uint64_t v22 = v88;
    LODWORD(v15) = v89;
    LOBYTE(v85[0]) = 6;
    sub_1B591DF74(v86, v87, v88, v89);
    sub_1B5A1C5B8();
    int v70 = v15;
    uint64_t v68 = v21;
    uint64_t v69 = v22;
    uint64_t v67 = v20;
    uint64_t v23 = v86;
    uint64_t v24 = v87;
    uint64_t v25 = v88;
    LODWORD(v15) = v89;
    LOBYTE(v85[0]) = 7;
    sub_1B591DF74(v86, v87, v88, v89);
    sub_1B5A1C5B8();
    int v66 = v15;
    uint64_t v64 = v24;
    uint64_t v65 = v25;
    uint64_t v63 = v23;
    uint64_t v26 = v86;
    uint64_t v27 = v87;
    uint64_t v28 = v88;
    LODWORD(v25) = v89;
    LOBYTE(v85[0]) = 8;
    sub_1B591DF74(v86, v87, v88, v89);
    sub_1B5A1C5B8();
    int v50 = v25;
    uint64_t v61 = v27;
    uint64_t v62 = v28;
    uint64_t v60 = v26;
    uint64_t v29 = v88;
    LODWORD(v26) = v89;
    LOBYTE(v85[0]) = 2;
    uint64_t v30 = v86;
    uint64_t v31 = v87;
    sub_1B591DF74(v86, v87, v88, v89);
    sub_1B5970044();
    sub_1B5A1C5B8();
    unint64_t v82 = 0;
    int v49 = v26;
    uint64_t v48 = v29;
    uint64_t v58 = v30;
    uint64_t v59 = v31;
    switch((char)v86)
    {
      case 1:
        uint64_t v32 = sub_1B5A1BC58();
        break;
      case 2:
        uint64_t v32 = sub_1B5A1BC68();
        break;
      case 3:
        uint64_t v32 = sub_1B5A1BC28();
        break;
      case 4:
        uint64_t v32 = sub_1B5A1BC38();
        break;
      case 5:
        uint64_t v32 = sub_1B5A1BBE8();
        break;
      case 6:
        uint64_t v32 = sub_1B5A1BBF8();
        break;
      case 7:
        uint64_t v32 = sub_1B5A1BC08();
        break;
      case 8:
        uint64_t v32 = sub_1B5A1BC18();
        break;
      default:
        uint64_t v32 = sub_1B5A1BC48();
        break;
    }
    uint64_t v71 = v32;
    uint64_t v51 = v33;
    (*(void (**)(char *, uint64_t))(v84 + 8))(v7, v4);
    v85[0] = v76;
    v85[1] = v75;
    v85[2] = v74;
    LOBYTE(v85[3]) = v77;
    v85[4] = v80;
    v85[5] = v81;
    v85[6] = v78;
    LOBYTE(v85[7]) = v79;
    v85[8] = v72;
    v85[9] = v73;
    v85[10] = v53;
    LOBYTE(v85[11]) = v52;
    v85[12] = v56;
    v85[13] = v57;
    v85[14] = v54;
    LOBYTE(v85[15]) = v55;
    v85[16] = v67;
    v85[17] = v68;
    v85[18] = v69;
    LOBYTE(v85[19]) = v70;
    uint64_t v34 = v62;
    v85[20] = v63;
    v85[21] = v64;
    v85[22] = v65;
    LOBYTE(v85[23]) = v66;
    uint64_t v36 = v60;
    uint64_t v35 = v61;
    v85[24] = v60;
    v85[25] = v61;
    v85[26] = v62;
    char v37 = v49;
    char v38 = v50;
    LOBYTE(v85[27]) = v50;
    uint64_t v40 = v58;
    uint64_t v39 = v59;
    v85[28] = v58;
    v85[29] = v59;
    uint64_t v41 = v48;
    v85[30] = v48;
    LOBYTE(v85[31]) = v49;
    v85[32] = v71;
    v85[33] = v51;
    sub_1B5A19A70((uint64_t)v85, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B591DF74);
    sub_1B59325C0(v40, v39, v41, v37);
    sub_1B59325C0(v36, v35, v34, v38);
    sub_1B59325C0(v63, v64, v65, v66);
    sub_1B59325C0(v67, v68, v69, v70);
    sub_1B59325C0(v56, v57, v54, v55);
    sub_1B59325C0(v72, v73, v53, v52);
    uint64_t v42 = v80;
    uint64_t v43 = v81;
    uint64_t v44 = v78;
    LOBYTE(v34) = v79;
    sub_1B59325C0(v80, v81, v78, v79);
    uint64_t v45 = v75;
    uint64_t v46 = v76;
    uint64_t v47 = v74;
    LOBYTE(v40) = v77;
    sub_1B59325C0(v76, v75, v74, v77);
    memcpy(v136, v85, 0x110uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    uint64_t v86 = v46;
    uint64_t v87 = v45;
    uint64_t v88 = v47;
    unsigned __int8 v89 = v40;
    uint64_t v91 = v42;
    uint64_t v92 = v43;
    *(_DWORD *)uint64_t v90 = v135[0];
    *(_DWORD *)&v90[3] = *(_DWORD *)((char *)v135 + 3);
    uint64_t v93 = v44;
    char v94 = v34;
    *(_DWORD *)long long v95 = *(_DWORD *)v134;
    *(_DWORD *)&v95[3] = *(_DWORD *)&v134[3];
    uint64_t v96 = v72;
    uint64_t v97 = v73;
    uint64_t v98 = v53;
    char v99 = v52;
    *(_DWORD *)uint64_t v100 = *(_DWORD *)v133;
    *(_DWORD *)&v100[3] = *(_DWORD *)&v133[3];
    uint64_t v101 = v56;
    uint64_t v102 = v57;
    uint64_t v103 = v54;
    char v104 = v55;
    *(_DWORD *)uint64_t v105 = *(_DWORD *)v132;
    *(_DWORD *)&v105[3] = *(_DWORD *)&v132[3];
    uint64_t v106 = v67;
    uint64_t v107 = v68;
    uint64_t v108 = v69;
    char v109 = v70;
    *(_DWORD *)&v110[3] = *(_DWORD *)&v131[3];
    *(_DWORD *)long long v110 = *(_DWORD *)v131;
    uint64_t v111 = v63;
    uint64_t v112 = v64;
    uint64_t v113 = v65;
    char v114 = v66;
    *(_DWORD *)&v115[3] = *(_DWORD *)&v130[3];
    *(_DWORD *)uint64_t v115 = *(_DWORD *)v130;
    uint64_t v116 = v60;
    uint64_t v117 = v61;
    uint64_t v118 = v62;
    char v119 = v50;
    *(_DWORD *)&v120[3] = *(_DWORD *)&v129[3];
    *(_DWORD *)uint64_t v120 = *(_DWORD *)v129;
    uint64_t v121 = v58;
    uint64_t v122 = v59;
    uint64_t v123 = v48;
    char v124 = v49;
    *(_DWORD *)&void v125[3] = *(_DWORD *)&v128[3];
    *(_DWORD *)uint64_t v125 = *(_DWORD *)v128;
    uint64_t v126 = v71;
    uint64_t v127 = v51;
    sub_1B5A19A70((uint64_t)&v86, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B59325C0);
  }
}

uint64_t sub_1B5A18F58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1;
  unsigned int v6 = *(unsigned __int8 *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 40);
  uint64_t v9 = *(void *)(v3 + 48);
  unsigned int v10 = *(unsigned __int8 *)(v3 + 56);
  if (v6 < 0xFE)
  {
    uint64_t v17 = *(void *)v3;
    uint64_t v38 = *(void *)(v3 + 8);
    uint64_t v40 = *(void *)(v3 + 16);
    sub_1B591DF88(*(void *)v3, v38, v40, v6);
    sub_1B5963534(a2);
    sub_1B59325C0(v17, v38, v40, v6);
    if (v10 > 0xFD)
    {
      uint64_t v5 = a1;
LABEL_12:
      __swift_project_boxed_opaque_existential_1(v5, v5[3]);
      a3[3] = sub_1B5A1A748();
      a3[4] = swift_getWitnessTable();
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1B5A1B678();
    }
    uint64_t v5 = a1;
LABEL_11:
    sub_1B591DF88(v8, v7, v9, v10);
    sub_1B5963534(a2);
    sub_1B59325C0(v8, v7, v9, v10);
    goto LABEL_12;
  }
  if (v10 <= 0xFD) {
    goto LABEL_11;
  }
  unsigned int v11 = *(unsigned __int8 *)(v3 + 88);
  uint64_t v12 = *(void *)(v3 + 96);
  uint64_t v13 = *(void *)(v3 + 104);
  unsigned int v14 = *(unsigned __int8 *)(v3 + 120);
  uint64_t v15 = *(void *)(v3 + 128);
  uint64_t v30 = *(void *)(v3 + 136);
  uint64_t v28 = *(void *)(v3 + 112);
  uint64_t v29 = *(void *)(v3 + 144);
  unsigned int v16 = *(unsigned __int8 *)(v3 + 152);
  uint64_t v22 = *(void *)(v3 + 168);
  uint64_t v23 = *(void *)(v3 + 160);
  uint64_t v21 = *(void *)(v3 + 176);
  unsigned int v33 = *(unsigned __int8 *)(v3 + 184);
  uint64_t v19 = *(void *)(v3 + 200);
  uint64_t v20 = *(void *)(v3 + 192);
  uint64_t v26 = *(void *)(v3 + 232);
  uint64_t v27 = *(void *)(v3 + 224);
  uint64_t v24 = *(void *)(v3 + 208);
  uint64_t v25 = *(void *)(v3 + 240);
  unsigned int v31 = *(unsigned __int8 *)(v3 + 216);
  unsigned int v32 = *(unsigned __int8 *)(v3 + 248);
  if (v11 > 0xFD)
  {
    if (v14 <= 0xFD) {
      goto LABEL_5;
    }
LABEL_14:
    if (v16 > 0xFD) {
      goto LABEL_15;
    }
    goto LABEL_6;
  }
  uint64_t v37 = *(void *)(v3 + 64);
  uint64_t v39 = *(void *)(v3 + 72);
  uint64_t v41 = *(void *)(v3 + 80);
  sub_1B591DF88(v37, v39, v41, v11);
  sub_1B5963534(a2);
  sub_1B59325C0(v37, v39, v41, v11);
  if (v14 > 0xFD) {
    goto LABEL_14;
  }
LABEL_5:
  sub_1B591DF88(v12, v13, v28, v14);
  sub_1B5963534(a2);
  sub_1B59325C0(v12, v13, v28, v14);
  if (v16 <= 0xFD)
  {
LABEL_6:
    sub_1B591DF88(v15, v30, v29, v16);
    sub_1B5963534(a2);
    sub_1B59325C0(v15, v30, v29, v16);
  }
LABEL_15:
  if (v33 <= 0xFD)
  {
    sub_1B591DF88(v23, v22, v21, v33);
    sub_1B5963534(a2);
    sub_1B59325C0(v23, v22, v21, v33);
  }
  if (v31 <= 0xFD)
  {
    sub_1B591DF88(v20, v19, v24, v31);
    sub_1B5963534(a2);
    sub_1B59325C0(v20, v19, v24, v31);
  }
  if (v32 <= 0xFD)
  {
    sub_1B591DF88(v27, v26, v25, v32);
    sub_1B5963534(a2);
    sub_1B59325C0(v27, v26, v25, v32);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3[3] = sub_1B5A1A748();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B5A1B688();
}

uint64_t sub_1B5A19580@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B5A18F58(a1, a2, a3);
}

void sub_1B5A19598(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1B5A195BC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5A19610@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5A19FEC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B5A1963C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B5A1C558();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B5A19694(uint64_t a1)
{
  unint64_t v2 = sub_1B5A199C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5A196D0(uint64_t a1)
{
  unint64_t v2 = sub_1B5A199C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5A1970C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D66628);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5A199C8();
  sub_1B5A1C838();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D63220);
    sub_1B59095C8((unint64_t *)&qword_1E9D63228, &qword_1E9D63220);
    sub_1B5A1C5B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13;
    char v10 = v14;
    *(_OWORD *)a2 = v12;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B5A198B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5A1970C(a1, a2);
}

unint64_t sub_1B5A198D0(uint64_t a1)
{
  unint64_t result = sub_1B5A198F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A198F8()
{
  unint64_t result = qword_1E9D66618;
  if (!qword_1E9D66618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66618);
  }
  return result;
}

unint64_t sub_1B5A1994C(uint64_t a1)
{
  unint64_t result = sub_1B5A19974();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B5A19974()
{
  unint64_t result = qword_1E9D66620;
  if (!qword_1E9D66620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66620);
  }
  return result;
}

unint64_t sub_1B5A199C8()
{
  unint64_t result = qword_1E9D66630;
  if (!qword_1E9D66630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66630);
  }
  return result;
}

unint64_t sub_1B5A19A1C()
{
  unint64_t result = qword_1E9D66640;
  if (!qword_1E9D66640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66640);
  }
  return result;
}

uint64_t sub_1B5A19A70(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 104);
  uint64_t v18 = *(void *)(a1 + 96);
  uint64_t v16 = *(void *)(a1 + 112);
  uint64_t v21 = *(void *)(a1 + 136);
  uint64_t v22 = *(void *)(a1 + 128);
  uint64_t v20 = *(void *)(a1 + 144);
  uint64_t v24 = *(void *)(a1 + 168);
  uint64_t v25 = *(void *)(a1 + 160);
  uint64_t v23 = *(void *)(a1 + 176);
  uint64_t v29 = *(void *)(a1 + 192);
  uint64_t v27 = *(void *)(a1 + 208);
  uint64_t v28 = *(void *)(a1 + 200);
  uint64_t v31 = *(void *)(a1 + 232);
  uint64_t v32 = *(void *)(a1 + 224);
  uint64_t v30 = *(void *)(a1 + 240);
  uint64_t v8 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 88);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 120);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 152);
  unsigned int v15 = *(unsigned __int8 *)(a1 + 184);
  unsigned int v19 = *(unsigned __int8 *)(a1 + 216);
  unsigned int v26 = *(unsigned __int8 *)(a1 + 248);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  a2(v4, v5, v6, v8);
  a2(v14, v7, v13, v9);
  a2(v18, v17, v16, v10);
  a2(v22, v21, v20, v11);
  a2(v25, v24, v23, v15);
  a2(v29, v28, v27, v19);
  a2(v32, v31, v30, v26);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FrameModifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5A19CD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FrameModifier.CodingKeys()
{
  return &type metadata for FrameModifier.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ClippedModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5A19DA4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClippedModifier.CodingKeys()
{
  return &type metadata for ClippedModifier.CodingKeys;
}

unint64_t sub_1B5A19DE0()
{
  unint64_t result = qword_1E9D66648;
  if (!qword_1E9D66648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66648);
  }
  return result;
}

unint64_t sub_1B5A19E38()
{
  unint64_t result = qword_1E9D66650;
  if (!qword_1E9D66650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66650);
  }
  return result;
}

unint64_t sub_1B5A19E90()
{
  unint64_t result = qword_1E9D66658;
  if (!qword_1E9D66658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66658);
  }
  return result;
}

unint64_t sub_1B5A19EE8()
{
  unint64_t result = qword_1E9D66660;
  if (!qword_1E9D66660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66660);
  }
  return result;
}

unint64_t sub_1B5A19F40()
{
  unint64_t result = qword_1E9D66668;
  if (!qword_1E9D66668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66668);
  }
  return result;
}

unint64_t sub_1B5A19F98()
{
  unint64_t result = qword_1E9D66670;
  if (!qword_1E9D66670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D66670);
  }
  return result;
}

uint64_t sub_1B5A19FEC()
{
  return 0x61696C6169746E61;
}

uint64_t sub_1B5A1A00C()
{
  unint64_t v0 = sub_1B5A1C558();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B5A1A058()
{
  return MEMORY[0x1F40E2E68]();
}

uint64_t sub_1B5A1A068()
{
  return MEMORY[0x1F40E2EA8]();
}

uint64_t sub_1B5A1A078()
{
  return MEMORY[0x1F40E2ED8]();
}

uint64_t sub_1B5A1A088()
{
  return MEMORY[0x1F40E2EE8]();
}

uint64_t sub_1B5A1A098()
{
  return MEMORY[0x1F40E2F00]();
}

uint64_t sub_1B5A1A0A8()
{
  return MEMORY[0x1F40E2F28]();
}

uint64_t sub_1B5A1A0B8()
{
  return MEMORY[0x1F40E2F40]();
}

uint64_t sub_1B5A1A0C8()
{
  return MEMORY[0x1F40E2F50]();
}

uint64_t sub_1B5A1A0D8()
{
  return MEMORY[0x1F40E2F60]();
}

uint64_t sub_1B5A1A0E8()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_1B5A1A0F8()
{
  return MEMORY[0x1F40E3040]();
}

uint64_t sub_1B5A1A108()
{
  return MEMORY[0x1F40E3048]();
}

uint64_t sub_1B5A1A118()
{
  return MEMORY[0x1F40E3050]();
}

uint64_t sub_1B5A1A128()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_1B5A1A138()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_1B5A1A148()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_1B5A1A158()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_1B5A1A168()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_1B5A1A178()
{
  return MEMORY[0x1F40E3AB0]();
}

uint64_t sub_1B5A1A188()
{
  return MEMORY[0x1F40E3CD0]();
}

uint64_t sub_1B5A1A198()
{
  return MEMORY[0x1F40E3CE8]();
}

uint64_t sub_1B5A1A1A8()
{
  return MEMORY[0x1F40E3CF8]();
}

uint64_t sub_1B5A1A1B8()
{
  return MEMORY[0x1F40E3D08]();
}

uint64_t sub_1B5A1A1C8()
{
  return MEMORY[0x1F40E3E40]();
}

uint64_t sub_1B5A1A1D8()
{
  return MEMORY[0x1F40E3EA0]();
}

uint64_t sub_1B5A1A1E8()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1B5A1A1F8()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1B5A1A208()
{
  return MEMORY[0x1F40E46D0]();
}

uint64_t sub_1B5A1A218()
{
  return MEMORY[0x1F40E4898]();
}

uint64_t sub_1B5A1A228()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1B5A1A238()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1B5A1A248()
{
  return MEMORY[0x1F40E4B20]();
}

uint64_t sub_1B5A1A258()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1B5A1A268()
{
  return MEMORY[0x1F40E4BE0]();
}

uint64_t sub_1B5A1A278()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1B5A1A288()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_1B5A1A298()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1B5A1A2A8()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1B5A1A2B8()
{
  return MEMORY[0x1F40E5B48]();
}

uint64_t sub_1B5A1A2C8()
{
  return MEMORY[0x1F40E5CA8]();
}

uint64_t sub_1B5A1A2D8()
{
  return MEMORY[0x1F4188358]();
}

uint64_t sub_1B5A1A2E8()
{
  return MEMORY[0x1F41883B8]();
}

uint64_t sub_1B5A1A2F8()
{
  return MEMORY[0x1F41883C0]();
}

uint64_t sub_1B5A1A308()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1B5A1A318()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1B5A1A328()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1B5A1A338()
{
  return MEMORY[0x1F40D69B8]();
}

uint64_t sub_1B5A1A348()
{
  return MEMORY[0x1F40F7D68]();
}

uint64_t sub_1B5A1A358()
{
  return MEMORY[0x1F40D69E0]();
}

uint64_t sub_1B5A1A368()
{
  return MEMORY[0x1F40D6AB0]();
}

uint64_t sub_1B5A1A378()
{
  return MEMORY[0x1F40D6AC0]();
}

uint64_t sub_1B5A1A388()
{
  return MEMORY[0x1F40D6B80]();
}

uint64_t sub_1B5A1A398()
{
  return MEMORY[0x1F40D6B88]();
}

uint64_t sub_1B5A1A3A8()
{
  return MEMORY[0x1F40D6B90]();
}

uint64_t sub_1B5A1A3B8()
{
  return MEMORY[0x1F40D6B98]();
}

uint64_t sub_1B5A1A3C8()
{
  return MEMORY[0x1F40D6BA0]();
}

uint64_t sub_1B5A1A3D8()
{
  return MEMORY[0x1F40D6BA8]();
}

uint64_t sub_1B5A1A3E8()
{
  return MEMORY[0x1F40D6BB8]();
}

uint64_t sub_1B5A1A3F8()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t sub_1B5A1A408()
{
  return MEMORY[0x1F40F7D88]();
}

uint64_t sub_1B5A1A418()
{
  return MEMORY[0x1F40F7DA0]();
}

uint64_t sub_1B5A1A428()
{
  return MEMORY[0x1F40F7E00]();
}

uint64_t sub_1B5A1A438()
{
  return MEMORY[0x1F40F7E08]();
}

uint64_t sub_1B5A1A448()
{
  return MEMORY[0x1F40F7E20]();
}

uint64_t sub_1B5A1A458()
{
  return MEMORY[0x1F40F7E30]();
}

uint64_t sub_1B5A1A468()
{
  return MEMORY[0x1F40F7E40]();
}

uint64_t sub_1B5A1A478()
{
  return MEMORY[0x1F40F7EA0]();
}

uint64_t sub_1B5A1A488()
{
  return MEMORY[0x1F40F7EB0]();
}

uint64_t sub_1B5A1A498()
{
  return MEMORY[0x1F40F7F08]();
}

uint64_t sub_1B5A1A4A8()
{
  return MEMORY[0x1F40F7F20]();
}

uint64_t sub_1B5A1A4B8()
{
  return MEMORY[0x1F40F7F60]();
}

uint64_t sub_1B5A1A4C8()
{
  return MEMORY[0x1F40F8030]();
}

uint64_t sub_1B5A1A4D8()
{
  return MEMORY[0x1F40F8050]();
}

uint64_t sub_1B5A1A4E8()
{
  return MEMORY[0x1F40F8068]();
}

uint64_t sub_1B5A1A4F8()
{
  return MEMORY[0x1F40F80A0]();
}

uint64_t sub_1B5A1A508()
{
  return MEMORY[0x1F40F8108]();
}

uint64_t sub_1B5A1A518()
{
  return MEMORY[0x1F40F8118]();
}

uint64_t sub_1B5A1A528()
{
  return MEMORY[0x1F40F8148]();
}

uint64_t sub_1B5A1A538()
{
  return MEMORY[0x1F40F8288]();
}

uint64_t sub_1B5A1A548()
{
  return MEMORY[0x1F40F8318]();
}

uint64_t sub_1B5A1A558()
{
  return MEMORY[0x1F40F8328]();
}

uint64_t sub_1B5A1A568()
{
  return MEMORY[0x1F40F8330]();
}

uint64_t sub_1B5A1A578()
{
  return MEMORY[0x1F40F8470]();
}

uint64_t sub_1B5A1A588()
{
  return MEMORY[0x1F40F8488]();
}

uint64_t sub_1B5A1A598()
{
  return MEMORY[0x1F40F84A0]();
}

uint64_t sub_1B5A1A5A8()
{
  return MEMORY[0x1F40F84B8]();
}

uint64_t sub_1B5A1A5B8()
{
  return MEMORY[0x1F40F8588]();
}

uint64_t sub_1B5A1A5C8()
{
  return MEMORY[0x1F40F85B8]();
}

uint64_t sub_1B5A1A5D8()
{
  return MEMORY[0x1F40F8610]();
}

uint64_t sub_1B5A1A5E8()
{
  return MEMORY[0x1F40F8650]();
}

uint64_t sub_1B5A1A5F8()
{
  return MEMORY[0x1F40F8658]();
}

uint64_t sub_1B5A1A618()
{
  return MEMORY[0x1F40F86F8]();
}

uint64_t sub_1B5A1A628()
{
  return MEMORY[0x1F40F8700]();
}

uint64_t sub_1B5A1A638()
{
  return MEMORY[0x1F40F8748]();
}

uint64_t sub_1B5A1A648()
{
  return MEMORY[0x1F40F8788]();
}

uint64_t sub_1B5A1A658()
{
  return MEMORY[0x1F40F87A0]();
}

uint64_t sub_1B5A1A668()
{
  return MEMORY[0x1F40F87E0]();
}

uint64_t sub_1B5A1A678()
{
  return MEMORY[0x1F40F87F0]();
}

uint64_t sub_1B5A1A688()
{
  return MEMORY[0x1F40F8838]();
}

uint64_t sub_1B5A1A698()
{
  return MEMORY[0x1F40F8840]();
}

uint64_t sub_1B5A1A6A8()
{
  return MEMORY[0x1F40F8858]();
}

uint64_t sub_1B5A1A6B8()
{
  return MEMORY[0x1F40F8908]();
}

uint64_t sub_1B5A1A6C8()
{
  return MEMORY[0x1F40F8910]();
}

uint64_t sub_1B5A1A6D8()
{
  return MEMORY[0x1F40F8920]();
}

uint64_t sub_1B5A1A6E8()
{
  return MEMORY[0x1F40F8930]();
}

uint64_t sub_1B5A1A6F8()
{
  return MEMORY[0x1F40F8998]();
}

uint64_t sub_1B5A1A708()
{
  return MEMORY[0x1F40F89A0]();
}

uint64_t sub_1B5A1A718()
{
  return MEMORY[0x1F40F89B0]();
}

uint64_t sub_1B5A1A728()
{
  return MEMORY[0x1F40F8B08]();
}

uint64_t sub_1B5A1A738()
{
  return MEMORY[0x1F40F8B10]();
}

uint64_t sub_1B5A1A748()
{
  return MEMORY[0x1F40F8C00]();
}

uint64_t sub_1B5A1A758()
{
  return MEMORY[0x1F40F8C18]();
}

uint64_t sub_1B5A1A768()
{
  return MEMORY[0x1F40F8C78]();
}

uint64_t sub_1B5A1A778()
{
  return MEMORY[0x1F40F8C80]();
}

uint64_t sub_1B5A1A788()
{
  return MEMORY[0x1F40F8D38]();
}

uint64_t sub_1B5A1A798()
{
  return MEMORY[0x1F40F8D40]();
}

uint64_t sub_1B5A1A7A8()
{
  return MEMORY[0x1F40F8D48]();
}

uint64_t sub_1B5A1A7B8()
{
  return MEMORY[0x1F40F8D58]();
}

uint64_t sub_1B5A1A7C8()
{
  return MEMORY[0x1F40F8D68]();
}

uint64_t sub_1B5A1A7D8()
{
  return MEMORY[0x1F40F8D70]();
}

uint64_t sub_1B5A1A7E8()
{
  return MEMORY[0x1F40F8DE8]();
}

uint64_t sub_1B5A1A7F8()
{
  return MEMORY[0x1F40F8DF0]();
}

uint64_t sub_1B5A1A808()
{
  return MEMORY[0x1F40F8EA0]();
}

uint64_t sub_1B5A1A818()
{
  return MEMORY[0x1F40F8EC8]();
}

uint64_t sub_1B5A1A828()
{
  return MEMORY[0x1F40F8ED0]();
}

uint64_t sub_1B5A1A838()
{
  return MEMORY[0x1F40F8EE0]();
}

uint64_t sub_1B5A1A848()
{
  return MEMORY[0x1F40F8EE8]();
}

uint64_t sub_1B5A1A858()
{
  return MEMORY[0x1F40F8F18]();
}

uint64_t sub_1B5A1A868()
{
  return MEMORY[0x1F40F8F20]();
}

uint64_t sub_1B5A1A878()
{
  return MEMORY[0x1F40F8F70]();
}

uint64_t sub_1B5A1A888()
{
  return MEMORY[0x1F40F8F78]();
}

uint64_t sub_1B5A1A898()
{
  return MEMORY[0x1F40F8F80]();
}

uint64_t sub_1B5A1A8A8()
{
  return MEMORY[0x1F40F8F88]();
}

uint64_t sub_1B5A1A8B8()
{
  return MEMORY[0x1F40F8F90]();
}

uint64_t sub_1B5A1A8C8()
{
  return MEMORY[0x1F40F8F98]();
}

uint64_t sub_1B5A1A8D8()
{
  return MEMORY[0x1F40F8FA0]();
}

uint64_t sub_1B5A1A8E8()
{
  return MEMORY[0x1F40F8FA8]();
}

uint64_t sub_1B5A1A908()
{
  return MEMORY[0x1F40F90C8]();
}

uint64_t sub_1B5A1A918()
{
  return MEMORY[0x1F40F90E0]();
}

uint64_t sub_1B5A1A928()
{
  return MEMORY[0x1F40F9138]();
}

uint64_t sub_1B5A1A938()
{
  return MEMORY[0x1F40F9150]();
}

uint64_t sub_1B5A1A948()
{
  return MEMORY[0x1F40F95B8]();
}

uint64_t sub_1B5A1A958()
{
  return MEMORY[0x1F40F95C0]();
}

uint64_t sub_1B5A1A968()
{
  return MEMORY[0x1F40F95C8]();
}

uint64_t sub_1B5A1A978()
{
  return MEMORY[0x1F40F96C8]();
}

uint64_t sub_1B5A1A988()
{
  return MEMORY[0x1F40F96D8]();
}

uint64_t sub_1B5A1A998()
{
  return MEMORY[0x1F40F96F8]();
}

uint64_t sub_1B5A1A9A8()
{
  return MEMORY[0x1F40F9708]();
}

uint64_t sub_1B5A1A9B8()
{
  return MEMORY[0x1F40F9718]();
}

uint64_t sub_1B5A1A9C8()
{
  return MEMORY[0x1F40F9720]();
}

uint64_t sub_1B5A1A9D8()
{
  return MEMORY[0x1F40F97D8]();
}

uint64_t sub_1B5A1A9E8()
{
  return MEMORY[0x1F40F9840]();
}

uint64_t sub_1B5A1A9F8()
{
  return MEMORY[0x1F40F9848]();
}

uint64_t sub_1B5A1AA08()
{
  return MEMORY[0x1F40F9878]();
}

uint64_t sub_1B5A1AA18()
{
  return MEMORY[0x1F40F9888]();
}

uint64_t sub_1B5A1AA28()
{
  return MEMORY[0x1F40F98A0]();
}

uint64_t sub_1B5A1AA38()
{
  return MEMORY[0x1F40F98B8]();
}

uint64_t sub_1B5A1AA48()
{
  return MEMORY[0x1F40F98C0]();
}

uint64_t sub_1B5A1AA58()
{
  return MEMORY[0x1F40F99B8]();
}

uint64_t sub_1B5A1AA68()
{
  return MEMORY[0x1F40F99C0]();
}

uint64_t sub_1B5A1AA78()
{
  return MEMORY[0x1F40F99D0]();
}

uint64_t sub_1B5A1AA88()
{
  return MEMORY[0x1F40F99D8]();
}

uint64_t sub_1B5A1AA98()
{
  return MEMORY[0x1F40F99E0]();
}

uint64_t sub_1B5A1AAA8()
{
  return MEMORY[0x1F40F99E8]();
}

uint64_t sub_1B5A1AAB8()
{
  return MEMORY[0x1F40F99F0]();
}

uint64_t sub_1B5A1AAC8()
{
  return MEMORY[0x1F40F99F8]();
}

uint64_t sub_1B5A1AAD8()
{
  return MEMORY[0x1F40F9A00]();
}

uint64_t sub_1B5A1AAE8()
{
  return MEMORY[0x1F40F9A08]();
}

uint64_t sub_1B5A1AAF8()
{
  return MEMORY[0x1F40F9A90]();
}

uint64_t sub_1B5A1AB08()
{
  return MEMORY[0x1F40F9A98]();
}

uint64_t sub_1B5A1AB18()
{
  return MEMORY[0x1F40F9AB0]();
}

uint64_t sub_1B5A1AB28()
{
  return MEMORY[0x1F40F9AB8]();
}

uint64_t sub_1B5A1AB38()
{
  return MEMORY[0x1F40F9AD0]();
}

uint64_t sub_1B5A1AB48()
{
  return MEMORY[0x1F40F9AD8]();
}

uint64_t sub_1B5A1AB58()
{
  return MEMORY[0x1F40F9B10]();
}

uint64_t sub_1B5A1AB68()
{
  return MEMORY[0x1F40F9B18]();
}

uint64_t sub_1B5A1AB78()
{
  return MEMORY[0x1F40F9B68]();
}

uint64_t sub_1B5A1AB88()
{
  return MEMORY[0x1F40F9BB8]();
}

uint64_t sub_1B5A1AB98()
{
  return MEMORY[0x1F40F9BC0]();
}

uint64_t sub_1B5A1ABA8()
{
  return MEMORY[0x1F40F9BC8]();
}

uint64_t sub_1B5A1ABB8()
{
  return MEMORY[0x1F40F9BD0]();
}

uint64_t sub_1B5A1ABC8()
{
  return MEMORY[0x1F40F9BD8]();
}

uint64_t sub_1B5A1ABD8()
{
  return MEMORY[0x1F40F9BE0]();
}

uint64_t sub_1B5A1ABE8()
{
  return MEMORY[0x1F40F9BE8]();
}

uint64_t sub_1B5A1ABF8()
{
  return MEMORY[0x1F40F9BF0]();
}

uint64_t sub_1B5A1AC08()
{
  return MEMORY[0x1F40F9BF8]();
}

uint64_t sub_1B5A1AC18()
{
  return MEMORY[0x1F40F9C00]();
}

uint64_t sub_1B5A1AC28()
{
  return MEMORY[0x1F40F9C08]();
}

uint64_t sub_1B5A1AC38()
{
  return MEMORY[0x1F40F9C10]();
}

uint64_t sub_1B5A1AC48()
{
  return MEMORY[0x1F40F9C18]();
}

uint64_t sub_1B5A1AC58()
{
  return MEMORY[0x1F40F9C28]();
}

uint64_t sub_1B5A1AC68()
{
  return MEMORY[0x1F40F9C30]();
}

uint64_t sub_1B5A1AC78()
{
  return MEMORY[0x1F40F9C38]();
}

uint64_t sub_1B5A1AC88()
{
  return MEMORY[0x1F40F9C40]();
}

uint64_t sub_1B5A1AC98()
{
  return MEMORY[0x1F40F9C48]();
}

uint64_t sub_1B5A1ACA8()
{
  return MEMORY[0x1F40F9C58]();
}

uint64_t sub_1B5A1ACB8()
{
  return MEMORY[0x1F40F9C60]();
}

uint64_t sub_1B5A1ACC8()
{
  return MEMORY[0x1F40F9C68]();
}

uint64_t sub_1B5A1ACD8()
{
  return MEMORY[0x1F40F9CB8]();
}

uint64_t sub_1B5A1ACE8()
{
  return MEMORY[0x1F40F9CC0]();
}

uint64_t sub_1B5A1ACF8()
{
  return MEMORY[0x1F40F9CD8]();
}

uint64_t sub_1B5A1AD08()
{
  return MEMORY[0x1F40F9CE8]();
}

uint64_t sub_1B5A1AD18()
{
  return MEMORY[0x1F40F9CF0]();
}

uint64_t sub_1B5A1AD28()
{
  return MEMORY[0x1F40F9D60]();
}

uint64_t sub_1B5A1AD38()
{
  return MEMORY[0x1F40F9D70]();
}

uint64_t sub_1B5A1AD48()
{
  return MEMORY[0x1F40F9D78]();
}

uint64_t sub_1B5A1AD58()
{
  return MEMORY[0x1F40F9D90]();
}

uint64_t sub_1B5A1AD68()
{
  return MEMORY[0x1F40F9D98]();
}

uint64_t sub_1B5A1AD78()
{
  return MEMORY[0x1F40F9E10]();
}

uint64_t sub_1B5A1AD88()
{
  return MEMORY[0x1F40F9E50]();
}

uint64_t sub_1B5A1AD98()
{
  return MEMORY[0x1F40F9E60]();
}

uint64_t sub_1B5A1ADA8()
{
  return MEMORY[0x1F40F9E70]();
}

uint64_t sub_1B5A1ADC8()
{
  return MEMORY[0x1F40F9E90]();
}

uint64_t sub_1B5A1ADD8()
{
  return MEMORY[0x1F40F9E98]();
}

uint64_t sub_1B5A1ADE8()
{
  return MEMORY[0x1F40F9EB0]();
}

uint64_t sub_1B5A1ADF8()
{
  return MEMORY[0x1F40F9EC0]();
}

uint64_t sub_1B5A1AE08()
{
  return MEMORY[0x1F40F9ED0]();
}

uint64_t sub_1B5A1AE18()
{
  return MEMORY[0x1F40F9EE0]();
}

uint64_t sub_1B5A1AE38()
{
  return MEMORY[0x1F40F9F00]();
}

uint64_t sub_1B5A1AE48()
{
  return MEMORY[0x1F40F9F90]();
}

uint64_t sub_1B5A1AE58()
{
  return MEMORY[0x1F40F9FA8]();
}

uint64_t sub_1B5A1AE68()
{
  return MEMORY[0x1F40F9FB8]();
}

uint64_t sub_1B5A1AE78()
{
  return MEMORY[0x1F40FA0F8]();
}

uint64_t sub_1B5A1AE88()
{
  return MEMORY[0x1F40FA100]();
}

uint64_t sub_1B5A1AF68()
{
  return MEMORY[0x1F40FA1A8]();
}

uint64_t sub_1B5A1AF78()
{
  return MEMORY[0x1F40FA220]();
}

uint64_t sub_1B5A1AF88()
{
  return MEMORY[0x1F40FA230]();
}

uint64_t sub_1B5A1AF98()
{
  return MEMORY[0x1F40FA288]();
}

uint64_t sub_1B5A1AFA8()
{
  return MEMORY[0x1F40FA298]();
}

uint64_t sub_1B5A1AFB8()
{
  return MEMORY[0x1F40FA2B0]();
}

uint64_t sub_1B5A1AFC8()
{
  return MEMORY[0x1F40FA2B8]();
}

uint64_t sub_1B5A1AFD8()
{
  return MEMORY[0x1F40FA2C0]();
}

uint64_t sub_1B5A1AFE8()
{
  return MEMORY[0x1F40FA2E0]();
}

uint64_t sub_1B5A1AFF8()
{
  return MEMORY[0x1F40FA348]();
}

uint64_t sub_1B5A1B008()
{
  return MEMORY[0x1F40FA510]();
}

uint64_t sub_1B5A1B018()
{
  return MEMORY[0x1F40FA518]();
}

uint64_t sub_1B5A1B028()
{
  return MEMORY[0x1F40FA520]();
}

uint64_t sub_1B5A1B038()
{
  return MEMORY[0x1F40FA528]();
}

uint64_t sub_1B5A1B048()
{
  return MEMORY[0x1F40FA548]();
}

uint64_t sub_1B5A1B058()
{
  return MEMORY[0x1F40FA550]();
}

uint64_t sub_1B5A1B068()
{
  return MEMORY[0x1F40FA740]();
}

uint64_t sub_1B5A1B078()
{
  return MEMORY[0x1F40FA748]();
}

uint64_t sub_1B5A1B088()
{
  return MEMORY[0x1F40FA768]();
}

uint64_t sub_1B5A1B098()
{
  return MEMORY[0x1F40FA7E8]();
}

uint64_t sub_1B5A1B0A8()
{
  return MEMORY[0x1F40FA7F0]();
}

uint64_t sub_1B5A1B0B8()
{
  return MEMORY[0x1F40FAAA8]();
}

uint64_t sub_1B5A1B0C8()
{
  return MEMORY[0x1F40FAAC0]();
}

uint64_t sub_1B5A1B0D8()
{
  return MEMORY[0x1F40FAD68]();
}

uint64_t sub_1B5A1B0E8()
{
  return MEMORY[0x1F40FAD78]();
}

uint64_t sub_1B5A1B0F8()
{
  return MEMORY[0x1F40FAD88]();
}

uint64_t sub_1B5A1B108()
{
  return MEMORY[0x1F40FAD98]();
}

uint64_t sub_1B5A1B118()
{
  return MEMORY[0x1F40FADB8]();
}

uint64_t sub_1B5A1B128()
{
  return MEMORY[0x1F40FADC0]();
}

uint64_t sub_1B5A1B138()
{
  return MEMORY[0x1F40FADD8]();
}

uint64_t sub_1B5A1B148()
{
  return MEMORY[0x1F40FADE0]();
}

uint64_t sub_1B5A1B158()
{
  return MEMORY[0x1F40FADF8]();
}

uint64_t sub_1B5A1B168()
{
  return MEMORY[0x1F40FAE18]();
}

uint64_t sub_1B5A1B178()
{
  return MEMORY[0x1F40FAE28]();
}

uint64_t sub_1B5A1B1C8()
{
  return MEMORY[0x1F40FAF60]();
}

uint64_t sub_1B5A1B1D8()
{
  return MEMORY[0x1F40FAF70]();
}

uint64_t sub_1B5A1B1E8()
{
  return MEMORY[0x1F40FAF80]();
}

uint64_t sub_1B5A1B1F8()
{
  return MEMORY[0x1F40FAF98]();
}

uint64_t sub_1B5A1B208()
{
  return MEMORY[0x1F40FAFA0]();
}

uint64_t sub_1B5A1B218()
{
  return MEMORY[0x1F40FAFB0]();
}

uint64_t sub_1B5A1B228()
{
  return MEMORY[0x1F40FAFC0]();
}

uint64_t sub_1B5A1B238()
{
  return MEMORY[0x1F40FAFE0]();
}

uint64_t sub_1B5A1B248()
{
  return MEMORY[0x1F40FAFF0]();
}

uint64_t sub_1B5A1B258()
{
  return MEMORY[0x1F40FB000]();
}

uint64_t sub_1B5A1B268()
{
  return MEMORY[0x1F40FB038]();
}

uint64_t sub_1B5A1B2E8()
{
  return MEMORY[0x1F40FB198]();
}

uint64_t sub_1B5A1B2F8()
{
  return MEMORY[0x1F40FB1B0]();
}

uint64_t sub_1B5A1B308()
{
  return MEMORY[0x1F40FB1E0]();
}

uint64_t sub_1B5A1B318()
{
  return MEMORY[0x1F40FB3B0]();
}

uint64_t sub_1B5A1B328()
{
  return MEMORY[0x1F40FB558]();
}

uint64_t sub_1B5A1B338()
{
  return MEMORY[0x1F40FB568]();
}

uint64_t sub_1B5A1B348()
{
  return MEMORY[0x1F40FB580]();
}

uint64_t sub_1B5A1B358()
{
  return MEMORY[0x1F40FB5D0]();
}

uint64_t sub_1B5A1B368()
{
  return MEMORY[0x1F40FB5D8]();
}

uint64_t sub_1B5A1B378()
{
  return MEMORY[0x1F40FB5F8]();
}

uint64_t sub_1B5A1B388()
{
  return MEMORY[0x1F40FB600]();
}

uint64_t sub_1B5A1B398()
{
  return MEMORY[0x1F40FB608]();
}

uint64_t sub_1B5A1B3A8()
{
  return MEMORY[0x1F40FB610]();
}

uint64_t sub_1B5A1B3B8()
{
  return MEMORY[0x1F40FB618]();
}

uint64_t sub_1B5A1B3C8()
{
  return MEMORY[0x1F40FB658]();
}

uint64_t sub_1B5A1B3D8()
{
  return MEMORY[0x1F40FB6B8]();
}

uint64_t sub_1B5A1B3E8()
{
  return MEMORY[0x1F40FB6C0]();
}

uint64_t sub_1B5A1B3F8()
{
  return MEMORY[0x1F40FB6C8]();
}

uint64_t sub_1B5A1B408()
{
  return MEMORY[0x1F40FB6F8]();
}

uint64_t sub_1B5A1B418()
{
  return MEMORY[0x1F40FB720]();
}

uint64_t sub_1B5A1B428()
{
  return MEMORY[0x1F40FB780]();
}

uint64_t sub_1B5A1B438()
{
  return MEMORY[0x1F40FB7A0]();
}

uint64_t sub_1B5A1B448()
{
  return MEMORY[0x1F40FB7C0]();
}

uint64_t sub_1B5A1B458()
{
  return MEMORY[0x1F40FB808]();
}

uint64_t sub_1B5A1B468()
{
  return MEMORY[0x1F40FB818]();
}

uint64_t sub_1B5A1B478()
{
  return MEMORY[0x1F40FB850]();
}

uint64_t sub_1B5A1B488()
{
  return MEMORY[0x1F40FB8F0]();
}

uint64_t sub_1B5A1B498()
{
  return MEMORY[0x1F40FB920]();
}

uint64_t sub_1B5A1B4A8()
{
  return MEMORY[0x1F40FB930]();
}

uint64_t sub_1B5A1B4B8()
{
  return MEMORY[0x1F40FB938]();
}

uint64_t sub_1B5A1B4C8()
{
  return MEMORY[0x1F40FB950]();
}

uint64_t sub_1B5A1B4D8()
{
  return MEMORY[0x1F40FB9F8]();
}

uint64_t sub_1B5A1B4E8()
{
  return MEMORY[0x1F40FBA08]();
}

uint64_t sub_1B5A1B4F8()
{
  return MEMORY[0x1F40FBA10]();
}

uint64_t sub_1B5A1B508()
{
  return MEMORY[0x1F40FBA38]();
}

uint64_t sub_1B5A1B518()
{
  return MEMORY[0x1F40FBA60]();
}

uint64_t sub_1B5A1B528()
{
  return MEMORY[0x1F40FBAA8]();
}

uint64_t sub_1B5A1B538()
{
  return MEMORY[0x1F40FBB08]();
}

uint64_t sub_1B5A1B548()
{
  return MEMORY[0x1F40FBB38]();
}

uint64_t sub_1B5A1B558()
{
  return MEMORY[0x1F40FBBD8]();
}

uint64_t sub_1B5A1B568()
{
  return MEMORY[0x1F40FBBF8]();
}

uint64_t sub_1B5A1B578()
{
  return MEMORY[0x1F40FBCA8]();
}

uint64_t sub_1B5A1B588()
{
  return MEMORY[0x1F40FBD40]();
}

uint64_t sub_1B5A1B598()
{
  return MEMORY[0x1F40FBD50]();
}

uint64_t sub_1B5A1B5A8()
{
  return MEMORY[0x1F40FBDA0]();
}

uint64_t sub_1B5A1B5B8()
{
  return MEMORY[0x1F40FBDB8]();
}

uint64_t sub_1B5A1B5C8()
{
  return MEMORY[0x1F40FBDC0]();
}

uint64_t sub_1B5A1B5D8()
{
  return MEMORY[0x1F40FBE28]();
}

uint64_t sub_1B5A1B5E8()
{
  return MEMORY[0x1F40FBE70]();
}

uint64_t sub_1B5A1B5F8()
{
  return MEMORY[0x1F40FBEE8]();
}

uint64_t sub_1B5A1B608()
{
  return MEMORY[0x1F40FBF10]();
}

uint64_t sub_1B5A1B618()
{
  return MEMORY[0x1F40FBF20]();
}

uint64_t sub_1B5A1B628()
{
  return MEMORY[0x1F40FBF30]();
}

uint64_t sub_1B5A1B638()
{
  return MEMORY[0x1F40FBF78]();
}

uint64_t sub_1B5A1B648()
{
  return MEMORY[0x1F40FBF88]();
}

uint64_t sub_1B5A1B658()
{
  return MEMORY[0x1F40FBFA8]();
}

uint64_t sub_1B5A1B668()
{
  return MEMORY[0x1F40FBFE8]();
}

uint64_t sub_1B5A1B678()
{
  return MEMORY[0x1F40FC000]();
}

uint64_t sub_1B5A1B688()
{
  return MEMORY[0x1F40FC010]();
}

uint64_t sub_1B5A1B698()
{
  return MEMORY[0x1F40FC018]();
}

uint64_t sub_1B5A1B6A8()
{
  return MEMORY[0x1F40FC038]();
}

uint64_t sub_1B5A1B6B8()
{
  return MEMORY[0x1F40FC040]();
}

uint64_t sub_1B5A1B6C8()
{
  return MEMORY[0x1F40FC050]();
}

uint64_t sub_1B5A1B6D8()
{
  return MEMORY[0x1F40FC070]();
}

uint64_t sub_1B5A1B6E8()
{
  return MEMORY[0x1F40FC080]();
}

uint64_t sub_1B5A1B6F8()
{
  return MEMORY[0x1F40FC0C0]();
}

uint64_t sub_1B5A1B708()
{
  return MEMORY[0x1F40FC0D8]();
}

uint64_t sub_1B5A1B718()
{
  return MEMORY[0x1F40FC0F0]();
}

uint64_t sub_1B5A1B728()
{
  return MEMORY[0x1F40FC108]();
}

uint64_t sub_1B5A1B738()
{
  return MEMORY[0x1F40FC130]();
}

uint64_t sub_1B5A1B748()
{
  return MEMORY[0x1F40FC158]();
}

uint64_t sub_1B5A1B758()
{
  return MEMORY[0x1F40FC1B8]();
}

uint64_t sub_1B5A1B768()
{
  return MEMORY[0x1F40FC1D8]();
}

uint64_t sub_1B5A1B778()
{
  return MEMORY[0x1F40FC1E0]();
}

uint64_t sub_1B5A1B788()
{
  return MEMORY[0x1F40FC208]();
}

uint64_t sub_1B5A1B798()
{
  return MEMORY[0x1F40FC230]();
}

uint64_t sub_1B5A1B7A8()
{
  return MEMORY[0x1F40FC240]();
}

uint64_t sub_1B5A1B7B8()
{
  return MEMORY[0x1F40FC2E0]();
}

uint64_t sub_1B5A1B7C8()
{
  return MEMORY[0x1F40FC2F8]();
}

uint64_t sub_1B5A1B7D8()
{
  return MEMORY[0x1F40FC310]();
}

uint64_t sub_1B5A1B7E8()
{
  return MEMORY[0x1F40FC350]();
}

uint64_t sub_1B5A1B8F8()
{
  return MEMORY[0x1F40FC4A8]();
}

uint64_t sub_1B5A1B908()
{
  return MEMORY[0x1F40FC4C0]();
}

uint64_t sub_1B5A1B928()
{
  return MEMORY[0x1F40FC550]();
}

uint64_t sub_1B5A1B938()
{
  return MEMORY[0x1F40FC568]();
}

uint64_t sub_1B5A1B948()
{
  return MEMORY[0x1F40FC5D0]();
}

uint64_t sub_1B5A1B968()
{
  return MEMORY[0x1F40FC600]();
}

uint64_t sub_1B5A1B978()
{
  return MEMORY[0x1F40FC620]();
}

uint64_t sub_1B5A1B988()
{
  return MEMORY[0x1F40FC668]();
}

uint64_t sub_1B5A1B998()
{
  return MEMORY[0x1F40FC670]();
}

uint64_t sub_1B5A1B9C8()
{
  return MEMORY[0x1F40FC6A0]();
}

uint64_t sub_1B5A1B9E8()
{
  return MEMORY[0x1F40FC6C8]();
}

uint64_t sub_1B5A1B9F8()
{
  return MEMORY[0x1F40FC6D0]();
}

uint64_t sub_1B5A1BA18()
{
  return MEMORY[0x1F40FC6F0]();
}

uint64_t sub_1B5A1BA28()
{
  return MEMORY[0x1F40FC718]();
}

uint64_t sub_1B5A1BA38()
{
  return MEMORY[0x1F40FC750]();
}

uint64_t sub_1B5A1BA48()
{
  return MEMORY[0x1F40FC7E0]();
}

uint64_t sub_1B5A1BA58()
{
  return MEMORY[0x1F40FC838]();
}

uint64_t sub_1B5A1BA68()
{
  return MEMORY[0x1F40FC850]();
}

uint64_t sub_1B5A1BA78()
{
  return MEMORY[0x1F40FC888]();
}

uint64_t sub_1B5A1BA88()
{
  return MEMORY[0x1F40FC8F8]();
}

uint64_t sub_1B5A1BA98()
{
  return MEMORY[0x1F40FC910]();
}

uint64_t sub_1B5A1BAA8()
{
  return MEMORY[0x1F40FC920]();
}

uint64_t sub_1B5A1BAB8()
{
  return MEMORY[0x1F40FC950]();
}

uint64_t sub_1B5A1BAC8()
{
  return MEMORY[0x1F40FC958]();
}

uint64_t sub_1B5A1BAD8()
{
  return MEMORY[0x1F40FC970]();
}

uint64_t sub_1B5A1BAE8()
{
  return MEMORY[0x1F40FC978]();
}

uint64_t sub_1B5A1BAF8()
{
  return MEMORY[0x1F40FC980]();
}

uint64_t sub_1B5A1BB08()
{
  return MEMORY[0x1F40FC998]();
}

uint64_t sub_1B5A1BB18()
{
  return MEMORY[0x1F40FC9A0]();
}

uint64_t sub_1B5A1BB28()
{
  return MEMORY[0x1F40FC9B8]();
}

uint64_t sub_1B5A1BB38()
{
  return MEMORY[0x1F40FCA30]();
}

uint64_t sub_1B5A1BB48()
{
  return MEMORY[0x1F40FCB30]();
}

uint64_t sub_1B5A1BB58()
{
  return MEMORY[0x1F40FCB38]();
}

uint64_t sub_1B5A1BB68()
{
  return MEMORY[0x1F40FCB40]();
}

uint64_t sub_1B5A1BB78()
{
  return MEMORY[0x1F40FCB88]();
}

uint64_t sub_1B5A1BB88()
{
  return MEMORY[0x1F40FCB90]();
}

uint64_t sub_1B5A1BB98()
{
  return MEMORY[0x1F40FCB98]();
}

uint64_t sub_1B5A1BBA8()
{
  return MEMORY[0x1F40FCBA8]();
}

uint64_t sub_1B5A1BBB8()
{
  return MEMORY[0x1F40FCBB8]();
}

uint64_t sub_1B5A1BBC8()
{
  return MEMORY[0x1F40FCBC8]();
}

uint64_t sub_1B5A1BBD8()
{
  return MEMORY[0x1F40FCBD8]();
}

uint64_t sub_1B5A1BBE8()
{
  return MEMORY[0x1F40FCBE8]();
}

uint64_t sub_1B5A1BBF8()
{
  return MEMORY[0x1F40FCBF0]();
}

uint64_t sub_1B5A1BC08()
{
  return MEMORY[0x1F40FCBF8]();
}

uint64_t sub_1B5A1BC18()
{
  return MEMORY[0x1F40FCC08]();
}

uint64_t sub_1B5A1BC28()
{
  return MEMORY[0x1F40FCC10]();
}

uint64_t sub_1B5A1BC38()
{
  return MEMORY[0x1F40FCC20]();
}

uint64_t sub_1B5A1BC48()
{
  return MEMORY[0x1F40FCC30]();
}

uint64_t sub_1B5A1BC58()
{
  return MEMORY[0x1F40FCC40]();
}

uint64_t sub_1B5A1BC68()
{
  return MEMORY[0x1F40FCC50]();
}

uint64_t sub_1B5A1BC78()
{
  return MEMORY[0x1F40FCCA8]();
}

uint64_t sub_1B5A1BC88()
{
  return MEMORY[0x1F40FCCB8]();
}

uint64_t sub_1B5A1BC98()
{
  return MEMORY[0x1F40FCCC0]();
}

uint64_t sub_1B5A1BCA8()
{
  return MEMORY[0x1F40FCCD0]();
}

uint64_t sub_1B5A1BCB8()
{
  return MEMORY[0x1F40FCCF0]();
}

uint64_t sub_1B5A1BCC8()
{
  return MEMORY[0x1F40FCD00]();
}

uint64_t sub_1B5A1BCD8()
{
  return MEMORY[0x1F40FCD08]();
}

uint64_t sub_1B5A1BCE8()
{
  return MEMORY[0x1F40FCD10]();
}

uint64_t sub_1B5A1BCF8()
{
  return MEMORY[0x1F40FCD18]();
}

uint64_t sub_1B5A1BD08()
{
  return MEMORY[0x1F40FCD40]();
}

uint64_t sub_1B5A1BD18()
{
  return MEMORY[0x1F40FCD48]();
}

uint64_t sub_1B5A1BDC8()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1B5A1BDD8()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1B5A1BDE8()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1B5A1BDF8()
{
  return MEMORY[0x1F4186EF8]();
}

uint64_t sub_1B5A1BE08()
{
  return MEMORY[0x1F4186F40]();
}

uint64_t sub_1B5A1BE18()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1B5A1BE28()
{
  return MEMORY[0x1F4183318]();
}

uint64_t sub_1B5A1BE38()
{
  return MEMORY[0x1F4183358]();
}

uint64_t sub_1B5A1BE48()
{
  return MEMORY[0x1F4183398]();
}

uint64_t sub_1B5A1BE58()
{
  return MEMORY[0x1F4183498]();
}

uint64_t sub_1B5A1BE68()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1B5A1BE78()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_1B5A1BE88()
{
  return MEMORY[0x1F4183500]();
}

uint64_t sub_1B5A1BE98()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1B5A1BEA8()
{
  return MEMORY[0x1F4188428]();
}

uint64_t sub_1B5A1BEB8()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1B5A1BEC8()
{
  return MEMORY[0x1F40FCEF0]();
}

uint64_t sub_1B5A1BED8()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1B5A1BEE8()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1B5A1BEF8()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1B5A1BF08()
{
  return MEMORY[0x1F40E61E8]();
}

uint64_t sub_1B5A1BF18()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_1B5A1BF28()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_1B5A1BF38()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_1B5A1BF48()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1B5A1BF58()
{
  return MEMORY[0x1F41838A0]();
}

uint64_t sub_1B5A1BF68()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1B5A1BF78()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_1B5A1BF88()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1B5A1BF98()
{
  return MEMORY[0x1F41839F8]();
}

uint64_t sub_1B5A1BFA8()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1B5A1BFB8()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1B5A1BFC8()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_1B5A1BFD8()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1B5A1BFF8()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_1B5A1C008()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1B5A1C018()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_1B5A1C028()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_1B5A1C038()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1B5A1C048()
{
  return MEMORY[0x1F4183BF8]();
}

uint64_t sub_1B5A1C058()
{
  return MEMORY[0x1F4183C18]();
}

uint64_t sub_1B5A1C068()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_1B5A1C078()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_1B5A1C088()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1B5A1C098()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1B5A1C0A8()
{
  return MEMORY[0x1F4183ED8]();
}

uint64_t sub_1B5A1C0B8()
{
  return MEMORY[0x1F4183EE8]();
}

uint64_t sub_1B5A1C0C8()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1B5A1C0D8()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1B5A1C0E8()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_1B5A1C0F8()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_1B5A1C108()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1B5A1C118()
{
  return MEMORY[0x1F4183FD0]();
}

uint64_t sub_1B5A1C128()
{
  return MEMORY[0x1F4183FD8]();
}

uint64_t sub_1B5A1C138()
{
  return MEMORY[0x1F4183FF0]();
}

uint64_t sub_1B5A1C148()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1B5A1C158()
{
  return MEMORY[0x1F4187C98]();
}

uint64_t sub_1B5A1C168()
{
  return MEMORY[0x1F4187CA0]();
}

uint64_t sub_1B5A1C178()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1B5A1C188()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1B5A1C198()
{
  return MEMORY[0x1F4187D98]();
}

uint64_t sub_1B5A1C1A8()
{
  return MEMORY[0x1F4187DC8]();
}

uint64_t sub_1B5A1C1B8()
{
  return MEMORY[0x1F4184048]();
}

uint64_t sub_1B5A1C1C8()
{
  return MEMORY[0x1F4184090]();
}

uint64_t sub_1B5A1C1D8()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1B5A1C1E8()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_1B5A1C1F8()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1B5A1C208()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1B5A1C218()
{
  return MEMORY[0x1F40FCEF8]();
}

uint64_t sub_1B5A1C228()
{
  return MEMORY[0x1F40E6528]();
}

uint64_t sub_1B5A1C238()
{
  return MEMORY[0x1F40E6548]();
}

uint64_t sub_1B5A1C258()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1B5A1C268()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1B5A1C278()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1B5A1C288()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_1B5A1C298()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1B5A1C2A8()
{
  return MEMORY[0x1F40E6840]();
}

uint64_t sub_1B5A1C2B8()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1B5A1C2C8()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_1B5A1C2D8()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1B5A1C2E8()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1B5A1C2F8()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1B5A1C308()
{
  return MEMORY[0x1F4184A80]();
}

uint64_t sub_1B5A1C318()
{
  return MEMORY[0x1F4184AA0]();
}

uint64_t sub_1B5A1C328()
{
  return MEMORY[0x1F4184AC8]();
}

uint64_t sub_1B5A1C338()
{
  return MEMORY[0x1F4184B10]();
}

uint64_t sub_1B5A1C348()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1B5A1C358()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1B5A1C368()
{
  return MEMORY[0x1F4184C40]();
}

uint64_t sub_1B5A1C388()
{
  return MEMORY[0x1F4184C60]();
}

uint64_t sub_1B5A1C398()
{
  return MEMORY[0x1F4184C68]();
}

uint64_t sub_1B5A1C3A8()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1B5A1C3B8()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1B5A1C3C8()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_1B5A1C3D8()
{
  return MEMORY[0x1F4184DD8]();
}

uint64_t sub_1B5A1C3E8()
{
  return MEMORY[0x1F4184DE0]();
}

uint64_t sub_1B5A1C3F8()
{
  return MEMORY[0x1F4184DE8]();
}

uint64_t sub_1B5A1C408()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_1B5A1C418()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1B5A1C428()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1B5A1C438()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1B5A1C448()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_1B5A1C458()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1B5A1C468()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1B5A1C478()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1B5A1C488()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_1B5A1C498()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_1B5A1C4A8()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_1B5A1C4B8()
{
  return MEMORY[0x1F4184FF8]();
}

uint64_t sub_1B5A1C4C8()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1B5A1C4D8()
{
  return MEMORY[0x1F41850B0]();
}

uint64_t sub_1B5A1C4E8()
{
  return MEMORY[0x1F41850C0]();
}

uint64_t sub_1B5A1C4F8()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1B5A1C508()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1B5A1C518()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1B5A1C528()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1B5A1C538()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1B5A1C548()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1B5A1C558()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1B5A1C568()
{
  return MEMORY[0x1F41854D8]();
}

uint64_t sub_1B5A1C578()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t sub_1B5A1C588()
{
  return MEMORY[0x1F41854E8]();
}

uint64_t sub_1B5A1C598()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_1B5A1C5A8()
{
  return MEMORY[0x1F4185500]();
}

uint64_t sub_1B5A1C5B8()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_1B5A1C5C8()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1B5A1C5D8()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1B5A1C5E8()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_1B5A1C5F8()
{
  return MEMORY[0x1F41855E8]();
}

uint64_t sub_1B5A1C608()
{
  return MEMORY[0x1F41855F0]();
}

uint64_t sub_1B5A1C618()
{
  return MEMORY[0x1F4185698]();
}

uint64_t sub_1B5A1C628()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1B5A1C638()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1B5A1C648()
{
  return MEMORY[0x1F41857F0]();
}

uint64_t sub_1B5A1C658()
{
  return MEMORY[0x1F4185818]();
}

uint64_t sub_1B5A1C668()
{
  return MEMORY[0x1F4185898]();
}

uint64_t sub_1B5A1C678()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1B5A1C688()
{
  return MEMORY[0x1F4185A58]();
}

uint64_t sub_1B5A1C698()
{
  return MEMORY[0x1F4185A60]();
}

uint64_t sub_1B5A1C6A8()
{
  return MEMORY[0x1F4185A68]();
}

uint64_t sub_1B5A1C6B8()
{
  return MEMORY[0x1F4185A78]();
}

uint64_t sub_1B5A1C6C8()
{
  return MEMORY[0x1F4185A88]();
}

uint64_t sub_1B5A1C6D8()
{
  return MEMORY[0x1F4185AF0]();
}

uint64_t sub_1B5A1C6E8()
{
  return MEMORY[0x1F4185AF8]();
}

uint64_t sub_1B5A1C6F8()
{
  return MEMORY[0x1F4185B00]();
}

uint64_t sub_1B5A1C708()
{
  return MEMORY[0x1F4185B10]();
}

uint64_t sub_1B5A1C718()
{
  return MEMORY[0x1F4185CF8]();
}

uint64_t sub_1B5A1C728()
{
  return MEMORY[0x1F4185D10]();
}

uint64_t sub_1B5A1C738()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1B5A1C748()
{
  return MEMORY[0x1F40E6E30]();
}

uint64_t sub_1B5A1C758()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1B5A1C768()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1B5A1C778()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1B5A1C788()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1B5A1C798()
{
  return MEMORY[0x1F4185E90]();
}

uint64_t sub_1B5A1C7A8()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1B5A1C7B8()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1B5A1C7C8()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1B5A1C7D8()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1B5A1C7E8()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1B5A1C7F8()
{
  return MEMORY[0x1F4185FA8]();
}

uint64_t sub_1B5A1C808()
{
  return MEMORY[0x1F4185FB0]();
}

uint64_t sub_1B5A1C818()
{
  return MEMORY[0x1F4185FB8]();
}

uint64_t sub_1B5A1C828()
{
  return MEMORY[0x1F4185FC0]();
}

uint64_t sub_1B5A1C838()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1B5A1C848()
{
  return MEMORY[0x1F4185FD8]();
}

uint64_t sub_1B5A1C858()
{
  return MEMORY[0x1F4185FE0]();
}

uint64_t sub_1B5A1C868()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1B5A1C878()
{
  return MEMORY[0x1F4186288]();
}

uint64_t sub_1B5A1C8A8()
{
  return MEMORY[0x1F41862B8]();
}

uint64_t sub_1B5A1C8B8()
{
  return MEMORY[0x1F4186318]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1F4186340]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void bzero(void *a1, size_t a2)
{
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x1F40CC1A0](__x, __y);
  return result;
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1F40CD648]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x1F4186508]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1F4186568]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1F41865F0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1F4186618]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x1F4186620]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1F4186638]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1F4186640]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x1F4186698]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x1F41866E8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1F41868A0]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}