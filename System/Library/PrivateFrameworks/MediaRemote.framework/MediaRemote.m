void sub_194F3EC4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void __MRMediaRemoteServiceStart_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = [WeakRetained connectionQueue];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __MRMediaRemoteServiceStart_block_invoke_2;
  v8[3] = &unk_1E57D2098;
  uint64_t v6 = *(void *)(a1 + 40);
  id v9 = v3;
  uint64_t v10 = v6;
  id v7 = v3;
  dispatch_async(v5, v8);
}

BOOL _MRNowPlayingPlayerPathProtobufReadFrom(id *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v18 = objc_alloc_init(_MRNowPlayingPlayerProtobuf);
        objc_storeStrong(a1 + 3, v18);
        if (!PBReaderPlaceMark() || (_MRNowPlayingPlayerProtobufReadFrom((uint64_t)v18, a2) & 1) == 0)
        {
LABEL_34:

          return 0;
        }
        goto LABEL_29;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        v18 = objc_alloc_init(_MROriginProtobuf);
        objc_storeStrong(a1 + 2, v18);
        if (!PBReaderPlaceMark() || (_MROriginProtobufReadFrom((uint64_t)v18, a2) & 1) == 0) {
          goto LABEL_34;
        }
LABEL_29:
        PBReaderRecallMark();

        goto LABEL_31;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_31:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    v18 = objc_alloc_init(_MRNowPlayingClientProtobuf);
    objc_storeStrong(a1 + 1, v18);
    if (!PBReaderPlaceMark() || (_MRNowPlayingClientProtobufReadFrom((uint64_t)v18, a2) & 1) == 0) {
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MROriginProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 36) |= 2u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_47;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_49;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_47:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_49:
        uint64_t v38 = 28;
        goto LABEL_54;
      case 2u:
        uint64_t v24 = PBReaderReadString();
        v25 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v24;

        goto LABEL_59;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 36) |= 1u;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v19 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_53:
        uint64_t v38 = 24;
LABEL_54:
        *(_DWORD *)(a1 + v38) = v19;
        goto LABEL_59;
      case 4u:
        v31 = objc_alloc_init(_MRDeviceInfoMessageProtobuf);
        objc_storeStrong((id *)(a1 + 8), v31);
        if PBReaderPlaceMark() && (_MRDeviceInfoMessageProtobufReadFrom((uint64_t)v31, a2))
        {
          PBReaderRecallMark();

LABEL_59:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 5u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        *(unsigned char *)(a1 + 36) |= 4u;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_58:
        *(unsigned char *)(a1 + 32) = v34 != 0;
        goto LABEL_59;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_59;
    }
  }
}

uint64_t _MRNowPlayingClientProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_61;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_63;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_61:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_63:
        uint64_t v44 = 56;
        goto LABEL_72;
      case 2u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 8;
        goto LABEL_59;
      case 3u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 48;
        goto LABEL_59;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 76) |= 4u;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v19 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_67:
        uint64_t v44 = 60;
        goto LABEL_72;
      case 5u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v19 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_71:
        uint64_t v44 = 40;
LABEL_72:
        *(_DWORD *)(a1 + v44) = v19;
        goto LABEL_77;
      case 6u:
        unint64_t v36 = objc_alloc_init(_MRColorProtobuf);
        objc_storeStrong((id *)(a1 + 64), v36);
        if (PBReaderPlaceMark() && _MRColorProtobufReadFrom((uint64_t)v36, a2))
        {
          PBReaderRecallMark();
LABEL_50:

LABEL_77:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 7u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 16;
        goto LABEL_59;
      case 8u:
        PBReaderReadString();
        unint64_t v36 = (_MRColorProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v36) {
          [(id)a1 addExtendedBundleIdentifierHierarchy:v36];
        }
        goto LABEL_50;
      case 9u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 76) |= 8u;
        while (2)
        {
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v14 = v38++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
LABEL_76:
        *(unsigned char *)(a1 + 72) = v39 != 0;
        goto LABEL_77;
      case 0xAu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 32;
LABEL_59:
        v43 = *(void **)(a1 + v25);
        *(void *)(a1 + v25) = v24;

        goto LABEL_77;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_77;
    }
  }
}

uint64_t _MRNowPlayingPlayerProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        int v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 56;
              goto LABEL_51;
            case 2u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 40;
              goto LABEL_51;
            case 4u:
              char v20 = 0;
              unsigned int v21 = 0;
              uint64_t v22 = 0;
              *(unsigned char *)(a1 + 64) |= 2u;
              while (2)
              {
                uint64_t v23 = *v3;
                unint64_t v24 = *(void *)(a2 + v23);
                if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                  *(void *)(a2 + v23) = v24 + 1;
                  v22 |= (unint64_t)(v25 & 0x7F) << v20;
                  if (v25 < 0)
                  {
                    v20 += 7;
                    BOOL v14 = v21++ >= 9;
                    if (v14)
                    {
                      LODWORD(v22) = 0;
                      goto LABEL_55;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v22) = 0;
              }
LABEL_55:
              uint64_t v38 = 36;
              goto LABEL_60;
            case 5u:
              if (v16 == 2)
              {
                uint64_t result = PBReaderPlaceMark();
                if (!result) {
                  return result;
                }
                while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
                {
                  char v26 = 0;
                  unsigned int v27 = 0;
                  uint64_t v28 = 0;
                  while (1)
                  {
                    uint64_t v29 = *v3;
                    unint64_t v30 = *(void *)(a2 + v29);
                    if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
                      break;
                    }
                    char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
                    *(void *)(a2 + v29) = v30 + 1;
                    v28 |= (unint64_t)(v31 & 0x7F) << v26;
                    if (v31 < 0)
                    {
                      v26 += 7;
                      BOOL v14 = v27++ >= 9;
                      if (!v14) {
                        continue;
                      }
                    }
                    goto LABEL_42;
                  }
                  *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
                  PBRepeatedInt64Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v41 = 0;
                while (1)
                {
                  uint64_t v42 = *v3;
                  unint64_t v43 = *(void *)(a2 + v42);
                  if (v43 == -1 || v43 >= *(void *)(a2 + *v4)) {
                    break;
                  }
                  char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
                  *(void *)(a2 + v42) = v43 + 1;
                  v41 |= (unint64_t)(v44 & 0x7F) << v39;
                  if (v44 < 0)
                  {
                    v39 += 7;
                    BOOL v14 = v40++ >= 9;
                    if (!v14) {
                      continue;
                    }
                  }
                  goto LABEL_72;
                }
                *(unsigned char *)(a2 + *v5) = 1;
LABEL_72:
                PBRepeatedInt64Add();
              }
LABEL_61:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
            case 6u:
              char v32 = 0;
              unsigned int v33 = 0;
              uint64_t v22 = 0;
              *(unsigned char *)(a1 + 64) |= 1u;
              while (2)
              {
                uint64_t v34 = *v3;
                unint64_t v35 = *(void *)(a2 + v34);
                if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
                  *(void *)(a2 + v34) = v35 + 1;
                  v22 |= (unint64_t)(v36 & 0x7F) << v32;
                  if (v36 < 0)
                  {
                    v32 += 7;
                    BOOL v14 = v33++ >= 9;
                    if (v14)
                    {
                      LODWORD(v22) = 0;
                      goto LABEL_59;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v22) = 0;
              }
LABEL_59:
              uint64_t v38 = 32;
LABEL_60:
              *(_DWORD *)(a1 + v38) = v22;
              goto LABEL_61;
            case 7u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 48;
LABEL_51:
              char v37 = *(void **)(a1 + v19);
              *(void *)(a1 + v19) = v18;

              goto LABEL_61;
            default:
              if (PBReaderSkipValueWithTag()) {
                goto LABEL_61;
              }
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id MRCreateEncodedUserInfo(void *a1)
{
  id v1 = a1;
  v2 = v1;
  if (v1) {
    id v3 = (id)[v1 mutableCopy];
  }
  else {
    id v3 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  }
  v4 = v3;
  _MREncodeObjectForKey(v3, @"kMRMediaRemoteOriginUserInfoKey", @"kMRMediaRemoteOriginDataUserInfoKey", &__block_literal_global_136);
  _MREncodeObjectForKey(v4, @"kMRNowPlayingClientUserInfoKey", @"kMRNowPlayingClientDataUserInfoKey", &__block_literal_global_139);
  _MREncodeObjectForKey(v4, @"kMRNowPlayingPlayerUserInfoKey", @"kMRNowPlayingPlayerDataUserInfoKey", &__block_literal_global_142);
  _MREncodeObjectForKey(v4, @"kMRNowPlayingPlayerPathUserInfoKey", @"kMRNowPlayingPlayerPathDataUserInfoKey", &__block_literal_global_145);
  _MREncodeObjectForKey(v4, @"kMRActiveNowPlayingPlayerPathUserInfoKey", @"kMRActiveNowPlayingPlayerPathDataUserInfoKey", &__block_literal_global_147);
  _MREncodeObjectForKey(v4, @"kMROriginActiveNowPlayingPlayerPathUserInfoKey", @"kMROriginActiveNowPlayingPlayerPathDataUserInfoKey", &__block_literal_global_149);
  v5 = (void *)[v4 objectForKey:@"kMRMediaRemoteUpdatedContentItemsUserInfoKey"];
  if (v5)
  {
    ExternalRepresentation = MRContentItemsCreateExternalRepresentation(v5);
    if (ExternalRepresentation)
    {
      [v4 setObject:ExternalRepresentation forKey:@"kMRMediaRemoteUpdatedContentItemsDataUserInfoKey"];
    }
    else
    {
      id v7 = _MRLogForCategory(0);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
        _MREncodeObjectForKey_cold_1();
      }
    }
    [v4 removeObjectForKey:@"kMRMediaRemoteUpdatedContentItemsUserInfoKey"];
  }
  char v8 = (__CFError *)[v4 objectForKey:@"kMRMediaRemotePlaybackErrorUserInfoKey"];
  if (v8)
  {
    CFDataRef ErrorExternalRepresentation = MRMediaRemoteCreateErrorExternalRepresentation(v8);
    if (ErrorExternalRepresentation)
    {
      [v4 setObject:ErrorExternalRepresentation forKey:@"_kMRMediaRemotePlaybackErrorDataUserInfoKey"];
    }
    else
    {
      unint64_t v10 = _MRLogForCategory(0);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        _MREncodeObjectForKey_cold_1();
      }
    }
    [v4 removeObjectForKey:@"kMRMediaRemotePlaybackErrorUserInfoKey"];
  }
  uint64_t v11 = [v4 objectForKey:@"kMRApplicationActivityUserInfoKey"];
  if (v11)
  {
    unint64_t v12 = (void *)_MRApplicationActivityCreateExternalRepresentation(v11);
    if (v12)
    {
      [v4 setObject:v12 forKey:@"kMRApplicationActivityUserInfoDataKey"];
    }
    else
    {
      char v13 = _MRLogForCategory(0);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        _MREncodeObjectForKey_cold_1();
      }
    }
    [v4 removeObjectForKey:@"kMRApplicationActivityUserInfoKey"];
  }
  _MREncodeObjectForKey(v4, @"kMRPairedDeviceUserInfoKey", @"kMRPairedDeviceUserInfoDataKey", &__block_literal_global_153);
  _MREncodeObjectForKey(v4, @"kMRPreviousPairedDeviceUserInfoKey", @"kMRPreviousPairedDeviceUserInfoDataKey", &__block_literal_global_156);
  _MREncodeObjectForKey(v4, @"kMRPlaybackSessionRequestUserInfoKey", @"kMRPlaybackSessionRequestDataUserInfoKey", &__block_literal_global_160_0);
  _MREncodeObjectForKey(v4, @"kMRPlaybackSessionUserInfoKey", @"kMRPlaybackSessionDataUserInfoKey", &__block_literal_global_164);
  _MREncodeObjectForKey(v4, @"kMRPlaybackQueueRequestUserInfoKey", @"kMRPlaybackQueueRequestDataUserInfoKey", &__block_literal_global_168);
  _MREncodeObjectForKey(v4, @"kMRPlaybackQueueUserInfoKey", @"kMRPlaybackQueueDataUserInfoKey", &__block_literal_global_172);
  _MREncodeObjectForKey(v4, @"kMRSupportedCommandsUserInfoKey", @"kMRSupportedCommandsDataUserInfoKey", &__block_literal_global_175_0);
  _MREncodeObjectForKey(v4, @"MRAVEndpointOutputDeviceUserInfoKey", @"MRAVEndpointOutputDeviceDataUserInfoKey", &__block_literal_global_178);
  _MREncodeObjectForKey(v4, @"MRActiveGroupSessionInfoUserInfoKey", @"_MRGroupSessionInfoDataUserInfoKey", &__block_literal_global_181);
  _MREncodeObjectForKey(v4, @"MRGroupSessionEligibilityStatusUserInfoKey", @"_MRGroupSessionEligibilityStatusDataUserInfoKey", &__block_literal_global_184);
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = __MRCreateEncodedUserInfo_block_invoke_11;
  v16[3] = &unk_1E57D48B0;
  id v14 = v4;
  id v17 = v14;
  [v14 enumerateKeysAndObjectsUsingBlock:v16];

  return v14;
}

void _MREncodeObjectForKey(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a1;
  char v8 = a4;
  unsigned int v9 = [v7 objectForKey:a2];
  if (v9)
  {
    unint64_t v10 = v8[2](v8, v9);
    if (v10)
    {
      [v7 setObject:v10 forKey:a3];
    }
    else
    {
      uint64_t v11 = _MRLogForCategory(0);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        _MREncodeObjectForKey_cold_1();
      }
    }
    [v7 removeObjectForKey:a2];
  }
}

uint64_t MRGetPlayerPathFromUserInfo(void *a1, const char *a2)
{
  return [a1 objectForKeyedSubscript:@"kMRNowPlayingPlayerPathUserInfoKey"];
}

void sub_194F4409C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F441E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id MRCreateDecodedUserInfo(void *a1)
{
  id v1 = a1;
  v2 = v1;
  if (v1)
  {
    id v3 = (void *)[v1 mutableCopy];
    v4 = v3;
    if (v3)
    {
      _MRDecodeObjectForKey(v3, @"kMRNowPlayingPlayerPathUserInfoKey", @"kMRNowPlayingPlayerPathDataUserInfoKey", &__block_literal_global_89_0);
      v5 = [v4 objectForKey:@"kMRNowPlayingPlayerPathUserInfoKey"];
      uint64_t v6 = v5;
      if (v5)
      {
        id v7 = [v5 origin];

        if (v7)
        {
          char v8 = [v6 origin];
          [v4 setObject:v8 forKey:@"kMRMediaRemoteOriginUserInfoKey"];
        }
        unsigned int v9 = [v6 client];
        if (v9)
        {
          [v4 setObject:v9 forKey:@"kMRNowPlayingClientUserInfoKey"];
          unint64_t v10 = [v9 displayName];
          if (v10) {
            [v4 setObject:v10 forKey:@"kMRMediaRemoteNowPlayingApplicationDisplayNameUserInfoKey"];
          }
        }
        uint64_t v11 = [v6 player];

        if (v11)
        {
          unint64_t v12 = [v6 player];
          [v4 setObject:v12 forKey:@"kMRNowPlayingPlayerUserInfoKey"];
        }
      }
      _MRDecodeObjectForKey(v4, @"kMRActiveNowPlayingPlayerPathUserInfoKey", @"kMRActiveNowPlayingPlayerPathDataUserInfoKey", &__block_literal_global_91);
      _MRDecodeObjectForKey(v4, @"kMROriginActiveNowPlayingPlayerPathUserInfoKey", @"kMROriginActiveNowPlayingPlayerPathDataUserInfoKey", &__block_literal_global_93);
      _MRDecodeObjectForKey(v4, @"kMRNowPlayingClientUserInfoKey", @"kMRNowPlayingClientDataUserInfoKey", &__block_literal_global_95);
      _MRDecodeObjectForKey(v4, @"kMRNowPlayingPlayerUserInfoKey", @"kMRNowPlayingPlayerDataUserInfoKey", &__block_literal_global_97);
      CFDataRef v13 = [v4 objectForKey:@"_kMRMediaRemotePlaybackErrorDataUserInfoKey"];
      CFDataRef v14 = v13;
      if (v13)
      {
        CFDataRef ErrorFromExternalRepresentation = MRMediaRemoteCreateErrorFromExternalRepresentation(v13);
        if (ErrorFromExternalRepresentation)
        {
          [v4 setObject:ErrorFromExternalRepresentation forKey:@"kMRMediaRemotePlaybackErrorUserInfoKey"];
        }
        else
        {
          int v16 = _MRLogForCategory(0);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
            MRCreateDecodedUserInfo_cold_3(v16, v17, v18, v19, v20, v21, v22, v23);
          }
        }
      }
      [v4 removeObjectForKey:@"_kMRMediaRemotePlaybackErrorDataUserInfoKey"];

      uint64_t v24 = [v4 objectForKey:@"kMRApplicationActivityUserInfoDataKey"];
      char v25 = (void *)v24;
      if (v24)
      {
        char v26 = (void *)_MRApplicationActivityCreateWithExternalRepresentation(v24);
        if (v26)
        {
          [v4 setObject:v26 forKey:@"kMRApplicationActivityUserInfoKey"];
        }
        else
        {
          unsigned int v27 = _MRLogForCategory(0);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
            MRCreateDecodedUserInfo_cold_2(v27, v28, v29, v30, v31, v32, v33, v34);
          }
        }
      }
      [v4 removeObjectForKey:@"kMRApplicationActivityUserInfoDataKey"];

      _MRDecodeObjectForKey(v4, @"kMRPairedDeviceUserInfoKey", @"kMRPairedDeviceUserInfoDataKey", &__block_literal_global_100_0);
      _MRDecodeObjectForKey(v4, @"kMRPreviousPairedDeviceUserInfoKey", @"kMRPreviousPairedDeviceUserInfoDataKey", &__block_literal_global_103);
      _MRDecodeObjectForKey(v4, @"kMRMediaRemoteOriginUserInfoKey", @"kMRMediaRemoteOriginDataUserInfoKey", &__block_literal_global_106);
      unint64_t v35 = [v4 objectForKey:@"kMRMediaRemoteUpdatedContentItemsDataUserInfoKey"];
      char v36 = v35;
      if (v35)
      {
        char v37 = MRContentItemsCreateFromExternalRepresentation(v35);
        if (v37)
        {
          [v4 setObject:v37 forKey:@"kMRMediaRemoteUpdatedContentItemsUserInfoKey"];
        }
        else
        {
          uint64_t v38 = _MRLogForCategory(0);
          if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
            MRCreateDecodedUserInfo_cold_1(v38, v39, v40, v41, v42, v43, v44, v45);
          }
        }
      }
      [v4 removeObjectForKey:@"kMRMediaRemoteUpdatedContentItemsDataUserInfoKey"];

      _MRDecodeObjectForKey(v4, @"kMRPlaybackSessionRequestUserInfoKey", @"kMRPlaybackSessionRequestDataUserInfoKey", &__block_literal_global_110);
      _MRDecodeObjectForKey(v4, @"kMRPlaybackSessionUserInfoKey", @"kMRPlaybackSessionDataUserInfoKey", &__block_literal_global_114_1);
      _MRDecodeObjectForKey(v4, @"kMRPlaybackQueueRequestUserInfoKey", @"kMRPlaybackQueueRequestDataUserInfoKey", &__block_literal_global_117);
      _MRDecodeObjectForKey(v4, @"kMRPlaybackQueueUserInfoKey", @"kMRPlaybackQueueDataUserInfoKey", &__block_literal_global_120);
      _MRDecodeObjectForKey(v4, @"kMRSupportedCommandsUserInfoKey", @"kMRSupportedCommandsDataUserInfoKey", &__block_literal_global_123);
      _MRDecodeObjectForKey(v4, @"MRAVEndpointOutputDeviceUserInfoKey", @"MRAVEndpointOutputDeviceDataUserInfoKey", &__block_literal_global_125);
      v46 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
      _MRUnarchiveObjectForKey(v4, v46, @"MRActiveGroupSessionInfoUserInfoKey", @"_MRGroupSessionInfoDataUserInfoKey");

      v47 = (void *)MEMORY[0x1E4F1CAD0];
      uint64_t v48 = objc_opt_class();
      uint64_t v49 = objc_opt_class();
      v50 = objc_msgSend(v47, "setWithObjects:", v48, v49, objc_opt_class(), 0);
      _MRUnarchiveObjectForKey(v4, v50, @"MRGroupSessionEligibilityStatusUserInfoKey", @"_MRGroupSessionEligibilityStatusDataUserInfoKey");

      v51 = [v4 objectForKey:@"kMRNowPlayingClientUserInfoKey"];
      if ((int)[v51 processIdentifier] >= 1)
      {
        v52 = objc_msgSend(NSNumber, "numberWithInt:", objc_msgSend(v51, "processIdentifier"));
        [v4 setObject:v52 forKey:@"kMRMediaRemoteNowPlayingApplicationPIDUserInfoKey"];
      }
      v53 = [v4 objectForKey:@"kMRMediaRemotePlaybackStateUserInfoKey"];
      v54 = v53;
      if (v53)
      {
        int v55 = [v53 intValue];
        v56 = [NSNumber numberWithBool:MRMediaRemotePlaybackStateIsAdvancing(v55)];
        [v4 setObject:v56 forKey:@"kMRMediaRemoteNowPlayingApplicationIsPlayingUserInfoKey"];
      }
    }
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void _MRDecodeObjectForKey(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a1;
  char v8 = a4;
  unsigned int v9 = [v7 objectForKey:a3];
  if (v9)
  {
    unint64_t v10 = v8[2](v8, v9);
    if (v10)
    {
      [v7 setObject:v10 forKey:a2];
    }
    else
    {
      uint64_t v11 = _MRLogForCategory(0);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        _MRDecodeObjectForKey_cold_1();
      }
    }
  }
  [v7 removeObjectForKey:a3];
}

void _MRUnarchiveObjectForKey(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = ___MRUnarchiveObjectForKey_block_invoke;
  v9[3] = &unk_1E57D4708;
  id v10 = v7;
  id v8 = v7;
  _MRDecodeObjectForKey(a1, a3, a4, v9);
}

uint64_t __MRNotificationServiceClientPostNotificationCallback_block_invoke(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) notificationClient];
  [v2 postNotification:*(void *)(a1 + 40) userInfo:*(void *)(a1 + 48) object:0];

  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_194F45580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _MRLogForCategory(unint64_t a1)
{
  if (a1 >= 0xF) {
    _MRLogForCategory_cold_1();
  }
  if (_MRLogForCategory_onceToken != -1) {
    dispatch_once(&_MRLogForCategory_onceToken, &__block_literal_global_19);
  }
  v2 = (void *)_MRLogForCategory___logs[a1];

  return v2;
}

uint64_t MRProcessIsMediaRemoteDaemon()
{
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  return MRProcessIsMediaRemoteDaemon_isDaemon;
}

void MRNotificationServiceClientPostNotificationCallback(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a4;
  id v9 = a3;
  id v10 = MRCreateDecodedUserInfo(a2);
  uint64_t v11 = v10;
  if (v10)
  {
    unint64_t v12 = [v10 objectForKey:@"kMRActiveNowPlayingPlayerPathUserInfoKey"];
    if (v12) {
      [v9 setActivePlayerPath:v12];
    }
  }
  CFDataRef v13 = [v9 notificationClient];
  CFDataRef v14 = [v13 notificationQueue];
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 3221225472;
  v20[2] = __MRNotificationServiceClientPostNotificationCallback_block_invoke;
  v20[3] = &unk_1E57D5688;
  id v21 = v9;
  id v22 = v7;
  id v23 = v11;
  id v24 = v8;
  id v15 = v8;
  id v16 = v11;
  id v17 = v7;
  id v18 = v9;
  uint64_t v19 = MRCreateDonatedQosBlock(v20);
  dispatch_async(v14, v19);
}

id MRCreateDonatedQosBlock(void *a1)
{
  id v1 = a1;
  qos_class_t v2 = qos_class_self();
  dispatch_block_t v3 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS|DISPATCH_BLOCK_ASSIGN_CURRENT, v2, 0, v1);

  return v3;
}

MRPlayerPath *__MRCreateDecodedUserInfo_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = a2;
  dispatch_block_t v3 = [[MRPlayerPath alloc] initWithData:v2];

  return v3;
}

MRPlayerPath *__MRCreateDecodedUserInfo_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  dispatch_block_t v3 = [[MRPlayerPath alloc] initWithData:v2];

  return v3;
}

MRPlayerPath *__MRCreateDecodedUserInfo_block_invoke_3(uint64_t a1, void *a2)
{
  id v2 = a2;
  dispatch_block_t v3 = [[MRPlayerPath alloc] initWithData:v2];

  return v3;
}

BOOL MRMediaRemotePlaybackStateIsAdvancing(int a1)
{
  return (a1 & 0xFFFFFFFB) == 1;
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_6(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_5(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_4(uint64_t a1, void *a2)
{
  return [a2 data];
}

void sub_194F468B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *MRContentItemsCreateExternalRepresentation(void *result)
{
  if (result)
  {
    MRCreateDataFromArray(result, &__block_literal_global_41_0);
    return objc_claimAutoreleasedReturnValue();
  }
  return result;
}

void *MRContentItemsCreateFromExternalRepresentation(void *result)
{
  if (result)
  {
    MRCreateArrayFromData(result, &__block_literal_global_94);
    return objc_claimAutoreleasedReturnValue();
  }
  return result;
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_10(uint64_t a1, uint64_t a2)
{
  return [MEMORY[0x1E4F28DB0] archivedDataWithRootObject:a2 requiringSecureCoding:1 error:0];
}

void sub_194F49258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id MRCreateFromData(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    v5 = (void *)MEMORY[0x199718E70]();
    uint64_t v6 = MSVUnarchivedObjectOfClasses();
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_194F4A154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id MRCreateDataFromObject(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = (void *)MEMORY[0x199718E70]();
    id v3 = MSVArchivedDataWithRootObject();
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

void __Block_byref_object_dispose__12(uint64_t a1)
{
}

void __Block_byref_object_dispose__13(uint64_t a1)
{
}

void __Block_byref_object_dispose__14(uint64_t a1)
{
}

void __Block_byref_object_dispose__15(uint64_t a1)
{
}

void __Block_byref_object_dispose__16(uint64_t a1)
{
}

void __Block_byref_object_dispose__17(uint64_t a1)
{
}

void __Block_byref_object_dispose__18(uint64_t a1)
{
}

{
}

void __Block_byref_object_dispose__19(uint64_t a1)
{
}

void __Block_byref_object_dispose__20(uint64_t a1)
{
}

void __Block_byref_object_dispose__21(uint64_t a1)
{
}

void __Block_byref_object_dispose__22(uint64_t a1)
{
}

{
}

void __Block_byref_object_dispose__23(uint64_t a1)
{
}

void __Block_byref_object_dispose__24(uint64_t a1)
{
}

void __Block_byref_object_dispose__25(uint64_t a1)
{
}

void __Block_byref_object_dispose__26(uint64_t a1)
{
}

void __Block_byref_object_dispose__27(uint64_t a1)
{
}

void __Block_byref_object_dispose__28(uint64_t a1)
{
}

void __Block_byref_object_dispose__29(uint64_t a1)
{
}

void __Block_byref_object_dispose__30(uint64_t a1)
{
}

void __Block_byref_object_dispose__31(uint64_t a1)
{
}

void __Block_byref_object_dispose__32(uint64_t a1)
{
}

void __Block_byref_object_dispose__33(uint64_t a1)
{
}

void __Block_byref_object_dispose__34(uint64_t a1)
{
}

void __Block_byref_object_dispose__35(uint64_t a1)
{
}

void __Block_byref_object_dispose__36(uint64_t a1)
{
}

void __Block_byref_object_dispose__37(uint64_t a1)
{
}

void __Block_byref_object_dispose__38(uint64_t a1)
{
}

void __Block_byref_object_dispose__39(uint64_t a1)
{
}

void __Block_byref_object_dispose__40(uint64_t a1)
{
}

void __Block_byref_object_dispose__41(uint64_t a1)
{
}

void __Block_byref_object_dispose__42(uint64_t a1)
{
}

void __Block_byref_object_dispose__43(uint64_t a1)
{
}

void __Block_byref_object_dispose__44(uint64_t a1)
{
}

void __Block_byref_object_dispose__45(uint64_t a1)
{
}

void __Block_byref_object_dispose__46(uint64_t a1)
{
}

void __Block_byref_object_dispose__47(uint64_t a1)
{
}

void __Block_byref_object_dispose__48(uint64_t a1)
{
}

void __Block_byref_object_dispose__49(uint64_t a1)
{
}

void __Block_byref_object_dispose__50(uint64_t a1)
{
}

void __Block_byref_object_dispose__51(uint64_t a1)
{
}

void __Block_byref_object_dispose__52(uint64_t a1)
{
}

id MREncodeObjectWithEncoding(void *a1, uint64_t a2)
{
  id v4 = a1;
  if (v4)
  {
    if (a2 == 1)
    {
      uint64_t v5 = [MEMORY[0x1E4F28D90] dataWithJSONObject:v4 options:0 error:0];
    }
    else
    {
      if (a2) {
        goto LABEL_8;
      }
      uint64_t v5 = MSVArchivedDataWithRootObject();
    }
    id v2 = (void *)v5;
  }
  else
  {
    id v2 = 0;
  }
LABEL_8:

  return v2;
}

uint64_t MRContentItemGetITunesStoreSubscriptionIdentifier(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 iTunesStoreSubscriptionIdentifier];

  return v2;
}

uint64_t MRContentItemGetITunesStoreIdentifier(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 iTunesStoreIdentifier];

  return v2;
}

uint64_t MRContentItemCopyDeviceSpecificUserInfo(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 deviceSpecificUserInfo];
  uint64_t v3 = [v2 copy];

  return v3;
}

uint64_t MRContentItemCopyUserInfo(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 userInfo];
  uint64_t v3 = [v2 copy];

  return v3;
}

uint64_t MRContentItemGetReportingAdamID(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 reportingAdamID];

  return v2;
}

uint64_t MRContentItemGetLyricsAdamID(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 lyricsAdamID];

  return v2;
}

CFStringRef MRMediaRemoteCopyLocalDeviceSystemPodcastApplicationDisplayID()
{
  v0 = +[MRUserSettings currentSettings];
  if ([v0 sonicPodcastsEnabled]) {
    CFStringRef v1 = @"com.apple.sonic.podcasts";
  }
  else {
    CFStringRef v1 = @"com.apple.podcasts";
  }

  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];

  return CFStringCreateCopy(v2, v1);
}

CFStringRef MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID()
{
  v0 = +[MRUserSettings currentSettings];
  if ([v0 sonicMusicEnabled]) {
    CFStringRef v1 = @"com.apple.sonic.music";
  }
  else {
    CFStringRef v1 = @"com.apple.Music";
  }

  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];

  return CFStringCreateCopy(v2, v1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__7(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__21(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__22(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1997190F0](*(void *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

uint64_t __Block_byref_object_copy__23(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__24(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__25(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__26(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__27(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__28(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__29(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__30(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__31(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__32(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1997190F0](*(void *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

uint64_t __Block_byref_object_copy__33(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__34(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__35(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__36(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__37(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__39(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__40(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__41(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1997190F0](*(void *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

uint64_t __Block_byref_object_copy__42(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__43(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1997190F0](*(void *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

uint64_t __Block_byref_object_copy__44(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__45(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__46(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__47(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__49(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__50(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__51(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__52(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __MRCreateEncodedUserInfo_block_invoke_11(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (([v6 conformsToProtocol:&unk_1EE670C88] & 1) == 0
    && !CFPropertyListIsValid(v6, kCFPropertyListBinaryFormat_v1_0))
  {
    id v7 = _MRLogForCategory(0);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
      __MRCreateEncodedUserInfo_block_invoke_11_cold_1();
    }

    [*(id *)(a1 + 32) removeObjectForKey:v5];
  }
}

uint64_t __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_84(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

uint64_t __MRMediaRemoteNowPlayingResolvePlayerPath_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t MRContentItemGetLyrics()
{
  return 0;
}

uint64_t MRContentItemGetMediaType(void *a1)
{
  CFStringRef v1 = [a1 metadata];
  uint64_t v2 = [v1 mediaType];

  return v2;
}

uint64_t MRContentItemGetMediaSubType(void *a1)
{
  CFStringRef v1 = [a1 metadata];
  uint64_t v2 = [v1 mediaSubType];

  return v2;
}

void MRContentItemMerge(void *a1, void *a2)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  if (a2)
  {
    if (a1 == a2)
    {
      uint64_t v3 = _MRLogForCategory(0);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
        MRContentItemMerge_cold_1((uint64_t)a2, v3);
      }
    }
    else
    {
      uint64_t v3 = a1;
      id v4 = (void *)[a2 copy];
      id v5 = [v3 identifier];
      id v6 = [v4 identifier];
      char v7 = [v5 isEqualToString:v6];

      if ((v7 & 1) == 0)
      {
        uint64_t v32 = [MEMORY[0x1E4F28B00] currentHandler];
        uint64_t v33 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemMerge(MRContentItemRef, MRContentItemRef)");
        [v32 handleFailureInFunction:v33, @"MRContentItem_Deprecated.m", 1542, @"Trying to Merge incompatible ContentItems %@ != %@", v3, a2 file lineNumber description];
      }
      id v8 = [v4 sections];

      if (v8)
      {
        id v9 = objc_alloc(MEMORY[0x1E4F1CA48]);
        id v10 = [v4 sections];
        uint64_t v11 = objc_msgSend(v9, "initWithCapacity:", objc_msgSend(v10, "count"));

        id v12 = objc_alloc(MEMORY[0x1E4F1CA60]);
        CFDataRef v13 = [v3 sections];
        CFDataRef v14 = objc_msgSend(v12, "initWithCapacity:", objc_msgSend(v13, "count"));

        long long v40 = 0u;
        long long v41 = 0u;
        long long v38 = 0u;
        long long v39 = 0u;
        id v15 = [v3 sections];
        uint64_t v16 = [v15 countByEnumeratingWithState:&v38 objects:v43 count:16];
        if (v16)
        {
          uint64_t v17 = v16;
          uint64_t v18 = *(void *)v39;
          do
          {
            for (uint64_t i = 0; i != v17; ++i)
            {
              if (*(void *)v39 != v18) {
                objc_enumerationMutation(v15);
              }
              [v14 setObject:*(void *)(*((void *)&v38 + 1) + 8 * i) forKeyedSubscript:MRContentItemGetIdentifier(*(void **)(*((void *)&v38 + 1) + 8 * i))];
            }
            uint64_t v17 = [v15 countByEnumeratingWithState:&v38 objects:v43 count:16];
          }
          while (v17);
        }

        long long v36 = 0u;
        long long v37 = 0u;
        long long v34 = 0u;
        long long v35 = 0u;
        uint64_t v20 = [v4 sections];
        uint64_t v21 = [v20 countByEnumeratingWithState:&v34 objects:v42 count:16];
        if (v21)
        {
          uint64_t v22 = v21;
          uint64_t v23 = *(void *)v35;
          do
          {
            for (uint64_t j = 0; j != v22; ++j)
            {
              if (*(void *)v35 != v23) {
                objc_enumerationMutation(v20);
              }
              char v25 = *(void **)(*((void *)&v34 + 1) + 8 * j);
              uint64_t v26 = [v14 objectForKeyedSubscript:MRContentItemGetIdentifier(v25)];
              unsigned int v27 = (void *)v26;
              if (v26)
              {
                MRContentItemMerge(v26, v25);
                uint64_t v28 = v11;
                uint64_t v29 = v27;
              }
              else
              {
                uint64_t v28 = v11;
                uint64_t v29 = v25;
              }
              [v28 addObject:v29];
            }
            uint64_t v22 = [v20 countByEnumeratingWithState:&v34 objects:v42 count:16];
          }
          while (v22);
        }

        [v3 setSections:0];
        [v4 setSections:v11];
      }
      uint64_t v30 = [v4 currentLanguageOptions];

      if (v30) {
        [v3 setCurrentLanguageOptions:0];
      }
      uint64_t v31 = [v4 availableLanguageOptions];

      if (v31) {
        [v3 setAvailableLanguageOptions:0];
      }
      [v3 mergeFrom:v4];
    }
  }
}

CFTypeRef MRContentItemGetIdentifier(void *a1)
{
  CFTypeRef result = [a1 identifier];
  if (result)
  {
    return CFAutorelease(result);
  }
  return result;
}

void sub_194F560B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *MRContentItemCopyMinimalReadableDescription(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  id v3 = a1;
  id v4 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"item:<%@", MRContentItemGetIdentifier(v3)];
  id v5 = [v3 metadata];
  id v6 = [v5 title];

  if (v6)
  {
    char v7 = (void *)[[NSString alloc] initWithFormat:@"/%@", MRContentItemGetTitle(v3)];
    [v4 appendString:v7];
  }
  double CalculatedPlaybackPosition = MRContentItemGetCalculatedPlaybackPosition(v3);
  if (CalculatedPlaybackPosition != 0.0)
  {
    id v9 = objc_msgSend([NSString alloc], "initWithFormat:", @"/CalculatedPlaybackPosition: %lf", *(void *)&CalculatedPlaybackPosition);
    [v4 appendString:v9];
  }
  id v10 = [v3 metadata];
  int v11 = [v10 hasPlaybackRate];

  if (v11)
  {
    id v12 = [NSString alloc];
    CFDataRef v13 = [v3 metadata];
    [v13 playbackRate];
    id v15 = objc_msgSend(v12, "initWithFormat:", @"/PlaybackRate: %lf", v14);

    [v4 appendString:v15];
  }
  uint64_t v16 = [v3 currentLanguageOptions];
  if (v16)
  {
  }
  else
  {
    uint64_t v17 = [v3 availableLanguageOptions];

    if (!v17) {
      goto LABEL_11;
    }
  }
  [v4 appendString:@"/L"];
LABEL_11:
  uint64_t v18 = [v3 artwork];
  uint64_t v19 = [v18 imageData];

  if (v19)
  {
    id v20 = [NSString alloc];
    uint64_t v21 = [v3 artwork];
    uint64_t v22 = [v21 imageData];
    StringRepresentation = (void *)MRDataCreateStringRepresentation(v22);
    id v24 = (void *)[v20 initWithFormat:@"/ArtworkData: %@", StringRepresentation];

    [v4 appendString:v24];
  }
  [v4 appendString:@">"];

  return v4;
}

CFTypeRef MRContentItemGetTitle(void *a1)
{
  CFStringRef v1 = [a1 metadata];
  uint64_t v2 = [v1 title];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

double MRContentItemGetCalculatedPlaybackPosition(void *a1)
{
  uint64_t v2 = [MEMORY[0x1E4F1C9C8] date];
  double CalculatedPlaybackPosition = _MRContentItemGetCalculatedPlaybackPosition(a1, v2);

  return CalculatedPlaybackPosition;
}

double _MRContentItemGetCalculatedPlaybackPosition(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = [a1 metadata];
  double CalculatedPlaybackPosition = _MRContentItemMetadataGetCalculatedPlaybackPosition(v4, v3);

  return CalculatedPlaybackPosition;
}

double _MRContentItemMetadataGetCalculatedPlaybackPosition(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  double v5 = 0.0;
  if ([v3 hasElapsedTime]
    && (([v3 hasInferredTimestamp] & 1) != 0 || objc_msgSend(v3, "hasElapsedTimeTimestamp")))
  {
    if ([v3 hasElapsedTimeTimestamp]) {
      [v3 elapsedTimeTimestamp];
    }
    else {
      [v3 inferredTimestamp];
    }
    double v7 = v6;
    double v8 = 1.0;
    if ([v3 hasPlaybackRate])
    {
      [v3 playbackRate];
      double v8 = v9;
    }
    [v4 timeIntervalSinceReferenceDate];
    double v11 = v10 - v7;
    [v3 elapsedTime];
    double v5 = v12 + v11 * v8;
  }

  return v5;
}

uint64_t MRPlaybackQueueRequestSetIncludeMetadata(void *a1, const char *a2)
{
  return [a1 setIncludeMetadata:a2];
}

void __MRMediaRemoteServiceStart_block_invoke_2(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  uint64_t uint64 = xpc_dictionary_get_uint64(*(xpc_object_t *)(a1 + 32), "MRXPC_MESSAGE_ID_KEY");
  switch(HIBYTE(uint64))
  {
    case 5u:
      id v3 = *(void **)(a1 + 40);
      id v4 = *(id *)(a1 + 32);
      double v5 = v3;
      uint64_t v6 = v5[2];
      uint64_t v7 = xpc_dictionary_get_uint64(v4, "MRXPC_MESSAGE_ID_KEY");
      if (v6)
      {
        double v8 = [v5 browsableContentQueue];
        *(void *)&long long buf = MEMORY[0x1E4F143A8];
        *((void *)&buf + 1) = 3221225472;
        long long v35 = ___MRServiceHandleBrowsableContentMessage_block_invoke;
        long long v36 = &unk_1E57D27B0;
        long long v38 = (void *)v7;
        uint64_t v39 = v6;
        long long v37 = v4;
        long long v40 = v5;
        goto LABEL_17;
      }
      uint64_t v26 = _MRLogForCategory(0);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v27 = v7 - 0x500000000000001;
        if (v7 - 0x500000000000001 < 0xA && ((0x23Fu >> v27) & 1) != 0) {
          uint64_t v28 = off_1E57D2820[v27];
        }
        else {
          uint64_t v28 = (__CFString *)objc_msgSend([NSString alloc], "initWithFormat:", @"%ld", v7);
        }
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v28;
        _os_log_impl(&dword_194F3C000, v26, OS_LOG_TYPE_DEFAULT, "No browsableContent endpoint registered to handle API: %@", (uint8_t *)&buf, 0xCu);
      }
      uint64_t v32 = v4;
      uint64_t v33 = 11;
      goto LABEL_41;
    case 6u:
      double v10 = *(void **)(a1 + 40);
      id v4 = *(id *)(a1 + 32);
      double v11 = v10;
      double v5 = v11;
      double v12 = (void *)v11[4];
      if (v12)
      {
        double v8 = [v11 televisionQueue];
        *(void *)&long long buf = MEMORY[0x1E4F143A8];
        *((void *)&buf + 1) = 3221225472;
        CFDataRef v13 = ___MRSerivceHandleTelevisionMessage_block_invoke;
        goto LABEL_14;
      }
      uint64_t v29 = _MRLogForCategory(0);
      if (!os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_37;
      }
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v4;
      uint64_t v30 = "No television endpoint registered to receive message: %@";
      goto LABEL_36;
    case 7u:
      float v14 = *(void **)(a1 + 40);
      id v4 = *(id *)(a1 + 32);
      id v15 = v14;
      double v5 = v15;
      double v12 = (void *)v15[1];
      if (v12)
      {
        double v8 = [v15 clientCallbackQueue];
        *(void *)&long long buf = MEMORY[0x1E4F143A8];
        *((void *)&buf + 1) = 3221225472;
        CFDataRef v13 = (void (*)(uint64_t))___MRServiceHandleClientMessage_block_invoke;
        goto LABEL_14;
      }
      double v8 = _MRLogForCategory(0);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_19;
      }
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v4;
      goto LABEL_30;
    case 8u:
      uint64_t v16 = *(void **)(a1 + 40);
      id v4 = *(id *)(a1 + 32);
      uint64_t v17 = v16;
      double v5 = v17;
      uint64_t v18 = (void *)v17[1];
      if (v18)
      {
        double v8 = [v17 clientCallbackPriorityQueue];
        qos_class_t v19 = qos_class_self();
        *(void *)&long long buf = MEMORY[0x1E4F143A8];
        *((void *)&buf + 1) = 3221225472;
        long long v35 = ___MRServiceHandleClientPriorityMessage_block_invoke;
        long long v36 = &unk_1E57D2098;
        long long v37 = v4;
        long long v38 = v18;
        dispatch_block_t v20 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS|DISPATCH_BLOCK_ASSIGN_CURRENT, v19, 0, &buf);
        dispatch_async(v8, v20);

        goto LABEL_18;
      }
      double v8 = _MRLogForCategory(0);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v4;
LABEL_30:
        _os_log_impl(&dword_194F3C000, v8, OS_LOG_TYPE_DEFAULT, "No client module registered to receive message: %@", (uint8_t *)&buf, 0xCu);
      }
      goto LABEL_19;
    case 9u:
      uint64_t v21 = *(void **)(a1 + 40);
      id v4 = *(id *)(a1 + 32);
      uint64_t v22 = v21;
      double v5 = v22;
      double v12 = (void *)v22[3];
      if (!v12)
      {
        uint64_t v31 = _MRLogForCategory(0);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 138412290;
          *(void *)((char *)&buf + 4) = v4;
          _os_log_impl(&dword_194F3C000, v31, OS_LOG_TYPE_DEFAULT, "No voice recording endpoint registered to receive message: %@", (uint8_t *)&buf, 0xCu);
        }

        uint64_t v32 = v4;
        uint64_t v33 = 21;
        goto LABEL_41;
      }
      double v8 = [v22 voiceInputQueue];
      *(void *)&long long buf = MEMORY[0x1E4F143A8];
      *((void *)&buf + 1) = 3221225472;
      CFDataRef v13 = ___MRServiceHandleVoiceInputMessage_block_invoke;
LABEL_14:
      long long v35 = v13;
      long long v36 = &unk_1E57D2098;
      long long v37 = v4;
      long long v38 = v12;
      goto LABEL_17;
    case 0xAu:
      uint64_t v23 = *(void **)(a1 + 40);
      id v4 = *(id *)(a1 + 32);
      id v24 = v23;
      double v5 = v24;
      uint64_t v25 = v24[5];
      if (v25)
      {
        double v8 = [v24 agentQueue];
        *(void *)&long long buf = MEMORY[0x1E4F143A8];
        *((void *)&buf + 1) = 3221225472;
        long long v35 = ___MRServiceHandleAgentMessage_block_invoke;
        long long v36 = &unk_1E57D2800;
        long long v37 = v4;
        long long v38 = v5;
        uint64_t v39 = v25;
LABEL_17:
        dispatch_async(v8, &buf);
LABEL_18:

LABEL_19:
      }
      else
      {
        uint64_t v29 = _MRLogForCategory(0);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 138412290;
          *(void *)((char *)&buf + 4) = v4;
          uint64_t v30 = "No agent endpoint registered to receive message: %@";
LABEL_36:
          _os_log_impl(&dword_194F3C000, v29, OS_LOG_TYPE_DEFAULT, v30, (uint8_t *)&buf, 0xCu);
        }
LABEL_37:

        uint64_t v32 = v4;
        uint64_t v33 = 24;
LABEL_41:
        _MRServiceSendReply(v32, v33);
      }

LABEL_43:
      return;
    default:
      uint64_t v9 = uint64;
      id v4 = _MRLogForCategory(0);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf) = 134217984;
        *(void *)((char *)&buf + 4) = v9;
        _os_log_impl(&dword_194F3C000, v4, OS_LOG_TYPE_DEFAULT, "No client-side XPC message destination routed for message with ID %lu.", (uint8_t *)&buf, 0xCu);
      }
      goto LABEL_43;
  }
}

uint64_t MRPlaybackQueueRequestSetIncludeSections(void *a1, const char *a2)
{
  return [a1 setIncludeSections:a2];
}

void _onQueue_MRInvokeClientAssetCallbacks(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  double v12 = a4;
  id v13 = a5;
  float v14 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
    _onQueue_MRInvokeClientCallbacks_cold_1((uint64_t)v10, v11);
  }

  if (v9)
  {
    if (v10) {
      goto LABEL_5;
    }
LABEL_30:
    v54 = [MEMORY[0x1E4F28B00] currentHandler];
    int v55 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRInvokeClientAssetCallbacks(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
    [v54 handleFailureInFunction:v55, @"MRPlaybackQueueServiceClient.m", 115, @"Invalid parameter not satisfying: %@", @"request" file lineNumber description];

    if (v11) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
  v52 = [MEMORY[0x1E4F28B00] currentHandler];
  v53 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRInvokeClientAssetCallbacks(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
  [v52 handleFailureInFunction:v53, @"MRPlaybackQueueServiceClient.m", 114, @"Invalid parameter not satisfying: %@", @"clientState" file lineNumber description];

  if (!v10) {
    goto LABEL_30;
  }
LABEL_5:
  if (v11) {
    goto LABEL_6;
  }
LABEL_31:
  v56 = [MEMORY[0x1E4F28B00] currentHandler];
  v57 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRInvokeClientAssetCallbacks(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
  [v56 handleFailureInFunction:v57, @"MRPlaybackQueueServiceClient.m", 116, @"Invalid parameter not satisfying: %@", @"item" file lineNumber description];

LABEL_6:
  id v15 = dispatch_group_create();
  if ([v10 includeMetadata])
  {
    uint64_t v16 = [v10 skeleton];
    [v16 setIncludeMetadata:1];
    dispatch_group_enter(v15);
    uint64_t v17 = [v9 clientCallbacks];
    uint64_t v18 = [v17 metadataCallbacks];
    qos_class_t v19 = [v18 callbacks];
    v76[0] = MEMORY[0x1E4F143A8];
    v76[1] = 3221225472;
    v76[2] = ___onQueue_MRInvokeClientAssetCallbacks_block_invoke;
    v76[3] = &unk_1E57D27D8;
    v77 = v15;
    _onQueue_MRInvokeClientCallbacks(v9, v19, v16, v11, 1, v12, v76);
  }
  if ([v10 includeLanguageOptions])
  {
    dispatch_block_t v20 = [v10 skeleton];
    [v20 setIncludeLanguageOptions:1];
    dispatch_group_enter(v15);
    uint64_t v21 = [v9 clientCallbacks];
    uint64_t v22 = [v21 languageOptionsCallbacks];
    uint64_t v23 = [v22 callbacks];
    v74[0] = MEMORY[0x1E4F143A8];
    v74[1] = 3221225472;
    v74[2] = ___onQueue_MRInvokeClientAssetCallbacks_block_invoke_2;
    v74[3] = &unk_1E57D27D8;
    v75 = v15;
    _onQueue_MRInvokeClientCallbacks(v9, v23, v20, v11, 0, v12, v74);
  }
  if ([v10 includeInfo])
  {
    id v24 = [v10 skeleton];
    [v24 setIncludeInfo:1];
    dispatch_group_enter(v15);
    uint64_t v25 = [v9 clientCallbacks];
    uint64_t v26 = [v25 infoCallbacks];
    uint64_t v27 = [v26 callbacks];
    v72[0] = MEMORY[0x1E4F143A8];
    v72[1] = 3221225472;
    v72[2] = ___onQueue_MRInvokeClientAssetCallbacks_block_invoke_3;
    v72[3] = &unk_1E57D27D8;
    v73 = v15;
    _onQueue_MRInvokeClientCallbacks(v9, v27, v24, v11, 0, v12, v72);
  }
  if ([v10 includeAlignments])
  {
    uint64_t v28 = [v10 skeleton];
    [v28 setIncludeAlignments:1];
    dispatch_group_enter(v15);
    uint64_t v29 = [v9 clientCallbacks];
    uint64_t v30 = [v29 transcriptAlignmentsCallbacks];
    uint64_t v31 = [v30 callbacks];
    v70[0] = MEMORY[0x1E4F143A8];
    v70[1] = 3221225472;
    v70[2] = ___onQueue_MRInvokeClientAssetCallbacks_block_invoke_4;
    v70[3] = &unk_1E57D27D8;
    v71 = v15;
    _onQueue_MRInvokeClientCallbacks(v9, v31, v28, v11, 0, v12, v70);
  }
  if ([v10 includeLyrics])
  {
    uint64_t v32 = [v10 skeleton];
    [v32 setIncludeLyrics:1];
    dispatch_group_enter(v15);
    uint64_t v33 = [v9 clientCallbacks];
    long long v34 = [v33 lyricsCallbacks];
    long long v35 = [v34 callbacks];
    v68[0] = MEMORY[0x1E4F143A8];
    v68[1] = 3221225472;
    v68[2] = ___onQueue_MRInvokeClientAssetCallbacks_block_invoke_5;
    v68[3] = &unk_1E57D27D8;
    v69 = v15;
    _onQueue_MRInvokeClientCallbacks(v9, v35, v32, v11, 0, v12, v68);
  }
  if ([v10 includeAvailableArtworkFormats])
  {
    long long v36 = [v10 skeleton];
    [v36 setIncludeAvailableArtworkFormats:1];
    dispatch_group_enter(v15);
    long long v37 = [v9 clientCallbacks];
    long long v38 = [v37 availableArtworkFormatsCallbacks];
    uint64_t v39 = [v38 callbacks];
    v66[0] = MEMORY[0x1E4F143A8];
    v66[1] = 3221225472;
    v66[2] = ___onQueue_MRInvokeClientAssetCallbacks_block_invoke_6;
    v66[3] = &unk_1E57D27D8;
    v67 = v15;
    _onQueue_MRInvokeClientCallbacks(v9, v39, v36, v11, 0, v12, v66);
  }
  if (([v10 includeArtwork] & 1) != 0 || objc_msgSend(v10, "includeRemoteArtwork"))
  {
    long long v40 = [v10 skeleton];
    [v10 artworkWidth];
    objc_msgSend(v40, "setArtworkWidth:");
    [v10 artworkHeight];
    objc_msgSend(v40, "setArtworkHeight:");
    uint64_t v41 = [v10 requestedArtworkFormats];
    [v40 setRequestedArtworkFormats:v41];

    uint64_t v42 = [v10 requestedRemoteArtworkFormats];
    [v40 setRequestedRemoteArtworkFormats:v42];

    uint64_t v43 = [v40 requestedArtworkFormats];
    id v59 = v13;
    if ([v43 count])
    {
    }
    else
    {
      uint64_t v44 = [v40 requestedRemoteArtworkFormats];
      uint64_t v45 = [v44 count];

      if (!v45)
      {
        if (![v40 includeArtwork]) {
          goto LABEL_25;
        }
        dispatch_group_enter(v15);
        v58 = [v9 clientCallbacks];
        v46 = [v58 artworkCallbacks];
        v47 = [v46 callbacks];
        v62[0] = MEMORY[0x1E4F143A8];
        v62[1] = 3221225472;
        v62[2] = ___onQueue_MRInvokeClientAssetCallbacks_block_invoke_8;
        v62[3] = &unk_1E57D27D8;
        uint64_t v48 = (id *)&v63;
        uint64_t v49 = v15;
        v63 = v15;
        v50 = v62;
LABEL_24:
        _onQueue_MRInvokeClientCallbacks(v9, v47, v40, v11, 0, v12, v50);

        id v13 = v59;
        id v15 = v49;
LABEL_25:

        goto LABEL_26;
      }
    }
    dispatch_group_enter(v15);
    v58 = [v9 clientCallbacks];
    v46 = [v58 formattedArtworkCallbacks];
    v47 = [v46 callbacks];
    v64[0] = MEMORY[0x1E4F143A8];
    v64[1] = 3221225472;
    v64[2] = ___onQueue_MRInvokeClientAssetCallbacks_block_invoke_7;
    v64[3] = &unk_1E57D27D8;
    uint64_t v48 = (id *)&v65;
    uint64_t v49 = v15;
    v65 = v15;
    v50 = v64;
    goto LABEL_24;
  }
LABEL_26:
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___onQueue_MRInvokeClientAssetCallbacks_block_invoke_9;
  block[3] = &unk_1E57D0FC0;
  id v61 = v13;
  id v51 = v13;
  dispatch_group_notify(v15, v12, block);
}

void _onQueue_MRInvokeClientCallbacks(void *a1, void *a2, void *a3, void *a4, char a5, void *a6, void *a7)
{
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = a4;
  id v17 = a6;
  id v18 = a7;
  if (v13)
  {
    if (v15) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v26 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v27 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRInvokeClientCallbacks(MRNowPlayingPlayerClient *__strong, NSArray<MSVCallback *> *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, _Bool, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
    [v26 handleFailureInFunction:v27, @"MRPlaybackQueueServiceClient.m", 73, @"Invalid parameter not satisfying: %@", @"clientState" file lineNumber description];

    if (v15)
    {
LABEL_3:
      if (v16) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  uint64_t v28 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v29 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRInvokeClientCallbacks(MRNowPlayingPlayerClient *__strong, NSArray<MSVCallback *> *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, _Bool, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
  [v28 handleFailureInFunction:v29, @"MRPlaybackQueueServiceClient.m", 74, @"Invalid parameter not satisfying: %@", @"request" file lineNumber description];

  if (v16)
  {
LABEL_4:
    if (v17) {
      goto LABEL_5;
    }
LABEL_15:
    uint64_t v32 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v33 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRInvokeClientCallbacks(MRNowPlayingPlayerClient *__strong, NSArray<MSVCallback *> *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, _Bool, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
    [v32 handleFailureInFunction:v33, @"MRPlaybackQueueServiceClient.m", 76, @"Invalid parameter not satisfying: %@", @"queue" file lineNumber description];

    if (v18) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_14:
  uint64_t v30 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v31 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRInvokeClientCallbacks(MRNowPlayingPlayerClient *__strong, NSArray<MSVCallback *> *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, _Bool, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
  [v30 handleFailureInFunction:v31, @"MRPlaybackQueueServiceClient.m", 75, @"Invalid parameter not satisfying: %@", @"item" file lineNumber description];

  if (!v17) {
    goto LABEL_15;
  }
LABEL_5:
  if (v18) {
    goto LABEL_6;
  }
LABEL_16:
  long long v34 = [MEMORY[0x1E4F28B00] currentHandler];
  long long v35 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRInvokeClientCallbacks(MRNowPlayingPlayerClient *__strong, NSArray<MSVCallback *> *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, _Bool, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
  [v34 handleFailureInFunction:v35, @"MRPlaybackQueueServiceClient.m", 77, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

LABEL_6:
  qos_class_t v19 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG)) {
    _onQueue_MRInvokeClientCallbacks_cold_1((uint64_t)v15, v16);
  }

  dispatch_block_t v20 = [v14 firstObject];
  if (v20)
  {
    SkeletonFrom = (void *)MRContentItemCreateSkeletonFrom(v16);
    uint64_t v22 = (void *)[v15 copy];
    [v20 queue];
    v23 = char v36 = a5;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = ___onQueue_MRInvokeClientCallbacks_block_invoke;
    block[3] = &unk_1E57D9B20;
    id v38 = v13;
    id v39 = v20;
    id v40 = v22;
    id v41 = SkeletonFrom;
    id v42 = v17;
    id v43 = v16;
    id v44 = v14;
    char v47 = v36;
    id v45 = v15;
    id v46 = v18;
    id v24 = SkeletonFrom;
    id Error = v22;
    dispatch_sync(v23, block);
  }
  else
  {
    id Error = (id)MRMediaRemoteCreateError(14);
    (*((void (**)(id, id))v18 + 2))(v18, Error);
  }
}

void *MRContentItemCreateFromRequest(void *a1, void *a2)
{
  uint64_t v88 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (!v3)
  {
    double v5 = 0;
    goto LABEL_66;
  }
  double v5 = (void *)MRContentItemCopy(v3);
  if (v4)
  {
    if ((MRPlaybackQueueRequestGetIncludeMetadata(v4) & 1) == 0) {
      [v5 setMetadata:0];
    }
    if ((MRPlaybackQueueRequestGetIncludeLanguageOptions(v4) & 1) == 0)
    {
      [v5 setCurrentLanguageOptions:0];
      [v5 setAvailableLanguageOptions:0];
    }
    if ((MRPlaybackQueueRequestGetIncludeInfo(v4) & 1) == 0) {
      [v5 setInfo:0];
    }
    if (MRPlaybackQueueRequestGetIncludeSections(v4))
    {
      uint64_t v6 = [v5 sections];

      if (v6)
      {
        uint64_t v7 = [v3 sections];
        double v8 = (void *)MRContentItemsCreateFromRequest(v7, v4);

        id v9 = (void *)[v8 mutableCopy];
        [v5 setSections:v9];
      }
    }
    else
    {
      [v5 setSections:0];
    }
    if (([v4 includeAvailableArtworkFormats] & 1) == 0) {
      [v5 setAvailableArtworkFormats:0];
    }
    v75 = v5;
    if ([v4 includeRemoteArtwork])
    {
      if ([v4 includeRemoteArtwork])
      {
        id v10 = [MEMORY[0x1E4F1CA60] dictionary];
        long long v82 = 0u;
        long long v83 = 0u;
        long long v84 = 0u;
        long long v85 = 0u;
        id v11 = v4;
        double v12 = [v4 requestedRemoteArtworkFormats];
        uint64_t v13 = [v12 countByEnumeratingWithState:&v82 objects:v87 count:16];
        if (v13)
        {
          uint64_t v14 = v13;
          uint64_t v15 = *(void *)v83;
          do
          {
            for (uint64_t i = 0; i != v14; ++i)
            {
              if (*(void *)v83 != v15) {
                objc_enumerationMutation(v12);
              }
              uint64_t v17 = *(void *)(*((void *)&v82 + 1) + 8 * i);
              id v18 = [v3 remoteArtworks];
              qos_class_t v19 = [v18 objectForKeyedSubscript:v17];
              [v10 setObject:v19 forKeyedSubscript:v17];
            }
            uint64_t v14 = [v12 countByEnumeratingWithState:&v82 objects:v87 count:16];
          }
          while (v14);
        }

        dispatch_block_t v20 = (void *)[v10 copy];
        double v5 = v75;
        [v75 setRemoteArtworks:v20];

        id v4 = v11;
      }
    }
    else
    {
      [v5 setRemoteArtworks:0];
    }
    if (!MRPlaybackQueueRequestGetIncludeArtwork(v4))
    {
      [v5 setArtwork:0];
      [v5 setArtworks:0];
      goto LABEL_66;
    }
    if (MRPlaybackQueueRequestGetIncludeArtwork(v4))
    {
      uint64_t v21 = [v4 requestedArtworkFormats];
      uint64_t v22 = [v21 count];

      if (v22)
      {
        [v4 artworkWidth];
        double v24 = v23;
        [v4 artworkHeight];
        double v26 = v25;
        uint64_t v27 = [MEMORY[0x1E4F1CA60] dictionary];
        long long v78 = 0u;
        long long v79 = 0u;
        long long v80 = 0u;
        long long v81 = 0u;
        id v74 = v4;
        obuint64_t j = [v4 requestedArtworkFormats];
        uint64_t v28 = [obj countByEnumeratingWithState:&v78 objects:v86 count:16];
        if (v28)
        {
          uint64_t v29 = v28;
          uint64_t v30 = *(void *)v79;
          BOOL v31 = v24 == -1.0;
          if (v26 != -1.0) {
            BOOL v31 = 0;
          }
          BOOL v76 = v31;
          do
          {
            for (uint64_t j = 0; j != v29; ++j)
            {
              if (*(void *)v79 != v30) {
                objc_enumerationMutation(obj);
              }
              uint64_t v33 = *(void **)(*((void *)&v78 + 1) + 8 * j);
              long long v34 = [v5 artworks];
              long long v35 = [v34 objectForKeyedSubscript:v33];

              if (v35) {
                goto LABEL_38;
              }
              if ([v33 isEqualToString:@"MRContentItemArtworkFormatStandard"])
              {
                id v43 = [v3 artwork];

                if (v43)
                {
                  id v44 = [MRDataArtwork alloc];
                  id v45 = [v3 artwork];
                  id v46 = [v45 imageData];
                  long long v35 = [(MRDataArtwork *)v44 initWithImageData:v46];

                  double v5 = v75;
                  if (v35)
                  {
LABEL_38:
                    [(MRDataArtwork *)v35 dimensions];
                    double v37 = v36;
                    [(MRDataArtwork *)v35 dimensions];
                    if (v24 + 0.5 >= v37 && v26 + 0.5 >= v38) {
                      goto LABEL_60;
                    }
                    double v40 = v38;
                    double v41 = v37;
                    if (!v76)
                    {
                      double v42 = v37 / v38;
                      if (v24 == -1.0)
                      {
                        double v41 = v26 * v42;
                        double v40 = v26;
                      }
                      else
                      {
                        double v40 = v26;
                        double v41 = v24;
                        if (v26 == -1.0)
                        {
                          double v41 = v24;
                          double v40 = v24 / v42;
                        }
                      }
                    }
                    if (v41 + 0.5 < v37 || v40 + 0.5 < v38)
                    {
                      uint64_t v48 = [(MRDataArtwork *)v35 imageData];
                      uint64_t v49 = +[MRImageUtilities resizeImageData:forFittingSize:error:](MRImageUtilities, "resizeImageData:forFittingSize:error:", v48, 0, v41, v40);
                      if (v49)
                      {
                        v50 = [[MRDataArtwork alloc] initWithImageData:v49];
                        [v27 setObject:v50 forKeyedSubscript:v33];

                        double v5 = v75;
                      }
                    }
                    else
                    {
LABEL_60:
                      [v27 setObject:v35 forKeyedSubscript:v33];
                    }
                  }
                }
              }
            }
            uint64_t v29 = [obj countByEnumeratingWithState:&v78 objects:v86 count:16];
          }
          while (v29);
        }

        id v51 = (void *)[v27 copy];
        [v75 setArtworks:v51];

        double v5 = v75;
        [v75 setArtwork:0];

        id v4 = v74;
        goto LABEL_66;
      }
      v53 = [v3 artwork];
      if (!v53)
      {
        v54 = [v3 artworks];
        int v55 = [v54 objectForKeyedSubscript:@"MRContentItemArtworkFormatStandard"];

        if (v55)
        {
          v56 = [MRArtwork alloc];
          v57 = [v3 artworks];
          v58 = [v57 objectForKeyedSubscript:@"MRContentItemArtworkFormatStandard"];
          id v59 = [v58 imageData];
          v53 = [(MRArtwork *)v56 initWithImageData:v59 height:0 width:0];
        }
        else
        {
          v53 = 0;
        }

        double v5 = v75;
      }
      uint64_t v60 = [(MRArtwork *)v53 width];
      uint64_t v61 = [(MRArtwork *)v53 height];
      if (!v53
        || v60 < 1
        || v61 < 1
        || (double v64 = (double)v60,
            double v65 = (double)v61,
            MRPlaybackQueueRequestGetArtworkWidth(v4),
            double v67 = v66,
            MRPlaybackQueueRequestGetArtworkHeight(v4),
            v67 + 0.5 >= (double)v60)
        && (double v63 = v62 + 0.5, v62 + 0.5 >= v65))
      {
LABEL_89:
        objc_msgSend(v5, "setArtwork:", v53, v62, v63);
        [v5 setArtworks:0];

        goto LABEL_66;
      }
      if (v67 != -1.0 || (double v68 = (double)v60, v69 = v65, v62 != -1.0))
      {
        double v70 = v64 / v65;
        if (v67 == -1.0)
        {
          double v68 = v70 * v62;
        }
        else
        {
          if (v62 == -1.0)
          {
            double v68 = v67;
            double v69 = v67 / v70;
            goto LABEL_84;
          }
          double v68 = v67;
        }
        double v69 = v62;
      }
LABEL_84:
      double v63 = v68 + 0.5;
      if (v68 + 0.5 < v64 || (double v62 = v69 + 0.5, v69 + 0.5 < v65))
      {
        MRContentItemSetArtworkData(v5, 0);
        MRContentItemSetArtworkDataSize(v5, 0, 0);
        v71 = [(MRArtwork *)v53 imageData];
        v72 = +[MRImageUtilities resizeImageData:forFittingSize:error:](MRImageUtilities, "resizeImageData:forFittingSize:error:", v71, 0, v68, v69);
        if (v72)
        {
          v73 = [[MRArtwork alloc] initWithImageData:v72 height:(uint64_t)v69 width:(uint64_t)v68];

          v53 = v73;
          double v5 = v75;
        }
      }
      goto LABEL_89;
    }
  }
LABEL_66:

  return v5;
}

void MRAddPlayerPathToXPCMessage(void *a1, void *a2)
{
  id v3 = a2;
  if (a1 && v3)
  {
    id v9 = v3;
    id v4 = a1;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v6 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v7 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRAddPlayerPathToXPCMessage(__strong xpc_object_t, MRNowPlayingPlayerPathRef)");
      uint64_t v8 = objc_opt_class();
      [v6 handleFailureInFunction:v7, @"MRSerializationUtility.m", 208, @"Type mismatch, expecting %@ found %@", v8, objc_opt_class() file lineNumber description];
    }
    id v5 = [v9 data];
    xpc_dictionary_set_data(v4, "MRXPC_NOWPLAYING_PLAYER_PATH_DATA_KEY", (const void *)[v5 bytes], objc_msgSend(v5, "length"));

    id v3 = v9;
  }
}

void MRAddDataToXPCMessage(void *a1, id a2, const char *a3)
{
  if (a2)
  {
    id v5 = a2;
    xpc_object_t xdict = a1;
    uint64_t v6 = (const void *)[v5 bytes];
    size_t v7 = [v5 length];

    xpc_dictionary_set_data(xdict, a3, v6, v7);
  }
}

uint64_t MRPlaybackQueueRequestGetIncludeSections(void *a1)
{
  if (a1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v3 = [MEMORY[0x1E4F28B00] currentHandler];
      id v4 = [NSString stringWithUTF8String:"_Bool MRPlaybackQueueRequestGetIncludeSections(MRPlaybackQueueRequestRef)"];
      uint64_t v5 = objc_opt_class();
      [v3 handleFailureInFunction:v4, @"MRPlaybackQueueRequest_Deprecated.m", 227, @"Type mismatch, expecting %@ found %@", v5, objc_opt_class() file lineNumber description];
    }
  }

  return [a1 includeSections];
}

uint64_t MRPlaybackQueueRequestGetIncludeMetadata(void *a1)
{
  if (a1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v3 = [MEMORY[0x1E4F28B00] currentHandler];
      id v4 = [NSString stringWithUTF8String:"_Bool MRPlaybackQueueRequestGetIncludeMetadata(MRPlaybackQueueRequestRef)"];
      uint64_t v5 = objc_opt_class();
      [v3 handleFailureInFunction:v4, @"MRPlaybackQueueRequest_Deprecated.m", 211, @"Type mismatch, expecting %@ found %@", v5, objc_opt_class() file lineNumber description];
    }
  }

  return [a1 includeMetadata];
}

uint64_t MRPlaybackQueueRequestGetIncludeLanguageOptions(void *a1)
{
  if (a1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v3 = [MEMORY[0x1E4F28B00] currentHandler];
      id v4 = [NSString stringWithUTF8String:"_Bool MRPlaybackQueueRequestGetIncludeLanguageOptions(MRPlaybackQueueRequestRef)"];
      uint64_t v5 = objc_opt_class();
      [v3 handleFailureInFunction:v4, @"MRPlaybackQueueRequest_Deprecated.m", 243, @"Type mismatch, expecting %@ found %@", v5, objc_opt_class() file lineNumber description];
    }
  }

  return [a1 includeLanguageOptions];
}

uint64_t MRPlaybackQueueRequestGetIncludeInfo(void *a1)
{
  if (a1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v3 = [MEMORY[0x1E4F28B00] currentHandler];
      id v4 = [NSString stringWithUTF8String:"_Bool MRPlaybackQueueRequestGetIncludeInfo(MRPlaybackQueueRequestRef)"];
      uint64_t v5 = objc_opt_class();
      [v3 handleFailureInFunction:v4, @"MRPlaybackQueueRequest_Deprecated.m", 235, @"Type mismatch, expecting %@ found %@", v5, objc_opt_class() file lineNumber description];
    }
  }

  return [a1 includeInfo];
}

BOOL MRPlaybackQueueRequestGetIncludeArtwork(void *a1)
{
  if (a1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      size_t v7 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v8 = [NSString stringWithUTF8String:"_Bool MRPlaybackQueueRequestGetIncludeArtwork(MRPlaybackQueueRequestRef)"];
      uint64_t v9 = objc_opt_class();
      [v7 handleFailureInFunction:v8, @"MRPlaybackQueueRequest_Deprecated.m", 251, @"Type mismatch, expecting %@ found %@", v9, objc_opt_class() file lineNumber description];
    }
  }
  id v2 = a1;
  [v2 artworkHeight];
  if (fabs(v3) <= 2.22044605e-16)
  {
    BOOL v5 = 0;
  }
  else
  {
    [v2 artworkWidth];
    BOOL v5 = fabs(v4) > 2.22044605e-16;
  }

  return v5;
}

void *MRPlaybackQueueCreateFromRequest(void *a1, void *a2)
{
  if (!a1) {
    return 0;
  }
  id v3 = a1;
  double v4 = [v3 contentItems];
  BOOL v5 = MRContentItemsCreateFromRequest(v4, a2);

  int v6 = [v3 hasLocation];
  size_t v7 = [MRPlaybackQueue alloc];
  if (v6) {
    uint64_t v8 = -[MRPlaybackQueue initWithContentItems:location:](v7, "initWithContentItems:location:", v5, [v3 location]);
  }
  else {
    uint64_t v8 = [(MRPlaybackQueue *)v7 initWithContentItems:v5];
  }
  uint64_t v9 = (void *)v8;
  id v10 = [v3 context];
  [v9 setContext:v10];

  id v11 = [v3 queueIdentifier];
  [v9 setQueueIdentifier:v11];

  double v12 = [v3 properties];
  [v9 setProperties:v12];

  uint64_t v13 = [v3 auxiliaryNowPlayingInfo];
  [v9 setAuxiliaryNowPlayingInfo:v13];

  uint64_t v14 = [v3 requestIdentifier];
  [v9 setRequestIdentifier:v14];

  uint64_t v15 = [v3 resolvedPlayerPath];
  [v9 setResolvedPlayerPath:v15];

  id v16 = [v3 homeUserIdentifiers];
  [v9 setHomeUserIdentifiers:v16];

  return v9;
}

void *MRContentItemsCreateFromRequest(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (v3)
  {
    double v4 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v3, "count"));
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v5 = v3;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v13;
      do
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v13 != v8) {
            objc_enumerationMutation(v5);
          }
          id v10 = MRContentItemCreateFromRequest(*(void **)(*((void *)&v12 + 1) + 8 * i), a2);
          objc_msgSend(v4, "addObject:", v10, (void)v12);
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v7);
    }
  }
  else
  {
    double v4 = 0;
  }

  return v4;
}

void _onQueue_MRHandlePlaybackQueueRequest(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  if (v9)
  {
    if (v11) {
      goto LABEL_3;
    }
LABEL_25:
    double v40 = [MEMORY[0x1E4F28B00] currentHandler];
    double v41 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRHandlePlaybackQueueRequest(MRNowPlayingPlayerClient *__strong, MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong dispatch_queue_t, __strong _MRPlaybackQueueRequestCallbackCompletion)");
    [v40 handleFailureInFunction:v41, @"MRPlaybackQueueServiceClient.m", 419, @"Invalid parameter not satisfying: %@", @"request" file lineNumber description];

    if (v13) {
      goto LABEL_4;
    }
    goto LABEL_26;
  }
  double v38 = [MEMORY[0x1E4F28B00] currentHandler];
  id v39 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRHandlePlaybackQueueRequest(MRNowPlayingPlayerClient *__strong, MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong dispatch_queue_t, __strong _MRPlaybackQueueRequestCallbackCompletion)");
  [v38 handleFailureInFunction:v39, @"MRPlaybackQueueServiceClient.m", 418, @"Invalid parameter not satisfying: %@", @"clientState" file lineNumber description];

  if (!v11) {
    goto LABEL_25;
  }
LABEL_3:
  if (v13) {
    goto LABEL_4;
  }
LABEL_26:
  double v42 = [MEMORY[0x1E4F28B00] currentHandler];
  id v43 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRHandlePlaybackQueueRequest(MRNowPlayingPlayerClient *__strong, MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong dispatch_queue_t, __strong _MRPlaybackQueueRequestCallbackCompletion)");
  [v42 handleFailureInFunction:v43, @"MRPlaybackQueueServiceClient.m", 420, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

LABEL_4:
  if (([v10 isResolved] & 1) == 0)
  {
    id v44 = [MEMORY[0x1E4F28B00] currentHandler];
    id v45 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRHandlePlaybackQueueRequest(MRNowPlayingPlayerClient *__strong, MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong dispatch_queue_t, __strong _MRPlaybackQueueRequestCallbackCompletion)");
    [v44 handleFailureInFunction:v45 file:@"MRPlaybackQueueServiceClient.m" lineNumber:421 description:@"Attempting to use unresolved Player Path"];
  }
  uint64_t v48 = v10;
  int v14 = [v11 hasRange];
  long long v15 = [v11 contentItemIdentifiers];
  id v16 = v15;
  id v46 = v12;
  if (v15) {
    BOOL v17 = [v15 count] != 0;
  }
  else {
    BOOL v17 = 0;
  }
  id v18 = [v9 clientCallbacks];
  qos_class_t v19 = [v18 createItemForOffsetCallbacks];
  uint64_t v49 = [v19 callbacks];

  dispatch_block_t v20 = [v9 clientCallbacks];
  uint64_t v21 = [v20 createPlaybackQueueForRequestCallbacks];
  uint64_t v22 = [v21 callbacks];

  double v23 = [v9 clientCallbacks];
  double v24 = [v23 createItemForIdentifierCallbacks];
  double v25 = [v24 callbacks];

  char v47 = v16;
  if (v14)
  {
    if ([v22 count])
    {
      uint64_t v26 = _onQueue_MRCreatePlaybackQueueForRequest(v11, v22);
LABEL_16:
      uint64_t v27 = v26;
      uint64_t Error = 0;
      goto LABEL_18;
    }
    if ([v49 count])
    {
      uint64_t v26 = _onQueue_MRCreatePlaybackQueueForOffset(v11, v49);
      goto LABEL_16;
    }
  }
  if (v17)
  {
    uint64_t v26 = _onQueue_MRCreatePlaybackQueueForIdentifier(v11, v25);
    goto LABEL_16;
  }
  uint64_t Error = MRMediaRemoteCreateError(14);
  uint64_t v27 = 0;
LABEL_18:
  uint64_t v29 = v22;
  uint64_t v30 = v13;
  BOOL v31 = v25;
  if (!(Error | v27))
  {
    double v36 = [MRPlaybackQueue alloc];
    uint64_t v27 = [(MRPlaybackQueue *)v36 initWithContentItems:MEMORY[0x1E4F1CBF0]];
    goto LABEL_22;
  }
  if (!Error)
  {
LABEL_22:
    v52[0] = MEMORY[0x1E4F143A8];
    v52[1] = 3221225472;
    v52[2] = ___onQueue_MRHandlePlaybackQueueRequest_block_invoke;
    v52[3] = &unk_1E57D0DB8;
    uint64_t v32 = &v54;
    v54 = v30;
    uint64_t v33 = (id *)&v53;
    uint64_t v27 = (uint64_t)(id)v27;
    uint64_t v53 = v27;
    id v37 = v30;
    long long v35 = v46;
    _MRLoadContentItemAssets(v9, v11, (void *)v27, v46, v52);
    goto LABEL_23;
  }
  uint64_t v32 = &v51;
  id v51 = v30;
  uint64_t v33 = &v50;
  id v50 = (id)Error;
  id v34 = v30;
  long long v35 = v46;
  msv_dispatch_async_on_queue();
LABEL_23:
}

id _onQueue_MRCreatePlaybackQueueForRequest(void *a1, void *a2)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (!v3)
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = objc_msgSend(NSString, "stringWithUTF8String:", "MRPlaybackQueue *_onQueue_MRCreatePlaybackQueueForRequest(MRPlaybackQueueRequest *__strong, NSArray<MSVCallback *> *__strong)");
    [v12 handleFailureInFunction:v13, @"MRPlaybackQueueServiceClient.m", 257, @"Invalid parameter not satisfying: %@", @"request" file lineNumber description];
  }
  uint64_t v22 = 0;
  double v23 = &v22;
  uint64_t v24 = 0x3032000000;
  double v25 = __Block_byref_object_copy__48;
  uint64_t v26 = __Block_byref_object_dispose__48;
  id v27 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  obuint64_t j = v4;
  uint64_t v5 = [obj countByEnumeratingWithState:&v18 objects:v28 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v19;
LABEL_5:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v19 != v6) {
        objc_enumerationMutation(obj);
      }
      uint64_t v8 = *(void **)(*((void *)&v18 + 1) + 8 * v7);
      uint64_t v9 = [v8 queue];
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = ___onQueue_MRCreatePlaybackQueueForRequest_block_invoke;
      block[3] = &unk_1E57D7628;
      void block[4] = v8;
      BOOL v17 = &v22;
      id v16 = v3;
      dispatch_sync((dispatch_queue_t)v9, block);

      LOBYTE(v9) = v23[5] == 0;
      if ((v9 & 1) == 0) {
        break;
      }
      if (v5 == ++v7)
      {
        uint64_t v5 = [obj countByEnumeratingWithState:&v18 objects:v28 count:16];
        if (v5) {
          goto LABEL_5;
        }
        break;
      }
    }
  }

  id v10 = (id)v23[5];
  _Block_object_dispose(&v22, 8);

  return v10;
}

void sub_194F5AF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t MRMediaRemoteCreateError(uint64_t a1)
{
  id v2 = objc_alloc(MEMORY[0x1E4F28C58]);

  return [v2 initWithMRError:a1];
}

uint64_t MRContentItemCreateSkeletonFrom(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

void sub_194F5BB38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL MROutputDeviceIsAVOutputDeviceLocal(void *a1)
{
  return [a1 deviceType] != 0;
}

void sub_194F5C974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id AVOutputDeviceFunction()
{
  return (id)classAVOutputDevice;
}

id AVOutputDeviceFunction_0()
{
  return (id)classAVOutputDevice_0;
}

id AVOutputDeviceFunction_1()
{
  return (id)classAVOutputDevice_1;
}

void MRMediaRemoteGetSupportedCommandsForPlayer(void *a1, void *a2, void *a3)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    id v5 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  uint64_t v8 = [MEMORY[0x1E4F29128] UUID];
  uint64_t v9 = [v8 UUIDString];

  id v10 = [MEMORY[0x1E4F1C9C8] date];
  id v11 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"supportedCommands", v9];
  id v12 = v11;
  if (a1) {
    [v11 appendFormat:@" for %@", a1];
  }
  id v13 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v26 = v12;
    _os_log_impl(&dword_194F3C000, v13, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  int v14 = +[MRMediaRemoteServiceClient sharedServiceClient];
  long long v15 = [v14 workerQueue];
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 3221225472;
  v20[2] = __MRMediaRemoteGetSupportedCommandsForPlayer_block_invoke;
  v20[3] = &unk_1E57D13F8;
  id v21 = v9;
  id v22 = v10;
  id v23 = v5;
  id v24 = v6;
  id v16 = v6;
  id v17 = v5;
  id v18 = v10;
  id v19 = v9;
  MRMediaRemoteNowPlayingResolvePlayerPath(a1, v15, v20);
}

void _MRResolveAndRequestPlaybackQueue(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = v7;
  if (!v5)
  {
    id v13 = [MEMORY[0x1E4F28B00] currentHandler];
    int v14 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRResolveAndRequestPlaybackQueue(MRPlaybackQueueRequest *__strong, MRPlayerPath *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
    [v13 handleFailureInFunction:v14, @"MRPlaybackQueueRequestResponse.m", 86, @"Invalid parameter not satisfying: %@", @"request" file lineNumber description];

    if (v8) {
      goto LABEL_3;
    }
LABEL_5:
    long long v15 = [MEMORY[0x1E4F28B00] currentHandler];
    id v16 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRResolveAndRequestPlaybackQueue(MRPlaybackQueueRequest *__strong, MRPlayerPath *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
    [v15 handleFailureInFunction:v16, @"MRPlaybackQueueRequestResponse.m", 87, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

    goto LABEL_3;
  }
  if (!v7) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v9 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v10 = [v9 workerQueue];
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = ___MRResolveAndRequestPlaybackQueue_block_invoke;
  v17[3] = &unk_1E57D2278;
  id v18 = v5;
  id v19 = v8;
  id v11 = v8;
  id v12 = v5;
  MRMediaRemoteNowPlayingResolvePlayerPath(v6, v10, v17);
}

void MRMediaRemoteNowPlayingResolvePlayerPath(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteNowPlayingResolvePlayerPath_block_invoke;
  v7[3] = &unk_1E57D2610;
  id v8 = v5;
  id v6 = v5;
  MRMediaRemoteNowPlayingResolvePlayerPathWithID(a1, 0, 1, a2, v7);
}

void _MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayer(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if (!v9)
  {
    id v9 = (id)MEMORY[0x1E4F14428];
    id v11 = MEMORY[0x1E4F14428];
  }
  id v12 = [MEMORY[0x1E4F1C9C8] date];
  if (!v7)
  {
    id v7 = +[MRPlaybackQueueRequest defaultPlaybackQueueRequest];
  }
  id v13 = [v7 requestIdentifier];

  if (!v13)
  {
    int v14 = [MEMORY[0x1E4F29128] UUID];
    long long v15 = [v14 UUIDString];
    [v7 setRequestIdentifier:v15];
  }
  id v16 = [v7 label];

  if (!v16)
  {
    id v17 = [NSString alloc];
    id v18 = [MEMORY[0x1E4F28F80] processInfo];
    id v19 = [v18 processName];
    long long v20 = (void *)[v17 initWithFormat:@"%@-%d", v19, getpid()];
    [v7 setLabel:v20];
  }
  id v21 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"playbackQueue", v7];
  id v22 = v21;
  if (v8) {
    [v21 appendFormat:@" for %@", v8];
  }
  id v23 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    long long v35 = v22;
    _os_log_impl(&dword_194F3C000, v23, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 3221225472;
  v29[2] = ___MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayer_block_invoke;
  v29[3] = &unk_1E57D5818;
  id v30 = v7;
  id v31 = v12;
  id v32 = v9;
  id v33 = v10;
  id v24 = v9;
  id v25 = v10;
  id v26 = v12;
  id v27 = v7;
  uint64_t v28 = (void *)MEMORY[0x1997190F0](v29);
  _MRResolveAndRequestPlaybackQueue(v27, v8, v28);
}

void MRMediaRemoteNowPlayingResolvePlayerPathWithID(void *a1, void *a2, char a3, void *a4, void *a5)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v9 = a2;
  id v10 = a4;
  id v11 = a5;
  if (!v10)
  {
    id v10 = (id)MEMORY[0x1E4F14428];
    id v12 = MEMORY[0x1E4F14428];
  }
  id v13 = (void *)[a1 copy];
  int v14 = v13;
  if (v13) {
    long long v15 = v13;
  }
  else {
    long long v15 = objc_alloc_init(MRPlayerPath);
  }
  id v16 = v15;

  id v17 = [MEMORY[0x1E4F1C9C8] date];
  if (v9)
  {
    id v18 = v9;
  }
  else
  {
    id v19 = [MEMORY[0x1E4F29128] UUID];
    id v18 = [v19 UUIDString];
  }
  long long v20 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"resolvePlayerPath", v18];
  id v21 = v20;
  if (v16) {
    [v20 appendFormat:@" for %@", v16];
  }
  uint64_t v36 = v9;
  id v22 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    int v55 = v21;
    _os_log_impl(&dword_194F3C000, v22, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v47[0] = MEMORY[0x1E4F143A8];
  v47[1] = 3221225472;
  v47[2] = __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke;
  v47[3] = &unk_1E57D77C8;
  id v53 = v11;
  id v23 = v16;
  uint64_t v48 = v23;
  uint64_t v49 = @"resolvePlayerPath";
  id v24 = v18;
  id v50 = v24;
  id v51 = v17;
  id v25 = v10;
  id v52 = v25;
  id v26 = v17;
  id v27 = v11;
  uint64_t v28 = (void *)MEMORY[0x1997190F0](v47);
  v44[0] = MEMORY[0x1E4F143A8];
  v44[1] = 3221225472;
  v44[2] = __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_4;
  v44[3] = &unk_1E57D7838;
  id v45 = v25;
  id v46 = &__block_literal_global_84;
  id v29 = v25;
  id v30 = (void *)MEMORY[0x1997190F0](v44);
  v37[0] = MEMORY[0x1E4F143A8];
  v37[1] = 3221225472;
  v37[2] = __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_6;
  v37[3] = &unk_1E57D78B0;
  char v43 = a3;
  double v38 = v23;
  id v39 = @"resolvePlayerPath";
  id v40 = v24;
  id v41 = v28;
  id v42 = v30;
  id v31 = (void (*)(void *, MRPlayerPath *, void *))v30[2];
  id v32 = v30;
  id v33 = v24;
  id v34 = v23;
  id v35 = v28;
  v31(v32, v34, v37);
}

void __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)[a2 copy];
  id v7 = [v6 client];
  int v8 = [v7 hasPlaceholder];

  if (v8)
  {
    id v9 = [v6 origin];
    uint64_t v10 = *(void *)(a1 + 32);
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    v11[2] = __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_5;
    v11[3] = &unk_1E57D7810;
    id v12 = v6;
    id v13 = *(id *)(a1 + 40);
    id v14 = v5;
    +[MRDeviceInfoRequest deviceInfoForOrigin:v9 queue:v10 completion:v11];
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)[a2 copy];
  if ([v5 isResolved])
  {
    v4[2](v4, v5, 0);
  }
  else
  {
    id v6 = +[MRMediaRemoteServiceClient sharedServiceClient];
    id v7 = [v6 activePlayerPath];

    if (!v7) {
      goto LABEL_11;
    }
    uint64_t v8 = [v5 origin];
    if (v8)
    {
      id v9 = (void *)v8;
      uint64_t v10 = [v5 origin];
      id v11 = [v7 origin];
      int v12 = [v10 isEqual:v11];

      if (!v12) {
        goto LABEL_11;
      }
    }
    uint64_t v13 = [v5 client];
    if (v13)
    {
      id v14 = (void *)v13;
      long long v15 = [v5 client];
      id v16 = [v7 client];
      int v17 = [v15 isEqual:v16];

      if (!v17) {
        goto LABEL_11;
      }
    }
    uint64_t v18 = [v5 player];
    if (!v18) {
      goto LABEL_10;
    }
    id v19 = (void *)v18;
    long long v20 = [v5 player];
    id v21 = [v7 player];
    int v22 = [v20 isEqual:v21];

    if (v22)
    {
LABEL_10:
      v4[2](v4, v7, 0);
    }
    else
    {
LABEL_11:
      id v23 = (void *)MRGetSharedService();
      id v24 = +[MRMediaRemoteServiceClient sharedServiceClient];
      id v25 = [v24 workerQueue];
      v26[0] = MEMORY[0x1E4F143A8];
      v26[1] = 3221225472;
      v26[2] = __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_3;
      v26[3] = &unk_1E57D2318;
      id v27 = v4;
      MRMediaRemoteServiceResolvePlayerPath(v23, (uint64_t)v5, v25, v26);
    }
  }
}

void __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_6(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 origin];
  char v8 = [v7 isLocal];

  if ((v8 & 1) == 0) {
    goto LABEL_8;
  }
  if (!*(unsigned char *)(a1 + 72))
  {
    id v9 = [*(id *)(a1 + 32) client];
    uint64_t v10 = [v9 bundleIdentifier];
    if (v10)
    {

      goto LABEL_6;
    }
    id v11 = [v5 client];
    int v12 = [v11 bundleIdentifier];

    if (v12) {
      goto LABEL_6;
    }
LABEL_8:
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    goto LABEL_14;
  }
LABEL_6:
  uint64_t v13 = (void *)MRMediaRemoteCopyLocalDeviceAirPlayReceiverBundleID();
  id v14 = [v5 client];
  long long v15 = [v14 bundleIdentifier];
  int v16 = [v15 isEqualToString:v13];

  if (v16)
  {
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
  else
  {
    int v17 = +[MRAVClusterController sharedController];
    if ([v17 needsCommandRedirection])
    {
      v18[0] = MEMORY[0x1E4F143A8];
      v18[1] = 3221225472;
      v18[2] = __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_7;
      v18[3] = &unk_1E57D7888;
      id v19 = *(id *)(a1 + 40);
      id v20 = *(id *)(a1 + 48);
      id v22 = *(id *)(a1 + 56);
      id v21 = *(id *)(a1 + 32);
      id v23 = *(id *)(a1 + 64);
      [v17 getClusterLeaderEndpoint:v18];
    }
    else
    {
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
  }
LABEL_14:
}

void sub_194F5E408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F5E4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (*(void *)(a1 + 72))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    char v8 = _MRLogForCategory(0xAuLL);
    id v9 = v8;
    if (!v5 || v6)
    {
      if (v6)
      {
        BOOL v19 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
        if (!v7)
        {
          if (v19) {
            __94__MRAVDiscoverySessionHelper_searchAVOutputDeviceForUID_timeout_identifier_reason_completion___block_invoke_cold_1((void *)a1, (uint64_t)v6, v9);
          }
          goto LABEL_23;
        }
        if (v19)
        {
          uint64_t v21 = *(void *)(a1 + 40);
          uint64_t v20 = *(void *)(a1 + 48);
          uint64_t v22 = *(void *)(a1 + 32);
          id v14 = [MEMORY[0x1E4F1C9C8] date];
          [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
          *(_DWORD *)long long buf = 138544386;
          uint64_t v42 = v21;
          __int16 v43 = 2114;
          uint64_t v44 = v20;
          __int16 v45 = 2114;
          id v46 = v6;
          __int16 v47 = 2114;
          uint64_t v48 = v22;
          __int16 v49 = 2048;
          uint64_t v50 = v23;
          _os_log_error_impl(&dword_194F3C000, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
LABEL_18:

          goto LABEL_23;
        }
        goto LABEL_23;
      }
      BOOL v24 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      if (!v7)
      {
        if (!v24) {
          goto LABEL_23;
        }
        uint64_t v32 = *(void *)(a1 + 40);
        uint64_t v33 = *(void *)(a1 + 48);
        id v14 = [MEMORY[0x1E4F1C9C8] date];
        [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
        *(_DWORD *)long long buf = 138543874;
        uint64_t v42 = v32;
        __int16 v43 = 2114;
        uint64_t v44 = v33;
        __int16 v45 = 2048;
        id v46 = v34;
        int v16 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
        int v17 = v9;
        uint32_t v18 = 32;
        goto LABEL_17;
      }
      if (!v24)
      {
LABEL_23:

        v37[0] = MEMORY[0x1E4F143A8];
        v37[1] = 3221225472;
        v37[2] = __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_84;
        v37[3] = &unk_1E57D0EA8;
        id v35 = *(NSObject **)(a1 + 64);
        id v40 = *(id *)(a1 + 72);
        id v38 = v5;
        id v39 = v6;
        uint64_t v36 = MRCreateDonatedQosBlock(v37);
        dispatch_async(v35, v36);

        goto LABEL_24;
      }
      uint64_t v26 = *(void *)(a1 + 40);
      uint64_t v25 = *(void *)(a1 + 48);
      id v27 = *(void **)(a1 + 32);
      id v14 = [MEMORY[0x1E4F1C9C8] date];
      [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
      *(_DWORD *)long long buf = 138544130;
      uint64_t v42 = v26;
      __int16 v43 = 2114;
      uint64_t v44 = v25;
      __int16 v45 = 2114;
      id v46 = v27;
      __int16 v47 = 2048;
      uint64_t v48 = v28;
      int v16 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
    }
    else
    {
      BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
      if (v7)
      {
        if (v10)
        {
          uint64_t v12 = *(void *)(a1 + 40);
          uint64_t v11 = *(void *)(a1 + 48);
          uint64_t v13 = *(void *)(a1 + 32);
          id v14 = [MEMORY[0x1E4F1C9C8] date];
          [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
          *(_DWORD *)long long buf = 138544386;
          uint64_t v42 = v12;
          __int16 v43 = 2114;
          uint64_t v44 = v11;
          __int16 v45 = 2112;
          id v46 = v5;
          __int16 v47 = 2114;
          uint64_t v48 = v13;
          __int16 v49 = 2048;
          uint64_t v50 = v15;
          int v16 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
          int v17 = v9;
          uint32_t v18 = 52;
LABEL_17:
          _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, v16, buf, v18);
          goto LABEL_18;
        }
        goto LABEL_23;
      }
      if (!v10) {
        goto LABEL_23;
      }
      uint64_t v29 = *(void *)(a1 + 40);
      uint64_t v30 = *(void *)(a1 + 48);
      id v14 = [MEMORY[0x1E4F1C9C8] date];
      [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
      *(_DWORD *)long long buf = 138544130;
      uint64_t v42 = v29;
      __int16 v43 = 2114;
      uint64_t v44 = v30;
      __int16 v45 = 2112;
      id v46 = v5;
      __int16 v47 = 2048;
      uint64_t v48 = v31;
      int v16 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
    }
    int v17 = v9;
    uint32_t v18 = 42;
    goto LABEL_17;
  }
LABEL_24:
}

uint64_t MRMediaRemoteCopyLocalDeviceAirPlayReceiverBundleID()
{
  return objc_claimAutoreleasedReturnValue();
}

void sub_194F5EA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F5EB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void MRMediaRemoteServiceResolvePlayerPath(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __MRMediaRemoteServiceResolvePlayerPath_block_invoke;
  v10[3] = &unk_1E57D2610;
  id v11 = v7;
  id v9 = v7;
  [a1 resolvePlayerPath:a2 queue:v8 completion:v10];
}

Class initAVOutputDevice()
{
  if (AVFoundationLibrary_sOnce_8 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_8, &__block_literal_global_230);
  }
  Class result = objc_getClass("AVOutputDevice");
  classAVOutputDevice = (uint64_t)result;
  getAVOutputDeviceClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceFunction;
  return result;
}

Class initAVOutputDevice_0()
{
  if (AVFoundationLibrary_sOnce_10 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_10, &__block_literal_global_97);
  }
  Class result = objc_getClass("AVOutputDevice");
  classAVOutputDevice_0 = (uint64_t)result;
  getAVOutputDeviceClass_0[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceFunction_0;
  return result;
}

Class initAVOutputDevice_1()
{
  if (AVFoundationLibrary_sOnce_12 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_12, &__block_literal_global_86);
  }
  Class result = objc_getClass("AVOutputDevice");
  classAVOutputDevice_1 = (uint64_t)result;
  getAVOutputDeviceClass_1[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceFunction_1;
  return result;
}

void sub_194F5FCC8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

const UInt8 *MRCreateSupportedCommandsDataFromXPCMessage(void *a1)
{
  return MRCreateDataFromXPCMessage(a1, "MRXPC_COMMAND_INFO_ARRAY_DATA_KEY");
}

uint64_t MRContentItemCopyNowPlayingInfo(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

void *MRNowPlayingPlayerPathGetClient(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      id v5 = [NSString stringWithUTF8String:"MRNowPlayingClientRef MRNowPlayingPlayerPathGetClient(MRNowPlayingPlayerPathRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 411, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  id v2 = [v1 client];

  return v2;
}

uint64_t MRDeviceSupportsExternalTouchBarUI()
{
  return 0;
}

uint64_t MRMediaRemoteApplicationIsSystemPodcastApplication(uint64_t a1)
{
  if (MRMediaRemoteApplicationIsSystemPodcastApplication___once != -1) {
    dispatch_once(&MRMediaRemoteApplicationIsSystemPodcastApplication___once, &__block_literal_global_32_2);
  }
  id v2 = (void *)MRMediaRemoteApplicationIsSystemPodcastApplication___allKnownSystemPodcastApplications;

  return [v2 containsObject:a1];
}

uint64_t MRContentItemCopyCollectionInfo(void *a1)
{
  id v1 = [a1 metadata];
  id v2 = [v1 collectionInfo];
  uint64_t v3 = [v2 copy];

  return v3;
}

uint64_t __MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayer_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id AVPairedDeviceFunction()
{
  return (id)classAVPairedDevice;
}

Class initAVPairedDevice()
{
  if (AVFoundationLibrary_sOnce_8 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_8, &__block_literal_global_230);
  }
  Class result = objc_getClass("AVPairedDevice");
  classAVPairedDevice = (uint64_t)result;
  getAVPairedDeviceClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVPairedDeviceFunction;
  return result;
}

__CFString *MRMediaRemoteCopyPlaybackStateDescription(int a1)
{
  if ((a1 - 1) > 4) {
    return @"Unknown";
  }
  else {
    return off_1E57D1008[a1 - 1];
  }
}

void MRAddErrorToXPCMessage(void *a1, uint64_t value)
{
}

uint64_t MRCreatePlaybackQueueCapabilitiesFromXPCMessage(void *a1)
{
  return xpc_dictionary_get_uint64(a1, "MRXPC_NOWPLAYING_PLAYBACK_QUEUE_CAPABILITIES_KEY");
}

void sub_194F60BBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t MRContentItemGetHasMetadata(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = [v1 metadata];

  if (v2)
  {
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t v3 = objc_msgSend(v1, "metadata", 0);
    id v4 = [v3 dictionaryRepresentation];

    uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v13;
      while (2)
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v13 != v7) {
            objc_enumerationMutation(v4);
          }
          id v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
          if (([v9 hasPrefix:@"custom:"] & 1) == 0
            && ![v9 isEqualToString:@"inferredTimestamp"])
          {
            uint64_t v10 = 1;
            goto LABEL_14;
          }
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
        if (v6) {
          continue;
        }
        break;
      }
    }
    uint64_t v10 = 0;
LABEL_14:
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

uint64_t MRSupportedCommandsIsEqual(void *a1, void *a2)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (v3 == v4)
  {
    uint64_t v22 = 1;
  }
  else
  {
    uint64_t v5 = [v3 count];
    if (v5 == [v4 count])
    {
      uint64_t v6 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", objc_msgSend(v3, "count"));
      long long v29 = 0u;
      long long v30 = 0u;
      long long v31 = 0u;
      long long v32 = 0u;
      id v7 = v3;
      uint64_t v8 = [v7 countByEnumeratingWithState:&v29 objects:v34 count:16];
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = *(void *)v30;
        do
        {
          for (uint64_t i = 0; i != v9; ++i)
          {
            if (*(void *)v30 != v10) {
              objc_enumerationMutation(v7);
            }
            long long v12 = *(void **)(*((void *)&v29 + 1) + 8 * i);
            long long v13 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(v12, "command"));
            [v6 setObject:v12 forKeyedSubscript:v13];
          }
          uint64_t v9 = [v7 countByEnumeratingWithState:&v29 objects:v34 count:16];
        }
        while (v9);
      }
      id v24 = v3;

      long long v14 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", objc_msgSend(v4, "count"));
      long long v25 = 0u;
      long long v26 = 0u;
      long long v27 = 0u;
      long long v28 = 0u;
      id v15 = v4;
      uint64_t v16 = [v15 countByEnumeratingWithState:&v25 objects:v33 count:16];
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = *(void *)v26;
        do
        {
          for (uint64_t j = 0; j != v17; ++j)
          {
            if (*(void *)v26 != v18) {
              objc_enumerationMutation(v15);
            }
            uint64_t v20 = *(void **)(*((void *)&v25 + 1) + 8 * j);
            uint64_t v21 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(v20, "command"));
            [v14 setObject:v20 forKeyedSubscript:v21];
          }
          uint64_t v17 = [v15 countByEnumeratingWithState:&v25 objects:v33 count:16];
        }
        while (v17);
      }

      uint64_t v22 = [v6 isEqualToDictionary:v14];
      id v3 = v24;
    }
    else
    {
      uint64_t v22 = 0;
    }
  }

  return v22;
}

void _onQueue_MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  uint64_t v5 = +[MRNowPlayingOriginClientManager sharedManager];
  id v6 = [v5 playerClientForPlayerPath:v3];

  [v6 sendContentItemChanges:v4];
}

void sub_194F6161C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

CFStringRef MRMediaRemoteErrorCopyDescription(unint64_t a1)
{
  if (a1 > 0xCA) {
    CFStringRef v1 = @"Unknown Error";
  }
  else {
    CFStringRef v1 = off_1E57D6B90[a1];
  }
  return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
}

void MRMediaRemotePlaybackQueueDataSourceSendContentItemsChangedForPlayer(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v6 = [v5 playbackQueueDispatchQueue];
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  id v7 = v4;
  id v8 = v3;
  msv_dispatch_sync_on_queue();
}

void MRAddPropertyListToXPCMessage(void *a1, uint64_t a2, const char *a3)
{
  id v5 = a1;
  if (a2)
  {
    id v9 = 0;
    id v6 = [MEMORY[0x1E4F28F98] dataWithPropertyList:a2 format:200 options:0 error:&v9];
    id v7 = v9;
    if (v6)
    {
      MRAddDataToXPCMessage(v5, v6, a3);
    }
    else
    {
      id v8 = _MRLogForCategory(0);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        MRAddPropertyListToXPCMessage_cold_1();
      }
    }
  }
}

void __MRDictionaryCalculateDeltas_block_invoke_5(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) objectForKey:v7];
  if (!v6) {
    [*(id *)(a1 + 40) setObject:v5 forKeyedSubscript:v7];
  }
}

uint64_t MRMediaRemoteCommandInfoGetIntegerValueForKey(void *a1, uint64_t a2)
{
  id v2 = (void *)MRMediaRemoteCommandInfoCopyValueForKey(a1, a2);
  if (objc_opt_respondsToSelector()) {
    uint64_t v3 = [v2 intValue];
  }
  else {
    uint64_t v3 = 0;
  }

  return v3;
}

uint64_t MRMediaRemoteCommandInfoCopyValueForKey(void *a1, uint64_t a2)
{
  uint64_t v3 = [a1 options];
  uint64_t v4 = [v3 objectForKeyedSubscript:a2];

  return v4;
}

void MRSupportedCommandsCalculateDeltas(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  long long v28 = a4;
  long long v29 = a5;
  long long v27 = a3;
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v6 = a1;
  id v7 = a2;
  id v8 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", objc_msgSend(v6, "count"));
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id v9 = v6;
  uint64_t v10 = [v9 countByEnumeratingWithState:&v34 objects:v39 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v35;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v35 != v12) {
          objc_enumerationMutation(v9);
        }
        long long v14 = *(void **)(*((void *)&v34 + 1) + 8 * i);
        id v15 = [v14 dictionaryRepresentation];
        uint64_t v16 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(v14, "command"));
        [v8 setObject:v15 forKeyedSubscript:v16];
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v34 objects:v39 count:16];
    }
    while (v11);
  }
  long long v26 = v9;

  uint64_t v17 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", objc_msgSend(v7, "count"));
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v18 = v7;
  uint64_t v19 = [v18 countByEnumeratingWithState:&v30 objects:v38 count:16];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)v31;
    do
    {
      for (uint64_t j = 0; j != v20; ++j)
      {
        if (*(void *)v31 != v21) {
          objc_enumerationMutation(v18);
        }
        uint64_t v23 = *(void **)(*((void *)&v30 + 1) + 8 * j);
        id v24 = objc_msgSend(v23, "dictionaryRepresentation", v26, v27, v28, v29, (void)v30);
        long long v25 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(v23, "command"));
        [v17 setObject:v24 forKeyedSubscript:v25];
      }
      uint64_t v20 = [v18 countByEnumeratingWithState:&v30 objects:v38 count:16];
    }
    while (v20);
  }

  MRDictionaryCalculateDeltas(v8, v17, v27, v28, v29);
}

void *MRMediaRemoteCopyCommandDescription(uint64_t a1)
{
  int v1 = a1;
  Class result = objc_msgSend(NSString, "stringWithFormat:", @"<Unrecognized Command: %u>", a1);
  uint64_t v3 = @"Play";
  switch(v1)
  {
    case 0:
      goto LABEL_75;
    case 1:
      uint64_t v3 = @"Pause";
      goto LABEL_75;
    case 2:
      uint64_t v3 = @"TogglePlayPause";
      goto LABEL_75;
    case 3:
      uint64_t v3 = @"Stop";
      goto LABEL_75;
    case 4:
      uint64_t v3 = @"NextTrack";
      goto LABEL_75;
    case 5:
      uint64_t v3 = @"PreviousTrack";
      goto LABEL_75;
    case 6:
      uint64_t v3 = @"AdvanceShuffleMode";
      goto LABEL_75;
    case 7:
      uint64_t v3 = @"AdvanceRepeatMode";
      goto LABEL_75;
    case 8:
      uint64_t v3 = @"BeginFastForward";
      goto LABEL_75;
    case 9:
      uint64_t v3 = @"EndFastForward";
      goto LABEL_75;
    case 10:
      uint64_t v3 = @"BeginRewind";
      goto LABEL_75;
    case 11:
      uint64_t v3 = @"EndRewind";
      goto LABEL_75;
    case 12:
      uint64_t v3 = @"Rewind15Seconds";
      goto LABEL_75;
    case 13:
      uint64_t v3 = @"FastForward15Seconds";
      goto LABEL_75;
    case 14:
      uint64_t v3 = @"Rewind30Seconds";
      goto LABEL_75;
    case 15:
      uint64_t v3 = @"FastForward30Seconds";
      goto LABEL_75;
    case 16:
      uint64_t v3 = @"ToggleRecord";
      goto LABEL_75;
    case 17:
      uint64_t v3 = @"SkipForward";
      goto LABEL_75;
    case 18:
      uint64_t v3 = @"SkipBackward";
      goto LABEL_75;
    case 19:
      uint64_t v3 = @"ChangePlaybackRateCommand";
      goto LABEL_75;
    case 20:
      uint64_t v3 = @"RateTrack";
      goto LABEL_75;
    case 21:
      uint64_t v3 = @"LikeTrack";
      goto LABEL_75;
    case 22:
      uint64_t v3 = @"DislikeTrack";
      goto LABEL_75;
    case 23:
      uint64_t v3 = @"BookmarkTrack";
      goto LABEL_75;
    case 24:
      uint64_t v3 = @"SeekToPlaybackPosition";
      goto LABEL_75;
    case 25:
      uint64_t v3 = @"SetRepeatMode";
      goto LABEL_75;
    case 26:
      uint64_t v3 = @"SetShuffleMode";
      goto LABEL_75;
    case 27:
      uint64_t v3 = @"EnableLanguageOption";
      goto LABEL_75;
    case 28:
      uint64_t v3 = @"DisableLanguageOption";
      goto LABEL_75;
    case 100:
      uint64_t v3 = @"NextChapter";
      goto LABEL_75;
    case 101:
      uint64_t v3 = @"PreviousChapter";
      goto LABEL_75;
    case 102:
      uint64_t v3 = @"NextAlbum";
      goto LABEL_75;
    case 103:
      uint64_t v3 = @"PreviousAlbum";
      goto LABEL_75;
    case 104:
      uint64_t v3 = @"NextPlaylist";
      goto LABEL_75;
    case 105:
      uint64_t v3 = @"PreviousPlaylist";
      goto LABEL_75;
    case 106:
      uint64_t v3 = @"BanTrack";
      goto LABEL_75;
    case 107:
      uint64_t v3 = @"AddTrackToWishList";
      goto LABEL_75;
    case 108:
      uint64_t v3 = @"RemoveTrackFromWishList";
      goto LABEL_75;
    case 109:
      uint64_t v3 = @"NextInContext";
      goto LABEL_75;
    case 110:
      uint64_t v3 = @"PreviousInContext";
      goto LABEL_75;
    case 111:
      uint64_t v3 = @"Menu";
      goto LABEL_75;
    case 112:
      uint64_t v3 = @"Select";
      goto LABEL_75;
    case 113:
      uint64_t v3 = @"UpArrow";
      goto LABEL_75;
    case 114:
      uint64_t v3 = @"DownArrow";
      goto LABEL_75;
    case 115:
      uint64_t v3 = @"BacklightOff";
      goto LABEL_75;
    case 116:
      uint64_t v3 = @"ResetPlaybackTimeout";
      goto LABEL_75;
    case 117:
      uint64_t v3 = @"BuyTrack";
      goto LABEL_75;
    case 118:
      uint64_t v3 = @"BuyAlbum";
      goto LABEL_75;
    case 119:
      uint64_t v3 = @"PreOrderAlbum";
      goto LABEL_75;
    case 120:
      uint64_t v3 = @"CancelDownload";
      goto LABEL_75;
    case 121:
      uint64_t v3 = @"CreateRadioStation";
      goto LABEL_75;
    case 122:
      uint64_t v3 = @"SetPlaybackQueue";
      goto LABEL_75;
    case 123:
      uint64_t v3 = @"PresentUpNext";
      goto LABEL_75;
    case 124:
      uint64_t v3 = @"SetSleepTimer";
      goto LABEL_75;
    case 125:
      uint64_t v3 = @"InsertIntoPlaybackQueue";
      goto LABEL_75;
    case 126:
      uint64_t v3 = @"PresentSharingOptions";
      goto LABEL_75;
    case 127:
      uint64_t v3 = @"AddNowPlayingItemToLibrary";
      goto LABEL_75;
    case 128:
      uint64_t v3 = @"AddItemToLibrary";
      goto LABEL_75;
    case 129:
      uint64_t v3 = @"RemoveFromPlaybackQueue";
      goto LABEL_75;
    case 130:
      uint64_t v3 = @"ReorderPlaybackQueue";
      goto LABEL_75;
    case 131:
      uint64_t v3 = @"PlayItemInPlaybackQueue";
      goto LABEL_75;
    case 132:
      uint64_t v3 = @"PrepareForSetQueue";
      goto LABEL_75;
    case 133:
      uint64_t v3 = @"SetPlaybackSession";
      goto LABEL_75;
    case 134:
      uint64_t v3 = @"Reshuffle";
      goto LABEL_75;
    case 135:
      uint64_t v3 = @"ChangeQueueEndAction";
      goto LABEL_75;
    case 136:
      uint64_t v3 = @"PreloadPlaybackSession";
      goto LABEL_75;
    case 137:
      uint64_t v3 = @"SetPriorityForPlaybackSession";
      goto LABEL_75;
    case 138:
      uint64_t v3 = @"DiscardPlaybackSession";
      goto LABEL_75;
    case 139:
      uint64_t v3 = @"LeaveSharedPlaybackSession";
      goto LABEL_75;
    case 140:
      uint64_t v3 = @"PostEventNotice";
      goto LABEL_75;
    case 142:
      uint64_t v3 = @"VocalsControl";
      goto LABEL_75;
    case 143:
      uint64_t v3 = @"PrepareVocalsControl";
      goto LABEL_75;
    case 144:
      uint64_t v3 = @"ClearUpNextQueue";
      goto LABEL_75;
    case 145:
      uint64_t v3 = @"PerformDialogAction";
LABEL_75:

      Class result = v3;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t MRMediaRemoteCommandInfoGetEnabled(void *a1)
{
  return [a1 isEnabled];
}

uint64_t MRCreateDurationStringRepresentation(double a1)
{
  return objc_msgSend([NSString alloc], "initWithFormat:", @"%02d:%02d:%02d (%lf)", ((int)a1 / 3600), ((int)a1 / 60 % 60), ((int)a1 % 60), *(void *)&a1);
}

void MRDictionaryCalculateDeltas(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v12 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v13 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  v22[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  v22[2] = __MRDictionaryCalculateDeltas_block_invoke;
  v22[3] = &unk_1E57D6B20;
  id v14 = v10;
  id v23 = v14;
  id v15 = v13;
  id v24 = v15;
  id v16 = v12;
  id v25 = v16;
  [v9 enumerateKeysAndObjectsUsingBlock:v22];
  v19[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = __MRDictionaryCalculateDeltas_block_invoke_5;
  v19[3] = &unk_1E57D6B48;
  id v20 = v9;
  id v17 = v11;
  id v21 = v17;
  id v18 = v9;
  [v14 enumerateKeysAndObjectsUsingBlock:v19];
  if (a3) {
    *a3 = v17;
  }
  if (a4) {
    *a4 = v16;
  }
  if (a5) {
    *a5 = v15;
  }
}

uint64_t MRPlaybackQueueRequestCreate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [MRPlaybackQueueRequest alloc];

  return (uint64_t)-[MRPlaybackQueueRequest initWithRange:](v4, "initWithRange:", a1, a2);
}

void MRMediaRemoteSetWantsSupportedCommandsChangedNotifications(int a1)
{
  id v2 = +[MRMediaRemoteServiceClient sharedServiceClient];
  int v3 = MRMediaRemoteSetWantsSupportedCommandsChangedNotifications___supportedCommandsObservers;
  if (a1)
  {
    ++MRMediaRemoteSetWantsSupportedCommandsChangedNotifications___supportedCommandsObservers;
    if (v3) {
      goto LABEL_7;
    }
    id v7 = v2;
    uint64_t v4 = [v2 notificationClient];
    id v5 = v4;
    uint64_t v6 = 1;
  }
  else
  {
    --MRMediaRemoteSetWantsSupportedCommandsChangedNotifications___supportedCommandsObservers;
    if (v3 != 1) {
      goto LABEL_7;
    }
    id v7 = v2;
    uint64_t v4 = [v2 notificationClient];
    id v5 = v4;
    uint64_t v6 = 0;
  }
  [v4 setReceivesSupportedCommandsNotifications:v6];

  id v2 = v7;
LABEL_7:
}

uint64_t MRNowPlayingPlayerPathIsLocal(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      id v5 = [NSString stringWithUTF8String:"_Bool MRNowPlayingPlayerPathIsLocal(MRNowPlayingPlayerPathRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 490, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  uint64_t v2 = [v1 isLocal];

  return v2;
}

uint64_t MRNowPlayingClientCopyBundleIdentifierHierarchy(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      id v5 = [NSString stringWithUTF8String:"CFArrayRef MRNowPlayingClientCopyBundleIdentifierHierarchy(MRNowPlayingClientRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 190, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  uint64_t v2 = [v1 bundleIdentifierHierarchy];

  return v2;
}

double MRContentItemGetDuration(void *a1)
{
  id v1 = [a1 metadata];
  [v1 duration];
  double v3 = v2;

  return v3;
}

id MRGetOriginFromUserInfo(void *a1)
{
  id v1 = a1;
  double v2 = [v1 objectForKeyedSubscript:@"kMRMediaRemoteOriginUserInfoKey"];
  if (!v2)
  {
    double v3 = [v1 objectForKeyedSubscript:@"kMRNowPlayingPlayerPathUserInfoKey"];
    double v2 = [v3 origin];
  }

  return v2;
}

id MRGetClientFromUserInfo(void *a1)
{
  id v1 = a1;
  double v2 = [v1 objectForKeyedSubscript:@"kMRNowPlayingClientUserInfoKey"];
  if (!v2)
  {
    double v3 = [v1 objectForKeyedSubscript:@"kMRNowPlayingPlayerPathUserInfoKey"];
    double v2 = [v3 client];
  }

  return v2;
}

id MRGetPlayerFromUserInfo(void *a1)
{
  id v1 = a1;
  double v2 = [v1 objectForKeyedSubscript:@"kMRNowPlayingPlayerUserInfoKey"];
  if (!v2)
  {
    double v3 = [v1 objectForKeyedSubscript:@"kMRNowPlayingPlayerPathUserInfoKey"];
    double v2 = [v3 player];
  }

  return v2;
}

void *MRNowPlayingClientGetBundleIdentifier(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      id v5 = [NSString stringWithUTF8String:"CFStringRef MRNowPlayingClientGetBundleIdentifier(MRNowPlayingClientRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 87, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  double v2 = [v1 bundleIdentifier];

  return v2;
}

uint64_t __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_5(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 client];
  [v5 resolvePlaceholdersForDeviceInfo:v4];

  uint64_t v6 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v6();
}

void sub_194F66240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void MRMediaRemoteSetPlaybackQueueCapabilities(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v12 = [v9 playerClientForPlayerPath:a1];

  [v12 setCapabilities:a2];
  id v10 = (void *)MRGetSharedService();
  id v11 = [v12 playerPath];
  MRMediaRemoteServiceSetNowPlayingPlaybackQueueCapabilities(v10, v11, a2, v8, v7);
}

void sub_194F66808(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F669BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F66F80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F67640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F67748(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F67BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void MRMediaRemoteServiceSetNowPlayingPlaybackQueue(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x200000000000008uLL);
  MRAddPlayerPathToXPCMessage(v12, a2);
  MRAddPlaybackQueueToXPCMessage(v12, a3);
  v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = __MRMediaRemoteServiceSetNowPlayingPlaybackQueue_block_invoke;
  v16[3] = &unk_1E57D0F98;
  id v17 = v9;
  id v13 = v9;
  id v14 = _MRServiceCreateErrorHandlerBlock(v16);
  id v15 = [v11 connection];

  xpc_connection_send_message_with_reply(v15, v12, v10, v14);
}

void MRMediaRemoteServiceGetHostedRoutingXPCEndpoint(void *a1, unsigned int a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = v7;
  if (a3 && v7)
  {
    id v9 = a1;
    id v10 = a3;
    id v11 = MRCreateXPCMessage(0x30000000000000DuLL);
    xpc_dictionary_set_int64(v11, "MRXPC_DISCOVERY_FEATURES_KEY", a2);
    id v12 = [v9 connection];

    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceGetHostedRoutingXPCEndpoint_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v14 = v8;
    xpc_connection_send_message_with_reply(v12, v11, v10, handler);
  }
}

void MRMediaRemoteServiceSetCanBeNowPlayingAppForPlayer(void *a1, BOOL a2, void *a3, double a4)
{
  id v7 = a1;
  id v8 = a3;
  MRCreateXPCMessage(0x200000000000038uLL);
  xpc_object_t xdict = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  MRAddPlayerPathToXPCMessage(xdict, v8);

  xpc_dictionary_set_BOOL(xdict, "MRXPC_NOWPLAYING_APP_ENABLED_KEY", a2);
  xpc_dictionary_set_double(xdict, "MRXPC_TIMESTAMP", a4);
  id v9 = [v7 connection];

  xpc_connection_send_message(v9, xdict);
}

void MRMediaRemoteServiceSetDefaultSupportedCommands(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a1;
  id v11 = a4;
  id v12 = a3;
  id v13 = a2;
  id v14 = MRCreateXPCMessage(0x200000000000032uLL);
  MRAddSupportedCommandsToXPCMessage(v14, (uint64_t)v13);

  MRAddPlayerPathToXPCMessage(v14, v12);
  v18[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = __MRMediaRemoteServiceSetDefaultSupportedCommands_block_invoke;
  v18[3] = &unk_1E57D0F98;
  id v19 = v9;
  id v15 = v9;
  id v16 = _MRServiceCreateErrorHandlerBlock(v18);
  id v17 = [v10 connection];

  xpc_connection_send_message_with_reply(v17, v14, v11, v16);
}

void MRAddSupportedCommandsToXPCMessage(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = +[MRCommandInfo dataFromCommandInfos:a2];
  MRAddDataToXPCMessage(v3, v4, "MRXPC_COMMAND_INFO_ARRAY_DATA_KEY");
}

void MRMediaRemoteServiceSetSupportedCommands(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x200000000000031uLL);
  MRAddPlayerPathToXPCMessage(v12, a3);
  MRAddSupportedCommandsToXPCMessage(v12, a2);
  v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = __MRMediaRemoteServiceSetSupportedCommands_block_invoke;
  v16[3] = &unk_1E57D0F98;
  id v17 = v9;
  id v13 = v9;
  id v14 = _MRServiceCreateErrorHandlerBlock(v16);
  id v15 = [v11 connection];

  xpc_connection_send_message_with_reply(v15, v12, v10, v14);
}

void MRMediaRemoteServiceSetNowPlayingPlaybackQueueCapabilities(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x20000000000000AuLL);
  MRAddPlayerPathToXPCMessage(v12, a2);
  MRAddPlaybackQueueCapabilitiesToXPCMessage(v12, a3);
  v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = __MRMediaRemoteServiceSetNowPlayingPlaybackQueueCapabilities_block_invoke;
  v16[3] = &unk_1E57D0F98;
  id v17 = v9;
  id v13 = v9;
  id v14 = _MRServiceCreateErrorHandlerBlock(v16);
  id v15 = [v11 connection];

  xpc_connection_send_message_with_reply(v15, v12, v10, v14);
}

id MRCreateXPCMessage(uint64_t a1)
{
  xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_uint64(v2, "MRXPC_MESSAGE_ID_KEY", a1);

  return v2;
}

id _MRServiceCreateErrorHandlerBlock(void *a1)
{
  id v1 = a1;
  v5[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = ___MRServiceCreateErrorHandlerBlock_block_invoke;
  v5[3] = &unk_1E57D2550;
  id v6 = v1;
  id v2 = v1;
  id v3 = (void *)MEMORY[0x1997190F0](v5);

  return v3;
}

void MRAddPlaybackQueueCapabilitiesToXPCMessage(void *a1, uint64_t value)
{
  if (value) {
    xpc_dictionary_set_uint64(a1, "MRXPC_NOWPLAYING_PLAYBACK_QUEUE_CAPABILITIES_KEY", value);
  }
}

void MRAddPlaybackQueueToXPCMessage(void *a1, void *a2)
{
  if (a2)
  {
    id v3 = a1;
    id v4 = [a2 data];
    xpc_dictionary_set_data(v3, "MRXPC_NOWPLAYING_PLAYBACK_QUEUE_KEY", (const void *)[v4 bytes], objc_msgSend(v4, "length"));
  }
}

_MRDictionaryProtobuf *_MRProtoUtilsProtoDictionaryFromNSDictionary(void *a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_alloc_init(_MRDictionaryProtobuf);
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v16;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v15 + 1) + 8 * v7);
        if ((_NSIsNSString() & 1) == 0)
        {
          id v12 = objc_msgSend(MEMORY[0x1E4F28B00], "currentHandler", (void)v15);
          id v13 = [NSString stringWithUTF8String:"_MRDictionaryProtobuf * _Nonnull _MRProtoUtilsProtoDictionaryFromNSDictionary(NSDictionary<NSString *,id> *__strong _Nonnull)"];
          [v12 handleFailureInFunction:v13 file:@"MRProtoUtils.m" lineNumber:38 description:@"all dictionary keys must be string"];
        }
        id v9 = objc_msgSend(v3, "objectForKeyedSubscript:", v8, (void)v15);
        id v10 = _MRProtoUtilsProtoValueFromPlistType(v9);

        if (v10)
        {
          id v11 = objc_alloc_init(_MRKeyValuePairProtobuf);
          [(_MRKeyValuePairProtobuf *)v11 setKey:v8];
          [(_MRKeyValuePairProtobuf *)v11 setValue:v10];
          [(_MRDictionaryProtobuf *)v2 addPair:v11];
        }
        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v5);
  }

  return v2;
}

uint64_t _MRDictionaryProtobufReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_MRKeyValuePairProtobuf);
        [a1 addPair:v17];
        if (!PBReaderPlaceMark() || !_MRKeyValuePairProtobufReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRKeyValuePairProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        long long v18 = *(_MRValueProtobuf **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    long long v18 = objc_alloc_init(_MRValueProtobuf);
    objc_storeStrong((id *)(a1 + 16), v18);
    if (!PBReaderPlaceMark() || (_MRValueProtobufReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRValueProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 64;
        goto LABEL_44;
      case 2u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v24 = *v3;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                uint64_t v23 = 0;
                goto LABEL_54;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
LABEL_54:
        *(void *)(a1 + 16) = v23;
        goto LABEL_63;
      case 3u:
        *(unsigned char *)(a1 + 76) |= 4u;
        uint64_t v28 = *v3;
        unint64_t v29 = *(void *)(a2 + v28);
        if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(void *)(a2 + *v4))
        {
          int v30 = *(_DWORD *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v30 = 0;
        }
        *(_DWORD *)(a1 + 56) = v30;
        goto LABEL_63;
      case 4u:
        *(unsigned char *)(a1 + 76) |= 1u;
        uint64_t v31 = *v3;
        unint64_t v32 = *(void *)(a2 + v31);
        if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v33 = *(void *)(*(void *)(a2 + *v7) + v32);
          *(void *)(a2 + v31) = v32 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v33 = 0;
        }
        *(void *)(a1 + 8) = v33;
        goto LABEL_63;
      case 5u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 32;
        goto LABEL_44;
      case 6u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        *(unsigned char *)(a1 + 76) |= 8u;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_58:
        *(unsigned char *)(a1 + 72) = v36 != 0;
        goto LABEL_63;
      case 7u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 40;
LABEL_44:
        id v41 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_63;
      case 8u:
        uint64_t v42 = objc_alloc_init(_MRValueProtobuf);
        [(id)a1 addArrayValue:v42];
        if (!PBReaderPlaceMark() || (_MRValueProtobufReadFrom(v42, a2) & 1) == 0) {
          goto LABEL_65;
        }
        goto LABEL_50;
      case 9u:
        uint64_t v42 = objc_alloc_init(_MRDictionaryProtobuf);
        objc_storeStrong((id *)(a1 + 48), v42);
        if PBReaderPlaceMark() && (_MRDictionaryProtobufReadFrom(v42, a2))
        {
LABEL_50:
          PBReaderRecallMark();

LABEL_63:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_65:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_63;
    }
  }
}

_MRValueProtobuf *_MRProtoUtilsProtoValueFromPlistType(void *a1)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_alloc_init(_MRValueProtobuf);
  if (_NSIsNSString())
  {
    [(_MRValueProtobuf *)v2 setStringValue:v1];
LABEL_31:
    uint64_t v18 = v2;
    goto LABEL_32;
  }
  if (_NSIsNSNumber())
  {
    CFNumberRef v3 = (const __CFNumber *)v1;
    CFNumberRef v4 = v3;
    if ((const __CFNumber *)*MEMORY[0x1E4F1CFD0] == v3)
    {
      char v8 = v2;
      uint64_t v9 = 1;
    }
    else
    {
      if ((const __CFNumber *)*MEMORY[0x1E4F1CFC8] != v3)
      {
        switch(CFNumberGetType(v3))
        {
          case kCFNumberFloat32Type:
          case kCFNumberFloatType:
            [(__CFNumber *)v4 floatValue];
            -[_MRValueProtobuf setFloatValue:](v2, "setFloatValue:");
            break;
          case kCFNumberFloat64Type:
          case kCFNumberDoubleType:
          case kCFNumberCGFloatType:
            [(__CFNumber *)v4 doubleValue];
            -[_MRValueProtobuf setDoubleValue:](v2, "setDoubleValue:");
            break;
          default:
            [(_MRValueProtobuf *)v2 setInt64Value:[(__CFNumber *)v4 longLongValue]];
            break;
        }
        goto LABEL_28;
      }
      char v8 = v2;
      uint64_t v9 = 0;
    }
    [(_MRValueProtobuf *)v8 setBoolValue:v9];
LABEL_28:
    uint64_t v18 = v2;

    goto LABEL_32;
  }
  if (_NSIsNSData())
  {
    [(_MRValueProtobuf *)v2 setDataValue:v1];
    goto LABEL_31;
  }
  if (_NSIsNSDate())
  {
    uint64_t v5 = _ISO8601DateFormatter_onceToken;
    id v6 = v1;
    if (v5 != -1) {
      dispatch_once(&_ISO8601DateFormatter_onceToken, &__block_literal_global_16);
    }
    uint64_t v7 = [0 stringFromDate:v6];

    [(_MRValueProtobuf *)v2 setDateValue:v7];
    goto LABEL_31;
  }
  if (_NSIsNSArray())
  {
    id v10 = v1;
    uint64_t v11 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v10, "count"));
    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    id v12 = v10;
    uint64_t v13 = [v12 countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)v22;
      do
      {
        for (uint64_t i = 0; i != v14; ++i)
        {
          if (*(void *)v22 != v15) {
            objc_enumerationMutation(v12);
          }
          uint64_t v17 = _MRProtoUtilsProtoValueFromPlistType(*(void *)(*((void *)&v21 + 1) + 8 * i));
          if (v17) {
            objc_msgSend(v11, "addObject:", v17, (void)v21);
          }
        }
        uint64_t v14 = [v12 countByEnumeratingWithState:&v21 objects:v25 count:16];
      }
      while (v14);
    }

    [(_MRValueProtobuf *)v2 setArrayValues:v11];
    uint64_t v18 = v2;
  }
  else
  {
    if (_NSIsNSDictionary())
    {
      uint64_t v19 = _MRProtoUtilsProtoDictionaryFromNSDictionary(v1);
      [(_MRValueProtobuf *)v2 setDictionaryValue:v19];

      goto LABEL_31;
    }
    uint64_t v18 = 0;
  }
LABEL_32:

  return v18;
}

void __MRMediaRemoteServiceGetAudioFormatContentInfoForOrigin_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  CFNumberRef v4 = v3;
  if (v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    uint64_t Error = (void *)MRMediaRemoteCreateError(1);
    uint64_t v7 = 0;
  }
  else
  {
    char v8 = (UInt8 *)MRCreateDataFromXPCMessage(v3, "MRXPC_AUDIO_FORMAT_CONTENT_INFO");
    uint64_t v9 = v8;
    if (v8)
    {
      uint64_t v7 = MRCreateArrayFromData(v8, &__block_literal_global_192);
    }
    else
    {
      id v10 = _MRLogForCategory(0);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v12 = 0;
        _os_log_impl(&dword_194F3C000, v10, OS_LOG_TYPE_DEFAULT, "Didn't receive the audio format content info from the reply.", v12, 2u);
      }

      uint64_t v7 = 0;
    }
    uint64_t Error = (void *)MRCreateClientErrorFromXPCMessage(v4);
  }
  uint64_t v11 = *(void *)(a1 + 32);
  if (v11) {
    (*(void (**)(uint64_t, void *, void *))(v11 + 16))(v11, v7, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceSendContentItemChangedNotification(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  MRCreateXPCMessage(0x20000000000002BuLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  MRAddPlayerPathToXPCMessage(message, a2);
  MRAddContentItemsToXPCMessage(message, a3);
  id v6 = [v5 connection];

  xpc_connection_send_message(v6, message);
}

void MRAddArrayToXPCMessage(void *a1, const char *a2, void *a3, void *a4)
{
  xpc_object_t xdict = a1;
  uint64_t v7 = MRCreateDataFromArray(a3, a4);
  char v8 = v7;
  if (v7)
  {
    id v9 = v7;
    xpc_dictionary_set_data(xdict, a2, (const void *)[v9 bytes], objc_msgSend(v9, "length"));
  }
}

id MRCreateArrayFromData(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (a1)
  {
    CFNumberRef v4 = [MEMORY[0x1E4F28F98] propertyListWithData:a1 options:0 format:0 error:0];
    a1 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v4, "count"));
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = v4;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (!v6) {
      goto LABEL_14;
    }
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v15;
    while (1)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        uint64_t v11 = objc_msgSend(MEMORY[0x1E4F1CA98], "null", (void)v14);

        if (v10 == v11)
        {
          id v12 = [MEMORY[0x1E4F1CA98] null];
LABEL_11:
          [a1 addObject:v12];
          goto LABEL_12;
        }
        id v12 = ((void (**)(id, void *))v3)[2](v3, v10);
        if (v12) {
          goto LABEL_11;
        }
LABEL_12:
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (!v7)
      {
LABEL_14:

        break;
      }
    }
  }

  return a1;
}

id MRCreateDataFromArray(void *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  CFNumberRef v4 = a2;
  if (v3)
  {
    id v5 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v3, "count"));
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v16 = v3;
    id v6 = v3;
    uint64_t v7 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (!v7) {
      goto LABEL_14;
    }
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v18;
    while (1)
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v18 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        id v12 = [MEMORY[0x1E4F1CA98] null];

        if (v11 == v12)
        {
          uint64_t v13 = [MEMORY[0x1E4F1CA98] null];
LABEL_11:
          [v5 addObject:v13];
          goto LABEL_12;
        }
        uint64_t v13 = ((void (**)(id, void *))v4)[2](v4, v11);
        if (v13) {
          goto LABEL_11;
        }
LABEL_12:
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (!v8)
      {
LABEL_14:

        long long v14 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v5 format:200 options:0 error:0];

        id v3 = v16;
        goto LABEL_16;
      }
    }
  }
  long long v14 = 0;
LABEL_16:

  return v14;
}

uint64_t __MRContentItemsCreateExternalRepresentation_block_invoke(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t MRContentItemGetDiscNumber(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 discNumber];

  return v2;
}

uint64_t MRContentItemGetHasInfo(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 infoAvailable];

  return v2;
}

uint64_t MRContentItemGetHasLanguageOptions(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 languageOptionsAvailable];

  return v2;
}

uint64_t MRContentItemGetHasLyrics(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 lyricsAvailable];

  return v2;
}

uint64_t MRContentItemGetTotalDiscCount(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 totalDiscCount];

  return v2;
}

MRContentItem *__MRContentItemsCreateFromExternalRepresentation_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [[MRContentItem alloc] initWithData:v2];

  return v3;
}

double MRContentItemGetStartTime(void *a1)
{
  id v1 = [a1 metadata];
  [v1 startTime];
  double v3 = v2;

  return v3;
}

id MRDecodeObjectWithEncoding(void *a1, uint64_t a2)
{
  id v4 = a1;
  if (a2 == 1)
  {
    double v2 = [MEMORY[0x1E4F28D90] JSONObjectWithData:v4 options:4 error:0];
  }
  else if (!a2)
  {
    id v5 = MSVPropertyListDataClasses();
    double v2 = MSVUnarchivedObjectOfClasses();
  }

  return v2;
}

uint64_t MRContentItemGetTotalTrackCount(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 totalTrackCount];

  return v2;
}

uint64_t MRContentItemGetIsExplicitItem(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 isExplicitItem];

  return v2;
}

uint64_t MRContentItemGetITunesStoreAlbumIdentifier(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 iTunesStoreAlbumIdentifier];

  return v2;
}

id initValAVOutputContextOutputDeviceDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextOutputDeviceDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextOutputDeviceDidChangeNotification, *v0);
  }
  getAVOutputContextOutputDeviceDidChangeNotification = (uint64_t (*)(void))AVOutputContextOutputDeviceDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputContextOutputDeviceDidChangeNotification;

  return v1;
}

id initValAVOutputContextOutputDeviceDidChangeNotification_0()
{
  if (AVFoundationLibrary_sOnce_12 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_12, &__block_literal_global_86);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_12, "AVOutputContextOutputDeviceDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextOutputDeviceDidChangeNotification_0, *v0);
  }
  getAVOutputContextOutputDeviceDidChangeNotification_0[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextOutputDeviceDidChangeNotificationFunction_0;
  id v1 = (void *)constantValAVOutputContextOutputDeviceDidChangeNotification_0;

  return v1;
}

id __MRCreateArrayFomXPCMessage_block_invoke(uint64_t a1)
{
  id v1 = (void *)(*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();

  return v1;
}

uint64_t __MRCreateContentItemsFromXPCMessage_block_invoke(uint64_t a1, uint64_t a2)
{
  return MRContentItemCreateFromExternalRepresentation(*MEMORY[0x1E4F1CF80], a2);
}

id __MRAddContentItemsToXPCMessage_block_invoke(uint64_t a1, void *a2)
{
  ExternalRepresentation = (void *)MRContentItemCreateExternalRepresentation(*MEMORY[0x1E4F1CF80], a2);

  return ExternalRepresentation;
}

uint64_t MRContentItemCreateFromExternalRepresentation(uint64_t a1, uint64_t a2)
{
  double v3 = [MRContentItem alloc];

  return (uint64_t)[(MRContentItem *)v3 initWithData:a2];
}

uint64_t MRContentItemCreateExternalRepresentation(uint64_t a1, void *a2)
{
  return objc_claimAutoreleasedReturnValue();
}

id initValAVOutputDeviceVolumeDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputDeviceVolumeDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceVolumeDidChangeNotification, *v0);
  }
  getAVOutputDeviceVolumeDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceVolumeDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputDeviceVolumeDidChangeNotification;

  return v1;
}

id initValAVOutputDeviceVolumeDidChangeNotification_0()
{
  if (AVFoundationLibrary_sOnce_10 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_10, &__block_literal_global_97);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_10, "AVOutputDeviceVolumeDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceVolumeDidChangeNotification_0, *v0);
  }
  getAVOutputDeviceVolumeDidChangeNotification_0[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceVolumeDidChangeNotificationFunction_0;
  id v1 = (void *)constantValAVOutputDeviceVolumeDidChangeNotification_0;

  return v1;
}

id initValAVOutputDeviceVolumeControlTypeDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputDeviceVolumeControlTypeDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceVolumeControlTypeDidChangeNotification, *v0);
  }
  getAVOutputDeviceVolumeControlTypeDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceVolumeControlTypeDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputDeviceVolumeControlTypeDidChangeNotification;

  return v1;
}

id initValAVOutputDeviceMutedDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputDeviceMutedDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceMutedDidChangeNotification, *v0);
  }
  getAVOutputDeviceMutedDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceMutedDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputDeviceMutedDidChangeNotification;

  return v1;
}

id initValAVOutputDeviceClusterMemberVolumeDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputDeviceClusterMemberVolumeDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceClusterMemberVolumeDidChangeNotification, *v0);
  }
  getAVOutputDeviceClusterMemberVolumeDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceClusterMemberVolumeDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputDeviceClusterMemberVolumeDidChangeNotification;

  return v1;
}

id initValAVOutputDeviceClusterMemberVolumeControlTypeDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputDeviceClusterMemberVolumeControlTypeDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceClusterMemberVolumeControlTypeDidChangeNotification, *v0);
  }
  getAVOutputDeviceClusterMemberVolumeControlTypeDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceClusterMemberVolumeControlTypeDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputDeviceClusterMemberVolumeControlTypeDidChangeNotification;

  return v1;
}

id initValAVOutputDeviceCanSetVolumeDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputDeviceCanSetVolumeDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCanSetVolumeDidChangeNotification, *v0);
  }
  getAVOutputDeviceCanSetVolumeDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceCanSetVolumeDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputDeviceCanSetVolumeDidChangeNotification;

  return v1;
}

id initValAVOutputDeviceCanSetVolumeDidChangeNotification_0()
{
  if (AVFoundationLibrary_sOnce_10 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_10, &__block_literal_global_97);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_10, "AVOutputDeviceCanSetVolumeDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCanSetVolumeDidChangeNotification_0, *v0);
  }
  getAVOutputDeviceCanSetVolumeDidChangeNotification_0[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceCanSetVolumeDidChangeNotificationFunction_0;
  id v1 = (void *)constantValAVOutputDeviceCanSetVolumeDidChangeNotification_0;

  return v1;
}

id initValAVOutputDeviceCanMuteDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputDeviceCanMuteDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCanMuteDidChangeNotification, *v0);
  }
  getAVOutputDeviceCanMuteDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceCanMuteDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputDeviceCanMuteDidChangeNotification;

  return v1;
}

id initValAVOutputDeviceActivatedClusterMembersRoomVolumeDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputDeviceActivatedClusterMembersRoomVolumeDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceActivatedClusterMembersRoomVolumeDidChangeNotification, *v0);
  }
  getAVOutputDeviceActivatedClusterMembersRoomVolumeDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceActivatedClusterMembersRoomVolumeDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputDeviceActivatedClusterMembersRoomVolumeDidChangeNotification;

  return v1;
}

id initValAVOutputContextVolumeControlTypeDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextVolumeControlTypeDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextVolumeControlTypeDidChangeNotification, *v0);
  }
  getAVOutputContextVolumeControlTypeDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextVolumeControlTypeDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputContextVolumeControlTypeDidChangeNotification;

  return v1;
}

id initValAVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification, *v0);
  }
  getAVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification;

  return v1;
}

id initValAVOutputContextPredictedOutputDevicesDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextPredictedOutputDevicesDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextPredictedOutputDevicesDidChangeNotification, *v0);
  }
  getAVOutputContextPredictedOutputDevicesDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextPredictedOutputDevicesDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputContextPredictedOutputDevicesDidChangeNotification;

  return v1;
}

id initValAVOutputContextPredictedOutputDeviceDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextPredictedOutputDeviceDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextPredictedOutputDeviceDidChangeNotification, *v0);
  }
  getAVOutputContextPredictedOutputDeviceDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextPredictedOutputDeviceDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputContextPredictedOutputDeviceDidChangeNotification;

  return v1;
}

id initValAVOutputContextOutputDevicesDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextOutputDevicesDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextOutputDevicesDidChangeNotification, *v0);
  }
  getAVOutputContextOutputDevicesDidChangeNotification = (uint64_t (*)(void))AVOutputContextOutputDevicesDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputContextOutputDevicesDidChangeNotification;

  return v1;
}

id initValAVOutputContextDestinationChangeInitiatedNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextDestinationChangeInitiatedNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextDestinationChangeInitiatedNotification, *v0);
  }
  getAVOutputContextDestinationChangeInitiatedNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextDestinationChangeInitiatedNotificationFunction;
  id v1 = (void *)constantValAVOutputContextDestinationChangeInitiatedNotification;

  return v1;
}

id initValAVOutputContextCanSetVolumeDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextCanSetVolumeDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextCanSetVolumeDidChangeNotification, *v0);
  }
  getAVOutputContextCanSetVolumeDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextCanSetVolumeDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputContextCanSetVolumeDidChangeNotification;

  return v1;
}

id AVOutputDeviceMutedDidChangeNotificationFunction()
{
  return (id)constantValAVOutputDeviceMutedDidChangeNotification;
}

id AVOutputDeviceCanMuteDidChangeNotificationFunction()
{
  return (id)constantValAVOutputDeviceCanMuteDidChangeNotification;
}

void MRAddContentItemsToXPCMessage(void *a1, void *a2)
{
}

MRNowPlayingAudioFormatContentInfo *__MRMediaRemoteServiceGetAudioFormatContentInfoForOrigin_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = a2;
  double v3 = [[MRNowPlayingAudioFormatContentInfo alloc] initWithData:v2];

  return v3;
}

MROrigin *MRCreateOriginFromXPCMessage(void *a1)
{
  id v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_ORIGIN_DATA_KEY");
  if (v1) {
    id v2 = [[MROrigin alloc] initWithData:v1];
  }
  else {
    id v2 = 0;
  }

  return v2;
}

void __MRMediaRemoteServiceRequestNowPlayingPlaybackQueue_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = (void *)MRMediaRemoteCreateError(1);
    id v6 = 0;
  }
  else
  {
    uint64_t Error = (void *)MRCreateClientErrorFromXPCMessage(v3);
    id v6 = MRCreatePlaybackQueueFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, MRPlaybackQueue *, void *))(v7 + 16))(v7, v6, Error);
  }
  kdebug_trace();
}

MRPlaybackQueue *MRCreatePlaybackQueueFromXPCMessage(void *a1)
{
  id v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_NOWPLAYING_PLAYBACK_QUEUE_KEY");
  if (v1) {
    id v2 = [[MRPlaybackQueue alloc] initWithData:v1];
  }
  else {
    id v2 = 0;
  }

  return v2;
}

void MRAddDeviceInfoToXPCMessage(void *a1, void *a2)
{
  if (a2)
  {
    id v3 = a1;
    id v4 = [a2 data];
    MRAddDataToXPCMessage(v3, v4, "MRXPC_PAIRED_EXTERNAL_DEVICE");
  }
}

uint64_t _MRDeviceInfoMessageProtobuf_DeviceClassFromModel(uint64_t result)
{
  if ((unint64_t)(result - 1) < 0xD) {
    return result;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

void __MRMediaRemoteServiceSetNowPlayingPlayer_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = MRMediaRemoteCreateError(1);
  }
  else
  {
    uint64_t Error = MRCreateClientErrorFromXPCMessage(v3);
  }
  id v6 = (void *)Error;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v6);
  }
  kdebug_trace();
}

MRPlayerPath *MRCreatePlayerPathFromXPCMessage(void *a1)
{
  id v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_NOWPLAYING_PLAYER_PATH_DATA_KEY");
  if (v1 && (id v2 = [[MRPlayerPath alloc] initWithData:v1]) != 0)
  {
    id v3 = v2;
    BOOL v4 = [(MRPlayerPath *)v2 client];
    id v5 = [v4 bundleIdentifier];
    int v6 = [v4 processIdentifier];
    if (v5) {
      BOOL v7 = 0;
    }
    else {
      BOOL v7 = v6 <= 0;
    }
    if (v7) {
      [(MRPlayerPath *)v3 setClient:0];
    }
    id v8 = [(MRPlayerPath *)v3 player];
    uint64_t v9 = [v8 identifier];

    if (!v9) {
      [(MRPlayerPath *)v3 setPlayer:0];
    }
  }
  else
  {
    id v3 = objc_alloc_init(MRPlayerPath);
  }

  return v3;
}

uint64_t MRCreateClientErrorFromXPCMessage(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1 == (id)MEMORY[0x1E4F14520])
  {
    id v10 = objc_alloc(MEMORY[0x1E4F28C58]);
    uint64_t v11 = @"XPC Interruption";
LABEL_10:
    uint64_t Error = [v10 initWithMRError:1 description:v11];
    goto LABEL_11;
  }
  if (v1 == (id)MEMORY[0x1E4F14528])
  {
    id v10 = objc_alloc(MEMORY[0x1E4F28C58]);
    uint64_t v11 = @"XPC Invalidation";
    goto LABEL_10;
  }
  if (!v1) {
    goto LABEL_12;
  }
  size_t length = 0;
  data = xpc_dictionary_get_data(v1, "MRXPC_CLIENT_ERROR_DATA_KEY", &length);
  if (!data
    || (BOOL v4 = data,
        id v5 = objc_alloc(MEMORY[0x1E4F1C9B8]),
        int v6 = (void *)[v5 initWithBytes:v4 length:length],
        uint64_t v7 = MRCreateClientErrorFromExternalRepresentation((uint64_t)v6),
        v6,
        !v7))
  {
    uint64_t uint64 = xpc_dictionary_get_uint64(v2, "MRXPC_ERROR_CODE_KEY");
    if (uint64)
    {
      uint64_t Error = MRMediaRemoteCreateError(uint64);
LABEL_11:
      uint64_t v7 = Error;
      goto LABEL_13;
    }
LABEL_12:
    uint64_t v7 = 0;
  }
LABEL_13:

  return v7;
}

uint64_t __MRMediaRemoteServiceSetNowPlayingPlaybackQueueCapabilities_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

uint64_t __MRMediaRemoteServiceSetSupportedCommands_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

uint64_t __MRMediaRemoteSetSupportedCommandsForPlayer_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t __MRMediaRemoteServiceResolvePlayerPath_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __MRMediaRemoteServiceSetDefaultSupportedCommands_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

MRDeviceInfo *MRCreateDeviceInfoFromXPCMessage(void *a1)
{
  uint64_t v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_PAIRED_EXTERNAL_DEVICE");
  id v2 = [[MRDeviceInfo alloc] initWithData:v1];

  return v2;
}

uint64_t __MRMediaRemoteNowPlayingResolvePlayerPathWithID_block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __MRMediaRemoteServiceSetNowPlayingPlaybackQueue_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void __MRMediaRemoteSetNowPlayingPlayer_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = *(void **)(a1 + 40);
  if (v4)
  {
    id v5 = *(NSObject **)(a1 + 32);
    v6[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = __MRMediaRemoteSetNowPlayingPlayer_block_invoke_2;
    v6[3] = &unk_1E57D0DB8;
    id v8 = v4;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t MRDeviceClassFromProtobuf(int a1)
{
  uint64_t v1 = (a1 - 1);
  if (v1 < 0xD) {
    return v1 + 1;
  }
  else {
    return -1;
  }
}

uint64_t MRCreatePropertyListFromXPCMessage(void *a1, const char *a2)
{
  id v2 = (UInt8 *)MRCreateDataFromXPCMessage(a1, a2);
  if (v2)
  {
    id v7 = 0;
    uint64_t v3 = [MEMORY[0x1E4F28F98] propertyListWithData:v2 options:0 format:0 error:&v7];
    id v4 = v7;
    if (v4)
    {
      id v5 = _MRLogForCategory(0);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        MRCreatePropertyListFromXPCMessage_cold_1();
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

const UInt8 *MRCreateDataFromXPCMessage(void *a1, const char *a2)
{
  size_t length = 0;
  uint64_t result = (const UInt8 *)xpc_dictionary_get_data(a1, a2, &length);
  if (result) {
    return (const UInt8 *)CFDataCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], result, length);
  }
  return result;
}

char *MRCreateStringFromXPCMessage(void *a1, const char *a2)
{
  string = (char *)xpc_dictionary_get_string(a1, a2);
  if (string) {
    string = (char *)[[NSString alloc] initWithUTF8String:string];
  }

  return string;
}

uint64_t MRContentItemGetITunesStoreArtistIdentifier(void *a1)
{
  uint64_t v1 = [a1 metadata];
  uint64_t v2 = [v1 iTunesStoreArtistIdentifier];

  return v2;
}

float MRContentItemGetPlaybackRate(void *a1)
{
  uint64_t v1 = [a1 metadata];
  [v1 playbackRate];
  float v3 = v2;

  return v3;
}

uint64_t MRPlaybackQueueRequestSetLabel(void *a1, uint64_t a2)
{
  if (a1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v5 = [MEMORY[0x1E4F28B00] currentHandler];
      int v6 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRPlaybackQueueRequestSetLabel(MRPlaybackQueueRequestRef, CFStringRef)");
      uint64_t v7 = objc_opt_class();
      [v5 handleFailureInFunction:v6, @"MRPlaybackQueueRequest_Deprecated.m", 169, @"Type mismatch, expecting %@ found %@", v7, objc_opt_class() file lineNumber description];
    }
  }

  return [a1 setLabel:a2];
}

uint64_t __MRAVEndpointResolveActiveSystemEndpointWithType_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void *MRNowPlayingClientGetParentAppBundleIdentifier(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      id v5 = [NSString stringWithUTF8String:"CFStringRef MRNowPlayingClientGetParentAppBundleIdentifier(MRNowPlayingClientRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 101, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  float v2 = [v1 parentApplicationBundleIdentifier];

  return v2;
}

uint64_t MRContentItemSetNowPlayingInfo(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return [a1 setNowPlayingInfo:a2 policy:a3 request:a4];
}

uint64_t MRContentItemGetIsLoading(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 isLoading];

  return v2;
}

uint64_t MRContentItemGetIsInTransition(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 isInTransition];

  return v2;
}

uint64_t MRContentItemGetIsAlwaysLive(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 isAlwaysLive];

  return v2;
}

id MRLogCategoryDiscovery()
{
  if (MRLogCategoryDiscovery__once != -1) {
    dispatch_once(&MRLogCategoryDiscovery__once, &__block_literal_global_3_0);
  }
  v0 = (void *)MRLogCategoryDiscovery__log;

  return v0;
}

void *MRPlaybackQueueGetQueueID(void *a1)
{
  id v1 = [a1 queueIdentifier];

  return v1;
}

uint64_t MRAVOutputDeviceCopyModelID(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  float v3 = [a1 modelID];
  uint64_t v4 = [v3 copy];

  return v4;
}

uint64_t MRAVRoutingDiscoverySessionCopyAvailableEndpoints(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  float v3 = [a1 availableEndpoints];
  uint64_t v4 = [v3 copy];

  return v4;
}

void MRMediaRemoteSetDefaultSupportedCommands(void *a1, void *a2, void *a3)
{
}

void *MRPlaybackQueueCapabilitiesCopyDescription(uint64_t a1)
{
  id v2 = objc_alloc_init(NSString);
  float v3 = v2;
  if (!a1)
  {
    uint64_t v4 = @"None";
LABEL_10:
    uint64_t v7 = [v3 stringByAppendingString:v4];

    return (void *)v7;
  }
  if ((a1 & 2) != 0)
  {
    uint64_t v5 = [v2 stringByAppendingString:@"range|"];

    float v3 = (void *)v5;
    if ((a1 & 4) == 0)
    {
LABEL_4:
      if ((a1 & 8) == 0) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v6 = [v3 stringByAppendingString:@"identifier|"];

  float v3 = (void *)v6;
  if ((a1 & 8) != 0)
  {
LABEL_9:
    uint64_t v4 = @"request";
    goto LABEL_10;
  }
  return v3;
}

uint64_t MRContentItemCopyAlbumYear(void *a1)
{
  id v1 = [a1 metadata];
  id v2 = [v1 albumYear];
  uint64_t v3 = [v2 copy];

  return v3;
}

double MRContentItemGetElapsedTime(void *a1)
{
  id v1 = [a1 metadata];
  [v1 elapsedTime];
  double v3 = v2;

  return v3;
}

float MRContentItemGetDefaultPlaybackRate(void *a1)
{
  id v1 = [a1 metadata];
  [v1 defaultPlaybackRate];
  float v3 = v2;

  return v3;
}

uint64_t __MRMediaRemoteGetSupportedCommandsForPlayer_block_invoke_41(void *a1)
{
  uint64_t result = a1[6];
  if (result)
  {
    if (a1[4]) {
      uint64_t v3 = a1[4];
    }
    else {
      uint64_t v3 = MEMORY[0x1E4F1CBF0];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, v3, a1[5]);
  }
  return result;
}

void *MRMediaRemoteCopyPendingCommands(uint64_t a1, MRPlayerPath **a2)
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = [MRPlayerPath alloc];
  uint64_t v5 = +[MROrigin localOrigin];
  uint64_t v6 = +[MRClient localClient];
  uint64_t v7 = [(MRPlayerPath *)v4 initWithOrigin:v5 client:v6 player:a1];

  id v8 = [MEMORY[0x1E4F1C9C8] date];
  uint64_t v9 = [MEMORY[0x1E4F29128] UUID];
  id v10 = [v9 UUIDString];

  uint64_t v11 = (__CFString *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"copyPendingCommands", v10];
  id v12 = v11;
  if (v7) {
    [(__CFString *)v11 appendFormat:@" for %@", v7];
  }
  uint64_t v13 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    v54 = v12;
    _os_log_impl(&dword_194F3C000, v13, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  long long v14 = +[MRNowPlayingOriginClientManager sharedManager];
  long long v15 = [v14 clientForPlayerPath:v7];

  uint64_t v51 = v7;
  if ([v15 canBeNowPlayingForPlayer:v7])
  {
    id v16 = _MRLogForCategory(2uLL);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_FAULT)) {
      MRMediaRemoteCopyPendingCommands_cold_1(v16);
    }

    long long v17 = (MRPlayerPath *)[objc_alloc(MEMORY[0x1E4F28C58]) initWithMRError:2 description:@"Cannot call 'CopyPendingCommands' if CanBeNowPlayingA=YES"];
    long long v18 = 0;
    if (v17) {
      goto LABEL_9;
    }
  }
  else
  {
    char v27 = MRCreateXPCMessage(0x400000000000006uLL);
    MRAddPlayerPathToXPCMessage(v27, v7);
    uint64_t v28 = +[MRMediaRemoteServiceClient sharedServiceClient];
    [v28 service];
    unint64_t v29 = v15;
    int v30 = v10;
    unint64_t v32 = v31 = a2;
    [v32 mrXPCConnection];
    v34 = uint64_t v33 = v8;
    id v52 = 0;
    unsigned int v35 = [v34 sendSyncMessage:v27 error:&v52];
    long long v17 = (MRPlayerPath *)v52;

    id v8 = v33;
    a2 = v31;
    id v10 = v30;
    long long v15 = v29;

    long long v18 = (void *)MRCreatePropertyListFromXPCMessage(v35, "MRXPC_COMMAND_KEY");
    if (v17)
    {
LABEL_9:
      long long v19 = _MRLogForCategory(0xAuLL);
      BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);
      long long v21 = v51;
      if (v51)
      {
        if (!v20) {
          goto LABEL_30;
        }
        uint64_t v22 = [MEMORY[0x1E4F1C9C8] date];
        [(MRPlayerPath *)v22 timeIntervalSinceDate:v8];
        *(_DWORD *)long long buf = 138544386;
        v54 = @"copyPendingCommands";
        __int16 v55 = 2114;
        uint64_t v56 = v10;
        __int16 v57 = 2114;
        v58 = v17;
        __int16 v59 = 2114;
        uint64_t v60 = v51;
        __int16 v61 = 2048;
        uint64_t v62 = v23;
        long long v24 = "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds";
        uint64_t v25 = v19;
        uint32_t v26 = 52;
      }
      else
      {
        if (!v20) {
          goto LABEL_30;
        }
        uint64_t v22 = [MEMORY[0x1E4F1C9C8] date];
        [(MRPlayerPath *)v22 timeIntervalSinceDate:v8];
        *(_DWORD *)long long buf = 138544130;
        v54 = @"copyPendingCommands";
        __int16 v55 = 2114;
        uint64_t v56 = v10;
        __int16 v57 = 2114;
        v58 = v17;
        __int16 v59 = 2048;
        uint64_t v60 = v43;
        long long v24 = "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds";
        uint64_t v25 = v19;
        uint32_t v26 = 42;
      }
      _os_log_error_impl(&dword_194F3C000, v25, OS_LOG_TYPE_ERROR, v24, buf, v26);
      goto LABEL_29;
    }
  }
  uint64_t v36 = (void *)MRMediaRemoteCopyCommandsDescription(v18);

  long long v19 = _MRLogForCategory(0xAuLL);
  BOOL v37 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
  long long v21 = v51;
  if (v36)
  {
    if (v51)
    {
      if (!v37) {
        goto LABEL_30;
      }
      uint64_t v22 = (MRPlayerPath *)MRMediaRemoteCopyCommandsDescription(v18);
      uint64_t v38 = [MEMORY[0x1E4F1C9C8] date];
      [v38 timeIntervalSinceDate:v8];
      *(_DWORD *)long long buf = 138544386;
      v54 = @"copyPendingCommands";
      __int16 v55 = 2114;
      uint64_t v56 = v10;
      __int16 v57 = 2112;
      v58 = v22;
      __int16 v59 = 2114;
      uint64_t v60 = v51;
      __int16 v61 = 2048;
      uint64_t v62 = v39;
      char v40 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
      id v41 = v19;
      uint32_t v42 = 52;
    }
    else
    {
      if (!v37) {
        goto LABEL_30;
      }
      uint64_t v22 = (MRPlayerPath *)MRMediaRemoteCopyCommandsDescription(v18);
      uint64_t v38 = [MEMORY[0x1E4F1C9C8] date];
      [v38 timeIntervalSinceDate:v8];
      *(_DWORD *)long long buf = 138544130;
      v54 = @"copyPendingCommands";
      __int16 v55 = 2114;
      uint64_t v56 = v10;
      __int16 v57 = 2112;
      v58 = v22;
      __int16 v59 = 2048;
      uint64_t v60 = v48;
      char v40 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
      id v41 = v19;
      uint32_t v42 = 42;
    }
    _os_log_impl(&dword_194F3C000, v41, OS_LOG_TYPE_DEFAULT, v40, buf, v42);
  }
  else
  {
    if (v51)
    {
      if (!v37) {
        goto LABEL_30;
      }
      uint64_t v22 = [MEMORY[0x1E4F1C9C8] date];
      [(MRPlayerPath *)v22 timeIntervalSinceDate:v8];
      *(_DWORD *)long long buf = 138544130;
      v54 = @"copyPendingCommands";
      __int16 v55 = 2114;
      uint64_t v56 = v10;
      __int16 v57 = 2114;
      v58 = v51;
      __int16 v59 = 2048;
      uint64_t v60 = v44;
      __int16 v45 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      id v46 = v19;
      uint32_t v47 = 42;
    }
    else
    {
      if (!v37) {
        goto LABEL_30;
      }
      uint64_t v22 = [MEMORY[0x1E4F1C9C8] date];
      [(MRPlayerPath *)v22 timeIntervalSinceDate:v8];
      *(_DWORD *)long long buf = 138543874;
      v54 = @"copyPendingCommands";
      __int16 v55 = 2114;
      uint64_t v56 = v10;
      __int16 v57 = 2048;
      v58 = v49;
      __int16 v45 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      id v46 = v19;
      uint32_t v47 = 32;
    }
    _os_log_impl(&dword_194F3C000, v46, OS_LOG_TYPE_DEFAULT, v45, buf, v47);
  }
LABEL_29:

LABEL_30:
  if (a2) {
    *a2 = v17;
  }

  return v18;
}

uint64_t MRMediaRemoteCopyCommandsDescription(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = a1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = MRMediaRemoteCopyCommandDescription([*(id *)(*((void *)&v11 + 1) + 8 * v7) longValue]);
        [v2 addObject:v8];

        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  uint64_t v9 = [[NSString alloc] initWithFormat:@"%@", v2];
  return v9;
}

id initValAVSystemController_SubscribeToNotificationsAttribute()
{
  if (MediaExperienceLibrary_sOnce_1 != -1) {
    dispatch_once(&MediaExperienceLibrary_sOnce_1, &__block_literal_global_369);
  }
  v0 = (id *)dlsym((void *)MediaExperienceLibrary_sLib_1, "AVSystemController_SubscribeToNotificationsAttribute");
  if (v0) {
    objc_storeStrong((id *)&constantValAVSystemController_SubscribeToNotificationsAttribute, *v0);
  }
  getAVSystemController_SubscribeToNotificationsAttribute[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVSystemController_SubscribeToNotificationsAttributeFunction;
  id v1 = (void *)constantValAVSystemController_SubscribeToNotificationsAttribute;

  return v1;
}

id initValAVSystemController_ServerConnectionDiedNotification()
{
  if (AVFoundationLibrary_sOnce_9 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_9, &__block_literal_global_373);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_9, "AVSystemController_ServerConnectionDiedNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVSystemController_ServerConnectionDiedNotification, *v0);
  }
  getAVSystemController_ServerConnectionDiedNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVSystemController_ServerConnectionDiedNotificationFunction;
  id v1 = (void *)constantValAVSystemController_ServerConnectionDiedNotification;

  return v1;
}

id AVSystemController_ServerConnectionDiedNotificationFunction()
{
  return (id)constantValAVSystemController_ServerConnectionDiedNotification;
}

uint64_t MRMediaRemoteSetCanBeNowPlayingForPlayer(void *a1, int a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  uint64_t v4 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = @"YES";
    if (!a2) {
      uint64_t v5 = @"NO";
    }
    int v17 = 138412546;
    id v18 = v3;
    __int16 v19 = 2112;
    BOOL v20 = v5;
    _os_log_impl(&dword_194F3C000, v4, OS_LOG_TYPE_DEFAULT, "[MRNowPlaying] MRMediaRemoteSetCanBeNowPlayingForPlayer %@ set to %@", (uint8_t *)&v17, 0x16u);
  }

  uint64_t v6 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v7 = [v6 clientForPlayerPath:v3];

  int v8 = [v7 canBeNowPlaying];
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:v3];

  [v10 setCanBeNowPlayingPlayer:a2 != 0];
  [v7 setPerPlayerCanBeNowPlaying:1];
  if (v8 != [v7 canBeNowPlaying])
  {
    long long v11 = [(Class)getAVSystemControllerClass[0]() sharedAVSystemController];
    long long v12 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v7, "canBeNowPlaying"));
    long long v13 = getAVSystemController_CanBeNowPlayingAppAttribute[0]();
    [v11 setAttribute:v12 forKey:v13 error:0];
  }
  long long v14 = (void *)MRGetSharedService();
  long long v15 = [v10 playerPath];
  MRMediaRemoteServiceSetCanBeNowPlayingAppForPlayer(v14, a2 != 0, v15, 0.0);

  return 1;
}

void sub_194F74B8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F74C9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_194F74DA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

Class initAVSystemController()
{
  if (MediaExperienceLibrary_sOnce != -1) {
    dispatch_once(&MediaExperienceLibrary_sOnce, &__block_literal_global_612);
  }
  Class result = objc_getClass("AVSystemController");
  classAVSystemController = (uint64_t)result;
  getAVSystemControllerClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVSystemControllerFunction;
  return result;
}

Class initAVSystemController_0()
{
  if (MediaExperienceLibrary_sOnce_1 != -1) {
    dispatch_once(&MediaExperienceLibrary_sOnce_1, &__block_literal_global_369);
  }
  Class result = objc_getClass("AVSystemController");
  classAVSystemController_0 = (uint64_t)result;
  getAVSystemControllerClass_0[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVSystemControllerFunction_0;
  return result;
}

id initValAVSystemController_CanBeNowPlayingAppAttribute()
{
  if (MediaExperienceLibrary_sOnce != -1) {
    dispatch_once(&MediaExperienceLibrary_sOnce, &__block_literal_global_612);
  }
  v0 = (id *)dlsym((void *)MediaExperienceLibrary_sLib, "AVSystemController_CanBeNowPlayingAppAttribute");
  if (v0) {
    objc_storeStrong((id *)&constantValAVSystemController_CanBeNowPlayingAppAttribute, *v0);
  }
  getAVSystemController_CanBeNowPlayingAppAttribute[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVSystemController_CanBeNowPlayingAppAttributeFunction;
  id v1 = (void *)constantValAVSystemController_CanBeNowPlayingAppAttribute;

  return v1;
}

id initValAVSystemController_CanBeNowPlayingAppAttribute_0()
{
  if (MediaExperienceLibrary_sOnce_1 != -1) {
    dispatch_once(&MediaExperienceLibrary_sOnce_1, &__block_literal_global_369);
  }
  v0 = (id *)dlsym((void *)MediaExperienceLibrary_sLib_1, "AVSystemController_CanBeNowPlayingAppAttribute");
  if (v0) {
    objc_storeStrong((id *)&constantValAVSystemController_CanBeNowPlayingAppAttribute_0, *v0);
  }
  getAVSystemController_CanBeNowPlayingAppAttribute_0[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVSystemController_CanBeNowPlayingAppAttributeFunction_0;
  id v1 = (void *)constantValAVSystemController_CanBeNowPlayingAppAttribute_0;

  return v1;
}

MRSendCommandResultStatus *__MRMediaRemoteAddAsyncCommandHandlerBlockForPlayer_block_invoke_3(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 unsignedIntValue];

  return +[MRSendCommandResultStatus statusWithCode:v2];
}

id kMXSession_SourceFormatInfoKey_BestAvailableContentType_MultichannelFunction()
{
  return (id)constantValkMXSession_SourceFormatInfoKey_BestAvailableContentType_Multichannel;
}

id kMXSession_SourceFormatInfoKey_BestAvailableContentType_AtmosFunction()
{
  return (id)constantValkMXSession_SourceFormatInfoKey_BestAvailableContentType_Atmos;
}

uint64_t MRPlaybackQueueCopyContentItems(void *a1)
{
  id v1 = [a1 contentItems];
  uint64_t v2 = [v1 copy];

  return v2;
}

id MRComputeBaseRouteUID(void *a1, _DWORD *a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 componentsSeparatedByString:@"-"];
  if ((unint64_t)[v4 count] < 2)
  {
    int v9 = 0;
    id v8 = 0;
    if (a2) {
LABEL_8:
    }
      *a2 = v9;
  }
  else
  {
    uint64_t v5 = [v4 lastObject];
    uint64_t v6 = [&unk_1EE66F490 objectForKeyedSubscript:v5];
    if (v6)
    {
      uint64_t v7 = objc_msgSend(v4, "subarrayWithRange:", 0, objc_msgSend(v4, "count") - 1);
      id v8 = [v7 componentsJoinedByString:@"-"];

      int v9 = [v6 unsignedIntValue];
    }
    else
    {
      id v8 = v3;
      int v9 = 0;
    }

    if (a2) {
      goto LABEL_8;
    }
  }
  if (v8) {
    id v10 = v8;
  }
  else {
    id v10 = v3;
  }
  id v11 = v10;

  return v11;
}

uint64_t MRNowPlayingClientGetProcessIdentifier(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v5 = [NSString stringWithUTF8String:"pid_t MRNowPlayingClientGetProcessIdentifier(MRNowPlayingClientRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 66, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  uint64_t v2 = [v1 processIdentifier];

  return v2;
}

uint64_t MRPlaybackQueueRequestGetRange(void *a1)
{
  if (a1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v5 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v6 = [NSString stringWithUTF8String:"CFRange MRPlaybackQueueRequestGetRange(MRPlaybackQueueRequestRef)"];
      uint64_t v7 = objc_opt_class();
      [v5 handleFailureInFunction:v6, @"MRPlaybackQueueRequest_Deprecated.m", 193, @"Type mismatch, expecting %@ found %@", v7, objc_opt_class() file lineNumber description];
    }
  }
  id v2 = a1;
  uint64_t v3 = [v2 location];
  [v2 length];

  return v3;
}

void sub_194F779B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *MRNowPlayingPlayerPathGetPlayer(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v5 = [NSString stringWithUTF8String:"MRNowPlayingPlayerRef MRNowPlayingPlayerPathGetPlayer(MRNowPlayingPlayerPathRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 418, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  id v2 = [v1 player];

  return v2;
}

void *MRNowPlayingPlayerPathGetOrigin(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v5 = [NSString stringWithUTF8String:"MROriginRef MRNowPlayingPlayerPathGetOrigin(MRNowPlayingPlayerPathRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 404, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  id v2 = [v1 origin];

  return v2;
}

void *MRNowPlayingPlayerGetIdentifier(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v5 = [NSString stringWithUTF8String:"CFStringRef MRNowPlayingPlayerGetIdentifier(MRNowPlayingPlayerRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 302, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  id v2 = [v1 identifier];

  return v2;
}

CFTypeRef MRContentItemGetCurrentLanguageOptions(void *a1)
{
  CFTypeRef result = [a1 currentLanguageOptions];
  if (result)
  {
    return CFAutorelease(result);
  }
  return result;
}

CFTypeRef MRContentItemGetAvailableLanguageOptions(void *a1)
{
  CFTypeRef result = [a1 availableLanguageOptions];
  if (result)
  {
    return CFAutorelease(result);
  }
  return result;
}

CFTypeRef MRContentItemGetTrackArtistName(void *a1)
{
  id v1 = [a1 metadata];
  id v2 = [v1 trackArtistName];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

CFTypeRef MRContentItemGetComposer(void *a1)
{
  id v1 = [a1 metadata];
  id v2 = [v1 composer];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

CFTypeRef MRContentItemGetAlbumName(void *a1)
{
  id v1 = [a1 metadata];
  id v2 = [v1 albumName];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

uint64_t MRAVOutputDeviceCopySourceInfo(void *a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 sourceInfo];
  return v3;
}

void __MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer_block_invoke(uint64_t a1)
{
}

uint64_t __MRMediaRemoteGetPlaybackStateForPlayer_block_invoke_572(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(unsigned int *)(a1 + 40));
  }
  return result;
}

void sub_194F78E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F79488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_194F79A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F7AC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F7AD54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t MRAVOutputDeviceSubtypeFromAVSubtype(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x13) {
    return 0;
  }
  else {
    return dword_195224560[a1 - 1];
  }
}

id MRLogCategoryDiscoveryUpdates()
{
  if (MRLogCategoryDiscoveryUpdates_onceToken != -1) {
    dispatch_once(&MRLogCategoryDiscoveryUpdates_onceToken, &__block_literal_global_12);
  }
  v0 = (void *)MRLogCategoryDiscoveryUpdates_log;

  return v0;
}

uint64_t MRContentItemCopyAuxiliaryNowPlayingInfo(void *a1)
{
  id v1 = [a1 metadata];
  id v2 = [v1 nowPlayingInfo];
  uint64_t v3 = [v2 copy];

  return v3;
}

void *__MediaExperienceLibrary_block_invoke()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/MediaExperience.framework/MediaExperience", 2);
  MediaExperienceLibrary_sLib = (uint64_t)result;
  return result;
}

void *__MediaExperienceLibrary_block_invoke_0()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/MediaExperience.framework/MediaExperience", 2);
  MediaExperienceLibrary_sLib_0 = (uint64_t)result;
  return result;
}

void *__MediaExperienceLibrary_block_invoke_1()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/MediaExperience.framework/MediaExperience", 2);
  MediaExperienceLibrary_sLib_1 = (uint64_t)result;
  return result;
}

void sub_194F7D920(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *MRAddDeviceInfoToUserInfo(void *a1, const char *a2)
{
  if (a1)
  {
    if (a2) {
      return (void *)[a1 setObject:a2 forKeyedSubscript:@"kMRPairedDeviceUserInfoKey"];
    }
  }
  return a1;
}

void MRMediaRemoteSetNowPlayingPlayer(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    id v5 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = a1;
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 clientForPlayerPath:v8];

  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = __MRMediaRemoteSetNowPlayingPlayer_block_invoke;
  v13[3] = &unk_1E57D0DE0;
  id v14 = v5;
  id v15 = v6;
  id v11 = v5;
  id v12 = v6;
  [v10 updateActivePlayerPath:v8 completion:v13];
}

void sub_194F7E004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __MRMediaRemoteAddCommandHandlerBlockForPlayer_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  id v8 = a4;
  id v9 = (id)v7(v6, a2, a3);
  v8[2](v8, v9);
}

void __MRAnalyticsSendEvent_block_invoke()
{
  uint64_t v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v0 = dispatch_queue_attr_make_with_qos_class(v3, QOS_CLASS_UTILITY, 0);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.mediaremote.MRAnalytics", v0);
  id v2 = (void *)MRAnalyticsSendEvent___analyticsQueue;
  MRAnalyticsSendEvent___analyticsQueue = (uint64_t)v1;
}

uint64_t MRAVOutputDeviceCopyModelSpecificInformation(void *a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 modelSpecificInfo];
  uint64_t v4 = [v3 copy];

  return v4;
}

void sub_194F7F018(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F7F090(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

__CFString *MRAVOutputDeviceTypeCopyDescription(unsigned int a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E57D8C80[a1];
  }
}

__CFString *MRAVOutputDeviceSubtypeCopyDescription(unsigned int a1)
{
  if (a1 > 0x15) {
    return 0;
  }
  else {
    return off_1E57D8CB0[a1];
  }
}

id AVOutputDeviceBatteryLevelRightKeyFunction()
{
  return (id)constantValAVOutputDeviceBatteryLevelRightKey;
}

id AVOutputDeviceBatteryLevelLeftKeyFunction()
{
  return (id)constantValAVOutputDeviceBatteryLevelLeftKey;
}

id AVOutputDeviceBatteryLevelCaseKeyFunction()
{
  return (id)constantValAVOutputDeviceBatteryLevelCaseKey;
}

void MRMediaRemoteSetSupportedCommandsForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (!v7)
  {
    id v7 = (id)MEMORY[0x1E4F14428];
    id v9 = MEMORY[0x1E4F14428];
  }
  id v10 = +[MRNowPlayingOriginClientManager sharedManager];
  id v11 = [v10 playerClientForPlayerPath:a2];

  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = __MRMediaRemoteSetSupportedCommandsForPlayer_block_invoke;
  v13[3] = &unk_1E57D0FE8;
  id v14 = v8;
  id v12 = v8;
  [v11 setSupportedCommands:a1 queue:v7 completion:v13];
}

void sub_194F807B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 176), 8);
  _Unwind_Resume(a1);
}

void MRAddPlayerPathToUserInfo(void *a1, void *a2)
{
  id v7 = a1;
  id v3 = a2;
  if (v7 && v3)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      id v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRAddPlayerPathToUserInfo(NSMutableDictionary *__strong, MRPlayerPath *__strong)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRSerializationUtility.m", 719, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
    [v7 setObject:v3 forKeyedSubscript:@"kMRNowPlayingPlayerPathUserInfoKey"];
  }
}

void sub_194F81260(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void MRMediaRemoteServiceSetNowPlayingPlayer(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x200000000000024uLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  id v11 = [v9 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceSetNowPlayingPlayer_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v14 = v7;
  id v12 = v7;
  xpc_connection_send_message_with_reply(v11, v10, v8, handler);
}

id initValAVOutputDeviceBatteryLevelRightKey()
{
  if (AVFoundationLibrary_sOnce_0 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_0, &__block_literal_global_682);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_0, "AVOutputDeviceBatteryLevelRightKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceBatteryLevelRightKey, *v0);
  }
  getAVOutputDeviceBatteryLevelRightKey[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceBatteryLevelRightKeyFunction;
  dispatch_queue_t v1 = (void *)constantValAVOutputDeviceBatteryLevelRightKey;

  return v1;
}

id initValAVOutputDeviceBatteryLevelLeftKey()
{
  if (AVFoundationLibrary_sOnce_0 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_0, &__block_literal_global_682);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_0, "AVOutputDeviceBatteryLevelLeftKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceBatteryLevelLeftKey, *v0);
  }
  getAVOutputDeviceBatteryLevelLeftKey[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceBatteryLevelLeftKeyFunction;
  dispatch_queue_t v1 = (void *)constantValAVOutputDeviceBatteryLevelLeftKey;

  return v1;
}

id initValAVOutputDeviceBatteryLevelCaseKey()
{
  if (AVFoundationLibrary_sOnce_0 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_0, &__block_literal_global_682);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_0, "AVOutputDeviceBatteryLevelCaseKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceBatteryLevelCaseKey, *v0);
  }
  getAVOutputDeviceBatteryLevelCaseKey[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceBatteryLevelCaseKeyFunction;
  dispatch_queue_t v1 = (void *)constantValAVOutputDeviceBatteryLevelCaseKey;

  return v1;
}

uint64_t MRCreateArrayFomXPCMessage(void *a1, const char *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (UInt8 *)MRCreateDataFromXPCMessage(a1, a2);
  v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __MRCreateArrayFomXPCMessage_block_invoke;
  v10[3] = &unk_1E57D46E0;
  id v11 = v5;
  id v7 = v5;
  uint64_t v8 = MRCreateArrayFromData(v6, v10);

  return v8;
}

CFTypeRef MRContentItemGetCollectionIdentifier(void *a1)
{
  dispatch_queue_t v1 = [a1 metadata];
  id v2 = [v1 collectionIdentifier];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

uint64_t MRAVOutputDeviceCopyLocalDeviceLocalizedName()
{
  v0 = (void *)MEMORY[0x199718E70]();
  dispatch_queue_t v1 = +[MRAVOutputDevice localDeviceLocalizedName];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRAVOutputDeviceGetType(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 deviceType];
  return v3;
}

uint64_t MROriginGetUniqueIdentifier(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      id v5 = [NSString stringWithUTF8String:"int32_t MROriginGetUniqueIdentifier(MROriginRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MROrigin_Deprecated.m", 76, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  uint64_t v2 = [v1 identifier];

  return v2;
}

uint64_t __MRMediaRemoteGetNowPlayingInfoForPlayer_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void *MROriginGetDisplayName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      id v5 = [NSString stringWithUTF8String:"CFStringRef MROriginGetDisplayName(MROriginRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MROrigin_Deprecated.m", 62, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  uint64_t v2 = [v1 displayName];

  return v2;
}

CFTypeRef MRContentItemGetAlbumArtistName(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 albumArtistName];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

uint64_t MRContentItemGetTrackNumber(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 trackNumber];

  return v2;
}

void MRMediaRemoteGetPlaybackStateForPlayer(void *a1, void *a2, void *a3)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id v7 = [MEMORY[0x1E4F29128] UUID];
  uint64_t v8 = [v7 UUIDString];

  id v9 = [MEMORY[0x1E4F1C9C8] date];
  id v10 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"playbackState", v8];
  id v11 = v10;
  if (a1) {
    [v10 appendFormat:@" for %@", a1];
  }
  id v12 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v25 = v11;
    _os_log_impl(&dword_194F3C000, v12, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  long long v13 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v14 = [v13 workerQueue];
  v19[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = __MRMediaRemoteGetPlaybackStateForPlayer_block_invoke;
  v19[3] = &unk_1E57D0F70;
  id v20 = v8;
  id v21 = v9;
  id v22 = v5;
  id v23 = v6;
  id v15 = v6;
  id v16 = v5;
  id v17 = v9;
  id v18 = v8;
  MRMediaRemoteNowPlayingResolvePlayerPathWithID(a1, v18, 0, v14, v19);
}

uint64_t MRMediaRemoteAddPlayerPathInvalidationHandler(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [[MRNowPlayingPlayerPathInvalidationHandler alloc] initWithPlayerPath:a1 invalidateImmediatlyIfInvalid:1 queue:v6 invalidationCallback:v5];

  uint64_t v8 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v9 = [v8 addPlayerPathInvalidationHandler:v7];

  return v9;
}

id MRAVOutputContextGetSharedAudioPresentationContext()
{
  v0 = (void *)MEMORY[0x199718E70]();
  id v1 = +[MRAVOutputContext sharedAudioPresentationContext];
  return v1;
}

void _MRMediaRemoteRegisterForNowPlayingNotificationsEx(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v5 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v4 = [v5 notificationClient];
  [v4 registerForNowPlayingNotificationsWithQueue:v3 force:a2];
}

void sub_194F82B34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F82D94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F830FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _MRMediaRemoteServiceProtobuf(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a3;
  id v10 = a5;
  id v11 = a1;
  id v12 = a4;
  long long v13 = MRCreateXPCMessage(a2);
  MRAddProtobufToXPCMessage(v13, v9);
  if (objc_opt_respondsToSelector()) {
    MRAddPlayerPathToXPCMessage(v13, (void *)[v9 performSelector:sel_playerPath]);
  }
  id v14 = [v11 mrXPCConnection];
  v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = ___MRMediaRemoteServiceProtobuf_block_invoke;
  v16[3] = &unk_1E57D1490;
  id v17 = v10;
  id v15 = v10;
  [v14 sendMessage:v13 queue:v12 reply:v16];
}

void MRAddProtobufToXPCMessage(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = [a2 protobufData];
  MRAddDataToXPCMessage(v3, v4, "MRXPC_PROTOBUF_DATA_KEY");
}

void sub_194F835E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_194F83C68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

id initValAVAudioSessionMediaServicesWereLostNotification()
{
  if (AVFoundationLibrary_sOnce_11 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_11, &__block_literal_global_111);
  }
  v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_11, "AVAudioSessionMediaServicesWereLostNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVAudioSessionMediaServicesWereLostNotification, *v0);
  }
  getAVAudioSessionMediaServicesWereLostNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVAudioSessionMediaServicesWereLostNotificationFunction;
  id v1 = (void *)constantValAVAudioSessionMediaServicesWereLostNotification;

  return v1;
}

void MRMediaRemoteServiceStart(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  objc_initWeak(&location, v4);
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteServiceStart_block_invoke;
  v7[3] = &unk_1E57D2598;
  objc_copyWeak(v8, &location);
  v8[1] = v4;
  id v5 = [v4 mrXPCConnection];
  [v5 setMessageHandler:v7];

  id v6 = [v4 connection];
  xpc_connection_resume(v6);

  [v4 setIsRunning:1];
  v3[2](v3);
  objc_destroyWeak(v8);
  objc_destroyWeak(&location);
}

void sub_194F83EEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_194F8418C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void MRMediaRemoteServiceSetResumeHandler(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  int out_token = 0;
  objc_initWeak(&location, v4);
  id v5 = [v4 connectionQueue];
  v8[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  id v8[2] = __MRMediaRemoteServiceSetResumeHandler_block_invoke;
  v8[3] = &unk_1E57D25E8;
  objc_copyWeak(v11, &location);
  v11[1] = v4;
  id v6 = v4;
  id v9 = v6;
  id v7 = v3;
  id v10 = v7;
  notify_register_dispatch("com.apple.MRMediaRemote.didLaunch", &out_token, v5, v8);

  objc_destroyWeak(v11);
  objc_destroyWeak(&location);
}

void sub_194F842B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

void MRMediaRemoteServiceSetInvalidationHandler(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  objc_initWeak(&location, v4);
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteServiceSetInvalidationHandler_block_invoke;
  v7[3] = &unk_1E57D25C0;
  objc_copyWeak(&v9, &location);
  id v5 = v3;
  id v8 = v5;
  id v6 = [v4 mrXPCConnection];
  [v6 setInvalidationHandler:v7];

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void sub_194F843C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_194F847A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t MRMediaRemoteServiceSetClientModule(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = a2;
  return result;
}

MRMediaRemoteService *MRMediaRemoteServiceCreate()
{
  v0 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  id v1 = dispatch_queue_attr_make_with_qos_class(v0, (dispatch_qos_class_t)2u, 0);
  uint64_t v2 = dispatch_queue_create("com.apple.MediaRemote.connectionQueue", v1);

  id v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  id v4 = dispatch_queue_attr_make_with_qos_class(v3, (dispatch_qos_class_t)2u, 0);
  dispatch_queue_t v5 = dispatch_queue_create("com.apple.MediaRemote.clientCallbackPriorityQueue", v4);

  id v6 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v7 = dispatch_queue_create("com.apple.MediaRemote.clientCallbackQueue", v6);

  id v8 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v9 = dispatch_queue_create("com.apple.MediaRemote.browsableContentQueue", v8);

  id v10 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v11 = dispatch_queue_create("com.apple.MediaRemote.voiceInputQueue", v10);

  mach_service = xpc_connection_create_mach_service("com.apple.mediaremoted.xpc", v2, 0);
  long long v13 = objc_alloc_init(MRMediaRemoteService);
  id v14 = [MRXPCConnection alloc];
  id v15 = [(MRXPCConnection *)v14 initWithConnection:mach_service queue:0 defaultReplyQueue:MEMORY[0x1E4F14428]];
  [(MRMediaRemoteService *)v13 setMrXPCConnection:v15];

  [(MRMediaRemoteService *)v13 setConnection:mach_service];
  [(MRMediaRemoteService *)v13 setConnectionQueue:v2];
  [(MRMediaRemoteService *)v13 setClientCallbackQueue:v7];
  [(MRMediaRemoteService *)v13 setClientCallbackPriorityQueue:v5];
  [(MRMediaRemoteService *)v13 setBrowsableContentQueue:v9];
  [(MRMediaRemoteService *)v13 setVoiceInputQueue:v11];
  xpc_connection_set_context(mach_service, v13);

  return v13;
}

void sub_194F84F08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id AVAudioSessionMediaServicesWereLostNotificationFunction()
{
  return (id)constantValAVAudioSessionMediaServicesWereLostNotification;
}

void MRMediaRemoteSetWantsVolumeControlNotifications(int a1)
{
  uint64_t v2 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v3 = MRMediaRemoteSetWantsVolumeControlNotifications___volumeControlNotificationObservers;
  if (a1)
  {
    ++MRMediaRemoteSetWantsVolumeControlNotifications___volumeControlNotificationObservers;
    if (v3) {
      goto LABEL_9;
    }
    id v8 = v2;
    id v4 = [v2 notificationClient];
    dispatch_queue_t v5 = v4;
    uint64_t v6 = 1;
    goto LABEL_8;
  }
  BOOL v7 = MRMediaRemoteSetWantsVolumeControlNotifications___volumeControlNotificationObservers == 1;
  if (MRMediaRemoteSetWantsVolumeControlNotifications___volumeControlNotificationObservers >= 1)
  {
    --MRMediaRemoteSetWantsVolumeControlNotifications___volumeControlNotificationObservers;
    if (v7)
    {
      id v8 = v2;
      id v4 = [v2 notificationClient];
      dispatch_queue_t v5 = v4;
      uint64_t v6 = 0;
LABEL_8:
      [v4 setReceivesVolumeControlNotifications:v6];

      uint64_t v2 = v8;
    }
  }
LABEL_9:
}

BOOL MRMediaRemoteIsMusicAppInstalled()
{
  v0 = (void *)MRGetSharedService();

  return MRMediaRemoteServiceIsMusicAppInstalled(v0);
}

uint64_t MRGetSharedService()
{
  v0 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v1 = [v0 service];

  return v1;
}

void MRMediaRemoteSetWantsExternalScreenTypeChangeNotifications(int a1)
{
  uint64_t v2 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v3 = MRMediaRemoteSetWantsExternalScreenTypeChangeNotifications___externalScreenTypeChangeNotificationObservers;
  if (a1)
  {
    ++MRMediaRemoteSetWantsExternalScreenTypeChangeNotifications___externalScreenTypeChangeNotificationObservers;
    if (v3) {
      goto LABEL_9;
    }
    id v8 = v2;
    id v4 = [v2 notificationClient];
    dispatch_queue_t v5 = v4;
    uint64_t v6 = 1;
    goto LABEL_8;
  }
  BOOL v7 = MRMediaRemoteSetWantsExternalScreenTypeChangeNotifications___externalScreenTypeChangeNotificationObservers == 1;
  if (MRMediaRemoteSetWantsExternalScreenTypeChangeNotifications___externalScreenTypeChangeNotificationObservers >= 1)
  {
    --MRMediaRemoteSetWantsExternalScreenTypeChangeNotifications___externalScreenTypeChangeNotificationObservers;
    if (v7)
    {
      id v8 = v2;
      id v4 = [v2 notificationClient];
      dispatch_queue_t v5 = v4;
      uint64_t v6 = 0;
LABEL_8:
      [v4 setReceivesExternalScreenTypeChangedNotifications:v6];

      uint64_t v2 = v8;
    }
  }
LABEL_9:
}

uint64_t MRMediaRemoteApplicationIsSystemApplication(uint64_t a1)
{
  if ((MRMediaRemoteApplicationIsSystemMediaApplication(a1) & 1) != 0
    || (MRMediaRemoteApplicationIsSystemPodcastApplication(a1) & 1) != 0)
  {
    return 1;
  }

  return MRMediaRemoteApplicationIsSystemClassicalRoomApplication(a1);
}

uint64_t MRMediaRemoteApplicationIsSystemMediaApplication(uint64_t a1)
{
  if (MRMediaRemoteApplicationIsSystemMediaApplication___once != -1) {
    dispatch_once(&MRMediaRemoteApplicationIsSystemMediaApplication___once, &__block_literal_global_79);
  }
  uint64_t v2 = (void *)MRMediaRemoteApplicationIsSystemMediaApplication___allKnownSystemMediaApplications;

  return [v2 containsObject:a1];
}

uint64_t __MRRegisterTransaction_block_invoke(uint64_t a1)
{
  if (__transactionShutdownTriggered == 1) {
    return [*(id *)(a1 + 32) invalidateTransaction];
  }
  else {
    return [(id)__registeredTransactions addObject:*(void *)(a1 + 32)];
  }
}

uint64_t MRPlaybackQueueGetRange(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 location];
  uint64_t v3 = [v1 contentItems];

  [v3 count];
  return v2;
}

CFTypeRef MRContentItemGetLocalizedDurationString(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 localizedDurationString];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

uint64_t MRActiveEndpointTypeForCurrentApplication()
{
  if (MRActiveEndpointTypeForCurrentApplication_onceToken != -1) {
    dispatch_once(&MRActiveEndpointTypeForCurrentApplication_onceToken, &__block_literal_global_83);
  }
  return MRActiveEndpointTypeForCurrentApplication_type;
}

void *MRMediaRemoteGetLocalOrigin()
{
  v0 = +[MROrigin localOrigin];

  return v0;
}

_MRLyricsItemProtobuf *MRLyricsItemCreate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = objc_alloc_init(_MRLyricsItemProtobuf);
  [(_MRLyricsItemProtobuf *)v6 setLyrics:a1];
  [(_MRLyricsItemProtobuf *)v6 setUserProvided:a2];
  [(_MRLyricsItemProtobuf *)v6 setToken:a3];
  return v6;
}

void MRPlaybackQueueRequestSetIdentifiers(void *a1, uint64_t a2)
{
  id v6 = a1;
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v4 = [v6 contentItemIdentifiers];

  if (v4)
  {
    dispatch_queue_t v5 = [v6 contentItemIdentifiers];
    [v3 addObjectsFromArray:v5];
  }
  if (a2) {
    [v3 addObjectsFromArray:a2];
  }
  [v6 setContentItemIdentifiers:v3];
}

uint64_t MRAVOutputDeviceHasBatteryLevel(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 hasBatteryLevel];
  return v3;
}

void __MRMediaRemoteSetPlaybackQueue_block_invoke(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v3 = [v2 playerClientForPlayerPath:*(void *)(a1 + 56)];

  [MEMORY[0x1E4F1C9C8] timeIntervalSinceReferenceDate];
  objc_msgSend(v3, "setInvalidatationTimestamp:");
  id v4 = [*(id *)(a1 + 32) contentItemWithOffset:0];
  dispatch_queue_t v5 = [v3 playbackQueue];
  id v6 = [v5 contentItemWithOffset:0];

  BOOL v7 = [v3 playerPath];
  int v8 = [v7 isLocal];

  if (v8)
  {
    dispatch_queue_t v9 = (void *)[objc_alloc(MEMORY[0x1E4F1CA60]) initWithCapacity:1];
    id v10 = [v3 playerPath];
    MRAddPlayerPathToUserInfo(v9, v10);

    dispatch_queue_t v11 = NSNumber;
    id v12 = [v4 identifier];
    long long v13 = [v6 identifier];
    if (v12 == v13) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = [v12 isEqual:v13] ^ 1;
    }
    id v15 = [v11 numberWithInt:v14];
    [v9 setObject:v15 forKeyedSubscript:@"_MRPlayerPlaybackQueueNowPlayingItemDidChangeUserInfoKey"];

    id v16 = _MRLogForCategory(1uLL);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG)) {
      __MRMediaRemoteSetPlaybackQueue_block_invoke_cold_2(v3, v16);
    }

    id v17 = +[MRMediaRemoteServiceClient sharedServiceClient];
    id v18 = [v17 notificationClient];
    __int16 v19 = MRCreateDecodedUserInfo(v9);
    [v18 dispatchNotification:@"kMRPlayerPlaybackQueueChangedNotification" userInfo:v19 object:0];
  }
  id v20 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    id v21 = [v3 playerPath];
    id v22 = MRContentItemCopyMinimalReadableDescription(v6);
    id v23 = MRContentItemCopyMinimalReadableDescription(v4);
    int v36 = 138543874;
    BOOL v37 = v21;
    __int16 v38 = 2112;
    uint64_t v39 = v22;
    __int16 v40 = 2112;
    id v41 = v23;
    _os_log_impl(&dword_194F3C000, v20, OS_LOG_TYPE_DEFAULT, "PlaybackQueueInvalidation: NowPlayingItem for %{public}@ changed from\n %@\n -> \n%@", (uint8_t *)&v36, 0x20u);
  }
  if (v4
    && MRContentItemIdentifierIsEqual(v4, v6)
    && (MRContentItemEqualToItem(v4, (const char *)v6) & 1) == 0)
  {
    long long v24 = _MRLogForCategory(1uLL);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      __MRMediaRemoteSetPlaybackQueue_block_invoke_cold_1(v24);
    }

    uint64_t v25 = [v3 playerPath];
    MRMediaRemotePlaybackQueueDataSourceContentItemChangedForPlayer((uint64_t)v4, v25);
  }
  uint64_t v26 = [v3 subscriptionController];
  [v26 invalidate];

  uint64_t v27 = [*(id *)(a1 + 32) range];
  unint64_t v29 = +[MRPlaybackQueueRequest defaultPlaybackQueueRequestWithRange:](MRPlaybackQueueRequest, "defaultPlaybackQueueRequestWithRange:", v27, v28);
  int v30 = [v3 subscriptionController];
  [v30 subscribeToPlaybackQueue:*(void *)(a1 + 32) forRequest:v29];

  uint64_t v31 = [v3 homeUserIdentifiers];
  uint64_t v32 = [v31 count];

  if (v32)
  {
    uint64_t v33 = [v3 homeUserIdentifiers];
    [*(id *)(a1 + 32) setHomeUserIdentifiers:v33];
  }
  [v3 setPlaybackQueue:*(void *)(a1 + 32)];
  char v34 = (void *)MRGetSharedService();
  uint64_t v35 = [v3 playerPath];
  MRMediaRemoteServiceSetNowPlayingPlaybackQueue(v34, v35, *(void **)(a1 + 64), *(void **)(a1 + 40), *(void **)(a1 + 48));
}

void __MRMediaRemoteGetPlaybackStateForPlayer_block_invoke(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v17[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = __MRMediaRemoteGetPlaybackStateForPlayer_block_invoke_2;
  v17[3] = &unk_1E57D0F48;
  id v7 = v5;
  id v18 = v7;
  id v19 = a1[4];
  id v20 = a1[5];
  id v21 = a1[6];
  id v22 = a1[7];
  int v8 = (void (**)(void, void, void))MEMORY[0x1997190F0](v17);
  if ([v7 isResolved])
  {
    int v9 = [v7 isLocal];
    id v10 = +[MRNowPlayingOriginClientManager sharedManager];
    dispatch_queue_t v11 = v10;
    if (v9)
    {
      id v12 = [v10 playerClientForPlayerPath:v7];

      uint64_t v13 = [v12 playbackState];
      if (v13)
      {
        v8[2](v8, v13, 0);
      }
      else
      {
        id v15 = +[MRNowPlayingOriginClientManager sharedManager];
        id v16 = [v15 playerClientRequestsForPlayerPath:v7];

        [v16 handlePlaybackStateRequestWithCompletion:v8];
      }
    }
    else
    {
      id v12 = [v10 playerClientRequestsForPlayerPath:v7];

      [v12 handlePlaybackStateRequestWithCompletion:v8];
    }
  }
  else
  {
    if (v6)
    {
      id v12 = 0;
      uint64_t Error = (uint64_t)v6;
    }
    else
    {
      uint64_t Error = MRMediaRemoteNowPlayingPlayerPathCreateError(v7);
      id v12 = (void *)Error;
    }
    v8[2](v8, 0, Error);
  }
}

void sub_194F87488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F8764C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _MRHandlePlaybackQueueRequest(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  int v8 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
    _MRHandlePlaybackQueueRequest_cold_1((uint64_t)v6, (uint64_t)v5, v8);
  }

  if (v5)
  {
    if (v6) {
      goto LABEL_5;
    }
LABEL_13:
    uint64_t v27 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v28 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRHandlePlaybackQueueRequest(MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
    [v27 handleFailureInFunction:v28, @"MRPlaybackQueueServiceClient.m", 466, @"Invalid parameter not satisfying: %@", @"request" file lineNumber description];

    if (v7) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
  uint64_t v25 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v26 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRHandlePlaybackQueueRequest(MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
  [v25 handleFailureInFunction:v26, @"MRPlaybackQueueServiceClient.m", 465, @"Invalid parameter not satisfying: %@", @"playerPath" file lineNumber description];

  if (!v6) {
    goto LABEL_13;
  }
LABEL_5:
  if (v7) {
    goto LABEL_6;
  }
LABEL_14:
  unint64_t v29 = [MEMORY[0x1E4F28B00] currentHandler];
  int v30 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRHandlePlaybackQueueRequest(MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
  [v29 handleFailureInFunction:v30, @"MRPlaybackQueueServiceClient.m", 467, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

LABEL_6:
  if (([v5 isResolved] & 1) == 0)
  {
    uint64_t v31 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v32 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRHandlePlaybackQueueRequest(MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
    [v31 handleFailureInFunction:v32 file:@"MRPlaybackQueueServiceClient.m" lineNumber:468 description:@"Attempting to use unresolved Player Path"];
  }
  int v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:v5];

  if (v10)
  {
    [v10 addPendingRequest:v6];
    dispatch_queue_t v11 = [v10 subscriptionController];
    [v11 addRequest:v6];

    v41[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v41[1] = 3221225472;
    v41[2] = ___MRHandlePlaybackQueueRequest_block_invoke;
    v41[3] = &unk_1E57D9B98;
    id v12 = v5;
    id v42 = v12;
    id v13 = v10;
    id v43 = v13;
    id v14 = v6;
    id v44 = v14;
    id v45 = v7;
    id v15 = (void *)MEMORY[0x1997190F0](v41);
    id v16 = [NSString alloc];
    id v17 = [v14 requestIdentifier];
    id v18 = (id) [v16 initWithFormat:@"com.apple.mediaremote.playbackqueue.%@", v17];
    id v33 = v7;
    id v19 = (const char *)[v18 UTF8String];
    dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    id v20 = v34 = v6;
    dispatch_queue_t v21 = dispatch_queue_create(v19, v20);

    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = ___MRHandlePlaybackQueueRequest_block_invoke_55;
    block[3] = &unk_1E57D9BC0;
    id v36 = v12;
    id v37 = v14;
    dispatch_queue_t v39 = v21;
    id v40 = v15;
    id v38 = v13;
    id v22 = v21;
    id v23 = v15;
    dispatch_async(v22, block);

    id v6 = v34;
    id v7 = v33;

    long long v24 = v42;
  }
  else
  {
    long long v24 = (void *)[objc_alloc(MEMORY[0x1E4F28C58]) initWithMRError:29 description:@"The player was removed before this playbackQueueRequest could complete."];
    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v24);
  }
}

void _MRRequestPlaybackQueue(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    long long v24 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v25 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRRequestPlaybackQueue(MRPlaybackQueueRequestRef, MRNowPlayingPlayerClientRequests *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
    [v24 handleFailureInFunction:v25, @"MRPlaybackQueueRequestResponse.m", 51, @"Invalid parameter not satisfying: %@", @"clientState" file lineNumber description];

    if (v6) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  id v22 = [MEMORY[0x1E4F28B00] currentHandler];
  id v23 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRRequestPlaybackQueue(MRPlaybackQueueRequestRef, MRNowPlayingPlayerClientRequests *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
  [v22 handleFailureInFunction:v23, @"MRPlaybackQueueRequestResponse.m", 50, @"Invalid parameter not satisfying: %@", @"i_request" file lineNumber description];

  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  if (v6) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t v26 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v27 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRRequestPlaybackQueue(MRPlaybackQueueRequestRef, MRNowPlayingPlayerClientRequests *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
  [v26 handleFailureInFunction:v27, @"MRPlaybackQueueRequestResponse.m", 52, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

LABEL_4:
  id v7 = (void *)[a1 copy];
  int v8 = [v5 subscriptionController];
  [v8 addRequest:v7];

  v28[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v28[1] = 3221225472;
  v28[2] = ___MRRequestPlaybackQueue_block_invoke;
  v28[3] = &unk_1E57D57C8;
  id v9 = v5;
  id v29 = v9;
  id v10 = v7;
  id v30 = v10;
  id v11 = v6;
  id v31 = v11;
  id v12 = (void (**)(void, void, void))MEMORY[0x1997190F0](v28);
  id v13 = [v9 playerPath];
  int v14 = [v13 isLocal];

  if (v14)
  {
    id v15 = [v9 playerPath];
    MRServiceClientPlaybackQueueRequestCallback(v15, v10, v12);
  }
  else
  {
    id v16 = [v9 playbackQueue];
    id v17 = [v9 playerPath];
    id v15 = MRPlaybackQueueCreateFromCache(v16, v10, 0, v17);

    if (v15)
    {
      ((void (**)(void, void *, void))v12)[2](v12, v15, 0);
    }
    else if ([v10 isLegacyNowPlayingInfoRequest])
    {
      [v9 enqueuePlaybackQueueRequest:v10 completion:v12];
    }
    else
    {
      id v18 = (void *)MRGetSharedService();
      id v19 = [v9 playerPath];
      id v20 = +[MRMediaRemoteServiceClient sharedServiceClient];
      dispatch_queue_t v21 = [v20 workerQueue];
      MRMediaRemoteServiceRequestNowPlayingPlaybackQueue(v18, v10, v19, v21, v12);
    }
  }
}

void __MRServiceClientPlaybackQueueRequestCallback_block_invoke_2(uint64_t a1)
{
  uint64_t v2 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v2 playerClientForPlayerPath:*(void *)(a1 + 32)];

  [v5 updatePlaybackQueueWithCachedUpdates:*(void *)(a1 + 40) forPendingRequest:*(void *)(a1 + 48)];
  if (*(void *)(a1 + 56) || (id v4 = *(void **)(a1 + 40)) == 0) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = MRPlaybackQueueCreateFromRequest(v4, *(void **)(a1 + 48));
  }
  (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
}

void _MRLoadContentItemAssets(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v33 = a4;
  id v12 = a5;
  uint64_t v35 = v9;
  if (v9)
  {
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v26 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v27 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRLoadContentItemAssets(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, MRPlaybackQueue *__strong, __strong dispatch_queue_t, __strong dispatch_block_t)");
    [v26 handleFailureInFunction:v27, @"MRPlaybackQueueServiceClient.m", 389, @"Invalid parameter not satisfying: %@", @"clientState" file lineNumber description];

    if (v10) {
      goto LABEL_3;
    }
  }
  uint64_t v28 = [MEMORY[0x1E4F28B00] currentHandler];
  id v29 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRLoadContentItemAssets(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, MRPlaybackQueue *__strong, __strong dispatch_queue_t, __strong dispatch_block_t)");
  [v28 handleFailureInFunction:v29, @"MRPlaybackQueueServiceClient.m", 390, @"Invalid parameter not satisfying: %@", @"request" file lineNumber description];

LABEL_3:
  uint64_t v32 = v12;
  if (!v12)
  {
    id v30 = [MEMORY[0x1E4F28B00] currentHandler];
    id v31 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRLoadContentItemAssets(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, MRPlaybackQueue *__strong, __strong dispatch_queue_t, __strong dispatch_block_t)");
    [v30 handleFailureInFunction:v31, @"MRPlaybackQueueServiceClient.m", 391, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];
  }
  id v13 = [v9 subscriptionController];
  [v13 subscribeToPlaybackQueue:v11 forRequest:v10];

  id v14 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id v34 = v11;
  obuint64_t j = [v11 contentItems];
  uint64_t v15 = [obj countByEnumeratingWithState:&v39 objects:v43 count:16];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = *(void *)v40;
    do
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        if (*(void *)v40 != v17) {
          objc_enumerationMutation(obj);
        }
        id v19 = *(void **)(*((void *)&v39 + 1) + 8 * i);
        if ([v10 includeSections])
        {
          id v20 = [v35 clientCallbacks];
          dispatch_queue_t v21 = [v20 createChildItemCallbacks];
          id v22 = [v21 callbacks];
          id v23 = _onQueue_MRCreateSectionsForRequest(v35, v22, v10, v19);

          if (v23 && (unint64_t)[v23 count] >= 2)
          {
            long long v24 = (void *)[v23 mutableCopy];
            [v19 setSections:v24];
          }
        }
        [v14 addObject:v19];
      }
      uint64_t v16 = [obj countByEnumeratingWithState:&v39 objects:v43 count:16];
    }
    while (v16);
  }

  v37[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v37[1] = 3221225472;
  v37[2] = ___MRLoadContentItemAssets_block_invoke;
  v37[3] = &unk_1E57D0FC0;
  id v38 = v32;
  id v25 = v32;
  _onQueue_MRLoadContentItemAssets(v35, v10, v14, v33, v37);
}

void _onQueue_MRLoadContentItemAssets(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v28 = a5;
  id v31 = v9;
  if (!v9)
  {
    id v23 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v24 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRLoadContentItemAssets(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, NSArray<id> *__strong, __strong dispatch_queue_t, __strong dispatch_block_t)");
    [v23 handleFailureInFunction:v24, @"MRPlaybackQueueServiceClient.m", 352, @"Invalid parameter not satisfying: %@", @"clientState" file lineNumber description];
  }
  if (!v10)
  {
    id v25 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v26 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onQueue_MRLoadContentItemAssets(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, NSArray<id> *__strong, __strong dispatch_queue_t, __strong dispatch_block_t)");
    [v25 handleFailureInFunction:v26, @"MRPlaybackQueueServiceClient.m", 353, @"Invalid parameter not satisfying: %@", @"request" file lineNumber description];
  }
  uint64_t v27 = [v10 contentItemIdentifiers];
  id v29 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithArray:");
  id v13 = dispatch_group_create();
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  obuint64_t j = v11;
  uint64_t v14 = [obj countByEnumeratingWithState:&v38 objects:v42 count:16];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = *(void *)v39;
    do
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        if (*(void *)v39 != v16) {
          objc_enumerationMutation(obj);
        }
        id v18 = *(void **)(*((void *)&v38 + 1) + 8 * i);
        if (![v10 hasLocation]
          || ([v18 identifier],
              id v19 = objc_claimAutoreleasedReturnValue(),
              char v20 = [v29 containsObject:v19],
              v19,
              (v20 & 1) == 0))
        {
          if ([v10 shouldRequestItem])
          {
            dispatch_group_enter(v13);
            v36[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
            v36[1] = 3221225472;
            v36[2] = ___onQueue_MRLoadContentItemAssets_block_invoke;
            v36[3] = &unk_1E57D27D8;
            id v37 = v13;
            _onQueue_MRInvokeClientAssetCallbacks(v31, v10, v18, v12, v36);
          }
        }
        dispatch_group_enter(v13);
        CFTypeRef Sections = MRContentItemGetSections(v18);
        v34[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
        v34[1] = 3221225472;
        v34[2] = ___onQueue_MRLoadContentItemAssets_block_invoke_2;
        v34[3] = &unk_1E57D0518;
        uint64_t v35 = v13;
        _onQueue_MRLoadContentItemAssets(v31, v10, Sections, v12, v34);
      }
      uint64_t v15 = [obj countByEnumeratingWithState:&v38 objects:v42 count:16];
    }
    while (v15);
  }

  block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___onQueue_MRLoadContentItemAssets_block_invoke_3;
  block[3] = &unk_1E57D0FC0;
  id v33 = v28;
  id v22 = v28;
  dispatch_group_notify(v13, v12, block);
}

__CFString *_MRContentItemsCopyReadableDescription(void *a1, uint64_t a2, char a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v4 = a1;
  if (v4)
  {
    id v5 = [MEMORY[0x1E4F28E78] string];
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v6 = v4;
    uint64_t v7 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v17;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v17 != v9) {
            objc_enumerationMutation(v6);
          }
          id v11 = *(void **)(*((void *)&v16 + 1) + 8 * i);
          if (a3)
          {
            uint64_t v12 = (uint64_t)MRContentItemCopyMinimalReadableDescription(v11);
          }
          else
          {
            uint64_t v12 = objc_msgSend(v11, "description", (void)v16);
          }
          id v13 = (void *)v12;
          objc_msgSend(v5, "appendString:", v12, (void)v16);
          [v5 appendString:@"\n"];
        }
        uint64_t v8 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }
      while (v8);
    }

    uint64_t v14 = (__CFString *)[v5 copy];
  }
  else
  {
    uint64_t v14 = @"NULL";
  }

  return v14;
}

__CFString *MRContentItemsCopyMinimalReadableDescription(void *a1, uint64_t a2)
{
  return _MRContentItemsCopyReadableDescription(a1, a2, 1);
}

void __MRServiceClientPlaybackQueueRequestCallback_block_invoke(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v8 = [v7 playbackQueueDispatchQueue];
  block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __MRServiceClientPlaybackQueueRequestCallback_block_invoke_2;
  block[3] = &unk_1E57D9BE8;
  id v12 = a1[4];
  id v13 = v5;
  id v14 = a1[5];
  id v15 = v6;
  id v16 = a1[6];
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v8, block);
}

void MRServiceClientPlaybackQueueRequestCallback(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = v7;
  if (!v6)
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRServiceClientPlaybackQueueRequestCallback(MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
    [v12 handleFailureInFunction:v13, @"MRPlaybackQueueServiceClient.m", 531, @"Invalid parameter not satisfying: %@", @"request" file lineNumber description];

    if (v8) {
      goto LABEL_3;
    }
LABEL_5:
    id v14 = [MEMORY[0x1E4F28B00] currentHandler];
    id v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRServiceClientPlaybackQueueRequestCallback(MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong _MRPlaybackQueueRequestCallbackCompletion)");
    [v14 handleFailureInFunction:v15, @"MRPlaybackQueueServiceClient.m", 532, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

    goto LABEL_3;
  }
  if (!v7) {
    goto LABEL_5;
  }
LABEL_3:
  v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = __MRServiceClientPlaybackQueueRequestCallback_block_invoke;
  v16[3] = &unk_1E57D57C8;
  id v17 = v5;
  id v18 = v6;
  id v19 = v8;
  id v9 = v8;
  id v10 = v6;
  id v11 = v5;
  _MRHandlePlaybackQueueRequest(v11, v10, v16);
}

void sub_194F8A3C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void MRContentItemSetInferredTimestamp(void *a1, double a2)
{
  id v10 = a1;
  uint64_t v3 = [v10 metadata];

  if (v10 && v3)
  {
    MRCreateItemMetadataIfNotPresent(v10);
    id v4 = v10;
    id v5 = [v4 metadata];
    [v5 inferredTimestamp];
    if (v6 == a2)
    {
      id v7 = [v4 metadata];
      char v8 = [v7 hasInferredTimestamp];

      if (v8) {
        goto LABEL_8;
      }
    }
    else
    {
    }
    id v9 = [v4 metadata];
    [v9 setInferredTimestamp:a2];

LABEL_8:
  }
}

CFTypeRef MRContentItemGetSections(void *a1)
{
  CFTypeRef result = [a1 sections];
  if (result)
  {
    return CFAutorelease(result);
  }
  return result;
}

double MRContentItemGetInferredTimestamp(void *a1)
{
  id v1 = [a1 metadata];
  [v1 inferredTimestamp];
  double v3 = v2;

  return v3;
}

uint64_t MRContentItemIdentifierIsEqual(void *a1, void *a2)
{
  if (a1 == a2) {
    return 1;
  }
  id v3 = a2;
  id v4 = [a1 identifier];
  id v5 = [v3 identifier];

  uint64_t v6 = [v4 isEqualToString:v5];
  return v6;
}

double MRContentItemGetElapsedTimeTimestamp(void *a1)
{
  id v1 = a1;
  double v2 = [v1 metadata];
  char v3 = [v2 hasElapsedTimeTimestamp];
  id v4 = [v1 metadata];

  if (v3) {
    [v4 elapsedTimeTimestamp];
  }
  else {
    [v4 inferredTimestamp];
  }
  double v6 = v5;

  return v6;
}

uint64_t MRNowPlayingPlayerCreate(uint64_t a1, uint64_t a2)
{
  id v4 = [MRPlayer alloc];

  return (uint64_t)[(MRPlayer *)v4 initWithIdentifier:a1 displayName:a2];
}

uint64_t MRNowPlayingClientCreate(uint64_t a1, uint64_t a2)
{
  id v4 = [MRClient alloc];

  return (uint64_t)[(MRClient *)v4 initWithProcessIdentifier:a1 bundleIdentifier:a2];
}

void __MRDictionaryCalculateDeltas_block_invoke(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [a1[4] objectForKey:v5];
  char v8 = v7;
  if (v7)
  {
    if (([v7 isEqual:v6] & 1) == 0)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v26 = 0;
        id v27 = 0;
        id v25 = 0;
        MRDictionaryCalculateDeltas(v6, v8, &v27, &v26, &v25);
        id v9 = v27;
        id v10 = v26;
        id v11 = v25;
        id v12 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", objc_msgSend(v10, "count") + objc_msgSend(v9, "count") + objc_msgSend(v11, "count"));
        v23[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
        v23[1] = 3221225472;
        v23[2] = __MRDictionaryCalculateDeltas_block_invoke_2;
        v23[3] = &unk_1E57D48B0;
        id v13 = v12;
        id v24 = v13;
        [v9 enumerateKeysAndObjectsUsingBlock:v23];
        v21[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
        v21[1] = 3221225472;
        v21[2] = __MRDictionaryCalculateDeltas_block_invoke_3;
        v21[3] = &unk_1E57D48B0;
        id v14 = v13;
        id v22 = v14;
        [v10 enumerateKeysAndObjectsUsingBlock:v21];
        uint64_t v16 = MEMORY[0x1E4F143A8];
        uint64_t v17 = 3221225472;
        id v18 = __MRDictionaryCalculateDeltas_block_invoke_4;
        id v19 = &unk_1E57D48B0;
        id v20 = v14;
        id v15 = v14;
        [v11 enumerateKeysAndObjectsUsingBlock:&v16];
        objc_msgSend(a1[5], "setObject:forKeyedSubscript:", v15, v5, v16, v17, v18, v19);
      }
      else
      {
        id v9 = (id)[objc_alloc(MEMORY[0x1E4F779D8]) initWithFirst:v6 second:v8];
        [a1[5] setObject:v9 forKeyedSubscript:v5];
      }
    }
  }
  else
  {
    [a1[6] setObject:v6 forKeyedSubscript:v5];
  }
}

uint64_t __MRMediaRemoteSetNowPlayingPlayer_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void *MRPlaybackQueueToUserInfo(void *a1, const char *a2)
{
  if (a1)
  {
    if (a2) {
      return (void *)[a1 setObject:a2 forKeyedSubscript:@"kMRPlaybackQueueUserInfoKey"];
    }
  }
  return a1;
}

void MRAVEndpointGetVolumeControlCapabilities(void *a1, void *a2, void *a3)
{
}

void MRAVEndpointGetVolume(void *a1, void *a2, void *a3)
{
}

uint64_t MRNowPlayingPlayerPathCreate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [MRPlayerPath alloc];

  return (uint64_t)[(MRPlayerPath *)v6 initWithOrigin:a1 client:a2 player:a3];
}

uint64_t MRAVOutputDeviceCopyName(void *a1)
{
  double v2 = (void *)MEMORY[0x199718E70]();
  char v3 = [a1 name];
  uint64_t v4 = [v3 copy];

  return v4;
}

uint64_t MRAVOutputContextCopyOutputDevices(void *a1)
{
  double v2 = (void *)MEMORY[0x199718E70]();
  char v3 = [a1 outputDevices];
  uint64_t v4 = [v3 copy];

  return v4;
}

void __MRMediaRemoteServiceGetHostedRoutingXPCEndpoint_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)MEMORY[0x1E4F14520];
  id v5 = a2;
  id v6 = v5;
  if (a2 == v4 || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();

    id v10 = 0;
    int64_t uint64 = 1;
LABEL_8:
    id v9 = (void *)[objc_alloc(MEMORY[0x1E4F28C58]) initWithMRError:uint64];
    goto LABEL_10;
  }
  xpc_dictionary_get_value(v5, "MRXPC_CUSTOM_XPC_ENDPOINT_KEY");
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  int64_t uint64 = xpc_dictionary_get_uint64(v6, "MRXPC_ERROR_CODE_KEY");

  if (uint64 > 0) {
    goto LABEL_8;
  }
  id v9 = 0;
LABEL_10:
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_194F8C04C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_194F8C140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t MRContentItemHasPlaybackRate(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 hasPlaybackRate];

  return v2;
}

uint64_t MRContentItemGetIsPlayable(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 isPlayable];

  return v2;
}

uint64_t MRContentItemGetITunesStoreAlbumArtistIdentifier(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 iTunesStoreAlbumArtistIdentifier];

  return v2;
}

uint64_t MRContentItemGetHasArtworkData(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 artworkAvailable];

  return v2;
}

uint64_t MRContentItemGetEditingStyleFlags(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 editingStyleFlags];

  return v2;
}

Class initAVOutputContext()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  Class result = objc_getClass("AVOutputContext");
  classAVOutputContext = (uint64_t)result;
  getAVOutputContextClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextFunction;
  return result;
}

void MRMediaRemoteGetSystemVolumeMuted(void *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = (void *)MEMORY[0x1E4F1C9C8];
  id v5 = a1;
  id v6 = [v4 date];
  id v7 = [MEMORY[0x1E4F29128] UUID];
  char v8 = [v7 UUIDString];

  id v9 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"getSystemIsMuted", v8];
  id v10 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v21 = v9;
    _os_log_impl(&dword_194F3C000, v10, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  id v11 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v12 = [v11 service];
  v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = __MRMediaRemoteGetSystemVolumeMuted_block_invoke;
  v16[3] = &unk_1E57DA350;
  id v17 = v8;
  id v18 = v6;
  id v19 = v3;
  id v13 = v3;
  id v14 = v6;
  id v15 = v8;
  MRMediaRemoteServiceGetSystemIsMuted(v12, v5, v16);
}

void MRMediaRemoteServiceGetSystemIsMuted(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteServiceGetSystemIsMuted_block_invoke;
  v7[3] = &unk_1E57D2638;
  id v8 = v5;
  id v6 = v5;
  _MRMediaRemoteServiceProtobuf(a1, 0x100000000000008uLL, 0, a2, v7);
}

void MRMediaRemoteGetPickedRoutedVolumeControlCapabilities(uint64_t a1, void *a2, void *a3)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    id v5 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = [MEMORY[0x1E4F1C9C8] date];
  id v9 = [MEMORY[0x1E4F29128] UUID];
  id v10 = [v9 UUIDString];

  id v11 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  v28[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v28[1] = 3221225472;
  v28[2] = __MRMediaRemoteGetPickedRoutedVolumeControlCapabilities_block_invoke;
  v28[3] = &unk_1E57DA260;
  id v29 = @"volumeControlCapabilities";
  id v12 = v10;
  id v30 = v12;
  id v13 = v8;
  id v31 = v13;
  id v14 = v5;
  id v32 = v14;
  id v15 = v6;
  id v33 = v15;
  uint64_t v16 = (void *)MEMORY[0x1997190F0](v28);
  id v17 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"volumeControlCapabilities", v12];
  id v18 = v17;
  if (v11) {
    [v17 appendFormat:@" for %@", v11];
  }
  id v19 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v35 = v18;
    _os_log_impl(&dword_194F3C000, v19, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v26[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v26[1] = 3221225472;
  v26[2] = __MRMediaRemoteGetPickedRoutedVolumeControlCapabilities_block_invoke_94;
  v26[3] = &unk_1E57D0EF8;
  id v20 = v16;
  id v27 = v20;
  uint64_t v21 = (void (**)(void, void))MEMORY[0x1997190F0](v26);
  uint64_t v22 = [(MRPlayerPath *)v11 origin];

  if (v22)
  {
    ((void (**)(void, MRPlayerPath *))v21)[2](v21, v11);
  }
  else
  {
    v23[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v23[1] = 3221225472;
    v23[2] = __MRMediaRemoteGetPickedRoutedVolumeControlCapabilities_block_invoke_3;
    v23[3] = &unk_1E57DA2B0;
    id v24 = v21;
    id v25 = v20;
    MRMediaRemoteNowPlayingResolvePlayerPath(v11, v14, v23);
  }
}

void __MRMediaRemoteGetPickedRoutedVolumeControlCapabilities_block_invoke_94(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v4 originClientRequestsForPlayerPath:v3];

  v8[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  id v8[2] = __MRMediaRemoteGetPickedRoutedVolumeControlCapabilities_block_invoke_2;
  v8[3] = &unk_1E57DA288;
  id v6 = *(id *)(a1 + 32);
  id v9 = v3;
  id v10 = v6;
  id v7 = v3;
  [v5 handleVolumeCapabilitiesRequestWithCompletion:v8];
}

void MRMediaRemoteGetMediaPlaybackVolume(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = +[MROrigin localOrigin];
  MRMediaRemoteGetMediaPlaybackVolumeForOrigin((uint64_t)v5, v4, v3);
}

void MRMediaRemoteGetMediaPlaybackVolumeForOrigin(uint64_t a1, void *a2, void *a3)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    id v5 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v9 = [MEMORY[0x1E4F1C9C8] date];
  id v10 = [MEMORY[0x1E4F29128] UUID];
  id v11 = [v10 UUIDString];

  id v12 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"mediaPlaybackVolume", v11];
  id v13 = v12;
  if (v8) {
    [v12 appendFormat:@" for %@", v8];
  }
  id v14 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    id v37 = v13;
    _os_log_impl(&dword_194F3C000, v14, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v29[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v29[1] = 3221225472;
  v29[2] = __MRMediaRemoteGetMediaPlaybackVolumeForOrigin_block_invoke;
  v29[3] = &unk_1E57DA300;
  id v15 = v8;
  id v30 = v15;
  id v31 = @"mediaPlaybackVolume";
  id v16 = v11;
  id v32 = v16;
  id v17 = v9;
  id v33 = v17;
  id v18 = v5;
  id v34 = v18;
  id v19 = v6;
  id v35 = v19;
  id v20 = (void *)MEMORY[0x1997190F0](v29);
  v27[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v27[1] = 3221225472;
  v27[2] = __MRMediaRemoteGetMediaPlaybackVolumeForOrigin_block_invoke_2;
  v27[3] = &unk_1E57D0EF8;
  id v21 = v20;
  id v28 = v21;
  uint64_t v22 = MEMORY[0x1997190F0](v27);
  id v23 = (void *)v22;
  if (a1)
  {
    (*(void (**)(uint64_t, MRPlayerPath *))(v22 + 16))(v22, v15);
  }
  else
  {
    v24[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v24[1] = 3221225472;
    v24[2] = __MRMediaRemoteGetMediaPlaybackVolumeForOrigin_block_invoke_3;
    v24[3] = &unk_1E57DA2B0;
    id v25 = v21;
    id v26 = v23;
    MRMediaRemoteNowPlayingResolvePlayerPath(v15, v18, v24);
  }
}

void __MRMediaRemoteGetMediaPlaybackVolumeForOrigin_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v4 originClientRequestsForPlayerPath:v3];

  [v5 handleVolumeRequestWithCompletion:*(void *)(a1 + 32)];
}

uint64_t MRAVOutputContextCopyPredictedOutputDevice(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 predictedOutputDevice];
  return v3;
}

void sub_194F8DDBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F8DF70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F8E370(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F8E6D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t MRAVOutputContextCopyUniqueIdentifier(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 contextID];
  uint64_t v4 = [v3 copy];

  return v4;
}

void sub_194F8F250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

CFStringRef MRAVOutputContextTypeCopyDescription(unsigned int a1)
{
  if (a1 > 5) {
    CFStringRef v1 = 0;
  }
  else {
    CFStringRef v1 = off_1E57D04B8[a1];
  }
  return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
}

uint64_t MRContentItemCreate(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    id v5 = [MEMORY[0x1E4F28B00] currentHandler];
    id v6 = objc_msgSend(NSString, "stringWithUTF8String:", "MRContentItemRef MRContentItemCreate(CFAllocatorRef, CFStringRef)");
    [v5 handleFailureInFunction:v6, @"MRContentItem_Deprecated.m", 1365, @"Invalid parameter not satisfying: %@", @"identifier" file lineNumber description];
  }
  uint64_t v3 = [MRContentItem alloc];

  return (uint64_t)[(MRContentItem *)v3 initWithIdentifier:a2];
}

void __MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_block_invoke_2()
{
  v6[5] = *MEMORY[0x1E4F143B8];
  id v0 = objc_alloc(MEMORY[0x1E4F1CAD0]);
  CFStringRef v1 = (__CFString *)MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID();
  v6[[NSString stringWithFormat:@"com.apple.%@", 0] = v1;
  uint64_t v2 = (__CFString *)MRMediaRemoteCopyLocalDeviceSystemPodcastApplicationDisplayID();
  v6[1] = v2;
  v6[2] = @"com.apple.SessionTrackerApp";
  v6[3] = @"com.apple.iBooks";
  void v6[4] = @"com.apple.NanoBooks";
  uint64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v6 count:5];
  uint64_t v4 = objc_msgSend(v0, "initWithArray:", v3, v6[0]);
  id v5 = (void *)MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_allowList;
  MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_allowList = v4;
}

uint64_t MRMediaRemoteServiceGetDeviceInfo(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return [a1 getDeviceInfoForPlayerPath:a2 queue:a3 completion:a4];
}

void sub_194F90650(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _onClientQueue_MRInvokeClientCallback(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v16 = a6;
  if (v11)
  {
    if (v12) {
      goto LABEL_3;
    }
  }
  else
  {
    id v33 = [MEMORY[0x1E4F28B00] currentHandler];
    id v34 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onClientQueue_MRInvokeClientCallback(MRNowPlayingPlayerClient *__strong, __strong MRPlaybackQueueDataSourceContentItemAssetCallback, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
    [v33 handleFailureInFunction:v34, @"MRPlaybackQueueServiceClient.m", 32, @"Invalid parameter not satisfying: %@", @"clientState" file lineNumber description];

    if (v12)
    {
LABEL_3:
      if (v13) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  id v35 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v36 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onClientQueue_MRInvokeClientCallback(MRNowPlayingPlayerClient *__strong, __strong MRPlaybackQueueDataSourceContentItemAssetCallback, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
  [v35 handleFailureInFunction:v36, @"MRPlaybackQueueServiceClient.m", 33, @"Invalid parameter not satisfying: %@", @"datasource" file lineNumber description];

  if (v13)
  {
LABEL_4:
    if (v14) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  id v37 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v38 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onClientQueue_MRInvokeClientCallback(MRNowPlayingPlayerClient *__strong, __strong MRPlaybackQueueDataSourceContentItemAssetCallback, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
  [v37 handleFailureInFunction:v38, @"MRPlaybackQueueServiceClient.m", 34, @"Invalid parameter not satisfying: %@", @"request" file lineNumber description];

  if (v14)
  {
LABEL_5:
    if (v15) {
      goto LABEL_6;
    }
LABEL_12:
    long long v41 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v42 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onClientQueue_MRInvokeClientCallback(MRNowPlayingPlayerClient *__strong, __strong MRPlaybackQueueDataSourceContentItemAssetCallback, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
    [v41 handleFailureInFunction:v42, @"MRPlaybackQueueServiceClient.m", 36, @"Invalid parameter not satisfying: %@", @"queue" file lineNumber description];

    if (v16) {
      goto LABEL_7;
    }
LABEL_13:
    uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v44 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onClientQueue_MRInvokeClientCallback(MRNowPlayingPlayerClient *__strong, __strong MRPlaybackQueueDataSourceContentItemAssetCallback, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
    [v43 handleFailureInFunction:v44, @"MRPlaybackQueueServiceClient.m", 37, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

    goto LABEL_7;
  }
LABEL_11:
  long long v39 = [MEMORY[0x1E4F28B00] currentHandler];
  long long v40 = objc_msgSend(NSString, "stringWithUTF8String:", "void _onClientQueue_MRInvokeClientCallback(MRNowPlayingPlayerClient *__strong, __strong MRPlaybackQueueDataSourceContentItemAssetCallback, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)");
  [v39 handleFailureInFunction:v40, @"MRPlaybackQueueServiceClient.m", 35, @"Invalid parameter not satisfying: %@", @"item" file lineNumber description];

  if (!v15) {
    goto LABEL_12;
  }
LABEL_6:
  if (!v16) {
    goto LABEL_13;
  }
LABEL_7:
  v54[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v54[1] = 3221225472;
  v54[2] = ___onClientQueue_MRInvokeClientCallback_block_invoke;
  v54[3] = &unk_1E57D9AA8;
  id v17 = v11;
  id v55 = v17;
  id v18 = v14;
  id v56 = v18;
  id v19 = v13;
  id v57 = v19;
  id v58 = v15;
  id v59 = v16;
  id v45 = v16;
  id v20 = v15;
  id v21 = (void *)MEMORY[0x1997190F0](v54);
  uint64_t v22 = [MRBlockGuard alloc];
  id v23 = (void *)[[NSString alloc] initWithFormat:@"PlaybackQueue request %@ for item %@ datasource callback completion was not called. This is a bug in client code", v19, v18];
  v52[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v52[1] = 3221225472;
  v52[2] = ___onClientQueue_MRInvokeClientCallback_block_invoke_2;
  v52[3] = &unk_1E57D0FE8;
  id v24 = v21;
  id v53 = v24;
  id v25 = [(MRBlockGuard *)v22 initWithTimeout:v23 reason:v52 handler:8.0];

  v46[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v46[1] = 3221225472;
  v46[2] = ___onClientQueue_MRInvokeClientCallback_block_invoke_3;
  v46[3] = &unk_1E57D9AD0;
  id v50 = v17;
  id v51 = v24;
  uint32_t v47 = v25;
  id v48 = v18;
  id v49 = v19;
  id v26 = v12;
  id v27 = (void (*)(void *, id, id, void *))*((void *)v12 + 2);
  id v28 = v17;
  id v29 = v19;
  id v30 = v18;
  id v31 = v24;
  id v32 = v25;
  v27(v26, v29, v30, v46);
}

void sub_194F91988(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

void *__AVFoundationLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_0 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_1 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_2()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_2 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_3()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_3 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_4()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_4 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_5()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_5 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_6()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_6 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_7()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_7 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_8()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_8 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_9()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_9 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_10()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_10 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_11()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_11 = (uint64_t)result;
  return result;
}

void *__AVFoundationLibrary_block_invoke_12()
{
  Class result = dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
  AVFoundationLibrary_sLib_12 = (uint64_t)result;
  return result;
}

void sub_194F92294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F923D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MRMediaRemoteActiveEndpointTypeCopyDescription(unint64_t a1)
{
  if (a1 > 5) {
    uint64_t v1 = 0;
  }
  else {
    uint64_t v1 = off_1E57D76F0[a1];
  }
  return [(__CFString *)v1 copy];
}

id MRAVEndpointGetLocalEndpoint(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  id v3 = +[MRAVLocalEndpoint sharedLocalEndpointForRoutingContextWithUID:a1];
  return v3;
}

id _MRProtoUtilsNSDictionaryFromProtoDictionary(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F1CA60] dictionary];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v3 = objc_msgSend(v1, "pairs", 0);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v15 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        id v9 = [v8 value];
        id v10 = _MRProtoUtilsPlistTypeFromProtoValue(v9);
        id v11 = [v8 key];
        [v2 setObject:v10 forKeyedSubscript:v11];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v5);
  }

  id v12 = (void *)[v2 copy];

  return v12;
}

id _MRProtoUtilsPlistTypeFromProtoValue(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 hasStringValue])
  {
    uint64_t v2 = [v1 stringValue];
LABEL_13:
    uint64_t v5 = (void *)v2;
    goto LABEL_14;
  }
  if ([v1 hasInt64Value])
  {
    uint64_t v2 = objc_msgSend(NSNumber, "numberWithLongLong:", objc_msgSend(v1, "int64Value"));
    goto LABEL_13;
  }
  if ([v1 hasFloatValue])
  {
    id v3 = NSNumber;
    [v1 floatValue];
    uint64_t v2 = objc_msgSend(v3, "numberWithFloat:");
    goto LABEL_13;
  }
  if ([v1 hasDoubleValue])
  {
    uint64_t v4 = NSNumber;
    [v1 doubleValue];
    uint64_t v2 = objc_msgSend(v4, "numberWithDouble:");
    goto LABEL_13;
  }
  if ([v1 hasDataValue])
  {
    uint64_t v2 = [v1 dataValue];
    goto LABEL_13;
  }
  if ([v1 hasBoolValue])
  {
    uint64_t v2 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v1, "BOOLValue"));
    goto LABEL_13;
  }
  if ([v1 hasDateValue])
  {
    id v7 = [v1 dateValue];
    if (_ISO8601DateFormatter_onceToken != -1) {
      dispatch_once(&_ISO8601DateFormatter_onceToken, &__block_literal_global_16);
    }
    uint64_t v8 = [0 dateFromString:v7];
    goto LABEL_23;
  }
  if ([v1 hasDictionaryValue])
  {
    id v7 = [v1 dictionaryValue];
    uint64_t v8 = _MRProtoUtilsNSDictionaryFromProtoDictionary();
LABEL_23:
    uint64_t v5 = (void *)v8;
LABEL_24:

    goto LABEL_14;
  }
  if ([v1 arrayValuesCount])
  {
    uint64_t v5 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v1, "arrayValuesCount"));
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v7 = objc_msgSend(v1, "arrayValues", 0);
    uint64_t v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v15;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v15 != v11) {
            objc_enumerationMutation(v7);
          }
          id v13 = _MRProtoUtilsPlistTypeFromProtoValue(*(void *)(*((void *)&v14 + 1) + 8 * i));
          if (v13) {
            [v5 addObject:v13];
          }
        }
        uint64_t v10 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v10);
    }
    goto LABEL_24;
  }
  uint64_t v5 = 0;
LABEL_14:

  return v5;
}

void sub_194F933C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  objc_sync_exit(v24);
  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a24, 8);
  _Unwind_Resume(a1);
}

void sub_194F9354C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void MRMediaRemoteServiceGetActiveSystemEndpointUID(void *a1, int64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  uint64_t v8 = a3;
  kdebug_trace();
  id v9 = a1;
  uint64_t v10 = MRCreateXPCMessage(0x300000000000010uLL);
  xpc_dictionary_set_int64(v10, "MRXPC_ROUTE_OPTIONS_KEY", a2);
  uint64_t v11 = [v9 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetActiveSystemEndpointUID_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v14 = v7;
  id v12 = v7;
  xpc_connection_send_message_with_reply(v11, v10, v8, handler);
}

uint64_t MRCreateContentItemsFromXPCMessage(void *a1)
{
  return MRCreateArrayFomXPCMessage(a1, "MRXPC_CONTENT_CHILD_ITEMS_DATA_KEY", &__block_literal_global_53);
}

uint64_t MRNowPlayingPlayerPathCopy(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v5 = [NSString stringWithUTF8String:"MRNowPlayingPlayerPathRef MRNowPlayingPlayerPathCopy(MRNowPlayingPlayerPathRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 390, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  uint64_t v2 = [v1 copy];

  return v2;
}

void sub_194F93FA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F943E8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 96));
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F945F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void MRAVRoutingDiscoverySessionSetRoutingContextUID(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)MEMORY[0x199718E70]();
  [a1 setRoutingContextUID:a2];
}

void MRAVEndpointGetOutputDeviceUIDVolumeControlCapabilities(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)MEMORY[0x199718E70]();
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  id v11[2] = __MRAVEndpointGetOutputDeviceUIDVolumeControlCapabilities_block_invoke;
  v11[3] = &unk_1E57D3E28;
  id v10 = v8;
  id v12 = v10;
  [a1 outputDeviceVolumeControlCapabilities:a2 queue:v7 completion:v11];
}

void MRAVEndpointGetOutputDeviceUIDVolume(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)MEMORY[0x199718E70]();
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  id v11[2] = __MRAVEndpointGetOutputDeviceUIDVolume_block_invoke;
  v11[3] = &unk_1E57D6020;
  id v10 = v8;
  id v12 = v10;
  [a1 outputDeviceVolume:a2 queue:v7 completion:v11];
}

void sub_194F94938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id MRMediaRemoteVolumeControlCapabilitiesDescription(int a1)
{
  id v1 = (void *)MRMediaRemotePickedRouteVolumeControlCapabilitiesCopyDescription(a1);

  return v1;
}

void sub_194F95B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F95C80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F96530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194F96604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MRPlaybackQueueRequestSetIncludeLanguageOptions(void *a1, uint64_t a2)
{
  if (a1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v5 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v6 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRPlaybackQueueRequestSetIncludeLanguageOptions(MRPlaybackQueueRequestRef, _Bool)");
      uint64_t v7 = objc_opt_class();
      [v5 handleFailureInFunction:v6, @"MRPlaybackQueueRequest_Deprecated.m", 128, @"Type mismatch, expecting %@ found %@", v7, objc_opt_class() file lineNumber description];
    }
  }

  return [a1 setIncludeLanguageOptions:a2];
}

void sub_194F97208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MRPlaybackQueueRequestSetIncludeInfo(void *a1, uint64_t a2)
{
  if (a1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v5 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v6 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRPlaybackQueueRequestSetIncludeInfo(MRPlaybackQueueRequestRef, _Bool)");
      uint64_t v7 = objc_opt_class();
      [v5 handleFailureInFunction:v6, @"MRPlaybackQueueRequest_Deprecated.m", 112, @"Type mismatch, expecting %@ found %@", v7, objc_opt_class() file lineNumber description];
    }
  }

  return [a1 setIncludeInfo:a2];
}

void sub_194F97714(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F97FB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F982C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id AVOutputContextOutputDeviceDidChangeNotificationFunction()
{
  return (id)constantValAVOutputContextOutputDeviceDidChangeNotification;
}

id AVOutputContextOutputDeviceDidChangeNotificationFunction_0()
{
  return (id)constantValAVOutputContextOutputDeviceDidChangeNotification_0;
}

id AVOutputDeviceDiscoverySessionFunction()
{
  return (id)classAVOutputDeviceDiscoverySession;
}

id AVOutputDeviceDiscoverySessionFunction_0()
{
  return (id)classAVOutputDeviceDiscoverySession_0;
}

id AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotificationFunction()
{
  return (id)constantValAVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification;
}

id AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotificationFunction_0()
{
  return (id)constantValAVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification_0;
}

void sub_194F98BB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id initValAVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification()
{
  if (AVFoundationLibrary_sOnce_2 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_2, &__block_literal_global_24);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_2, "AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification, *v0);
  }
  getAVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotificationFunction;
  id v1 = (void *)constantValAVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification;

  return v1;
}

id initValAVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification_0()
{
  if (AVFoundationLibrary_sOnce_12 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_12, &__block_literal_global_86);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_12, "AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification_0, *v0);
  }
  getAVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification_0[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotificationFunction_0;
  id v1 = (void *)constantValAVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification_0;

  return v1;
}

Class initAVOutputDeviceDiscoverySession()
{
  if (AVFoundationLibrary_sOnce_2 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_2, &__block_literal_global_24);
  }
  Class result = objc_getClass("AVOutputDeviceDiscoverySession");
  classAVOutputDeviceDiscoverySession = (uint64_t)result;
  getAVOutputDeviceDiscoverySessionClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceDiscoverySessionFunction;
  return result;
}

Class initAVOutputDeviceDiscoverySession_0()
{
  if (AVFoundationLibrary_sOnce_12 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_12, &__block_literal_global_86);
  }
  Class result = objc_getClass("AVOutputDeviceDiscoverySession");
  classAVOutputDeviceDiscoverySession_0 = (uint64_t)result;
  getAVOutputDeviceDiscoverySessionClass_0[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputDeviceDiscoverySessionFunction_0;
  return result;
}

void sub_194F98F7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194F99088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(v10);
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_194F995E0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

CFStringRef MRMediaRemoteCopyRouteDiscoveryModeDescription(unsigned int a1)
{
  if (a1 > 3) {
    CFStringRef v1 = @"Unknown";
  }
  else {
    CFStringRef v1 = off_1E57DA370[a1];
  }
  return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
}

id MRMediaRemoteEndpointFeaturesDescription(char a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  uint64_t v3 = v2;
  if (a1)
  {
    [v2 appendString:@"Audio|"];
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  [v3 appendString:@"Screen|"];
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  [v3 appendString:@"Video|"];
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  [v3 appendString:@"RemoteControl|"];
  if ((a1 & 0x10) != 0) {
LABEL_6:
  }
    [v3 appendString:@"Companion|"];
LABEL_7:

  return v3;
}

uint64_t MRAVEndpointCopyOrigin(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

void sub_194F9B5FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __MRMediaRemoteGetPickedRoutedVolumeControlCapabilities_block_invoke_82(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(unsigned int *)(a1 + 40));
  }
  return result;
}

uint64_t __MRMediaRemoteGetMediaPlaybackVolumeForOrigin_block_invoke_117(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(float))(result + 16))(*(float *)(a1 + 40));
  }
  return result;
}

uint64_t MRNowPlayingPlayerPathEqualToPlayerPath(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    uint64_t v7 = [MEMORY[0x1E4F28B00] currentHandler];
    id v8 = objc_msgSend(NSString, "stringWithUTF8String:", "Boolean MRNowPlayingPlayerPathEqualToPlayerPath(MRNowPlayingPlayerPathRef, MRNowPlayingPlayerPathRef)");
    uint64_t v9 = objc_opt_class();
    [v7 handleFailureInFunction:v8, @"MRNowPlayingPlayerPath.m", 465, @"Type mismatch, expecting %@ found %@", v9, objc_opt_class() file lineNumber description];

    if (!v4) {
      goto LABEL_6;
    }
  }
  else if (!v4)
  {
    goto LABEL_6;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v11 = objc_msgSend(NSString, "stringWithUTF8String:", "Boolean MRNowPlayingPlayerPathEqualToPlayerPath(MRNowPlayingPlayerPathRef, MRNowPlayingPlayerPathRef)");
    uint64_t v12 = objc_opt_class();
    [v10 handleFailureInFunction:v11, @"MRNowPlayingPlayerPath.m", 466, @"Type mismatch, expecting %@ found %@", v12, objc_opt_class() file lineNumber description];
  }
LABEL_6:
  if (v3 == v4) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = [v3 isEqual:v4];
  }

  return v5;
}

uint64_t __MRAVEndpointGetOutputDeviceUIDVolume_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t __MRAVEndpointGetOutputDeviceUIDVolumeControlCapabilities_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRMediaRemotePlaybackSessionSetRequestCallback(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v6 = [v4 playerClientForPlayerPath:a1];

  uint64_t v5 = [v6 clientCallbacks];
  [v5 setPlaybackSessionCallback:v3];
}

uint64_t MRMediaRemoteCopyPickableRoutes()
{
  return MRMediaRemoteCopyPickableRoutesForCategory(0);
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemFormattedArtworkCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  uint64_t v12 = [v11 formattedArtworkCallbacks];
  id v13 = (void *)MEMORY[0x1E4F77978];
  id v14 = (void *)MEMORY[0x1997190F0](v7);

  long long v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  return v15;
}

void *MRMediaRemotePlaybackQueueDataSourceAddCreateChildContentItemCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  uint64_t v12 = [v11 createChildItemCallbacks];
  id v13 = (void *)MEMORY[0x1E4F77978];
  id v14 = (void *)MEMORY[0x1997190F0](v7);

  long long v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  return v15;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemTranscriptAlignmentsCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  uint64_t v12 = [v11 transcriptAlignmentsCallbacks];
  id v13 = (void *)MEMORY[0x1E4F77978];
  id v14 = (void *)MEMORY[0x1997190F0](v7);

  long long v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  return v15;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemInfoCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  uint64_t v12 = [v11 infoCallbacks];
  id v13 = (void *)MEMORY[0x1E4F77978];
  id v14 = (void *)MEMORY[0x1997190F0](v7);

  long long v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  return v15;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemLyricsCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  uint64_t v12 = [v11 lyricsCallbacks];
  id v13 = (void *)MEMORY[0x1E4F77978];
  id v14 = (void *)MEMORY[0x1997190F0](v7);

  long long v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  return v15;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemArtworkCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  uint64_t v12 = [v11 artworkCallbacks];
  id v13 = (void *)MEMORY[0x1E4F77978];
  id v14 = (void *)MEMORY[0x1997190F0](v7);

  long long v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  return v15;
}

void *MRMediaRemotePlaybackQueueDataSourceAddCreateContentItemForIdentifierCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  uint64_t v12 = [v11 createItemForIdentifierCallbacks];
  id v13 = (void *)MEMORY[0x1E4F77978];
  id v14 = (void *)MEMORY[0x1997190F0](v7);

  long long v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  long long v16 = [v10 playerPath];
  long long v17 = [v10 clientCallbacks];
  MRMediaRemoteSetPlaybackQueueCapabilities((uint64_t)v16, [v17 capabilities], 0, 0);

  return v15;
}

void *MRMediaRemotePlaybackQueueDataSourceAddCreatePlaybackQueueForRequestCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  uint64_t v12 = [v11 createPlaybackQueueForRequestCallbacks];
  id v13 = (void *)MEMORY[0x1E4F77978];
  id v14 = (void *)MEMORY[0x1997190F0](v7);

  long long v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  long long v16 = [v10 playerPath];
  long long v17 = [v10 clientCallbacks];
  MRMediaRemoteSetPlaybackQueueCapabilities((uint64_t)v16, [v17 capabilities], 0, 0);

  return v15;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemMetadataCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  uint64_t v12 = [v11 metadataCallbacks];
  id v13 = (void *)MEMORY[0x1E4F77978];
  id v14 = (void *)MEMORY[0x1997190F0](v7);

  long long v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  return v15;
}

id MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  if (a2 == 2)
  {
    [v5 setLastCallback:v6];
  }
  else if (a2 == 1)
  {
    [v5 setFirstCallback:v6];
  }
  else
  {
    [v5 addCallback:v6];
  }

  return v6;
}

uint64_t MRContentItemGetLegacyUniqueIdentifier(void *a1)
{
  CFStringRef v1 = [a1 metadata];
  uint64_t v2 = [v1 legacyUniqueIdentifier];

  return v2;
}

uint64_t MRContentItemGetHasElapsedTime(void *a1)
{
  CFStringRef v1 = [a1 metadata];
  uint64_t v2 = [v1 hasElapsedTime];

  return v2;
}

uint64_t MRNowPlayingClientCopyBundleIdentifierExtendedHierarchy(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      id v5 = [NSString stringWithUTF8String:"CFArrayRef MRNowPlayingClientCopyBundleIdentifierExtendedHierarchy(MRNowPlayingClientRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRNowPlayingPlayerPath.m", 197, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  uint64_t v2 = [v1 extendedBundleIdentifierHierarchy];

  return v2;
}

void sub_194F9CFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

CFTypeRef MRContentItemGetReleaseDate(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 releaseDate];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

CFTypeRef MRContentItemGetRadioStationString(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 radioStationString];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

CFTypeRef MRContentItemGetRadioStationName(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 radioStationName];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

CFTypeRef MRContentItemGetGenre(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 genre];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

CFTypeRef MRContentItemGetContentIdentifier(void *a1)
{
  id v1 = [a1 metadata];
  uint64_t v2 = [v1 contentIdentifier];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

void sub_194F9D570(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _MRSendLyricsEventMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_MRLyricsEventProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark() || (_MRLyricsEventProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void MRContentItemSetLegacyUniqueIdentifier(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 legacyUniqueIdentifier] == a2)
  {
    id v5 = [v8 metadata];
    char v6 = [v5 hasLegacyUniqueIdentifier];

    if (v6) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  id v7 = [v8 metadata];
  [v7 setLegacyUniqueIdentifier:a2];

LABEL_8:
}

void MRContentItemSetDuration(void *a1, double a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v9 = a1;
  id v4 = [v9 metadata];
  [v4 duration];
  if (v5 == a2)
  {
    char v6 = [v9 metadata];
    char v7 = [v6 hasDuration];

    if (v7) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  id v8 = [v9 metadata];
  [v8 setDuration:a2];

LABEL_8:
}

void MRContentItemSetHasArtworkData(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 artworkAvailable] != a2)
  {

LABEL_6:
    char v7 = [v8 metadata];
    [v7 setArtworkAvailable:a2];

    goto LABEL_7;
  }
  double v5 = [v8 metadata];
  char v6 = [v5 hasArtworkAvailable];

  if ((v6 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_7:
}

void MRContentItemSetTrackNumber(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 trackNumber] == a2)
  {
    double v5 = [v8 metadata];
    char v6 = [v5 hasTrackNumber];

    if (v6) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  char v7 = [v8 metadata];
  [v7 setTrackNumber:a2];

LABEL_8:
}

void MRContentItemSetMediaType(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 mediaType] == a2)
  {
    double v5 = [v8 metadata];
    char v6 = [v5 hasMediaType];

    if (v6) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  char v7 = [v8 metadata];
  [v7 setMediaType:a2];

LABEL_8:
}

void MRContentItemSetITunesStoreArtistIdentifier(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 iTunesStoreArtistIdentifier] == a2)
  {
    double v5 = [v8 metadata];
    char v6 = [v5 hasITunesStoreArtistIdentifier];

    if (v6) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  char v7 = [v8 metadata];
  [v7 setITunesStoreArtistIdentifier:a2];

LABEL_8:
}

void MRContentItemSetEditingStyleFlags(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 editingStyleFlags] == a2)
  {
    double v5 = [v8 metadata];
    char v6 = [v5 hasEditingStyleFlags];

    if (v6) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  char v7 = [v8 metadata];
  [v7 setEditingStyleFlags:a2];

LABEL_8:
}

void MRContentItemSetMediaSubType(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 mediaSubType] == a2)
  {
    double v5 = [v8 metadata];
    char v6 = [v5 hasMediaSubType];

    if (v6) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  char v7 = [v8 metadata];
  [v7 setMediaSubType:a2];

LABEL_8:
}

void MRContentItemSetITunesStoreAlbumArtistIdentifier(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 iTunesStoreAlbumArtistIdentifier] == a2)
  {
    double v5 = [v8 metadata];
    char v6 = [v5 hasITunesStoreAlbumArtistIdentifier];

    if (v6) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  char v7 = [v8 metadata];
  [v7 setITunesStoreAlbumArtistIdentifier:a2];

LABEL_8:
}

void MRContentItemSetReleaseDate(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v10 = v3;
    MRCreateItemMetadataIfNotPresent(a1);
    id v4 = a1;
    double v5 = [v4 metadata];
    id v6 = [v5 releaseDate];
    if (v6 == v10)
    {
      char v7 = [v4 metadata];
      id v8 = [v7 releaseDate];

      if (v8)
      {
LABEL_6:

        id v3 = v10;
        goto LABEL_7;
      }
    }
    else
    {
    }
    id v9 = [v4 metadata];
    [v9 setReleaseDate:v10];

    goto LABEL_6;
  }
LABEL_7:
}

void MRContentItemSetIsInTransition(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 isInTransition] != a2)
  {

LABEL_6:
    char v7 = [v8 metadata];
    [v7 setInTransition:a2];

    goto LABEL_7;
  }
  double v5 = [v8 metadata];
  char v6 = [v5 hasInTransition];

  if ((v6 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_7:
}

void MRContentItemSetDefaultPlaybackRate(void *a1, float a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v10 = a1;
  id v4 = [v10 metadata];
  [v4 defaultPlaybackRate];
  if (v5 == a2)
  {
    char v6 = [v10 metadata];
    char v7 = [v6 hasDefaultPlaybackRate];

    if (v7) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  id v8 = [v10 metadata];
  *(float *)&double v9 = a2;
  [v8 setDefaultPlaybackRate:v9];

LABEL_8:
}

void MRContentItemSetIsAlwaysLive(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 isAlwaysLive] != a2)
  {

LABEL_6:
    char v7 = [v8 metadata];
    [v7 setAlwaysLive:a2];

    goto LABEL_7;
  }
  float v5 = [v8 metadata];
  char v6 = [v5 hasAlwaysLive];

  if ((v6 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_7:
}

void MRContentItemSetIsLoading(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 isLoading] != a2)
  {

LABEL_6:
    char v7 = [v8 metadata];
    [v7 setLoading:a2];

    goto LABEL_7;
  }
  float v5 = [v8 metadata];
  char v6 = [v5 hasLoading];

  if ((v6 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_7:
}

void MRContentItemSetPlayable(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 isPlayable] != a2)
  {

LABEL_6:
    char v7 = [v8 metadata];
    [v7 setPlayable:a2];

    goto LABEL_7;
  }
  float v5 = [v8 metadata];
  char v6 = [v5 hasPlayable];

  if ((v6 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_7:
}

void MRContentItemSetRadioStationString(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetRadioStationString(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 998, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetRadioStationString_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetDeviceSpecificUserInfo(void *a1, uint64_t a2)
{
  v2[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __MRContentItemSetDeviceSpecificUserInfo_block_invoke;
  v2[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  v2[4] = a2;
  MRContentItemSetMetadataRef(a1, a2, v2);
}

void MRContentItemSetUserInfo(void *a1, uint64_t a2)
{
  v2[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __MRContentItemSetUserInfo_block_invoke;
  v2[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  v2[4] = a2;
  MRContentItemSetMetadataRef(a1, a2, v2);
}

void MRContentItemSetRadioStationName(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetRadioStationName(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 987, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetRadioStationName_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetContentIdentifier(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetContentIdentifier(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 1173, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetContentIdentifier_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetCollectionInfo(void *a1, uint64_t a2)
{
  v2[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __MRContentItemSetCollectionInfo_block_invoke;
  v2[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  v2[4] = a2;
  MRContentItemSetMetadataRef(a1, a2, v2);
}

void MRContentItemSetTitle(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetTitle(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 126, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetTitle_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetAlbumName(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetAlbumName(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 162, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetAlbumName_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetTrackArtistName(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetTrackArtistName(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 185, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetTrackArtistName_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetGenre(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetGenre(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 473, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetGenre_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetAlbumArtistName(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetAlbumArtistName(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 197, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetAlbumArtistName_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetComposer(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetComposer(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 279, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetComposer_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetAlbumYear(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetAlbumYear(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 173, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetAlbumYear_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetPlaybackRate(void *a1, float a2)
{
  if (a1)
  {
    MRCreateItemMetadataIfNotPresent(a1);
    id v4 = a1;
    float v5 = [v4 metadata];
    [v5 playbackRate];
    if (v6 == a2)
    {
      char v7 = [v4 metadata];
      char v8 = [v7 hasPlaybackRate];

      if (v8)
      {
LABEL_10:

        [MEMORY[0x1E4F1C9C8] timeIntervalSinceReferenceDate];
        double v13 = v12;
        MRCreateItemMetadataIfNotPresent(v4);
        id v19 = v4;
        id v14 = [v19 metadata];
        [v14 elapsedTimeTimestamp];
        if (v15 == v13)
        {
          long long v16 = [v19 metadata];
          char v17 = [v16 hasElapsedTimeTimestamp];

          if (v17) {
            goto LABEL_15;
          }
        }
        else
        {
        }
        id v18 = [v19 metadata];
        [v18 setElapsedTimeTimestamp:v13];

LABEL_15:

        return;
      }
    }
    else
    {
    }
    id v10 = [v4 metadata];
    *(float *)&double v11 = a2;
    [v10 setPlaybackRate:v11];

    goto LABEL_10;
  }
  double v9 = (void *)MEMORY[0x1E4F1C9C8];

  [v9 timeIntervalSinceReferenceDate];
}

void MRContentItemSetElapsedTime(void *a1, double a2)
{
  if (a1)
  {
    MRCreateItemMetadataIfNotPresent(a1);
    id v4 = a1;
    float v5 = [v4 metadata];
    [v5 elapsedTime];
    if (v6 == a2)
    {
      char v7 = [v4 metadata];
      char v8 = [v7 hasElapsedTime];

      if (v8)
      {
LABEL_10:

        [MEMORY[0x1E4F1C9C8] timeIntervalSinceReferenceDate];
        double v12 = v11;
        MRCreateItemMetadataIfNotPresent(v4);
        id v18 = v4;
        double v13 = [v18 metadata];
        [v13 elapsedTimeTimestamp];
        if (v14 == v12)
        {
          double v15 = [v18 metadata];
          char v16 = [v15 hasElapsedTimeTimestamp];

          if (v16) {
            goto LABEL_15;
          }
        }
        else
        {
        }
        char v17 = [v18 metadata];
        [v17 setElapsedTimeTimestamp:v12];

LABEL_15:

        return;
      }
    }
    else
    {
    }
    id v10 = [v4 metadata];
    [v10 setElapsedTime:a2];

    goto LABEL_10;
  }
  double v9 = (void *)MEMORY[0x1E4F1C9C8];

  [v9 timeIntervalSinceReferenceDate];
}

void MRContentItemSetArtworkIdentifier(void *a1, void *a2)
{
  if (objc_opt_respondsToSelector()) {
    a2 = (void *)[a2 performSelector:sel_stringValue];
  }
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      float v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRContentItemSetArtworkIdentifier(MRContentItemRef, CFStringRef)");
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MRContentItem_Deprecated.m", 724, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRContentItemSetArtworkIdentifier_block_invoke;
  v7[3] = &__block_descriptor_40_e27_B24__0__MRContentItem_8_v16l;
  void v7[4] = a2;
  MRContentItemSetMetadataRef(a1, (uint64_t)a2, v7);
}

void MRContentItemSetMetadataRef(void *a1, uint64_t a2, void *a3)
{
  float v5 = a3;
  if (a2) {
    MRCreateItemMetadataIfNotPresent(a1);
  }
  v5[2](v5, a1, a2);
}

void MRCreateItemMetadataIfNotPresent(void *a1)
{
  id v3 = a1;
  id v1 = [v3 metadata];

  if (!v1)
  {
    uint64_t v2 = objc_alloc_init(MRContentItemMetadata);
    [v3 setMetadata:v2];
  }
}

BOOL __MRContentItemSetArtworkIdentifier_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 artworkIdentifier];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 artworkIdentifier];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setArtworkIdentifier:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetUserInfo_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 userInfo];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 userInfo];
  char v12 = [v11 isEqual:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setUserInfo:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetTrackArtistName_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 trackArtistName];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 trackArtistName];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setTrackArtistName:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetTitle_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 title];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 title];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setTitle:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetRadioStationString_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 radioStationString];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 radioStationString];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setRadioStationString:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetRadioStationName_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 radioStationName];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 radioStationName];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setRadioStationName:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetGenre_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 genre];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 genre];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setGenre:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetDeviceSpecificUserInfo_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 deviceSpecificUserInfo];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 deviceSpecificUserInfo];
  char v12 = [v11 isEqual:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setDeviceSpecificUserInfo:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetContentIdentifier_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 contentIdentifier];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 contentIdentifier];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setContentIdentifier:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetComposer_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 composer];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 composer];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setComposer:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetCollectionInfo_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 collectionInfo];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 collectionInfo];
  char v12 = [v11 isEqual:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setCollectionInfo:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetAlbumYear_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 albumYear];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 albumYear];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setAlbumYear:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetAlbumName_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 albumName];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 albumName];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setAlbumName:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

BOOL __MRContentItemSetAlbumArtistName_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 metadata];
  char v7 = [v6 albumArtistName];
  BOOL v8 = v7 != a3;
  if (v7 == a3)
  {

LABEL_8:
    goto LABEL_9;
  }
  double v9 = v7;
  if (!a3)
  {

    goto LABEL_7;
  }
  id v10 = [v5 metadata];
  double v11 = [v10 albumArtistName];
  char v12 = [v11 isEqualToString:a3];

  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v6 = [v5 metadata];
    [v6 setAlbumArtistName:v13];
    goto LABEL_8;
  }
  BOOL v8 = 0;
LABEL_9:

  return v8;
}

id MRMediaRemoteAddCommandHandlerForPlayer(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v6 = [v5 playerClientForPlayerPath:v4];

  char v7 = [MEMORY[0x1E4F29128] UUID];
  BOOL v8 = [v7 UUIDString];

  double v9 = [v6 clientCallbacks];
  [v9 addCommandHandlerBlock:v3 forKey:v8];

  return v8;
}

MRPlaybackQueueRequest *MRCreatePlaybackQueueRequestFromXPCMessage(void *a1)
{
  id v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_NOWPLAYING_PLAYBACK_QUEUE_REQUEST_KEY");
  uint64_t v2 = [[MRPlaybackQueueRequest alloc] initWithData:v1];

  return v2;
}

void MRRegisterTransaction(void *a1)
{
  id v1 = a1;
  if (_MRRegisteredTransactionsInitialize_onceToken != -1) {
    dispatch_once(&_MRRegisteredTransactionsInitialize_onceToken, &__block_literal_global_583);
  }
  uint64_t v2 = __registeredTransactionsQueue;
  block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __MRRegisterTransaction_block_invoke;
  block[3] = &unk_1E57D0518;
  id v5 = v1;
  id v3 = v1;
  dispatch_async(v2, block);
}

id __MRAnalyticsSendEvent_block_invoke_2(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v3 = (void *)[v2 mutableCopy];

  id v4 = *(void **)(a1 + 32);
  if (v4)
  {
    BOOL IsInformational = MRMediaRemoteErrorIsInformational(v4);
    uint64_t v6 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(*(id *)(a1 + 32), "code"));
    if (IsInformational)
    {
      [v3 setObject:v6 forKeyedSubscript:@"informationalErrorCode"];
    }
    else
    {
      [v3 setObject:v6 forKeyedSubscript:@"errorCode"];

      char v7 = [*(id *)(a1 + 32) domain];
      [v3 setObject:v7 forKeyedSubscript:@"errorDomain"];

      BOOL v8 = [*(id *)(a1 + 32) domain];
      int v9 = [v8 isEqual:@"kMRMediaRemoteFrameworkErrorDomain"];

      if (v9)
      {
        id v10 = (__CFString *)MRErrorCopyDescription(*(__CFError **)(a1 + 32));
        [v3 setObject:v10 forKeyedSubscript:@"errorDescription"];
      }
      double v11 = [*(id *)(a1 + 32) recursiveUnderlyingError];
      uint64_t v6 = v11;
      if (v11)
      {
        char v12 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v11, "code"));
        [v3 setObject:v12 forKeyedSubscript:@"underlyingErrorCode"];
      }
    }
  }

  return v3;
}

void MRMediaRemoteSetCommandHandlerBlockForOrigin(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = +[MRClient localClient];
  id v4 = [[MRPlayerPath alloc] initWithOrigin:a1 client:v5 player:0];
  MRMediaRemoteSetCommandHandlerBlockForPlayer((uint64_t)v4, v3);
}

void __MRActiveEndpointTypeForCurrentApplication_block_invoke()
{
  id v0 = +[MRUserSettings currentSettings];
  int v1 = [v0 supportGroupSessionActiveEndpoint];

  if (v1)
  {
    uint64_t v2 = [MEMORY[0x1E4F28B50] mainBundle];
    id v3 = [v2 bundleIdentifier];

    MRActiveEndpointTypeForCurrentApplication_type = MRActiveEndpointTypeForBundleIdentifier(v3);
  }
}

uint64_t MROriginIsLocalOrigin(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      id v5 = [NSString stringWithUTF8String:"Boolean MROriginIsLocalOrigin(MROriginRef)"];
      uint64_t v6 = objc_opt_class();
      [v4 handleFailureInFunction:v5, @"MROrigin_Deprecated.m", 83, @"Type mismatch, expecting %@ found %@", v6, objc_opt_class() file lineNumber description];
    }
  }
  uint64_t v2 = [v1 isLocal];

  return v2;
}

void __MRMediaRemoteGetSupportedCommandsForPlayer_block_invoke(id *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __MRMediaRemoteGetSupportedCommandsForPlayer_block_invoke_2;
  v15[3] = &unk_1E57D13D0;
  id v6 = v5;
  id v16 = v6;
  id v17 = a1[4];
  id v18 = a1[5];
  id v19 = a1[6];
  id v20 = a1[7];
  char v7 = (void (**)(void, void, void))MEMORY[0x1997190F0](v15);
  if ([v6 isResolved])
  {
    int v8 = [v6 isLocal];
    int v9 = +[MRNowPlayingOriginClientManager sharedManager];
    id v10 = v9;
    if (v8)
    {
      double v11 = [v9 playerClientForPlayerPath:v6];

      char v12 = [v11 supportedCommands];
      ((void (**)(void, void *, void))v7)[2](v7, v12, 0);
    }
    else
    {
      double v11 = [v9 playerClientRequestsForPlayerPath:v6];

      [v11 handleSupportedCommandsRequestWithCompletion:v7];
    }
  }
  else if (a3)
  {
    uint64_t Error = (void *)MRMediaRemoteNowPlayingPlayerPathCreateError(v6);
    ((void (**)(void, void, void *))v7)[2](v7, 0, Error);
  }
  else
  {
    double v14 = (void *)MRGetSharedService();
    MRMediaRemoteServiceGetSupportedCommands(v14, v6, a1[6], v7);
  }
}

void __MRMediaRemoteGetSupportedCommandsForPlayer_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  char v7 = objc_msgSend([NSString alloc], "initWithFormat:", @"%ld commands", objc_msgSend(v5, "count"));
  uint64_t v8 = *(void *)(a1 + 32);
  int v9 = _MRLogForCategory(0xAuLL);
  id v10 = v9;
  if (!v6 && v7)
  {
    BOOL v11 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
    if (v8)
    {
      if (v11)
      {
        uint64_t v13 = *(void *)(a1 + 32);
        uint64_t v12 = *(void *)(a1 + 40);
        double v14 = [MEMORY[0x1E4F1C9C8] date];
        [v14 timeIntervalSinceDate:*(void *)(a1 + 48)];
        *(_DWORD *)long long buf = 138544386;
        long long v40 = @"supportedCommands";
        __int16 v41 = 2114;
        uint64_t v42 = v12;
        __int16 v43 = 2112;
        id v44 = v7;
        __int16 v45 = 2114;
        uint64_t v46 = v13;
        __int16 v47 = 2048;
        uint64_t v48 = v15;
        id v16 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
        id v17 = v10;
        uint32_t v18 = 52;
LABEL_16:
        _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, v16, buf, v18);
        goto LABEL_17;
      }
      goto LABEL_22;
    }
    if (!v11) {
      goto LABEL_22;
    }
    uint64_t v27 = *(void *)(a1 + 40);
    double v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 48)];
    *(_DWORD *)long long buf = 138544130;
    long long v40 = @"supportedCommands";
    __int16 v41 = 2114;
    uint64_t v42 = v27;
    __int16 v43 = 2112;
    id v44 = v7;
    __int16 v45 = 2048;
    uint64_t v46 = v28;
    id v16 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
LABEL_15:
    id v17 = v10;
    uint32_t v18 = 42;
    goto LABEL_16;
  }
  if (v6)
  {
    BOOL v19 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
    if (v8)
    {
      if (v19)
      {
        uint64_t v21 = *(void *)(a1 + 32);
        uint64_t v20 = *(void *)(a1 + 40);
        double v14 = [MEMORY[0x1E4F1C9C8] date];
        [v14 timeIntervalSinceDate:*(void *)(a1 + 48)];
        *(_DWORD *)long long buf = 138544386;
        long long v40 = @"supportedCommands";
        __int16 v41 = 2114;
        uint64_t v42 = v20;
        __int16 v43 = 2114;
        id v44 = v6;
        __int16 v45 = 2114;
        uint64_t v46 = v21;
        __int16 v47 = 2048;
        uint64_t v48 = v22;
        _os_log_error_impl(&dword_194F3C000, v10, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
LABEL_17:

        goto LABEL_22;
      }
    }
    else if (v19)
    {
      __MRMediaRemoteGetSupportedCommandsForPlayer_block_invoke_2_cold_1(a1);
    }
    goto LABEL_22;
  }
  BOOL v23 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (!v8)
  {
    if (!v23) {
      goto LABEL_22;
    }
    uint64_t v29 = *(void *)(a1 + 40);
    double v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 48)];
    *(_DWORD *)long long buf = 138543874;
    long long v40 = @"supportedCommands";
    __int16 v41 = 2114;
    uint64_t v42 = v29;
    __int16 v43 = 2048;
    id v44 = v30;
    id v16 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
    id v17 = v10;
    uint32_t v18 = 32;
    goto LABEL_16;
  }
  if (v23)
  {
    id v25 = *(void **)(a1 + 32);
    uint64_t v24 = *(void *)(a1 + 40);
    double v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 48)];
    *(_DWORD *)long long buf = 138544130;
    long long v40 = @"supportedCommands";
    __int16 v41 = 2114;
    uint64_t v42 = v24;
    __int16 v43 = 2114;
    id v44 = v25;
    __int16 v45 = 2048;
    uint64_t v46 = v26;
    id v16 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
    goto LABEL_15;
  }
LABEL_22:

  block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __MRMediaRemoteGetSupportedCommandsForPlayer_block_invoke_41;
  block[3] = &unk_1E57D13A8;
  id v36 = v5;
  id v31 = *(NSObject **)(a1 + 56);
  id v32 = *(id *)(a1 + 64);
  id v37 = v6;
  id v38 = v32;
  id v33 = v6;
  id v34 = v5;
  dispatch_async(v31, block);
}

void sub_194FA2B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __MRMediaRemoteServiceGetSystemIsMuted_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(a1 + 32))
  {
    id v7 = v3;
    id v4 = [v3 error];

    uint64_t v5 = *(void *)(a1 + 32);
    if (v4)
    {
      id v6 = [v7 error];
      (*(void (**)(uint64_t, void, void *))(v5 + 16))(v5, 0, v6);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, void))(v5 + 16))(v5, [v7 isMuted], 0);
    }
    id v3 = v7;
  }
}

void __MRMediaRemoteGetSystemVolumeMuted_block_invoke(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = _MRLogForCategory(0xAuLL);
  id v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      __MRMediaRemoteGetSystemVolumeMuted_block_invoke_cold_1(a1, v5, v7);
    }
  }
  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = a1[4];
    if (a2) {
      int v9 = @"YES";
    }
    else {
      int v9 = @"NO";
    }
    id v10 = [MEMORY[0x1E4F1C9C8] date];
    [v10 timeIntervalSinceDate:a1[5]];
    int v13 = 138544130;
    double v14 = @"getSystemIsMuted";
    __int16 v15 = 2114;
    uint64_t v16 = v8;
    __int16 v17 = 2112;
    uint32_t v18 = v9;
    __int16 v19 = 2048;
    uint64_t v20 = v11;
    _os_log_impl(&dword_194F3C000, v7, OS_LOG_TYPE_DEFAULT, "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds", (uint8_t *)&v13, 0x2Au);
  }
  uint64_t v12 = a1[6];
  if (v12) {
    (*(void (**)(uint64_t, uint64_t, id))(v12 + 16))(v12, a2, v5);
  }
}

id MRCreateProtobufFromXPCMessage(void *a1)
{
  id v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_PROTOBUF_DATA_KEY");
  if (v1)
  {
    uint64_t v2 = +[MRProtocolMessage protocolMessageWithProtobufData:v1 error:0];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

void sub_194FA3E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MRMediaRemotePickedRouteVolumeControlCapabilitiesCopyDescription(int a1)
{
  uint64_t v2 = [MEMORY[0x1E4F1CA48] array];
  id v3 = v2;
  if (!a1)
  {
    id v4 = @"MRVolumeControlCapabilitiesNone";
LABEL_12:
    [v3 addObject:v4];
    goto LABEL_13;
  }
  if (a1)
  {
    [v2 addObject:@"MRVolumeControlCapabilitiesRelative"];
    if ((a1 & 2) == 0)
    {
LABEL_4:
      if ((a1 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_10;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_4;
  }
  [v3 addObject:@"MRVolumeControlCapabilitiesAbsolute"];
  if ((a1 & 4) == 0)
  {
LABEL_5:
    if ((a1 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
LABEL_10:
  [v3 addObject:@"MRVolumeControlCapabilitiesAdjustment"];
  if ((a1 & 8) != 0)
  {
LABEL_11:
    id v4 = @"MRVolumeControlCapabilitiesMute";
    goto LABEL_12;
  }
LABEL_13:
  uint64_t v5 = [v3 componentsJoinedByString:@" | "];

  return v5;
}

void sub_194FA4908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void MRAVEndpointResolveActiveSystemEndpointWithType(uint64_t a1, void *a2, void *a3, double a4)
{
  id v7 = a3;
  id v8 = a2;
  int v9 = +[MRNowPlayingOriginClientManager sharedManager];
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  id v11[2] = __MRAVEndpointResolveActiveSystemEndpointWithType_block_invoke;
  v11[3] = &unk_1E57D76D0;
  id v12 = v7;
  id v10 = v7;
  [v9 resolveActiveSystemEndpointWithType:a1 timeout:v8 queue:v11 completion:a4];
}

CFTypeRef MRContentItemGetRequestIdentifier(void *a1)
{
  CFTypeRef result = [a1 requestIdentifier];
  if (result)
  {
    return CFAutorelease(result);
  }
  return result;
}

void MRMediaRemoteSetDefaultSupportedCommandsForClient(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  id v11 = a3;
  id v12 = objc_alloc_init(MRPlayerPath);
  uint64_t v16 = v12;
  if (a2)
  {
    [(MRPlayerPath *)v12 setOrigin:a2];
    if (a1)
    {
LABEL_3:
      [(MRPlayerPath *)v16 setClient:a1];
      goto LABEL_6;
    }
  }
  else
  {
    int v13 = +[MROrigin localOrigin];
    [(MRPlayerPath *)v16 setOrigin:v13];

    if (a1) {
      goto LABEL_3;
    }
  }
  double v14 = +[MRClient localClient];
  [(MRPlayerPath *)v16 setClient:v14];

LABEL_6:
  __int16 v15 = (void *)MRGetSharedService();
  MRMediaRemoteServiceSetDefaultSupportedCommands(v15, v11, v16, v10, v9);
}

uint64_t MRBundlePermittedForGroupSessions(void *a1)
{
  id v1 = a1;
  if (([v1 isEqualToString:@"com.apple.Music"] & 1) != 0
    || ([v1 isEqualToString:@"com.apple.proximitycontrold"] & 1) != 0
    || ([v1 isEqualToString:@"com.apple.MediaRemoteUI"] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [v1 isEqualToString:@"com.apple.springboard"];
  }

  return v2;
}

uint64_t MRAVOutputDeviceIsLocalDevice(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 isLocalDevice];
  return v3;
}

void sub_194FA7F84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __MRCreateIndentedDebugDescriptionFromArray_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  _MRCreateIndentedDebugDescriptionFrom(a2);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

id _MRCreateIndentedDebugDescriptionFrom(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v2 = MRCreateIndentedDebugDescriptionFromArray(v1);
  }
  else
  {
    objc_opt_class();
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v2 = MRCreateIndentedDebugDescriptionFromDictionary(v1);
    }
    else
    {
      objc_opt_class();
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v3 = [v1 allObjects];
        id v4 = ((void (*)(void))MRCreateIndentedDebugDescriptionFromArray)();

        goto LABEL_9;
      }
      uint64_t v2 = MRCreateIndentedDebugDescriptionFromObject(v1);
    }
  }
  id v4 = (void *)v2;
LABEL_9:

  return v4;
}

id MRCreateIndentedDebugDescriptionFromArray(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = (void *)MEMORY[0x199718E70]();
    id v3 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = __MRCreateIndentedDebugDescriptionFromArray_block_invoke;
    v9[3] = &unk_1E57D6AD8;
    id v4 = v3;
    id v10 = v4;
    [v1 enumerateObjectsUsingBlock:v9];
  }
  else
  {
    id v4 = 0;
  }
  uint64_t v5 = [v4 componentsJoinedByString:@"\n"];
  id v6 = MRCreateFormattedDebugDescriptionFromClass(v1, v5);
  id v7 = MRCreateIndentedDebugDescriptionFromObject(v6);

  return v7;
}

id MRCreateIndentedDebugDescriptionFromObject(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = (void *)MEMORY[0x199718E70]();
    id v3 = [v1 debugDescription];
    id v4 = objc_msgSend(v3, "stringByReplacingOccurrencesOfString:withString:options:range:", @"\n", @"\n    ", 0, 0, objc_msgSend(v3, "length") - 1);
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id MRCreateFormattedDebugDescriptionFromClass(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  id v6 = 0;
  if (v3 && v4)
  {
    id v7 = (void *)MEMORY[0x199718E70]();
    id v8 = [NSString alloc];
    id v9 = (objc_class *)objc_opt_class();
    id v10 = NSStringFromClass(v9);
    id v6 = (void *)[v8 initWithFormat:@"<%@:%p> {\n%@\n}", v10, v3, v5];
  }

  return v6;
}

void sub_194FA9948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Unwind_Resume(a1);
}

id MRPlaybackQueueCreateFromCache(void *a1, void *a2, int a3, void *a4)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a4;
  int v10 = [v8 hasRange];
  unint64_t v11 = [v8 range];
  uint64_t v13 = v12;
  double v14 = [v8 contentItemIdentifiers];
  if (!v7)
  {
    uint64_t v27 = 0;
    goto LABEL_40;
  }
  v55[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v55[1] = 3221225472;
  v55[2] = __MRPlaybackQueueCreateFromCache_block_invoke;
  v55[3] = &unk_1E57D02F0;
  id v56 = v9;
  __int16 v15 = (unsigned int (**)(void, void, void))MEMORY[0x1997190F0](v55);
  uint64_t v16 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:v13];
  __int16 v17 = v16;
  if (v10)
  {
    if (v11 >= v11 + v13)
    {
      if ([v16 count] == v13) {
        goto LABEL_38;
      }
      goto LABEL_32;
    }
    char v46 = v10;
    int v48 = a3;
    id v49 = v9;
    id v50 = v14;
    uint64_t v18 = v13;
    uint64_t v44 = v13;
    unint64_t v47 = v11;
    unint64_t v19 = v11;
    do
    {
      uint64_t v20 = objc_msgSend(v7, "contentItemWithOffset:", v19, v44);
      uint64_t v21 = v20;
      if (v20)
      {
        uint64_t v22 = [v20 identifier];
        int v23 = [v50 containsObject:v22];

        if (v23)
        {
          uint64_t v24 = [MRPlaybackQueueRequest alloc];
          id v25 = [(MRPlaybackQueueRequest *)v24 initWithIdentifiers:MEMORY[0x1E4F1CBF0]];
          uint64_t v26 = MRContentItemCreateFromRequest(v21, v25);
          [v17 addObject:v26];
        }
        else if (((unsigned int (**)(void, void *, id))v15)[2](v15, v21, v8))
        {
          [v17 addObject:v21];
        }
      }

      ++v19;
      --v18;
    }
    while (v18);
  }
  else
  {
    if (!v14)
    {
      uint64_t v36 = [v16 count];
LABEL_35:
      uint64_t v37 = [v14 count];
      if (a3 != 3 && v36 != v37) {
        goto LABEL_37;
      }
LABEL_38:
      id v38 = [[MRPlaybackQueue alloc] initWithContentItems:v17 location:v11];
      long long v39 = [v7 queueIdentifier];
      [(MRPlaybackQueue *)v38 setQueueIdentifier:v39];

      long long v40 = [v7 properties];
      [(MRPlaybackQueue *)v38 setProperties:v40];

      __int16 v41 = [v7 auxiliaryNowPlayingInfo];
      [(MRPlaybackQueue *)v38 setAuxiliaryNowPlayingInfo:v41];

      uint64_t v42 = [v7 homeUserIdentifiers];
      [(MRPlaybackQueue *)v38 setHomeUserIdentifiers:v42];

      uint64_t v27 = MRPlaybackQueueCreateFromRequest(v38, v8);
      goto LABEL_39;
    }
    uint64_t v44 = v13;
    char v46 = 0;
    unint64_t v47 = v11;
    int v48 = a3;
    id v49 = v9;
    id v50 = v14;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    id v28 = v14;
    uint64_t v29 = [v28 countByEnumeratingWithState:&v51 objects:v57 count:16];
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = *(void *)v52;
      do
      {
        for (uint64_t i = 0; i != v30; ++i)
        {
          if (*(void *)v52 != v31) {
            objc_enumerationMutation(v28);
          }
          id v33 = objc_msgSend(v7, "contentItemForIdentifier:", *(void *)(*((void *)&v51 + 1) + 8 * i), v44);
          if (v33 && ((unsigned int (**)(void, void *, id))v15)[2](v15, v33, v8)) {
            [v17 addObject:v33];
          }
        }
        uint64_t v30 = [v28 countByEnumeratingWithState:&v51 objects:v57 count:16];
      }
      while (v30);
    }
  }
  uint64_t v34 = objc_msgSend(v17, "count", v44);
  if (v34 == v45) {
    char v35 = v46;
  }
  else {
    char v35 = 0;
  }
  id v9 = v49;
  double v14 = v50;
  a3 = v48;
  unint64_t v11 = v47;
  if (v35) {
    goto LABEL_38;
  }
  uint64_t v36 = v34;
  if ((v46 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_32:
  if (a3 == 3) {
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v27 = 0;
LABEL_39:

LABEL_40:

  return v27;
}

uint64_t __MRPlaybackQueueCreateFromCache_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v108 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (MRContentItemIsEmpty(v5) && [v6 shouldRequestItem])
  {
    id v7 = (__CFString *)MRContentItemCopyMinimalReadableDescription(v5);
    id v8 = [(__CFString *)v7 stringByAppendingFormat:@" %@", @"Cached ContentItem is empty"];
    id v9 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138544130;
      v101 = @"playbackQueue";
      __int16 v102 = 2114;
      id v103 = v6;
      __int16 v104 = 2112;
      v105 = v8;
      __int16 v106 = 2112;
      uint64_t v107 = v10;
      _os_log_impl(&dword_194F3C000, v9, OS_LOG_TYPE_DEFAULT, "Cache Miss: Request: %{public}@<%{public}@> for %@ %@", buf, 0x2Au);
    }
LABEL_95:

    uint64_t v20 = 0;
    goto LABEL_96;
  }
  if ([v6 includeRemoteArtwork])
  {
    long long v96 = 0u;
    long long v97 = 0u;
    long long v94 = 0u;
    long long v95 = 0u;
    unint64_t v11 = [v6 requestedRemoteArtworkFormats];
    uint64_t v12 = [v11 countByEnumeratingWithState:&v94 objects:v99 count:16];
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = a1;
      uint64_t v15 = *(void *)v95;
      while (2)
      {
        for (uint64_t i = 0; i != v13; ++i)
        {
          if (*(void *)v95 != v15) {
            objc_enumerationMutation(v11);
          }
          uint64_t v17 = *(void *)(*((void *)&v94 + 1) + 8 * i);
          uint64_t v18 = [v5 remoteArtworks];
          unint64_t v19 = [v18 objectForKeyedSubscript:v17];

          if (!v19)
          {
            id v7 = [NSString stringWithFormat:@"No remote artwork for requested format: %@", v17];
            uint64_t v20 = 0;
            goto LABEL_17;
          }
        }
        uint64_t v13 = [v11 countByEnumeratingWithState:&v94 objects:v99 count:16];
        if (v13) {
          continue;
        }
        break;
      }
      id v7 = 0;
      uint64_t v20 = 1;
LABEL_17:
      a1 = v14;
    }
    else
    {
      id v7 = 0;
      uint64_t v20 = 1;
    }
  }
  else
  {
    id v7 = 0;
    uint64_t v20 = 1;
  }
  if ([v6 includeArtwork])
  {
    uint64_t v21 = [v6 requestedArtworkFormats];
    uint64_t v22 = [v21 count];

    if (v22)
    {
      [v6 artworkHeight];
      uint64_t v88 = a1;
      if (v23 == -1.0 && ([v6 artworkWidth], v24 == -1.0))
      {

        char v25 = 0;
        id v7 = @"artwork dimensions both -1";
      }
      else
      {
        char v25 = 1;
      }
      int v86 = v20;
      long long v92 = 0u;
      long long v93 = 0u;
      long long v90 = 0u;
      long long v91 = 0u;
      obuint64_t j = [v6 requestedArtworkFormats];
      uint64_t v26 = [obj countByEnumeratingWithState:&v90 objects:v98 count:16];
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = *(void *)v91;
        while (2)
        {
          for (uint64_t j = 0; j != v27; ++j)
          {
            if (*(void *)v91 != v28) {
              objc_enumerationMutation(obj);
            }
            uint64_t v30 = *(void **)(*((void *)&v90 + 1) + 8 * j);
            uint64_t v31 = [v5 artworks];
            id v32 = [v31 objectForKeyedSubscript:v30];

            if (!v32)
            {
              if (![v30 isEqualToString:@"MRContentItemArtworkFormatStandard"]
                || ([v5 artwork],
                    id v33 = objc_claimAutoreleasedReturnValue(),
                    v33,
                    !v33))
              {
                uint64_t v49 = [NSString stringWithFormat:@"No artwork for requested format: %@", v30];

                id v7 = (__CFString *)v49;
                a1 = v88;
                goto LABEL_70;
              }
            }
            [v32 dimensions];
            double v35 = v34;
            [v32 dimensions];
            uint64_t v37 = (uint64_t)v36;
            [v6 artworkWidth];
            if ((uint64_t)v38 > v37 && v37 >= 1)
            {
              long long v40 = NSString;
              [v6 artworkWidth];
              uint64_t v42 = objc_msgSend(v40, "stringWithFormat:", @"RequestedWidth %ld > ArtworkWidth %ld", (uint64_t)v41, v37);

              char v25 = 0;
              id v7 = (__CFString *)v42;
            }
            [v6 artworkHeight];
            if ((uint64_t)v35 >= 1 && (uint64_t)v43 > (uint64_t)v35)
            {
              uint64_t v45 = NSString;
              [v6 artworkHeight];
              uint64_t v47 = objc_msgSend(v45, "stringWithFormat:", @"RequestedHeight %ld > ArtworkHeight %ld", (uint64_t)v46, (uint64_t)v35);

              char v25 = 0;
              id v7 = (__CFString *)v47;
            }
          }
          uint64_t v27 = [obj countByEnumeratingWithState:&v90 objects:v98 count:16];
          if (v27) {
            continue;
          }
          break;
        }
      }

      int v48 = v25 & 1;
      a1 = v88;
      LODWORD(v20) = v86;
    }
    else
    {
      id v50 = [v5 artworks];
      uint64_t v51 = [v50 objectForKeyedSubscript:@"MRContentItemArtworkFormatStandard"];

      if ((MRContentItemGetHasArtworkData(v5) & 1) != 0 || v51)
      {
        if ((unint64_t)MRContentItemGetArtworkData(v5) | v51)
        {
          long long v52 = v7;
          int v87 = v20;
          if (v51)
          {
            [(id)v51 dimensions];
            uint64_t ArtworkDataWidth = (uint64_t)v53;
            [(id)v51 dimensions];
            uint64_t ArtworkDataHeight = (uint64_t)v55;
          }
          else
          {
            uint64_t ArtworkDataWidth = MRContentItemGetArtworkDataWidth(v5);
            uint64_t ArtworkDataHeight = MRContentItemGetArtworkDataHeight(v5);
          }
          [v6 artworkWidth];
          int v58 = 1;
          if (ArtworkDataWidth < 1 || ArtworkDataWidth >= (uint64_t)v57)
          {
            id v7 = v52;
          }
          else
          {
            id v59 = NSString;
            [v6 artworkWidth];
            objc_msgSend(v59, "stringWithFormat:", @"RequestedWidth %ld > ArtworkWidth %ld", (uint64_t)v60, ArtworkDataWidth);
            id v7 = (__CFString *)objc_claimAutoreleasedReturnValue();

            int v58 = 0;
          }
          [v6 artworkHeight];
          if (ArtworkDataHeight >= 1 && ArtworkDataHeight < (uint64_t)v61)
          {
            uint64_t v62 = NSString;
            [v6 artworkHeight];
            uint64_t v64 = objc_msgSend(v62, "stringWithFormat:", @"RequestedHeight %ld > ArtworkHeight %ld", (uint64_t)v63, ArtworkDataHeight);

            int v58 = 0;
            id v7 = (__CFString *)v64;
          }
          [v6 artworkHeight];
          if (v65 == -1.0)
          {
            [v6 artworkWidth];
            if (v66 == -1.0)
            {

              int v58 = 0;
              id v7 = @"artwork dimensions both -1";
            }
          }
          int v48 = v58 != 0;
          LODWORD(v20) = v87;
        }
        else
        {

          int v48 = 0;
          id v7 = @"no artwork in item";
        }
      }
      else
      {
        int v48 = 1;
      }
    }
    if (v20 & v48)
    {
      uint64_t v20 = 1;
    }
    else
    {
LABEL_70:
      double v67 = MRContentItemCopyMinimalReadableDescription(v5);
      double v68 = [v67 stringByAppendingFormat:@" %@", v7];
      double v69 = _MRLogForCategory(0xAuLL);
      if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v70 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138544130;
        v101 = @"playbackQueue";
        __int16 v102 = 2114;
        id v103 = v6;
        __int16 v104 = 2112;
        v105 = v68;
        __int16 v106 = 2112;
        uint64_t v107 = v70;
        _os_log_impl(&dword_194F3C000, v69, OS_LOG_TYPE_DEFAULT, "Cache Miss: Request: %{public}@<%{public}@> for %@ %@", buf, 0x2Au);
      }

      uint64_t v20 = 0;
    }
  }
  if ([v6 includeInfo]
    && MRContentItemGetHasInfo(v5)
    && !MRContentItemGetInfo(v5))
  {
    v71 = MRContentItemCopyMinimalReadableDescription(v5);
    v72 = [v71 stringByAppendingFormat:@" %@", @"has no info"];
    v73 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v74 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138544130;
      v101 = @"playbackQueue";
      __int16 v102 = 2114;
      id v103 = v6;
      __int16 v104 = 2112;
      v105 = v72;
      __int16 v106 = 2112;
      uint64_t v107 = v74;
      _os_log_impl(&dword_194F3C000, v73, OS_LOG_TYPE_DEFAULT, "Cache Miss: Request: %{public}@<%{public}@> for %@ %@", buf, 0x2Au);
    }

    uint64_t v20 = 0;
  }
  if ([v6 includeLyrics])
  {
    v75 = MRContentItemCopyMinimalReadableDescription(v5);
    BOOL v76 = [v75 stringByAppendingFormat:@" %@", @"has no lyrics"];
    v77 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v78 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138544130;
      v101 = @"playbackQueue";
      __int16 v102 = 2114;
      id v103 = v6;
      __int16 v104 = 2112;
      v105 = v76;
      __int16 v106 = 2112;
      uint64_t v107 = v78;
      _os_log_impl(&dword_194F3C000, v77, OS_LOG_TYPE_DEFAULT, "Cache Miss: Request: %{public}@<%{public}@> for %@ %@", buf, 0x2Au);
    }

    uint64_t v20 = 0;
  }
  if ([v6 includeLanguageOptions]
    && MRContentItemGetHasLanguageOptions(v5)
    && (!MRContentItemGetCurrentLanguageOptions(v5) || !MRContentItemGetAvailableLanguageOptions(v5)))
  {
    long long v79 = MRContentItemCopyMinimalReadableDescription(v5);
    long long v80 = [v79 stringByAppendingFormat:@" %@", @"has no languageOptions"];
    long long v81 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v82 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138544130;
      v101 = @"playbackQueue";
      __int16 v102 = 2114;
      id v103 = v6;
      __int16 v104 = 2112;
      v105 = v80;
      __int16 v106 = 2112;
      uint64_t v107 = v82;
      _os_log_impl(&dword_194F3C000, v81, OS_LOG_TYPE_DEFAULT, "Cache Miss: Request: %{public}@<%{public}@> for %@ %@", buf, 0x2Au);
    }

    uint64_t v20 = 0;
  }
  if ([v6 includeSections] && MRContentItemGetNumberOfSections(v5) >= 1)
  {
    id v8 = MRContentItemCopyMinimalReadableDescription(v5);
    id v9 = [v8 stringByAppendingFormat:@" %@", @"has no sections"];
    long long v83 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v84 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138544130;
      v101 = @"playbackQueue";
      __int16 v102 = 2114;
      id v103 = v6;
      __int16 v104 = 2112;
      v105 = v9;
      __int16 v106 = 2112;
      uint64_t v107 = v84;
      _os_log_impl(&dword_194F3C000, v83, OS_LOG_TYPE_DEFAULT, "Cache Miss: Request: %{public}@<%{public}@> for %@ %@", buf, 0x2Au);
    }

    goto LABEL_95;
  }
LABEL_96:

  return v20;
}

void __MRMediaRemotePlaybackQueueDataSourceSendContentItemsChangedForPlayer_block_invoke(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if (MRContentItemGetArtworkData(v8))
        {
          MRContentItemSetArtworkData(v8, 0);
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  id v9 = *(void **)(a1 + 32);
  uint64_t v10 = [*(id *)(a1 + 40) playerPath];
  _onQueue_MRMediaRemotePlaybackQueueDataSourceSendShortCircutedContentItemsChangedForPlayer(v9, v10);

  _onQueue_MRMediaRemotePlaybackQueueDataSourceSendContentItemsChangedForPlayer(*(void **)(a1 + 32), *(void **)(a1 + 40));
  _onQueue_MRMediaRemoteSendContentItemArtworkUpdatedNotification(v2, *(void **)(a1 + 40));
}

CFTypeRef MRContentItemGetArtworkData(void *a1)
{
  id v1 = [a1 artwork];
  id v2 = [v1 imageData];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

void _onQueue_MRMediaRemoteSendContentItemArtworkUpdatedNotification(void *a1, void *a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if ([v3 count])
  {
    [v4 clearCachedContentItemArtworkForItems:v3];
    uint64_t v5 = [v4 playerPath];
    _onQueue_MRMediaRemoteSendShortCircutedContentItemArtworkUpdatedNotification(v3, v5);

    id v6 = [[MRPlaybackQueueRequest alloc] initFromTransactionName:7];
    id v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v3, "count"));
    id v8 = [v4 subscriptionController];
    uint64_t v17 = MEMORY[0x1E4F143A8];
    uint64_t v18 = 3221225472;
    unint64_t v19 = ___onQueue_MRMediaRemoteSendContentItemArtworkUpdatedNotification_block_invoke;
    uint64_t v20 = &unk_1E57D6608;
    id v9 = v6;
    id v21 = v9;
    id v10 = v7;
    id v22 = v10;
    [v8 enumerateFilteredContentItemsBySubscriptionsForContentItems:v3 block:&v17];

    if (objc_msgSend(v10, "count", v17, v18, v19, v20))
    {
      id v11 = [[MRPlaybackQueueRequest alloc] initFromTransactionName:0];
      long long v12 = MRContentItemsCreateFromRequest(v10, v11);
      long long v13 = _MRLogForCategory(1uLL);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        long long v14 = [v4 playerPath];
        *(_DWORD *)long long buf = 138543618;
        double v24 = v14;
        __int16 v25 = 2112;
        uint64_t v26 = v12;
        _os_log_impl(&dword_194F3C000, v13, OS_LOG_TYPE_DEFAULT, "Sending contentItemChangeArtwork for %{public}@ %@", buf, 0x16u);
      }
      uint64_t v15 = (void *)MRGetSharedService();
      uint64_t v16 = [v4 playerPath];
      MRMediaRemoteServiceSendContentItemArtworkChangedNotification(v15, v16, v12);
    }
  }
}

void _onQueue_MRMediaRemotePlaybackQueueDataSourceSendContentItemsChangedForPlayer(void *a1, void *a2)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v4 subscriptionController];
  id v6 = [v5 filteredContentItemsBySubscriptionsForContentItems:v3];

  id v7 = [v4 playerPath];
  _MRMediaRemoteLogUnsubscribedContentItems(v3, v6, v7);

  if ([v6 count])
  {
    id v21 = v3;
    id v8 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    id v9 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    uint64_t v20 = v6;
    id v10 = v6;
    uint64_t v11 = [v10 countByEnumeratingWithState:&v22 objects:v30 count:16];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)v23;
      do
      {
        for (uint64_t i = 0; i != v12; ++i)
        {
          if (*(void *)v23 != v13) {
            objc_enumerationMutation(v10);
          }
          uint64_t v15 = *(void **)(*((void *)&v22 + 1) + 8 * i);
          if (!MRContentItemIsEmpty(v15))
          {
            uint64_t v16 = _MRLogForCategory(1uLL);
            if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v17 = [v4 playerPath];
              *(_DWORD *)long long buf = 138543618;
              uint64_t v27 = v17;
              __int16 v28 = 2112;
              uint64_t v29 = v15;
              _os_log_impl(&dword_194F3C000, v16, OS_LOG_TYPE_DEFAULT, "Sending contentItemChange for path %{public}@ %@", buf, 0x16u);
            }
            [v9 addObject:v15];
          }
          if (MRContentItemGetArtworkIdentifier(v15)) {
            [v8 addObject:v15];
          }
        }
        uint64_t v12 = [v10 countByEnumeratingWithState:&v22 objects:v30 count:16];
      }
      while (v12);
    }

    if ([v9 count])
    {
      uint64_t v18 = (void *)MRGetSharedService();
      unint64_t v19 = [v4 playerPath];
      MRMediaRemoteServiceSendContentItemChangedNotification(v18, v19, v9);
    }
    _onQueue_MRMediaRemoteSendContentItemArtworkUpdatedNotification(v8, v4);

    id v6 = v20;
    id v3 = v21;
  }
}

CFTypeRef MRContentItemGetArtworkIdentifier(void *a1)
{
  id v1 = [a1 metadata];
  id v2 = [v1 artworkIdentifier];

  if (!v2) {
    return 0;
  }

  return CFAutorelease(v2);
}

void _onQueue_MRMediaRemotePlaybackQueueDataSourceSendShortCircutedContentItemsChangedForPlayer(void *a1, void *a2)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if ([v4 isLocal])
  {
    uint64_t v5 = +[MRNowPlayingOriginClientManager sharedManager];
    id v6 = [v5 existingPlayerClientRequestsForPlayerPath:v4];

    uint64_t v29 = v6;
    id v7 = [v6 subscriptionController];
    id v8 = [v7 filteredContentItemsBySubscriptionsForContentItems:v3];

    _MRMediaRemoteLogUnsubscribedContentItems(v3, v8, v4);
    if ([v8 count])
    {
      id v27 = v4;
      id v28 = v3;
      id v9 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      long long v30 = 0u;
      long long v31 = 0u;
      long long v32 = 0u;
      long long v33 = 0u;
      uint64_t v26 = v8;
      id v10 = v8;
      uint64_t v11 = [v10 countByEnumeratingWithState:&v30 objects:v40 count:16];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = *(void *)v31;
        do
        {
          for (uint64_t i = 0; i != v12; ++i)
          {
            if (*(void *)v31 != v13) {
              objc_enumerationMutation(v10);
            }
            uint64_t v15 = *(void **)(*((void *)&v30 + 1) + 8 * i);
            if (!MRContentItemIsEmpty(v15))
            {
              uint64_t v16 = _MRLogForCategory(1uLL);
              if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v17 = [v29 playerPath];
                *(_DWORD *)long long buf = 138543618;
                double v35 = v17;
                __int16 v36 = 2112;
                uint64_t v37 = v15;
                _os_log_impl(&dword_194F3C000, v16, OS_LOG_TYPE_DEFAULT, "Sending short circuted contentItemChange for %{public}@ %@", buf, 0x16u);
              }
              [v9 addObject:v15];
            }
          }
          uint64_t v12 = [v10 countByEnumeratingWithState:&v30 objects:v40 count:16];
        }
        while (v12);
      }

      id v4 = v27;
      id v3 = v28;
      if ([v9 count])
      {
        uint64_t v18 = (void *)[objc_alloc(MEMORY[0x1E4F1CA60]) initWithCapacity:2];
        MRAddContentItemsToUserInfo(v18, (const char *)v9);
        unint64_t v19 = [v29 playerPath];
        MRAddPlayerPathToUserInfo(v18, v19);

        uint64_t v20 = _MRLogForCategory(1uLL);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
        {
          long long v24 = [v29 playerPath];
          long long v25 = MRContentItemsCopyMinimalReadableDescription(v9, 0);
          *(_DWORD *)long long buf = 138412802;
          double v35 = @"kMRPlayerPlaybackQueueContentItemsChangedNotification";
          __int16 v36 = 2112;
          uint64_t v37 = v24;
          __int16 v38 = 2112;
          long long v39 = v25;
          _os_log_debug_impl(&dword_194F3C000, v20, OS_LOG_TYPE_DEBUG, "Sending short circuted notification %@ for %@ %@", buf, 0x20u);
        }
        id v21 = +[MRMediaRemoteServiceClient sharedServiceClient];
        long long v22 = [v21 notificationClient];
        long long v23 = MRCreateDecodedUserInfo(v18);
        [v22 dispatchNotification:@"kMRPlayerPlaybackQueueContentItemsChangedNotification" userInfo:v23 object:0];
      }
      id v8 = v26;
    }
  }
}

BOOL MRContentItemIsEmpty(void *a1)
{
  id v1 = a1;
  id v2 = [v1 metadata];
  if (v2)
  {
    BOOL v3 = 0;
  }
  else
  {
    id v4 = [v1 info];
    if (v4)
    {
      BOOL v3 = 0;
    }
    else
    {
      uint64_t v5 = [v1 currentLanguageOptions];
      if (v5)
      {
        BOOL v3 = 0;
      }
      else
      {
        id v6 = [v1 availableLanguageOptions];
        if (v6)
        {
          BOOL v3 = 0;
        }
        else
        {
          id v7 = [v1 sections];
          if (v7)
          {
            BOOL v3 = 0;
          }
          else
          {
            id v8 = [v1 artwork];
            id v9 = [v8 imageData];
            BOOL v3 = v9 == 0;
          }
        }
      }
    }
  }
  return v3;
}

void *MRAddContentItemsToUserInfo(void *a1, const char *a2)
{
  if (a1)
  {
    if (a2) {
      return (void *)[a1 setObject:a2 forKeyedSubscript:@"kMRMediaRemoteUpdatedContentItemsUserInfoKey"];
    }
  }
  return a1;
}

void _MRMediaRemoteLogUnsubscribedContentItems(void *a1, void *a2, void *a3)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  unint64_t v8 = [v5 count];
  if (v8 > [v6 count])
  {
    uint64_t v21 = (uint64_t)v7;
    id v22 = v5;
    long long v23 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count") - objc_msgSend(v6, "count"));
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v9 = v5;
    uint64_t v10 = [v9 countByEnumeratingWithState:&v28 objects:v33 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v29;
      do
      {
        uint64_t v13 = 0;
        do
        {
          if (*(void *)v29 != v12) {
            objc_enumerationMutation(v9);
          }
          long long v14 = *(void **)(*((void *)&v28 + 1) + 8 * v13);
          long long v24 = 0u;
          long long v25 = 0u;
          long long v26 = 0u;
          long long v27 = 0u;
          id v15 = v6;
          uint64_t v16 = [v15 countByEnumeratingWithState:&v24 objects:v32 count:16];
          if (v16)
          {
            uint64_t v17 = v16;
            uint64_t v18 = *(void *)v25;
            while (2)
            {
              uint64_t v19 = 0;
              do
              {
                if (*(void *)v25 != v18) {
                  objc_enumerationMutation(v15);
                }
                if (MRContentItemIdentifierIsEqual(v14, *(void **)(*((void *)&v24 + 1) + 8 * v19)))
                {

                  goto LABEL_17;
                }
                ++v19;
              }
              while (v17 != v19);
              uint64_t v17 = [v15 countByEnumeratingWithState:&v24 objects:v32 count:16];
              if (v17) {
                continue;
              }
              break;
            }
          }

          [v23 addObject:v14];
LABEL_17:
          ++v13;
        }
        while (v13 != v11);
        uint64_t v11 = [v9 countByEnumeratingWithState:&v28 objects:v33 count:16];
      }
      while (v11);
    }

    uint64_t v20 = _MRLogForCategory(0);
    id v7 = (id)v21;
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG)) {
      _MRMediaRemoteLogUnsubscribedContentItems_cold_1(v21, v23, v20);
    }

    id v5 = v22;
  }
}

void MRMediaRemoteServiceRequestNowPlayingPlaybackQueue(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  uint64_t v10 = a4;
  kdebug_trace();
  id v11 = a1;
  uint64_t v12 = MRCreateXPCMessage(0x200000000000007uLL);
  MRAddPlayerPathToXPCMessage(v12, a3);
  MRAddPlaybackQueueRequestToXPCMessage(v12, a2);
  uint64_t v13 = [v11 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceRequestNowPlayingPlaybackQueue_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v16 = v9;
  id v14 = v9;
  xpc_connection_send_message_with_reply(v13, v12, v10, handler);
}

void MRAddPlaybackQueueRequestToXPCMessage(void *a1, void *a2)
{
  if (a2)
  {
    id v3 = a1;
    id v4 = [a2 data];
    xpc_dictionary_set_data(v3, "MRXPC_NOWPLAYING_PLAYBACK_QUEUE_REQUEST_KEY", (const void *)[v4 bytes], objc_msgSend(v4, "length"));
  }
}

void __MRProcessIsMediaRemoteDaemon_block_invoke()
{
  id v0 = [MEMORY[0x1E4F28F80] processInfo];
  id v1 = [v0 processName];

  MRProcessIsMediaRemoteDaemon_isDaemon = [v1 isEqualToString:@"mediaremoted"];
}

void MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v3 = (void *)[a2 copy];
    id v4 = (void *)[objc_alloc(MEMORY[0x1E4F1C978]) initWithArray:a1 copyItems:1];
    id v5 = +[MRMediaRemoteServiceClient sharedServiceClient];
    id v6 = [v5 playbackQueueDispatchQueue];
    v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    v10[2] = __MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer_block_invoke;
    v10[3] = &unk_1E57D0790;
    id v11 = v4;
    id v12 = v3;
    id v7 = v3;
    id v8 = v4;
    id v9 = MRCreateDonatedQosBlock(v10);
    msv_dispatch_sync_on_queue();
  }
}

void MRMediaRemotePlaybackSessionSetMigrateEndCallback(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v6 = [v4 playerClientForPlayerPath:a1];

  id v5 = [v6 clientCallbacks];
  [v5 setPlaybackSessionMigrateEndCallback:v3];
}

void MRMediaRemotePlaybackSessionSetMigrateBeginCallback(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v6 = [v4 playerClientForPlayerPath:a1];

  id v5 = [v6 clientCallbacks];
  [v5 setPlaybackSessionMigrateBeginCallback:v3];
}

void sub_194FAD008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void MRMediaRemotePlaybackQueueDataSourceInvalidateWithPlaybackQueueForPlayer(uint64_t a1, uint64_t a2)
{
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v4 playerClientForPlayerPath:a2];

  [v5 invalidatePlaybackQueueWithPlaybackQueue:a1];
}

void MRMediaRemoteSetPlaybackQueue(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a2;
  uint64_t v10 = v9;
  if (v9)
  {
    id v11 = [v9 contentItems];
    if (![v11 count])
    {
LABEL_5:

      goto LABEL_6;
    }
    char v12 = [v10 hasLocation];

    if ((v12 & 1) == 0)
    {
      id v11 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteSetPlaybackQueue(MRNowPlayingPlayerPathRef, MRPlaybackQueueRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))");
      [v11 handleFailureInFunction:v13 file:@"MRPlaybackQueueRequestResponse.m" lineNumber:241 description:@"Attempting to set non-range based playbackQueue"];

      goto LABEL_5;
    }
  }
LABEL_6:
  id v14 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v15 = [v14 playbackQueueDispatchQueue];
  v20[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v20[1] = 3221225472;
  v20[2] = __MRMediaRemoteSetPlaybackQueue_block_invoke;
  v20[3] = &unk_1E57D58B8;
  uint64_t v24 = a1;
  long long v25 = v10;
  id v21 = v10;
  id v22 = v7;
  id v23 = v8;
  id v16 = v8;
  id v17 = v7;
  id v18 = v10;
  uint64_t v19 = MRCreateDonatedQosBlock(v20);
  msv_dispatch_sync_on_queue();
}

uint64_t __MRMediaRemoteApplicationIsSystemPodcastApplication_block_invoke()
{
  MRMediaRemoteApplicationIsSystemPodcastApplication___allKnownSystemPodcastApplications = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CAD0]), "initWithObjects:", @"com.apple.podcasts", @"com.apple.iTunes", @"com.apple.sonic.podcasts", @"(System Podcast Application)", 0);

  return MEMORY[0x1F41817F8]();
}

id AVOutputContextOutputDevicesDidChangeNotificationFunction()
{
  return (id)constantValAVOutputContextOutputDevicesDidChangeNotification;
}

void sub_194FAD95C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
}

uint64_t __MRMediaRemoteApplicationIsSystemMediaApplication_block_invoke()
{
  MRMediaRemoteApplicationIsSystemMediaApplication___allKnownSystemMediaApplications = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CAD0]), "initWithObjects:", @"com.apple.NanoMusic", @"com.apple.TVMusic", @"com.apple.Music", @"com.apple.iTunes", @"com.apple.sonic.music", @"(System Media Application)", @"(System Classical Room Application)", 0);

  return MEMORY[0x1F41817F8]();
}

uint64_t _MRAVEndpointDescriptorProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 32;
        goto LABEL_33;
      case 2u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 56;
        goto LABEL_33;
      case 3u:
        uint64_t v20 = objc_alloc_init(_MRAVOutputDeviceDescriptorProtobuf);
        [(id)a1 addOutputDevices:v20];
        goto LABEL_56;
      case 4u:
        uint64_t v20 = objc_alloc_init(_MRAVOutputDeviceDescriptorProtobuf);
        objc_storeStrong((id *)(a1 + 16), v20);
        goto LABEL_56;
      case 5u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 68) |= 4u;
        while (2)
        {
          uint64_t v24 = *v3;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 == -1 || v25 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if (v26 < 0)
            {
              v21 += 7;
              BOOL v14 = v22++ >= 9;
              if (v14)
              {
                uint64_t v23 = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
LABEL_62:
        BOOL v46 = v23 != 0;
        uint64_t v47 = 65;
        goto LABEL_75;
      case 6u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 24;
LABEL_33:
        long long v27 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_76;
      case 7u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 68) |= 8u;
        while (2)
        {
          uint64_t v31 = *v3;
          unint64_t v32 = *(void *)(a2 + v31);
          if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if (v33 < 0)
            {
              v28 += 7;
              BOOL v14 = v29++ >= 9;
              if (v14)
              {
                uint64_t v30 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_66:
        BOOL v46 = v30 != 0;
        uint64_t v47 = 66;
        goto LABEL_75;
      case 8u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v37 = *v3;
          unint64_t v38 = *(void *)(a2 + v37);
          if (v38 == -1 || v38 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v38 + 1;
            v36 |= (unint64_t)(v39 & 0x7F) << v34;
            if (v39 < 0)
            {
              v34 += 7;
              BOOL v14 = v35++ >= 9;
              if (v14)
              {
                LODWORD(v36) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v36) = 0;
        }
LABEL_70:
        *(_DWORD *)(a1 + 8) = v36;
        goto LABEL_76;
      case 9u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v42 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v42 = 0;
        }
LABEL_74:
        BOOL v46 = v42 != 0;
        uint64_t v47 = 64;
LABEL_75:
        *(unsigned char *)(a1 + v47) = v46;
        goto LABEL_76;
      case 0xAu:
        uint64_t v20 = objc_alloc_init(_MRAVOutputDeviceDescriptorProtobuf);
        [(id)a1 addPersonalOutputDevices:v20];
LABEL_56:
        if (PBReaderPlaceMark()
          && (_MRAVOutputDeviceDescriptorProtobufReadFrom((uint64_t)v20, a2) & 1) != 0)
        {
          PBReaderRecallMark();

LABEL_76:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_76;
    }
  }
}

uint64_t _MRAVOutputDeviceDescriptorProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 192;
        goto LABEL_408;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 264;
        goto LABEL_408;
      case 3u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 128;
        goto LABEL_408;
      case 4u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 176;
        goto LABEL_408;
      case 5u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 168;
        goto LABEL_408;
      case 6u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(void *)(a1 + 324) |= 0x1000uLL;
        while (2)
        {
          uint64_t v24 = *v3;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                uint64_t v23 = 0;
                goto LABEL_414;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
LABEL_414:
        BOOL v367 = v23 != 0;
        uint64_t v368 = 282;
        goto LABEL_608;
      case 7u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        *(void *)(a1 + 324) |= 0x100000000uLL;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_418;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_418:
        BOOL v367 = v30 != 0;
        uint64_t v368 = 302;
        goto LABEL_608;
      case 8u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(void *)(a1 + 324) |= 0x4000000uLL;
        while (2)
        {
          uint64_t v38 = *v3;
          uint64_t v39 = *(void *)(a2 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                uint64_t v37 = 0;
                goto LABEL_422;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v37 = 0;
        }
LABEL_422:
        BOOL v367 = v37 != 0;
        uint64_t v368 = 296;
        goto LABEL_608;
      case 9u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(void *)(a1 + 324) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v45 = *v3;
          uint64_t v46 = *(void *)(a2 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v15 = v43++ >= 9;
              if (v15)
              {
                uint64_t v44 = 0;
                goto LABEL_426;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
LABEL_426:
        BOOL v367 = v44 != 0;
        uint64_t v368 = 297;
        goto LABEL_608;
      case 0xAu:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(void *)(a1 + 324) |= 0x10uLL;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                LODWORD(v51) = 0;
                goto LABEL_430;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v51) = 0;
        }
LABEL_430:
        uint64_t v369 = 100;
        goto LABEL_559;
      case 0xBu:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v51 = 0;
        *(void *)(a1 + 324) |= 8uLL;
        while (2)
        {
          uint64_t v58 = *v3;
          uint64_t v59 = *(void *)(a2 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
            *(void *)(a2 + v58) = v60;
            v51 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v15 = v57++ >= 9;
              if (v15)
              {
                LODWORD(v51) = 0;
                goto LABEL_434;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v51) = 0;
        }
LABEL_434:
        uint64_t v369 = 96;
        goto LABEL_559;
      case 0xCu:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 184;
        goto LABEL_408;
      case 0xDu:
        *(void *)(a1 + 324) |= 1uLL;
        uint64_t v62 = *v3;
        unint64_t v63 = *(void *)(a2 + v62);
        if (v63 <= 0xFFFFFFFFFFFFFFFBLL && v63 + 4 <= *(void *)(a2 + *v4))
        {
          int v64 = *(_DWORD *)(*(void *)(a2 + *v7) + v63);
          *(void *)(a2 + v62) = v63 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v64 = 0;
        }
        uint64_t v370 = 40;
        goto LABEL_617;
      case 0xEu:
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0;
        *(void *)(a1 + 324) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v68 = *v3;
          uint64_t v69 = *(void *)(a2 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v69);
            *(void *)(a2 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              BOOL v15 = v66++ >= 9;
              if (v15)
              {
                uint64_t v67 = 0;
                goto LABEL_438;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v67 = 0;
        }
LABEL_438:
        BOOL v367 = v67 != 0;
        uint64_t v368 = 299;
        goto LABEL_608;
      case 0xFu:
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v74 = 0;
        *(void *)(a1 + 324) |= 0x80000000000uLL;
        while (2)
        {
          uint64_t v75 = *v3;
          uint64_t v76 = *(void *)(a2 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
            *(void *)(a2 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              BOOL v15 = v73++ >= 9;
              if (v15)
              {
                uint64_t v74 = 0;
                goto LABEL_442;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v74 = 0;
        }
LABEL_442:
        BOOL v367 = v74 != 0;
        uint64_t v368 = 313;
        goto LABEL_608;
      case 0x10u:
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        *(void *)(a1 + 324) |= 0x4000000000uLL;
        while (2)
        {
          uint64_t v82 = *v3;
          uint64_t v83 = *(void *)(a2 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v83);
            *(void *)(a2 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v15 = v80++ >= 9;
              if (v15)
              {
                uint64_t v81 = 0;
                goto LABEL_446;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v81 = 0;
        }
LABEL_446:
        BOOL v367 = v81 != 0;
        uint64_t v368 = 308;
        goto LABEL_608;
      case 0x11u:
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v88 = 0;
        *(void *)(a1 + 324) |= 0x8000000000uLL;
        while (2)
        {
          uint64_t v89 = *v3;
          uint64_t v90 = *(void *)(a2 + v89);
          unint64_t v91 = v90 + 1;
          if (v90 == -1 || v91 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v92 = *(unsigned char *)(*(void *)(a2 + *v7) + v90);
            *(void *)(a2 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              BOOL v15 = v87++ >= 9;
              if (v15)
              {
                uint64_t v88 = 0;
                goto LABEL_450;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v88 = 0;
        }
LABEL_450:
        BOOL v367 = v88 != 0;
        uint64_t v368 = 309;
        goto LABEL_608;
      case 0x12u:
        long long v93 = objc_alloc_init(_MRAVOutputDeviceSourceInfoProtobuf);
        objc_storeStrong((id *)(a1 + 248), v93);
        if (!PBReaderPlaceMark()
          || (_MRAVOutputDeviceSourceInfoProtobufReadFrom((uint64_t)v93, a2) & 1) == 0)
        {
          goto LABEL_619;
        }
        goto LABEL_361;
      case 0x13u:
        char v94 = 0;
        unsigned int v95 = 0;
        uint64_t v96 = 0;
        *(void *)(a1 + 324) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v97 = *v3;
          uint64_t v98 = *(void *)(a2 + v97);
          unint64_t v99 = v98 + 1;
          if (v98 == -1 || v99 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(a2 + *v7) + v98);
            *(void *)(a2 + v97) = v99;
            v96 |= (unint64_t)(v100 & 0x7F) << v94;
            if (v100 < 0)
            {
              v94 += 7;
              BOOL v15 = v95++ >= 9;
              if (v15)
              {
                uint64_t v96 = 0;
                goto LABEL_454;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v96 = 0;
        }
LABEL_454:
        BOOL v367 = v96 != 0;
        uint64_t v368 = 295;
        goto LABEL_608;
      case 0x14u:
        char v101 = 0;
        unsigned int v102 = 0;
        uint64_t v103 = 0;
        *(void *)(a1 + 324) |= 0x10000uLL;
        while (2)
        {
          uint64_t v104 = *v3;
          uint64_t v105 = *(void *)(a2 + v104);
          unint64_t v106 = v105 + 1;
          if (v105 == -1 || v106 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)(a2 + *v7) + v105);
            *(void *)(a2 + v104) = v106;
            v103 |= (unint64_t)(v107 & 0x7F) << v101;
            if (v107 < 0)
            {
              v101 += 7;
              BOOL v15 = v102++ >= 9;
              if (v15)
              {
                uint64_t v103 = 0;
                goto LABEL_458;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v103 = 0;
        }
LABEL_458:
        BOOL v367 = v103 != 0;
        uint64_t v368 = 286;
        goto LABEL_608;
      case 0x15u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 160;
        goto LABEL_408;
      case 0x16u:
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v110 = 0;
        *(void *)(a1 + 324) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v111 = *v3;
          uint64_t v112 = *(void *)(a2 + v111);
          unint64_t v113 = v112 + 1;
          if (v112 == -1 || v113 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)(a2 + *v7) + v112);
            *(void *)(a2 + v111) = v113;
            v110 |= (unint64_t)(v114 & 0x7F) << v108;
            if (v114 < 0)
            {
              v108 += 7;
              BOOL v15 = v109++ >= 9;
              if (v15)
              {
                uint64_t v110 = 0;
                goto LABEL_462;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v110 = 0;
        }
LABEL_462:
        BOOL v367 = v110 != 0;
        uint64_t v368 = 301;
        goto LABEL_608;
      case 0x17u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 120;
        goto LABEL_408;
      case 0x18u:
        *(void *)(a1 + 324) |= 0x100uLL;
        uint64_t v115 = *v3;
        unint64_t v116 = *(void *)(a2 + v115);
        if (v116 <= 0xFFFFFFFFFFFFFFFBLL && v116 + 4 <= *(void *)(a2 + *v4))
        {
          int v64 = *(_DWORD *)(*(void *)(a2 + *v7) + v116);
          *(void *)(a2 + v115) = v116 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v64 = 0;
        }
        uint64_t v370 = 272;
        goto LABEL_617;
      case 0x19u:
        char v117 = 0;
        unsigned int v118 = 0;
        uint64_t v119 = 0;
        *(void *)(a1 + 324) |= 0x200000000uLL;
        while (2)
        {
          uint64_t v120 = *v3;
          uint64_t v121 = *(void *)(a2 + v120);
          unint64_t v122 = v121 + 1;
          if (v121 == -1 || v122 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v123 = *(unsigned char *)(*(void *)(a2 + *v7) + v121);
            *(void *)(a2 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              BOOL v15 = v118++ >= 9;
              if (v15)
              {
                uint64_t v119 = 0;
                goto LABEL_466;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v119 = 0;
        }
LABEL_466:
        BOOL v367 = v119 != 0;
        uint64_t v368 = 303;
        goto LABEL_608;
      case 0x1Au:
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v126 = 0;
        *(void *)(a1 + 324) |= 0x800uLL;
        while (2)
        {
          uint64_t v127 = *v3;
          uint64_t v128 = *(void *)(a2 + v127);
          unint64_t v129 = v128 + 1;
          if (v128 == -1 || v129 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v130 = *(unsigned char *)(*(void *)(a2 + *v7) + v128);
            *(void *)(a2 + v127) = v129;
            v126 |= (unint64_t)(v130 & 0x7F) << v124;
            if (v130 < 0)
            {
              v124 += 7;
              BOOL v15 = v125++ >= 9;
              if (v15)
              {
                uint64_t v126 = 0;
                goto LABEL_470;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v126 = 0;
        }
LABEL_470:
        BOOL v367 = v126 != 0;
        uint64_t v368 = 281;
        goto LABEL_608;
      case 0x1Bu:
        char v131 = 0;
        unsigned int v132 = 0;
        uint64_t v133 = 0;
        *(void *)(a1 + 324) |= 0x2000uLL;
        while (2)
        {
          uint64_t v134 = *v3;
          uint64_t v135 = *(void *)(a2 + v134);
          unint64_t v136 = v135 + 1;
          if (v135 == -1 || v136 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v137 = *(unsigned char *)(*(void *)(a2 + *v7) + v135);
            *(void *)(a2 + v134) = v136;
            v133 |= (unint64_t)(v137 & 0x7F) << v131;
            if (v137 < 0)
            {
              v131 += 7;
              BOOL v15 = v132++ >= 9;
              if (v15)
              {
                uint64_t v133 = 0;
                goto LABEL_474;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v133 = 0;
        }
LABEL_474:
        BOOL v367 = v133 != 0;
        uint64_t v368 = 283;
        goto LABEL_608;
      case 0x1Cu:
        char v138 = 0;
        unsigned int v139 = 0;
        uint64_t v140 = 0;
        *(void *)(a1 + 324) |= 0x100000uLL;
        while (2)
        {
          uint64_t v141 = *v3;
          uint64_t v142 = *(void *)(a2 + v141);
          unint64_t v143 = v142 + 1;
          if (v142 == -1 || v143 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v144 = *(unsigned char *)(*(void *)(a2 + *v7) + v142);
            *(void *)(a2 + v141) = v143;
            v140 |= (unint64_t)(v144 & 0x7F) << v138;
            if (v144 < 0)
            {
              v138 += 7;
              BOOL v15 = v139++ >= 9;
              if (v15)
              {
                uint64_t v140 = 0;
                goto LABEL_478;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v140 = 0;
        }
LABEL_478:
        BOOL v367 = v140 != 0;
        uint64_t v368 = 290;
        goto LABEL_608;
      case 0x1Du:
        char v145 = 0;
        unsigned int v146 = 0;
        uint64_t v147 = 0;
        *(void *)(a1 + 324) |= 0x20000000000uLL;
        while (2)
        {
          uint64_t v148 = *v3;
          uint64_t v149 = *(void *)(a2 + v148);
          unint64_t v150 = v149 + 1;
          if (v149 == -1 || v150 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v151 = *(unsigned char *)(*(void *)(a2 + *v7) + v149);
            *(void *)(a2 + v148) = v150;
            v147 |= (unint64_t)(v151 & 0x7F) << v145;
            if (v151 < 0)
            {
              v145 += 7;
              BOOL v15 = v146++ >= 9;
              if (v15)
              {
                uint64_t v147 = 0;
                goto LABEL_482;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v147 = 0;
        }
LABEL_482:
        BOOL v367 = v147 != 0;
        uint64_t v368 = 311;
        goto LABEL_608;
      case 0x1Eu:
        char v152 = 0;
        unsigned int v153 = 0;
        uint64_t v154 = 0;
        *(void *)(a1 + 324) |= 0x8000uLL;
        while (2)
        {
          uint64_t v155 = *v3;
          uint64_t v156 = *(void *)(a2 + v155);
          unint64_t v157 = v156 + 1;
          if (v156 == -1 || v157 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v158 = *(unsigned char *)(*(void *)(a2 + *v7) + v156);
            *(void *)(a2 + v155) = v157;
            v154 |= (unint64_t)(v158 & 0x7F) << v152;
            if (v158 < 0)
            {
              v152 += 7;
              BOOL v15 = v153++ >= 9;
              if (v15)
              {
                uint64_t v154 = 0;
                goto LABEL_486;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v154 = 0;
        }
LABEL_486:
        BOOL v367 = v154 != 0;
        uint64_t v368 = 285;
        goto LABEL_608;
      case 0x1Fu:
        char v159 = 0;
        unsigned int v160 = 0;
        uint64_t v161 = 0;
        *(void *)(a1 + 324) |= 0x4000uLL;
        while (2)
        {
          uint64_t v162 = *v3;
          uint64_t v163 = *(void *)(a2 + v162);
          unint64_t v164 = v163 + 1;
          if (v163 == -1 || v164 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v165 = *(unsigned char *)(*(void *)(a2 + *v7) + v163);
            *(void *)(a2 + v162) = v164;
            v161 |= (unint64_t)(v165 & 0x7F) << v159;
            if (v165 < 0)
            {
              v159 += 7;
              BOOL v15 = v160++ >= 9;
              if (v15)
              {
                uint64_t v161 = 0;
                goto LABEL_490;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v161 = 0;
        }
LABEL_490:
        BOOL v367 = v161 != 0;
        uint64_t v368 = 284;
        goto LABEL_608;
      case 0x20u:
        char v166 = 0;
        unsigned int v167 = 0;
        uint64_t v168 = 0;
        *(void *)(a1 + 324) |= 0x1000000000uLL;
        while (2)
        {
          uint64_t v169 = *v3;
          uint64_t v170 = *(void *)(a2 + v169);
          unint64_t v171 = v170 + 1;
          if (v170 == -1 || v171 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v172 = *(unsigned char *)(*(void *)(a2 + *v7) + v170);
            *(void *)(a2 + v169) = v171;
            v168 |= (unint64_t)(v172 & 0x7F) << v166;
            if (v172 < 0)
            {
              v166 += 7;
              BOOL v15 = v167++ >= 9;
              if (v15)
              {
                uint64_t v168 = 0;
                goto LABEL_494;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v168 = 0;
        }
LABEL_494:
        BOOL v367 = v168 != 0;
        uint64_t v368 = 306;
        goto LABEL_608;
      case 0x21u:
        char v173 = 0;
        unsigned int v174 = 0;
        uint64_t v175 = 0;
        *(void *)(a1 + 324) |= 0x400000uLL;
        while (2)
        {
          uint64_t v176 = *v3;
          uint64_t v177 = *(void *)(a2 + v176);
          unint64_t v178 = v177 + 1;
          if (v177 == -1 || v178 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v179 = *(unsigned char *)(*(void *)(a2 + *v7) + v177);
            *(void *)(a2 + v176) = v178;
            v175 |= (unint64_t)(v179 & 0x7F) << v173;
            if (v179 < 0)
            {
              v173 += 7;
              BOOL v15 = v174++ >= 9;
              if (v15)
              {
                uint64_t v175 = 0;
                goto LABEL_498;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v175 = 0;
        }
LABEL_498:
        BOOL v367 = v175 != 0;
        uint64_t v368 = 292;
        goto LABEL_608;
      case 0x22u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 200;
        goto LABEL_408;
      case 0x23u:
        char v180 = 0;
        unsigned int v181 = 0;
        uint64_t v182 = 0;
        *(void *)(a1 + 324) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v183 = *v3;
          uint64_t v184 = *(void *)(a2 + v183);
          unint64_t v185 = v184 + 1;
          if (v184 == -1 || v185 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v186 = *(unsigned char *)(*(void *)(a2 + *v7) + v184);
            *(void *)(a2 + v183) = v185;
            v182 |= (unint64_t)(v186 & 0x7F) << v180;
            if (v186 < 0)
            {
              v180 += 7;
              BOOL v15 = v181++ >= 9;
              if (v15)
              {
                uint64_t v182 = 0;
                goto LABEL_502;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v182 = 0;
        }
LABEL_502:
        BOOL v367 = v182 != 0;
        uint64_t v368 = 304;
        goto LABEL_608;
      case 0x24u:
        char v187 = 0;
        unsigned int v188 = 0;
        uint64_t v189 = 0;
        *(void *)(a1 + 324) |= 0x200000uLL;
        while (2)
        {
          uint64_t v190 = *v3;
          uint64_t v191 = *(void *)(a2 + v190);
          unint64_t v192 = v191 + 1;
          if (v191 == -1 || v192 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v193 = *(unsigned char *)(*(void *)(a2 + *v7) + v191);
            *(void *)(a2 + v190) = v192;
            v189 |= (unint64_t)(v193 & 0x7F) << v187;
            if (v193 < 0)
            {
              v187 += 7;
              BOOL v15 = v188++ >= 9;
              if (v15)
              {
                uint64_t v189 = 0;
                goto LABEL_506;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v189 = 0;
        }
LABEL_506:
        BOOL v367 = v189 != 0;
        uint64_t v368 = 291;
        goto LABEL_608;
      case 0x25u:
        char v194 = 0;
        unsigned int v195 = 0;
        uint64_t v51 = 0;
        *(void *)(a1 + 324) |= 0x200uLL;
        while (2)
        {
          uint64_t v196 = *v3;
          uint64_t v197 = *(void *)(a2 + v196);
          unint64_t v198 = v197 + 1;
          if (v197 == -1 || v198 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v199 = *(unsigned char *)(*(void *)(a2 + *v7) + v197);
            *(void *)(a2 + v196) = v198;
            v51 |= (unint64_t)(v199 & 0x7F) << v194;
            if (v199 < 0)
            {
              v194 += 7;
              BOOL v15 = v195++ >= 9;
              if (v15)
              {
                LODWORD(v51) = 0;
                goto LABEL_510;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v51) = 0;
        }
LABEL_510:
        uint64_t v369 = 276;
        goto LABEL_559;
      case 0x26u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 48;
        goto LABEL_408;
      case 0x27u:
        char v200 = 0;
        unsigned int v201 = 0;
        uint64_t v202 = 0;
        *(void *)(a1 + 324) |= 0x100000000000uLL;
        while (2)
        {
          uint64_t v203 = *v3;
          uint64_t v204 = *(void *)(a2 + v203);
          unint64_t v205 = v204 + 1;
          if (v204 == -1 || v205 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v206 = *(unsigned char *)(*(void *)(a2 + *v7) + v204);
            *(void *)(a2 + v203) = v205;
            v202 |= (unint64_t)(v206 & 0x7F) << v200;
            if (v206 < 0)
            {
              v200 += 7;
              BOOL v15 = v201++ >= 9;
              if (v15)
              {
                uint64_t v202 = 0;
                goto LABEL_514;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v202 = 0;
        }
LABEL_514:
        BOOL v367 = v202 != 0;
        uint64_t v368 = 314;
        goto LABEL_608;
      case 0x28u:
        char v207 = 0;
        unsigned int v208 = 0;
        uint64_t v209 = 0;
        *(void *)(a1 + 324) |= 0x4000000000000uLL;
        while (2)
        {
          uint64_t v210 = *v3;
          uint64_t v211 = *(void *)(a2 + v210);
          unint64_t v212 = v211 + 1;
          if (v211 == -1 || v212 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v213 = *(unsigned char *)(*(void *)(a2 + *v7) + v211);
            *(void *)(a2 + v210) = v212;
            v209 |= (unint64_t)(v213 & 0x7F) << v207;
            if (v213 < 0)
            {
              v207 += 7;
              BOOL v15 = v208++ >= 9;
              if (v15)
              {
                uint64_t v209 = 0;
                goto LABEL_518;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v209 = 0;
        }
LABEL_518:
        BOOL v367 = v209 != 0;
        uint64_t v368 = 320;
        goto LABEL_608;
      case 0x29u:
        long long v93 = objc_alloc_init(_MRAVOutputDeviceDescriptorProtobuf);
        [(id)a1 addClusterComposition:v93];
        goto LABEL_328;
      case 0x2Au:
        char v214 = 0;
        unsigned int v215 = 0;
        uint64_t v51 = 0;
        *(void *)(a1 + 324) |= 2uLL;
        while (2)
        {
          uint64_t v216 = *v3;
          uint64_t v217 = *(void *)(a2 + v216);
          unint64_t v218 = v217 + 1;
          if (v217 == -1 || v218 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v219 = *(unsigned char *)(*(void *)(a2 + *v7) + v217);
            *(void *)(a2 + v216) = v218;
            v51 |= (unint64_t)(v219 & 0x7F) << v214;
            if (v219 < 0)
            {
              v214 += 7;
              BOOL v15 = v215++ >= 9;
              if (v15)
              {
                LODWORD(v51) = 0;
                goto LABEL_522;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v51) = 0;
        }
LABEL_522:
        uint64_t v369 = 72;
        goto LABEL_559;
      case 0x2Bu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 224;
        goto LABEL_408;
      case 0x2Cu:
        char v220 = 0;
        unsigned int v221 = 0;
        uint64_t v51 = 0;
        *(void *)(a1 + 324) |= 4uLL;
        while (2)
        {
          uint64_t v222 = *v3;
          uint64_t v223 = *(void *)(a2 + v222);
          unint64_t v224 = v223 + 1;
          if (v223 == -1 || v224 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v225 = *(unsigned char *)(*(void *)(a2 + *v7) + v223);
            *(void *)(a2 + v222) = v224;
            v51 |= (unint64_t)(v225 & 0x7F) << v220;
            if (v225 < 0)
            {
              v220 += 7;
              BOOL v15 = v221++ >= 9;
              if (v15)
              {
                LODWORD(v51) = 0;
                goto LABEL_526;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v51) = 0;
        }
LABEL_526:
        uint64_t v369 = 76;
        goto LABEL_559;
      case 0x2Du:
        char v226 = 0;
        unsigned int v227 = 0;
        uint64_t v228 = 0;
        *(void *)(a1 + 324) |= 0x1000000000000uLL;
        while (2)
        {
          uint64_t v229 = *v3;
          uint64_t v230 = *(void *)(a2 + v229);
          unint64_t v231 = v230 + 1;
          if (v230 == -1 || v231 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v232 = *(unsigned char *)(*(void *)(a2 + *v7) + v230);
            *(void *)(a2 + v229) = v231;
            v228 |= (unint64_t)(v232 & 0x7F) << v226;
            if (v232 < 0)
            {
              v226 += 7;
              BOOL v15 = v227++ >= 9;
              if (v15)
              {
                uint64_t v228 = 0;
                goto LABEL_530;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v228 = 0;
        }
LABEL_530:
        BOOL v367 = v228 != 0;
        uint64_t v368 = 318;
        goto LABEL_608;
      case 0x2Eu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 80;
        goto LABEL_408;
      case 0x2Fu:
        PBReaderReadString();
        long long v93 = (_MRAVOutputDeviceSourceInfoProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v93) {
          [(id)a1 addAvailableBluetoothListeningModes:v93];
        }
        goto LABEL_362;
      case 0x30u:
        char v233 = 0;
        unsigned int v234 = 0;
        uint64_t v235 = 0;
        *(void *)(a1 + 324) |= 0x400000000000uLL;
        while (2)
        {
          uint64_t v236 = *v3;
          uint64_t v237 = *(void *)(a2 + v236);
          unint64_t v238 = v237 + 1;
          if (v237 == -1 || v238 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v239 = *(unsigned char *)(*(void *)(a2 + *v7) + v237);
            *(void *)(a2 + v236) = v238;
            v235 |= (unint64_t)(v239 & 0x7F) << v233;
            if (v239 < 0)
            {
              v233 += 7;
              BOOL v15 = v234++ >= 9;
              if (v15)
              {
                uint64_t v235 = 0;
                goto LABEL_534;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v235 = 0;
        }
LABEL_534:
        BOOL v367 = v235 != 0;
        uint64_t v368 = 316;
        goto LABEL_608;
      case 0x31u:
        char v240 = 0;
        unsigned int v241 = 0;
        uint64_t v242 = 0;
        *(void *)(a1 + 324) |= 0x2000000000uLL;
        while (2)
        {
          uint64_t v243 = *v3;
          uint64_t v244 = *(void *)(a2 + v243);
          unint64_t v245 = v244 + 1;
          if (v244 == -1 || v245 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v246 = *(unsigned char *)(*(void *)(a2 + *v7) + v244);
            *(void *)(a2 + v243) = v245;
            v242 |= (unint64_t)(v246 & 0x7F) << v240;
            if (v246 < 0)
            {
              v240 += 7;
              BOOL v15 = v241++ >= 9;
              if (v15)
              {
                uint64_t v242 = 0;
                goto LABEL_538;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v242 = 0;
        }
LABEL_538:
        BOOL v367 = v242 != 0;
        uint64_t v368 = 307;
        goto LABEL_608;
      case 0x32u:
        char v247 = 0;
        unsigned int v248 = 0;
        uint64_t v51 = 0;
        *(void *)(a1 + 324) |= 0x40uLL;
        while (2)
        {
          uint64_t v249 = *v3;
          uint64_t v250 = *(void *)(a2 + v249);
          unint64_t v251 = v250 + 1;
          if (v250 == -1 || v251 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v252 = *(unsigned char *)(*(void *)(a2 + *v7) + v250);
            *(void *)(a2 + v249) = v251;
            v51 |= (unint64_t)(v252 & 0x7F) << v247;
            if (v252 < 0)
            {
              v247 += 7;
              BOOL v15 = v248++ >= 9;
              if (v15)
              {
                LODWORD(v51) = 0;
                goto LABEL_542;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v51) = 0;
        }
LABEL_542:
        uint64_t v369 = 152;
        goto LABEL_559;
      case 0x33u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 16;
        goto LABEL_408;
      case 0x34u:
        char v253 = 0;
        unsigned int v254 = 0;
        uint64_t v255 = 0;
        *(void *)(a1 + 324) |= 0x2000000000000uLL;
        while (2)
        {
          uint64_t v256 = *v3;
          uint64_t v257 = *(void *)(a2 + v256);
          unint64_t v258 = v257 + 1;
          if (v257 == -1 || v258 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v259 = *(unsigned char *)(*(void *)(a2 + *v7) + v257);
            *(void *)(a2 + v256) = v258;
            v255 |= (unint64_t)(v259 & 0x7F) << v253;
            if (v259 < 0)
            {
              v253 += 7;
              BOOL v15 = v254++ >= 9;
              if (v15)
              {
                uint64_t v255 = 0;
                goto LABEL_546;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v255 = 0;
        }
LABEL_546:
        BOOL v367 = v255 != 0;
        uint64_t v368 = 319;
        goto LABEL_608;
      case 0x35u:
        *(void *)(a1 + 324) |= 0x20uLL;
        uint64_t v260 = *v3;
        unint64_t v261 = *(void *)(a2 + v260);
        if (v261 <= 0xFFFFFFFFFFFFFFFBLL && v261 + 4 <= *(void *)(a2 + *v4))
        {
          int v64 = *(_DWORD *)(*(void *)(a2 + *v7) + v261);
          *(void *)(a2 + v260) = v261 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v64 = 0;
        }
        uint64_t v370 = 104;
LABEL_617:
        *(_DWORD *)(a1 + v370) = v64;
        goto LABEL_609;
      case 0x36u:
        char v262 = 0;
        unsigned int v263 = 0;
        uint64_t v264 = 0;
        *(void *)(a1 + 324) |= 0x40000uLL;
        while (2)
        {
          uint64_t v265 = *v3;
          uint64_t v266 = *(void *)(a2 + v265);
          unint64_t v267 = v266 + 1;
          if (v266 == -1 || v267 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v268 = *(unsigned char *)(*(void *)(a2 + *v7) + v266);
            *(void *)(a2 + v265) = v267;
            v264 |= (unint64_t)(v268 & 0x7F) << v262;
            if (v268 < 0)
            {
              v262 += 7;
              BOOL v15 = v263++ >= 9;
              if (v15)
              {
                uint64_t v264 = 0;
                goto LABEL_550;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v264 = 0;
        }
LABEL_550:
        BOOL v367 = v264 != 0;
        uint64_t v368 = 288;
        goto LABEL_608;
      case 0x37u:
        long long v93 = objc_alloc_init(_MRAVOutputDeviceDescriptorProtobuf);
        [(id)a1 addActivatedClusterMembers:v93];
        goto LABEL_328;
      case 0x38u:
        char v269 = 0;
        unsigned int v270 = 0;
        uint64_t v271 = 0;
        *(void *)(a1 + 324) |= 0x800000000uLL;
        while (2)
        {
          uint64_t v272 = *v3;
          uint64_t v273 = *(void *)(a2 + v272);
          unint64_t v274 = v273 + 1;
          if (v273 == -1 || v274 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v275 = *(unsigned char *)(*(void *)(a2 + *v7) + v273);
            *(void *)(a2 + v272) = v274;
            v271 |= (unint64_t)(v275 & 0x7F) << v269;
            if (v275 < 0)
            {
              v269 += 7;
              BOOL v15 = v270++ >= 9;
              if (v15)
              {
                uint64_t v271 = 0;
                goto LABEL_554;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v271 = 0;
        }
LABEL_554:
        BOOL v367 = v271 != 0;
        uint64_t v368 = 305;
        goto LABEL_608;
      case 0x39u:
        char v276 = 0;
        unsigned int v277 = 0;
        uint64_t v51 = 0;
        *(void *)(a1 + 324) |= 0x80uLL;
        while (2)
        {
          uint64_t v278 = *v3;
          uint64_t v279 = *(void *)(a2 + v278);
          unint64_t v280 = v279 + 1;
          if (v279 == -1 || v280 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v281 = *(unsigned char *)(*(void *)(a2 + *v7) + v279);
            *(void *)(a2 + v278) = v280;
            v51 |= (unint64_t)(v281 & 0x7F) << v276;
            if (v281 < 0)
            {
              v276 += 7;
              BOOL v15 = v277++ >= 9;
              if (v15)
              {
                LODWORD(v51) = 0;
                goto LABEL_558;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v51) = 0;
        }
LABEL_558:
        uint64_t v369 = 256;
LABEL_559:
        *(_DWORD *)(a1 + v369) = v51;
        goto LABEL_609;
      case 0x3Au:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 64;
        goto LABEL_408;
      case 0x3Bu:
        char v282 = 0;
        unsigned int v283 = 0;
        uint64_t v284 = 0;
        *(void *)(a1 + 324) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v285 = *v3;
          uint64_t v286 = *(void *)(a2 + v285);
          unint64_t v287 = v286 + 1;
          if (v286 == -1 || v287 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v288 = *(unsigned char *)(*(void *)(a2 + *v7) + v286);
            *(void *)(a2 + v285) = v287;
            v284 |= (unint64_t)(v288 & 0x7F) << v282;
            if (v288 < 0)
            {
              v282 += 7;
              BOOL v15 = v283++ >= 9;
              if (v15)
              {
                uint64_t v284 = 0;
                goto LABEL_563;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v284 = 0;
        }
LABEL_563:
        BOOL v367 = v284 != 0;
        uint64_t v368 = 294;
        goto LABEL_608;
      case 0x3Cu:
        char v289 = 0;
        unsigned int v290 = 0;
        uint64_t v291 = 0;
        *(void *)(a1 + 324) |= 0x800000uLL;
        while (2)
        {
          uint64_t v292 = *v3;
          uint64_t v293 = *(void *)(a2 + v292);
          unint64_t v294 = v293 + 1;
          if (v293 == -1 || v294 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v295 = *(unsigned char *)(*(void *)(a2 + *v7) + v293);
            *(void *)(a2 + v292) = v294;
            v291 |= (unint64_t)(v295 & 0x7F) << v289;
            if (v295 < 0)
            {
              v289 += 7;
              BOOL v15 = v290++ >= 9;
              if (v15)
              {
                uint64_t v291 = 0;
                goto LABEL_567;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v291 = 0;
        }
LABEL_567:
        BOOL v367 = v291 != 0;
        uint64_t v368 = 293;
        goto LABEL_608;
      case 0x3Du:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 208;
        goto LABEL_408;
      case 0x3Eu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 232;
        goto LABEL_408;
      case 0x3Fu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 240;
        goto LABEL_408;
      case 0x40u:
        long long v93 = objc_alloc_init(_MRAVOutputDeviceDescriptorProtobuf);
        [(id)a1 addAllClusterMembers:v93];
LABEL_328:
        if (!PBReaderPlaceMark() || (_MRAVOutputDeviceDescriptorProtobufReadFrom(v93, a2) & 1) == 0) {
          goto LABEL_619;
        }
        goto LABEL_361;
      case 0x41u:
        char v296 = 0;
        unsigned int v297 = 0;
        uint64_t v298 = 0;
        *(void *)(a1 + 324) |= 0x40000000000uLL;
        while (2)
        {
          uint64_t v299 = *v3;
          uint64_t v300 = *(void *)(a2 + v299);
          unint64_t v301 = v300 + 1;
          if (v300 == -1 || v301 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v302 = *(unsigned char *)(*(void *)(a2 + *v7) + v300);
            *(void *)(a2 + v299) = v301;
            v298 |= (unint64_t)(v302 & 0x7F) << v296;
            if (v302 < 0)
            {
              v296 += 7;
              BOOL v15 = v297++ >= 9;
              if (v15)
              {
                uint64_t v298 = 0;
                goto LABEL_571;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v298 = 0;
        }
LABEL_571:
        BOOL v367 = v298 != 0;
        uint64_t v368 = 312;
        goto LABEL_608;
      case 0x42u:
        char v303 = 0;
        unsigned int v304 = 0;
        uint64_t v305 = 0;
        *(void *)(a1 + 324) |= 0x20000uLL;
        while (2)
        {
          uint64_t v306 = *v3;
          uint64_t v307 = *(void *)(a2 + v306);
          unint64_t v308 = v307 + 1;
          if (v307 == -1 || v308 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v309 = *(unsigned char *)(*(void *)(a2 + *v7) + v307);
            *(void *)(a2 + v306) = v308;
            v305 |= (unint64_t)(v309 & 0x7F) << v303;
            if (v309 < 0)
            {
              v303 += 7;
              BOOL v15 = v304++ >= 9;
              if (v15)
              {
                uint64_t v305 = 0;
                goto LABEL_575;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v305 = 0;
        }
LABEL_575:
        BOOL v367 = v305 != 0;
        uint64_t v368 = 287;
        goto LABEL_608;
      case 0x43u:
        char v310 = 0;
        unsigned int v311 = 0;
        uint64_t v312 = 0;
        *(void *)(a1 + 324) |= 0x80000uLL;
        while (2)
        {
          uint64_t v313 = *v3;
          uint64_t v314 = *(void *)(a2 + v313);
          unint64_t v315 = v314 + 1;
          if (v314 == -1 || v315 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v316 = *(unsigned char *)(*(void *)(a2 + *v7) + v314);
            *(void *)(a2 + v313) = v315;
            v312 |= (unint64_t)(v316 & 0x7F) << v310;
            if (v316 < 0)
            {
              v310 += 7;
              BOOL v15 = v311++ >= 9;
              if (v15)
              {
                uint64_t v312 = 0;
                goto LABEL_579;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v312 = 0;
        }
LABEL_579:
        BOOL v367 = v312 != 0;
        uint64_t v368 = 289;
        goto LABEL_608;
      case 0x44u:
        char v317 = 0;
        unsigned int v318 = 0;
        uint64_t v319 = 0;
        *(void *)(a1 + 324) |= 0x8000000000000uLL;
        while (2)
        {
          uint64_t v320 = *v3;
          uint64_t v321 = *(void *)(a2 + v320);
          unint64_t v322 = v321 + 1;
          if (v321 == -1 || v322 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v323 = *(unsigned char *)(*(void *)(a2 + *v7) + v321);
            *(void *)(a2 + v320) = v322;
            v319 |= (unint64_t)(v323 & 0x7F) << v317;
            if (v323 < 0)
            {
              v317 += 7;
              BOOL v15 = v318++ >= 9;
              if (v15)
              {
                uint64_t v319 = 0;
                goto LABEL_583;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v319 = 0;
        }
LABEL_583:
        BOOL v367 = v319 != 0;
        uint64_t v368 = 321;
        goto LABEL_608;
      case 0x45u:
        long long v93 = objc_alloc_init(_MRGroupSessionInfoProtobuf);
        objc_storeStrong((id *)(a1 + 136), v93);
        if PBReaderPlaceMark() && (_MRGroupSessionInfoProtobufReadFrom((uint64_t)v93, a2))
        {
LABEL_361:
          PBReaderRecallMark();
LABEL_362:

LABEL_609:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_619:

        return 0;
      case 0x46u:
        char v324 = 0;
        unsigned int v325 = 0;
        uint64_t v326 = 0;
        *(void *)(a1 + 324) |= 0x10000000000uLL;
        while (2)
        {
          uint64_t v327 = *v3;
          uint64_t v328 = *(void *)(a2 + v327);
          unint64_t v329 = v328 + 1;
          if (v328 == -1 || v329 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v330 = *(unsigned char *)(*(void *)(a2 + *v7) + v328);
            *(void *)(a2 + v327) = v329;
            v326 |= (unint64_t)(v330 & 0x7F) << v324;
            if (v330 < 0)
            {
              v324 += 7;
              BOOL v15 = v325++ >= 9;
              if (v15)
              {
                uint64_t v326 = 0;
                goto LABEL_587;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v326 = 0;
        }
LABEL_587:
        BOOL v367 = v326 != 0;
        uint64_t v368 = 310;
        goto LABEL_608;
      case 0x47u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 88;
        goto LABEL_408;
      case 0x48u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 216;
        goto LABEL_408;
      case 0x49u:
        char v331 = 0;
        unsigned int v332 = 0;
        uint64_t v333 = 0;
        *(void *)(a1 + 324) |= 0x800000000000uLL;
        while (2)
        {
          uint64_t v334 = *v3;
          uint64_t v335 = *(void *)(a2 + v334);
          unint64_t v336 = v335 + 1;
          if (v335 == -1 || v336 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v337 = *(unsigned char *)(*(void *)(a2 + *v7) + v335);
            *(void *)(a2 + v334) = v336;
            v333 |= (unint64_t)(v337 & 0x7F) << v331;
            if (v337 < 0)
            {
              v331 += 7;
              BOOL v15 = v332++ >= 9;
              if (v15)
              {
                uint64_t v333 = 0;
                goto LABEL_591;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v333 = 0;
        }
LABEL_591:
        BOOL v367 = v333 != 0;
        uint64_t v368 = 317;
        goto LABEL_608;
      case 0x4Au:
        char v338 = 0;
        unsigned int v339 = 0;
        uint64_t v340 = 0;
        *(void *)(a1 + 324) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v341 = *v3;
          uint64_t v342 = *(void *)(a2 + v341);
          unint64_t v343 = v342 + 1;
          if (v342 == -1 || v343 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v344 = *(unsigned char *)(*(void *)(a2 + *v7) + v342);
            *(void *)(a2 + v341) = v343;
            v340 |= (unint64_t)(v344 & 0x7F) << v338;
            if (v344 < 0)
            {
              v338 += 7;
              BOOL v15 = v339++ >= 9;
              if (v15)
              {
                uint64_t v340 = 0;
                goto LABEL_595;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v340 = 0;
        }
LABEL_595:
        BOOL v367 = v340 != 0;
        uint64_t v368 = 300;
        goto LABEL_608;
      case 0x4Bu:
        char v345 = 0;
        unsigned int v346 = 0;
        uint64_t v347 = 0;
        *(void *)(a1 + 324) |= 0x200000000000uLL;
        while (2)
        {
          uint64_t v348 = *v3;
          uint64_t v349 = *(void *)(a2 + v348);
          unint64_t v350 = v349 + 1;
          if (v349 == -1 || v350 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v351 = *(unsigned char *)(*(void *)(a2 + *v7) + v349);
            *(void *)(a2 + v348) = v350;
            v347 |= (unint64_t)(v351 & 0x7F) << v345;
            if (v351 < 0)
            {
              v345 += 7;
              BOOL v15 = v346++ >= 9;
              if (v15)
              {
                uint64_t v347 = 0;
                goto LABEL_599;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v347 = 0;
        }
LABEL_599:
        BOOL v367 = v347 != 0;
        uint64_t v368 = 315;
        goto LABEL_608;
      case 0x4Cu:
        char v352 = 0;
        unsigned int v353 = 0;
        uint64_t v354 = 0;
        *(void *)(a1 + 324) |= 0x400uLL;
        while (2)
        {
          uint64_t v355 = *v3;
          uint64_t v356 = *(void *)(a2 + v355);
          unint64_t v357 = v356 + 1;
          if (v356 == -1 || v357 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v358 = *(unsigned char *)(*(void *)(a2 + *v7) + v356);
            *(void *)(a2 + v355) = v357;
            v354 |= (unint64_t)(v358 & 0x7F) << v352;
            if (v358 < 0)
            {
              v352 += 7;
              BOOL v15 = v353++ >= 9;
              if (v15)
              {
                uint64_t v354 = 0;
                goto LABEL_603;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v354 = 0;
        }
LABEL_603:
        BOOL v367 = v354 != 0;
        uint64_t v368 = 280;
        goto LABEL_608;
      case 0x4Du:
        char v359 = 0;
        unsigned int v360 = 0;
        uint64_t v361 = 0;
        *(void *)(a1 + 324) |= 0x10000000uLL;
        while (2)
        {
          uint64_t v362 = *v3;
          uint64_t v363 = *(void *)(a2 + v362);
          unint64_t v364 = v363 + 1;
          if (v363 == -1 || v364 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v365 = *(unsigned char *)(*(void *)(a2 + *v7) + v363);
            *(void *)(a2 + v362) = v364;
            v361 |= (unint64_t)(v365 & 0x7F) << v359;
            if (v365 < 0)
            {
              v359 += 7;
              BOOL v15 = v360++ >= 9;
              if (v15)
              {
                uint64_t v361 = 0;
                goto LABEL_607;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v361 = 0;
        }
LABEL_607:
        BOOL v367 = v361 != 0;
        uint64_t v368 = 298;
LABEL_608:
        *(unsigned char *)(a1 + v368) = v367;
        goto LABEL_609;
      case 0x4Eu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 144;
LABEL_408:
        v366 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_609;
      case 0x4Fu:
        PBReaderReadString();
        long long v93 = (_MRAVOutputDeviceSourceInfoProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v93) {
          [(id)a1 addDnsNames:v93];
        }
        goto LABEL_362;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_609;
    }
  }
}

uint64_t _MRAVOutputDeviceSourceInfoProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            uint64_t v21 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_33:
        *(unsigned char *)(a1 + 16) = v21 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_194FB19E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194FB20B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void MRMediaRemoteGetNowPlayingInfoForPlayer(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  v14[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __MRMediaRemoteGetNowPlayingInfoForPlayer_block_invoke;
  v14[3] = &unk_1E57D4C98;
  id v15 = v8;
  id v9 = v7;
  unint64_t v10 = v14;
  id v11 = v8;
  unint64_t v12 = +[MRPlaybackQueueRequest defaultPlaybackQueueRequest];
  [v12 setCachingPolicy:2];
  [v12 setLegacyNowPlayingInfoRequest:1];
  if (a2)
  {
    [v12 setArtworkWidth:600.0];
    [v12 setArtworkHeight:600.0];
  }
  v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = ___MRGetNowPlayingInfo_block_invoke;
  v16[3] = &unk_1E57D2278;
  id v17 = v9;
  id v18 = v10;
  id v13 = v9;
  MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync(v12, a1, v13, v16);
}

void MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayer(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayer_block_invoke;
  v9[3] = &unk_1E57D5840;
  id v10 = v7;
  id v8 = v7;
  _MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayer(a1, a2, a3, v9);
}

void sub_194FB5BC8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void MRAddStringToXPCMessage(void *a1, id a2, const char *a3)
{
  if (a1 && a2)
  {
    id v5 = a2;
    xpc_object_t xdict = a1;
    xpc_dictionary_set_string(xdict, a3, (const char *)[v5 UTF8String]);
  }
}

void MRMediaRemoteServiceGetPlaybackState(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  kdebug_trace();
  id v10 = a1;
  id v11 = MRCreateXPCMessage(0x200000000000012uLL);
  MRAddPlayerPathToXPCMessage(v11, v9);

  unint64_t v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetPlaybackState_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void _processNotification(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v5 = _MRLogForCategory(0);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412290;
    uint64_t v8 = a3;
    _os_log_impl(&dword_194F3C000, v5, OS_LOG_TYPE_DEFAULT, "[MRMediaSuggestionPreferences] Updating because of notification %@.", (uint8_t *)&v7, 0xCu);
  }

  id v6 = a2;
  if (-[MRMediaSuggestionPreferences _updateGlobalToggleState](v6)) {
    -[MRMediaSuggestionPreferences _notifyListener](v6);
  }
}

void sub_194FB65A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FB66AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FB6720(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FB6794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FB692C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _MRReadNowPlayingInfoString(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = [a1 objectForKeyedSubscript:a2];
  if (v6)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      int v7 = [NSString stringWithFormat:@"Unexpected type %@ found for key '%@' (expecting a NSString)", objc_opt_class(), a2];
      uint64_t v8 = _MRLogForCategory(0);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        _MRReadNowPlayingInfoString_cold_2((uint64_t)v7, v8);
      }

      uint64_t v9 = _MRLogForCategory(1uLL);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT)) {
        _MRReadNowPlayingInfoString_cold_1((uint64_t)v7, v9);
      }

      if (objc_opt_respondsToSelector())
      {
        uint64_t v10 = [v6 stringValue];

        id v6 = (void *)v10;
      }
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      v5[2](v5, v6);
    }
  }
}

uint64_t MRAnalyticsAppBundleIDStringToInt(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    if ([v1 isEqualToString:@"com.apple.MediaRemoteUI"])
    {
      uint64_t v3 = 1;
    }
    else if ([v2 isEqualToString:@"com.apple.mediaremoted"])
    {
      uint64_t v3 = 2;
    }
    else if (MRMediaRemoteApplicationIsSystemMediaApplication((uint64_t)v2))
    {
      uint64_t v3 = 3;
    }
    else if (MRMediaRemoteApplicationIsSystemPodcastApplication((uint64_t)v2))
    {
      uint64_t v3 = 4;
    }
    else if (MRMediaRemoteApplicationIsSystemAppleTVApplication((uint64_t)v2))
    {
      uint64_t v3 = 5;
    }
    else if (MRMediaRemoteApplicationIsSystemClassicalRoomApplication((uint64_t)v2))
    {
      uint64_t v3 = 6;
    }
    else if (MRMediaRemoteApplicationIsSystemBooksApplication((uint64_t)v2))
    {
      uint64_t v3 = 7;
    }
    else if ([v2 isEqualToString:@"com.apple.springboard"])
    {
      uint64_t v3 = 8;
    }
    else if ([v2 containsString:@"airplayd"])
    {
      uint64_t v3 = 9;
    }
    else if ([v2 containsString:@"NanoNowPlaying"])
    {
      uint64_t v3 = 10;
    }
    else if ([v2 containsString:@"PineBoard"])
    {
      uint64_t v3 = 11;
    }
    else if ([v2 containsString:@"Carousel"])
    {
      uint64_t v3 = 12;
    }
    else if ([v2 containsString:@"SurfBoard"])
    {
      uint64_t v3 = 14;
    }
    else if ([v2 containsString:@"ControlCenter"])
    {
      uint64_t v3 = 15;
    }
    else if ([v2 containsString:@"audiomxd"])
    {
      uint64_t v3 = 16;
    }
    else
    {
      uint64_t v3 = 0;
    }
  }
  else
  {
    uint64_t v3 = 149;
  }

  return v3;
}

void sub_194FB9804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194FB9AD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __MRMediaRemoteServiceGetPlaybackState_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t uint64 = 0;
    id v6 = 0;
  }
  else
  {
    uint64_t uint64 = xpc_dictionary_get_uint64(v3, "MRXPC_PLAYBACK_STATE_KEY");
    id v6 = (void *)MRCreateClientErrorFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, uint64_t, void *))(v7 + 16))(v7, uint64, v6);
  }
  kdebug_trace();
}

void __MRMediaRemoteGetPlaybackStateForPlayer_block_invoke_2(uint64_t a1, int a2, void *a3)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if ((a2 - 1) > 4) {
    id v6 = @"Unknown";
  }
  else {
    id v6 = off_1E57D1008[a2 - 1];
  }
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = _MRLogForCategory(0xAuLL);
  uint64_t v9 = v8;
  if (!v5)
  {
    BOOL v15 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (!v15) {
        goto LABEL_17;
      }
      uint64_t v17 = *(void *)(a1 + 32);
      uint64_t v16 = *(void *)(a1 + 40);
      id v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      *(_DWORD *)long long buf = 138544386;
      unsigned int v29 = @"playbackState";
      __int16 v30 = 2114;
      uint64_t v31 = v16;
      __int16 v32 = 2112;
      unint64_t v33 = v6;
      __int16 v34 = 2114;
      uint64_t v35 = v17;
      __int16 v36 = 2048;
      uint64_t v37 = v18;
      char v19 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
      unsigned int v20 = v9;
      uint32_t v21 = 52;
    }
    else
    {
      if (!v15) {
        goto LABEL_17;
      }
      uint64_t v22 = *(void *)(a1 + 40);
      id v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      *(_DWORD *)long long buf = 138544130;
      unsigned int v29 = @"playbackState";
      __int16 v30 = 2114;
      uint64_t v31 = v22;
      __int16 v32 = 2112;
      unint64_t v33 = v6;
      __int16 v34 = 2048;
      uint64_t v35 = v23;
      char v19 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
      unsigned int v20 = v9;
      uint32_t v21 = 42;
    }
    _os_log_impl(&dword_194F3C000, v20, OS_LOG_TYPE_DEFAULT, v19, buf, v21);
    goto LABEL_16;
  }
  BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
  if (v7)
  {
    if (v10)
    {
      uint64_t v12 = *(void *)(a1 + 32);
      uint64_t v11 = *(void *)(a1 + 40);
      id v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      *(_DWORD *)long long buf = 138544386;
      unsigned int v29 = @"playbackState";
      __int16 v30 = 2114;
      uint64_t v31 = v11;
      __int16 v32 = 2114;
      unint64_t v33 = v5;
      __int16 v34 = 2114;
      uint64_t v35 = v12;
      __int16 v36 = 2048;
      uint64_t v37 = v14;
      _os_log_error_impl(&dword_194F3C000, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
LABEL_16:
    }
  }
  else if (v10)
  {
    __MRMediaRemoteGetPlaybackStateForPlayer_block_invoke_2_cold_1();
  }
LABEL_17:

  v25[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v25[1] = 3221225472;
  v25[2] = __MRMediaRemoteGetPlaybackStateForPlayer_block_invoke_572;
  v25[3] = &unk_1E57D0F20;
  char v24 = *(NSObject **)(a1 + 56);
  id v26 = *(id *)(a1 + 64);
  int v27 = a2;
  dispatch_async(v24, v25);
}

void __MRMediaRemoteServiceGetActiveSystemEndpointUID_block_invoke(uint64_t a1, void *a2)
{
  if (a2 == (void *)MEMORY[0x1E4F14520] || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = MRCreateStringFromXPCMessage(a2, "MRXPC_ROUTE_UID_KEY");
  }
  id v5 = (id)v4;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void sub_194FBC280(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FBC398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __MRLogCategoryDiscoveryUpdates_block_invoke()
{
  MRLogCategoryDiscoveryUpdates_log = (uint64_t)os_log_create("com.apple.amp.mediaremote.verbose", "Discovery");

  return MEMORY[0x1F41817F8]();
}

void MRMediaRemoteServiceGetMediaPlaybackVolume(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  kdebug_trace();
  id v7 = a1;
  id v8 = MRCreateXPCMessage(0x100000000000004uLL);
  uint64_t v9 = [v7 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetMediaPlaybackVolume_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v12 = v5;
  id v10 = v5;
  xpc_connection_send_message_with_reply(v9, v8, v6, handler);
}

void MRMediaRemoteServiceGetPickedRouteVolumeControlCapabilities(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  kdebug_trace();
  id v10 = a1;
  uint64_t v11 = MRCreateXPCMessage(0x300000000000004uLL);
  MRAddPlayerPathToXPCMessage(v11, v9);

  id v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetPickedRouteVolumeControlCapabilities_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

uint64_t __MRMediaRemoteServiceGetPickedRouteVolumeControlCapabilities_block_invoke(uint64_t a1, xpc_object_t xdict)
{
  if (xdict == (xpc_object_t)MEMORY[0x1E4F14520] || xdict == (xpc_object_t)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  else {
    xpc_dictionary_get_int64(xdict, "MRXPC_ROUTE_VOLUME_CONTROL_CAPABILITIES_KEY");
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

  return kdebug_trace();
}

uint64_t __MRMediaRemoteGetPickedRoutedVolumeControlCapabilities_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, uint64_t, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), a2, a3);
}

void __MRMediaRemoteGetPickedRoutedVolumeControlCapabilities_block_invoke(uint64_t a1, void *a2, int a3, void *a4)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  id v7 = a2;
  id v8 = a4;
  id v9 = (void *)MRMediaRemotePickedRouteVolumeControlCapabilitiesCopyDescription(a3);
  id v10 = _MRLogForCategory(0xAuLL);
  uint64_t v11 = v10;
  if (!v8 && v9)
  {
    BOOL v12 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v12)
      {
        uint64_t v13 = *(void *)(a1 + 32);
        uint64_t v14 = *(void *)(a1 + 40);
        id v15 = [MEMORY[0x1E4F1C9C8] date];
        [v15 timeIntervalSinceDate:*(void *)(a1 + 48)];
        *(_DWORD *)long long buf = 138544386;
        uint64_t v39 = v13;
        __int16 v40 = 2114;
        uint64_t v41 = v14;
        __int16 v42 = 2112;
        id v43 = v9;
        __int16 v44 = 2114;
        id v45 = v7;
        __int16 v46 = 2048;
        uint64_t v47 = v16;
        uint64_t v17 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
        uint64_t v18 = v11;
        uint32_t v19 = 52;
LABEL_16:
        _os_log_impl(&dword_194F3C000, v18, OS_LOG_TYPE_DEFAULT, v17, buf, v19);
        goto LABEL_17;
      }
      goto LABEL_22;
    }
    if (!v12) {
      goto LABEL_22;
    }
    uint64_t v28 = *(void *)(a1 + 32);
    uint64_t v29 = *(void *)(a1 + 40);
    id v15 = [MEMORY[0x1E4F1C9C8] date];
    [v15 timeIntervalSinceDate:*(void *)(a1 + 48)];
    *(_DWORD *)long long buf = 138544130;
    uint64_t v39 = v28;
    __int16 v40 = 2114;
    uint64_t v41 = v29;
    __int16 v42 = 2112;
    id v43 = v9;
    __int16 v44 = 2048;
    id v45 = v30;
    uint64_t v17 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
LABEL_15:
    uint64_t v18 = v11;
    uint32_t v19 = 42;
    goto LABEL_16;
  }
  if (v8)
  {
    BOOL v20 = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);
    if (v7)
    {
      if (v20)
      {
        uint64_t v21 = *(void *)(a1 + 32);
        uint64_t v22 = *(void *)(a1 + 40);
        id v15 = [MEMORY[0x1E4F1C9C8] date];
        [v15 timeIntervalSinceDate:*(void *)(a1 + 48)];
        *(_DWORD *)long long buf = 138544386;
        uint64_t v39 = v21;
        __int16 v40 = 2114;
        uint64_t v41 = v22;
        __int16 v42 = 2114;
        id v43 = v8;
        __int16 v44 = 2114;
        id v45 = v7;
        __int16 v46 = 2048;
        uint64_t v47 = v23;
        _os_log_error_impl(&dword_194F3C000, v11, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
LABEL_17:

        goto LABEL_22;
      }
    }
    else if (v20)
    {
      __MRMediaRemoteGetPickedRoutedVolumeControlCapabilities_block_invoke_cold_1(a1, v8, v11);
    }
    goto LABEL_22;
  }
  BOOL v24 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
  if (!v7)
  {
    if (!v24) {
      goto LABEL_22;
    }
    uint64_t v31 = *(void *)(a1 + 32);
    uint64_t v32 = *(void *)(a1 + 40);
    id v15 = [MEMORY[0x1E4F1C9C8] date];
    [v15 timeIntervalSinceDate:*(void *)(a1 + 48)];
    *(_DWORD *)long long buf = 138543874;
    uint64_t v39 = v31;
    __int16 v40 = 2114;
    uint64_t v41 = v32;
    __int16 v42 = 2048;
    id v43 = v33;
    uint64_t v17 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
    uint64_t v18 = v11;
    uint32_t v19 = 32;
    goto LABEL_16;
  }
  if (v24)
  {
    uint64_t v25 = *(void *)(a1 + 32);
    uint64_t v26 = *(void *)(a1 + 40);
    id v15 = [MEMORY[0x1E4F1C9C8] date];
    [v15 timeIntervalSinceDate:*(void *)(a1 + 48)];
    *(_DWORD *)long long buf = 138544130;
    uint64_t v39 = v25;
    __int16 v40 = 2114;
    uint64_t v41 = v26;
    __int16 v42 = 2114;
    id v43 = v7;
    __int16 v44 = 2048;
    id v45 = v27;
    uint64_t v17 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
    goto LABEL_15;
  }
LABEL_22:

  v35[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v35[1] = 3221225472;
  v35[2] = __MRMediaRemoteGetPickedRoutedVolumeControlCapabilities_block_invoke_82;
  v35[3] = &unk_1E57D0F20;
  __int16 v34 = *(NSObject **)(a1 + 56);
  id v36 = *(id *)(a1 + 64);
  int v37 = a3;
  dispatch_async(v34, v35);
}

__CFString *MRAnalyticsDeviceCompositionDescription(int a1)
{
  if (a1)
  {
    char v1 = a1;
    uint64_t v2 = objc_opt_new();
    id v3 = v2;
    if (v1)
    {
      [v2 addObject:@"Unknown"];
      if ((v1 & 2) == 0)
      {
LABEL_4:
        if ((v1 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_17;
      }
    }
    else if ((v1 & 2) == 0)
    {
      goto LABEL_4;
    }
    [v3 addObject:@"Speaker"];
    if ((v1 & 4) == 0)
    {
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_18;
    }
LABEL_17:
    [v3 addObject:@"AppleTV"];
    if ((v1 & 8) == 0)
    {
LABEL_6:
      if ((v1 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_19;
    }
LABEL_18:
    [v3 addObject:@"HomePod"];
    if ((v1 & 0x10) == 0)
    {
LABEL_7:
      if ((v1 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
LABEL_19:
    [v3 addObject:@"iOS"];
    if ((v1 & 0x20) == 0)
    {
LABEL_8:
      if ((v1 & 0x40) == 0)
      {
LABEL_10:
        uint64_t v4 = [v3 componentsJoinedByString:@" | "];

        goto LABEL_12;
      }
LABEL_9:
      [v3 addObject:@"Mac"];
      goto LABEL_10;
    }
LABEL_20:
    [v3 addObject:@"Watch"];
    if ((v1 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v4 = @"Unset";
LABEL_12:

  return v4;
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_139(uint64_t a1, void *a2, void *a3)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id v7 = [MEMORY[0x1E4F1C9C8] now];
  id v8 = (void *)[[NSString alloc] initWithFormat:@"%@.%@", *(void *)(a1 + 32), @"fetchOutputDevices"];
  id v9 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", v8, *(void *)(a1 + 40)];
  id v10 = v9;
  if (v5) {
    [v9 appendFormat:@" for %@", v5];
  }
  uint64_t v11 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    __int16 v34 = v10;
    _os_log_impl(&dword_194F3C000, v11, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v25[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v25[1] = 3221225472;
  v25[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_143;
  v25[3] = &unk_1E57D60E8;
  id v26 = *(id *)(a1 + 48);
  int v27 = @"fetchOutputDevices";
  id v28 = v7;
  id v12 = v5;
  id v29 = v12;
  id v30 = v8;
  id v31 = *(id *)(a1 + 40);
  id v32 = v6;
  id v13 = v6;
  id v14 = v8;
  id v15 = v7;
  uint64_t v16 = (void *)MEMORY[0x1997190F0](v25);
  uint64_t v17 = [[MRAVReconnaissanceSession alloc] initWithOutputDeviceUIDs:v12 outputDeviceGroupID:0 features:1];
  uint64_t v18 = [*(id *)(a1 + 56) opaqueSessionID];
  uint32_t v19 = [(MRAVReconnaissanceSession *)v17 discoverySession];
  [v19 setTargetAudioSessionID:v18];

  [(MRAVReconnaissanceSession *)v17 setReturnPartialResults:1];
  v22[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  v22[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_145;
  v22[3] = &unk_1E57D6110;
  id v23 = v12;
  id v24 = v16;
  id v20 = v12;
  id v21 = v16;
  [(MRAVReconnaissanceSession *)v17 beginSearchWithTimeout:v22 completion:3.0];
}

void MRPairedDeviceSetAirPlayReceivers(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = (id)[a2 mutableCopy];
  [v3 setAirPlayReceivers:v4];
}

uint64_t MRMediaRemoteCopyPickableRoutesForCategory(uint64_t a1)
{
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x2020000000;
  uint64_t v13 = 0;
  id v3 = +[MRMediaRemoteServiceClient sharedServiceClient];
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteCopyPickableRoutesForCategory_block_invoke;
  v7[3] = &unk_1E57DA1E8;
  id v9 = &v10;
  id v4 = v2;
  id v8 = v4;
  [v3 fetchPickableRoutesWithCategory:a1 completion:v7];
  dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v5 = v11[3];

  _Block_object_dispose(&v10, 8);
  return v5;
}

void sub_194FBE394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __MRMediaRemoteServiceGetMediaPlaybackVolume_block_invoke(uint64_t a1, xpc_object_t xdict)
{
  if (xdict == (xpc_object_t)MEMORY[0x1E4F14520] || xdict == (xpc_object_t)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    v4.n128_u64[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
  }
  else
  {
    v4.n128_f64[[NSString stringWithFormat:@"com.apple.%@", 0] = xpc_dictionary_get_double(xdict, "MRXPC_VOLUME_VALUE_KEY");
    v4.n128_f32[[NSString stringWithFormat:@"com.apple.%@", 0] = v4.n128_f64[0];
  }
  (*(void (**)(__n128))(*(void *)(a1 + 32) + 16))(v4);

  return kdebug_trace();
}

void __MRMediaRemoteGetMediaPlaybackVolumeForOrigin_block_invoke(uint64_t a1, void *a2, float a3)
{
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  if (!v5)
  {
    *(float *)&double v6 = a3;
    id v15 = [NSNumber numberWithFloat:v6];

    uint64_t v16 = *(void *)(a1 + 32);
    id v8 = _MRLogForCategory(0xAuLL);
    BOOL v17 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (!v15)
    {
      if (v16)
      {
        if (!v17) {
          goto LABEL_21;
        }
        uint64_t v28 = *(void *)(a1 + 40);
        uint64_t v27 = *(void *)(a1 + 48);
        id v29 = *(void **)(a1 + 32);
        uint64_t v13 = [MEMORY[0x1E4F1C9C8] date];
        [v13 timeIntervalSinceDate:*(void *)(a1 + 56)];
        *(_DWORD *)long long buf = 138544130;
        uint64_t v45 = v28;
        __int16 v46 = 2114;
        uint64_t v47 = v27;
        __int16 v48 = 2114;
        id v49 = v29;
        __int16 v50 = 2048;
        uint64_t v51 = v30;
        id v31 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
        id v32 = v8;
        uint32_t v33 = 42;
      }
      else
      {
        if (!v17) {
          goto LABEL_21;
        }
        uint64_t v37 = *(void *)(a1 + 40);
        uint64_t v38 = *(void *)(a1 + 48);
        uint64_t v13 = [MEMORY[0x1E4F1C9C8] date];
        [v13 timeIntervalSinceDate:*(void *)(a1 + 56)];
        *(_DWORD *)long long buf = 138543874;
        uint64_t v45 = v37;
        __int16 v46 = 2114;
        uint64_t v47 = v38;
        __int16 v48 = 2048;
        id v49 = v39;
        id v31 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
        id v32 = v8;
        uint32_t v33 = 32;
      }
      _os_log_impl(&dword_194F3C000, v32, OS_LOG_TYPE_DEFAULT, v31, buf, v33);
      goto LABEL_20;
    }
    if (v16)
    {
      if (!v17) {
        goto LABEL_21;
      }
      uint64_t v19 = *(void *)(a1 + 40);
      uint64_t v20 = *(void *)(a1 + 48);
      *(float *)&double v18 = a3;
      uint64_t v13 = [NSNumber numberWithFloat:v18];
      uint64_t v21 = *(void *)(a1 + 32);
      uint64_t v22 = [MEMORY[0x1E4F1C9C8] date];
      [v22 timeIntervalSinceDate:*(void *)(a1 + 56)];
      *(_DWORD *)long long buf = 138544386;
      uint64_t v45 = v19;
      __int16 v46 = 2114;
      uint64_t v47 = v20;
      __int16 v48 = 2112;
      id v49 = v13;
      __int16 v50 = 2114;
      uint64_t v51 = v21;
      __int16 v52 = 2048;
      uint64_t v53 = v23;
      id v24 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
      uint64_t v25 = v8;
      uint32_t v26 = 52;
    }
    else
    {
      if (!v17) {
        goto LABEL_21;
      }
      uint64_t v34 = *(void *)(a1 + 40);
      uint64_t v35 = *(void *)(a1 + 48);
      *(float *)&double v18 = a3;
      uint64_t v13 = [NSNumber numberWithFloat:v18];
      uint64_t v22 = [MEMORY[0x1E4F1C9C8] date];
      [v22 timeIntervalSinceDate:*(void *)(a1 + 56)];
      *(_DWORD *)long long buf = 138544130;
      uint64_t v45 = v34;
      __int16 v46 = 2114;
      uint64_t v47 = v35;
      __int16 v48 = 2112;
      id v49 = v13;
      __int16 v50 = 2048;
      uint64_t v51 = v36;
      id v24 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
      uint64_t v25 = v8;
      uint32_t v26 = 42;
    }
    _os_log_impl(&dword_194F3C000, v25, OS_LOG_TYPE_DEFAULT, v24, buf, v26);

    goto LABEL_20;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = _MRLogForCategory(0xAuLL);
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
  if (v7)
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(a1 + 48);
      uint64_t v12 = *(void *)(a1 + 32);
      uint64_t v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 56)];
      *(_DWORD *)long long buf = 138544386;
      uint64_t v45 = v11;
      __int16 v46 = 2114;
      uint64_t v47 = v10;
      __int16 v48 = 2114;
      id v49 = v5;
      __int16 v50 = 2114;
      uint64_t v51 = v12;
      __int16 v52 = 2048;
      uint64_t v53 = v14;
      _os_log_error_impl(&dword_194F3C000, v8, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
LABEL_20:
    }
  }
  else if (v9)
  {
    __MRMediaRemoteGetMediaPlaybackVolumeForOrigin_block_invoke_cold_1(a1, v5, v8);
  }
LABEL_21:

  v41[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v41[1] = 3221225472;
  v41[2] = __MRMediaRemoteGetMediaPlaybackVolumeForOrigin_block_invoke_117;
  v41[3] = &unk_1E57D0F20;
  __int16 v40 = *(NSObject **)(a1 + 64);
  id v42 = *(id *)(a1 + 72);
  float v43 = a3;
  dispatch_async(v40, v41);
}

uint64_t _MRPlaybackQueueProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  __n128 v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 92) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_60;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_62;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_60:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_62:
        *(_DWORD *)(a1 + 40) = v19;
        goto LABEL_57;
      case 2u:
        id v24 = objc_alloc_init(_MRContentItemProtobuf);
        [(id)a1 addContentItem:v24];
        goto LABEL_46;
      case 3u:
        id v24 = objc_alloc_init(_MRPlaybackQueueContextProtobuf);
        objc_storeStrong((id *)(a1 + 24), v24);
        if (!PBReaderPlaceMark() || (_MRPlaybackQueueContextProtobufReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_68;
        }
        goto LABEL_55;
      case 4u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 72;
        goto LABEL_44;
      case 5u:
        id v24 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        objc_storeStrong((id *)(a1 + 80), v24);
        if (!PBReaderPlaceMark()
          || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v24->super.super.isa, a2))
        {
          goto LABEL_68;
        }
        goto LABEL_55;
      case 6u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        *(unsigned char *)(a1 + 92) |= 2u;
        while (2)
        {
          uint64_t v30 = *v3;
          unint64_t v31 = *(void *)(a2 + v30);
          if (v31 == -1 || v31 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if (v32 < 0)
            {
              v27 += 7;
              BOOL v14 = v28++ >= 9;
              if (v14)
              {
                uint64_t v29 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_66:
        *(unsigned char *)(a1 + 88) = v29 != 0;
        goto LABEL_57;
      case 7u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 64;
LABEL_44:
        uint32_t v33 = *(void **)(a1 + v26);
        *(void *)(a1 + v26) = v25;

        goto LABEL_57;
      case 8u:
        id v24 = objc_alloc_init(_MRContentItemProtobuf);
        [(id)a1 addParticipants:v24];
LABEL_46:
        if (!PBReaderPlaceMark() || (_MRContentItemProtobufReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_68;
        }
        goto LABEL_55;
      case 9u:
        PBReaderReadString();
        id v24 = (_MRContentItemProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addHomeUserIdentifiers:v24];
        }
        goto LABEL_56;
      case 0xAu:
        id v24 = objc_alloc_init(_MRDictionaryProtobuf);
        uint64_t v34 = 56;
        goto LABEL_53;
      case 0xBu:
        id v24 = objc_alloc_init(_MRDictionaryProtobuf);
        uint64_t v34 = 8;
LABEL_53:
        objc_storeStrong((id *)(a1 + v34), v24);
        if PBReaderPlaceMark() && (_MRDictionaryProtobufReadFrom(v24, a2))
        {
LABEL_55:
          PBReaderRecallMark();
LABEL_56:

LABEL_57:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_68:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_57;
    }
  }
}

uint64_t _MRContentItemProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  __n128 v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 80;
        goto LABEL_58;
      case 2u:
        uint64_t v20 = objc_alloc_init(_MRContentItemMetadataProtobuf);
        objc_storeStrong((id *)(a1 + 104), v20);
        if (!PBReaderPlaceMark() || (_MRContentItemMetadataProtobufReadFrom((uint64_t)v20, a2) & 1) == 0) {
          goto LABEL_85;
        }
        goto LABEL_71;
      case 3u:
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 16;
        goto LABEL_58;
      case 4u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 88;
        goto LABEL_58;
      case 5u:
        uint64_t v20 = objc_alloc_init(_MRLanguageOptionGroupProtobuf);
        [(id)a1 addAvailableLanguageOptions:v20];
        if (!PBReaderPlaceMark() || (_MRLanguageOptionGroupProtobufReadFrom((uint64_t)v20, a2) & 1) == 0) {
          goto LABEL_85;
        }
        goto LABEL_71;
      case 6u:
        uint64_t v20 = objc_alloc_init(_MRLanguageOptionProtobuf);
        [(id)a1 addCurrentLanguageOptions:v20];
        if (!PBReaderPlaceMark() || (_MRLanguageOptionProtobufReadFrom((uint64_t)v20, a2) & 1) == 0) {
          goto LABEL_85;
        }
        goto LABEL_71;
      case 7u:
        uint64_t v20 = objc_alloc_init(_MRLyricsItemProtobuf);
        objc_storeStrong((id *)(a1 + 96), v20);
        if (!PBReaderPlaceMark() || (_MRLyricsItemProtobufReadFrom((uint64_t)v20, a2) & 1) == 0) {
          goto LABEL_85;
        }
        goto LABEL_71;
      case 8u:
        uint64_t v20 = objc_alloc_init(_MRContentItemProtobuf);
        [(id)a1 addSections:v20];
        if (!PBReaderPlaceMark() || (_MRContentItemProtobufReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_85;
        }
        goto LABEL_71;
      case 9u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 112;
        goto LABEL_58;
      case 0xAu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 8;
        goto LABEL_58;
      case 0xBu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 120;
        goto LABEL_58;
      case 0xCu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 136;
        goto LABEL_58;
      case 0xDu:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 160) |= 2u;
        while (2)
        {
          uint64_t v24 = *v3;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 == -1 || v25 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if (v26 < 0)
            {
              v21 += 7;
              BOOL v14 = v22++ >= 9;
              if (v14)
              {
                LODWORD(v23) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_78:
        uint64_t v33 = 28;
        goto LABEL_83;
      case 0xEu:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 160) |= 1u;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v23 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v14 = v28++ >= 9;
              if (v14)
              {
                LODWORD(v23) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_82:
        uint64_t v33 = 24;
LABEL_83:
        *(_DWORD *)(a1 + v33) = v23;
        goto LABEL_73;
      case 0xFu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 32;
LABEL_58:
        char v32 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_73;
      case 0x10u:
        PBReaderReadString();
        uint64_t v20 = (_MRContentItemMetadataProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v20) {
          [(id)a1 addAvailableArtworkFormats:v20];
        }
        goto LABEL_72;
      case 0x11u:
        PBReaderReadString();
        uint64_t v20 = (_MRContentItemMetadataProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v20) {
          [(id)a1 addAvailableRemoteArtworkFormats:v20];
        }
        goto LABEL_72;
      case 0x12u:
        uint64_t v20 = objc_alloc_init(_MRDataArtworkProtobuf);
        [(id)a1 addDataArtworks:v20];
        if (!PBReaderPlaceMark() || !_MRDataArtworkProtobufReadFrom((uint64_t)v20, a2)) {
          goto LABEL_85;
        }
        goto LABEL_71;
      case 0x13u:
        uint64_t v20 = objc_alloc_init(_MRRemoteArtworkProtobuf);
        [(id)a1 addRemoteArtworks:v20];
        if (!PBReaderPlaceMark() || !_MRRemoteArtworkProtobufReadFrom((uint64_t)v20, a2)) {
          goto LABEL_85;
        }
        goto LABEL_71;
      case 0x14u:
        uint64_t v20 = objc_alloc_init(_MRTranscriptAlignmentProtobuf);
        [(id)a1 addTranscriptAlignments:v20];
        if PBReaderPlaceMark() && (_MRTranscriptAlignmentProtobufReadFrom((uint64_t)v20, a2))
        {
LABEL_71:
          PBReaderRecallMark();
LABEL_72:

LABEL_73:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_85:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_73;
    }
  }
}

uint64_t _MRContentItemMetadataProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  __n128 v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 568;
        goto LABEL_449;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 560;
        goto LABEL_449;
      case 3u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(void *)(a1 + 632) |= 0x1000000000000uLL;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_474;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_474:
        BOOL v387 = v22 != 0;
        uint64_t v388 = 614;
        goto LABEL_685;
      case 4u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        *(void *)(a1 + 632) |= 0x80000000000000uLL;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_478;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_478:
        BOOL v387 = v29 != 0;
        uint64_t v388 = 621;
        goto LABEL_685;
      case 5u:
        *(void *)(a1 + 632) |= 0x100000000uLL;
        uint64_t v34 = *v3;
        unint64_t v35 = *(void *)(a2 + v34);
        if (v35 <= 0xFFFFFFFFFFFFFFFBLL && v35 + 4 <= *(void *)(a2 + *v4))
        {
          int v36 = *(_DWORD *)(*(void *)(a2 + *v7) + v35);
          *(void *)(a2 + v34) = v35 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v36 = 0;
        }
        uint64_t v391 = 468;
        goto LABEL_702;
      case 6u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 152;
        goto LABEL_449;
      case 7u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 584;
        goto LABEL_449;
      case 8u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 144;
        goto LABEL_449;
      case 9u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 336;
        goto LABEL_449;
      case 0xAu:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x2000000000uLL;
        while (2)
        {
          uint64_t v40 = *v3;
          uint64_t v41 = *(void *)(a2 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              BOOL v15 = v38++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_482;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_482:
        uint64_t v389 = 532;
        goto LABEL_647;
      case 0xBu:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v46 = *v3;
          uint64_t v47 = *(void *)(a2 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v48;
            v39 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v15 = v45++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_486;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_486:
        uint64_t v389 = 372;
        goto LABEL_647;
      case 0xCu:
        *(void *)(a1 + 632) |= 0x1000uLL;
        uint64_t v50 = *v3;
        unint64_t v51 = *(void *)(a2 + v50);
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v52 = *(void *)(*(void *)(a2 + *v7) + v51);
          *(void *)(a2 + v50) = v51 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v52 = 0;
        }
        uint64_t v392 = 104;
        goto LABEL_707;
      case 0xDu:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v55 = *v3;
          uint64_t v56 = *(void *)(a2 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v57;
            v39 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v15 = v54++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_490;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_490:
        uint64_t v389 = 464;
        goto LABEL_647;
      case 0xEu:
        *(void *)(a1 + 632) |= 1uLL;
        uint64_t v59 = *v3;
        unint64_t v60 = *(void *)(a2 + v59);
        if (v60 <= 0xFFFFFFFFFFFFFFF7 && v60 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v52 = *(void *)(*(void *)(a2 + *v7) + v60);
          *(void *)(a2 + v59) = v60 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v52 = 0;
        }
        uint64_t v392 = 8;
        goto LABEL_707;
      case 0xFu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 400;
        goto LABEL_449;
      case 0x10u:
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = 0;
        *(void *)(a1 + 632) |= 0x4000000000000uLL;
        while (2)
        {
          uint64_t v64 = *v3;
          uint64_t v65 = *(void *)(a2 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
            *(void *)(a2 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              BOOL v15 = v62++ >= 9;
              if (v15)
              {
                uint64_t v63 = 0;
                goto LABEL_494;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v63 = 0;
        }
LABEL_494:
        BOOL v387 = v63 != 0;
        uint64_t v388 = 616;
        goto LABEL_685;
      case 0x11u:
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x800000000uLL;
        while (2)
        {
          uint64_t v70 = *v3;
          uint64_t v71 = *(void *)(a2 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
            *(void *)(a2 + v70) = v72;
            v39 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v15 = v69++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_498;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_498:
        uint64_t v389 = 480;
        goto LABEL_647;
      case 0x12u:
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x1000000000uLL;
        while (2)
        {
          uint64_t v76 = *v3;
          uint64_t v77 = *(void *)(a2 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
            *(void *)(a2 + v76) = v78;
            v39 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              BOOL v15 = v75++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_502;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_502:
        uint64_t v389 = 528;
        goto LABEL_647;
      case 0x13u:
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v82 = 0;
        *(void *)(a1 + 632) |= 0x40000000000uLL;
        while (2)
        {
          uint64_t v83 = *v3;
          uint64_t v84 = *(void *)(a2 + v83);
          unint64_t v85 = v84 + 1;
          if (v84 == -1 || v85 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
            *(void *)(a2 + v83) = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if (v86 < 0)
            {
              v80 += 7;
              BOOL v15 = v81++ >= 9;
              if (v15)
              {
                uint64_t v82 = 0;
                goto LABEL_506;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v82 = 0;
        }
LABEL_506:
        BOOL v387 = v82 != 0;
        uint64_t v388 = 608;
        goto LABEL_685;
      case 0x15u:
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v90 = 0;
        *(void *)(a1 + 632) |= 0x200000000000uLL;
        while (2)
        {
          uint64_t v91 = *v3;
          uint64_t v92 = *(void *)(a2 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
            *(void *)(a2 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              BOOL v15 = v89++ >= 9;
              if (v15)
              {
                uint64_t v90 = 0;
                goto LABEL_510;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v90 = 0;
        }
LABEL_510:
        BOOL v387 = v90 != 0;
        uint64_t v388 = 611;
        goto LABEL_685;
      case 0x16u:
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v97 = 0;
        *(void *)(a1 + 632) |= 0x1000000000000000uLL;
        while (2)
        {
          uint64_t v98 = *v3;
          uint64_t v99 = *(void *)(a2 + v98);
          unint64_t v100 = v99 + 1;
          if (v99 == -1 || v100 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + *v7) + v99);
            *(void *)(a2 + v98) = v100;
            v97 |= (unint64_t)(v101 & 0x7F) << v95;
            if (v101 < 0)
            {
              v95 += 7;
              BOOL v15 = v96++ >= 9;
              if (v15)
              {
                uint64_t v97 = 0;
                goto LABEL_514;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v97 = 0;
        }
LABEL_514:
        BOOL v387 = v97 != 0;
        uint64_t v388 = 626;
        goto LABEL_685;
      case 0x17u:
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v104 = *v3;
          uint64_t v105 = *(void *)(a2 + v104);
          unint64_t v106 = v105 + 1;
          if (v105 == -1 || v106 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)(a2 + *v7) + v105);
            *(void *)(a2 + v104) = v106;
            v39 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              BOOL v15 = v103++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_518;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_518:
        uint64_t v389 = 440;
        goto LABEL_647;
      case 0x18u:
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v110 = 0;
        *(void *)(a1 + 632) |= 0x2000000000000000uLL;
        while (2)
        {
          uint64_t v111 = *v3;
          uint64_t v112 = *(void *)(a2 + v111);
          unint64_t v113 = v112 + 1;
          if (v112 == -1 || v113 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)(a2 + *v7) + v112);
            *(void *)(a2 + v111) = v113;
            v110 |= (unint64_t)(v114 & 0x7F) << v108;
            if (v114 < 0)
            {
              v108 += 7;
              BOOL v15 = v109++ >= 9;
              if (v15)
              {
                uint64_t v110 = 0;
                goto LABEL_522;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v110 = 0;
        }
LABEL_522:
        BOOL v387 = v110 != 0;
        uint64_t v388 = 627;
        goto LABEL_685;
      case 0x19u:
        char v115 = 0;
        unsigned int v116 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v117 = *v3;
          uint64_t v118 = *(void *)(a2 + v117);
          unint64_t v119 = v118 + 1;
          if (v118 == -1 || v119 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v120 = *(unsigned char *)(*(void *)(a2 + *v7) + v118);
            *(void *)(a2 + v117) = v119;
            v39 |= (unint64_t)(v120 & 0x7F) << v115;
            if (v120 < 0)
            {
              v115 += 7;
              BOOL v15 = v116++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_526;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_526:
        uint64_t v389 = 368;
        goto LABEL_647;
      case 0x1Au:
        char v121 = 0;
        unsigned int v122 = 0;
        uint64_t v123 = 0;
        *(void *)(a1 + 632) |= 0x800000000000000uLL;
        while (2)
        {
          uint64_t v124 = *v3;
          uint64_t v125 = *(void *)(a2 + v124);
          unint64_t v126 = v125 + 1;
          if (v125 == -1 || v126 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v127 = *(unsigned char *)(*(void *)(a2 + *v7) + v125);
            *(void *)(a2 + v124) = v126;
            v123 |= (unint64_t)(v127 & 0x7F) << v121;
            if (v127 < 0)
            {
              v121 += 7;
              BOOL v15 = v122++ >= 9;
              if (v15)
              {
                uint64_t v123 = 0;
                goto LABEL_530;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v123 = 0;
        }
LABEL_530:
        BOOL v387 = v123 != 0;
        uint64_t v388 = 625;
        goto LABEL_685;
      case 0x1Bu:
        char v128 = 0;
        unsigned int v129 = 0;
        uint64_t v130 = 0;
        *(void *)(a1 + 632) |= 0x2000000000000uLL;
        while (2)
        {
          uint64_t v131 = *v3;
          uint64_t v132 = *(void *)(a2 + v131);
          unint64_t v133 = v132 + 1;
          if (v132 == -1 || v133 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v134 = *(unsigned char *)(*(void *)(a2 + *v7) + v132);
            *(void *)(a2 + v131) = v133;
            v130 |= (unint64_t)(v134 & 0x7F) << v128;
            if (v134 < 0)
            {
              v128 += 7;
              BOOL v15 = v129++ >= 9;
              if (v15)
              {
                uint64_t v130 = 0;
                goto LABEL_534;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v130 = 0;
        }
LABEL_534:
        BOOL v387 = v130 != 0;
        uint64_t v388 = 615;
        goto LABEL_685;
      case 0x1Cu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 280;
        goto LABEL_449;
      case 0x1Du:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 496;
        goto LABEL_449;
      case 0x1Eu:
        *(void *)(a1 + 632) |= 0x4000uLL;
        uint64_t v135 = *v3;
        unint64_t v136 = *(void *)(a2 + v135);
        if (v136 <= 0xFFFFFFFFFFFFFFF7 && v136 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v52 = *(void *)(*(void *)(a2 + *v7) + v136);
          *(void *)(a2 + v135) = v136 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v52 = 0;
        }
        uint64_t v392 = 120;
        goto LABEL_707;
      case 0x1Fu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 216;
        goto LABEL_449;
      case 0x20u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 240;
        goto LABEL_449;
      case 0x21u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 296;
        goto LABEL_449;
      case 0x22u:
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x200000uLL;
        while (2)
        {
          uint64_t v139 = *v3;
          uint64_t v140 = *(void *)(a2 + v139);
          unint64_t v141 = v140 + 1;
          if (v140 == -1 || v141 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v142 = *(unsigned char *)(*(void *)(a2 + *v7) + v140);
            *(void *)(a2 + v139) = v141;
            v39 |= (unint64_t)(v142 & 0x7F) << v137;
            if (v142 < 0)
            {
              v137 += 7;
              BOOL v15 = v138++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_538;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_538:
        uint64_t v389 = 344;
        goto LABEL_647;
      case 0x23u:
        *(void *)(a1 + 632) |= 2uLL;
        uint64_t v143 = *v3;
        unint64_t v144 = *(void *)(a2 + v143);
        if (v144 <= 0xFFFFFFFFFFFFFFF7 && v144 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v52 = *(void *)(*(void *)(a2 + *v7) + v144);
          *(void *)(a2 + v143) = v144 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v52 = 0;
        }
        uint64_t v392 = 16;
        goto LABEL_707;
      case 0x24u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 384;
        goto LABEL_449;
      case 0x25u:
        char v145 = 0;
        unsigned int v146 = 0;
        uint64_t v147 = 0;
        *(void *)(a1 + 632) |= 0x800000000000uLL;
        while (2)
        {
          uint64_t v148 = *v3;
          uint64_t v149 = *(void *)(a2 + v148);
          unint64_t v150 = v149 + 1;
          if (v149 == -1 || v150 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v151 = *(unsigned char *)(*(void *)(a2 + *v7) + v149);
            *(void *)(a2 + v148) = v150;
            v147 |= (unint64_t)(v151 & 0x7F) << v145;
            if (v151 < 0)
            {
              v145 += 7;
              BOOL v15 = v146++ >= 9;
              if (v15)
              {
                uint64_t v147 = 0;
                goto LABEL_542;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v147 = 0;
        }
LABEL_542:
        BOOL v387 = v147 != 0;
        uint64_t v388 = 613;
        goto LABEL_685;
      case 0x27u:
        *(void *)(a1 + 632) |= 0x200000000uLL;
        uint64_t v152 = *v3;
        unint64_t v153 = *(void *)(a2 + v152);
        if (v153 <= 0xFFFFFFFFFFFFFFFBLL && v153 + 4 <= *(void *)(a2 + *v4))
        {
          int v36 = *(_DWORD *)(*(void *)(a2 + *v7) + v153);
          *(void *)(a2 + v152) = v153 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v36 = 0;
        }
        uint64_t v391 = 472;
        goto LABEL_702;
      case 0x28u:
        char v154 = 0;
        unsigned int v155 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x80000uLL;
        while (2)
        {
          uint64_t v156 = *v3;
          uint64_t v157 = *(void *)(a2 + v156);
          unint64_t v158 = v157 + 1;
          if (v157 == -1 || v158 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v159 = *(unsigned char *)(*(void *)(a2 + *v7) + v157);
            *(void *)(a2 + v156) = v158;
            v39 |= (unint64_t)(v159 & 0x7F) << v154;
            if (v159 < 0)
            {
              v154 += 7;
              BOOL v15 = v155++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_546;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_546:
        uint64_t v389 = 264;
        goto LABEL_647;
      case 0x29u:
        char v160 = 0;
        unsigned int v161 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x8000000000uLL;
        while (2)
        {
          uint64_t v162 = *v3;
          uint64_t v163 = *(void *)(a2 + v162);
          unint64_t v164 = v163 + 1;
          if (v163 == -1 || v164 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v165 = *(unsigned char *)(*(void *)(a2 + *v7) + v163);
            *(void *)(a2 + v162) = v164;
            v39 |= (unint64_t)(v165 & 0x7F) << v160;
            if (v165 < 0)
            {
              v160 += 7;
              BOOL v15 = v161++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_550;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_550:
        uint64_t v389 = 576;
        goto LABEL_647;
      case 0x2Au:
        char v166 = 0;
        unsigned int v167 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x10000000000uLL;
        while (2)
        {
          uint64_t v168 = *v3;
          uint64_t v169 = *(void *)(a2 + v168);
          unint64_t v170 = v169 + 1;
          if (v169 == -1 || v170 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v171 = *(unsigned char *)(*(void *)(a2 + *v7) + v169);
            *(void *)(a2 + v168) = v170;
            v39 |= (unint64_t)(v171 & 0x7F) << v166;
            if (v171 < 0)
            {
              v166 += 7;
              BOOL v15 = v167++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_554;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_554:
        uint64_t v389 = 580;
        goto LABEL_647;
      case 0x2Bu:
        char v172 = 0;
        unsigned int v173 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x20000000000uLL;
        while (2)
        {
          uint64_t v174 = *v3;
          uint64_t v175 = *(void *)(a2 + v174);
          unint64_t v176 = v175 + 1;
          if (v175 == -1 || v176 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v177 = *(unsigned char *)(*(void *)(a2 + *v7) + v175);
            *(void *)(a2 + v174) = v176;
            v39 |= (unint64_t)(v177 & 0x7F) << v172;
            if (v177 < 0)
            {
              v172 += 7;
              BOOL v15 = v173++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_558;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_558:
        uint64_t v389 = 592;
        goto LABEL_647;
      case 0x2Cu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 304;
        goto LABEL_449;
      case 0x2Eu:
        char v178 = 0;
        unsigned int v179 = 0;
        uint64_t v180 = 0;
        *(void *)(a1 + 632) |= 0x200000000000000uLL;
        while (2)
        {
          uint64_t v181 = *v3;
          uint64_t v182 = *(void *)(a2 + v181);
          unint64_t v183 = v182 + 1;
          if (v182 == -1 || v183 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v184 = *(unsigned char *)(*(void *)(a2 + *v7) + v182);
            *(void *)(a2 + v181) = v183;
            v180 |= (unint64_t)(v184 & 0x7F) << v178;
            if (v184 < 0)
            {
              v178 += 7;
              BOOL v15 = v179++ >= 9;
              if (v15)
              {
                uint64_t v180 = 0;
                goto LABEL_562;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v180 = 0;
        }
LABEL_562:
        BOOL v387 = v180 != 0;
        uint64_t v388 = 623;
        goto LABEL_685;
      case 0x30u:
        char v185 = 0;
        unsigned int v186 = 0;
        uint64_t v187 = 0;
        *(void *)(a1 + 632) |= 0x20000000000000uLL;
        while (2)
        {
          uint64_t v188 = *v3;
          uint64_t v189 = *(void *)(a2 + v188);
          unint64_t v190 = v189 + 1;
          if (v189 == -1 || v190 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v191 = *(unsigned char *)(*(void *)(a2 + *v7) + v189);
            *(void *)(a2 + v188) = v190;
            v187 |= (unint64_t)(v191 & 0x7F) << v185;
            if (v191 < 0)
            {
              v185 += 7;
              BOOL v15 = v186++ >= 9;
              if (v15)
              {
                uint64_t v187 = 0;
                goto LABEL_566;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v187 = 0;
        }
LABEL_566:
        BOOL v387 = v187 != 0;
        uint64_t v388 = 619;
        goto LABEL_685;
      case 0x31u:
        char v192 = 0;
        unsigned int v193 = 0;
        uint64_t v194 = 0;
        *(void *)(a1 + 632) |= 0x10000000000000uLL;
        while (2)
        {
          uint64_t v195 = *v3;
          uint64_t v196 = *(void *)(a2 + v195);
          unint64_t v197 = v196 + 1;
          if (v196 == -1 || v197 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v198 = *(unsigned char *)(*(void *)(a2 + *v7) + v196);
            *(void *)(a2 + v195) = v197;
            v194 |= (unint64_t)(v198 & 0x7F) << v192;
            if (v198 < 0)
            {
              v192 += 7;
              BOOL v15 = v193++ >= 9;
              if (v15)
              {
                uint64_t v194 = 0;
                goto LABEL_570;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v194 = 0;
        }
LABEL_570:
        BOOL v387 = v194 != 0;
        uint64_t v388 = 618;
        goto LABEL_685;
      case 0x32u:
        char v199 = 0;
        unsigned int v200 = 0;
        uint64_t v201 = 0;
        *(void *)(a1 + 632) |= 0x800uLL;
        while (2)
        {
          uint64_t v202 = *v3;
          uint64_t v203 = *(void *)(a2 + v202);
          unint64_t v204 = v203 + 1;
          if (v203 == -1 || v204 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v205 = *(unsigned char *)(*(void *)(a2 + *v7) + v203);
            *(void *)(a2 + v202) = v204;
            v201 |= (unint64_t)(v205 & 0x7F) << v199;
            if (v205 < 0)
            {
              v199 += 7;
              BOOL v15 = v200++ >= 9;
              if (v15)
              {
                uint64_t v201 = 0;
                goto LABEL_574;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v201 = 0;
        }
LABEL_574:
        uint64_t v390 = 96;
        goto LABEL_668;
      case 0x34u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 512;
        goto LABEL_449;
      case 0x35u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 520;
        goto LABEL_449;
      case 0x36u:
        char v206 = 0;
        unsigned int v207 = 0;
        uint64_t v201 = 0;
        *(void *)(a1 + 632) |= 0x40uLL;
        while (2)
        {
          uint64_t v208 = *v3;
          uint64_t v209 = *(void *)(a2 + v208);
          unint64_t v210 = v209 + 1;
          if (v209 == -1 || v210 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v211 = *(unsigned char *)(*(void *)(a2 + *v7) + v209);
            *(void *)(a2 + v208) = v210;
            v201 |= (unint64_t)(v211 & 0x7F) << v206;
            if (v211 < 0)
            {
              v206 += 7;
              BOOL v15 = v207++ >= 9;
              if (v15)
              {
                uint64_t v201 = 0;
                goto LABEL_578;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v201 = 0;
        }
LABEL_578:
        uint64_t v390 = 56;
        goto LABEL_668;
      case 0x37u:
        char v212 = 0;
        unsigned int v213 = 0;
        uint64_t v201 = 0;
        *(void *)(a1 + 632) |= 0x80uLL;
        while (2)
        {
          uint64_t v214 = *v3;
          uint64_t v215 = *(void *)(a2 + v214);
          unint64_t v216 = v215 + 1;
          if (v215 == -1 || v216 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v217 = *(unsigned char *)(*(void *)(a2 + *v7) + v215);
            *(void *)(a2 + v214) = v216;
            v201 |= (unint64_t)(v217 & 0x7F) << v212;
            if (v217 < 0)
            {
              v212 += 7;
              BOOL v15 = v213++ >= 9;
              if (v15)
              {
                uint64_t v201 = 0;
                goto LABEL_582;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v201 = 0;
        }
LABEL_582:
        uint64_t v390 = 64;
        goto LABEL_668;
      case 0x38u:
        char v218 = 0;
        unsigned int v219 = 0;
        uint64_t v201 = 0;
        *(void *)(a1 + 632) |= 0x20uLL;
        while (2)
        {
          uint64_t v220 = *v3;
          uint64_t v221 = *(void *)(a2 + v220);
          unint64_t v222 = v221 + 1;
          if (v221 == -1 || v222 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v223 = *(unsigned char *)(*(void *)(a2 + *v7) + v221);
            *(void *)(a2 + v220) = v222;
            v201 |= (unint64_t)(v223 & 0x7F) << v218;
            if (v223 < 0)
            {
              v218 += 7;
              BOOL v15 = v219++ >= 9;
              if (v15)
              {
                uint64_t v201 = 0;
                goto LABEL_586;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v201 = 0;
        }
LABEL_586:
        uint64_t v390 = 48;
        goto LABEL_668;
      case 0x39u:
        char v224 = 0;
        unsigned int v225 = 0;
        uint64_t v201 = 0;
        *(void *)(a1 + 632) |= 0x10uLL;
        while (2)
        {
          uint64_t v226 = *v3;
          uint64_t v227 = *(void *)(a2 + v226);
          unint64_t v228 = v227 + 1;
          if (v227 == -1 || v228 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v229 = *(unsigned char *)(*(void *)(a2 + *v7) + v227);
            *(void *)(a2 + v226) = v228;
            v201 |= (unint64_t)(v229 & 0x7F) << v224;
            if (v229 < 0)
            {
              v224 += 7;
              BOOL v15 = v225++ >= 9;
              if (v15)
              {
                uint64_t v201 = 0;
                goto LABEL_590;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v201 = 0;
        }
LABEL_590:
        uint64_t v390 = 40;
        goto LABEL_668;
      case 0x3Au:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 504;
        goto LABEL_449;
      case 0x3Bu:
        *(void *)(a1 + 632) |= 0x100000uLL;
        uint64_t v230 = *v3;
        unint64_t v231 = *(void *)(a2 + v230);
        if (v231 <= 0xFFFFFFFFFFFFFFFBLL && v231 + 4 <= *(void *)(a2 + *v4))
        {
          int v36 = *(_DWORD *)(*(void *)(a2 + *v7) + v231);
          *(void *)(a2 + v230) = v231 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v36 = 0;
        }
        uint64_t v391 = 320;
        goto LABEL_702;
      case 0x3Cu:
        char v232 = 0;
        unsigned int v233 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x800000uLL;
        while (2)
        {
          uint64_t v234 = *v3;
          uint64_t v235 = *(void *)(a2 + v234);
          unint64_t v236 = v235 + 1;
          if (v235 == -1 || v236 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v237 = *(unsigned char *)(*(void *)(a2 + *v7) + v235);
            *(void *)(a2 + v234) = v236;
            v39 |= (unint64_t)(v237 & 0x7F) << v232;
            if (v237 < 0)
            {
              v232 += 7;
              BOOL v15 = v233++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_594;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_594:
        uint64_t v389 = 352;
        goto LABEL_647;
      case 0x3Du:
        *(void *)(a1 + 632) |= 0x400000uLL;
        uint64_t v238 = *v3;
        unint64_t v239 = *(void *)(a2 + v238);
        if (v239 <= 0xFFFFFFFFFFFFFFFBLL && v239 + 4 <= *(void *)(a2 + *v4))
        {
          int v36 = *(_DWORD *)(*(void *)(a2 + *v7) + v239);
          *(void *)(a2 + v238) = v239 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v36 = 0;
        }
        uint64_t v391 = 348;
LABEL_702:
        *(_DWORD *)(a1 + v391) = v36;
        goto LABEL_708;
      case 0x3Eu:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 184;
        goto LABEL_449;
      case 0x3Fu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 536;
        goto LABEL_449;
      case 0x40u:
        char v240 = 0;
        unsigned int v241 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v242 = *v3;
          uint64_t v243 = *(void *)(a2 + v242);
          unint64_t v244 = v243 + 1;
          if (v243 == -1 || v244 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v245 = *(unsigned char *)(*(void *)(a2 + *v7) + v243);
            *(void *)(a2 + v242) = v244;
            v39 |= (unint64_t)(v245 & 0x7F) << v240;
            if (v245 < 0)
            {
              v240 += 7;
              BOOL v15 = v241++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_598;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_598:
        uint64_t v389 = 428;
        goto LABEL_647;
      case 0x41u:
        char v246 = 0;
        unsigned int v247 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x10000000uLL;
        while (2)
        {
          uint64_t v248 = *v3;
          uint64_t v249 = *(void *)(a2 + v248);
          unint64_t v250 = v249 + 1;
          if (v249 == -1 || v250 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v251 = *(unsigned char *)(*(void *)(a2 + *v7) + v249);
            *(void *)(a2 + v248) = v250;
            v39 |= (unint64_t)(v251 & 0x7F) << v246;
            if (v251 < 0)
            {
              v246 += 7;
              BOOL v15 = v247++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_602;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_602:
        uint64_t v389 = 424;
        goto LABEL_647;
      case 0x43u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 432;
        goto LABEL_449;
      case 0x44u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 600;
        goto LABEL_449;
      case 0x45u:
        char v252 = 0;
        unsigned int v253 = 0;
        uint64_t v254 = 0;
        *(void *)(a1 + 632) |= 0x400000000000000uLL;
        while (2)
        {
          uint64_t v255 = *v3;
          uint64_t v256 = *(void *)(a2 + v255);
          unint64_t v257 = v256 + 1;
          if (v256 == -1 || v257 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v258 = *(unsigned char *)(*(void *)(a2 + *v7) + v256);
            *(void *)(a2 + v255) = v257;
            v254 |= (unint64_t)(v258 & 0x7F) << v252;
            if (v258 < 0)
            {
              v252 += 7;
              BOOL v15 = v253++ >= 9;
              if (v15)
              {
                uint64_t v254 = 0;
                goto LABEL_606;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v254 = 0;
        }
LABEL_606:
        BOOL v387 = v254 != 0;
        uint64_t v388 = 624;
        goto LABEL_685;
      case 0x46u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 224;
        goto LABEL_449;
      case 0x47u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 416;
        goto LABEL_449;
      case 0x48u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 328;
        goto LABEL_449;
      case 0x49u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 288;
        goto LABEL_449;
      case 0x4Au:
        *(void *)(a1 + 632) |= 4uLL;
        uint64_t v259 = *v3;
        unint64_t v260 = *(void *)(a2 + v259);
        if (v260 <= 0xFFFFFFFFFFFFFFF7 && v260 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v52 = *(void *)(*(void *)(a2 + *v7) + v260);
          *(void *)(a2 + v259) = v260 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v52 = 0;
        }
        uint64_t v392 = 24;
        goto LABEL_707;
      case 0x4Bu:
        *(void *)(a1 + 632) |= 0x100uLL;
        uint64_t v261 = *v3;
        unint64_t v262 = *(void *)(a2 + v261);
        if (v262 <= 0xFFFFFFFFFFFFFFF7 && v262 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v52 = *(void *)(*(void *)(a2 + *v7) + v262);
          *(void *)(a2 + v261) = v262 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v52 = 0;
        }
        uint64_t v392 = 72;
LABEL_707:
        *(void *)(a1 + v392) = v52;
        goto LABEL_708;
      case 0x4Cu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 544;
        goto LABEL_449;
      case 0x4Du:
        char v263 = 0;
        unsigned int v264 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x40000uLL;
        while (2)
        {
          uint64_t v265 = *v3;
          uint64_t v266 = *(void *)(a2 + v265);
          unint64_t v267 = v266 + 1;
          if (v266 == -1 || v267 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v268 = *(unsigned char *)(*(void *)(a2 + *v7) + v266);
            *(void *)(a2 + v265) = v267;
            v39 |= (unint64_t)(v268 & 0x7F) << v263;
            if (v268 < 0)
            {
              v263 += 7;
              BOOL v15 = v264++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_610;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_610:
        uint64_t v389 = 196;
        goto LABEL_647;
      case 0x4Eu:
        char v269 = 0;
        unsigned int v270 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x20000uLL;
        while (2)
        {
          uint64_t v271 = *v3;
          uint64_t v272 = *(void *)(a2 + v271);
          unint64_t v273 = v272 + 1;
          if (v272 == -1 || v273 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v274 = *(unsigned char *)(*(void *)(a2 + *v7) + v272);
            *(void *)(a2 + v271) = v273;
            v39 |= (unint64_t)(v274 & 0x7F) << v269;
            if (v274 < 0)
            {
              v269 += 7;
              BOOL v15 = v270++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_614;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_614:
        uint64_t v389 = 192;
        goto LABEL_647;
      case 0x4Fu:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 312;
        goto LABEL_449;
      case 0x50u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 208;
        goto LABEL_449;
      case 0x51u:
        char v275 = 0;
        unsigned int v276 = 0;
        uint64_t v277 = 0;
        *(void *)(a1 + 632) |= 0x40000000000000uLL;
        while (2)
        {
          uint64_t v278 = *v3;
          uint64_t v279 = *(void *)(a2 + v278);
          unint64_t v280 = v279 + 1;
          if (v279 == -1 || v280 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v281 = *(unsigned char *)(*(void *)(a2 + *v7) + v279);
            *(void *)(a2 + v278) = v280;
            v277 |= (unint64_t)(v281 & 0x7F) << v275;
            if (v281 < 0)
            {
              v275 += 7;
              BOOL v15 = v276++ >= 9;
              if (v15)
              {
                uint64_t v277 = 0;
                goto LABEL_618;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v277 = 0;
        }
LABEL_618:
        BOOL v387 = v277 != 0;
        uint64_t v388 = 620;
        goto LABEL_685;
      case 0x52u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 232;
        goto LABEL_449;
      case 0x53u:
        char v282 = 0;
        unsigned int v283 = 0;
        uint64_t v201 = 0;
        *(void *)(a1 + 632) |= 0x200uLL;
        while (2)
        {
          uint64_t v284 = *v3;
          uint64_t v285 = *(void *)(a2 + v284);
          unint64_t v286 = v285 + 1;
          if (v285 == -1 || v286 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v287 = *(unsigned char *)(*(void *)(a2 + *v7) + v285);
            *(void *)(a2 + v284) = v286;
            v201 |= (unint64_t)(v287 & 0x7F) << v282;
            if (v287 < 0)
            {
              v282 += 7;
              BOOL v15 = v283++ >= 9;
              if (v15)
              {
                uint64_t v201 = 0;
                goto LABEL_622;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v201 = 0;
        }
LABEL_622:
        uint64_t v390 = 80;
        goto LABEL_668;
      case 0x54u:
        char v288 = 0;
        unsigned int v289 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x4000000uLL;
        while (2)
        {
          uint64_t v290 = *v3;
          uint64_t v291 = *(void *)(a2 + v290);
          unint64_t v292 = v291 + 1;
          if (v291 == -1 || v292 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v293 = *(unsigned char *)(*(void *)(a2 + *v7) + v291);
            *(void *)(a2 + v290) = v292;
            v39 |= (unint64_t)(v293 & 0x7F) << v288;
            if (v293 < 0)
            {
              v288 += 7;
              BOOL v15 = v289++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_626;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_626:
        uint64_t v389 = 376;
        goto LABEL_647;
      case 0x55u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 200;
        goto LABEL_449;
      case 0x56u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 256;
        goto LABEL_449;
      case 0x57u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 408;
        goto LABEL_449;
      case 0x58u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 168;
        goto LABEL_449;
      case 0x59u:
        char v294 = 0;
        unsigned int v295 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x4000000000uLL;
        while (2)
        {
          uint64_t v296 = *v3;
          uint64_t v297 = *(void *)(a2 + v296);
          unint64_t v298 = v297 + 1;
          if (v297 == -1 || v298 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v299 = *(unsigned char *)(*(void *)(a2 + *v7) + v297);
            *(void *)(a2 + v296) = v298;
            v39 |= (unint64_t)(v299 & 0x7F) << v294;
            if (v299 < 0)
            {
              v294 += 7;
              BOOL v15 = v295++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_630;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_630:
        uint64_t v389 = 552;
        goto LABEL_647;
      case 0x5Au:
        char v300 = 0;
        unsigned int v301 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x10000uLL;
        while (2)
        {
          uint64_t v302 = *v3;
          uint64_t v303 = *(void *)(a2 + v302);
          unint64_t v304 = v303 + 1;
          if (v303 == -1 || v304 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v305 = *(unsigned char *)(*(void *)(a2 + *v7) + v303);
            *(void *)(a2 + v302) = v304;
            v39 |= (unint64_t)(v305 & 0x7F) << v300;
            if (v305 < 0)
            {
              v300 += 7;
              BOOL v15 = v301++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_634;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_634:
        uint64_t v389 = 160;
        goto LABEL_647;
      case 0x5Bu:
        char v306 = 0;
        unsigned int v307 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v308 = *v3;
          uint64_t v309 = *(void *)(a2 + v308);
          unint64_t v310 = v309 + 1;
          if (v309 == -1 || v310 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v311 = *(unsigned char *)(*(void *)(a2 + *v7) + v309);
            *(void *)(a2 + v308) = v310;
            v39 |= (unint64_t)(v311 & 0x7F) << v306;
            if (v311 < 0)
            {
              v306 += 7;
              BOOL v15 = v307++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_638;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_638:
        uint64_t v389 = 476;
        goto LABEL_647;
      case 0x5Cu:
        uint64_t v312 = objc_alloc_init(_MRAudioFormatProtobuf);
        uint64_t v313 = 488;
        goto LABEL_380;
      case 0x5Du:
        uint64_t v312 = objc_alloc_init(_MRAudioFormatProtobuf);
        uint64_t v313 = 128;
LABEL_380:
        objc_storeStrong((id *)(a1 + v313), v312);
        goto LABEL_399;
      case 0x5Eu:
        char v314 = 0;
        unsigned int v315 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x8000uLL;
        while (2)
        {
          uint64_t v316 = *v3;
          uint64_t v317 = *(void *)(a2 + v316);
          unint64_t v318 = v317 + 1;
          if (v317 == -1 || v318 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v319 = *(unsigned char *)(*(void *)(a2 + *v7) + v317);
            *(void *)(a2 + v316) = v318;
            v39 |= (unint64_t)(v319 & 0x7F) << v314;
            if (v319 < 0)
            {
              v314 += 7;
              BOOL v15 = v315++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_642;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_642:
        uint64_t v389 = 136;
        goto LABEL_647;
      case 0x5Fu:
        char v320 = 0;
        unsigned int v321 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 632) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v322 = *v3;
          uint64_t v323 = *(void *)(a2 + v322);
          unint64_t v324 = v323 + 1;
          if (v323 == -1 || v324 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v325 = *(unsigned char *)(*(void *)(a2 + *v7) + v323);
            *(void *)(a2 + v322) = v324;
            v39 |= (unint64_t)(v325 & 0x7F) << v320;
            if (v325 < 0)
            {
              v320 += 7;
              BOOL v15 = v321++ >= 9;
              if (v15)
              {
                LODWORD(v39) = 0;
                goto LABEL_646;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v39) = 0;
        }
LABEL_646:
        uint64_t v389 = 380;
LABEL_647:
        *(_DWORD *)(a1 + v389) = v39;
        goto LABEL_708;
      case 0x60u:
        uint64_t v312 = objc_alloc_init(_MRAudioRouteProtobuf);
        objc_storeStrong((id *)(a1 + 248), v312);
        if (!PBReaderPlaceMark() || (_MRAudioRouteProtobufReadFrom((uint64_t)v312, a2) & 1) == 0) {
          goto LABEL_710;
        }
        goto LABEL_401;
      case 0x61u:
        uint64_t v312 = objc_alloc_init(_MRAudioFormatProtobuf);
        [(id)a1 addAlternativeFormats:v312];
LABEL_399:
        if PBReaderPlaceMark() && (_MRAudioFormatProtobufReadFrom((uint64_t)v312, a2))
        {
LABEL_401:
          PBReaderRecallMark();

LABEL_708:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_710:

        return 0;
      case 0x62u:
        char v326 = 0;
        unsigned int v327 = 0;
        uint64_t v328 = 0;
        *(void *)(a1 + 632) |= 0x400000000000uLL;
        while (2)
        {
          uint64_t v329 = *v3;
          uint64_t v330 = *(void *)(a2 + v329);
          unint64_t v331 = v330 + 1;
          if (v330 == -1 || v331 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v332 = *(unsigned char *)(*(void *)(a2 + *v7) + v330);
            *(void *)(a2 + v329) = v331;
            v328 |= (unint64_t)(v332 & 0x7F) << v326;
            if (v332 < 0)
            {
              v326 += 7;
              BOOL v15 = v327++ >= 9;
              if (v15)
              {
                uint64_t v328 = 0;
                goto LABEL_651;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v328 = 0;
        }
LABEL_651:
        BOOL v387 = v328 != 0;
        uint64_t v388 = 612;
        goto LABEL_685;
      case 0x63u:
        char v333 = 0;
        unsigned int v334 = 0;
        uint64_t v335 = 0;
        *(void *)(a1 + 632) |= 0x100000000000uLL;
        while (2)
        {
          uint64_t v336 = *v3;
          uint64_t v337 = *(void *)(a2 + v336);
          unint64_t v338 = v337 + 1;
          if (v337 == -1 || v338 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v339 = *(unsigned char *)(*(void *)(a2 + *v7) + v337);
            *(void *)(a2 + v336) = v338;
            v335 |= (unint64_t)(v339 & 0x7F) << v333;
            if (v339 < 0)
            {
              v333 += 7;
              BOOL v15 = v334++ >= 9;
              if (v15)
              {
                uint64_t v335 = 0;
                goto LABEL_655;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v335 = 0;
        }
LABEL_655:
        BOOL v387 = v335 != 0;
        uint64_t v388 = 610;
        goto LABEL_685;
      case 0x64u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 456;
        goto LABEL_449;
      case 0x65u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 448;
        goto LABEL_449;
      case 0x66u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 272;
        goto LABEL_449;
      case 0x67u:
        char v340 = 0;
        unsigned int v341 = 0;
        uint64_t v201 = 0;
        *(void *)(a1 + 632) |= 0x2000uLL;
        while (2)
        {
          uint64_t v342 = *v3;
          uint64_t v343 = *(void *)(a2 + v342);
          unint64_t v344 = v343 + 1;
          if (v343 == -1 || v344 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v345 = *(unsigned char *)(*(void *)(a2 + *v7) + v343);
            *(void *)(a2 + v342) = v344;
            v201 |= (unint64_t)(v345 & 0x7F) << v340;
            if (v345 < 0)
            {
              v340 += 7;
              BOOL v15 = v341++ >= 9;
              if (v15)
              {
                uint64_t v201 = 0;
                goto LABEL_659;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v201 = 0;
        }
LABEL_659:
        uint64_t v390 = 112;
        goto LABEL_668;
      case 0x68u:
        char v346 = 0;
        unsigned int v347 = 0;
        uint64_t v201 = 0;
        *(void *)(a1 + 632) |= 0x400uLL;
        while (2)
        {
          uint64_t v348 = *v3;
          uint64_t v349 = *(void *)(a2 + v348);
          unint64_t v350 = v349 + 1;
          if (v349 == -1 || v350 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v351 = *(unsigned char *)(*(void *)(a2 + *v7) + v349);
            *(void *)(a2 + v348) = v350;
            v201 |= (unint64_t)(v351 & 0x7F) << v346;
            if (v351 < 0)
            {
              v346 += 7;
              BOOL v15 = v347++ >= 9;
              if (v15)
              {
                uint64_t v201 = 0;
                goto LABEL_663;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v201 = 0;
        }
LABEL_663:
        uint64_t v390 = 88;
        goto LABEL_668;
      case 0x69u:
        char v352 = 0;
        unsigned int v353 = 0;
        uint64_t v201 = 0;
        *(void *)(a1 + 632) |= 8uLL;
        while (2)
        {
          uint64_t v354 = *v3;
          uint64_t v355 = *(void *)(a2 + v354);
          unint64_t v356 = v355 + 1;
          if (v355 == -1 || v356 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v357 = *(unsigned char *)(*(void *)(a2 + *v7) + v355);
            *(void *)(a2 + v354) = v356;
            v201 |= (unint64_t)(v357 & 0x7F) << v352;
            if (v357 < 0)
            {
              v352 += 7;
              BOOL v15 = v353++ >= 9;
              if (v15)
              {
                uint64_t v201 = 0;
                goto LABEL_667;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v201 = 0;
        }
LABEL_667:
        uint64_t v390 = 32;
LABEL_668:
        *(void *)(a1 + v390) = v201;
        goto LABEL_708;
      case 0x6Au:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 360;
        goto LABEL_449;
      case 0x6Bu:
        char v358 = 0;
        unsigned int v359 = 0;
        uint64_t v360 = 0;
        *(void *)(a1 + 632) |= 0x100000000000000uLL;
        while (2)
        {
          uint64_t v361 = *v3;
          uint64_t v362 = *(void *)(a2 + v361);
          unint64_t v363 = v362 + 1;
          if (v362 == -1 || v363 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v364 = *(unsigned char *)(*(void *)(a2 + *v7) + v362);
            *(void *)(a2 + v361) = v363;
            v360 |= (unint64_t)(v364 & 0x7F) << v358;
            if (v364 < 0)
            {
              v358 += 7;
              BOOL v15 = v359++ >= 9;
              if (v15)
              {
                uint64_t v360 = 0;
                goto LABEL_672;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v360 = 0;
        }
LABEL_672:
        BOOL v387 = v360 != 0;
        uint64_t v388 = 622;
        goto LABEL_685;
      case 0x6Cu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 392;
LABEL_449:
        char v365 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_708;
      case 0x6Du:
        char v366 = 0;
        unsigned int v367 = 0;
        uint64_t v368 = 0;
        *(void *)(a1 + 632) |= 0x8000000000000uLL;
        while (2)
        {
          uint64_t v369 = *v3;
          uint64_t v370 = *(void *)(a2 + v369);
          unint64_t v371 = v370 + 1;
          if (v370 == -1 || v371 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v372 = *(unsigned char *)(*(void *)(a2 + *v7) + v370);
            *(void *)(a2 + v369) = v371;
            v368 |= (unint64_t)(v372 & 0x7F) << v366;
            if (v372 < 0)
            {
              v366 += 7;
              BOOL v15 = v367++ >= 9;
              if (v15)
              {
                uint64_t v368 = 0;
                goto LABEL_676;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v368 = 0;
        }
LABEL_676:
        BOOL v387 = v368 != 0;
        uint64_t v388 = 617;
        goto LABEL_685;
      case 0x6Eu:
        char v373 = 0;
        unsigned int v374 = 0;
        uint64_t v375 = 0;
        *(void *)(a1 + 632) |= 0x80000000000uLL;
        while (2)
        {
          uint64_t v376 = *v3;
          uint64_t v377 = *(void *)(a2 + v376);
          unint64_t v378 = v377 + 1;
          if (v377 == -1 || v378 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v379 = *(unsigned char *)(*(void *)(a2 + *v7) + v377);
            *(void *)(a2 + v376) = v378;
            v375 |= (unint64_t)(v379 & 0x7F) << v373;
            if (v379 < 0)
            {
              v373 += 7;
              BOOL v15 = v374++ >= 9;
              if (v15)
              {
                uint64_t v375 = 0;
                goto LABEL_680;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v375 = 0;
        }
LABEL_680:
        BOOL v387 = v375 != 0;
        uint64_t v388 = 609;
        goto LABEL_685;
      case 0x6Fu:
        char v380 = 0;
        unsigned int v381 = 0;
        uint64_t v382 = 0;
        *(void *)(a1 + 632) |= 0x4000000000000000uLL;
        while (2)
        {
          uint64_t v383 = *v3;
          uint64_t v384 = *(void *)(a2 + v383);
          unint64_t v385 = v384 + 1;
          if (v384 == -1 || v385 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v386 = *(unsigned char *)(*(void *)(a2 + *v7) + v384);
            *(void *)(a2 + v383) = v385;
            v382 |= (unint64_t)(v386 & 0x7F) << v380;
            if (v386 < 0)
            {
              v380 += 7;
              BOOL v15 = v381++ >= 9;
              if (v15)
              {
                uint64_t v382 = 0;
                goto LABEL_684;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v382 = 0;
        }
LABEL_684:
        BOOL v387 = v382 != 0;
        uint64_t v388 = 628;
LABEL_685:
        *(unsigned char *)(a1 + v388) = v387;
        goto LABEL_708;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_708;
    }
  }
}

uint64_t __MRMediaRemoteServiceGetExternalScreenType_block_invoke(uint64_t a1, xpc_object_t xdict)
{
  if (xdict == (xpc_object_t)MEMORY[0x1E4F14520] || xdict == (xpc_object_t)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  else {
    xpc_dictionary_get_uint64(xdict, "MRXPC_ROUTE_EXTERNAL_SCREEN_TYPE_KEY");
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

  return kdebug_trace();
}

uint64_t _MRDiscoverySessionConfigurationProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  __n128 v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_60;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_62;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_60:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_62:
          uint64_t v50 = 8;
          goto LABEL_80;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 24;
          goto LABEL_51;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 40) |= 8u;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v28 = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_66:
          BOOL v51 = v28 != 0;
          uint64_t v52 = 37;
          goto LABEL_75;
        case 4u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          *(unsigned char *)(a1 + 40) |= 4u;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v34 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v34 = 0;
          }
LABEL_70:
          BOOL v51 = v34 != 0;
          uint64_t v52 = 36;
          goto LABEL_75;
        case 5u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          *(unsigned char *)(a1 + 40) |= 0x10u;
          while (2)
          {
            uint64_t v41 = *v3;
            unint64_t v42 = *(void *)(a2 + v41);
            if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v42 + 1;
              v40 |= (unint64_t)(v43 & 0x7F) << v38;
              if (v43 < 0)
              {
                v38 += 7;
                BOOL v14 = v39++ >= 9;
                if (v14)
                {
                  uint64_t v40 = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v40 = 0;
          }
LABEL_74:
          BOOL v51 = v40 != 0;
          uint64_t v52 = 38;
LABEL_75:
          *(unsigned char *)(a1 + v52) = v51;
          continue;
        case 6u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 16;
LABEL_51:
          char v44 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        case 7u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v47 = *v3;
        unint64_t v48 = *(void *)(a2 + v47);
        if (v48 == -1 || v48 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
        *(void *)(a2 + v47) = v48 + 1;
        v19 |= (unint64_t)(v49 & 0x7F) << v45;
        if ((v49 & 0x80) == 0) {
          goto LABEL_77;
        }
        v45 += 7;
        BOOL v14 = v46++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_79;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_77:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_79:
      uint64_t v50 = 32;
LABEL_80:
      *(_DWORD *)(a1 + v50) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void MRMediaRemoteGetExternalScreenType(void *a1, void *a2)
{
  id v3 = a2;
  id v5 = a1;
  __n128 v4 = (void *)MRGetSharedService();
  MRMediaRemoteServiceGetExternalScreenType(v4, v5, v3);
}

void MRMediaRemoteServiceGetExternalScreenType(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  double v6 = a2;
  kdebug_trace();
  id v7 = a1;
  char v8 = MRCreateXPCMessage(0x300000000000006uLL);
  unsigned int v9 = [v7 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetExternalScreenType_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v12 = v5;
  id v10 = v5;
  xpc_connection_send_message_with_reply(v9, v8, v6, handler);
}

void sub_194FC46D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void MRMediaRemoteServiceGetAudioFormatContentInfoForOrigin(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  char v8 = a3;
  id v9 = a2;
  kdebug_trace();
  id v10 = a1;
  uint64_t v11 = MRCreateXPCMessage(0x20000000000003AuLL);
  MRAddOriginToXPCMessage(v11, v9);

  id v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetAudioFormatContentInfoForOrigin_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void MRAddOriginToXPCMessage(void *a1, void *a2)
{
  if (a1 && a2)
  {
    id v3 = a1;
    id v4 = [a2 data];
    xpc_dictionary_set_data(v3, "MRXPC_ORIGIN_DATA_KEY", (const void *)[v4 bytes], objc_msgSend(v4, "length"));
  }
}

void __MRMediaRemoteServiceCopyPickableRoutes_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    double v6 = 0;
  }
  else
  {
    size_t length = 0;
    data = xpc_dictionary_get_data(v3, "MRXPC_ROUTES_DATA_KEY", &length);
    if (data)
    {
      char v8 = [MEMORY[0x1E4F1C9B8] dataWithBytesNoCopy:data length:length freeWhenDone:0];
      double v6 = [MEMORY[0x1E4F28F98] propertyListWithData:v8 options:0 format:0 error:0];
    }
    else
    {
      char v8 = _MRLogForCategory(0);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v10 = 0;
        _os_log_impl(&dword_194F3C000, v8, OS_LOG_TYPE_DEFAULT, "Didn't receive any pickable routes from the reply.", v10, 2u);
      }
      double v6 = 0;
    }
  }
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v6);
  }
  kdebug_trace();
}

void sub_194FC4CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t __MRMediaRemoteCopyPickableRoutesForCategory_block_invoke(uint64_t a1, const __CFArray *a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = CFArrayCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a2);
  id v3 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v3);
}

void MRAVEndpointRemoveOutputDevicesWithInitiator(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = (void *)MEMORY[0x199718E70]();
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = __MRAVEndpointRemoveOutputDevicesWithInitiator_block_invoke;
  v13[3] = &unk_1E57D0FE8;
  id v12 = v10;
  id v14 = v12;
  [a1 removeOutputDevices:a2 initiator:a3 withReplyQueue:v9 completion:v13];
}

uint64_t MRPairedDeviceCopyAirPlayReceivers(void *a1)
{
  char v1 = [a1 airPlayReceivers];
  uint64_t v2 = [v1 copy];

  return v2;
}

void MRAVEndpointSetOutputDeviceVolume(void *a1, void *a2, void *a3, void *a4, float a5)
{
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = (void *)MEMORY[0x199718E70]();
  id v12 = (void *)MRAVOutputDeviceCopyUniqueIdentifier(a2);
  v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __MRAVEndpointSetOutputDeviceVolume_block_invoke;
  v15[3] = &unk_1E57D0FE8;
  id v13 = v10;
  id v16 = v13;
  *(float *)&double v14 = a5;
  [a1 setOutputDeviceVolume:v12 outputDevice:v9 queue:v15 completion:v14];
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_92(uint64_t a1, void *a2, void *a3)
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id v7 = [MEMORY[0x1E4F1C9C8] now];
  char v8 = (void *)[[NSString alloc] initWithFormat:@"%@.%@", *(void *)(a1 + 32), @"fetchGroupLeader"];
  id v9 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", v8, *(void *)(a1 + 40)];
  id v10 = v9;
  if (v5) {
    [v9 appendFormat:@" for %@", v5];
  }
  uint64_t v11 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    unint64_t v57 = v10;
    _os_log_impl(&dword_194F3C000, v11, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v47[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v47[1] = 3221225472;
  v47[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_99;
  v47[3] = &unk_1E57D6070;
  id v48 = *(id *)(a1 + 48);
  char v49 = @"fetchGroupLeader";
  id v40 = v7;
  id v50 = v40;
  id v12 = v5;
  id v51 = v12;
  id v39 = v8;
  id v52 = v39;
  id v53 = *(id *)(a1 + 40);
  id v13 = v6;
  id v54 = v13;
  double v14 = (void (**)(void, void, void))MEMORY[0x1997190F0](v47);
  id v15 = +[MRDeviceInfoRequest localDeviceInfo];
  char v16 = [v15 isGroupLeader];
  int v17 = [v15 isAirPlayActive];
  unsigned int v18 = +[MRAVClusterController sharedController];
  uint64_t v19 = [v18 clusterStatus];

  uint64_t v20 = [v15 deviceUID];
  unint64_t v21 = [v15 groupUID];
  int v22 = [v20 isEqual:v12];
  if (*(void *)(a1 + 56) && (((v22 ^ 1 | v17) & 1) != 0 || v19))
  {
    char v29 = v22 ^ 1 | v16;
    unint64_t v30 = _MRLogForCategory(0xAuLL);
    BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);
    if (v29)
    {
      if (v31)
      {
        char v32 = *(void **)(a1 + 32);
        uint64_t v33 = *(void *)(a1 + 40);
        *(_DWORD *)long long buf = 138543874;
        unint64_t v57 = v32;
        __int16 v58 = 2114;
        uint64_t v59 = v33;
        __int16 v60 = 2112;
        char v61 = @"Processing modification by searching network for pilot device and it's group leader.";
        _os_log_impl(&dword_194F3C000, v30, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
      }

      [*(id *)(a1 + 48) setObject:@"pilot" forKeyedSubscript:@"groupLeaderSelection"];
      uint64_t v34 = [MRAVReconnaissanceSession alloc];
      id v55 = v12;
      uint64_t v35 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v55 count:1];
      unint64_t v36 = [(MRAVReconnaissanceSession *)v34 initWithOutputDeviceUIDs:v35 outputDeviceGroupID:0 features:8];
    }
    else
    {
      if (v31)
      {
        char v37 = *(void **)(a1 + 32);
        uint64_t v38 = *(void *)(a1 + 40);
        *(_DWORD *)long long buf = 138543874;
        unint64_t v57 = v37;
        __int16 v58 = 2114;
        uint64_t v59 = v38;
        __int16 v60 = 2112;
        char v61 = @"Processing modification by searching network for group leader.";
        _os_log_impl(&dword_194F3C000, v30, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
      }

      [*(id *)(a1 + 48) setObject:@"remote" forKeyedSubscript:@"groupLeaderSelection"];
      unint64_t v36 = [[MRAVReconnaissanceSession alloc] initWithOutputDeviceUIDs:0 outputDeviceGroupID:v21 features:8];
    }
    uint64_t v28 = v39;
    unsigned int v27 = v40;
    v41[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v41[1] = 3221225472;
    v41[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_129;
    v41[3] = &unk_1E57D6098;
    unint64_t v42 = v36;
    id v43 = v20;
    id v44 = v15;
    id v45 = *(id *)(a1 + 48);
    unsigned int v46 = v14;
    char v26 = v36;
    [(MRAVReconnaissanceSession *)v26 beginSearchWithTimeout:v41 completion:2.0];
  }
  else
  {
    uint64_t v23 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v24 = *(void **)(a1 + 32);
      uint64_t v25 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138543874;
      unint64_t v57 = v24;
      __int16 v58 = 2114;
      uint64_t v59 = v25;
      __int16 v60 = 2112;
      char v61 = @"Processing modification as a local modification.";
      _os_log_impl(&dword_194F3C000, v23, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
    }

    [*(id *)(a1 + 48) setObject:@"local" forKeyedSubscript:@"groupLeaderSelection"];
    [*(id *)(a1 + 48) setObject:@"local" forKeyedSubscript:@"groupLeaderType"];
    char v26 = +[MRAVLocalEndpoint sharedLocalEndpoint];
    ((void (**)(void, MRAVReconnaissanceSession *, void))v14)[2](v14, v26, 0);
    uint64_t v28 = v39;
    unsigned int v27 = v40;
  }
}

void MRMediaRemoteSetCommandHandlerCallback(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v4 originClientForOrigin:a1];

  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteSetCommandHandlerCallback_block_invoke;
  v7[3] = &unk_1E57D5F20;
  id v8 = v3;
  id v6 = v3;
  [v5 setCommandCallback:v7];
}

void MRMediaRemoteServiceCopyPickableRoutes(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x300000000000002uLL);
  if (a2)
  {
    UTF8String = (const char *)_MRServiceGetUTF8String(a2);
    xpc_dictionary_set_string(v10, "MRXPC_ROUTE_CATEGORY_KEY", UTF8String);
  }
  id v12 = [v9 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceCopyPickableRoutes_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v10, v8, handler);
}

void MRMediaRemoteServiceSetWakingPlayerPaths(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  id v10 = a1;
  uint64_t v11 = MRCreateXPCMessage(0x200000000000039uLL);
  MRAddArrayToXPCMessage(v11, "MRXPC_NOWPLAYING_PLAYER_PATH_ARRAY_DATA_KEY", v9, &__block_literal_global_197);

  id v12 = [v10 mrXPCConnection];

  v14[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __MRMediaRemoteServiceSetWakingPlayerPaths_block_invoke_2;
  v14[3] = &unk_1E57D1490;
  id v15 = v7;
  id v13 = v7;
  [v12 sendMessage:v11 queue:v8 reply:v14];
}

uint64_t _MRVolumeControlAvailabilityProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        *(unsigned char *)(a1 + 16) |= 1u;
        while (1)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0) {
            goto LABEL_41;
          }
          v23 += 7;
          BOOL v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v25) = 0;
        }
LABEL_43:
        *(_DWORD *)(a1 + 8) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 16) |= 2u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_39:
        *(unsigned char *)(a1 + 12) = v19 != 0;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRPlaybackQueueRequestProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 108) |= 0x10u;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_135;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_137;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_135:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_137:
        uint64_t v117 = 60;
        goto LABEL_170;
      case 2u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 108) |= 8u;
        while (2)
        {
          uint64_t v28 = *v3;
          uint64_t v29 = *(void *)(a2 + v28);
          unint64_t v30 = v29 + 1;
          if (v29 == -1 || v30 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v30;
            v20 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_141:
        uint64_t v117 = 56;
        goto LABEL_170;
      case 3u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        *(_WORD *)(a1 + 108) |= 0x400u;
        while (2)
        {
          uint64_t v35 = *v3;
          uint64_t v36 = *(void *)(a2 + v35);
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v37;
            v34 |= (unint64_t)(v38 & 0x7F) << v32;
            if (v38 < 0)
            {
              v32 += 7;
              BOOL v15 = v33++ >= 9;
              if (v15)
              {
                uint64_t v34 = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_145:
        BOOL v118 = v34 != 0;
        uint64_t v119 = 101;
        goto LABEL_187;
      case 4u:
        *(_WORD *)(a1 + 108) |= 2u;
        uint64_t v39 = *v3;
        unint64_t v40 = *(void *)(a2 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v41 = *(void *)(*(void *)(a2 + *v7) + v40);
          *(void *)(a2 + v39) = v40 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v41 = 0;
        }
        uint64_t v120 = 16;
        goto LABEL_194;
      case 5u:
        *(_WORD *)(a1 + 108) |= 1u;
        uint64_t v42 = *v3;
        unint64_t v43 = *(void *)(a2 + v42);
        if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v41 = *(void *)(*(void *)(a2 + *v7) + v43);
          *(void *)(a2 + v42) = v43 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v41 = 0;
        }
        uint64_t v120 = 8;
LABEL_194:
        *(void *)(a1 + v120) = v41;
        goto LABEL_188;
      case 6u:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 108) |= 0x200u;
        while (2)
        {
          uint64_t v47 = *v3;
          uint64_t v48 = *(void *)(a2 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
            *(void *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v15 = v45++ >= 9;
              if (v15)
              {
                uint64_t v46 = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
LABEL_149:
        BOOL v118 = v46 != 0;
        uint64_t v119 = 100;
        goto LABEL_187;
      case 7u:
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(_WORD *)(a1 + 108) |= 0x1000u;
        while (2)
        {
          uint64_t v54 = *v3;
          uint64_t v55 = *(void *)(a2 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
            *(void *)(a2 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v15 = v52++ >= 9;
              if (v15)
              {
                uint64_t v53 = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v53 = 0;
        }
LABEL_153:
        BOOL v118 = v53 != 0;
        uint64_t v119 = 103;
        goto LABEL_187;
      case 8u:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0;
        *(_WORD *)(a1 + 108) |= 0x80u;
        while (2)
        {
          uint64_t v61 = *v3;
          uint64_t v62 = *(void *)(a2 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
            *(void *)(a2 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              BOOL v15 = v59++ >= 9;
              if (v15)
              {
                uint64_t v60 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v60 = 0;
        }
LABEL_157:
        BOOL v118 = v60 != 0;
        uint64_t v119 = 98;
        goto LABEL_187;
      case 9u:
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0;
        *(_WORD *)(a1 + 108) |= 0x100u;
        while (2)
        {
          uint64_t v68 = *v3;
          uint64_t v69 = *(void *)(a2 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v69);
            *(void *)(a2 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              BOOL v15 = v66++ >= 9;
              if (v15)
              {
                uint64_t v67 = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v67 = 0;
        }
LABEL_161:
        BOOL v118 = v67 != 0;
        uint64_t v119 = 99;
        goto LABEL_187;
      case 0xAu:
        unint64_t v72 = objc_alloc_init(_MRPlaybackQueueContextProtobuf);
        objc_storeStrong((id *)(a1 + 40), v72);
        if (!PBReaderPlaceMark() || (_MRPlaybackQueueContextProtobufReadFrom((uint64_t)v72, a2) & 1) == 0) {
          goto LABEL_196;
        }
        goto LABEL_91;
      case 0xBu:
        uint64_t v73 = PBReaderReadString();
        uint64_t v74 = 72;
        goto LABEL_100;
      case 0xCu:
        PBReaderReadString();
        unint64_t v72 = (_MRPlaybackQueueContextProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v72) {
          [(id)a1 addContentItemIdentifiers:v72];
        }
        goto LABEL_126;
      case 0xDu:
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v77 = 0;
        *(_WORD *)(a1 + 108) |= 0x4000u;
        while (2)
        {
          uint64_t v78 = *v3;
          uint64_t v79 = *(void *)(a2 + v78);
          unint64_t v80 = v79 + 1;
          if (v79 == -1 || v80 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v81 = *(unsigned char *)(*(void *)(a2 + *v7) + v79);
            *(void *)(a2 + v78) = v80;
            v77 |= (unint64_t)(v81 & 0x7F) << v75;
            if (v81 < 0)
            {
              v75 += 7;
              BOOL v15 = v76++ >= 9;
              if (v15)
              {
                uint64_t v77 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v77 = 0;
        }
LABEL_165:
        BOOL v118 = v77 != 0;
        uint64_t v119 = 105;
        goto LABEL_187;
      case 0xEu:
        unint64_t v72 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        objc_storeStrong((id *)(a1 + 64), v72);
        if (PBReaderPlaceMark()
          && _MRNowPlayingPlayerPathProtobufReadFrom((id *)&v72->super.super.isa, a2))
        {
LABEL_91:
          PBReaderRecallMark();
LABEL_126:

LABEL_188:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_196:

        return 0;
      case 0xFu:
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 108) |= 4u;
        while (2)
        {
          uint64_t v84 = *v3;
          uint64_t v85 = *(void *)(a2 + v84);
          unint64_t v86 = v85 + 1;
          if (v85 == -1 || v86 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v87 = *(unsigned char *)(*(void *)(a2 + *v7) + v85);
            *(void *)(a2 + v84) = v86;
            v20 |= (unint64_t)(v87 & 0x7F) << v82;
            if (v87 < 0)
            {
              v82 += 7;
              BOOL v15 = v83++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_169:
        uint64_t v117 = 24;
LABEL_170:
        *(_DWORD *)(a1 + v117) = v20;
        goto LABEL_188;
      case 0x10u:
        uint64_t v73 = PBReaderReadString();
        uint64_t v74 = 48;
LABEL_100:
        char v88 = *(void **)(a1 + v74);
        *(void *)(a1 + v74) = v73;

        goto LABEL_188;
      case 0x11u:
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v91 = 0;
        *(_WORD *)(a1 + 108) |= 0x2000u;
        while (2)
        {
          uint64_t v92 = *v3;
          uint64_t v93 = *(void *)(a2 + v92);
          unint64_t v94 = v93 + 1;
          if (v93 == -1 || v94 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v95 = *(unsigned char *)(*(void *)(a2 + *v7) + v93);
            *(void *)(a2 + v92) = v94;
            v91 |= (unint64_t)(v95 & 0x7F) << v89;
            if (v95 < 0)
            {
              v89 += 7;
              BOOL v15 = v90++ >= 9;
              if (v15)
              {
                uint64_t v91 = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v91 = 0;
        }
LABEL_174:
        BOOL v118 = v91 != 0;
        uint64_t v119 = 104;
        goto LABEL_187;
      case 0x12u:
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        *(_WORD *)(a1 + 108) |= 0x800u;
        while (2)
        {
          uint64_t v99 = *v3;
          uint64_t v100 = *(void *)(a2 + v99);
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(a2 + *v7) + v100);
            *(void *)(a2 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              BOOL v15 = v97++ >= 9;
              if (v15)
              {
                uint64_t v98 = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v98 = 0;
        }
LABEL_178:
        BOOL v118 = v98 != 0;
        uint64_t v119 = 102;
        goto LABEL_187;
      case 0x13u:
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v105 = 0;
        *(_WORD *)(a1 + 108) |= 0x40u;
        while (2)
        {
          uint64_t v106 = *v3;
          uint64_t v107 = *(void *)(a2 + v106);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(a2 + *v7) + v107);
            *(void *)(a2 + v106) = v108;
            v105 |= (unint64_t)(v109 & 0x7F) << v103;
            if (v109 < 0)
            {
              v103 += 7;
              BOOL v15 = v104++ >= 9;
              if (v15)
              {
                uint64_t v105 = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v105 = 0;
        }
LABEL_182:
        BOOL v118 = v105 != 0;
        uint64_t v119 = 97;
        goto LABEL_187;
      case 0x14u:
        PBReaderReadString();
        unint64_t v72 = (_MRPlaybackQueueContextProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v72) {
          [(id)a1 addRequestedArtworkFormats:v72];
        }
        goto LABEL_126;
      case 0x15u:
        PBReaderReadString();
        unint64_t v72 = (_MRPlaybackQueueContextProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v72) {
          [(id)a1 addRequestedRemoteArtworkFormats:v72];
        }
        goto LABEL_126;
      case 0x16u:
        char v110 = 0;
        unsigned int v111 = 0;
        uint64_t v112 = 0;
        *(_WORD *)(a1 + 108) |= 0x20u;
        while (2)
        {
          uint64_t v113 = *v3;
          uint64_t v114 = *(void *)(a2 + v113);
          unint64_t v115 = v114 + 1;
          if (v114 == -1 || v115 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v116 = *(unsigned char *)(*(void *)(a2 + *v7) + v114);
            *(void *)(a2 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              BOOL v15 = v111++ >= 9;
              if (v15)
              {
                uint64_t v112 = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v112 = 0;
        }
LABEL_186:
        BOOL v118 = v112 != 0;
        uint64_t v119 = 96;
LABEL_187:
        *(unsigned char *)(a1 + v119) = v118;
        goto LABEL_188;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_188;
    }
  }
}

uint64_t _MRMediaRemoteMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 840) |= 4u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_340;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_342;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_340:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_342:
        uint64_t v40 = 728;
        goto LABEL_347;
      case 2u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 536;
        goto LABEL_270;
      case 3u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 48;
        goto LABEL_270;
      case 4u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 840) |= 2u;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_346;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_346:
        uint64_t v40 = 160;
LABEL_347:
        *(_DWORD *)(a1 + v40) = v19;
        goto LABEL_337;
      case 5u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        *(unsigned char *)(a1 + 840) |= 1u;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_351;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
LABEL_351:
        *(void *)(a1 + 8) = v32;
        goto LABEL_337;
      case 6u:
        uint64_t v36 = objc_alloc_init(_MRSendCommandMessageProtobuf);
        objc_storeStrong((id *)(a1 + 560), v36);
        if (!PBReaderPlaceMark() || (_MRSendCommandMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 7u:
        uint64_t v36 = objc_alloc_init(_MRSendCommandResultMessageProtobuf);
        objc_storeStrong((id *)(a1 + 568), v36);
        if (!PBReaderPlaceMark()
          || (_MRSendCommandResultMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 8u:
        uint64_t v36 = objc_alloc_init(_MRGetStateMessageProtobuf);
        objc_storeStrong((id *)(a1 + 216), v36);
        if (!PBReaderPlaceMark() || !_MRGetStateMessageProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 9u:
        uint64_t v36 = objc_alloc_init(_MRSetStateMessageProtobuf);
        uint64_t v37 = 688;
        goto LABEL_241;
      case 0xAu:
        uint64_t v36 = objc_alloc_init(_MRSetArtworkMessageProtobuf);
        objc_storeStrong((id *)(a1 + 624), v36);
        if (!PBReaderPlaceMark() || (_MRSetArtworkMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0xBu:
        uint64_t v36 = objc_alloc_init(_MRRegisterHIDDeviceMessageProtobuf);
        objc_storeStrong((id *)(a1 + 464), v36);
        if (!PBReaderPlaceMark()
          || (_MRRegisterHIDDeviceMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0xCu:
        uint64_t v36 = objc_alloc_init(_MRRegisterHIDDeviceResultMessageProtobuf);
        objc_storeStrong((id *)(a1 + 472), v36);
        if (!PBReaderPlaceMark() || !_MRRegisterHIDDeviceResultMessageProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0xDu:
        uint64_t v36 = objc_alloc_init(_MRSendHIDEventMessageProtobuf);
        objc_storeStrong((id *)(a1 + 576), v36);
        if (!PBReaderPlaceMark() || (_MRSendHIDEventMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0xEu:
        uint64_t v36 = objc_alloc_init(_MRSendHIDReportMessageProtobuf);
        objc_storeStrong((id *)(a1 + 584), v36);
        if (!PBReaderPlaceMark() || !_MRSendHIDReportMessageProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0xFu:
        uint64_t v36 = objc_alloc_init(_MRSendVirtualTouchEventMessageProtobuf);
        objc_storeStrong((id *)(a1 + 608), v36);
        if (!PBReaderPlaceMark()
          || (_MRSendVirtualTouchEventMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x10u:
        uint64_t v36 = objc_alloc_init(_MRNotificationMessageProtobuf);
        objc_storeStrong((id *)(a1 + 320), v36);
        if (!PBReaderPlaceMark() || !_MRNotificationMessageProtobufReadFrom(v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x11u:
        uint64_t v36 = objc_alloc_init(_MRPlaybackQueueProtobuf);
        objc_storeStrong((id *)(a1 + 80), v36);
        if (!PBReaderPlaceMark() || (_MRPlaybackQueueProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x14u:
        uint64_t v36 = objc_alloc_init(_MRDeviceInfoMessageProtobuf);
        objc_storeStrong((id *)(a1 + 120), v36);
        if (!PBReaderPlaceMark() || (_MRDeviceInfoMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x15u:
        uint64_t v36 = objc_alloc_init(_MRClientUpdatesConfigurationProtobuf);
        objc_storeStrong((id *)(a1 + 56), v36);
        if (!PBReaderPlaceMark() || (_MRClientUpdatesConfigurationProtobufReadFrom(v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x16u:
        uint64_t v36 = objc_alloc_init(_MRVolumeControlAvailabilityProtobuf);
        objc_storeStrong((id *)(a1 + 304), v36);
        if (!PBReaderPlaceMark()
          || (_MRVolumeControlAvailabilityProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x17u:
        uint64_t v36 = objc_alloc_init(_MRGameControllerMessageProtobuf);
        objc_storeStrong((id *)(a1 + 176), v36);
        if (!PBReaderPlaceMark() || (_MRGameControllerMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x18u:
        uint64_t v36 = objc_alloc_init(_MRRegisterGameControllerMessageProtobuf);
        objc_storeStrong((id *)(a1 + 448), v36);
        if (!PBReaderPlaceMark()
          || (_MRRegisterGameControllerMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x19u:
        uint64_t v36 = objc_alloc_init(_MRRegisterGameControllerResponseMessageProtobuf);
        objc_storeStrong((id *)(a1 + 456), v36);
        if (!PBReaderPlaceMark()
          || (_MRRegisterGameControllerResponseMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x1Au:
        uint64_t v36 = objc_alloc_init(_MRUnregisterGameControllerMessageProtobuf);
        objc_storeStrong((id *)(a1 + 744), v36);
        if (!PBReaderPlaceMark()
          || (_MRUnregisterGameControllerMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x1Bu:
        uint64_t v36 = objc_alloc_init(_MRRegisterForGameControllerEventsMessageProtobuf);
        objc_storeStrong((id *)(a1 + 440), v36);
        if (!PBReaderPlaceMark()
          || (_MRRegisterForGameControllerEventsMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x1Cu:
        uint64_t v36 = objc_alloc_init(_MRKeyboardMessageProtobuf);
        objc_storeStrong((id *)(a1 + 296), v36);
        if (!PBReaderPlaceMark() || (_MRKeyboardMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x1Du:
        uint64_t v36 = objc_alloc_init(_MRGetKeyboardSessionProtobuf);
        objc_storeStrong((id *)(a1 + 200), v36);
        if (!PBReaderPlaceMark() || !_MRGetKeyboardSessionProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x1Eu:
        uint64_t v36 = objc_alloc_init(_MRTextInputMessageProtobuf);
        objc_storeStrong((id *)(a1 + 712), v36);
        if (!PBReaderPlaceMark() || (_MRTextInputMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x1Fu:
        uint64_t v36 = objc_alloc_init(_MRGetVoiceInputDevicesMessageProtobuf);
        objc_storeStrong((id *)(a1 + 224), v36);
        if (!PBReaderPlaceMark() || !_MRGetVoiceInputDevicesMessageProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x20u:
        uint64_t v36 = objc_alloc_init(_MRGetVoiceInputDevicesResponseMessageProtobuf);
        objc_storeStrong((id *)(a1 + 232), v36);
        if (!PBReaderPlaceMark()
          || (_MRGetVoiceInputDevicesResponseMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x21u:
        uint64_t v36 = objc_alloc_init(_MRRegisterVoiceInputDeviceMessageProtobuf);
        objc_storeStrong((id *)(a1 + 480), v36);
        if (!PBReaderPlaceMark()
          || (_MRRegisterVoiceInputDeviceMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x22u:
        uint64_t v36 = objc_alloc_init(_MRRegisterVoiceInputDeviceResponseMessageProtobuf);
        objc_storeStrong((id *)(a1 + 488), v36);
        if (!PBReaderPlaceMark()
          || !_MRRegisterVoiceInputDeviceResponseMessageProtobufReadFrom((uint64_t)v36, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x23u:
        uint64_t v36 = objc_alloc_init(_MRSetRecordingStateMessageProtobuf);
        objc_storeStrong((id *)(a1 + 680), v36);
        if (!PBReaderPlaceMark()
          || (_MRSetRecordingStateMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x24u:
        uint64_t v36 = objc_alloc_init(_MRSendVoiceInputMessageProtobuf);
        objc_storeStrong((id *)(a1 + 616), v36);
        if (!PBReaderPlaceMark() || (_MRSendVoiceInputMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x25u:
        uint64_t v36 = objc_alloc_init(_MRPlaybackQueueRequestProtobuf);
        objc_storeStrong((id *)(a1 + 336), v36);
        if (!PBReaderPlaceMark() || (_MRPlaybackQueueRequestProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x26u:
        uint64_t v36 = objc_alloc_init(_MRTransactionMessageProtobuf);
        objc_storeStrong((id *)(a1 + 720), v36);
        if (!PBReaderPlaceMark() || (_MRTransactionMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x27u:
        uint64_t v36 = objc_alloc_init(_MRCryptoPairingMessageProtobuf);
        objc_storeStrong((id *)(a1 + 112), v36);
        if (!PBReaderPlaceMark() || (_MRCryptoPairingMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x28u:
        uint64_t v36 = objc_alloc_init(_MRGameControllerPropertiesMessageProtobuf);
        objc_storeStrong((id *)(a1 + 184), v36);
        if (!PBReaderPlaceMark()
          || (_MRGameControllerPropertiesMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x29u:
        uint64_t v36 = objc_alloc_init(_MRSetReadyStateMessageProtobuf);
        objc_storeStrong((id *)(a1 + 432), v36);
        if (!PBReaderPlaceMark() || !_MRSetReadyStateMessageProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x2Au:
        uint64_t v36 = objc_alloc_init(_MRSetConnectionStateMessageProtobuf);
        objc_storeStrong((id *)(a1 + 72), v36);
        if (!PBReaderPlaceMark()
          || (_MRSetConnectionStateMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x2Bu:
        uint64_t v36 = objc_alloc_init(_MRSendButtonEventMessageProtobuf);
        objc_storeStrong((id *)(a1 + 552), v36);
        if (!PBReaderPlaceMark()
          || (_MRSendButtonEventMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x2Cu:
        uint64_t v36 = objc_alloc_init(_MRSetHiliteModeMessageProtobuf);
        objc_storeStrong((id *)(a1 + 648), v36);
        if (!PBReaderPlaceMark() || (_MRSetHiliteModeMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x2Du:
        uint64_t v36 = objc_alloc_init(_MRWakeDeviceMessageProtobuf);
        objc_storeStrong((id *)(a1 + 832), v36);
        if (!PBReaderPlaceMark() || !_MRWakeDeviceMessageProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x2Eu:
        uint64_t v36 = objc_alloc_init(_MRGenericMessageProtobuf);
        objc_storeStrong((id *)(a1 + 192), v36);
        if (!PBReaderPlaceMark() || !_MRGenericMessageProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x2Fu:
        uint64_t v36 = objc_alloc_init(_MRSendPackedVirtualTouchEventMessageProtobuf);
        objc_storeStrong((id *)(a1 + 600), v36);
        if (!PBReaderPlaceMark()
          || (_MRSendPackedVirtualTouchEventMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x30u:
        uint64_t v36 = objc_alloc_init(_MRSendLyricsEventMessageProtobuf);
        objc_storeStrong((id *)(a1 + 592), v36);
        if (!PBReaderPlaceMark()
          || (_MRSendLyricsEventMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x32u:
        uint64_t v36 = objc_alloc_init(_MRSetNowPlayingClientMessageProtobuf);
        objc_storeStrong((id *)(a1 + 664), v36);
        if (!PBReaderPlaceMark()
          || (_MRSetNowPlayingClientMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x33u:
        uint64_t v36 = objc_alloc_init(_MRSetNowPlayingPlayerMessageProtobuf);
        objc_storeStrong((id *)(a1 + 672), v36);
        if (!PBReaderPlaceMark()
          || (_MRSetNowPlayingPlayerMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x34u:
        uint64_t v36 = objc_alloc_init(_MRAVModifyOutputContextRequestProtobuf);
        objc_storeStrong((id *)(a1 + 312), v36);
        if (!PBReaderPlaceMark()
          || (_MRAVModifyOutputContextRequestProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x35u:
        uint64_t v36 = objc_alloc_init(_MRGetVolumeMessageProtobuf);
        objc_storeStrong((id *)(a1 + 256), v36);
        if (!PBReaderPlaceMark() || (_MRGetVolumeMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x36u:
        uint64_t v36 = objc_alloc_init(_MRGetVolumeResultMessageProtobuf);
        objc_storeStrong((id *)(a1 + 280), v36);
        if (!PBReaderPlaceMark()
          || (_MRGetVolumeResultMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x37u:
        uint64_t v36 = objc_alloc_init(_MRSetVolumeMessageProtobuf);
        objc_storeStrong((id *)(a1 + 696), v36);
        if (!PBReaderPlaceMark() || (_MRSetVolumeMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x38u:
        uint64_t v36 = objc_alloc_init(_MRVolumeDidChangeMessageProtobuf);
        objc_storeStrong((id *)(a1 + 816), v36);
        if (!PBReaderPlaceMark()
          || (_MRVolumeDidChangeMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x39u:
        uint64_t v36 = objc_alloc_init(_MRRemoveClientMessageProtobuf);
        objc_storeStrong((id *)(a1 + 504), v36);
        if (!PBReaderPlaceMark() || (_MRRemoveClientMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x3Au:
        uint64_t v36 = objc_alloc_init(_MRRemovePlayerMessageProtobuf);
        objc_storeStrong((id *)(a1 + 528), v36);
        if (!PBReaderPlaceMark() || (_MRRemovePlayerMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x3Bu:
        uint64_t v36 = objc_alloc_init(_MRUpdateClientMessageProtobuf);
        objc_storeStrong((id *)(a1 + 760), v36);
        if (!PBReaderPlaceMark() || (_MRUpdateClientMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x3Cu:
        uint64_t v36 = objc_alloc_init(_MRUpdateContentItemMessageProtobuf);
        objc_storeStrong((id *)(a1 + 776), v36);
        if (!PBReaderPlaceMark()
          || !_MRUpdateContentItemMessageProtobufReadFrom((id *)&v36->super.super.isa, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x3Du:
        uint64_t v36 = objc_alloc_init(_MRUpdateContentItemArtworkMessageProtobuf);
        objc_storeStrong((id *)(a1 + 768), v36);
        if (!PBReaderPlaceMark()
          || !_MRUpdateContentItemArtworkMessageProtobufReadFrom((id *)&v36->super.super.isa, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x3Eu:
        uint64_t v36 = objc_alloc_init(_MRUpdatePlayerMessageProtobuf);
        objc_storeStrong((id *)(a1 + 800), v36);
        if (!PBReaderPlaceMark() || (_MRUpdatePlayerMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x3Fu:
        uint64_t v36 = objc_alloc_init(_MRPromptForRouteAuthorizationMessageProtobuf);
        objc_storeStrong((id *)(a1 + 416), v36);
        if (!PBReaderPlaceMark()
          || (_MRPromptForRouteAuthorizationMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x40u:
        uint64_t v36 = objc_alloc_init(_MRPromptForRouteAuthorizationResponseMessageProtobuf);
        objc_storeStrong((id *)(a1 + 424), v36);
        if (!PBReaderPlaceMark()
          || (_MRPromptForRouteAuthorizationResponseMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x41u:
        uint64_t v36 = objc_alloc_init(_MRPresentRouteAuthorizationStatusMessageProtobuf);
        objc_storeStrong((id *)(a1 + 408), v36);
        if (!PBReaderPlaceMark()
          || (_MRPresentRouteAuthorizationStatusMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x42u:
        uint64_t v36 = objc_alloc_init(_MRGetVolumeControlCapabilitiesMessageProtobuf);
        objc_storeStrong((id *)(a1 + 240), v36);
        if (!PBReaderPlaceMark()
          || (_MRGetVolumeControlCapabilitiesMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x43u:
        uint64_t v36 = objc_alloc_init(_MRGetVolumeControlCapabilitiesResultMessageProtobuf);
        objc_storeStrong((id *)(a1 + 248), v36);
        if (!PBReaderPlaceMark()
          || (_MRGetVolumeControlCapabilitiesResultMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x44u:
        uint64_t v36 = objc_alloc_init(_MRVolumeControlCapabilitiesDidChangeMessageProtobuf);
        objc_storeStrong((id *)(a1 + 808), v36);
        if (!PBReaderPlaceMark()
          || !_MRVolumeControlCapabilitiesDidChangeMessageProtobufReadFrom((uint64_t)v36, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x45u:
        uint64_t v36 = objc_alloc_init(_MRUpdateOutputDevicesMessageProtobuf);
        objc_storeStrong((id *)(a1 + 792), v36);
        if (!PBReaderPlaceMark() || !_MRUpdateOutputDevicesMessageProtobufReadFrom(v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x46u:
        uint64_t v36 = objc_alloc_init(_MRRemoveOutputDevicesMessageProtobuf);
        objc_storeStrong((id *)(a1 + 520), v36);
        if (!PBReaderPlaceMark() || !_MRRemoveOutputDevicesMessageProtobufReadFrom(v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x47u:
        uint64_t v36 = objc_alloc_init(_MRRemoteTextInputMessageProtobuf);
        objc_storeStrong((id *)(a1 + 496), v36);
        if (!PBReaderPlaceMark()
          || (_MRRemoteTextInputMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x48u:
        uint64_t v36 = objc_alloc_init(_MRGetRemoteTextInputSessionProtobuf);
        objc_storeStrong((id *)(a1 + 208), v36);
        if (!PBReaderPlaceMark() || !_MRGetRemoteTextInputSessionProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x49u:
        uint64_t v36 = objc_alloc_init(_MRPlaybackSessionRequestMessageProtobuf);
        objc_storeStrong((id *)(a1 + 376), v36);
        if (!PBReaderPlaceMark() || !_MRPlaybackSessionRequestMessageProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x4Au:
        uint64_t v36 = objc_alloc_init(_MRPlaybackSessionResponseMessageProtobuf);
        objc_storeStrong((id *)(a1 + 384), v36);
        if (!PBReaderPlaceMark()
          || (_MRPlaybackSessionResponseMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x4Bu:
        uint64_t v36 = objc_alloc_init(_MRSetStateMessageProtobuf);
        uint64_t v37 = 640;
LABEL_241:
        objc_storeStrong((id *)(a1 + v37), v36);
        if (!PBReaderPlaceMark() || (_MRSetStateMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x4Cu:
        uint64_t v36 = objc_alloc_init(_MRPlaybackSessionMigrateRequestMessageProtobuf);
        objc_storeStrong((id *)(a1 + 360), v36);
        if (!PBReaderPlaceMark()
          || !_MRPlaybackSessionMigrateRequestMessageProtobufReadFrom((id *)&v36->super.super.isa, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x4Du:
        uint64_t v36 = objc_alloc_init(_MRPlaybackSessionMigrateResponseMessageProtobuf);
        objc_storeStrong((id *)(a1 + 368), v36);
        if (!PBReaderPlaceMark()
          || (_MRPlaybackSessionMigrateResponseMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x4Eu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 168;
        goto LABEL_270;
      case 0x4Fu:
        uint64_t v36 = objc_alloc_init(_MRPlaybackSessionMigrateBeginMessageProtobuf);
        objc_storeStrong((id *)(a1 + 344), v36);
        if (!PBReaderPlaceMark()
          || !_MRPlaybackSessionMigrateBeginMessageProtobufReadFrom((uint64_t)v36, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x50u:
        uint64_t v36 = objc_alloc_init(_MRPlaybackSessionMigrateEndMessageProtobuf);
        objc_storeStrong((id *)(a1 + 352), v36);
        if (!PBReaderPlaceMark()
          || (_MRPlaybackSessionMigrateEndMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x51u:
        uint64_t v36 = objc_alloc_init(_MRUpdateActiveSystemEndpointMessageProtobuf);
        objc_storeStrong((id *)(a1 + 752), v36);
        if (!PBReaderPlaceMark()
          || (_MRUpdateActiveSystemEndpointMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x52u:
        uint64_t v36 = objc_alloc_init(_MRSetDiscoveryModeProtobufMessage);
        objc_storeStrong((id *)(a1 + 128), v36);
        if (!PBReaderPlaceMark()
          || (_MRSetDiscoveryModeProtobufMessageReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x53u:
        uint64_t v36 = objc_alloc_init(_MRUpdateEndpointsMessageProtobuf);
        objc_storeStrong((id *)(a1 + 784), v36);
        if (!PBReaderPlaceMark()
          || (_MRUpdateEndpointsMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x54u:
        uint64_t v36 = objc_alloc_init(_MRRemoveEndpointsMessageProtobuf);
        objc_storeStrong((id *)(a1 + 512), v36);
        if (!PBReaderPlaceMark() || (_MRRemoveEndpointsMessageProtobufReadFrom(v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x55u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 736;
LABEL_270:
        uint64_t v39 = *(void **)(a1 + v24);
        *(void *)(a1 + v24) = v23;

        goto LABEL_337;
      case 0x56u:
        uint64_t v36 = objc_alloc_init(_MRPlayerClientPropertiesMessageProtobuf);
        objc_storeStrong((id *)(a1 + 400), v36);
        if (!PBReaderPlaceMark()
          || (_MRPlayerClientPropertiesMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x57u:
        uint64_t v36 = objc_alloc_init(_MROriginClientPropertiesMessageProtobuf);
        objc_storeStrong((id *)(a1 + 328), v36);
        if (!PBReaderPlaceMark()
          || (_MROriginClientPropertiesMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x58u:
        uint64_t v36 = objc_alloc_init(_MRAudioFadeMessageProtobuf);
        objc_storeStrong((id *)(a1 + 32), v36);
        if (!PBReaderPlaceMark() || (_MRAudioFadeMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x59u:
        uint64_t v36 = objc_alloc_init(_MRAudioFadeResponseMessageProtobuf);
        objc_storeStrong((id *)(a1 + 40), v36);
        if (!PBReaderPlaceMark()
          || (_MRAudioFadeResponseMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x5Au:
        uint64_t v36 = objc_alloc_init(_MRDiscoveryUpdateEndpointsProtobufMessage);
        objc_storeStrong((id *)(a1 + 136), v36);
        if (!PBReaderPlaceMark()
          || !_MRDiscoveryUpdateEndpointsProtobufMessageReadFrom((id *)&v36->super.super.isa, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x5Bu:
        uint64_t v36 = objc_alloc_init(_MRDiscoveryUpdateOutputDevicesProtobufMessage);
        objc_storeStrong((id *)(a1 + 144), v36);
        if (!PBReaderPlaceMark()
          || !_MRDiscoveryUpdateOutputDevicesProtobufMessageReadFrom((id *)&v36->super.super.isa, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x5Cu:
        uint64_t v36 = objc_alloc_init(_MRSetListeningModeMessageProtobuf);
        objc_storeStrong((id *)(a1 + 656), v36);
        if (!PBReaderPlaceMark() || !_MRSetListeningModeMessageProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x5Du:
        uint64_t v36 = objc_alloc_init(_MRErrorProtobuf);
        objc_storeStrong((id *)(a1 + 152), v36);
        if (!PBReaderPlaceMark() || (_MRErrorProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x5Eu:
        uint64_t v36 = objc_alloc_init(_MRConfigureConnectionMessageProtobuf);
        objc_storeStrong((id *)(a1 + 64), v36);
        if (!PBReaderPlaceMark() || !_MRConfigureConnectionMessageProtobufReadFrom((uint64_t)v36, a2)) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x5Fu:
        uint64_t v36 = objc_alloc_init(_MRCreateHostedEndpointRequestProtobuf);
        objc_storeStrong((id *)(a1 + 96), v36);
        if (!PBReaderPlaceMark() || (_MRCreateHostedEndpointRequestProtobufReadFrom(v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x60u:
        uint64_t v36 = objc_alloc_init(_MRCreateHostedEndpointResponseProtobuf);
        objc_storeStrong((id *)(a1 + 104), v36);
        if (!PBReaderPlaceMark()
          || (_MRCreateHostedEndpointResponseProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x61u:
        uint64_t v36 = objc_alloc_init(_MRAdjustVolumeMessageProtobuf);
        objc_storeStrong((id *)(a1 + 16), v36);
        if (!PBReaderPlaceMark() || (_MRAdjustVolumeMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x62u:
        uint64_t v36 = objc_alloc_init(_MRGetVolumeMutedMessageProtobuf);
        objc_storeStrong((id *)(a1 + 264), v36);
        if (!PBReaderPlaceMark() || (_MRGetVolumeMutedMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x63u:
        uint64_t v36 = objc_alloc_init(_MRGetVolumeMutedResultMessageProtobuf);
        objc_storeStrong((id *)(a1 + 272), v36);
        if (!PBReaderPlaceMark()
          || (_MRGetVolumeMutedResultMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x64u:
        uint64_t v36 = objc_alloc_init(_MRSetVolumeMutedMessageProtobuf);
        objc_storeStrong((id *)(a1 + 704), v36);
        if (!PBReaderPlaceMark() || (_MRSetVolumeMutedMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0) {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x65u:
        uint64_t v36 = objc_alloc_init(_MRVolumeMutedDidChangeMessageProtobuf);
        objc_storeStrong((id *)(a1 + 824), v36);
        if (!PBReaderPlaceMark()
          || (_MRVolumeMutedDidChangeMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x66u:
        uint64_t v36 = objc_alloc_init(_MRSetConversationDetectionEnabledMessageProtobuf);
        objc_storeStrong((id *)(a1 + 632), v36);
        if (!PBReaderPlaceMark()
          || (_MRSetConversationDetectionEnabledMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x67u:
        uint64_t v36 = objc_alloc_init(_MRPlayerClientParticipantsUpdateMessageProtobuf);
        objc_storeStrong((id *)(a1 + 392), v36);
        if (!PBReaderPlaceMark()
          || !_MRPlayerClientParticipantsUpdateMessageProtobufReadFrom((id *)&v36->super.super.isa, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x68u:
        uint64_t v36 = objc_alloc_init(_MRRequestGroupSessionMessageProtobuf);
        objc_storeStrong((id *)(a1 + 544), v36);
        if (!PBReaderPlaceMark()
          || (_MRRequestGroupSessionMessageProtobufReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x69u:
        uint64_t v36 = objc_alloc_init(_MRCreateApplicationConnectionMessageProtobuf);
        objc_storeStrong((id *)(a1 + 88), v36);
        if (!PBReaderPlaceMark()
          || !_MRCreateApplicationConnectionMessageProtobufReadFrom((uint64_t)v36, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x6Au:
        uint64_t v36 = objc_alloc_init(_MRApplicationConnectionProtocolMessageProtobuf);
        objc_storeStrong((id *)(a1 + 24), v36);
        if (!PBReaderPlaceMark()
          || !_MRApplicationConnectionProtocolMessageProtobufReadFrom((uint64_t)v36, a2))
        {
          goto LABEL_353;
        }
        goto LABEL_336;
      case 0x6Bu:
        uint64_t v36 = objc_alloc_init(_MRApplicationConnectionContextProtobuf);
        objc_storeStrong((id *)(a1 + 288), v36);
        if (PBReaderPlaceMark() && _MRApplicationConnectionContextProtobufReadFrom((uint64_t)v36, a2))
        {
LABEL_336:
          PBReaderRecallMark();

LABEL_337:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_353:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_337;
    }
  }
}

uint64_t _MRGetVolumeMutedResultMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        *(unsigned char *)(a1 + 8) = v19 != 0;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRDeviceInfoMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 296;
        goto LABEL_233;
      case 2u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 216;
        goto LABEL_233;
      case 3u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 184;
        goto LABEL_233;
      case 4u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 264;
        goto LABEL_233;
      case 5u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 48;
        goto LABEL_233;
      case 6u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 56;
        goto LABEL_233;
      case 7u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(_DWORD *)(a1 + 324) |= 1u;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_244;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_244:
        *(void *)(a1 + 8) = v21;
        goto LABEL_347;
      case 8u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 324) |= 0x20u;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_248;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_248:
        uint64_t v171 = 164;
        goto LABEL_337;
      case 9u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        *(_DWORD *)(a1 + 324) |= 0x1000000u;
        while (2)
        {
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                uint64_t v33 = 0;
                goto LABEL_252;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v33 = 0;
        }
LABEL_252:
        BOOL v172 = v33 != 0;
        uint64_t v173 = 319;
        goto LABEL_346;
      case 0xAu:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(_DWORD *)(a1 + 324) |= 0x200u;
        while (2)
        {
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v14 = v38++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
LABEL_256:
        BOOL v172 = v39 != 0;
        uint64_t v173 = 304;
        goto LABEL_346;
      case 0xBu:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(_DWORD *)(a1 + 324) |= 0x400u;
        while (2)
        {
          uint64_t v46 = *v3;
          unint64_t v47 = *(void *)(a2 + v46);
          if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v47 + 1;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v14 = v44++ >= 9;
              if (v14)
              {
                uint64_t v45 = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v45 = 0;
        }
LABEL_260:
        BOOL v172 = v45 != 0;
        uint64_t v173 = 305;
        goto LABEL_346;
      case 0xCu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 272;
        goto LABEL_233;
      case 0xDu:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(_DWORD *)(a1 + 324) |= 0x80000u;
        while (2)
        {
          uint64_t v52 = *v3;
          unint64_t v53 = *(void *)(a2 + v52);
          if (v53 == -1 || v53 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v53 + 1;
            v51 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v14 = v50++ >= 9;
              if (v14)
              {
                uint64_t v51 = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
LABEL_264:
        BOOL v172 = v51 != 0;
        uint64_t v173 = 314;
        goto LABEL_346;
      case 0xEu:
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(_DWORD *)(a1 + 324) |= 0x800000u;
        while (2)
        {
          uint64_t v58 = *v3;
          unint64_t v59 = *(void *)(a2 + v58);
          if (v59 == -1 || v59 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
            *(void *)(a2 + v58) = v59 + 1;
            v57 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v14 = v56++ >= 9;
              if (v14)
              {
                uint64_t v57 = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v57 = 0;
        }
LABEL_268:
        BOOL v172 = v57 != 0;
        uint64_t v173 = 318;
        goto LABEL_346;
      case 0xFu:
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = 0;
        *(_DWORD *)(a1 + 324) |= 0x100000u;
        while (2)
        {
          uint64_t v64 = *v3;
          unint64_t v65 = *(void *)(a2 + v64);
          if (v65 == -1 || v65 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
            *(void *)(a2 + v64) = v65 + 1;
            v63 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v14 = v62++ >= 9;
              if (v14)
              {
                uint64_t v63 = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v63 = 0;
        }
LABEL_272:
        BOOL v172 = v63 != 0;
        uint64_t v173 = 315;
        goto LABEL_346;
      case 0x10u:
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 64;
        goto LABEL_233;
      case 0x11u:
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 324) |= 0x100u;
        while (2)
        {
          uint64_t v69 = *v3;
          unint64_t v70 = *(void *)(a2 + v69);
          if (v70 == -1 || v70 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
            *(void *)(a2 + v69) = v70 + 1;
            v27 |= (unint64_t)(v71 & 0x7F) << v67;
            if (v71 < 0)
            {
              v67 += 7;
              BOOL v14 = v68++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_276:
        uint64_t v171 = 248;
        goto LABEL_337;
      case 0x13u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 120;
        goto LABEL_233;
      case 0x14u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 200;
        goto LABEL_233;
      case 0x15u:
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 324) |= 8u;
        while (2)
        {
          uint64_t v75 = *v3;
          unint64_t v76 = *(void *)(a2 + v75);
          if (v76 == -1 || v76 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
            *(void *)(a2 + v75) = v76 + 1;
            v27 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v73 += 7;
              BOOL v14 = v74++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_280:
        uint64_t v171 = 116;
        goto LABEL_337;
      case 0x16u:
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 324) |= 0x40u;
        while (2)
        {
          uint64_t v80 = *v3;
          unint64_t v81 = *(void *)(a2 + v80);
          if (v81 == -1 || v81 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v82 = *(unsigned char *)(*(void *)(a2 + *v7) + v81);
            *(void *)(a2 + v80) = v81 + 1;
            v27 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v78 += 7;
              BOOL v14 = v79++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_284:
        uint64_t v171 = 192;
        goto LABEL_337;
      case 0x17u:
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v85 = 0;
        *(_DWORD *)(a1 + 324) |= 0x2000000u;
        while (2)
        {
          uint64_t v86 = *v3;
          unint64_t v87 = *(void *)(a2 + v86);
          if (v87 == -1 || v87 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(a2 + *v7) + v87);
            *(void *)(a2 + v86) = v87 + 1;
            v85 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              BOOL v14 = v84++ >= 9;
              if (v14)
              {
                uint64_t v85 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v85 = 0;
        }
LABEL_288:
        BOOL v172 = v85 != 0;
        uint64_t v173 = 320;
        goto LABEL_346;
      case 0x18u:
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v91 = 0;
        *(_DWORD *)(a1 + 324) |= 0x20000u;
        while (2)
        {
          uint64_t v92 = *v3;
          unint64_t v93 = *(void *)(a2 + v92);
          if (v93 == -1 || v93 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(a2 + *v7) + v93);
            *(void *)(a2 + v92) = v93 + 1;
            v91 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              BOOL v14 = v90++ >= 9;
              if (v14)
              {
                uint64_t v91 = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v91 = 0;
        }
LABEL_292:
        BOOL v172 = v91 != 0;
        uint64_t v173 = 312;
        goto LABEL_346;
      case 0x19u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 288;
        goto LABEL_233;
      case 0x1Au:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 144;
        goto LABEL_233;
      case 0x1Bu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 128;
        goto LABEL_233;
      case 0x1Cu:
        char v95 = objc_alloc_init(_MRDeviceInfoMessageProtobuf);
        [(id)a1 addGroupedDevices:v95];
        goto LABEL_221;
      case 0x1Du:
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        *(_DWORD *)(a1 + 324) |= 0x10000u;
        while (2)
        {
          uint64_t v99 = *v3;
          unint64_t v100 = *(void *)(a2 + v99);
          if (v100 == -1 || v100 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + *v7) + v100);
            *(void *)(a2 + v99) = v100 + 1;
            v98 |= (unint64_t)(v101 & 0x7F) << v96;
            if (v101 < 0)
            {
              v96 += 7;
              BOOL v14 = v97++ >= 9;
              if (v14)
              {
                uint64_t v98 = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v98 = 0;
        }
LABEL_296:
        BOOL v172 = v98 != 0;
        uint64_t v173 = 311;
        goto LABEL_346;
      case 0x1Eu:
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v104 = 0;
        *(_DWORD *)(a1 + 324) |= 0x1000u;
        while (2)
        {
          uint64_t v105 = *v3;
          unint64_t v106 = *(void *)(a2 + v105);
          if (v106 == -1 || v106 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
            *(void *)(a2 + v105) = v106 + 1;
            v104 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              BOOL v14 = v103++ >= 9;
              if (v14)
              {
                uint64_t v104 = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v104 = 0;
        }
LABEL_300:
        BOOL v172 = v104 != 0;
        uint64_t v173 = 307;
        goto LABEL_346;
      case 0x1Fu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 280;
        goto LABEL_233;
      case 0x20u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 240;
        goto LABEL_233;
      case 0x21u:
        PBReaderReadString();
        char v95 = (_MRDeviceInfoMessageProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v95) {
          [(id)a1 addAirplayReceivers:v95];
        }
        goto LABEL_224;
      case 0x22u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 176;
        goto LABEL_233;
      case 0x23u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 72;
        goto LABEL_233;
      case 0x24u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 80;
        goto LABEL_233;
      case 0x25u:
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 324) |= 2u;
        while (2)
        {
          uint64_t v110 = *v3;
          unint64_t v111 = *(void *)(a2 + v110);
          if (v111 == -1 || v111 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v112 = *(unsigned char *)(*(void *)(a2 + *v7) + v111);
            *(void *)(a2 + v110) = v111 + 1;
            v27 |= (unint64_t)(v112 & 0x7F) << v108;
            if (v112 < 0)
            {
              v108 += 7;
              BOOL v14 = v109++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_304;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_304:
        uint64_t v171 = 88;
        goto LABEL_337;
      case 0x26u:
        char v113 = 0;
        unsigned int v114 = 0;
        uint64_t v115 = 0;
        *(_DWORD *)(a1 + 324) |= 0x2000u;
        while (2)
        {
          uint64_t v116 = *v3;
          unint64_t v117 = *(void *)(a2 + v116);
          if (v117 == -1 || v117 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v118 = *(unsigned char *)(*(void *)(a2 + *v7) + v117);
            *(void *)(a2 + v116) = v117 + 1;
            v115 |= (unint64_t)(v118 & 0x7F) << v113;
            if (v118 < 0)
            {
              v113 += 7;
              BOOL v14 = v114++ >= 9;
              if (v14)
              {
                uint64_t v115 = 0;
                goto LABEL_308;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v115 = 0;
        }
LABEL_308:
        BOOL v172 = v115 != 0;
        uint64_t v173 = 308;
        goto LABEL_346;
      case 0x27u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 208;
        goto LABEL_233;
      case 0x28u:
        char v119 = 0;
        unsigned int v120 = 0;
        uint64_t v121 = 0;
        *(_DWORD *)(a1 + 324) |= 0x200000u;
        while (2)
        {
          uint64_t v122 = *v3;
          unint64_t v123 = *(void *)(a2 + v122);
          if (v123 == -1 || v123 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v124 = *(unsigned char *)(*(void *)(a2 + *v7) + v123);
            *(void *)(a2 + v122) = v123 + 1;
            v121 |= (unint64_t)(v124 & 0x7F) << v119;
            if (v124 < 0)
            {
              v119 += 7;
              BOOL v14 = v120++ >= 9;
              if (v14)
              {
                uint64_t v121 = 0;
                goto LABEL_312;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v121 = 0;
        }
LABEL_312:
        BOOL v172 = v121 != 0;
        uint64_t v173 = 316;
        goto LABEL_346;
      case 0x29u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 232;
        goto LABEL_233;
      case 0x2Au:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 24;
        goto LABEL_233;
      case 0x2Bu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 256;
        goto LABEL_233;
      case 0x2Cu:
        char v95 = objc_alloc_init(_MRDeviceInfoMessageProtobuf);
        [(id)a1 addClusteredDevices:v95];
        goto LABEL_221;
      case 0x2Du:
        char v125 = 0;
        unsigned int v126 = 0;
        uint64_t v127 = 0;
        *(_DWORD *)(a1 + 324) |= 0x40000u;
        while (2)
        {
          uint64_t v128 = *v3;
          unint64_t v129 = *(void *)(a2 + v128);
          if (v129 == -1 || v129 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v130 = *(unsigned char *)(*(void *)(a2 + *v7) + v129);
            *(void *)(a2 + v128) = v129 + 1;
            v127 |= (unint64_t)(v130 & 0x7F) << v125;
            if (v130 < 0)
            {
              v125 += 7;
              BOOL v14 = v126++ >= 9;
              if (v14)
              {
                uint64_t v127 = 0;
                goto LABEL_316;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v127 = 0;
        }
LABEL_316:
        BOOL v172 = v127 != 0;
        uint64_t v173 = 313;
        goto LABEL_346;
      case 0x2Eu:
        char v131 = 0;
        unsigned int v132 = 0;
        uint64_t v133 = 0;
        *(_DWORD *)(a1 + 324) |= 0x800u;
        while (2)
        {
          uint64_t v134 = *v3;
          unint64_t v135 = *(void *)(a2 + v134);
          if (v135 == -1 || v135 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v136 = *(unsigned char *)(*(void *)(a2 + *v7) + v135);
            *(void *)(a2 + v134) = v135 + 1;
            v133 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              BOOL v14 = v132++ >= 9;
              if (v14)
              {
                uint64_t v133 = 0;
                goto LABEL_320;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v133 = 0;
        }
LABEL_320:
        BOOL v172 = v133 != 0;
        uint64_t v173 = 306;
        goto LABEL_346;
      case 0x2Fu:
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 324) |= 0x10u;
        while (2)
        {
          uint64_t v139 = *v3;
          unint64_t v140 = *(void *)(a2 + v139);
          if (v140 == -1 || v140 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v141 = *(unsigned char *)(*(void *)(a2 + *v7) + v140);
            *(void *)(a2 + v139) = v140 + 1;
            v27 |= (unint64_t)(v141 & 0x7F) << v137;
            if (v141 < 0)
            {
              v137 += 7;
              BOOL v14 = v138++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_324;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_324:
        uint64_t v171 = 160;
        goto LABEL_337;
      case 0x30u:
        char v95 = objc_alloc_init(_MRDeviceInfoMessageProtobuf);
        [(id)a1 addAllClusteredDevices:v95];
        goto LABEL_221;
      case 0x31u:
        char v142 = 0;
        unsigned int v143 = 0;
        uint64_t v144 = 0;
        *(_DWORD *)(a1 + 324) |= 0x400000u;
        while (2)
        {
          uint64_t v145 = *v3;
          unint64_t v146 = *(void *)(a2 + v145);
          if (v146 == -1 || v146 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v147 = *(unsigned char *)(*(void *)(a2 + *v7) + v146);
            *(void *)(a2 + v145) = v146 + 1;
            v144 |= (unint64_t)(v147 & 0x7F) << v142;
            if (v147 < 0)
            {
              v142 += 7;
              BOOL v14 = v143++ >= 9;
              if (v14)
              {
                uint64_t v144 = 0;
                goto LABEL_328;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v144 = 0;
        }
LABEL_328:
        BOOL v172 = v144 != 0;
        uint64_t v173 = 317;
        goto LABEL_346;
      case 0x32u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 104;
        goto LABEL_233;
      case 0x33u:
        char v148 = 0;
        unsigned int v149 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 324) |= 4u;
        while (2)
        {
          uint64_t v150 = *v3;
          unint64_t v151 = *(void *)(a2 + v150);
          if (v151 == -1 || v151 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v152 = *(unsigned char *)(*(void *)(a2 + *v7) + v151);
            *(void *)(a2 + v150) = v151 + 1;
            v27 |= (unint64_t)(v152 & 0x7F) << v148;
            if (v152 < 0)
            {
              v148 += 7;
              BOOL v14 = v149++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_332;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_332:
        uint64_t v171 = 112;
        goto LABEL_337;
      case 0x34u:
        char v153 = 0;
        unsigned int v154 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 324) |= 0x80u;
        while (2)
        {
          uint64_t v155 = *v3;
          unint64_t v156 = *(void *)(a2 + v155);
          if (v156 == -1 || v156 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v157 = *(unsigned char *)(*(void *)(a2 + *v7) + v156);
            *(void *)(a2 + v155) = v156 + 1;
            v27 |= (unint64_t)(v157 & 0x7F) << v153;
            if (v157 < 0)
            {
              v153 += 7;
              BOOL v14 = v154++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_336;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_336:
        uint64_t v171 = 224;
LABEL_337:
        *(_DWORD *)(a1 + v171) = v27;
        goto LABEL_347;
      case 0x35u:
        char v95 = objc_alloc_init(_MRGroupSessionTokenProtobuf);
        objc_storeStrong((id *)(a1 + 136), v95);
        if (!PBReaderPlaceMark() || (_MRGroupSessionTokenProtobufReadFrom((uint64_t)v95, a2) & 1) == 0) {
          goto LABEL_349;
        }
        goto LABEL_223;
      case 0x36u:
        char v95 = objc_alloc_init(_MRDeviceInfoMessageProtobuf);
        objc_storeStrong((id *)(a1 + 168), v95);
LABEL_221:
        if PBReaderPlaceMark() && (_MRDeviceInfoMessageProtobufReadFrom(v95, a2))
        {
LABEL_223:
          PBReaderRecallMark();
LABEL_224:

LABEL_347:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_349:

        return 0;
      case 0x37u:
        char v158 = 0;
        unsigned int v159 = 0;
        uint64_t v160 = 0;
        *(_DWORD *)(a1 + 324) |= 0x4000u;
        while (2)
        {
          uint64_t v161 = *v3;
          unint64_t v162 = *(void *)(a2 + v161);
          if (v162 == -1 || v162 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v163 = *(unsigned char *)(*(void *)(a2 + *v7) + v162);
            *(void *)(a2 + v161) = v162 + 1;
            v160 |= (unint64_t)(v163 & 0x7F) << v158;
            if (v163 < 0)
            {
              v158 += 7;
              BOOL v14 = v159++ >= 9;
              if (v14)
              {
                uint64_t v160 = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v160 = 0;
        }
LABEL_341:
        BOOL v172 = v160 != 0;
        uint64_t v173 = 309;
        goto LABEL_346;
      case 0x38u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 16;
LABEL_233:
        unint64_t v164 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_347;
      case 0x39u:
        char v165 = 0;
        unsigned int v166 = 0;
        uint64_t v167 = 0;
        *(_DWORD *)(a1 + 324) |= 0x8000u;
        while (2)
        {
          uint64_t v168 = *v3;
          unint64_t v169 = *(void *)(a2 + v168);
          if (v169 == -1 || v169 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v170 = *(unsigned char *)(*(void *)(a2 + *v7) + v169);
            *(void *)(a2 + v168) = v169 + 1;
            v167 |= (unint64_t)(v170 & 0x7F) << v165;
            if (v170 < 0)
            {
              v165 += 7;
              BOOL v14 = v166++ >= 9;
              if (v14)
              {
                uint64_t v167 = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v167 = 0;
        }
LABEL_345:
        BOOL v172 = v167 != 0;
        uint64_t v173 = 310;
LABEL_346:
        *(unsigned char *)(a1 + v173) = v172;
        goto LABEL_347;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_347;
    }
  }
}

uint64_t _MRMRNowPlayingAudioFormatContentInfoProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 72;
          goto LABEL_44;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(_WORD *)(a1 + 84) |= 2u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_90:
          uint64_t v69 = 16;
          goto LABEL_124;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v22 = 0;
          *(_WORD *)(a1 + 84) |= 1u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v22 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_94:
          uint64_t v69 = 8;
          goto LABEL_124;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v22 = 0;
          *(_WORD *)(a1 + 84) |= 4u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v22 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_98;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_98:
          uint64_t v69 = 24;
          goto LABEL_124;
        case 5u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 64;
LABEL_44:
          char v36 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        case 6u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          *(_WORD *)(a1 + 84) |= 0x80u;
          while (2)
          {
            uint64_t v40 = *v3;
            unint64_t v41 = *(void *)(a2 + v40);
            if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
              *(void *)(a2 + v40) = v41 + 1;
              v39 |= (unint64_t)(v42 & 0x7F) << v37;
              if (v42 < 0)
              {
                v37 += 7;
                BOOL v14 = v38++ >= 9;
                if (v14)
                {
                  uint64_t v39 = 0;
                  goto LABEL_102;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v39 = 0;
          }
LABEL_102:
          BOOL v70 = v39 != 0;
          uint64_t v71 = 80;
          goto LABEL_107;
        case 7u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          *(_WORD *)(a1 + 84) |= 0x100u;
          while (2)
          {
            uint64_t v46 = *v3;
            unint64_t v47 = *(void *)(a2 + v46);
            if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                BOOL v14 = v44++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_106;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
LABEL_106:
          BOOL v70 = v45 != 0;
          uint64_t v71 = 81;
LABEL_107:
          *(unsigned char *)(a1 + v71) = v70;
          continue;
        case 8u:
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v22 = 0;
          *(_WORD *)(a1 + 84) |= 8u;
          while (2)
          {
            uint64_t v51 = *v3;
            unint64_t v52 = *(void *)(a2 + v51);
            if (v52 == -1 || v52 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
              *(void *)(a2 + v51) = v52 + 1;
              v22 |= (unint64_t)(v53 & 0x7F) << v49;
              if (v53 < 0)
              {
                v49 += 7;
                BOOL v14 = v50++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_111;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_111:
          uint64_t v69 = 32;
          goto LABEL_124;
        case 9u:
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v22 = 0;
          *(_WORD *)(a1 + 84) |= 0x40u;
          while (2)
          {
            uint64_t v56 = *v3;
            unint64_t v57 = *(void *)(a2 + v56);
            if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v57 + 1;
              v22 |= (unint64_t)(v58 & 0x7F) << v54;
              if (v58 < 0)
              {
                v54 += 7;
                BOOL v14 = v55++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_115:
          uint64_t v69 = 56;
          goto LABEL_124;
        case 0xAu:
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v22 = 0;
          *(_WORD *)(a1 + 84) |= 0x10u;
          while (2)
          {
            uint64_t v61 = *v3;
            unint64_t v62 = *(void *)(a2 + v61);
            if (v62 == -1 || v62 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
              *(void *)(a2 + v61) = v62 + 1;
              v22 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                BOOL v14 = v60++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_119;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_119:
          uint64_t v69 = 40;
          goto LABEL_124;
        case 0xBu:
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v22 = 0;
          *(_WORD *)(a1 + 84) |= 0x20u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v66 = *v3;
        unint64_t v67 = *(void *)(a2 + v66);
        if (v67 == -1 || v67 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v68 = *(unsigned char *)(*(void *)(a2 + *v7) + v67);
        *(void *)(a2 + v66) = v67 + 1;
        v22 |= (unint64_t)(v68 & 0x7F) << v64;
        if ((v68 & 0x80) == 0) {
          goto LABEL_121;
        }
        v64 += 7;
        BOOL v14 = v65++ >= 9;
        if (v14)
        {
          uint64_t v22 = 0;
          goto LABEL_123;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_121:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v22 = 0;
      }
LABEL_123:
      uint64_t v69 = 48;
LABEL_124:
      *(void *)(a1 + v69) = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_194FCEE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_99(uint64_t a1, void *a2, void *a3)
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id v7 = NSNumber;
  [*(id *)(a1 + 48) timeIntervalSinceNow];
  unsigned int v9 = [v7 numberWithDouble:fabs(v8)];
  [*(id *)(a1 + 32) setObject:v9 forKeyedSubscript:*(void *)(a1 + 40)];

  if (!v6)
  {
    unsigned int v21 = [v5 debugName];

    uint64_t v22 = *(void *)(a1 + 56);
    uint64_t v11 = _MRLogForCategory(0xAuLL);
    BOOL v23 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    if (!v21)
    {
      if (v22)
      {
        if (!v23) {
          goto LABEL_22;
        }
        uint64_t v36 = *(void *)(a1 + 64);
        uint64_t v35 = *(void *)(a1 + 72);
        char v37 = *(void **)(a1 + 56);
        int v16 = [MEMORY[0x1E4F1C9C8] date];
        [v16 timeIntervalSinceDate:*(void *)(a1 + 48)];
        int v53 = 138544130;
        uint64_t v54 = v36;
        __int16 v55 = 2114;
        uint64_t v56 = v35;
        __int16 v57 = 2114;
        id v58 = v37;
        __int16 v59 = 2048;
        uint64_t v60 = v38;
        uint64_t v39 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
        uint64_t v40 = v11;
        uint32_t v41 = 42;
      }
      else
      {
        if (!v23) {
          goto LABEL_22;
        }
        uint64_t v45 = *(void *)(a1 + 64);
        uint64_t v46 = *(void *)(a1 + 72);
        int v16 = [MEMORY[0x1E4F1C9C8] date];
        [v16 timeIntervalSinceDate:*(void *)(a1 + 48)];
        int v53 = 138543874;
        uint64_t v54 = v45;
        __int16 v55 = 2114;
        uint64_t v56 = v46;
        __int16 v57 = 2048;
        id v58 = v47;
        uint64_t v39 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
        uint64_t v40 = v11;
        uint32_t v41 = 32;
      }
      _os_log_impl(&dword_194F3C000, v40, OS_LOG_TYPE_DEFAULT, v39, (uint8_t *)&v53, v41);
      goto LABEL_21;
    }
    if (v22)
    {
      if (!v23) {
        goto LABEL_22;
      }
      uint64_t v24 = *(void *)(a1 + 64);
      uint64_t v25 = *(void *)(a1 + 72);
      int v16 = [v5 debugName];
      uint64_t v26 = *(void *)(a1 + 56);
      unsigned int v27 = [MEMORY[0x1E4F1C9C8] date];
      [v27 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v53 = 138544386;
      uint64_t v54 = v24;
      __int16 v55 = 2114;
      uint64_t v56 = v25;
      __int16 v57 = 2112;
      id v58 = v16;
      __int16 v59 = 2114;
      uint64_t v60 = v26;
      __int16 v61 = 2048;
      uint64_t v62 = v28;
      unint64_t v29 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
      char v30 = v11;
      uint32_t v31 = 52;
    }
    else
    {
      if (!v23) {
        goto LABEL_22;
      }
      uint64_t v42 = *(void *)(a1 + 64);
      uint64_t v43 = *(void *)(a1 + 72);
      int v16 = [v5 debugName];
      unsigned int v27 = [MEMORY[0x1E4F1C9C8] date];
      [v27 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v53 = 138544130;
      uint64_t v54 = v42;
      __int16 v55 = 2114;
      uint64_t v56 = v43;
      __int16 v57 = 2112;
      id v58 = v16;
      __int16 v59 = 2048;
      uint64_t v60 = v44;
      unint64_t v29 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
      char v30 = v11;
      uint32_t v31 = 42;
    }
    _os_log_impl(&dword_194F3C000, v30, OS_LOG_TYPE_DEFAULT, v29, (uint8_t *)&v53, v31);

    goto LABEL_21;
  }
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v11 = _MRLogForCategory(0xAuLL);
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
  if (v10)
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(a1 + 64);
      uint64_t v13 = *(void *)(a1 + 72);
      uint64_t v15 = *(void *)(a1 + 56);
      int v16 = [MEMORY[0x1E4F1C9C8] date];
      [v16 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v53 = 138544386;
      uint64_t v54 = v14;
      __int16 v55 = 2114;
      uint64_t v56 = v13;
      __int16 v57 = 2114;
      id v58 = v6;
      __int16 v59 = 2114;
      uint64_t v60 = v15;
      __int16 v61 = 2048;
      uint64_t v62 = v17;
      uint64_t v18 = "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds";
      char v19 = v11;
      uint32_t v20 = 52;
LABEL_11:
      _os_log_error_impl(&dword_194F3C000, v19, OS_LOG_TYPE_ERROR, v18, (uint8_t *)&v53, v20);
LABEL_21:
    }
  }
  else if (v12)
  {
    uint64_t v32 = *(void *)(a1 + 64);
    uint64_t v33 = *(void *)(a1 + 72);
    int v16 = [MEMORY[0x1E4F1C9C8] date];
    [v16 timeIntervalSinceDate:*(void *)(a1 + 48)];
    int v53 = 138544130;
    uint64_t v54 = v32;
    __int16 v55 = 2114;
    uint64_t v56 = v33;
    __int16 v57 = 2114;
    id v58 = v6;
    __int16 v59 = 2048;
    uint64_t v60 = v34;
    uint64_t v18 = "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds";
    char v19 = v11;
    uint32_t v20 = 42;
    goto LABEL_11;
  }
LABEL_22:

  (*(void (**)(void, id, id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 80) + 16))(*(void *)(a1 + 80), v5, v6, v48, v49, v50, v51, v52);
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_129(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = *(id *)(a1 + 32);
  if (!v8)
  {
    id v11 = v9;
    if ([v11 code] == 26)
    {
      uint64_t v21 = [objc_alloc(MEMORY[0x1E4F28C58]) initWithMRError:47, @"Timedout after %lf seconds trying discover groupLeader. Discovered=%@", 0x4000000000000000, v7 format];

      id v11 = (id)v21;
    }
    uint64_t v22 = _MRLogForCategory(0);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_129_cold_1((uint64_t)v11, v22);
    }

    BOOL v23 = *(void (**)(void))(*(void *)(a1 + 64) + 16);
    goto LABEL_26;
  }
  id v11 = [v8 outputDevices];
  if (!*(void *)(a1 + 40) && ([v8 isLocalEndpoint] & 1) != 0)
  {
LABEL_22:
    if ([v8 isLocalEndpoint]) {
      uint64_t v24 = @"local";
    }
    else {
      uint64_t v24 = @"remote";
    }
    [*(id *)(a1 + 56) setObject:v24 forKeyedSubscript:@"groupLeaderType"];
    BOOL v23 = *(void (**)(void))(*(void *)(a1 + 64) + 16);
LABEL_26:
    v23();
    goto LABEL_27;
  }
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v12 = v11;
  uint64_t v13 = [v12 countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v27;
    id v25 = v9;
    while (2)
    {
      id v16 = v10;
      id v17 = v7;
      for (uint64_t i = 0; i != v14; ++i)
      {
        if (*(void *)v27 != v15) {
          objc_enumerationMutation(v12);
        }
        char v19 = *(void **)(*((void *)&v26 + 1) + 8 * i);
        if ((MRAVOutputDeviceIsGroupLeader(v19) & 1) != 0
          || (MRAVOutputDeviceGroupContainsGroupLeader(v19) & 1) != 0
          || [*(id *)(a1 + 48) isGroupLeader]
          && MRAVOutputDeviceIsLocalDevice(v19))
        {

          id v7 = v17;
          id v10 = v16;
          id v9 = v25;
          goto LABEL_22;
        }
      }
      uint64_t v14 = [v12 countByEnumeratingWithState:&v26 objects:v30 count:16];
      id v7 = v17;
      id v10 = v16;
      id v9 = v25;
      if (v14) {
        continue;
      }
      break;
    }
  }

  uint32_t v20 = (void *)[objc_alloc(MEMORY[0x1E4F28C58]) initWithMRError:33, @"No suitable group leader to modify: %@", v8 format];
  (*(void (**)(void))(*(void *)(a1 + 64) + 16))();

  id v11 = v12;
LABEL_27:
}

void _MRLogForCategory_cold_1()
{
}

uint64_t MRPairedDeviceCopyManagedConfigDeviceID(void *a1)
{
  char v1 = [a1 managedConfigurationDeviceIdentifier];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceCopyIdentifier(void *a1)
{
  char v1 = [a1 identifier];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceCopyBundleVersion(void *a1)
{
  char v1 = [a1 bundleVersion];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceCopyBundleIdentifier(void *a1)
{
  char v1 = [a1 bundleIdentifier];
  uint64_t v2 = [v1 copy];

  return v2;
}

void MRMediaRemoteSetWantsPlaybackErrorNotifications(int a1)
{
  id v3 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v2 = [v3 notificationClient];
  [v2 setReceivesPlaybackErrorNotifications:a1 != 0];
}

void MRContentItemSetEpisodeType(void *a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  MRCreateItemMetadataIfNotPresent(a1);
  id v8 = a1;
  id v4 = [v8 metadata];
  if ([v4 episodeType] == a2)
  {
    id v5 = [v8 metadata];
    char v6 = [v5 hasEpisodeType];

    if (v6) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  id v7 = [v8 metadata];
  [v7 setEpisodeType:a2];

LABEL_8:
}

uint64_t MRAnalyticsSendEvent(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (MRAnalyticsSendEvent_once != -1) {
    dispatch_once(&MRAnalyticsSendEvent_once, &__block_literal_global_377);
  }
  v18[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = __MRAnalyticsSendEvent_block_invoke_2;
  v18[3] = &unk_1E57D5E80;
  id v19 = v6;
  id v20 = v7;
  id v8 = v6;
  id v9 = v7;
  id v10 = (void *)MEMORY[0x1997190F0](v18);
  id v11 = MRAnalyticsSendEvent___analyticsQueue;
  v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __MRAnalyticsSendEvent_block_invoke_3;
  v15[3] = &unk_1E57D0DB8;
  id v16 = v5;
  id v17 = v10;
  id v12 = v5;
  id v13 = v10;
  dispatch_async(v11, v15);

  return 1;
}

uint64_t MRAVEndpointCopyDesignatedGroupLeader(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 designatedGroupLeader];
  return v3;
}

uint64_t MRPlaybackQueueCreate(uint64_t a1, uint64_t a2)
{
  id v4 = [MRPlaybackQueue alloc];

  return (uint64_t)[(MRPlaybackQueue *)v4 initWithContentItems:a1 location:a2];
}

uint64_t MRPlaybackQueueCreateWithContentItem(uint64_t a1)
{
  v6[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = [MRPlaybackQueue alloc];
  v6[[NSString stringWithFormat:@"com.apple.%@", 0] = a1;
  uint64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v6 count:1];
  uint64_t v4 = [(MRPlaybackQueue *)v2 initWithContentItems:v3];

  return v4;
}

uint64_t MRPlaybackQueueCreateWithContentItems(uint64_t a1)
{
  uint64_t v2 = [MRPlaybackQueue alloc];

  return (uint64_t)[(MRPlaybackQueue *)v2 initWithContentItems:a1];
}

uint64_t MRPlaybackQueueCreateWithNowPlayingContentItem(uint64_t a1)
{
  v6[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = [MRPlaybackQueue alloc];
  v6[[NSString stringWithFormat:@"com.apple.%@", 0] = a1;
  uint64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v6 count:1];
  uint64_t v4 = [(MRPlaybackQueue *)v2 initWithContentItems:v3 location:0];

  return v4;
}

uint64_t MRPlaybackQueueCreateFromNowPlayingInfo(uint64_t a1)
{
  v6[1] = *MEMORY[0x1E4F143B8];
  char v1 = [[MRContentItem alloc] initWithNowPlayingInfo:a1];
  uint64_t v2 = [MRPlaybackQueue alloc];
  v6[[NSString stringWithFormat:@"com.apple.%@", 0] = v1;
  uint64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v6 count:1];
  uint64_t v4 = [(MRPlaybackQueue *)v2 initWithContentItems:v3 location:0];

  return v4;
}

uint64_t MRPlaybackQueueCreateEmpty()
{
  id v0 = [MRPlaybackQueue alloc];
  uint64_t v1 = MEMORY[0x1E4F1CBF0];

  return (uint64_t)[(MRPlaybackQueue *)v0 initWithContentItems:v1];
}

void *MRPlaybackQueueGetResolvedPlayerPath(void *a1)
{
  uint64_t v1 = [a1 resolvedPlayerPath];

  return v1;
}

uint64_t MRPlaybackQueueGetContentItemsCount(void *a1)
{
  uint64_t v1 = [a1 contentItems];
  uint64_t v2 = [v1 count];

  return v2;
}

uint64_t MRPlaybackQueueCreateExternalRepresentation(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPlaybackQueueQueueIsEqualToPlaybackQueue(void *a1, void *a2)
{
  if (a1 == a2) {
    return 1;
  }
  else {
    return [a1 isEqual:a2];
  }
}

uint64_t MRPlaybackQueueCreateFromExternalRepresentation(uint64_t a1)
{
  uint64_t v2 = [MRPlaybackQueue alloc];

  return (uint64_t)[(MRPlaybackQueue *)v2 initWithData:a1];
}

__CFString *MRPlaybackQueueCopyReadableDescription(void *a1)
{
  uint64_t v1 = [a1 description];
  uint64_t v2 = (void *)v1;
  uint64_t v3 = @"NULL";
  if (v1) {
    uint64_t v3 = (__CFString *)v1;
  }
  uint64_t v4 = v3;

  return v4;
}

void *MRPlaybackQueueCopyContentItemIdentifiers(void *result)
{
  if (result)
  {
    [result contentItemIdentifiers];
    return objc_claimAutoreleasedReturnValue();
  }
  return result;
}

uint64_t MRPlaybackQueueSetResolvedPlayerPath(void *a1, const char *a2)
{
  return [a1 setResolvedPlayerPath:a2];
}

uint64_t MRPlaybackQueueSetRequestID(void *a1, const char *a2)
{
  return [a1 setRequestIdentifier:a2];
}

void *MRPlaybackQueueGetRequestID(void *a1)
{
  uint64_t v1 = [a1 requestIdentifier];

  return v1;
}

uint64_t MRPlaybackQueueSetQueueID(void *a1, const char *a2)
{
  return [a1 setQueueIdentifier:a2];
}

uint64_t MRPlaybackQueueGetContentItemAtOffset(void *a1, const char *a2)
{
  return [a1 contentItemWithOffset:a2];
}

uint64_t MRPlaybackQueueGetContentItemForIdentifier(void *a1, const char *a2)
{
  return [a1 contentItemForIdentifier:a2];
}

uint64_t MRPlaybackQueueCopyMinimalReadableDescription(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1;
  uint64_t v2 = [v1 dictionaryRepresentation];
  uint64_t v3 = (void *)[v2 mutableCopy];

  uint64_t v4 = [v1 contentItems];

  id v5 = MRContentItemsCopyMinimalReadableDescription(v4, 0);
  if (v5) {
    [v3 setObject:v5 forKey:@"contentItem"];
  }
  uint64_t v6 = [v3 description];

  return v6;
}

void MRMediaRemotePlaybackQueueResetRequestsWithDataForPlayer(void *a1, void *a2)
{
  uint64_t v4 = (void *)MRGetSharedService();

  MRMediaRemoteServiceResetPlaybackQueueRequests(v4, a1, a2);
}

void sub_194FD576C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

id MRMediaRemoteRegisterWantsSystemAppDidSkipTrackNotifications()
{
  return +[MRMediaRemoteServiceClient sharedServiceClient];
}

void MRMediaRemoteSupportedCommandsHaveChanged()
{
}

void MRMediaRemoteSupportedCommandsHaveChangedForOrigin(void *a1)
{
  v5[1] = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v4 = @"kMRMediaRemoteOriginDataUserInfoKey";
    id v1 = [a1 data];
    v5[[NSString stringWithFormat:@"com.apple.%@", 0] = v1;
    uint64_t v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v5 forKeys:&v4 count:1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = (void *)MRGetSharedService();
  MRMediaRemoteServicePostNotification(v3, @"kMRMediaRemoteSupportedCommandsDidChangeNotification", v2);
}

void MRMediaRemoteRegisterForElapsedTimeChangesWithHandler(void *a1, void *a2)
{
  id v3 = a1;
  if (!v3)
  {
    id v3 = (id)MEMORY[0x1E4F14428];
    id v4 = MEMORY[0x1E4F14428];
  }
  id v5 = a2;
  uint64_t v6 = (void *)[v5 copy];

  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteRegisterForElapsedTimeChangesWithHandler_block_invoke;
  v9[3] = &unk_1E57D03B0;
  id v10 = v3;
  id v11 = v6;
  id v7 = v6;
  id v8 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v9);
}

void __MRMediaRemoteRegisterForElapsedTimeChangesWithHandler_block_invoke(uint64_t a1)
{
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteRegisterForElapsedTimeChangesWithHandler_block_invoke_2;
  handler[3] = &unk_1E57D0388;
  id v1 = *(NSObject **)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  uint32_t v2 = notify_register_dispatch("com.apple.MRMediaRemote.elapsedTimeDidChange", &__elapsedTimeChangeHandlerToken, v1, handler);
  __elapsedTimeChangeHandlerTokenIsValid = v2 == 0;
  if (!v2)
  {
    id v3 = _MRLogForCategory(0);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl(&dword_194F3C000, v3, OS_LOG_TYPE_DEFAULT, "Registered for elapsed time changes.", v4, 2u);
    }
  }
}

void __MRMediaRemoteRegisterForElapsedTimeChangesWithHandler_block_invoke_2(uint64_t a1, int a2)
{
  id v4 = _MRLogForCategory(0);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_194F3C000, v4, OS_LOG_TYPE_DEFAULT, "Got elapsed time change.", buf, 2u);
  }

  if (*(void *)(a1 + 32))
  {
    uint64_t state64 = 0;
    notify_get_state(a2, &state64);
    (*(void (**)(double))(*(void *)(a1 + 32) + 16))(*(double *)&state64);
  }
}

void MRMediaRemoteUnregisterForElapsedTimeChanges()
{
}

void __MRMediaRemoteUnregisterForElapsedTimeChanges_block_invoke()
{
  if (__elapsedTimeChangeHandlerTokenIsValid)
  {
    notify_cancel(__elapsedTimeChangeHandlerToken);
    __elapsedTimeChangeHandlerTokenIsValid = 0;
    id v0 = _MRLogForCategory(0);
    if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v1 = 0;
      _os_log_impl(&dword_194F3C000, v0, OS_LOG_TYPE_DEFAULT, "Unregistered for elapsed time changes.", v1, 2u);
    }
  }
}

void MRMediaRemoteRegisterForPlaybackSpeedChangesWithHandler(void *a1, void *a2)
{
  id v3 = a1;
  if (!v3)
  {
    id v3 = (id)MEMORY[0x1E4F14428];
    id v4 = MEMORY[0x1E4F14428];
  }
  id v5 = a2;
  id v6 = (void *)[v5 copy];

  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteRegisterForPlaybackSpeedChangesWithHandler_block_invoke;
  v9[3] = &unk_1E57D03B0;
  id v10 = v3;
  id v11 = v6;
  id v7 = v6;
  id v8 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v9);
}

void __MRMediaRemoteRegisterForPlaybackSpeedChangesWithHandler_block_invoke(uint64_t a1)
{
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteRegisterForPlaybackSpeedChangesWithHandler_block_invoke_2;
  handler[3] = &unk_1E57D0388;
  id v1 = *(NSObject **)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  uint32_t v2 = notify_register_dispatch("com.apple.MRMediaRemote.playbackSpeedDidChange", &__playbackSpeedChangeHandlerToken, v1, handler);
  __playbackSpeedChangeHandlerTokenIsValid = v2 == 0;
  if (!v2)
  {
    id v3 = _MRLogForCategory(0);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl(&dword_194F3C000, v3, OS_LOG_TYPE_DEFAULT, "Registered for playback speed changes.", v4, 2u);
    }
  }
}

void __MRMediaRemoteRegisterForPlaybackSpeedChangesWithHandler_block_invoke_2(uint64_t a1, int a2)
{
  id v4 = _MRLogForCategory(0);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_194F3C000, v4, OS_LOG_TYPE_DEFAULT, "Got playback speed change.", buf, 2u);
  }

  if (*(void *)(a1 + 32))
  {
    uint64_t state64 = 0;
    notify_get_state(a2, &state64);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void MRMediaRemoteUnregisterForPlaybackSpeedChanges()
{
}

void __MRMediaRemoteUnregisterForPlaybackSpeedChanges_block_invoke()
{
  if (__playbackSpeedChangeHandlerTokenIsValid)
  {
    notify_cancel(__playbackSpeedChangeHandlerToken);
    __playbackSpeedChangeHandlerTokenIsValid = 0;
    id v0 = _MRLogForCategory(0);
    if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v1 = 0;
      _os_log_impl(&dword_194F3C000, v0, OS_LOG_TYPE_DEFAULT, "Unregistered for playback speed changes.", v1, 2u);
    }
  }
}

void MRMediaRemoteRegisterForRepeatModeChangesWithHandler(void *a1, void *a2)
{
  id v3 = a1;
  if (!v3)
  {
    id v3 = (id)MEMORY[0x1E4F14428];
    id v4 = MEMORY[0x1E4F14428];
  }
  id v5 = a2;
  id v6 = (void *)[v5 copy];

  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteRegisterForRepeatModeChangesWithHandler_block_invoke;
  v9[3] = &unk_1E57D03B0;
  id v10 = v3;
  id v11 = v6;
  id v7 = v6;
  id v8 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v9);
}

void __MRMediaRemoteRegisterForRepeatModeChangesWithHandler_block_invoke(uint64_t a1)
{
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteRegisterForRepeatModeChangesWithHandler_block_invoke_2;
  handler[3] = &unk_1E57D0388;
  id v1 = *(NSObject **)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  uint32_t v2 = notify_register_dispatch("com.apple.MRMediaRemote.repeatModeDidChange", &__repeatModeChangeHandlerToken, v1, handler);
  __repeatModeChangeHandlerTokenIsValid = v2 == 0;
  if (!v2)
  {
    id v3 = _MRLogForCategory(0);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl(&dword_194F3C000, v3, OS_LOG_TYPE_DEFAULT, "Registered for repeat mode changes.", v4, 2u);
    }
  }
}

void __MRMediaRemoteRegisterForRepeatModeChangesWithHandler_block_invoke_2(uint64_t a1, int a2)
{
  id v4 = _MRLogForCategory(0);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_194F3C000, v4, OS_LOG_TYPE_DEFAULT, "Got repeat mode change.", buf, 2u);
  }

  if (*(void *)(a1 + 32))
  {
    uint64_t state64 = 1;
    notify_get_state(a2, &state64);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void MRMediaRemoteUnregisterForRepeatModeChanges()
{
}

void __MRMediaRemoteUnregisterForRepeatModeChanges_block_invoke()
{
  if (__repeatModeChangeHandlerTokenIsValid)
  {
    notify_cancel(__repeatModeChangeHandlerToken);
    __repeatModeChangeHandlerTokenIsValid = 0;
    id v0 = _MRLogForCategory(0);
    if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v1 = 0;
      _os_log_impl(&dword_194F3C000, v0, OS_LOG_TYPE_DEFAULT, "Unregistered for repeat mode changes", v1, 2u);
    }
  }
}

void MRMediaRemoteRegisterForShuffleModeChangesWithHandler(void *a1, void *a2)
{
  id v3 = a1;
  if (!v3)
  {
    id v3 = (id)MEMORY[0x1E4F14428];
    id v4 = MEMORY[0x1E4F14428];
  }
  id v5 = a2;
  id v6 = (void *)[v5 copy];

  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteRegisterForShuffleModeChangesWithHandler_block_invoke;
  v9[3] = &unk_1E57D03B0;
  id v10 = v3;
  id v11 = v6;
  id v7 = v6;
  id v8 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v9);
}

void __MRMediaRemoteRegisterForShuffleModeChangesWithHandler_block_invoke(uint64_t a1)
{
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteRegisterForShuffleModeChangesWithHandler_block_invoke_2;
  handler[3] = &unk_1E57D0388;
  id v1 = *(NSObject **)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  uint32_t v2 = notify_register_dispatch("com.apple.MRMediaRemote.shuffleModeDidChange", &__shuffleModeChangeHandlerToken, v1, handler);
  __shuffleModeChangeHandlerTokenIsValid = v2 == 0;
  if (!v2)
  {
    id v3 = _MRLogForCategory(0);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl(&dword_194F3C000, v3, OS_LOG_TYPE_DEFAULT, "Registered for shuffle mode changes.", v4, 2u);
    }
  }
}

void __MRMediaRemoteRegisterForShuffleModeChangesWithHandler_block_invoke_2(uint64_t a1, int a2)
{
  id v4 = _MRLogForCategory(0);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_194F3C000, v4, OS_LOG_TYPE_DEFAULT, "Got shuffle mode change.", buf, 2u);
  }

  if (*(void *)(a1 + 32))
  {
    uint64_t state64 = 1;
    notify_get_state(a2, &state64);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void MRMediaRemoteUnregisterForShuffleModeChanges()
{
}

void __MRMediaRemoteUnregisterForShuffleModeChanges_block_invoke()
{
  if (__shuffleModeChangeHandlerTokenIsValid)
  {
    notify_cancel(__shuffleModeChangeHandlerToken);
    __shuffleModeChangeHandlerTokenIsValid = 0;
    id v0 = _MRLogForCategory(0);
    if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v1 = 0;
      _os_log_impl(&dword_194F3C000, v0, OS_LOG_TYPE_DEFAULT, "Unregistered for shuffle mode changes", v1, 2u);
    }
  }
}

uint64_t _MRTransactionPacketProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          id v17 = objc_alloc_init(_MRTransactionKeyProtobuf);
          objc_storeStrong((id *)(a1 + 32), v17);
          if (PBReaderPlaceMark() && _MRTransactionKeyProtobufReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();

            continue;
          }

          return 0;
        case 2u:
          uint64_t v19 = PBReaderReadData();
          uint64_t v20 = 40;
          goto LABEL_26;
        case 3u:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 24;
LABEL_26:
          uint64_t v21 = *(void **)(a1 + v20);
          *(void *)(a1 + v20) = v19;

          continue;
        case 4u:
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          while (2)
          {
            uint64_t v25 = *v3;
            unint64_t v26 = *(void *)(a2 + v25);
            if (v26 == -1 || v26 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
              *(void *)(a2 + v25) = v26 + 1;
              v24 |= (unint64_t)(v27 & 0x7F) << v22;
              if (v27 < 0)
              {
                v22 += 7;
                BOOL v14 = v23++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_44;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_44:
          uint64_t v33 = 8;
          goto LABEL_49;
        case 5u:
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v24 = 0;
          *(unsigned char *)(a1 + 48) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v30 = *v3;
        unint64_t v31 = *(void *)(a2 + v30);
        if (v31 == -1 || v31 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
        *(void *)(a2 + v30) = v31 + 1;
        v24 |= (unint64_t)(v32 & 0x7F) << v28;
        if ((v32 & 0x80) == 0) {
          goto LABEL_46;
        }
        v28 += 7;
        BOOL v14 = v29++ >= 9;
        if (v14)
        {
          uint64_t v24 = 0;
          goto LABEL_48;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v24 = 0;
      }
LABEL_48:
      uint64_t v33 = 16;
LABEL_49:
      *(void *)(a1 + v33) = v24;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRLyricsTokenProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 8;
LABEL_22:
        uint64_t v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadData();
    uint64_t v18 = 16;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRPlaybackSessionProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 24;
          goto LABEL_24;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
          goto LABEL_24;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_24;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
          goto LABEL_24;
        case 5u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 16;
LABEL_24:
          uint64_t v19 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          goto LABEL_25;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_25:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id MRAVOutputContextGetSharedSystemAudioContext()
{
  id v0 = (void *)MEMORY[0x199718E70]();
  id v1 = +[MRAVOutputContext sharedSystemAudioContext];
  return v1;
}

id MRAVOutputContextGetSharedSystemScreenContext()
{
  id v0 = (void *)MEMORY[0x199718E70]();
  id v1 = +[MRAVOutputContext sharedSystemScreenContext];
  return v1;
}

uint64_t MRAVOutputContextCreateiTunesAudioContext()
{
  id v0 = (void *)MEMORY[0x199718E70]();
  uint64_t v1 = +[MRAVOutputContext iTunesContext];
  return v1;
}

uint64_t MRAVOutputContextCreateRoutingContext(uint64_t a1)
{
  uint32_t v2 = (void *)MEMORY[0x199718E70]();
  if (a1)
  {
    a1 = +[MRAVConcreteOutputContext createOutputContextWithUniqueIdentifier:a1];
  }
  return a1;
}

uint64_t MRAVOutputContextGetType(void *a1)
{
  uint32_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 type];
  return v3;
}

void MRAVOutputContextSetOutputDevice(void *a1, uint64_t a2, void *a3, void *a4)
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  unsigned int v9 = (void *)MEMORY[0x199718E70]();
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = a2;
  unint64_t v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:1];
  [a1 setOutputDevices:v10 withCallbackQueue:v7 block:v8];
}

void MRAVOutputContextSetOutputDeviceWithInitiator(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = (void *)MEMORY[0x199718E70]();
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = a2;
  unint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v13 count:1];
  [a1 setOutputDevices:v12 initiator:a3 withCallbackQueue:v9 block:v10];
}

void MRAVOutputContextSetOutputDeviceWithPassword(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = (void *)MEMORY[0x199718E70]();
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = a2;
  unint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v13 count:1];
  [a1 setOutputDevices:v12 withPassword:a3 withCallbackQueue:v9 block:v10];
}

void MRAVOutputContextSetOutputDevices(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v9 = a3;
  id v7 = a4;
  id v8 = (void *)MEMORY[0x199718E70]();
  [a1 setOutputDevices:a2 withCallbackQueue:v9 block:v7];
}

void MRAVOutputContextSetOutputDevicesWithInitiator(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v11 = a4;
  id v9 = a5;
  id v10 = (void *)MEMORY[0x199718E70]();
  [a1 setOutputDevices:a2 initiator:a3 withCallbackQueue:v11 block:v9];
}

void MRAVOutputContextAddOutputDevice(void *a1, uint64_t a2, void *a3, void *a4)
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)MEMORY[0x199718E70]();
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = a2;
  id v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:1];
  [a1 addOutputDevices:v10 withCallbackQueue:v7 block:v8];
}

void MRAVOutputContextAddOutputDeviceWithInitiator(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)MEMORY[0x199718E70]();
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = a2;
  unint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v13 count:1];
  [a1 addOutputDevices:v12 initiator:a3 withCallbackQueue:v9 block:v10];
}

void MRAVOutputContextAddOutputDevices(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v9 = a3;
  id v7 = a4;
  id v8 = (void *)MEMORY[0x199718E70]();
  [a1 addOutputDevices:a2 withCallbackQueue:v9 block:v7];
}

void MRAVOutputContextAddOutputDevicesWithInitiator(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v11 = a4;
  id v9 = a5;
  id v10 = (void *)MEMORY[0x199718E70]();
  [a1 addOutputDevices:a2 initiator:a3 withCallbackQueue:v11 block:v9];
}

void MRAVOutputContextRemoveOutputDevice(void *a1, uint64_t a2, void *a3, void *a4)
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)MEMORY[0x199718E70]();
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = a2;
  id v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:1];
  [a1 removeOutputDevices:v10 withCallbackQueue:v7 block:v8];
}

void MRAVOutputContextRemoveOutputDeviceWithInitiator(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)MEMORY[0x199718E70]();
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = a2;
  unint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v13 count:1];
  [a1 removeOutputDevices:v12 initiator:a3 withCallbackQueue:v9 block:v10];
}

void MRAVOutputContextRemoveOutputDevices(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v9 = a3;
  id v7 = a4;
  id v8 = (void *)MEMORY[0x199718E70]();
  [a1 removeOutputDevices:a2 withCallbackQueue:v9 block:v7];
}

void MRAVOutputContextRemoveOutputDevicesWithInitiator(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v11 = a4;
  id v9 = a5;
  id v10 = (void *)MEMORY[0x199718E70]();
  [a1 removeOutputDevices:a2 initiator:a3 withCallbackQueue:v11 block:v9];
}

void MRAVOutputContextRemoveAllDevices(void *a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  id v6 = (void *)MEMORY[0x199718E70]();
  [a1 removeAllOutputDevicesWithCallbackQueue:v7 block:v5];
}

uint64_t MRAVOutputContextSupportsMultipleBluetoothOutputDevices(void *a1)
{
  uint32_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 supportsMultipleBluetoothOutputDevices];
  return v3;
}

void MRAVOutputContextResetPredictedOutputDevice(void *a1)
{
  uint32_t v2 = (void *)MEMORY[0x199718E70]();
  [a1 resetPredictedOutputDevice];
}

void sub_194FDCF68(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_194FDD15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194FDD57C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t MRPlaybackSessionCreate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [MRPlaybackSession alloc];

  return (uint64_t)[(MRPlaybackSession *)v6 initWithIdentifier:a1 type:a2 playbackSessionData:a3 revision:0 metadata:0];
}

uint64_t MRPlaybackSessionCopyIdentifier(void *a1)
{
  uint64_t v1 = [a1 identifier];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPlaybackSessionCopyType(void *a1)
{
  uint64_t v1 = [a1 type];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPlaybackSessionCopyPlaybackSessionData(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPlaybackSessionCreateExternalRepresentation(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPlaybackSessionCreateFromExternalRepresentation(uint64_t a1)
{
  uint64_t v2 = [MRPlaybackSession alloc];

  return (uint64_t)[(MRPlaybackSession *)v2 initWithData:a1];
}

uint64_t _MRTextInputTraitsProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        int v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v18 = 0;
              unsigned int v19 = 0;
              uint64_t v20 = 0;
              *(_WORD *)(a1 + 64) |= 4u;
              while (1)
              {
                uint64_t v21 = *v3;
                unint64_t v22 = *(void *)(a2 + v21);
                if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                  break;
                }
                char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
                *(void *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v18 += 7;
                BOOL v14 = v19++ >= 9;
                if (v14)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_100;
                }
              }
              *(unsigned char *)(a2 + *v5) = 1;
LABEL_98:
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v20) = 0;
              }
LABEL_100:
              uint64_t v75 = 48;
              goto LABEL_109;
            case 2u:
              char v24 = 0;
              unsigned int v25 = 0;
              uint64_t v20 = 0;
              *(_WORD *)(a1 + 64) |= 8u;
              while (2)
              {
                uint64_t v26 = *v3;
                unint64_t v27 = *(void *)(a2 + v26);
                if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
                  *(void *)(a2 + v26) = v27 + 1;
                  v20 |= (unint64_t)(v28 & 0x7F) << v24;
                  if (v28 < 0)
                  {
                    v24 += 7;
                    BOOL v14 = v25++ >= 9;
                    if (v14)
                    {
                      LODWORD(v20) = 0;
                      goto LABEL_104;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v20) = 0;
              }
LABEL_104:
              uint64_t v75 = 52;
              goto LABEL_109;
            case 3u:
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v20 = 0;
              *(_WORD *)(a1 + 64) |= 0x10u;
              while (2)
              {
                uint64_t v31 = *v3;
                unint64_t v32 = *(void *)(a2 + v31);
                if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
                  *(void *)(a2 + v31) = v32 + 1;
                  v20 |= (unint64_t)(v33 & 0x7F) << v29;
                  if (v33 < 0)
                  {
                    v29 += 7;
                    BOOL v14 = v30++ >= 9;
                    if (v14)
                    {
                      LODWORD(v20) = 0;
                      goto LABEL_108;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v20) = 0;
              }
LABEL_108:
              uint64_t v75 = 56;
LABEL_109:
              *(_DWORD *)(a1 + v75) = v20;
              goto LABEL_146;
            case 4u:
              char v34 = 0;
              unsigned int v35 = 0;
              uint64_t v36 = 0;
              *(_WORD *)(a1 + 64) |= 0x20u;
              while (2)
              {
                uint64_t v37 = *v3;
                unint64_t v38 = *(void *)(a2 + v37);
                if (v38 == -1 || v38 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
                  *(void *)(a2 + v37) = v38 + 1;
                  v36 |= (unint64_t)(v39 & 0x7F) << v34;
                  if (v39 < 0)
                  {
                    v34 += 7;
                    BOOL v14 = v35++ >= 9;
                    if (v14)
                    {
                      uint64_t v36 = 0;
                      goto LABEL_113;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v36 = 0;
              }
LABEL_113:
              BOOL v76 = v36 != 0;
              uint64_t v77 = 60;
              goto LABEL_126;
            case 5u:
              char v40 = 0;
              unsigned int v41 = 0;
              uint64_t v42 = 0;
              *(_WORD *)(a1 + 64) |= 0x100u;
              while (2)
              {
                uint64_t v43 = *v3;
                unint64_t v44 = *(void *)(a2 + v43);
                if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
                  *(void *)(a2 + v43) = v44 + 1;
                  v42 |= (unint64_t)(v45 & 0x7F) << v40;
                  if (v45 < 0)
                  {
                    v40 += 7;
                    BOOL v14 = v41++ >= 9;
                    if (v14)
                    {
                      uint64_t v42 = 0;
                      goto LABEL_117;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v42 = 0;
              }
LABEL_117:
              BOOL v76 = v42 != 0;
              uint64_t v77 = 63;
              goto LABEL_126;
            case 6u:
              char v46 = 0;
              unsigned int v47 = 0;
              uint64_t v48 = 0;
              *(_WORD *)(a1 + 64) |= 0x40u;
              while (2)
              {
                uint64_t v49 = *v3;
                unint64_t v50 = *(void *)(a2 + v49);
                if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
                  *(void *)(a2 + v49) = v50 + 1;
                  v48 |= (unint64_t)(v51 & 0x7F) << v46;
                  if (v51 < 0)
                  {
                    v46 += 7;
                    BOOL v14 = v47++ >= 9;
                    if (v14)
                    {
                      uint64_t v48 = 0;
                      goto LABEL_121;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v48 = 0;
              }
LABEL_121:
              BOOL v76 = v48 != 0;
              uint64_t v77 = 61;
              goto LABEL_126;
            case 7u:
              char v52 = 0;
              unsigned int v53 = 0;
              uint64_t v54 = 0;
              *(_WORD *)(a1 + 64) |= 0x80u;
              while (2)
              {
                uint64_t v55 = *v3;
                unint64_t v56 = *(void *)(a2 + v55);
                if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
                  *(void *)(a2 + v55) = v56 + 1;
                  v54 |= (unint64_t)(v57 & 0x7F) << v52;
                  if (v57 < 0)
                  {
                    v52 += 7;
                    BOOL v14 = v53++ >= 9;
                    if (v14)
                    {
                      uint64_t v54 = 0;
                      goto LABEL_125;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v54 = 0;
              }
LABEL_125:
              BOOL v76 = v54 != 0;
              uint64_t v77 = 62;
LABEL_126:
              *(unsigned char *)(a1 + v77) = v76;
              goto LABEL_146;
            case 8u:
              char v58 = 0;
              unsigned int v59 = 0;
              uint64_t v60 = 0;
              *(_WORD *)(a1 + 64) |= 2u;
              while (2)
              {
                uint64_t v61 = *v3;
                unint64_t v62 = *(void *)(a2 + v61);
                if (v62 == -1 || v62 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
                  *(void *)(a2 + v61) = v62 + 1;
                  v60 |= (unint64_t)(v63 & 0x7F) << v58;
                  if (v63 < 0)
                  {
                    v58 += 7;
                    BOOL v14 = v59++ >= 9;
                    if (v14)
                    {
                      uint64_t v60 = 0;
                      goto LABEL_130;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v60 = 0;
              }
LABEL_130:
              uint64_t v78 = 40;
              goto LABEL_135;
            case 9u:
              char v64 = 0;
              unsigned int v65 = 0;
              uint64_t v60 = 0;
              *(_WORD *)(a1 + 64) |= 1u;
              while (2)
              {
                uint64_t v66 = *v3;
                unint64_t v67 = *(void *)(a2 + v66);
                if (v67 == -1 || v67 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v68 = *(unsigned char *)(*(void *)(a2 + *v7) + v67);
                  *(void *)(a2 + v66) = v67 + 1;
                  v60 |= (unint64_t)(v68 & 0x7F) << v64;
                  if (v68 < 0)
                  {
                    v64 += 7;
                    BOOL v14 = v65++ >= 9;
                    if (v14)
                    {
                      uint64_t v60 = 0;
                      goto LABEL_134;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v60 = 0;
              }
LABEL_134:
              uint64_t v78 = 32;
LABEL_135:
              *(void *)(a1 + v78) = v60;
              goto LABEL_146;
            case 0xAu:
              if (v16 == 2)
              {
                uint64_t result = PBReaderPlaceMark();
                if (!result) {
                  return result;
                }
                while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
                {
                  char v69 = 0;
                  unsigned int v70 = 0;
                  uint64_t v71 = 0;
                  while (1)
                  {
                    uint64_t v72 = *v3;
                    unint64_t v73 = *(void *)(a2 + v72);
                    if (v73 == -1 || v73 >= *(void *)(a2 + *v4)) {
                      break;
                    }
                    char v74 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
                    *(void *)(a2 + v72) = v73 + 1;
                    v71 |= (unint64_t)(v74 & 0x7F) << v69;
                    if (v74 < 0)
                    {
                      v69 += 7;
                      BOOL v14 = v70++ >= 9;
                      if (!v14) {
                        continue;
                      }
                    }
                    goto LABEL_96;
                  }
                  *(unsigned char *)(a2 + *v5) = 1;
LABEL_96:
                  PBRepeatedUInt64Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v81 = 0;
                while (1)
                {
                  uint64_t v82 = *v3;
                  unint64_t v83 = *(void *)(a2 + v82);
                  if (v83 == -1 || v83 >= *(void *)(a2 + *v4)) {
                    break;
                  }
                  char v84 = *(unsigned char *)(*(void *)(a2 + *v7) + v83);
                  *(void *)(a2 + v82) = v83 + 1;
                  v81 |= (unint64_t)(v84 & 0x7F) << v79;
                  if (v84 < 0)
                  {
                    v79 += 7;
                    BOOL v14 = v80++ >= 9;
                    if (!v14) {
                      continue;
                    }
                  }
                  goto LABEL_145;
                }
                *(unsigned char *)(a2 + *v5) = 1;
LABEL_145:
                PBRepeatedUInt64Add();
              }
LABEL_146:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
            default:
              if (PBReaderSkipValueWithTag()) {
                goto LABEL_146;
              }
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void MRMediaRemotePlaybackSessionSetRequestCallbackForOrigin(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v4 originClientForOrigin:a1];

  [v5 setPlaybackSessionCallback:v3];
}

void MRMediaRemotePlaybackSessionSetMigrateBeginCallbackForOrigin(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v4 originClientForOrigin:a1];

  [v5 setPlaybackSessionMigrateBeginCallback:v3];
}

void MRMediaRemotePlaybackSessionSetMigrateEndCallbackForOrigin(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v4 originClientForOrigin:a1];

  [v5 setPlaybackSessionMigrateEndCallback:v3];
}

uint64_t _MRSetVolumeMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unint64_t v22 = objc_alloc_init(_MRRequestDetailsProtobuf);
        objc_storeStrong((id *)(a1 + 8), v22);
        if (!PBReaderPlaceMark() || (_MRRequestDetailsProtobufReadFrom((uint64_t)v22, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else if (v18 == 2)
      {
        uint64_t v23 = PBReaderReadString();
        char v24 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v23;
      }
      else if (v18 == 1)
      {
        *(unsigned char *)(a1 + 28) |= 1u;
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFFBLL && v20 + 4 <= *(void *)(a2 + *v4))
        {
          int v21 = *(_DWORD *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v21 = 0;
        }
        *(_DWORD *)(a1 + 24) = v21;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRPlaybackSessionResponseMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_MRPlaybackSessionProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark() || !_MRPlaybackSessionProtobufReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void MRTypeAuditNowPlayingInfoDictionary(const __CFDictionary *context)
{
  if (context) {
    CFDictionaryApplyFunction(context, (CFDictionaryApplierFunction)_MRTypeAuditDictionaryApplierFunction, context);
  }
}

void _MRTypeAuditDictionaryApplierFunction(const void *a1, CFTypeRef cf, __CFDictionary *a3)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  if (_MRTypeAuditDictionaryApplierFunction___once != -1) {
    dispatch_once(&_MRTypeAuditDictionaryApplierFunction___once, &__block_literal_global_4);
  }
  CFTypeID v6 = CFGetTypeID(cf);
  id v7 = [(id)_MRTypeAuditDictionaryApplierFunction___propertyToCFTypeMapping objectForKey:a1];
  CFTypeID v8 = [v7 unsignedLongValue];

  if (v8) {
    BOOL v9 = v6 == v8;
  }
  else {
    BOOL v9 = 1;
  }
  if (!v9)
  {
    if (CFStringGetTypeID() != v6
      || (CFTypeID v10 = CFNumberGetTypeID(),
          uint64_t v11 = (uint64_t (*)(CFTypeRef))_MRTypeAuditCreateNumberFromString,
          v10 != v8))
    {
      if (CFNumberGetTypeID() != v6
        || (CFTypeID v12 = CFStringGetTypeID(),
            uint64_t v11 = (uint64_t (*)(CFTypeRef))_MRTypeAuditCreateStringFromNumber,
            v12 != v8))
      {
        if (CFURLGetTypeID() != v6
          || (CFTypeID v13 = CFStringGetTypeID(),
              uint64_t v11 = (uint64_t (*)(CFTypeRef))_MRTypeAuditCreateStringFromURL,
              v13 != v8))
        {
          if (CFNumberGetTypeID() != v6
            || (CFTypeID v14 = CFBooleanGetTypeID(),
                uint64_t v11 = (uint64_t (*)(CFTypeRef))_MRTypeAuditCreateBooleanFromNumber,
                v14 != v8))
          {
            if (CFBooleanGetTypeID() != v6) {
              goto LABEL_19;
            }
            CFTypeID TypeID = CFNumberGetTypeID();
            uint64_t v11 = (uint64_t (*)(CFTypeRef))_MRTypeAuditCreateNumberFromBoolean;
            if (TypeID != v8) {
              goto LABEL_19;
            }
          }
        }
      }
    }
    int v16 = (__CFString *)v11(cf);
    if (v16)
    {
      uint64_t v17 = v16;
      CFDictionarySetValue(a3, a1, v16);
    }
    else
    {
LABEL_19:
      uint64_t v17 = (__CFString *)CFCopyTypeIDDescription(v6);
      unint64_t v18 = (__CFString *)CFCopyTypeIDDescription(v8);
      uint64_t v19 = _MRLogForCategory(0);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        int v20 = 138543874;
        int v21 = a1;
        __int16 v22 = 2114;
        uint64_t v23 = v17;
        __int16 v24 = 2114;
        unsigned int v25 = v18;
        _os_log_error_impl(&dword_194F3C000, v19, OS_LOG_TYPE_ERROR, "WARNING: Unexpected type for now playing key %{public}@ (is %{public}@, should be %{public}@). Removing from now playing info dictionary.", (uint8_t *)&v20, 0x20u);
      }

      CFDictionaryRemoveValue(a3, a1);
    }
  }
}

uint64_t _MRTypeAuditCreateNumberFromString(uint64_t a1)
{
  if (_MRTypeAuditCreateNumberFromString_onceToken != -1) {
    dispatch_once(&_MRTypeAuditCreateNumberFromString_onceToken, &__block_literal_global_3);
  }
  [(id)_MRTypeAuditCreateNumberFromString_numberFormatter numberFromString:a1];
  return objc_claimAutoreleasedReturnValue();
}

CFStringRef _MRTypeAuditCreateStringFromNumber(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"%@", a1);
}

CFStringRef _MRTypeAuditCreateStringFromURL(const __CFURL *a1)
{
  CFAllocatorRef v1 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFStringRef v2 = CFURLGetString(a1);

  return CFStringCreateCopy(v1, v2);
}

uint64_t _MRTypeAuditCreateBooleanFromNumber(const __CFNumber *a1)
{
  int valuePtr = 0;
  CFNumberGetValue(a1, kCFNumberIntType, &valuePtr);
  if (valuePtr) {
    uint64_t v1 = MEMORY[0x1E4F1CFD0];
  }
  else {
    uint64_t v1 = MEMORY[0x1E4F1CFC8];
  }
  return *(void *)v1;
}

CFNumberRef _MRTypeAuditCreateNumberFromBoolean(const __CFBoolean *a1)
{
  BOOL valuePtr = CFBooleanGetValue(a1) != 0;
  return CFNumberCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], kCFNumberIntType, &valuePtr);
}

void sub_194FE3A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_194FE3E88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FE4278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194FE4534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_194FE48B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_194FE4A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FE4C0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

BOOL _MRGroupSessionMemberSyncMessageProtobufReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        unint64_t v18 = objc_alloc_init(_MRUserIdentityProtobuf);
        [a1 addMembers:v18];
        if (!PBReaderPlaceMark() || (_MRUserIdentityProtobufReadFrom((uint64_t)v18, a2) & 1) == 0)
        {
LABEL_33:

          return 0;
        }
        goto LABEL_28;
      }
      if (v17 == 1)
      {
        unint64_t v18 = objc_alloc_init(_MRGroupSessionParticipantProtobuf);
        [a1 addParticipants:v18];
        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_30:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_MRGroupSessionParticipantProtobuf);
    [a1 addPendingParticipants:v18];
LABEL_23:
    if (!PBReaderPlaceMark() || (_MRGroupSessionParticipantProtobufReadFrom((uint64_t)v18, a2) & 1) == 0) {
      goto LABEL_33;
    }
LABEL_28:
    PBReaderRecallMark();

    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_194FE6B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194FE6CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_194FE6FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _MRSendHIDEventMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        unint64_t v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MRAudioBufferCreate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [MRAudioBuffer alloc];

  return (uint64_t)[(MRAudioBuffer *)v7 initWithFormatSettings:a2 packetCapacity:a3 maximumPacketSize:a4];
}

uint64_t MRAudioBufferGetPacketCapacity(void *a1)
{
  uint64_t v1 = [a1 buffer];
  uint64_t v2 = [v1 packetCapacity];

  return v2;
}

uint64_t MRAudioBufferGetPacketCount(void *a1)
{
  uint64_t v1 = [a1 buffer];
  uint64_t v2 = [v1 packetCount];

  return v2;
}

void MRAudioBufferSetPacketCount(void *a1, uint64_t a2)
{
  id v3 = [a1 buffer];
  [v3 setPacketCount:a2];
}

uint64_t MRAudioBufferGetMutableContentsPtr(void *a1)
{
  uint64_t v1 = [a1 buffer];
  uint64_t v2 = [v1 data];

  return v2;
}

uint64_t MRAudioBufferGetMutablePacketDescriptionsArrayPtr(void *a1)
{
  uint64_t v1 = [a1 buffer];
  uint64_t v2 = [v1 packetDescriptions];

  return v2;
}

id MRLogCategoryConnections()
{
  if (MRLogCategoryConnections__once != -1) {
    dispatch_once(&MRLogCategoryConnections__once, &__block_literal_global_6);
  }
  id v0 = (void *)MRLogCategoryConnections__log;

  return v0;
}

uint64_t __MRLogCategoryConnections_block_invoke()
{
  MRLogCategoryConnections__log = (uint64_t)os_log_create("com.apple.amp.mediaremote", "Connections");

  return MEMORY[0x1F41817F8]();
}

uint64_t __MRLogCategoryDiscovery_block_invoke()
{
  MRLogCategoryDiscovery__log = (uint64_t)os_log_create("com.apple.amp.mediaremote", "Discovery");

  return MEMORY[0x1F41817F8]();
}

id MRLogCategoryDiscoveryOversize()
{
  if (MRLogCategoryDiscoveryOversize__once != -1) {
    dispatch_once(&MRLogCategoryDiscoveryOversize__once, &__block_literal_global_6);
  }
  id v0 = (void *)MRLogCategoryDiscoveryOversize__log;

  return v0;
}

uint64_t __MRLogCategoryDiscoveryOversize_block_invoke()
{
  MRLogCategoryDiscoveryOversize__log = (uint64_t)os_log_create("com.apple.amp.mediaremote", "DiscoveryOversize");

  return MEMORY[0x1F41817F8]();
}

id MRLogCategoryMigrationOversize()
{
  if (MRLogCategoryMigrationOversize__once != -1) {
    dispatch_once(&MRLogCategoryMigrationOversize__once, &__block_literal_global_9);
  }
  id v0 = (void *)MRLogCategoryMigrationOversize__log;

  return v0;
}

uint64_t __MRLogCategoryMigrationOversize_block_invoke()
{
  MRLogCategoryMigrationOversize__log = (uint64_t)os_log_create("com.apple.amp.mediaremote", "MigrationOversize");

  return MEMORY[0x1F41817F8]();
}

id MRLogCategoryOutputContextUpdates()
{
  if (MRLogCategoryOutputContextUpdates_onceToken != -1) {
    dispatch_once(&MRLogCategoryOutputContextUpdates_onceToken, &__block_literal_global_14);
  }
  id v0 = (void *)MRLogCategoryOutputContextUpdates_log;

  return v0;
}

uint64_t __MRLogCategoryOutputContextUpdates_block_invoke()
{
  MRLogCategoryOutputContextUpdates_log = (uint64_t)os_log_create("com.apple.amp.mediaremote.verbose", "OutputContext");

  return MEMORY[0x1F41817F8]();
}

void sub_194FEAF3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FEB054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FEB19C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FEB35C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FEB9D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 240), 8);
  _Unwind_Resume(a1);
}

id initValAVOutputDeviceCommunicationChannelControlTypeRelayed()
{
  if (AVFoundationLibrary_sOnce != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce, &__block_literal_global_9);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib, "AVOutputDeviceCommunicationChannelControlTypeRelayed");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCommunicationChannelControlTypeRelayed, *v0);
  }
  getAVOutputDeviceCommunicationChannelControlTypeRelayed = (uint64_t)AVOutputDeviceCommunicationChannelControlTypeRelayedFunction;
  uint64_t v1 = (void *)constantValAVOutputDeviceCommunicationChannelControlTypeRelayed;

  return v1;
}

id AVOutputDeviceCommunicationChannelControlTypeRelayedFunction()
{
  return (id)constantValAVOutputDeviceCommunicationChannelControlTypeRelayed;
}

id initValAVOutputDeviceCommunicationChannelControlTypeDirect()
{
  if (AVFoundationLibrary_sOnce != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce, &__block_literal_global_9);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib, "AVOutputDeviceCommunicationChannelControlTypeDirect");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCommunicationChannelControlTypeDirect, *v0);
  }
  getAVOutputDeviceCommunicationChannelControlTypeDirect = (uint64_t)AVOutputDeviceCommunicationChannelControlTypeDirectFunction;
  uint64_t v1 = (void *)constantValAVOutputDeviceCommunicationChannelControlTypeDirect;

  return v1;
}

id AVOutputDeviceCommunicationChannelControlTypeDirectFunction()
{
  return (id)constantValAVOutputDeviceCommunicationChannelControlTypeDirect;
}

id initValAVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired()
{
  if (AVFoundationLibrary_sOnce != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce, &__block_literal_global_9);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib, "AVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired, *v0);
  }
  getAVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired = (uint64_t (*)())AVOutputDeviceCommunicationChannelOptionCancelIfAuthRequiredFunction;
  uint64_t v1 = (void *)constantValAVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired;

  return v1;
}

id AVOutputDeviceCommunicationChannelOptionCancelIfAuthRequiredFunction()
{
  return (id)constantValAVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired;
}

id initValAVOutputDeviceCommunicationChannelOptionControlType()
{
  if (AVFoundationLibrary_sOnce != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce, &__block_literal_global_9);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib, "AVOutputDeviceCommunicationChannelOptionControlType");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCommunicationChannelOptionControlType, *v0);
  }
  getAVOutputDeviceCommunicationChannelOptionControlType = (uint64_t (*)())AVOutputDeviceCommunicationChannelOptionControlTypeFunction;
  uint64_t v1 = (void *)constantValAVOutputDeviceCommunicationChannelOptionControlType;

  return v1;
}

id AVOutputDeviceCommunicationChannelOptionControlTypeFunction()
{
  return (id)constantValAVOutputDeviceCommunicationChannelOptionControlType;
}

id initValAVOutputDeviceCommunicationChannelOptionCorrelationID()
{
  if (AVFoundationLibrary_sOnce != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce, &__block_literal_global_9);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib, "AVOutputDeviceCommunicationChannelOptionCorrelationID");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCommunicationChannelOptionCorrelationID, *v0);
  }
  getAVOutputDeviceCommunicationChannelOptionCorrelationID = (uint64_t (*)())AVOutputDeviceCommunicationChannelOptionCorrelationIDFunction;
  uint64_t v1 = (void *)constantValAVOutputDeviceCommunicationChannelOptionCorrelationID;

  return v1;
}

id AVOutputDeviceCommunicationChannelOptionCorrelationIDFunction()
{
  return (id)constantValAVOutputDeviceCommunicationChannelOptionCorrelationID;
}

id initValAVOutputDeviceCommunicationChannelOptionInitiator()
{
  if (AVFoundationLibrary_sOnce != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce, &__block_literal_global_9);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib, "AVOutputDeviceCommunicationChannelOptionInitiator");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCommunicationChannelOptionInitiator, *v0);
  }
  getAVOutputDeviceCommunicationChannelOptionInitiator = (uint64_t (*)())AVOutputDeviceCommunicationChannelOptionInitiatorFunction;
  uint64_t v1 = (void *)constantValAVOutputDeviceCommunicationChannelOptionInitiator;

  return v1;
}

id AVOutputDeviceCommunicationChannelOptionInitiatorFunction()
{
  return (id)constantValAVOutputDeviceCommunicationChannelOptionInitiator;
}

id initValAVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate()
{
  if (AVFoundationLibrary_sOnce != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce, &__block_literal_global_9);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib, "AVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate, *v0);
  }
  getAVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate = (uint64_t (*)())AVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegateFunction;
  uint64_t v1 = (void *)constantValAVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate;

  return v1;
}

id AVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegateFunction()
{
  return (id)constantValAVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate;
}

id initValAVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped()
{
  if (AVFoundationLibrary_sOnce != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce, &__block_literal_global_9);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib, "AVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped, *v0);
  }
  getAVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped = (uint64_t (*)())AVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkippedFunction;
  uint64_t v1 = (void *)constantValAVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped;

  return v1;
}

id AVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkippedFunction()
{
  return (id)constantValAVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped;
}

uint64_t MRMediaRemoteSetCanBeNowPlayingApplication(int a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = @"YES";
    if (!a1) {
      id v3 = @"NO";
    }
    int v11 = 138412290;
    unint64_t v12 = v3;
    _os_log_impl(&dword_194F3C000, v2, OS_LOG_TYPE_DEFAULT, "[MRNowPlaying] MRMediaRemoteSetCanBeNowPlayingApplication set to %@", (uint8_t *)&v11, 0xCu);
  }

  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v4 clientForPlayerPath:0];

  LODWORD(v4) = [v5 canBeNowPlaying];
  [v5 setCanBeNowPlaying:a1 != 0];
  if (v4 != [v5 canBeNowPlaying])
  {
    CFTypeID v6 = [(Class)getAVSystemControllerClass[0]() sharedAVSystemController];
    id v7 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v5, "canBeNowPlaying"));
    char v8 = getAVSystemController_CanBeNowPlayingAppAttribute[0]();
    [v6 setAttribute:v7 forKey:v8 error:0];
  }
  unsigned int v9 = (void *)MRGetSharedService();
  MRMediaRemoteServiceSetCanBeNowPlayingApp(v9, a1 != 0, 0.0);

  return 1;
}

uint64_t MRMediaRemoteSetNowPlayingApplicationOverrideEnabled(int a1)
{
  uint64_t v2 = +[MRNowPlayingOriginClientManager sharedManager];
  id v3 = [v2 localOriginClient];

  if ([v3 isOverrideApp] != a1)
  {
    [v3 setOverrideAppBundleID:0];
    BOOL v4 = a1 != 0;
    [v3 setOverrideApp:v4];
    id v5 = (void *)MRGetSharedService();
    MRMediaRemoteServiceSetNowPlayingAppOverride(v5, v4);
  }

  return 1;
}

uint64_t MRMediaRemoteSetOverriddenNowPlayingApplication(id a1)
{
  uint64_t v2 = +[MRNowPlayingOriginClientManager sharedManager];
  id v3 = [v2 localOriginClient];

  id v4 = [v3 overrideAppBundleID];
  if (v4 == a1)
  {
  }
  else
  {
    id v5 = v4;
    char v6 = [v4 isEqual:a1];

    if ((v6 & 1) == 0)
    {
      [v3 setOverrideApp:0];
      [v3 setOverrideAppBundleID:a1];
      id v7 = (void *)MRGetSharedService();
      MRMediaRemoteServiceSetOverriddenNowPlayingApplication(v7, a1);
    }
  }

  return 0;
}

void MRMediaRemoteSetNowPlayingClientForOrigin(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v13 = a3;
  if (!v13)
  {
    id v13 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = a4;
  unsigned int v9 = +[MRNowPlayingOriginClientManager sharedManager];
  unint64_t v10 = [v9 originClientForOrigin:a2];

  [v10 setActiveNowPlayingClient:a1];
  int v11 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  unint64_t v12 = (void *)MRGetSharedService();
  MRMediaRemoteServiceSetNowPlayingClient(v12, v11, v13, v8);
}

void MRMediaRemoteGetNowPlayingClient(void *a1, void *a2)
{
}

void MRMediaRemoteGetNowPlayingClientForOrigin(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  if (!v9)
  {
    id v9 = (id)MEMORY[0x1E4F14428];
    id v5 = MEMORY[0x1E4F14428];
  }
  id v6 = a3;
  id v7 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v8 = (void *)MRGetSharedService();
  MRMediaRemoteServiceGetNowPlayingClient(v8, v7, v9, v6);
}

void MRMediaRemoteSetNowPlayingPlayerIfPossible(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    id v5 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = a1;
  id v9 = +[MRNowPlayingOriginClientManager sharedManager];
  unint64_t v10 = [v9 clientForPlayerPath:v8];

  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = __MRMediaRemoteSetNowPlayingPlayerIfPossible_block_invoke;
  v13[3] = &unk_1E57D0DE0;
  id v14 = v5;
  id v15 = v6;
  id v11 = v5;
  id v12 = v6;
  [v10 requestActiveForPlayerPath:v8 completion:v13];
}

void __MRMediaRemoteSetNowPlayingPlayerIfPossible_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 40);
  if (v4)
  {
    id v5 = *(NSObject **)(a1 + 32);
    v6[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    void v6[2] = __MRMediaRemoteSetNowPlayingPlayerIfPossible_block_invoke_2;
    v6[3] = &unk_1E57D0DB8;
    id v8 = v4;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t __MRMediaRemoteSetNowPlayingPlayerIfPossible_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void MRMediaRemoteGetPictureInPictureStatusForPlayer(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    id v5 = MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = a1;
  if ([v8 isLocal])
  {
    id v9 = +[MRNowPlayingOriginClientManager sharedManager];
    unint64_t v10 = [v9 playerClientForPlayerPath:v8];

    char v11 = [v10 isPictureInPictureEnabled];
    v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    void v13[2] = __MRMediaRemoteGetPictureInPictureStatusForPlayer_block_invoke;
    v13[3] = &unk_1E57D0E08;
    id v14 = v6;
    char v15 = v11;
    dispatch_async(v5, v13);

    id v8 = v10;
  }
  else
  {
    id v12 = (void *)MRGetSharedService();
    MRMediaRemoteServiceGetPictureInPictureEnabledForPlayer(v12, v8, v5, v6);
  }
}

uint64_t __MRMediaRemoteGetPictureInPictureStatusForPlayer_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, *(unsigned __int8 *)(a1 + 40), 0);
  }
  return result;
}

void MRMediaRemoteSetPictureInPictureStatusForPlayer(void *a1, BOOL a2, void *a3, void *a4)
{
  id v15 = a3;
  if (!v15)
  {
    id v15 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = a1;
  id v9 = a4;
  unint64_t v10 = +[MRNowPlayingOriginClientManager sharedManager];
  char v11 = [v10 playerClientForPlayerPath:v8];

  [v11 setPictureInPictureEnabled:a2];
  id v12 = (void *)MRGetSharedService();
  MRMediaRemoteServiceSetPictureInPictureEnabledForPlayer(v12, v8, a2, v15, v9);

  id v13 = +[MRNowPlayingOriginClientManager sharedManager];
  id v14 = [v13 clientForPlayerPath:v8];

  [v14 reevaluateActivePlayerWithReason:@"Change in pip state" completion:0];
}

BOOL MRMediaRemoteCanBecomeActivePlayer(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[MRNowPlayingOriginClientManager sharedManager];
  id v3 = [v2 playerClientForPlayerPath:v1];

  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v4 clientForPlayerPath:v1];

  id v6 = [v5 playerClients];
  unint64_t v7 = [v6 count];

  if (v7 < 2) {
    goto LABEL_6;
  }
  id v8 = [v3 playerPath];
  id v9 = [v8 player];
  unint64_t v10 = +[MRPlayer defaultPlayer];
  char v11 = [v9 isEqual:v10];

  if ((v11 & 1) == 0)
  {
    if ([v3 isPictureInPictureEnabled])
    {
      id v13 = [v5 playerClients];
      BOOL v12 = [v13 count] == 2;

      goto LABEL_7;
    }
LABEL_6:
    BOOL v12 = 1;
    goto LABEL_7;
  }
  BOOL v12 = 0;
LABEL_7:

  return v12;
}

void *MRMediaRemoteGetPlayerPathForMXSessionIDFromLocalClient(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = +[MRNowPlayingOriginClientManager sharedManager];
  id v3 = [v2 localOriginClient];

  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  __int16 v24 = v3;
  id v4 = [v3 nowPlayingClients];
  uint64_t v21 = [v4 countByEnumeratingWithState:&v29 objects:v34 count:16];
  if (v21)
  {
    uint64_t v5 = *(void *)v30;
    uint64_t v23 = v4;
    uint64_t v20 = *(void *)v30;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v30 != v5) {
          objc_enumerationMutation(v4);
        }
        uint64_t v22 = v6;
        unint64_t v7 = *(void **)(*((void *)&v29 + 1) + 8 * v6);
        long long v25 = 0u;
        long long v26 = 0u;
        long long v27 = 0u;
        long long v28 = 0u;
        id v8 = [v7 playerClients];
        uint64_t v9 = [v8 countByEnumeratingWithState:&v25 objects:v33 count:16];
        if (v9)
        {
          uint64_t v10 = v9;
          uint64_t v11 = *(void *)v26;
          while (2)
          {
            for (uint64_t i = 0; i != v10; ++i)
            {
              if (*(void *)v26 != v11) {
                objc_enumerationMutation(v8);
              }
              id v13 = *(void **)(*((void *)&v25 + 1) + 8 * i);
              id v14 = [v13 playerPath];
              id v15 = [v14 player];
              int v16 = [v15 mxSessionIDs];
              char v17 = [v16 containsObject:a1];

              if (v17)
              {
                unint64_t v18 = [v13 playerPath];

                id v4 = v23;
                goto LABEL_19;
              }
            }
            uint64_t v10 = [v8 countByEnumeratingWithState:&v25 objects:v33 count:16];
            if (v10) {
              continue;
            }
            break;
          }
        }

        uint64_t v6 = v22 + 1;
        id v4 = v23;
        uint64_t v5 = v20;
      }
      while (v22 + 1 != v21);
      unint64_t v18 = 0;
      uint64_t v21 = [v23 countByEnumeratingWithState:&v29 objects:v34 count:16];
    }
    while (v21);
  }
  else
  {
    unint64_t v18 = 0;
  }
LABEL_19:

  return v18;
}

void MRMediaRemoteSetMXSessionIDForPlayer(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a4;
  id v10 = a3;
  uint64_t v9 = [v7 player];
  [v9 setMxSessionIDs:a2];

  MRMediaRemoteUpdatePlayerProperties(v7, v10, v8);
}

void MRMediaRemoteUpdatePlayerProperties(void *a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  id v6 = a1;
  id v7 = [v6 player];

  if (!v7)
  {
    BOOL v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteUpdatePlayerProperties(MRNowPlayingPlayerPathRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))");
    [v12 handleFailureInFunction:v13, @"MRNowPlaying.m", 790, @"Invalid parameter not satisfying: %@", @"playerPath.player" file lineNumber description];
  }
  id v8 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v9 = [v8 playerClientForPlayerPath:v6];

  [v9 updatePlayer:v6];
  id v10 = (void *)MRGetSharedService();
  if (v14) {
    uint64_t v11 = v14;
  }
  else {
    uint64_t v11 = (void *)MEMORY[0x1E4F14428];
  }
  MRMediaRemoteServiceUpdatePlayerProperties(v10, v6, v11, v5);
}

void MRMediaRemoteSetAVAudioSessionOpaqueSessionIDForPlayer(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a4;
  id v10 = a3;
  uint64_t v9 = [v7 player];
  [v9 setAudioSessionID:a2];

  MRMediaRemoteUpdatePlayerProperties(v7, v10, v8);
}

void MRMediaRemoteGetNowPlayingPlayer(void *a1, void *a2)
{
}

void MRMediaRemoteGetNowPlayingPlayerForClient(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v11 = a3;
  if (!v11)
  {
    id v11 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = a4;
  uint64_t v9 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  id v10 = (void *)MRGetSharedService();
  MRMediaRemoteServiceGetNowPlayingPlayer(v10, v9, v11, v8);
}

void MRMediaRemoteGetActivePlayerPathsForOrigin(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  if (!v7)
  {
    id v7 = (id)MEMORY[0x1E4F14428];
    id v4 = MEMORY[0x1E4F14428];
  }
  id v5 = a3;
  id v6 = (void *)MRGetSharedService();
  MRMediaRemoteServiceGetActivePlayerPathsForLocalOrigin(v6, v7, v5);
}

void MRMediaRemoteGetNowPlayingClients(void *a1, void *a2)
{
  id v6 = a1;
  if (!v6)
  {
    id v6 = (id)MEMORY[0x1E4F14428];
    id v3 = MEMORY[0x1E4F14428];
  }
  id v4 = a2;
  id v5 = +[MROrigin localOrigin];
  MRMediaRemoteGetNowPlayingClientsForOrigin((uint64_t)v5, v6, v4);
}

void MRMediaRemoteGetNowPlayingClientsForOrigin(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  if (!v9)
  {
    id v9 = (id)MEMORY[0x1E4F14428];
    id v5 = MEMORY[0x1E4F14428];
  }
  id v6 = a3;
  id v7 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v8 = (void *)MRGetSharedService();
  MRMediaRemoteServiceGetNowPlayingClients(v8, v7, v9, v6);
}

void MRMediaRemoteRemoveClientForOrigin(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v14 = a3;
  if (!v14)
  {
    id v14 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = a4;
  id v9 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  id v10 = +[MRPlayerPath localResolvedPlayerPathFromPlayerPath:v9];
  id v11 = +[MRNowPlayingOriginClientManager sharedManager];
  BOOL v12 = [v11 originClientForPlayerPath:v10];

  [v12 removeClient:v10];
  id v13 = (void *)MRGetSharedService();
  MRMediaRemoteServiceRemoveClient(v13, v9, v14, v8);
}

void MRMediaRemoteGetPlayers(void *a1, void *a2)
{
}

void MRMediaRemoteGetPlayersForClient(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v11 = a3;
  if (!v11)
  {
    id v11 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = a4;
  id v9 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  id v10 = (void *)MRGetSharedService();
  MRMediaRemoteServiceGetNowPlayingPlayers(v10, v9, v11, v8);
}

void MRMediaRemoteRemovePlayer(void *a1, void *a2, void *a3)
{
  id v11 = a2;
  if (!v11)
  {
    id v11 = (id)MEMORY[0x1E4F14428];
    id v5 = MEMORY[0x1E4F14428];
  }
  id v6 = a3;
  id v7 = +[MRPlayerPath localResolvedPlayerPathFromPlayerPath:a1];
  id v8 = +[MRNowPlayingOriginClientManager sharedManager];
  id v9 = [v8 clientForPlayerPath:v7];

  [v9 removePlayer:v7];
  id v10 = (void *)MRGetSharedService();
  MRMediaRemoteServiceRemovePlayer(v10, a1, v11, v6);
}

void MRMediaRemoteGetClientProperties(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  if (v8)
  {
    if (v7) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v23 = [MEMORY[0x1E4F28B00] currentHandler];
  __int16 v24 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteGetClientProperties(MRNowPlayingClientRef, MROriginRef, __strong dispatch_queue_t, void (^__strong)(MRNowPlayingClientRef))");
  [v23 handleFailureInFunction:v24, @"MRNowPlaying.m", 556, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

  if (!v7)
  {
LABEL_3:
    id v7 = (id)MEMORY[0x1E4F14428];
    id v9 = MEMORY[0x1E4F14428];
  }
LABEL_4:
  id v10 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  id v11 = [MEMORY[0x1E4F1C9C8] date];
  BOOL v12 = [MEMORY[0x1E4F29128] UUID];
  id v13 = [v12 UUIDString];

  id v14 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"clientProperties", v13];
  id v15 = v14;
  if (v10) {
    [v14 appendFormat:@" for %@", v10];
  }
  int v16 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    long long v32 = v15;
    _os_log_impl(&dword_194F3C000, v16, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  char v17 = +[MRMediaRemoteServiceClient sharedServiceClient];
  unint64_t v18 = [v17 workerQueue];
  v25[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v25[1] = 3221225472;
  v25[2] = __MRMediaRemoteGetClientProperties_block_invoke;
  v25[3] = &unk_1E57D0E58;
  long long v26 = @"clientProperties";
  id v27 = v13;
  id v28 = v11;
  id v29 = v7;
  id v30 = v8;
  id v19 = v8;
  id v20 = v7;
  id v21 = v11;
  id v22 = v13;
  MRMediaRemoteNowPlayingResolvePlayerPath(v10, v18, v25);
}

void __MRMediaRemoteGetClientProperties_block_invoke(id *a1, void *a2, uint64_t Error)
{
  id v5 = a2;
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  unint64_t v18 = __MRMediaRemoteGetClientProperties_block_invoke_2;
  id v19 = &unk_1E57D0E30;
  id v6 = v5;
  id v20 = v6;
  id v21 = a1[4];
  id v22 = a1[5];
  id v23 = a1[6];
  id v24 = a1[7];
  id v25 = a1[8];
  id v7 = (void (**)(void, void, void))MEMORY[0x1997190F0](&v16);
  id v8 = objc_msgSend(v6, "client", v16, v17, v18, v19);

  if (v8)
  {
    if ([v6 isLocal])
    {
      id v9 = +[MRNowPlayingOriginClientManager sharedManager];
      id v10 = [v9 clientForPlayerPath:v6];

      id v11 = [v10 playerPath];
      BOOL v12 = [v11 client];
      ((void (**)(void, void *, void))v7)[2](v7, v12, 0);
    }
    else
    {
      id v13 = [v6 client];
      int v14 = [v13 processIdentifier];

      if (v14)
      {
        id v15 = +[MRNowPlayingOriginClientManager sharedManager];
        id v10 = [v15 clientRequestsForPlayerPath:v6];

        [v10 handleClientPropertiesRequestWithCompletion:v7];
      }
      else
      {
        id v10 = [v6 client];
        ((void (**)(void, void *, void))v7)[2](v7, v10, 0);
      }
    }
  }
  else
  {
    if (Error)
    {
      id v10 = 0;
    }
    else
    {
      uint64_t Error = MRMediaRemoteNowPlayingPlayerPathCreateError(v6);
      id v10 = (void *)Error;
    }
    v7[2](v7, 0, Error);
  }
}

void __MRMediaRemoteGetClientProperties_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = _MRLogForCategory(0xAuLL);
  id v9 = v8;
  if (v5 && !v6)
  {
    BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v10)
      {
        uint64_t v12 = *(void *)(a1 + 40);
        uint64_t v11 = *(void *)(a1 + 48);
        uint64_t v13 = *(void *)(a1 + 32);
        int v14 = [MEMORY[0x1E4F1C9C8] date];
        [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
        *(_DWORD *)long long buf = 138544386;
        uint64_t v42 = v12;
        __int16 v43 = 2114;
        uint64_t v44 = v11;
        __int16 v45 = 2112;
        id v46 = v5;
        __int16 v47 = 2114;
        uint64_t v48 = v13;
        __int16 v49 = 2048;
        uint64_t v50 = v15;
        uint64_t v16 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
        uint64_t v17 = v9;
        uint32_t v18 = 52;
LABEL_16:
        _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, v16, buf, v18);
        goto LABEL_17;
      }
      goto LABEL_22;
    }
    if (!v10) {
      goto LABEL_22;
    }
    uint64_t v29 = *(void *)(a1 + 40);
    uint64_t v30 = *(void *)(a1 + 48);
    int v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
    *(_DWORD *)long long buf = 138544130;
    uint64_t v42 = v29;
    __int16 v43 = 2114;
    uint64_t v44 = v30;
    __int16 v45 = 2112;
    id v46 = v5;
    __int16 v47 = 2048;
    uint64_t v48 = v31;
    uint64_t v16 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
LABEL_15:
    uint64_t v17 = v9;
    uint32_t v18 = 42;
    goto LABEL_16;
  }
  if (v6)
  {
    BOOL v19 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
    if (v7)
    {
      if (v19)
      {
        uint64_t v21 = *(void *)(a1 + 40);
        uint64_t v20 = *(void *)(a1 + 48);
        uint64_t v22 = *(void *)(a1 + 32);
        int v14 = [MEMORY[0x1E4F1C9C8] date];
        [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
        *(_DWORD *)long long buf = 138544386;
        uint64_t v42 = v21;
        __int16 v43 = 2114;
        uint64_t v44 = v20;
        __int16 v45 = 2114;
        id v46 = v6;
        __int16 v47 = 2114;
        uint64_t v48 = v22;
        __int16 v49 = 2048;
        uint64_t v50 = v23;
        _os_log_error_impl(&dword_194F3C000, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
LABEL_17:

        goto LABEL_22;
      }
    }
    else if (v19)
    {
      __MRMediaRemoteGetClientProperties_block_invoke_2_cold_1();
    }
    goto LABEL_22;
  }
  BOOL v24 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (!v7)
  {
    if (!v24) {
      goto LABEL_22;
    }
    uint64_t v32 = *(void *)(a1 + 40);
    uint64_t v33 = *(void *)(a1 + 48);
    int v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
    *(_DWORD *)long long buf = 138543874;
    uint64_t v42 = v32;
    __int16 v43 = 2114;
    uint64_t v44 = v33;
    __int16 v45 = 2048;
    id v46 = v34;
    uint64_t v16 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
    uint64_t v17 = v9;
    uint32_t v18 = 32;
    goto LABEL_16;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(a1 + 40);
    uint64_t v25 = *(void *)(a1 + 48);
    id v27 = *(void **)(a1 + 32);
    int v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
    *(_DWORD *)long long buf = 138544130;
    uint64_t v42 = v26;
    __int16 v43 = 2114;
    uint64_t v44 = v25;
    __int16 v45 = 2114;
    id v46 = v27;
    __int16 v47 = 2048;
    uint64_t v48 = v28;
    uint64_t v16 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
    goto LABEL_15;
  }
LABEL_22:

  v38[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v38[1] = 3221225472;
  v38[2] = __MRMediaRemoteGetClientProperties_block_invoke_532;
  v38[3] = &unk_1E57D0DB8;
  uint64_t v35 = *(NSObject **)(a1 + 64);
  id v36 = *(id *)(a1 + 72);
  id v39 = v5;
  id v40 = v36;
  id v37 = v5;
  dispatch_async(v35, v38);
}

uint64_t __MRMediaRemoteGetClientProperties_block_invoke_532(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void MRMediaRemoteSetClientProperties(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  if (!a1)
  {
    uint64_t v25 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v26 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteSetClientProperties(MRNowPlayingClientRef, MROriginRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))");
    [v25 handleFailureInFunction:v26, @"MRNowPlaying.m", 601, @"Invalid parameter not satisfying: %@", @"client" file lineNumber description];
  }
  id v9 = [MEMORY[0x1E4F29128] UUID];
  BOOL v10 = [v9 UUIDString];

  uint64_t v11 = [MEMORY[0x1E4F1C9C8] date];
  uint64_t v12 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  uint64_t v13 = +[MRNowPlayingOriginClientManager sharedManager];
  int v14 = [v13 clientForPlayerPath:v12];

  [v14 setClient:a1];
  uint64_t v15 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"setClientProperties", v10];
  uint64_t v16 = v15;
  if (a1) {
    [v15 appendFormat:@" for %@", a1];
  }
  uint64_t v17 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v33 = v16;
    _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  uint32_t v18 = (void *)MRGetSharedService();
  BOOL v19 = v7;
  if (!v7)
  {
    BOOL v19 = (void *)MEMORY[0x1E4F14428];
    id v20 = MEMORY[0x1E4F14428];
  }
  v27[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v27[1] = 3221225472;
  v27[2] = __MRMediaRemoteSetClientProperties_block_invoke;
  v27[3] = &unk_1E57D0E80;
  uint64_t v28 = v12;
  id v29 = v10;
  id v30 = v11;
  id v31 = v8;
  id v21 = v8;
  id v22 = v11;
  id v23 = v10;
  BOOL v24 = v12;
  MRMediaRemoteServiceSetClientProperties(v18, v24, v19, v27);
  if (!v7) {
}
  }

uint64_t __MRMediaRemoteSetClientProperties_block_invoke(void *a1, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a1[4];
  id v5 = _MRLogForCategory(0xAuLL);
  id v6 = v5;
  if (!a2)
  {
    BOOL v12 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (!v12) {
        goto LABEL_14;
      }
      uint64_t v14 = a1[4];
      uint64_t v13 = a1[5];
      BOOL v10 = [MEMORY[0x1E4F1C9C8] date];
      [v10 timeIntervalSinceDate:a1[6]];
      int v22 = 138544130;
      id v23 = @"setClientProperties";
      __int16 v24 = 2114;
      uint64_t v25 = v13;
      __int16 v26 = 2114;
      uint64_t v27 = v14;
      __int16 v28 = 2048;
      uint64_t v29 = v15;
      uint64_t v16 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      uint64_t v17 = v6;
      uint32_t v18 = 42;
    }
    else
    {
      if (!v12) {
        goto LABEL_14;
      }
      uint64_t v19 = a1[5];
      BOOL v10 = [MEMORY[0x1E4F1C9C8] date];
      [v10 timeIntervalSinceDate:a1[6]];
      int v22 = 138543874;
      id v23 = @"setClientProperties";
      __int16 v24 = 2114;
      uint64_t v25 = v19;
      __int16 v26 = 2048;
      uint64_t v27 = v20;
      uint64_t v16 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      uint64_t v17 = v6;
      uint32_t v18 = 32;
    }
    _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, v16, (uint8_t *)&v22, v18);
    goto LABEL_13;
  }
  BOOL v7 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);
  if (v4)
  {
    if (!v7) {
      goto LABEL_14;
    }
    uint64_t v9 = a1[4];
    uint64_t v8 = a1[5];
    BOOL v10 = [MEMORY[0x1E4F1C9C8] date];
    [v10 timeIntervalSinceDate:a1[6]];
    int v22 = 138544386;
    id v23 = @"setClientProperties";
    __int16 v24 = 2114;
    uint64_t v25 = v8;
    __int16 v26 = 2114;
    uint64_t v27 = a2;
    __int16 v28 = 2114;
    uint64_t v29 = v9;
    __int16 v30 = 2048;
    uint64_t v31 = v11;
    _os_log_error_impl(&dword_194F3C000, v6, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", (uint8_t *)&v22, 0x34u);
LABEL_13:

    goto LABEL_14;
  }
  if (v7) {
    __MRMediaRemoteSetClientProperties_block_invoke_cold_1();
  }
LABEL_14:

  uint64_t result = a1[7];
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  }
  return result;
}

void MRMediaRemoteUpdateClientProperties(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  if (!a1)
  {
    uint64_t v25 = [MEMORY[0x1E4F28B00] currentHandler];
    __int16 v26 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteUpdateClientProperties(MRNowPlayingClientRef, MROriginRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))");
    [v25 handleFailureInFunction:v26, @"MRNowPlaying.m", 622, @"Invalid parameter not satisfying: %@", @"client" file lineNumber description];
  }
  uint64_t v9 = [MEMORY[0x1E4F29128] UUID];
  BOOL v10 = [v9 UUIDString];

  uint64_t v11 = [MEMORY[0x1E4F1C9C8] date];
  BOOL v12 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  uint64_t v13 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v14 = [v13 clientForPlayerPath:v12];

  [v14 mergeClient:a1];
  uint64_t v15 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"updateClientProperties", v10];
  uint64_t v16 = v15;
  if (a1) {
    [v15 appendFormat:@" for %@", a1];
  }
  uint64_t v17 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v33 = v16;
    _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  uint32_t v18 = (void *)MRGetSharedService();
  uint64_t v19 = v7;
  if (!v7)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4F14428];
    id v20 = MEMORY[0x1E4F14428];
  }
  v27[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v27[1] = 3221225472;
  v27[2] = __MRMediaRemoteUpdateClientProperties_block_invoke;
  v27[3] = &unk_1E57D0E80;
  __int16 v28 = v12;
  id v29 = v10;
  id v30 = v11;
  id v31 = v8;
  id v21 = v8;
  id v22 = v11;
  id v23 = v10;
  __int16 v24 = v12;
  MRMediaRemoteServiceUpdateClientProperties(v18, v24, v19, v27);
  if (!v7) {
}
  }

uint64_t __MRMediaRemoteUpdateClientProperties_block_invoke(void *a1, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a1[4];
  id v5 = _MRLogForCategory(0xAuLL);
  id v6 = v5;
  if (!a2)
  {
    BOOL v12 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (!v12) {
        goto LABEL_14;
      }
      uint64_t v14 = a1[4];
      uint64_t v13 = a1[5];
      BOOL v10 = [MEMORY[0x1E4F1C9C8] date];
      [v10 timeIntervalSinceDate:a1[6]];
      int v22 = 138544130;
      id v23 = @"updateClientProperties";
      __int16 v24 = 2114;
      uint64_t v25 = v13;
      __int16 v26 = 2114;
      uint64_t v27 = v14;
      __int16 v28 = 2048;
      uint64_t v29 = v15;
      uint64_t v16 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      uint64_t v17 = v6;
      uint32_t v18 = 42;
    }
    else
    {
      if (!v12) {
        goto LABEL_14;
      }
      uint64_t v19 = a1[5];
      BOOL v10 = [MEMORY[0x1E4F1C9C8] date];
      [v10 timeIntervalSinceDate:a1[6]];
      int v22 = 138543874;
      id v23 = @"updateClientProperties";
      __int16 v24 = 2114;
      uint64_t v25 = v19;
      __int16 v26 = 2048;
      uint64_t v27 = v20;
      uint64_t v16 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      uint64_t v17 = v6;
      uint32_t v18 = 32;
    }
    _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, v16, (uint8_t *)&v22, v18);
    goto LABEL_13;
  }
  BOOL v7 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);
  if (v4)
  {
    if (!v7) {
      goto LABEL_14;
    }
    uint64_t v9 = a1[4];
    uint64_t v8 = a1[5];
    BOOL v10 = [MEMORY[0x1E4F1C9C8] date];
    [v10 timeIntervalSinceDate:a1[6]];
    int v22 = 138544386;
    id v23 = @"updateClientProperties";
    __int16 v24 = 2114;
    uint64_t v25 = v8;
    __int16 v26 = 2114;
    uint64_t v27 = a2;
    __int16 v28 = 2114;
    uint64_t v29 = v9;
    __int16 v30 = 2048;
    uint64_t v31 = v11;
    _os_log_error_impl(&dword_194F3C000, v6, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", (uint8_t *)&v22, 0x34u);
LABEL_13:

    goto LABEL_14;
  }
  if (v7) {
    __MRMediaRemoteUpdateClientProperties_block_invoke_cold_1();
  }
LABEL_14:

  uint64_t result = a1[7];
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  }
  return result;
}

void MRMediaRemoteSyncClientProperties(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = [[MRPlayerPath alloc] initWithOrigin:a3 client:a2 player:0];
  BOOL v7 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v8 = [v7 clientForPlayerPath:v6];

  if (v8)
  {
    uint64_t v9 = _MRLogForCategory(1uLL);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v10 = [v8 playerPath];
      int v27 = 138543618;
      id v28 = v5;
      __int16 v29 = 2114;
      __int16 v30 = v10;
      _os_log_impl(&dword_194F3C000, v9, OS_LOG_TYPE_DEFAULT, "[MRNowPlaying] Received sourceClient %{public}@ at %{public}@", (uint8_t *)&v27, 0x16u);
    }
    uint64_t v11 = [v8 playerPath];
    BOOL v12 = [v11 client];

    uint64_t v13 = [v8 playerPath];
    uint64_t v14 = [v13 client];
    uint64_t v15 = [v14 skeleton];

    objc_msgSend(v15, "setProcessIdentifier:", objc_msgSend(v12, "processIdentifier"));
    uint64_t v16 = [v12 bundleIdentifier];
    [v15 setBundleIdentifier:v16];

    uint64_t v17 = [v5 displayName];
    [v15 setDisplayName:v17];

    id v18 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    uint64_t v19 = [v5 bundleIdentifier];

    if (v19)
    {
      uint64_t v20 = [v5 bundleIdentifier];
      [v18 addObject:v20];
    }
    id v21 = [v5 parentApplicationBundleIdentifier];

    if (v21)
    {
      int v22 = [v5 parentApplicationBundleIdentifier];
      [v18 addObject:v22];
    }
    id v23 = [v5 extendedBundleIdentifierHierarchy];

    if (v23)
    {
      __int16 v24 = [v5 extendedBundleIdentifierHierarchy];
      [v18 addObjectsFromArray:v24];
    }
    [v15 setExtendedBundleIdentifierHierarchy:v18];
    uint64_t v25 = [v8 playerPath];
    __int16 v26 = [v25 origin];
    MRMediaRemoteUpdateClientProperties((uint64_t)v15, (uint64_t)v26, 0, 0);
  }
}

void MRMediaRemoteSetParentApplication(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = +[MRClient localClient];
  id v5 = (id)[v4 copy];

  [v5 setParentApplicationBundleIdentifier:a2];
  MRMediaRemoteUpdateClientProperties((uint64_t)v5, a1, 0, 0);
}

void MRMediaRemoteSetNowPlayingVisibility(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = +[MRClient localClient];
  id v5 = (id)[v4 copy];

  [v5 setVisibility:a2];
  MRMediaRemoteUpdateClientProperties((uint64_t)v5, a1, 0, 0);
}

void MRMediaRemoteSetNowPlayingTintColor(uint64_t a1, float a2, float a3, float a4, float a5)
{
  BOOL v10 = +[MRClient localClient];
  id v16 = (id)[v10 copy];

  if (MRColorIsNull(a2, a3, a4, a5))
  {
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = objc_alloc_init(MRColorComponents);
    *(float *)&double v12 = a5;
    [(MRColorComponents *)v11 setAlpha:v12];
    *(float *)&double v13 = a4;
    [(MRColorComponents *)v11 setBlue:v13];
    *(float *)&double v14 = a3;
    [(MRColorComponents *)v11 setGreen:v14];
    *(float *)&double v15 = a2;
    [(MRColorComponents *)v11 setRed:v15];
  }
  [v16 setTintColor:v11];
  MRMediaRemoteUpdateClientProperties((uint64_t)v16, a1, 0, 0);
}

CFStringRef MRMediaRemoteCopyNowPlayingVisibilityDescription(unsigned int a1)
{
  if (a1 > 3) {
    CFStringRef v1 = 0;
  }
  else {
    CFStringRef v1 = off_1E57D1030[a1];
  }
  return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
}

void MRMediaRemoteGetPlayerProperties(void *a1, void *a2, void *a3)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  BOOL v7 = [MEMORY[0x1E4F1C9C8] date];
  uint64_t v8 = [MEMORY[0x1E4F29128] UUID];
  uint64_t v9 = [v8 UUIDString];

  BOOL v10 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"playerProperties", v9];
  uint64_t v11 = v10;
  if (a1) {
    [v10 appendFormat:@" for %@", a1];
  }
  double v12 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    __int16 v26 = v11;
    _os_log_impl(&dword_194F3C000, v12, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  double v13 = +[MRMediaRemoteServiceClient sharedServiceClient];
  double v14 = [v13 workerQueue];
  v19[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = __MRMediaRemoteGetPlayerProperties_block_invoke;
  v19[3] = &unk_1E57D0E58;
  uint64_t v20 = @"playerProperties";
  id v21 = v9;
  id v22 = v7;
  id v23 = v5;
  id v24 = v6;
  id v15 = v6;
  id v16 = v5;
  id v17 = v7;
  id v18 = v9;
  MRMediaRemoteNowPlayingResolvePlayerPath(a1, v14, v19);
}

void __MRMediaRemoteGetPlayerProperties_block_invoke(id *a1, void *a2, uint64_t Error)
{
  id v5 = a2;
  uint64_t v14 = MEMORY[0x1E4F143A8];
  uint64_t v15 = 3221225472;
  id v16 = __MRMediaRemoteGetPlayerProperties_block_invoke_2;
  id v17 = &unk_1E57D0ED0;
  id v6 = v5;
  id v18 = v6;
  id v19 = a1[4];
  id v20 = a1[5];
  id v21 = a1[6];
  id v22 = a1[7];
  id v23 = a1[8];
  BOOL v7 = (void (**)(void, void, void))MEMORY[0x1997190F0](&v14);
  if (objc_msgSend(v6, "isResolved", v14, v15, v16, v17))
  {
    int v8 = [v6 isLocal];
    uint64_t v9 = +[MRNowPlayingOriginClientManager sharedManager];
    BOOL v10 = v9;
    if (v8)
    {
      uint64_t v11 = [v9 playerClientForPlayerPath:v6];

      double v12 = [v11 playerPath];
      double v13 = [v12 player];
      ((void (**)(void, void *, void))v7)[2](v7, v13, 0);
    }
    else
    {
      uint64_t v11 = [v9 playerClientRequestsForPlayerPath:v6];

      [v11 handlePlayerPropertiesRequestWithCompletion:v7];
    }
  }
  else
  {
    if (Error)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t Error = MRMediaRemoteNowPlayingPlayerPathCreateError(v6);
      uint64_t v11 = (void *)Error;
    }
    v7[2](v7, 0, Error);
  }
}

void __MRMediaRemoteGetPlayerProperties_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  int v8 = _MRLogForCategory(0xAuLL);
  uint64_t v9 = v8;
  if (v5 && !v6)
  {
    BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v10)
      {
        uint64_t v12 = *(void *)(a1 + 40);
        uint64_t v11 = *(void *)(a1 + 48);
        uint64_t v13 = *(void *)(a1 + 32);
        uint64_t v14 = [MEMORY[0x1E4F1C9C8] date];
        [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
        *(_DWORD *)long long buf = 138544386;
        uint64_t v44 = v12;
        __int16 v45 = 2114;
        uint64_t v46 = v11;
        __int16 v47 = 2112;
        id v48 = v5;
        __int16 v49 = 2114;
        uint64_t v50 = v13;
        __int16 v51 = 2048;
        uint64_t v52 = v15;
        id v16 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
        id v17 = v9;
        uint32_t v18 = 52;
LABEL_16:
        _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, v16, buf, v18);
        goto LABEL_17;
      }
      goto LABEL_22;
    }
    if (!v10) {
      goto LABEL_22;
    }
    uint64_t v29 = *(void *)(a1 + 40);
    uint64_t v30 = *(void *)(a1 + 48);
    uint64_t v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
    *(_DWORD *)long long buf = 138544130;
    uint64_t v44 = v29;
    __int16 v45 = 2114;
    uint64_t v46 = v30;
    __int16 v47 = 2112;
    id v48 = v5;
    __int16 v49 = 2048;
    uint64_t v50 = v31;
    id v16 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
LABEL_15:
    id v17 = v9;
    uint32_t v18 = 42;
    goto LABEL_16;
  }
  if (v6)
  {
    BOOL v19 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
    if (v7)
    {
      if (v19)
      {
        uint64_t v21 = *(void *)(a1 + 40);
        uint64_t v20 = *(void *)(a1 + 48);
        uint64_t v22 = *(void *)(a1 + 32);
        uint64_t v14 = [MEMORY[0x1E4F1C9C8] date];
        [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
        *(_DWORD *)long long buf = 138544386;
        uint64_t v44 = v21;
        __int16 v45 = 2114;
        uint64_t v46 = v20;
        __int16 v47 = 2114;
        id v48 = v6;
        __int16 v49 = 2114;
        uint64_t v50 = v22;
        __int16 v51 = 2048;
        uint64_t v52 = v23;
        _os_log_error_impl(&dword_194F3C000, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
LABEL_17:

        goto LABEL_22;
      }
    }
    else if (v19)
    {
      __MRMediaRemoteGetClientProperties_block_invoke_2_cold_1();
    }
    goto LABEL_22;
  }
  BOOL v24 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (!v7)
  {
    if (!v24) {
      goto LABEL_22;
    }
    uint64_t v32 = *(void *)(a1 + 40);
    uint64_t v33 = *(void *)(a1 + 48);
    uint64_t v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
    *(_DWORD *)long long buf = 138543874;
    uint64_t v44 = v32;
    __int16 v45 = 2114;
    uint64_t v46 = v33;
    __int16 v47 = 2048;
    id v48 = v34;
    id v16 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
    id v17 = v9;
    uint32_t v18 = 32;
    goto LABEL_16;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(a1 + 40);
    uint64_t v25 = *(void *)(a1 + 48);
    uint64_t v27 = *(void **)(a1 + 32);
    uint64_t v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
    *(_DWORD *)long long buf = 138544130;
    uint64_t v44 = v26;
    __int16 v45 = 2114;
    uint64_t v46 = v25;
    __int16 v47 = 2114;
    id v48 = v27;
    __int16 v49 = 2048;
    uint64_t v50 = v28;
    id v16 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
    goto LABEL_15;
  }
LABEL_22:

  block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __MRMediaRemoteGetPlayerProperties_block_invoke_563;
  block[3] = &unk_1E57D0EA8;
  uint64_t v35 = *(NSObject **)(a1 + 64);
  id v36 = *(id *)(a1 + 72);
  id v41 = v6;
  id v42 = v36;
  id v40 = v5;
  id v37 = v6;
  id v38 = v5;
  dispatch_async(v35, block);
}

uint64_t __MRMediaRemoteGetPlayerProperties_block_invoke_563(void *a1)
{
  uint64_t result = a1[6];
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, a1[4], a1[5]);
  }
  return result;
}

void MRMediaRemoteSetPlayerProperties(void *a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  id v6 = a1;
  uint64_t v7 = [v6 player];

  if (!v7)
  {
    uint64_t v12 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteSetPlayerProperties(MRNowPlayingPlayerPathRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))");
    [v12 handleFailureInFunction:v13, @"MRNowPlaying.m", 777, @"Invalid parameter not satisfying: %@", @"playerPath.player" file lineNumber description];
  }
  int v8 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v9 = [v8 playerClientForPlayerPath:v6];

  [v9 setPlayerPath:v6];
  BOOL v10 = (void *)MRGetSharedService();
  if (v14) {
    uint64_t v11 = v14;
  }
  else {
    uint64_t v11 = (void *)MEMORY[0x1E4F14428];
  }
  MRMediaRemoteServiceSetPlayerProperties(v10, v6, v11, v5);
}

void MRMediaRemoteGetElectedPlayerPath(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = (void *)MRGetSharedService();
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteGetElectedPlayerPath_block_invoke;
  v7[3] = &unk_1E57D0EF8;
  id v8 = v3;
  id v6 = v3;
  MRMediaRemoteServiceGetElectedPlayerPath(v5, v4, v7);
}

uint64_t __MRMediaRemoteGetElectedPlayerPath_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRMediaRemoteGetNowPlayingApplicationPlaybackState(void *a1, void *a2)
{
}

void MRMediaRemoteGetNowPlayingApplicationPlaybackStateForOrigin(uint64_t a1, void *a2, void *a3)
{
}

void MRMediaRemoteGetPlaybackStateForClient(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  uint64_t v9 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  MRMediaRemoteGetPlaybackStateForPlayer(v9, v8, v7);
}

void MRMediaRemoteSetNowPlayingApplicationPlaybackStateForOrigin(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
}

void MRMediaRemoteSetPlaybackStateForClient(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  uint64_t v11 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = __MRMediaRemoteSetPlaybackStateForClient_block_invoke;
  v13[3] = &unk_1E57D0F98;
  id v14 = v9;
  id v12 = v9;
  MRMediaRemoteSetPlaybackStateForPlayer((uint64_t)v11, a3, v10, v13);
}

void MRMediaRemoteSetPlaybackStateForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = (void *)MEMORY[0x1E4F1C9C8];
  id v8 = a4;
  id v10 = a3;
  [v7 timeIntervalSinceReferenceDate];
  MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp(a1, a2, v10, v8, v9);
}

uint64_t __MRMediaRemoteSetPlaybackStateForClient_block_invoke(uint64_t result, CFErrorRef err)
{
  uint64_t v2 = *(void *)(result + 32);
  if (v2)
  {
    if (err) {
      err = (CFErrorRef)CFErrorGetCode(err);
    }
    id v3 = *(uint64_t (**)(uint64_t, CFErrorRef))(v2 + 16);
    return v3(v2, err);
  }
  return result;
}

void MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp(uint64_t a1, uint64_t a2, void *a3, void *a4, double a5)
{
  double v9 = a3;
  id v10 = a4;
  if (!v9)
  {
    double v9 = MEMORY[0x1E4F14428];
    id v11 = MEMORY[0x1E4F14428];
  }
  id v12 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v13 = [v12 playerClientForPlayerPath:a1];

  id v14 = [v13 playerPath];
  uint64_t v15 = [v14 origin];
  int v16 = [v15 isLocal];

  if (!v16) {
    goto LABEL_11;
  }
  block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_block_invoke;
  block[3] = &unk_1E57D0518;
  uint64_t v35 = @"com.apple.mediaremote.set-playback-state";
  if (MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_entitlementOnceToken != -1) {
    dispatch_once(&MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_entitlementOnceToken, block);
  }
  if (MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_allowListOnceToken != -1) {
    dispatch_once(&MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_allowListOnceToken, &__block_literal_global_10);
  }
  id v17 = [(id)MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_entitlements objectForKeyedSubscript:@"com.apple.mediaremote.set-playback-state"];
  if ([v17 BOOLValue])
  {

LABEL_11:
    uint64_t v21 = (void *)[objc_alloc(MEMORY[0x1E4F1C9C8]) initWithTimeIntervalSinceReferenceDate:a5];
    [v13 updatePlaybackState:a2 date:v21];

    uint64_t v22 = (void *)MRGetSharedService();
    uint64_t v23 = [v13 playerPath];
    MRMediaRemoteServiceSetPlaybackState(v22, v23, a2, v9, v10, a5);
LABEL_12:

    goto LABEL_13;
  }
  uint32_t v18 = (void *)MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_allowList;
  BOOL v19 = [MEMORY[0x1E4F28B50] mainBundle];
  uint64_t v20 = [v19 bundleIdentifier];
  LODWORD(v18) = [v18 containsObject:v20];

  if (v18) {
    goto LABEL_11;
  }
  BOOL v24 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
    MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_cold_1(v24, v25, v26, v27, v28, v29, v30, v31);
  }

  if (v10)
  {
    v32[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v32[1] = 3221225472;
    v32[2] = __MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_block_invoke_590;
    v32[3] = &unk_1E57D0FC0;
    id v33 = v10;
    dispatch_async(v9, v32);
    uint64_t v23 = v33;
    goto LABEL_12;
  }
LABEL_13:
}

void __MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_block_invoke(uint64_t a1)
{
  v3[1] = *MEMORY[0x1E4F143B8];
  v3[[NSString stringWithFormat:@"com.apple.%@", 0] = *(void *)(a1 + 32);
  CFStringRef v1 = MRMediaRemoteCopyEntitlements((const __CFArray *)[MEMORY[0x1E4F1C978] arrayWithObjects:v3 count:1]);
  uint64_t v2 = (void *)MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_entitlements;
  MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_entitlements = (uint64_t)v1;
}

void __MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp_block_invoke_590(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id Error = (id)MRMediaRemoteCreateError(3);
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, Error);
}

void MRMediaRemoteNowPlayingPing(void *a1, void *a2)
{
  id v3 = a2;
  id v5 = a1;
  id v4 = (void *)MRGetSharedService();
  MRMediaRemoteServicePing(v4, v5, v3);
}

void MRMediaRemoteGetMediaAppIsInstalled(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
    MRMediaRemoteGetMediaAppIsInstalled_cold_1(a1, v5, v6, v7, v8, v9, v10, v11);
  }

  v4[2](v4, 0);
}

BOOL MRMediaRemoteIsBooksAppInstalled()
{
  id v0 = (void *)MRGetSharedService();

  return MRMediaRemoteServiceIsBooksAppInstalled(v0);
}

uint64_t MRMediaRemoteIsMediaAppInstalled(uint64_t a1)
{
  uint64_t v2 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    MRMediaRemoteGetMediaAppIsInstalled_cold_1(a1, v2, v3, v4, v5, v6, v7, v8);
  }

  return 0;
}

void MRMediaRemoteSetWantsNowPlayingNotifications(int a1)
{
  id v4 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v2 = [v4 notificationClient];
  uint64_t v3 = v2;
  if (a1) {
    [v2 registerForNowPlayingNotificationsWithQueue:0];
  }
  else {
    [v2 unregisterForNowPlayingNotifications];
  }
}

void MRMediaRemoteRegisterForNowPlayingNotifications(void *a1)
{
  id v1 = a1;
  id v3 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v2 = [v3 notificationClient];
  [v2 registerForNowPlayingNotificationsWithQueue:v1];
}

void MRMediaRemoteUnregisterForNowPlayingNotifications()
{
  id v1 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v0 = [v1 notificationClient];
  [v0 unregisterForNowPlayingNotifications];
}

uint64_t MRMediaRemoteCopyNowPlayingNotifications()
{
  id v0 = (void *)MEMORY[0x199718E70]();
  id v1 = +[MRNotificationClient nowPlayingNotifications];
  uint64_t v2 = [v1 allObjects];
  uint64_t v3 = [v2 copy];

  return v3;
}

void MRMediaRemoteSetWantsWakingNowPlayingNotifications(int a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = +[MRPlayerPath anyPlayerPath];
  uint64_t v8 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v9 = [v8 notificationClient];
  if (a1)
  {
    v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = __MRMediaRemoteSetWantsWakingNowPlayingNotifications_block_invoke;
    v15[3] = &unk_1E57D0FE8;
    uint64_t v10 = &v16;
    id v16 = v5;
    id v11 = v5;
    [v9 registerForWakingNowPlayingNotificationsForPlayerPath:v7 replyQueue:v6 completion:v15];
  }
  else
  {
    v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    void v13[2] = __MRMediaRemoteSetWantsWakingNowPlayingNotifications_block_invoke_2;
    v13[3] = &unk_1E57D0FE8;
    uint64_t v10 = &v14;
    id v14 = v5;
    id v12 = v5;
    [v9 unregisterForWakingNowPlayingNotificationsForPlayerPath:v7 replyQueue:v6 completion:v13];
  }
}

uint64_t __MRMediaRemoteSetWantsWakingNowPlayingNotifications_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t __MRMediaRemoteSetWantsWakingNowPlayingNotifications_block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRMediaRemoteRequestVideoThumbnails(const void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  id v11 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a3 player:0];
  memcpy(__dst, a1, sizeof(__dst));
  MRMediaRemoteRequestVideoThumbnailsForPlayer(__dst, v11, v10, v9);
}

void MRMediaRemoteRequestVideoThumbnailsForPlayer(const void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  if (!v7)
  {
    id v7 = (id)MEMORY[0x1E4F14428];
    id v8 = MEMORY[0x1E4F14428];
  }
  id v9 = a4;
  id v10 = (void *)MRGetSharedService();
  memcpy(v11, a1, sizeof(v11));
  MRMediaRemoteServiceRequestVideoThumbnails(v10, a2, v11, v7, v9);
}

void MRMediaRemoteRequestAudioAmplitudeSamples(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  id v11 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a3 player:0];
  MRMediaRemoteRequestAudioAmplitudeSamplesForPlayer(a1, v11, v10, v9);
}

void MRMediaRemoteRequestAudioAmplitudeSamplesForPlayer(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v10 = a3;
  if (!v10)
  {
    id v10 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  id v8 = a4;
  id v9 = (void *)MRGetSharedService();
  MRMediaRemoteServiceRequestAudioAmplitudeSamples(v9, a2, a1, v10, v8);
}

__CFString *MRMediaRemoteCopyClientVisibilityDescription(unsigned int a1)
{
  if (a1 > 3) {
    return 0;
  }
  else {
    return off_1E57D1030[a1];
  }
}

uint64_t MRMediaRemoteSelectSourceWithID(void *a1)
{
  uint64_t v2 = (void *)MRGetSharedService();
  return MRMediaRemoteServiceSelectSource(v2, a1);
}

void MRMediaRemoteSetVideoThumbnailsRequestCallback(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  MRMediaRemoteSetVideoThumbnailsRequestCallbackForPlayer((uint64_t)v4, v3);
}

void MRMediaRemoteSetVideoThumbnailsRequestCallbackForPlayer(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v6 = [v4 playerClientForPlayerPath:a1];

  id v5 = [v6 clientCallbacks];
  [v5 setVideoThumbnailsCallback:v3];
}

void MRMediaRemoteSetAudioAmplitudeSamplesRequestCallback(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  MRMediaRemoteSetAudioAmplitudeSamplesRequestCallbackForPlayer((uint64_t)v4, v3);
}

void MRMediaRemoteSetAudioAmplitudeSamplesRequestCallbackForPlayer(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v6 = [v4 playerClientForPlayerPath:a1];

  id v5 = [v6 clientCallbacks];
  [v5 setAudioAmplitudeSamplesCallback:v3];
}

BOOL MRMediaRemoteNowPlayingBless()
{
  id v0 = (void *)MRGetSharedService();

  return MRMediaRemoteServiceRequestBless(v0);
}

BOOL MRMediaRemoteNowPlayingWakePlayerServiceProcess()
{
  id v0 = (void *)MRGetSharedService();

  return MRMediaRemoteServiceWakePlayerServiceProcess(v0);
}

id AVSystemControllerFunction()
{
  return (id)classAVSystemController;
}

id AVSystemController_CanBeNowPlayingAppAttributeFunction()
{
  return (id)constantValAVSystemController_CanBeNowPlayingAppAttribute;
}

void OUTLINED_FUNCTION_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x2Au);
}

void OUTLINED_FUNCTION_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

BOOL _MRRemoveOutputDevicesMessageProtobufReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        id v17 = PBReaderReadString();
        if (v17) {
          [a1 addOutputDeviceUIDs:v17];
        }
        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = PBReaderReadString();
    id v17 = (void *)a1[1];
    a1[1] = v18;
LABEL_23:

    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

_MRVideoThumbnailProtobuf *MRVideoThumbnailCreate(uint64_t a1, double a2)
{
  id v4 = objc_alloc_init(_MRVideoThumbnailProtobuf);
  [(_MRVideoThumbnailProtobuf *)v4 setImageData:a1];
  [(_MRVideoThumbnailProtobuf *)v4 setTime:a2];
  return v4;
}

uint64_t MRVideoThumbnailCreateFromExternalRepresentation(uint64_t a1)
{
  uint64_t v2 = [_MRVideoThumbnailProtobuf alloc];

  return (uint64_t)[(_MRVideoThumbnailProtobuf *)v2 initWithData:a1];
}

uint64_t MRVideoThumbnailCreateExternalRepresentation(void *a1)
{
  id v1 = [a1 data];
  uint64_t v2 = [v1 copy];

  return v2;
}

void sub_194FF2058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

Class initINPrivatePlayMediaIntentData()
{
  if (IntentsLibrary_sOnce != -1) {
    dispatch_once(&IntentsLibrary_sOnce, &__block_literal_global_11);
  }
  Class result = objc_getClass("INPrivatePlayMediaIntentData");
  classINPrivatePlayMediaIntentData = (uint64_t)result;
  getINPrivatePlayMediaIntentDataClass = (uint64_t (*)())INPrivatePlayMediaIntentDataFunction;
  return result;
}

id INPrivatePlayMediaIntentDataFunction()
{
  return (id)classINPrivatePlayMediaIntentData;
}

void *__IntentsLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/Intents.framework/Intents", 2);
  IntentsLibrary_sLib = (uint64_t)result;
  return result;
}

Class initINMediaItem()
{
  if (IntentsLibrary_sOnce != -1) {
    dispatch_once(&IntentsLibrary_sOnce, &__block_literal_global_11);
  }
  Class result = objc_getClass("INMediaItem");
  classINMediaItem = (uint64_t)result;
  getINMediaItemClass = (uint64_t (*)())INMediaItemFunction;
  return result;
}

id INMediaItemFunction()
{
  return (id)classINMediaItem;
}

Class initINInteraction()
{
  if (IntentsLibrary_sOnce != -1) {
    dispatch_once(&IntentsLibrary_sOnce, &__block_literal_global_11);
  }
  Class result = objc_getClass("INInteraction");
  classINInteraction = (uint64_t)result;
  getINInteractionClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())INInteractionFunction;
  return result;
}

id INInteractionFunction()
{
  return (id)classINInteraction;
}

Class initINCExtensionConnection()
{
  if (IntentsCoreLibrary_sOnce != -1) {
    dispatch_once(&IntentsCoreLibrary_sOnce, &__block_literal_global_88);
  }
  Class result = objc_getClass("INCExtensionConnection");
  classINCExtensionConnection = (uint64_t)result;
  getINCExtensionConnectionClass = (uint64_t (*)())INCExtensionConnectionFunction;
  return result;
}

id INCExtensionConnectionFunction()
{
  return (id)classINCExtensionConnection;
}

void *__IntentsCoreLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/IntentsCore.framework/IntentsCore", 2);
  IntentsCoreLibrary_sLib = (uint64_t)result;
  return result;
}

Class initINPlayMediaIntentResponse()
{
  if (IntentsLibrary_sOnce != -1) {
    dispatch_once(&IntentsLibrary_sOnce, &__block_literal_global_11);
  }
  Class result = objc_getClass("INPlayMediaIntentResponse");
  classINPlayMediaIntentResponse = (uint64_t)result;
  getINPlayMediaIntentResponseClass = (uint64_t (*)())INPlayMediaIntentResponseFunction;
  return result;
}

id INPlayMediaIntentResponseFunction()
{
  return (id)classINPlayMediaIntentResponse;
}

_MRPlaybackQueueCapabilitiesProtobuf *_MRPlaybackQueueCapabilitiesCreateProtobuf(char a1)
{
  uint64_t v2 = objc_alloc_init(_MRPlaybackQueueCapabilitiesProtobuf);
  id v3 = v2;
  if ((a1 & 2) != 0)
  {
    [(_MRPlaybackQueueCapabilitiesProtobuf *)v2 setRequestByRange:1];
    if ((a1 & 4) == 0)
    {
LABEL_3:
      if ((a1 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_3;
  }
  [(_MRPlaybackQueueCapabilitiesProtobuf *)v3 setRequestByIdentifiers:1];
  if ((a1 & 8) != 0) {
LABEL_4:
  }
    [(_MRPlaybackQueueCapabilitiesProtobuf *)v3 setRequestByRange:1];
LABEL_5:

  return v3;
}

uint64_t _MRPlaybackQueueCapabilitiesFromProto(void *a1)
{
  id v1 = a1;
  if ([v1 requestByRange]) {
    uint64_t v2 = 2;
  }
  else {
    uint64_t v2 = 0;
  }
  if ([v1 requestByIdentifiers]) {
    uint64_t v3 = v2 | 4;
  }
  else {
    uint64_t v3 = v2;
  }
  int v4 = [v1 requestByRequest];

  if (v4) {
    return v3 | 8;
  }
  else {
    return v3;
  }
}

uint64_t MRPlaybackQueueCapabilitiesFromExternalRepresentation(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [[_MRPlaybackQueueCapabilitiesProtobuf alloc] initWithData:v1];

  uint64_t v3 = _MRPlaybackQueueCapabilitiesFromProto(v2);
  return v3;
}

id MRPlaybackQueueCapabilitiesCreateExternalRepresentation(char a1)
{
  id v1 = _MRPlaybackQueueCapabilitiesCreateProtobuf(a1);
  uint64_t v2 = [v1 data];

  return v2;
}

void sub_194FF6740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void MRMediaRemoteGetSupportedCommands(void *a1, void *a2)
{
}

void MRMediaRemoteGetSupportedCommandsForApp(MRClient *a1, uint64_t a2, void *a3, void *a4)
{
  id v8 = a3;
  id v7 = a4;
  if (a1) {
    a1 = [[MRClient alloc] initWithProcessIdentifier:0 bundleIdentifier:a1];
  }
  MRMediaRemoteGetSupportedCommandsForClient((uint64_t)a1, a2, v8, v7);
}

void MRMediaRemoteGetSupportedCommandsForOrigin(uint64_t a1, void *a2, void *a3)
{
}

void MRMediaRemoteGetSupportedCommandsForClient(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MRMediaRemoteGetSupportedCommandsForClient_block_invoke;
  v11[3] = &unk_1E57D1380;
  id v12 = v7;
  id v10 = v7;
  MRMediaRemoteGetSupportedCommandsForPlayer(v9, v8, v11);
}

uint64_t __MRMediaRemoteGetSupportedCommandsForClient_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRMediaRemoteGetProxiableSupportedCommandsForPlayer(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteGetProxiableSupportedCommandsForPlayer_block_invoke;
  v7[3] = &unk_1E57D1380;
  id v8 = v5;
  id v6 = v5;
  MRMediaRemoteGetSupportedCommandsForPlayer(a1, a2, v7);
}

void __MRMediaRemoteGetProxiableSupportedCommandsForPlayer_block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v8 = [MEMORY[0x1E4F28F60] predicateWithBlock:&__block_literal_global_13];
  id v6 = objc_msgSend(a2, "filteredArrayUsingPredicate:");
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 16))(v7, v6, a3);
  }
}

uint64_t __MRMediaRemoteGetProxiableSupportedCommandsForPlayer_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 options];
  uint64_t v3 = [v2 objectForKeyedSubscript:@"kMRMediaRemoteCommandInfoDoNotProxy"];

  uint64_t v4 = [v3 BOOLValue] ^ 1;
  return v4;
}

void MRMediaRemoteGetSyncableSupportedCommandsForPlayer(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteGetSyncableSupportedCommandsForPlayer_block_invoke;
  v7[3] = &unk_1E57D1380;
  id v8 = v5;
  id v6 = v5;
  MRMediaRemoteGetSupportedCommandsForPlayer(a1, a2, v7);
}

void __MRMediaRemoteGetSyncableSupportedCommandsForPlayer_block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v8 = [MEMORY[0x1E4F28F60] predicateWithBlock:&__block_literal_global_49];
  id v6 = objc_msgSend(a2, "filteredArrayUsingPredicate:");
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 16))(v7, v6, a3);
  }
}

uint64_t __MRMediaRemoteGetSyncableSupportedCommandsForPlayer_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 options];
  uint64_t v3 = [v2 objectForKeyedSubscript:@"kMRMediaRemoteCommandInfoDoNotSync"];

  uint64_t v4 = [v3 BOOLValue] ^ 1;
  return v4;
}

void MRMediaRemoteCopySupportedCommands(void *a1, void *a2)
{
}

void MRMediaRemoteCopySupportedCommandsForOrigin(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (v5)
  {
    v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = __MRMediaRemoteCopySupportedCommandsForOrigin_block_invoke;
    v7[3] = &unk_1E57D1440;
    id v8 = v5;
    MRMediaRemoteGetSupportedCommandsForApp(0, a1, a2, v7);
  }
}

uint64_t __MRMediaRemoteCopySupportedCommandsForOrigin_block_invoke(uint64_t a1, CFTypeRef cf)
{
  if (cf) {
    CFRetain(cf);
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v3();
}

void MRMediaRemoteRequestPendingCommands(uint64_t a1, void *a2, void *a3)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [MRPlayerPath alloc];
  id v8 = +[MROrigin localOrigin];
  unsigned int v9 = +[MRClient localClient];
  id v10 = [(MRPlayerPath *)v7 initWithOrigin:v8 client:v9 player:a1];

  uint64_t v11 = [MEMORY[0x1E4F1C9C8] date];
  id v12 = [MEMORY[0x1E4F29128] UUID];
  char v13 = [v12 UUIDString];

  id v14 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"requestPendingCommands", v13];
  int v15 = v14;
  if (v10) {
    [v14 appendFormat:@" for %@", v10];
  }
  id v16 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    __int16 v43 = v15;
    _os_log_impl(&dword_194F3C000, v16, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v36[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v36[1] = 3221225472;
  v36[2] = __MRMediaRemoteRequestPendingCommands_block_invoke;
  v36[3] = &unk_1E57D1468;
  id v17 = v10;
  id v37 = v17;
  id v18 = v13;
  id v38 = v18;
  id v19 = v11;
  id v39 = v19;
  id v20 = v6;
  id v41 = v20;
  id v21 = v5;
  id v40 = v21;
  uint64_t v22 = (void (**)(void, void, void))MEMORY[0x1997190F0](v36);
  uint64_t v23 = +[MRNowPlayingOriginClientManager sharedManager];
  BOOL v24 = [v23 clientForPlayerPath:v17];

  if ([v24 canBeNowPlayingForPlayer:v17])
  {
    uint64_t v25 = _MRLogForCategory(2uLL);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_FAULT)) {
      MRMediaRemoteRequestPendingCommands_cold_1(v25);
    }

    uint64_t v26 = (void *)[objc_alloc(MEMORY[0x1E4F28C58]) initWithMRError:2 description:@"Cannot call 'RequestPendingCommands' if CanBeNowPlaying=YES"];
    ((void (**)(void, void, void *))v22)[2](v22, 0, v26);
  }
  else
  {
    uint64_t v26 = MRCreateXPCMessage(0x400000000000006uLL);
    MRAddPlayerPathToXPCMessage(v26, v17);
    uint64_t v27 = +[MRMediaRemoteServiceClient sharedServiceClient];
    uint64_t v28 = [v27 service];
    [v28 mrXPCConnection];
    id v33 = v24;
    id v29 = v19;
    id v30 = v20;
    uint64_t v32 = v31 = v18;
    v34[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v34[1] = 3221225472;
    v34[2] = __MRMediaRemoteRequestPendingCommands_block_invoke_60;
    v34[3] = &unk_1E57D1490;
    uint64_t v35 = v22;
    [v32 sendMessage:v26 queue:v21 reply:v34];

    id v18 = v31;
    id v20 = v30;
    id v19 = v29;
    BOOL v24 = v33;
  }
}

void __MRMediaRemoteRequestPendingCommands_block_invoke(void *a1, void *a2, void *a3)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = a1[4];
    id v8 = _MRLogForCategory(0xAuLL);
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
    if (v7)
    {
      if (!v9) {
        goto LABEL_20;
      }
      uint64_t v11 = a1[4];
      uint64_t v10 = a1[5];
      id v12 = [MEMORY[0x1E4F1C9C8] date];
      [v12 timeIntervalSinceDate:a1[6]];
      *(_DWORD *)long long buf = 138544386;
      uint64_t v44 = @"requestPendingCommands";
      __int16 v45 = 2114;
      uint64_t v46 = v10;
      __int16 v47 = 2114;
      id v48 = v6;
      __int16 v49 = 2114;
      uint64_t v50 = v11;
      __int16 v51 = 2048;
      uint64_t v52 = v13;
      _os_log_error_impl(&dword_194F3C000, v8, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
LABEL_19:

      goto LABEL_20;
    }
    if (v9) {
      __MRMediaRemoteRequestPendingCommands_block_invoke_cold_1((uint64_t)a1);
    }
  }
  else
  {
    id v14 = (void *)MRMediaRemoteCopyCommandsDescription(v5);

    uint64_t v15 = a1[4];
    id v8 = _MRLogForCategory(0xAuLL);
    BOOL v16 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (!v14)
    {
      if (v15)
      {
        if (!v16) {
          goto LABEL_20;
        }
        uint64_t v25 = (void *)a1[4];
        uint64_t v24 = a1[5];
        id v12 = [MEMORY[0x1E4F1C9C8] date];
        [v12 timeIntervalSinceDate:a1[6]];
        *(_DWORD *)long long buf = 138544130;
        uint64_t v44 = @"requestPendingCommands";
        __int16 v45 = 2114;
        uint64_t v46 = v24;
        __int16 v47 = 2114;
        id v48 = v25;
        __int16 v49 = 2048;
        uint64_t v50 = v26;
        uint64_t v27 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
        uint64_t v28 = v8;
        uint32_t v29 = 42;
      }
      else
      {
        if (!v16) {
          goto LABEL_20;
        }
        uint64_t v37 = a1[5];
        id v12 = [MEMORY[0x1E4F1C9C8] date];
        [v12 timeIntervalSinceDate:a1[6]];
        *(_DWORD *)long long buf = 138543874;
        uint64_t v44 = @"requestPendingCommands";
        __int16 v45 = 2114;
        uint64_t v46 = v37;
        __int16 v47 = 2048;
        id v48 = v38;
        uint64_t v27 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
        uint64_t v28 = v8;
        uint32_t v29 = 32;
      }
      _os_log_impl(&dword_194F3C000, v28, OS_LOG_TYPE_DEFAULT, v27, buf, v29);
      goto LABEL_19;
    }
    if (v15)
    {
      if (!v16) {
        goto LABEL_20;
      }
      uint64_t v17 = a1[5];
      id v18 = (void *)MRMediaRemoteCopyCommandsDescription(v5);
      uint64_t v19 = a1[4];
      id v20 = (void *)MEMORY[0x1E4F1C9C8];
      id v12 = v18;
      id v21 = [v20 date];
      [v21 timeIntervalSinceDate:a1[6]];
      uint64_t v23 = v22;

      *(_DWORD *)long long buf = 138544386;
      uint64_t v44 = @"requestPendingCommands";
      __int16 v45 = 2114;
      uint64_t v46 = v17;
      __int16 v47 = 2112;
      id v48 = v18;
      __int16 v49 = 2114;
      uint64_t v50 = v19;
      __int16 v51 = 2048;
      uint64_t v52 = v23;
      _os_log_impl(&dword_194F3C000, v8, OS_LOG_TYPE_DEFAULT, "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds", buf, 0x34u);

      goto LABEL_19;
    }
    if (v16)
    {
      uint64_t v30 = a1[5];
      id v31 = (void *)MRMediaRemoteCopyCommandsDescription(v5);
      uint64_t v32 = (void *)MEMORY[0x1E4F1C9C8];
      id v33 = v31;
      uint64_t v34 = [v32 date];
      [v34 timeIntervalSinceDate:a1[6]];
      uint64_t v36 = v35;

      *(_DWORD *)long long buf = 138544130;
      uint64_t v44 = @"requestPendingCommands";
      __int16 v45 = 2114;
      uint64_t v46 = v30;
      __int16 v47 = 2112;
      id v48 = v31;
      __int16 v49 = 2048;
      uint64_t v50 = v36;
      _os_log_impl(&dword_194F3C000, v8, OS_LOG_TYPE_DEFAULT, "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds", buf, 0x2Au);
    }
  }
LABEL_20:

  id v39 = (void *)a1[8];
  if (v39)
  {
    id v42 = v39;
    id v40 = v5;
    id v41 = v6;
    msv_dispatch_async_on_queue();
  }
}

uint64_t __MRMediaRemoteRequestPendingCommands_block_invoke_55(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void __MRMediaRemoteRequestPendingCommands_block_invoke_60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = (id)MRCreatePropertyListFromXPCMessage(a2, "MRXPC_COMMAND_KEY");
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRMediaRemoteSetSupportedCommands(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
}

void MRMediaRemoteSetSupportedCommandsForClient(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  uint64_t v11 = [[MRPlayerPath alloc] initWithOrigin:a3 client:a2 player:0];
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = __MRMediaRemoteSetSupportedCommandsForClient_block_invoke;
  v13[3] = &unk_1E57D0F98;
  id v14 = v9;
  id v12 = v9;
  MRMediaRemoteSetSupportedCommandsForPlayer(a1, (uint64_t)v11, v10, v13);
}

uint64_t __MRMediaRemoteSetSupportedCommandsForClient_block_invoke(uint64_t result, CFErrorRef err)
{
  uint64_t v2 = *(void *)(result + 32);
  if (v2)
  {
    if (err) {
      err = (CFErrorRef)CFErrorGetCode(err);
    }
    uint64_t v3 = *(uint64_t (**)(uint64_t, CFErrorRef))(v2 + 16);
    return v3(v2, err);
  }
  return result;
}

void MRMediaRemoteClearDefaultSupportedCommandsForApp(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = a1;
  id v8 = [[MRClient alloc] initWithBundleIdentifier:v7];

  v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __MRMediaRemoteClearDefaultSupportedCommandsForApp_block_invoke;
  v10[3] = &unk_1E57D0F98;
  id v11 = v5;
  id v9 = v5;
  MRMediaRemoteSetDefaultSupportedCommandsForClient((uint64_t)v8, 0, 0, v6, v10);
}

uint64_t __MRMediaRemoteClearDefaultSupportedCommandsForApp_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t MRMediaRemoteSupportsCommand(void *a1, int a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = a1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    while (2)
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if (objc_msgSend(v8, "command", (void)v11) == a2)
        {
          uint64_t v9 = [v8 isEnabled];
          goto LABEL_11;
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  uint64_t v9 = 1;
LABEL_11:

  return v9;
}

uint64_t _MRGetVolumeMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        id v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRPlaybackSessionRequestProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
          goto LABEL_38;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
          goto LABEL_38;
        case 3u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_42:
          uint64_t v32 = 20;
          goto LABEL_47;
        case 4u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          break;
        case 5u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
LABEL_38:
          id v31 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v28 = *v3;
        unint64_t v29 = *(void *)(a2 + v28);
        if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
        *(void *)(a2 + v28) = v29 + 1;
        v22 |= (unint64_t)(v30 & 0x7F) << v26;
        if ((v30 & 0x80) == 0) {
          goto LABEL_44;
        }
        v26 += 7;
        BOOL v14 = v27++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v22) = 0;
      }
LABEL_46:
      uint64_t v32 = 16;
LABEL_47:
      *(_DWORD *)(a1 + v32) = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_194FF9CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_194FF9EAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FF9F64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFA0B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_194FFA110(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFA2EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFA3A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFA41C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFA568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _MRGameControllerDigitizerProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 36) |= 2u;
          uint64_t v18 = *v3;
          unint64_t v19 = *(void *)(a2 + v18);
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v19);
            *(void *)(a2 + v18) = v19 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v20 = 0;
          }
          uint64_t v38 = 16;
          goto LABEL_53;
        case 2u:
          *(unsigned char *)(a1 + 36) |= 4u;
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v20 = 0;
          }
          uint64_t v38 = 24;
LABEL_53:
          *(void *)(a1 + v38) = v20;
          continue;
        case 3u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 36) |= 8u;
          while (2)
          {
            uint64_t v27 = *v3;
            uint64_t v28 = *(void *)(a2 + v27);
            unint64_t v29 = v28 + 1;
            if (v28 == -1 || v29 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v29;
              v26 |= (unint64_t)(v30 & 0x7F) << v24;
              if (v30 < 0)
              {
                v24 += 7;
                BOOL v15 = v25++ >= 9;
                if (v15)
                {
                  uint64_t v26 = 0;
                  goto LABEL_44;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_44:
          *(unsigned char *)(a1 + 32) = v26 != 0;
          continue;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v34 = *v3;
        uint64_t v35 = *(void *)(a2 + v34);
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)(a2 + *v4)) {
          break;
        }
        char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
        *(void *)(a2 + v34) = v36;
        v33 |= (unint64_t)(v37 & 0x7F) << v31;
        if ((v37 & 0x80) == 0) {
          goto LABEL_46;
        }
        v31 += 7;
        BOOL v15 = v32++ >= 9;
        if (v15)
        {
          uint64_t v33 = 0;
          goto LABEL_48;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v33 = 0;
      }
LABEL_48:
      *(void *)(a1 + 8) = v33;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_194FFC348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_194FFC3E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_194FFC478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_194FFC524(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFC608(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFC6EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFC7D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFC8B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFC998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFCA7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFCB68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFCC54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFCD40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFCE2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFCF18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFD004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFD0F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_194FFD1DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _MRVirtualTouchDeviceDescriptorProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_42;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_44;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_44:
          BOOL v38 = v20 != 0;
          uint64_t v39 = 16;
          goto LABEL_49;
        case 2u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 20) |= 8u;
          break;
        case 3u:
          *(unsigned char *)(a1 + 20) |= 2u;
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 <= 0xFFFFFFFFFFFFFFFBLL && v34 + 4 <= *(void *)(a2 + *v4))
          {
            int v35 = *(_DWORD *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            int v35 = 0;
          }
          uint64_t v40 = 12;
          goto LABEL_54;
        case 4u:
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(void *)(a2 + *v4))
          {
            int v35 = *(_DWORD *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            int v35 = 0;
          }
          uint64_t v40 = 8;
LABEL_54:
          *(_DWORD *)(a1 + v40) = v35;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        uint64_t v30 = *(void *)(a2 + v29);
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)(a2 + *v4)) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v31;
        v28 |= (unint64_t)(v32 & 0x7F) << v26;
        if ((v32 & 0x80) == 0) {
          goto LABEL_46;
        }
        v26 += 7;
        BOOL v15 = v27++ >= 9;
        if (v15)
        {
          uint64_t v28 = 0;
          goto LABEL_48;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v28 = 0;
      }
LABEL_48:
      BOOL v38 = v28 != 0;
      uint64_t v39 = 17;
LABEL_49:
      *(unsigned char *)(a1 + v39) = v38;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRSetStateMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_MRNowPlayingInfoProtobuf);
        objc_storeStrong((id *)(a1 + 32), v18);
        if PBReaderPlaceMark() && (_MRNowPlayingInfoProtobufReadFrom((uint64_t)v18, a2)) {
          goto LABEL_48;
        }
        goto LABEL_61;
      case 2u:
        char v18 = objc_alloc_init(_MRSupportedCommandsProtobuf);
        objc_storeStrong((id *)(a1 + 80), v18);
        if (!PBReaderPlaceMark() || (_MRSupportedCommandsProtobufReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_61;
        }
        goto LABEL_48;
      case 3u:
        char v18 = objc_alloc_init(_MRPlaybackQueueProtobuf);
        objc_storeStrong((id *)(a1 + 40), v18);
        if (!PBReaderPlaceMark() || (_MRPlaybackQueueProtobufReadFrom((uint64_t)v18, a2) & 1) == 0) {
          goto LABEL_61;
        }
        goto LABEL_48;
      case 4u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 16;
        goto LABEL_30;
      case 5u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 24;
LABEL_30:
        uint64_t v21 = *(void **)(a1 + v20);
        *(void *)(a1 + v20) = v19;

        goto LABEL_49;
      case 6u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        *(unsigned char *)(a1 + 88) |= 2u;
        while (2)
        {
          uint64_t v25 = *v3;
          uint64_t v26 = *(void *)(a2 + v25);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
            *(void *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              BOOL v15 = v23++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_57;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v24) = 0;
        }
LABEL_57:
        *(_DWORD *)(a1 + 56) = v24;
        goto LABEL_49;
      case 8u:
        char v18 = objc_alloc_init(_MRPlaybackQueueCapabilitiesProtobuf);
        objc_storeStrong((id *)(a1 + 48), v18);
        if (!PBReaderPlaceMark() || !_MRPlaybackQueueCapabilitiesProtobufReadFrom((uint64_t)v18, a2)) {
          goto LABEL_61;
        }
        goto LABEL_48;
      case 9u:
        char v18 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        objc_storeStrong((id *)(a1 + 64), v18);
        if (!PBReaderPlaceMark()
          || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v18->super.super.isa, a2))
        {
          goto LABEL_61;
        }
        goto LABEL_48;
      case 0xAu:
        char v18 = objc_alloc_init(_MRPlaybackQueueRequestProtobuf);
        objc_storeStrong((id *)(a1 + 72), v18);
        if PBReaderPlaceMark() && (_MRPlaybackQueueRequestProtobufReadFrom((uint64_t)v18, a2))
        {
LABEL_48:
          PBReaderRecallMark();

LABEL_49:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_61:

        return 0;
      case 0xBu:
        *(unsigned char *)(a1 + 88) |= 1u;
        uint64_t v30 = *v3;
        unint64_t v31 = *(void *)(a2 + v30);
        if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v32 = *(void *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v31 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v32 = 0;
        }
        *(void *)(a1 + 8) = v32;
        goto LABEL_49;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_49;
    }
  }
}

void sub_195000640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195000A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195000EE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195001114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195001284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195001418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195001638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);
  _Unwind_Resume(a1);
}

void sub_195001824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195001A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195001E94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950021E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195003180(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19500379C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195007CF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195007D80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195007F30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950080FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950082C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195008494(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950085E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195008674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

Class initTUConversationManager()
{
  if (TelephonyUtilitiesLibrary_sOnce != -1) {
    dispatch_once(&TelephonyUtilitiesLibrary_sOnce, &__block_literal_global_236);
  }
  Class result = objc_getClass("TUConversationManager");
  classTUConversationManager = (uint64_t)result;
  getTUConversationManagerClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())TUConversationManagerFunction;
  return result;
}

id TUConversationManagerFunction()
{
  return (id)classTUConversationManager;
}

void *__TelephonyUtilitiesLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 2);
  TelephonyUtilitiesLibrary_sLib = (uint64_t)result;
  return result;
}

Class initTUNeighborhoodActivityConduit()
{
  if (TelephonyUtilitiesLibrary_sOnce != -1) {
    dispatch_once(&TelephonyUtilitiesLibrary_sOnce, &__block_literal_global_236);
  }
  Class result = objc_getClass("TUNeighborhoodActivityConduit");
  classTUNeighborhoodActivityConduit = (uint64_t)result;
  getTUNeighborhoodActivityConduitClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())TUNeighborhoodActivityConduitFunction;
  return result;
}

id TUNeighborhoodActivityConduitFunction()
{
  return (id)classTUNeighborhoodActivityConduit;
}

Class initTUNearbyDeviceHandle()
{
  if (TelephonyUtilitiesLibrary_sOnce != -1) {
    dispatch_once(&TelephonyUtilitiesLibrary_sOnce, &__block_literal_global_236);
  }
  Class result = objc_getClass("TUNearbyDeviceHandle");
  classTUNearbyDeviceHandle = (uint64_t)result;
  getTUNearbyDeviceHandleClass = (uint64_t (*)())TUNearbyDeviceHandleFunction;
  return result;
}

id TUNearbyDeviceHandleFunction()
{
  return (id)classTUNearbyDeviceHandle;
}

Class initAVAudioSession()
{
  if (AVFoundationLibrary_sOnce_1 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_1, &__block_literal_global_242);
  }
  Class result = objc_getClass("AVAudioSession");
  classAVAudioSession = (uint64_t)result;
  getAVAudioSessionClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVAudioSessionFunction;
  return result;
}

id AVAudioSessionFunction()
{
  return (id)classAVAudioSession;
}

id initValAVAudioSessionCategoryPlayback()
{
  if (AVFoundationLibrary_sOnce_1 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_1, &__block_literal_global_242);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_1, "AVAudioSessionCategoryPlayback");
  if (v0) {
    objc_storeStrong((id *)&constantValAVAudioSessionCategoryPlayback, *v0);
  }
  getAVAudioSessionCategoryPlayback = (uint64_t (*)())AVAudioSessionCategoryPlaybackFunction;
  id v1 = (void *)constantValAVAudioSessionCategoryPlayback;

  return v1;
}

id AVAudioSessionCategoryPlaybackFunction()
{
  return (id)constantValAVAudioSessionCategoryPlayback;
}

void sub_195009890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_19500A308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19500A848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1950115B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195013528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromMRAVDistantExternalDeviceCallbackFlags(char a1)
{
  uint64_t v2 = [MEMORY[0x1E4F1CA48] array];
  id v3 = v2;
  if (a1) {
    [v2 addObject:@"CustomData"];
  }
  if ([v3 count])
  {
    uint64_t v4 = NSString;
    uint64_t v5 = [v3 componentsJoinedByString:@", "];
    uint64_t v6 = [v4 stringWithFormat:@"(%@)", v5];
  }
  else
  {
    uint64_t v6 = @"(None)";
  }

  return v6;
}

__CFString *NSStringFromMRAVDistantExternalDeviceNotificationFlags(char a1)
{
  uint64_t v2 = [MEMORY[0x1E4F1CA48] array];
  id v3 = v2;
  if (a1)
  {
    [v2 addObject:@"NowPlaying"];
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  [v3 addObject:@"Volume"];
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  [v3 addObject:@"OutputDevices"];
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_12:
  [v3 addObject:@"EndpointChange"];
  if ((a1 & 0x10) != 0) {
LABEL_6:
  }
    [v3 addObject:@"SystemEndpoint"];
LABEL_7:
  if ([v3 count])
  {
    uint64_t v4 = NSString;
    uint64_t v5 = [v3 componentsJoinedByString:@", "];
    uint64_t v6 = [v4 stringWithFormat:@"(%@)", v5];
  }
  else
  {
    uint64_t v6 = @"(None)";
  }

  return v6;
}

void OUTLINED_FUNCTION_4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x16u);
}

BOOL _MRPlaybackSessionMigrateBeginMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_MRPlaybackSessionRequestProtobuf);
        objc_storeStrong((id *)(a1 + 16), v17);
        if (!PBReaderPlaceMark()
          || (_MRPlaybackSessionRequestProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_30;
        }
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
    objc_storeStrong((id *)(a1 + 8), v17);
    if (!PBReaderPlaceMark() || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v17->super.super.isa, a2))
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MRAVAirPlaySecuritySettingsGetSecurityMode(void *a1)
{
  LODWORD(result) = [a1 securityType];
  if ((result - 1) >= 4) {
    return 0;
  }
  else {
    return result;
  }
}

_MRAVAirPlaySecuritySettingsProtobuf *MRAVAirPlaySecuritySettingsCreate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_alloc_init(_MRAVAirPlaySecuritySettingsProtobuf);
  [(_MRAVAirPlaySecuritySettingsProtobuf *)v4 setPassword:a1];
  if (a2 <= 4) {
    [(_MRAVAirPlaySecuritySettingsProtobuf *)v4 setSecurityType:a2];
  }
  return v4;
}

uint64_t MRAVAirPlaySecuritySettingsCreateFromExternalRepresentation(uint64_t a1)
{
  uint64_t v2 = [_MRAVAirPlaySecuritySettingsProtobuf alloc];

  return (uint64_t)[(_MRAVAirPlaySecuritySettingsProtobuf *)v2 initWithData:a1];
}

uint64_t MRAVAirPlaySecuritySettingsCreateExternalRepresentation(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

void sub_195017EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose((const void *)(v49 - 224), 8);
  _Block_object_dispose((const void *)(v49 - 176), 8);
  _Block_object_dispose((const void *)(v49 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_19501D008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19501D2D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19501D628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19501D758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void _MRServiceLogReplyError()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  id v0 = (void *)MEMORY[0x199719420]();
  id v1 = _MRLogForCategory(0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    int v2 = 136315138;
    id v3 = v0;
    _os_log_impl(&dword_194F3C000, v1, OS_LOG_TYPE_DEFAULT, "MediaRemote reply error: %s", (uint8_t *)&v2, 0xCu);
  }

  if (v0) {
    free(v0);
  }
}

void MRMediaRemoteServiceDestroy(void *a1)
{
  int v2 = a1;
  if ([v2 isRunning]) {
    MRMediaRemoteServiceStop(v2);
  }
  *((void *)v2 + 5) = 0;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 8) = 0u;
  id v1 = [v2 connection];
  xpc_connection_set_context(v1, 0);

  [v2 setConnection:0];
  [v2 setConnectionQueue:0];
  [v2 setClientCallbackQueue:0];
  [v2 setClientCallbackPriorityQueue:0];
  [v2 setBrowsableContentQueue:0];
  [v2 setVoiceInputQueue:0];
  [v2 setTelevisionQueue:0];
  [v2 setAgentQueue:0];
}

void MRMediaRemoteServiceStop(void *a1)
{
  id v1 = a1;
  if ([v1 isRunning])
  {
    int v2 = [v1 connection];
    xpc_connection_cancel(v2);

    [v1 setIsRunning:0];
  }
  else
  {
    id v3 = _MRLogForCategory(0);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_194F3C000, v3, OS_LOG_TYPE_DEFAULT, "Warning: Tried to stop a service that isn't running.", v4, 2u);
    }
  }
}

void __MRMediaRemoteServiceSetInvalidationHandler_block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = [WeakRetained connectionQueue];
    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __MRMediaRemoteServiceSetInvalidationHandler_block_invoke_2;
    block[3] = &unk_1E57D0FC0;
    id v6 = *(id *)(a1 + 32);
    dispatch_async(v4, block);
  }
}

uint64_t __MRMediaRemoteServiceSetInvalidationHandler_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __MRMediaRemoteServiceSetResumeHandler_block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    if (WeakRetained[3])
    {
      uint64_t v4 = _MRLogForCategory(0);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_194F3C000, v4, OS_LOG_TYPE_DEFAULT, "Re-establishing recording endpoint.", buf, 2u);
      }

      MRMediaRemoteServiceSetVoiceRecordingEndpoint(*(void **)(a1 + 56), *(void *)(*(void *)(a1 + 32) + 24));
    }
    if (v3[4])
    {
      uint64_t v5 = _MRLogForCategory(0);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_194F3C000, v5, OS_LOG_TYPE_DEFAULT, "Re-establishing television endpoint.", v20, 2u);
      }

      id v6 = *(void **)(a1 + 56);
      id v7 = *(void **)(a1 + 32);
      uint64_t v8 = v7[4];
      unsigned int v9 = [v7 televisionQueue];
      MRMediaRemoteServiceSetTelevisionEndpoint(v6, v8, v9);
    }
    if (v3[5])
    {
      uint64_t v10 = _MRLogForCategory(0);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl(&dword_194F3C000, v10, OS_LOG_TYPE_DEFAULT, "Re-establishing agent endpoint.", v19, 2u);
      }

      uint64_t v11 = *(void **)(a1 + 56);
      unint64_t v12 = *(void **)(a1 + 32);
      uint64_t v13 = v12[5];
      char v14 = [v12 agentQueue];
      MRMediaRemoteServiceSetAgentEndpoint(v11, v13, (uint64_t)v14);
    }
    int v15 = [v3 uiServiceEndpoint];

    if (v15)
    {
      int v16 = _MRLogForCategory(0);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)char v18 = 0;
        _os_log_impl(&dword_194F3C000, v16, OS_LOG_TYPE_DEFAULT, "Re-establishing UI service endpoint.", v18, 2u);
      }

      uint64_t v17 = [v3 uiServiceEndpoint];
      [v3 setUIServiceRelayEndpoint:v17];
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void MRMediaRemoteServiceSetVoiceRecordingEndpoint(void *a1, uint64_t a2)
{
  a1[3] = a2;
  id v3 = a1;
  MRCreateXPCMessage(0x900000000000006uLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  xpc_dictionary_set_BOOL(message, "MRXPC_VOICE_RECORDING_ENDPOINT_AVAILABLE_KEY", a2 != 0);
  uint64_t v4 = [v3 connection];

  xpc_connection_send_message(v4, message);
}

void MRMediaRemoteServiceSetTelevisionEndpoint(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = _MRLogForCategory(0);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_194F3C000, v6, OS_LOG_TYPE_DEFAULT, "Setting television endpoint", v10, 2u);
  }

  a1[4] = a2;
  id v7 = a1;
  [v7 setTelevisionQueue:v5];

  uint64_t v8 = MRCreateXPCMessage(0x600000000000009uLL);
  xpc_dictionary_set_BOOL(v8, "MRXPC_TELEVISION_ENDPOINT_AVAILABLE_KEY", a2 != 0);
  unsigned int v9 = [v7 connection];

  xpc_connection_send_message(v9, v8);
}

void MRMediaRemoteServiceSetAgentEndpoint(void *a1, uint64_t a2, uint64_t a3)
{
  a1[5] = a2;
  id v5 = a1;
  [v5 setAgentQueue:a3];
  MRCreateXPCMessage(0xA00000000000003uLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  xpc_dictionary_set_BOOL(message, "MRXPC_AGENT_ENDPOINT_AVAILABLE_KEY", a2 != 0);
  id v6 = [v5 connection];

  xpc_connection_send_message(v6, message);
}

uint64_t MRMediaRemoteServiceGetClientModule(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t MRMediaRemoteServiceSetBrowsableContentEndpoint(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  return result;
}

void MRMediaRemoteServiceSendCommand(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  if (a2)
  {
    uint64_t v8 = *(void **)(a2 + 8);
    unsigned int v9 = a3;
    uint64_t v10 = [v8 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
    id v11 = a1;
    unint64_t v12 = MRCreateXPCMessage(0x400000000000001uLL);
    MRAddSendCommandToXPCMessage(v12, (void **)a2);
    uint64_t v13 = _MRLogForCategory(2uLL);
    uint64_t v14 = [v10 hash];
    if ((unint64_t)(v14 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      os_signpost_id_t v15 = v14;
      if (os_signpost_enabled(v13))
      {
        *(_WORD *)long long buf = 0;
        _os_signpost_emit_with_name_impl(&dword_194F3C000, v13, OS_SIGNPOST_INTERVAL_BEGIN, v15, "SendCommandXPCToDaemon", (const char *)&unk_195251F31, buf, 2u);
      }
    }

    int v16 = [v11 connection];

    v18[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    v18[2] = __MRMediaRemoteServiceSendCommand_block_invoke;
    v18[3] = &unk_1E57D2528;
    id v19 = v10;
    id v20 = v7;
    id v17 = v10;
    xpc_connection_send_message_with_reply(v16, v12, v9, v18);
  }
}

void __MRMediaRemoteServiceSendCommand_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = _MRLogForCategory(2uLL);
  uint64_t v5 = [*(id *)(a1 + 32) hash];
  if ((unint64_t)(v5 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v6 = v5;
    if (os_signpost_enabled(v4))
    {
      *(_WORD *)unsigned int v9 = 0;
      _os_signpost_emit_with_name_impl(&dword_194F3C000, v4, OS_SIGNPOST_INTERVAL_END, v6, "SendCommandXPCResultFromDaemon", (const char *)&unk_195251F31, v9, 2u);
    }
  }

  id v7 = MRCreateCommandResultFromXPCMessage(v3);

  uint64_t v8 = *(void *)(a1 + 40);
  if (v8) {
    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v7);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceBroadcastCommand(void *a1, void **a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  kdebug_trace();
  id v9 = a1;
  uint64_t v10 = MRCreateXPCMessage(0x400000000000002uLL);
  MRAddSendCommandToXPCMessage(v10, a2);
  id v11 = [v9 connection];

  if (v8)
  {
    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceBroadcastCommand_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v13 = v8;
    xpc_connection_send_message_with_reply(v11, v10, v7, handler);
  }
  else
  {
    xpc_connection_send_message(v11, v10);

    kdebug_trace();
  }
}

void __MRMediaRemoteServiceBroadcastCommand_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_dictionary_get_uint64(v3, "MRXPC_COMMAND_SEND_ERROR_KEY");
  uint64_t v5 = (UInt8 *)MRCreateDataFromXPCMessage(v3, "MRXPC_COMMAND_STATUSES_DATA_KEY");

  uint64_t v4 = MRCreateArrayFromData(v5, &__block_literal_global_160);
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

_MRSendCommandResultMessageProtobuf *__MRMediaRemoteServiceBroadcastCommand_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [[_MRSendCommandResultMessageProtobuf alloc] initWithData:v2];

  return v3;
}

void MRMediaRemoteServiceGetSupportedCommands(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  kdebug_trace();
  id v10 = a1;
  id v11 = MRCreateXPCMessage(0x200000000000030uLL);
  MRAddPlayerPathToXPCMessage(v11, v9);

  unint64_t v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetSupportedCommands_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void __MRMediaRemoteServiceGetSupportedCommands_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    id Error = (void *)MRMediaRemoteCreateError(1);
    os_signpost_id_t v6 = 0;
  }
  else
  {
    id Error = (void *)MRCreateClientErrorFromXPCMessage(v3);
    os_signpost_id_t v6 = (void *)MRCreateSupportedCommandsFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *, void *))(v7 + 16))(v7, v6, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServicePrewarmMediaControlsCommand(void *a1, unsigned int a2, void *a3, void *a4)
{
  id v7 = a4;
  kdebug_trace();
  id v8 = a1;
  MRCreateXPCMessage(0x400000000000003uLL);
  xpc_object_t xdict = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  MRAddDataToXPCMessage(xdict, a3, "MRXPC_MEDIA_CONTROLS_CONFIGURATION_KEY");
  xpc_dictionary_set_value(xdict, "MRXPC_MEDIA_CONTROLS_XPC_ENDPOINT_KEY", v7);

  xpc_dictionary_set_int64(xdict, "MRXPC_MEDIA_CONTROLS_STYLE_KEY", a2);
  id v9 = [v8 connection];

  xpc_connection_send_message(v9, xdict);
  kdebug_trace();
}

void MRMediaRemoteServicePresentMediaControlsCommand(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  os_signpost_id_t v6 = a2;
  kdebug_trace();
  id v7 = a1;
  id v8 = MRCreateXPCMessage(0x400000000000004uLL);
  v12[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __MRMediaRemoteServicePresentMediaControlsCommand_block_invoke;
  v12[3] = &unk_1E57D0F98;
  id v13 = v5;
  id v9 = v5;
  id v10 = _MRServiceCreateErrorHandlerBlock(v12);
  id v11 = [v7 connection];

  xpc_connection_send_message_with_reply(v11, v8, v6, v10);
}

uint64_t __MRMediaRemoteServicePresentMediaControlsCommand_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceDismissMediaControlsCommand(void *a1)
{
  kdebug_trace();
  id v2 = a1;
  MRCreateXPCMessage(0x400000000000005uLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  id v3 = [v2 connection];

  xpc_connection_send_message(v3, message);
  kdebug_trace();
}

void MRMediaRemoteServiceSetCanBeNowPlayingApp(void *a1, BOOL a2, double a3)
{
  id v5 = a1;
  MRCreateXPCMessage(0x200000000000006uLL);
  xpc_object_t xdict = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  xpc_dictionary_set_BOOL(xdict, "MRXPC_NOWPLAYING_APP_ENABLED_KEY", a2);
  xpc_dictionary_set_double(xdict, "MRXPC_TIMESTAMP", a3);
  os_signpost_id_t v6 = [v5 connection];

  xpc_connection_send_message(v6, xdict);
}

BOOL MRMediaRemoteServiceSetNowPlayingAppOverride(void *a1, BOOL a2)
{
  kdebug_trace();
  id v4 = a1;
  id v5 = MRCreateXPCMessage(0x200000000000001uLL);
  xpc_dictionary_set_BOOL(v5, "MRXPC_NOWPLAYING_APP_OVERRIDE_ENABLED_KEY", a2);
  os_signpost_id_t v6 = [v4 connection];

  xpc_object_t v7 = xpc_connection_send_message_with_reply_sync(v6, v5);
  if (v7 == (xpc_object_t)MEMORY[0x1E4F14520] || v7 == (xpc_object_t)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    BOOL v9 = 0;
  }
  else
  {
    BOOL v9 = xpc_dictionary_get_uint64(v7, "MRXPC_ERROR_CODE_KEY") == 0;
  }
  kdebug_trace();

  return v9;
}

BOOL MRMediaRemoteServiceSetOverriddenNowPlayingApplication(void *a1, void *a2)
{
  kdebug_trace();
  id v4 = a1;
  id v5 = MRCreateXPCMessage(0x200000000000002uLL);
  if (a2)
  {
    UTF8String = (const char *)_MRServiceGetUTF8String(a2);
    xpc_dictionary_set_string(v5, "MRXPC_NOWPLAYING_DISPLAYID_KEY", UTF8String);
  }
  xpc_object_t v7 = [v4 connection];
  xpc_object_t v8 = xpc_connection_send_message_with_reply_sync(v7, v5);

  if (v8 == (xpc_object_t)MEMORY[0x1E4F14520] || v8 == (xpc_object_t)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    BOOL v10 = 0;
  }
  else
  {
    BOOL v10 = xpc_dictionary_get_uint64(v8, "MRXPC_ERROR_CODE_KEY") == 0;
  }
  kdebug_trace();

  return v10;
}

uint64_t _MRServiceGetUTF8String(void *a1)
{
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }
  id v2 = a1;

  return [v2 UTF8String];
}

void MRMediaRemoteServiceRequestNowPlayingPlaybackQueueCapabilities(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  xpc_object_t v8 = a3;
  kdebug_trace();
  id v9 = a1;
  BOOL v10 = MRCreateXPCMessage(0x200000000000009uLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  id v11 = [v9 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceRequestNowPlayingPlaybackQueueCapabilities_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v14 = v7;
  id v12 = v7;
  xpc_connection_send_message_with_reply(v11, v10, v8, handler);
}

void __MRMediaRemoteServiceRequestNowPlayingPlaybackQueueCapabilities_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    id Error = (void *)MRMediaRemoteCreateError(1);
    uint64_t v6 = 0;
  }
  else
  {
    id Error = (void *)MRCreateClientErrorFromXPCMessage(v3);
    uint64_t v6 = MRCreatePlaybackQueueCapabilitiesFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, uint64_t, void *))(v7 + 16))(v7, v6, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceResetPlaybackQueueRequests(void *a1, void *a2, void *a3)
{
  kdebug_trace();
  if (a3)
  {
    id v6 = a1;
    id v7 = a3;
    MRCreateXPCMessage(0x20000000000000BuLL);
    xpc_object_t xdict = (xpc_object_t)objc_claimAutoreleasedReturnValue();
    MRAddPlayerPathToXPCMessage(xdict, a2);
    id v8 = v7;
    id v9 = (const void *)[v8 bytes];
    size_t v10 = [v8 length];

    xpc_dictionary_set_data(xdict, "MRXPC_PLAYBACK_QUEUE_REQUESTS_DATA", v9, v10);
    id v11 = [v6 connection];

    xpc_connection_send_message(v11, xdict);
  }
}

void MRMediaRemoteServiceSendLyricsEvent(void *a1, void *a2, void *a3)
{
  kdebug_trace();
  id v11 = a1;
  id v6 = MRCreateXPCMessage(0x200000000000017uLL);
  MRAddPlayerPathToXPCMessage(v6, a2);
  ExternalRepresentation = (void *)MRLyricsEventCreateExternalRepresentation(a3);
  id v8 = ExternalRepresentation;
  if (ExternalRepresentation)
  {
    id v9 = ExternalRepresentation;
    xpc_dictionary_set_data(v6, "MRXPC_LYRICS_EVENT_DATA", (const void *)[v9 bytes], objc_msgSend(v9, "length"));
  }
  size_t v10 = [v11 connection];
  xpc_connection_send_message(v10, v6);
}

void MRMediaRemoteServiceGetClientProperties(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  kdebug_trace();
  id v10 = a1;
  id v11 = MRCreateXPCMessage(0x20000000000000CuLL);
  MRAddPlayerPathToXPCMessage(v11, v9);

  id v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetClientProperties_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void __MRMediaRemoteServiceGetClientProperties_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    id Error = (void *)MRMediaRemoteCreateError(1);
    id v5 = 0;
  }
  else
  {
    id v5 = MRCreateClientFromXPCMessage(v3);
    id Error = (void *)MRCreateClientErrorFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *, void *))(v7 + 16))(v7, v5, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceSetClientProperties(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = a3;
  id v8 = a4;
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x20000000000000DuLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  if (v8)
  {
    id v11 = (void *)[v8 copy];
    v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = __MRMediaRemoteServiceSetClientProperties_block_invoke;
    v15[3] = &unk_1E57D0F98;
    id v16 = v11;
    id v12 = v11;
    id v13 = _MRServiceCreateErrorHandlerBlock(v15);
    id v14 = [v9 connection];
    xpc_connection_send_message_with_reply(v14, v10, v7, v13);
  }
  else
  {
    id v12 = [v9 connection];
    xpc_connection_send_message(v12, v10);
  }
}

uint64_t __MRMediaRemoteServiceSetClientProperties_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRMediaRemoteServiceUpdateClientProperties(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = a3;
  id v8 = a4;
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x20000000000000EuLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  if (v8)
  {
    id v11 = (void *)[v8 copy];
    v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = __MRMediaRemoteServiceUpdateClientProperties_block_invoke;
    v15[3] = &unk_1E57D0F98;
    id v16 = v11;
    id v12 = v11;
    id v13 = _MRServiceCreateErrorHandlerBlock(v15);
    id v14 = [v9 connection];
    xpc_connection_send_message_with_reply(v14, v10, v7, v13);
  }
  else
  {
    id v12 = [v9 connection];
    xpc_connection_send_message(v12, v10);
  }
}

uint64_t __MRMediaRemoteServiceUpdateClientProperties_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRMediaRemoteServiceGetPlayerProperties(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a1;
  id v9 = a3;
  id v10 = a2;
  id v11 = MRCreateXPCMessage(0x20000000000000FuLL);
  MRAddPlayerPathToXPCMessage(v11, v10);

  id v12 = [v8 mrXPCConnection];

  v14[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __MRMediaRemoteServiceGetPlayerProperties_block_invoke;
  v14[3] = &unk_1E57D1490;
  id v15 = v7;
  id v13 = v7;
  [v12 sendMessage:v11 queue:v9 reply:v14];
}

void __MRMediaRemoteServiceGetPlayerProperties_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v7 = a3;
  id v5 = MRCreatePlayerFromXPCMessage(a2);
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, void *, id))(v6 + 16))(v6, v5, v7);
  }
}

void MRMediaRemoteServiceSetPlayerProperties(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x200000000000010uLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  if (v8)
  {
    id v11 = (void *)[v8 copy];
    v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = __MRMediaRemoteServiceSetPlayerProperties_block_invoke;
    v15[3] = &unk_1E57D0F98;
    id v16 = v11;
    id v12 = v11;
    id v13 = _MRServiceCreateErrorHandlerBlock(v15);
    id v14 = [v9 connection];
    xpc_connection_send_message_with_reply(v14, v10, v7, v13);
  }
  else
  {
    id v12 = [v9 connection];
    xpc_connection_send_message(v12, v10);
  }
}

uint64_t __MRMediaRemoteServiceSetPlayerProperties_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRMediaRemoteServiceUpdatePlayerProperties(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x200000000000011uLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  if (v8)
  {
    id v11 = (void *)[v8 copy];
    v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = __MRMediaRemoteServiceUpdatePlayerProperties_block_invoke;
    v15[3] = &unk_1E57D0F98;
    id v16 = v11;
    id v12 = v11;
    id v13 = _MRServiceCreateErrorHandlerBlock(v15);
    id v14 = [v9 connection];
    xpc_connection_send_message_with_reply(v14, v10, v7, v13);
  }
  else
  {
    id v12 = [v9 connection];
    xpc_connection_send_message(v12, v10);
  }
}

uint64_t __MRMediaRemoteServiceUpdatePlayerProperties_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRMediaRemoteServiceGetElectedPlayerPath(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  id v7 = a2;
  id v8 = MRCreateXPCMessage(0x20000000000002EuLL);
  id v9 = [v6 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetElectedPlayerPath_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v12 = v5;
  id v10 = v5;
  xpc_connection_send_message_with_reply(v9, v8, v7, handler);
}

void __MRMediaRemoteServiceGetElectedPlayerPath_block_invoke(uint64_t a1, void *a2)
{
  if (a2 == (void *)MEMORY[0x1E4F14520] || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = MRCreatePlayerPathFromXPCMessage(a2);
  }
  id v5 = (id)v4;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRMediaRemoteServiceSetPlaybackState(void *a1, void *a2, unsigned int a3, void *a4, void *a5, double a6)
{
  id v11 = a5;
  id v12 = a4;
  kdebug_trace();
  id v13 = a1;
  id v14 = MRCreateXPCMessage(0x200000000000013uLL);
  MRAddPlayerPathToXPCMessage(v14, a2);
  xpc_dictionary_set_uint64(v14, "MRXPC_PLAYBACK_STATE_KEY", a3);
  xpc_dictionary_set_double(v14, "MRXPC_TIMESTAMP", a6);
  v18[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = __MRMediaRemoteServiceSetPlaybackState_block_invoke;
  v18[3] = &unk_1E57D0F98;
  id v19 = v11;
  id v15 = v11;
  id v16 = _MRServiceCreateErrorHandlerBlock(v18);
  id v17 = [v13 connection];

  xpc_connection_send_message_with_reply(v17, v14, v12, v16);
}

uint64_t __MRMediaRemoteServiceSetPlaybackState_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceGetAnyAppIsPlaying(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x200000000000014uLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  id v11 = [v9 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetAnyAppIsPlaying_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v14 = v7;
  id v12 = v7;
  xpc_connection_send_message_with_reply(v11, v10, v8, handler);
}

void __MRMediaRemoteServiceGetAnyAppIsPlaying_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v7 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    BOOL v5 = 0;
  }
  else
  {
    BOOL v5 = xpc_dictionary_get_BOOL(v3, "MRXPC_APP_IS_PLAYING_KEY");
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, BOOL))(v6 + 16))(v6, v5);
  }
  kdebug_trace();
}

uint64_t MRMediaRemoteServiceSelectSource(void *a1, void *a2)
{
  kdebug_trace();
  id v4 = a1;
  BOOL v5 = MRCreateXPCMessage(0x100000000000001uLL);
  UTF8String = (const char *)_MRServiceGetUTF8String(a2);
  xpc_dictionary_set_string(v5, "MRXPC_SOURCE_ID_KEY", UTF8String);
  id v7 = [v4 connection];

  xpc_connection_send_message(v7, v5);
  return 1;
}

void MRMediaRemoteServiceRequestVideoThumbnails(void *a1, void *a2, const void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x200000000000015uLL);
  MRAddPlayerPathToXPCMessage(v12, a2);
  memcpy(__dst, a3, sizeof(__dst));
  MRAddVideoThumbnailRequestToXPCMessage(v12, (uint64_t)__dst);
  id v13 = [v11 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceRequestVideoThumbnails_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v16 = v9;
  id v14 = v9;
  xpc_connection_send_message_with_reply(v13, v12, v10, handler);
}

void __MRMediaRemoteServiceRequestVideoThumbnails_block_invoke(uint64_t a1, void *a2)
{
  id v4 = (void *)MEMORY[0x1E4F14520];
  id v5 = a2;
  uint64_t v6 = v5;
  if (a2 == v4 || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();

    id Error = (void *)MRMediaRemoteCreateError(1);
    id v9 = 0;
  }
  else
  {
    id v9 = MRCreateVideoThumbnailsFromXPCMessage(v5);
    id Error = (void *)MRCreateClientErrorFromXPCMessage(v6);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceRequestAudioAmplitudeSamples(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x200000000000016uLL);
  MRAddPlayerPathToXPCMessage(v12, a2);
  xpc_dictionary_set_uint64(v12, "MRXPC_AUDIO_AMPLITUDE_SAMPLES_COUNT_KEY", a3);
  id v13 = [v11 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceRequestAudioAmplitudeSamples_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v16 = v9;
  id v14 = v9;
  xpc_connection_send_message_with_reply(v13, v12, v10, handler);
}

void __MRMediaRemoteServiceRequestAudioAmplitudeSamples_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v9 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    id Error = (void *)MRMediaRemoteCreateError(1);
    uint64_t v6 = 0;
  }
  else
  {
    id v7 = MRCreateDataFromXPCMessage(v3, "MRXPC_AUDIO_AMPLITUDE_ARRAY_DATA_KEY");
    id v8 = (UInt8 *)v7;
    if (v7)
    {
      uint64_t v6 = [MEMORY[0x1E4F28F98] propertyListWithData:v7 options:0 format:0 error:0];
    }
    else
    {
      uint64_t v6 = 0;
    }
    id Error = (void *)MRCreateClientErrorFromXPCMessage(v9);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

uint64_t MRMediaRemoteServiceCopyResolvedPlayerPath(void *a1, void *a2, void *a3)
{
  kdebug_trace();
  id v6 = a1;
  id v7 = MRCreateXPCMessage(0x200000000000018uLL);
  MRAddPlayerPathToXPCMessage(v7, a2);
  id v8 = [v6 connection];

  xpc_object_t v9 = xpc_connection_send_message_with_reply_sync(v8, v7);
  if (v9 == (xpc_object_t)MEMORY[0x1E4F14520] || v9 == (xpc_object_t)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    id Error = (void *)MRMediaRemoteCreateError(1);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = MRCreatePlayerPathFromXPCMessage(v9);
    id Error = (void *)MRCreateClientErrorFromXPCMessage(v9);
  }
  kdebug_trace();
  if (a3) {
    *a3 = Error;
  }

  return v11;
}

void MRMediaRemoteServiceGetNowPlayingClients(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  kdebug_trace();
  if (v7 && v8)
  {
    id v9 = a1;
    id v10 = MRCreateXPCMessage(0x20000000000001FuLL);
    MRAddPlayerPathToXPCMessage(v10, a2);
    uint64_t v11 = [v9 connection];

    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceGetNowPlayingClients_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v13 = v8;
    xpc_connection_send_message_with_reply(v11, v10, v7, handler);
  }
  else
  {
    kdebug_trace();
  }
}

void __MRMediaRemoteServiceGetNowPlayingClients_block_invoke(uint64_t a1, void *a2)
{
  BOOL v4 = (void *)MEMORY[0x1E4F14520];
  id v5 = a2;
  id v6 = v5;
  if (a2 == v4 || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();

    id Error = (void *)MRMediaRemoteCreateError(1);
    id v9 = 0;
  }
  else
  {
    id v9 = (id)MRCreateClientArrayFromXPCMessage(v5);
    id Error = (void *)MRCreateClientErrorFromXPCMessage(v6);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceGetNowPlayingPlayers(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x200000000000023uLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  uint64_t v11 = [v9 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetNowPlayingPlayers_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v14 = v7;
  id v12 = v7;
  xpc_connection_send_message_with_reply(v11, v10, v8, handler);
}

void __MRMediaRemoteServiceGetNowPlayingPlayers_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    id Error = (void *)MRMediaRemoteCreateError(1);
    id v5 = 0;
  }
  else
  {
    id v5 = (void *)MRCreatePlayerArrayFromXPCMessage(v3);
    id Error = (void *)MRCreateClientErrorFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *, void *))(v7 + 16))(v7, v5, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceSetNowPlayingClient(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = _MRLogForCategory(0);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    id v17 = a2;
    _os_log_impl(&dword_194F3C000, v9, OS_LOG_TYPE_DEFAULT, "Setting nowPlayingClient %{public}@", buf, 0xCu);
  }

  id v10 = a1;
  uint64_t v11 = MRCreateXPCMessage(0x200000000000020uLL);
  MRAddPlayerPathToXPCMessage(v11, a2);
  id v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceSetNowPlayingClient_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void __MRMediaRemoteServiceSetNowPlayingClient_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = MRMediaRemoteCreateError(1);
  }
  else
  {
    uint64_t Error = MRCreateClientErrorFromXPCMessage(v3);
  }
  id v6 = (void *)Error;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v6);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceGetNowPlayingClient(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x200000000000021uLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  uint64_t v11 = [v9 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetNowPlayingClient_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v14 = v7;
  id v12 = v7;
  xpc_connection_send_message_with_reply(v11, v10, v8, handler);
}

void __MRMediaRemoteServiceGetNowPlayingClient_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = (void *)MRMediaRemoteCreateError(1);
    id v6 = 0;
  }
  else
  {
    uint64_t Error = (void *)MRCreateClientErrorFromXPCMessage(v3);
    id v6 = MRCreateClientFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *, void *))(v7 + 16))(v7, v6, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceGetNowPlayingPlayer(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x200000000000025uLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  uint64_t v11 = [v9 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetNowPlayingPlayer_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v14 = v7;
  id v12 = v7;
  xpc_connection_send_message_with_reply(v11, v10, v8, handler);
}

void __MRMediaRemoteServiceGetNowPlayingPlayer_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = (void *)MRMediaRemoteCreateError(1);
    id v6 = 0;
  }
  else
  {
    uint64_t Error = (void *)MRCreateClientErrorFromXPCMessage(v3);
    id v6 = MRCreatePlayerFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *, void *))(v7 + 16))(v7, v6, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceGetActivePlayerPathsForLocalOrigin(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  kdebug_trace();
  id v7 = a1;
  id v8 = MRCreateXPCMessage(0x200000000000027uLL);
  id v9 = [v7 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetActivePlayerPathsForLocalOrigin_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v12 = v5;
  id v10 = v5;
  xpc_connection_send_message_with_reply(v9, v8, v6, handler);
}

void __MRMediaRemoteServiceGetActivePlayerPathsForLocalOrigin_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = (void *)MRMediaRemoteCreateError(1);
    id v5 = 0;
  }
  else
  {
    id v5 = MRCreatePlayerPathArrayFromXPCMessage(v3);
    uint64_t Error = (void *)MRCreateClientErrorFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *, void *))(v7 + 16))(v7, v5, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceRemoveClient(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = _MRLogForCategory(0);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    id v17 = a2;
    _os_log_impl(&dword_194F3C000, v9, OS_LOG_TYPE_DEFAULT, "Removing client %{public}@", buf, 0xCu);
  }

  id v10 = a1;
  uint64_t v11 = MRCreateXPCMessage(0x200000000000022uLL);
  MRAddPlayerPathToXPCMessage(v11, a2);
  id v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceRemoveClient_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void __MRMediaRemoteServiceRemoveClient_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = MRMediaRemoteCreateError(1);
  }
  else
  {
    uint64_t Error = MRCreateClientErrorFromXPCMessage(v3);
  }
  id v6 = (void *)Error;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v6);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceGetPictureInPictureEnabledForPlayer(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x200000000000033uLL);
  MRAddPlayerPathToXPCMessage(v10, a2);
  uint64_t v11 = [v9 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetPictureInPictureEnabledForPlayer_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v14 = v7;
  id v12 = v7;
  xpc_connection_send_message_with_reply(v11, v10, v8, handler);
}

void __MRMediaRemoteServiceGetPictureInPictureEnabledForPlayer_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = (void *)MRMediaRemoteCreateError(1);
    BOOL v5 = 0;
  }
  else
  {
    BOOL v5 = xpc_dictionary_get_BOOL(v3, "MRXPC_PICTURE_IN_PICTURE_ENABLED_KEY");
    uint64_t Error = (void *)MRCreateClientErrorFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, BOOL, void *))(v7 + 16))(v7, v5, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceSetPictureInPictureEnabledForPlayer(void *a1, void *a2, BOOL a3, void *a4, void *a5)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v9 = a5;
  id v10 = a4;
  kdebug_trace();
  uint64_t v11 = _MRLogForCategory(0);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    id v12 = @"false";
    if (a3) {
      id v12 = @"true";
    }
    *(_DWORD *)long long buf = 138543618;
    id v20 = v12;
    __int16 v21 = 2114;
    char v22 = a2;
    _os_log_impl(&dword_194F3C000, v11, OS_LOG_TYPE_DEFAULT, "Set picture in picture enabled %{public}@ for client %{public}@", buf, 0x16u);
  }

  id v13 = a1;
  id v14 = MRCreateXPCMessage(0x200000000000034uLL);
  MRAddPlayerPathToXPCMessage(v14, a2);
  xpc_dictionary_set_BOOL(v14, "MRXPC_PICTURE_IN_PICTURE_ENABLED_KEY", a3);
  id v15 = [v13 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceSetPictureInPictureEnabledForPlayer_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v18 = v9;
  id v16 = v9;
  xpc_connection_send_message_with_reply(v15, v14, v10, handler);
}

void __MRMediaRemoteServiceSetPictureInPictureEnabledForPlayer_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = MRMediaRemoteCreateError(1);
  }
  else
  {
    uint64_t Error = MRCreateClientErrorFromXPCMessage(v3);
  }
  id v6 = (void *)Error;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v6);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceRemovePlayer(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = _MRLogForCategory(0);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    id v17 = a2;
    _os_log_impl(&dword_194F3C000, v9, OS_LOG_TYPE_DEFAULT, "Removing nowPlayingPlayer %{public}@ ", buf, 0xCu);
  }

  id v10 = a1;
  uint64_t v11 = MRCreateXPCMessage(0x200000000000026uLL);
  MRAddPlayerPathToXPCMessage(v11, a2);
  id v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceRemovePlayer_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void __MRMediaRemoteServiceRemovePlayer_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = MRMediaRemoteCreateError(1);
  }
  else
  {
    uint64_t Error = MRCreateClientErrorFromXPCMessage(v3);
  }
  id v6 = (void *)Error;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v6);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceSetHardwareRemoteBehavior(void *a1, unsigned int a2)
{
  kdebug_trace();
  id v4 = a1;
  MRCreateXPCMessage(0x200000000000029uLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  xpc_dictionary_set_uint64(message, "MRXPC_HARDWARE_REMOTE_BEHAVIOR_KEY", a2);
  BOOL v5 = [v4 connection];

  xpc_connection_send_message(v5, message);
}

void MRMediaRemoteServiceSendContentItemArtworkChangedNotification(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  MRCreateXPCMessage(0x20000000000002AuLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  MRAddPlayerPathToXPCMessage(message, a2);
  MRAddContentItemsToXPCMessage(message, a3);
  id v6 = [v5 connection];

  xpc_connection_send_message(v6, message);
}

void MRMediaRemoteServicePlaybackSessionRequest(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteServicePlaybackSessionRequest_block_invoke;
  v9[3] = &unk_1E57D2638;
  id v10 = v7;
  id v8 = v7;
  _MRMediaRemoteServiceProtobuf(a1, 0x20000000000002FuLL, a2, a3, v9);
}

void __MRMediaRemoteServicePlaybackSessionRequest_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = a2;
    id v6 = [v3 error];
    if (v6) {
      id v4 = 0;
    }
    else {
      id v4 = v3;
    }
    id v5 = [v3 error];
    (*(void (**)(uint64_t, id, void *))(v2 + 16))(v2, v4, v5);
  }
}

void MRMediaRemoteServiceSendPlaybackSession(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteServiceSendPlaybackSession_block_invoke;
  v9[3] = &unk_1E57D2638;
  id v10 = v7;
  id v8 = v7;
  _MRMediaRemoteServiceProtobuf(a1, 0x400000000000007uLL, a2, a3, v9);
}

void __MRMediaRemoteServiceSendPlaybackSession_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = a2;
    id v6 = [v3 error];
    if (v6) {
      id v4 = 0;
    }
    else {
      id v4 = v3;
    }
    id v5 = [v3 error];
    (*(void (**)(uint64_t, id, void *))(v2 + 16))(v2, v4, v5);
  }
}

void MRMediaRemoteServiceSendPlaybackSessionMigrateBegin(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteServiceSendPlaybackSessionMigrateBegin_block_invoke;
  v9[3] = &unk_1E57D2638;
  id v10 = v7;
  id v8 = v7;
  _MRMediaRemoteServiceProtobuf(a1, 0x400000000000008uLL, a2, a3, v9);
}

void __MRMediaRemoteServiceSendPlaybackSessionMigrateBegin_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = a2;
    id v4 = [v3 error];
    (*(void (**)(uint64_t, id, id))(v2 + 16))(v2, v3, v4);
  }
}

void MRMediaRemoteServiceSendPlaybackSessionMigrateEnd(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteServiceSendPlaybackSessionMigrateEnd_block_invoke;
  v9[3] = &unk_1E57D2638;
  id v10 = v7;
  id v8 = v7;
  _MRMediaRemoteServiceProtobuf(a1, 0x400000000000009uLL, a2, a3, v9);
}

void __MRMediaRemoteServiceSendPlaybackSessionMigrateEnd_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = a2;
    id v4 = [v3 error];
    (*(void (**)(uint64_t, id, id))(v2 + 16))(v2, v3, v4);
  }
}

void MRMediaRemoteServiceGetLastPlayingDateForPlayer(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  kdebug_trace();
  id v10 = a1;
  uint64_t v11 = MRCreateXPCMessage(0x200000000000035uLL);
  MRAddPlayerPathToXPCMessage(v11, v9);

  id v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetLastPlayingDateForPlayer_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void __MRMediaRemoteServiceGetLastPlayingDateForPlayer_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = (void *)MRMediaRemoteCreateError(1);
    id v5 = 0;
  }
  else
  {
    id v5 = objc_msgSend(MEMORY[0x1E4F1C9C8], "dateWithTimeIntervalSinceReferenceDate:", xpc_dictionary_get_double(v3, "MRXPC_TIMESTAMP"));
    uint64_t Error = (void *)MRCreateClientErrorFromXPCMessage(v8);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *, void *))(v7 + 16))(v7, v5, Error);
  }
  kdebug_trace();
}

id MRMediaRemoteServiceGetLastPlayingDateForPlayerSync(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  kdebug_trace();
  id v6 = a1;
  uint64_t v7 = MRCreateXPCMessage(0x200000000000035uLL);
  MRAddPlayerPathToXPCMessage(v7, v5);

  id v8 = [v6 connection];

  xpc_object_t v9 = xpc_connection_send_message_with_reply_sync(v8, v7);
  if (v9 != (xpc_object_t)MEMORY[0x1E4F14520] && v9 != (xpc_object_t)MEMORY[0x1E4F14528])
  {
    id v10 = objc_msgSend(MEMORY[0x1E4F1C9C8], "dateWithTimeIntervalSinceReferenceDate:", xpc_dictionary_get_double(v9, "MRXPC_TIMESTAMP"));
    if (!a3) {
      goto LABEL_9;
    }
    uint64_t Error = (void *)MRCreateClientErrorFromXPCMessage(v9);
    goto LABEL_7;
  }
  _MRServiceLogReplyError();
  if (a3)
  {
    uint64_t Error = (void *)MRMediaRemoteCreateError(1);
    id v10 = 0;
LABEL_7:
    *a3 = Error;
    goto LABEL_9;
  }
  id v10 = 0;
LABEL_9:
  kdebug_trace();

  return v10;
}

void MRMediaRemoteServiceSetPlayerClientProperties(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  id v11 = a3;
  kdebug_trace();
  id v12 = a1;
  id v13 = MRCreateXPCMessage(0x200000000000037uLL);
  MRAddProtobufToXPCMessage(v13, v11);

  MRAddPlayerPathToXPCMessage(v13, a2);
  id v14 = [v12 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceSetPlayerClientProperties_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v17 = v9;
  id v15 = v9;
  xpc_connection_send_message_with_reply(v14, v13, v10, handler);
}

void __MRMediaRemoteServiceSetPlayerClientProperties_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = MRMediaRemoteCreateError(1);
  }
  else
  {
    uint64_t Error = MRCreateClientErrorFromXPCMessage(v3);
  }
  id v6 = (void *)Error;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v6);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceTriggerAudioFade(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteServiceTriggerAudioFade_block_invoke;
  v9[3] = &unk_1E57D2638;
  id v10 = v7;
  id v8 = v7;
  _MRMediaRemoteServiceProtobuf(a1, 0x40000000000000AuLL, a2, a3, v9);
}

void __MRMediaRemoteServiceTriggerAudioFade_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = a2;
    id v4 = [v3 error];
    (*(void (**)(uint64_t, id, id))(v2 + 16))(v2, v3, v4);
  }
}

void MRMediaRemoteServiceGetAvailableOrigins(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  kdebug_trace();
  if (v6)
  {
    id v7 = a1;
    id v8 = MRCreateXPCMessage(0x200000000000019uLL);
    id v9 = [v7 connection];

    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceGetAvailableOrigins_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v11 = v6;
    xpc_connection_send_message_with_reply(v9, v8, v5, handler);
  }
  else
  {
    kdebug_trace();
  }
}

void __MRMediaRemoteServiceGetAvailableOrigins_block_invoke(uint64_t a1, void *a2)
{
  if (a2 == (void *)MEMORY[0x1E4F14520] || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = MRCreateOriginArrayFromXPCMessage(a2);
  }
  id v5 = (id)v4;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceSetActiveOrigin(void *a1, void *a2)
{
  kdebug_trace();
  id v4 = a1;
  MRCreateXPCMessage(0x20000000000001AuLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  MRAddOriginToXPCMessage(message, a2);
  id v5 = [v4 connection];

  xpc_connection_send_message(v5, message);
}

void MRMediaRemoteServiceGetActiveOrigin(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  kdebug_trace();
  id v7 = a1;
  id v8 = MRCreateXPCMessage(0x20000000000001BuLL);
  id v9 = [v7 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetActiveOrigin_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v12 = v5;
  id v10 = v5;
  xpc_connection_send_message_with_reply(v9, v8, v6, handler);
}

void __MRMediaRemoteServiceGetActiveOrigin_block_invoke(uint64_t a1, void *a2)
{
  if (a2 == (void *)MEMORY[0x1E4F14520] || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = MRCreateOriginFromXPCMessage(a2);
  }
  id v5 = (id)v4;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceSetOriginClientProperties(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  id v11 = a3;
  id v12 = a2;
  kdebug_trace();
  id v13 = a1;
  id v14 = MRCreateXPCMessage(0x200000000000036uLL);
  MRAddProtobufToXPCMessage(v14, v11);

  MRAddOriginToXPCMessage(v14, v12);
  id v15 = [v13 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceSetOriginClientProperties_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v18 = v9;
  id v16 = v9;
  xpc_connection_send_message_with_reply(v15, v14, v10, handler);
}

void __MRMediaRemoteServiceSetOriginClientProperties_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v8 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = MRMediaRemoteCreateError(1);
  }
  else
  {
    uint64_t Error = MRCreateClientErrorFromXPCMessage(v3);
  }
  id v6 = (void *)Error;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v6);
  }
  kdebug_trace();
}

id __MRMediaRemoteServiceSetWakingPlayerPaths_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 protobuf];
  id v3 = [v2 data];

  return v3;
}

uint64_t __MRMediaRemoteServiceSetWakingPlayerPaths_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

void MRMediaRemoteServiceBeginActivity(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = a3;
  id v8 = a4;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x200000000000003uLL);
  _MRServiceAddAppActivityToXPCMessage(v10, a2);
  if (v8 && !v7)
  {
    id v13 = [MEMORY[0x1E4F28B00] currentHandler];
    id v14 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceBeginActivity(MRMediaRemoteServiceRef, MRApplicationActivityRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))");
    [v13 handleFailureInFunction:v14 file:@"MRMediaRemoteService.m" lineNumber:1996 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v15 = [v9 connection];
    xpc_connection_send_message(v15, v10);

    kdebug_trace();
    goto LABEL_8;
  }
  if (!v7 || !v8) {
    goto LABEL_7;
  }
  v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = __MRMediaRemoteServiceBeginActivity_block_invoke;
  v16[3] = &unk_1E57D0F98;
  id v17 = v8;
  id v11 = _MRServiceCreateErrorHandlerBlock(v16);
  id v12 = [v9 connection];
  xpc_connection_send_message_with_reply(v12, v10, v7, v11);

LABEL_8:
}

void _MRServiceAddAppActivityToXPCMessage(void *a1, uint64_t a2)
{
  if (a1 && a2)
  {
    id v3 = a1;
    id v4 = (id) _MRApplicationActivityCreateExternalRepresentation(a2);
    xpc_dictionary_set_data(v3, "MRXPC_APPLICATION_ACTIVITY_DATA_KEY", (const void *)[v4 bytes], objc_msgSend(v4, "length"));
  }
}

uint64_t __MRMediaRemoteServiceBeginActivity_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceGetCurrentActivity(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  kdebug_trace();
  if (v5 && v6)
  {
    id v7 = a1;
    id v8 = MRCreateXPCMessage(0x200000000000004uLL);
    id v9 = [v7 connection];

    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceGetCurrentActivity_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v11 = v6;
    xpc_connection_send_message_with_reply(v9, v8, v5, handler);
  }
  else
  {
    kdebug_trace();
  }
}

void __MRMediaRemoteServiceGetCurrentActivity_block_invoke(uint64_t a1, xpc_object_t xdict)
{
  if (xdict == (xpc_object_t)MEMORY[0x1E4F14520] || xdict == (xpc_object_t)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
LABEL_9:
    id v6 = 0;
    goto LABEL_10;
  }
  size_t length = 0;
  data = xpc_dictionary_get_data(xdict, "MRXPC_APPLICATION_ACTIVITY_DATA_KEY", &length);
  if (!data) {
    goto LABEL_9;
  }
  id v5 = [MEMORY[0x1E4F1C9B8] dataWithBytesNoCopy:data length:length freeWhenDone:0];
  id v6 = (void *)_MRApplicationActivityCreateWithExternalRepresentation((uint64_t)v5);

LABEL_10:
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceEndActivity(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x200000000000005uLL);
  _MRServiceAddAppActivityToXPCMessage(v10, a2);
  if (v8 && !v7)
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceEndActivity(MRMediaRemoteServiceRef, MRApplicationActivityRef, __strong dispatch_queue_t, void (^__strong)(MRMediaRemoteError))");
    [v12 handleFailureInFunction:v13 file:@"MRMediaRemoteService.m" lineNumber:2040 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v14 = [v9 connection];
    xpc_connection_send_message(v14, v10);

    kdebug_trace();
    goto LABEL_8;
  }
  if (!v7 || !v8) {
    goto LABEL_7;
  }
  id v11 = [v9 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceEndActivity_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v16 = v8;
  xpc_connection_send_message_with_reply(v11, v10, v7, handler);

LABEL_8:
}

uint64_t __MRMediaRemoteServiceEndActivity_block_invoke(uint64_t a1, xpc_object_t xdict)
{
  if (xdict == (xpc_object_t)MEMORY[0x1E4F14520] || xdict == (xpc_object_t)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  else {
    xpc_dictionary_get_uint64(xdict, "MRXPC_ERROR_CODE_KEY");
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

  return kdebug_trace();
}

void MRMediaRemoteServiceSetRouteDiscoveryMode(void *a1, unsigned int a2)
{
  kdebug_trace();
  id v4 = a1;
  MRCreateXPCMessage(0x300000000000001uLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  xpc_dictionary_set_uint64(message, "MRXPC_ROUTE_DISCOVERY_MODE_KEY", a2);
  id v5 = [v4 connection];

  xpc_connection_send_message(v5, message);
}

BOOL MRMediaRemoteServiceSetPickedRoute(void *a1, uint64_t a2, void *a3, unsigned int a4)
{
  kdebug_trace();
  id v8 = a1;
  id v9 = MRCreateXPCMessage(0x300000000000003uLL);
  xpc_dictionary_set_uint64(v9, "MRXPC_ROUTE_OPTIONS_KEY", a4);
  if (a3)
  {
    UTF8String = (const char *)_MRServiceGetUTF8String(a3);
    xpc_dictionary_set_string(v9, "MRXPC_ROUTE_PASSWORD_KEY", UTF8String);
  }
  if (a2)
  {
    id v11 = [MEMORY[0x1E4F28F98] dataWithPropertyList:a2 format:200 options:0 error:0];
    xpc_dictionary_set_data(v9, "MRXPC_ROUTE_DESCRIPTION_DATA_KEY", (const void *)[v11 bytes], objc_msgSend(v11, "length"));
  }
  id v12 = [v8 connection];
  xpc_object_t v13 = xpc_connection_send_message_with_reply_sync(v12, v9);

  if (v13 == (xpc_object_t)MEMORY[0x1E4F14520] || v13 == (xpc_object_t)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    BOOL v14 = 0;
  }
  else
  {
    BOOL v14 = xpc_dictionary_get_uint64(v13, "MRXPC_ERROR_CODE_KEY") == 0;
  }
  kdebug_trace();

  return v14;
}

void MRMediaRemoteServiceFindAndPickRoute(void *a1, uint64_t a2, void *a3, unsigned int a4, void *a5, void *a6)
{
  id v11 = a6;
  id v12 = a5;
  kdebug_trace();
  id v13 = a1;
  BOOL v14 = MRCreateXPCMessage(0x300000000000003uLL);
  xpc_dictionary_set_uint64(v14, "MRXPC_ROUTE_OPTIONS_KEY", a4);
  if (a3)
  {
    UTF8String = (const char *)_MRServiceGetUTF8String(a3);
    xpc_dictionary_set_string(v14, "MRXPC_ROUTE_PASSWORD_KEY", UTF8String);
  }
  RouteUID = (void *)MRAVRouteQueryGetRouteUID(a2);
  if (RouteUID)
  {
    id v17 = (const char *)_MRServiceGetUTF8String(RouteUID);
    xpc_dictionary_set_string(v14, "MRXPC_ROUTE_UID_KEY", v17);
  }
  id v18 = [v13 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceFindAndPickRoute_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v21 = v11;
  id v19 = v11;
  xpc_connection_send_message_with_reply(v18, v14, v12, handler);
}

void __MRMediaRemoteServiceFindAndPickRoute_block_invoke(uint64_t a1, void *a2)
{
  _MRServiceCreateGenericErrorFromReply(a2);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

id _MRServiceCreateGenericErrorFromReply(void *a1)
{
  uint64_t Error = (void *)_MRServiceGenericErrorCodeFromReply(a1);
  if (Error) {
    uint64_t Error = (void *)MRMediaRemoteCreateError((uint64_t)Error);
  }

  return Error;
}

int64_t MRMediaRemoteServiceGetPickedRouteVolumeControlCapabilitiesSync(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  kdebug_trace();
  id v6 = a1;
  id v7 = MRCreateXPCMessage(0x300000000000004uLL);
  MRAddPlayerPathToXPCMessage(v7, v5);

  id v8 = [v6 mrXPCConnection];

  uint64_t v13 = 0;
  id v9 = [v8 sendSyncMessage:v7 error:&v13];
  uint64_t v10 = v13;

  if (a3) {
    *a3 = v10;
  }
  if (v9 == (void *)MEMORY[0x1E4F14520] || v9 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    int64_t int64 = 0;
  }
  else
  {
    int64_t int64 = xpc_dictionary_get_int64(v9, "MRXPC_ROUTE_VOLUME_CONTROL_CAPABILITIES_KEY");
  }
  kdebug_trace();

  return int64;
}

void MRMediaRemoteServiceSetPickedRouteVolumeControlCapabilities(void *a1, void *a2, int a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x300000000000005uLL);
  MRAddPlayerPathToXPCMessage(v12, a2);
  xpc_dictionary_set_int64(v12, "MRXPC_ROUTE_VOLUME_CONTROL_CAPABILITIES_KEY", a3);
  if (v10 && !v9)
  {
    BOOL v14 = [MEMORY[0x1E4F28B00] currentHandler];
    id v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceSetPickedRouteVolumeControlCapabilities(MRMediaRemoteServiceRef, MRNowPlayingPlayerPathRef, MRVolumeControlCapabilities, __strong dispatch_queue_t, void (^__strong)(MRMediaRemoteError))");
    [v14 handleFailureInFunction:v15 file:@"MRMediaRemoteService.m" lineNumber:2213 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v16 = [v11 connection];
    xpc_connection_send_message(v16, v12);

    kdebug_trace();
    goto LABEL_8;
  }
  if (!v9 || !v10) {
    goto LABEL_7;
  }
  uint64_t v13 = [v11 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceSetPickedRouteVolumeControlCapabilities_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v18 = v10;
  xpc_connection_send_message_with_reply(v13, v12, v9, handler);

LABEL_8:
}

uint64_t __MRMediaRemoteServiceSetPickedRouteVolumeControlCapabilities_block_invoke(uint64_t a1, void *a2)
{
  if (a2 == (void *)MEMORY[0x1E4F14520] || a2 == (void *)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  else {
    _MRServiceGenericErrorCodeFromReply(a2);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

  return kdebug_trace();
}

uint64_t _MRServiceGenericErrorCodeFromReply(void *a1)
{
  if (a1 == (void *)MEMORY[0x1E4F14520] || a1 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    return 1;
  }
  else
  {
    return MRErrorFromXPCMessage(a1);
  }
}

void MRMediaRemoteServiceGetSavedAVRoutePassword(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x300000000000007uLL);
  UTF8String = (const char *)_MRServiceGetUTF8String(a2);
  xpc_dictionary_set_string(v10, "MRXPC_ROUTE_NAME_KEY", UTF8String);
  id v12 = [v9 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetSavedAVRoutePassword_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v10, v8, handler);
}

void __MRMediaRemoteServiceGetSavedAVRoutePassword_block_invoke(uint64_t a1, xpc_object_t xdict)
{
  if (xdict == (xpc_object_t)MEMORY[0x1E4F14520] || xdict == (xpc_object_t)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
  }
  else
  {
    string = xpc_dictionary_get_string(xdict, "MRXPC_ROUTE_PASSWORD_KEY");
    if (string)
    {
      uint64_t v5 = [NSString stringWithUTF8String:string];
      goto LABEL_10;
    }
  }
  uint64_t v5 = 0;
LABEL_10:
  id v6 = (id)v5;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceSetSavedAVRoutePassword(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x300000000000008uLL);
  UTF8String = (const char *)_MRServiceGetUTF8String(a2);
  xpc_dictionary_set_string(v12, "MRXPC_ROUTE_NAME_KEY", UTF8String);
  BOOL v14 = (const char *)_MRServiceGetUTF8String(a3);
  xpc_dictionary_set_string(v12, "MRXPC_ROUTE_PASSWORD_KEY", v14);
  if (v10 && !v9)
  {
    id v16 = [MEMORY[0x1E4F28B00] currentHandler];
    id v17 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceSetSavedAVRoutePassword(MRMediaRemoteServiceRef, CFStringRef, CFStringRef, __strong dispatch_queue_t, void (^__strong)(MRMediaRemoteError))");
    [v16 handleFailureInFunction:v17 file:@"MRMediaRemoteService.m" lineNumber:2280 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v18 = [v11 connection];
    xpc_connection_send_message(v18, v12);

    kdebug_trace();
    goto LABEL_8;
  }
  if (!v9 || !v10) {
    goto LABEL_7;
  }
  id v15 = [v11 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceSetSavedAVRoutePassword_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v20 = v10;
  xpc_connection_send_message_with_reply(v15, v12, v9, handler);

LABEL_8:
}

uint64_t __MRMediaRemoteServiceSetSavedAVRoutePassword_block_invoke(uint64_t a1, void *a2)
{
  if (a2 == (void *)MEMORY[0x1E4F14520] || a2 == (void *)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  else {
    _MRServiceGenericErrorCodeFromReply(a2);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

  return kdebug_trace();
}

void MRMediaRemoteServiceClearAllAVRoutePasswords(void *a1)
{
  id v1 = a1;
  MRCreateXPCMessage(0x300000000000009uLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = [v1 connection];

  xpc_object_t v3 = xpc_connection_send_message_with_reply_sync(v2, message);
}

void MRMediaRemoteServiceUnpickAirPlayAVRoutes(void *a1, void *a2, void *a3)
{
  replyq = a2;
  id v5 = a3;
  kdebug_trace();
  id v6 = a1;
  id v7 = MRCreateXPCMessage(0x30000000000000AuLL);
  if (v5 && !replyq)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    id v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceUnpickAirPlayAVRoutes(MRMediaRemoteServiceRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))");
    [v10 handleFailureInFunction:v11 file:@"MRMediaRemoteService.m" lineNumber:2312 description:@"Completion block was provided but without a queue"];
  }
  else if (replyq && v5)
  {
    id v8 = _MRServiceCreateErrorHandlerBlock(v5);
    id v9 = [v6 connection];
    xpc_connection_send_message_with_reply(v9, v7, replyq, v8);

    kdebug_trace();
    goto LABEL_8;
  }
  id v12 = [v6 connection];
  xpc_connection_send_message(v12, v7);

  kdebug_trace();
LABEL_8:
}

void MRMediaRemoteServiceSetApplicationPickedRoutes(void *a1, uint64_t a2, BOOL a3)
{
  kdebug_trace();
  id v6 = a1;
  MRCreateXPCMessage(0x30000000000000BuLL);
  xpc_object_t xdict = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  MRAddPropertyListToXPCMessage(xdict, a2, "MRXPC_ROUTES_DATA_KEY");
  xpc_dictionary_set_BOOL(xdict, "MRXPC_ROUTE_OPTIONS_KEY", a3);
  id v7 = [v6 connection];

  xpc_connection_send_message(v7, xdict);
}

void MRMediaRemoteServiceGetReceiverAirPlaySecuritySettings(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  kdebug_trace();
  if (v5 && v6)
  {
    id v7 = a1;
    id v8 = MRCreateXPCMessage(0x30000000000000CuLL);
    id v9 = [v7 connection];

    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceGetReceiverAirPlaySecuritySettings_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v11 = v6;
    xpc_connection_send_message_with_reply(v9, v8, v5, handler);
  }
  else
  {
    kdebug_trace();
  }
}

void __MRMediaRemoteServiceGetReceiverAirPlaySecuritySettings_block_invoke(uint64_t a1, void *a2)
{
  if (a2 == (void *)MEMORY[0x1E4F14520] || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    id v5 = 0;
  }
  else
  {
    id v4 = (UInt8 *)MRCreateDataFromXPCMessage(a2, "MRXPC_AIRPLAY_SEC_SETTINGS_DATA_KEY");
    id v5 = (id)MRAVAirPlaySecuritySettingsCreateFromExternalRepresentation((uint64_t)v4);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

id MRMediaRemoteServiceGetExternalDevice(void *a1, void *a2, void *a3)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = [MEMORY[0x1E4F1C9C8] now];
  id v7 = [MEMORY[0x1E4F29128] UUID];
  id v8 = [v7 UUIDString];

  id v9 = (__CFString *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"getExternalDevice", v8];
  id v10 = v9;
  if (v5) {
    [(__CFString *)v9 appendFormat:@" for %@", v5];
  }
  id v11 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    unint64_t v31 = v10;
    _os_log_impl(&dword_194F3C000, v11, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  id v12 = a1;
  id v13 = MRCreateXPCMessage(0x30000000000001DuLL);
  MRAddEndpointUIDToXPCMessage(v13, v5);
  BOOL v14 = [v12 mrXPCConnection];

  id v29 = 0;
  id v15 = [v14 sendSyncMessage:v13 error:&v29];
  id v16 = v29;

  if (a3) {
    *a3 = v16;
  }
  id v17 = MRCreateDistantExternalDeviceFromXPCMessage(v15);
  id v18 = _MRLogForCategory(0xAuLL);
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);
  if (v17)
  {
    if (v5)
    {
      if (!v19) {
        goto LABEL_20;
      }
      id v20 = [MEMORY[0x1E4F1C9C8] date];
      [v20 timeIntervalSinceDate:v6];
      *(_DWORD *)long long buf = 138544386;
      unint64_t v31 = @"getExternalDevice";
      __int16 v32 = 2114;
      uint64_t v33 = v8;
      __int16 v34 = 2112;
      id v35 = v17;
      __int16 v36 = 2114;
      id v37 = v5;
      __int16 v38 = 2048;
      uint64_t v39 = v21;
      char v22 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
      uint64_t v23 = v18;
      uint32_t v24 = 52;
      goto LABEL_19;
    }
    if (!v19) {
      goto LABEL_20;
    }
    id v20 = [MEMORY[0x1E4F1C9C8] date];
    [v20 timeIntervalSinceDate:v6];
    *(_DWORD *)long long buf = 138544130;
    unint64_t v31 = @"getExternalDevice";
    __int16 v32 = 2114;
    uint64_t v33 = v8;
    __int16 v34 = 2112;
    id v35 = v17;
    __int16 v36 = 2048;
    id v37 = v26;
    char v22 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
    goto LABEL_16;
  }
  if (v5)
  {
    if (!v19) {
      goto LABEL_20;
    }
    id v20 = [MEMORY[0x1E4F1C9C8] date];
    [v20 timeIntervalSinceDate:v6];
    *(_DWORD *)long long buf = 138544130;
    unint64_t v31 = @"getExternalDevice";
    __int16 v32 = 2114;
    uint64_t v33 = v8;
    __int16 v34 = 2114;
    id v35 = v5;
    __int16 v36 = 2048;
    id v37 = v25;
    char v22 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
LABEL_16:
    uint64_t v23 = v18;
    uint32_t v24 = 42;
    goto LABEL_19;
  }
  if (!v19) {
    goto LABEL_20;
  }
  id v20 = [MEMORY[0x1E4F1C9C8] date];
  [v20 timeIntervalSinceDate:v6];
  *(_DWORD *)long long buf = 138543874;
  unint64_t v31 = @"getExternalDevice";
  __int16 v32 = 2114;
  uint64_t v33 = v8;
  __int16 v34 = 2048;
  id v35 = v27;
  char v22 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
  uint64_t v23 = v18;
  uint32_t v24 = 32;
LABEL_19:
  _os_log_impl(&dword_194F3C000, v23, OS_LOG_TYPE_DEFAULT, v22, buf, v24);

LABEL_20:

  return v17;
}

void MRMediaRemoteServicePromptRouteAuthorization(void *a1, void *a2, void *a3, void *a4)
{
}

void MRMediaRemoteServicePresentRouteAuthorizationStatus(void *a1, void *a2, void *a3, void *a4)
{
}

void MRMediaRemoteServiceSetNearbyDevice(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a1;
  id v9 = a3;
  id v10 = a2;
  id v11 = MRCreateXPCMessage(0x30000000000001AuLL);
  MRAddStringToXPCMessage(v11, v10, "MRXPC_ROUTE_UID_KEY");

  id v12 = [v8 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceSetNearbyDevice_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v9, handler);
}

uint64_t __MRMediaRemoteServiceSetNearbyDevice_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void MRMediaRemoteServiceMigrateFromEndpointToOutputDevices(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a4;
  id v12 = a6;
  id v13 = a1;
  BOOL v14 = a5;
  id v15 = a3;
  id v16 = a2;
  id v17 = MRCreateXPCMessage(0x300000000000026uLL);
  id v18 = objc_msgSend(v15, "mr_map:", &__block_literal_global_237);

  BOOL v19 = MSVArchivedDataWithRootObject();

  MRAddStringToXPCMessage(v17, v16, "MRXPC_SOURCE_ENDPOINT_UID_KEY");
  id v20 = [v11 protobufData];
  MRAddDataToXPCMessage(v17, v20, "MRXPC_MIGRATE_REQUEST_DATA_KEY");

  MRAddDataToXPCMessage(v17, v19, "MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY");
  kdebug_trace();
  uint64_t v21 = [v13 connection];

  v24[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v24[1] = 3221225472;
  v24[2] = __MRMediaRemoteServiceMigrateFromEndpointToOutputDevices_block_invoke_2;
  v24[3] = &unk_1E57D2528;
  id v25 = v11;
  id v26 = v12;
  id v22 = v12;
  id v23 = v11;
  xpc_connection_send_message_with_reply(v21, v17, v14, v24);
}

id __MRMediaRemoteServiceMigrateFromEndpointToOutputDevices_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 descriptor];
  xpc_object_t v3 = [v2 data];

  return v3;
}

void __MRMediaRemoteServiceMigrateFromEndpointToOutputDevices_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v10 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = (void *)MRMediaRemoteCreateError(1);
  }
  else
  {
    uint64_t Error = (void *)MRCreateClientErrorFromXPCMessage(v3);
    id v6 = [MRPlaybackSessionMigrateRequest alloc];
    id v7 = (UInt8 *)MRCreateDataFromXPCMessage(v10, "MRXPC_MIGRATE_REQUEST_DATA_KEY");
    id v8 = [(MRPlaybackSessionMigrateRequest *)v6 initWithData:v7];

    [*(id *)(a1 + 32) merge:v8];
  }
  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceMigrateFromEndpointToEndpoint(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a4;
  id v12 = a6;
  id v13 = a1;
  BOOL v14 = a5;
  id v15 = a3;
  id v16 = a2;
  id v17 = MRCreateXPCMessage(0x300000000000027uLL);
  MRAddStringToXPCMessage(v17, v16, "MRXPC_SOURCE_ENDPOINT_UID_KEY");

  MRAddStringToXPCMessage(v17, v15, "MRXPC_DESTINATION_ENDPOINT_UID_KEY");
  id v18 = [v11 protobufData];
  MRAddDataToXPCMessage(v17, v18, "MRXPC_MIGRATE_REQUEST_DATA_KEY");

  kdebug_trace();
  BOOL v19 = [v13 connection];

  v22[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  v22[2] = __MRMediaRemoteServiceMigrateFromEndpointToEndpoint_block_invoke;
  v22[3] = &unk_1E57D2528;
  id v23 = v11;
  id v24 = v12;
  id v20 = v12;
  id v21 = v11;
  xpc_connection_send_message_with_reply(v19, v17, v14, v22);
}

void __MRMediaRemoteServiceMigrateFromEndpointToEndpoint_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v10 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t Error = (void *)MRMediaRemoteCreateError(1);
  }
  else
  {
    uint64_t Error = (void *)MRCreateClientErrorFromXPCMessage(v3);
    id v6 = [MRPlaybackSessionMigrateRequest alloc];
    id v7 = (UInt8 *)MRCreateDataFromXPCMessage(v10, "MRXPC_MIGRATE_REQUEST_DATA_KEY");
    id v8 = [(MRPlaybackSessionMigrateRequest *)v6 initWithData:v7];

    [*(id *)(a1 + 32) merge:v8];
  }
  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, Error);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceSetMediaPlaybackVolume(void *a1, unsigned int a2, void *a3, void *a4, float a5)
{
  uint64_t v9 = a3;
  id v10 = a4;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x100000000000005uLL);
  xpc_dictionary_set_double(v12, "MRXPC_VOLUME_VALUE_KEY", a5);
  xpc_dictionary_set_uint64(v12, "MRXPC_VOLUME_OPTIONS_KEY", a2);
  if (v9 && v10)
  {
    v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    v16[2] = __MRMediaRemoteServiceSetMediaPlaybackVolume_block_invoke;
    v16[3] = &unk_1E57D0F98;
    id v17 = v10;
    id v13 = _MRServiceCreateErrorHandlerBlock(v16);
    BOOL v14 = [v11 connection];
    xpc_connection_send_message_with_reply(v14, v12, v9, v13);
  }
  else
  {
    id v15 = [v11 connection];
    xpc_connection_send_message(v15, v12);

    kdebug_trace();
  }
}

uint64_t __MRMediaRemoteServiceSetMediaPlaybackVolume_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceAdjustMediaPlaybackVolume(void *a1, unsigned int a2, void *a3, void *a4, float a5)
{
  uint64_t v9 = a3;
  id v10 = a4;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x100000000000006uLL);
  xpc_dictionary_set_double(v12, "MRXPC_VOLUME_VALUE_KEY", a5);
  xpc_dictionary_set_uint64(v12, "MRXPC_VOLUME_OPTIONS_KEY", a2);
  if (v9 && v10)
  {
    v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    v16[2] = __MRMediaRemoteServiceAdjustMediaPlaybackVolume_block_invoke;
    v16[3] = &unk_1E57D0F98;
    id v17 = v10;
    id v13 = _MRServiceCreateErrorHandlerBlock(v16);
    BOOL v14 = [v11 connection];
    xpc_connection_send_message_with_reply(v14, v12, v9, v13);
  }
  else
  {
    id v15 = [v11 connection];
    xpc_connection_send_message(v15, v12);

    kdebug_trace();
  }
}

uint64_t __MRMediaRemoteServiceAdjustMediaPlaybackVolume_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceAdjustMediaPlaybackVolumeWithAdjustment(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a5;
  id v9 = a4;
  id v10 = a1;
  id v11 = [[MRAdjustVolumeMessage alloc] initWithAdjustment:a2 outputDeviceUID:0 details:0];
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = __MRMediaRemoteServiceAdjustMediaPlaybackVolumeWithAdjustment_block_invoke;
  v13[3] = &unk_1E57D2638;
  id v14 = v8;
  id v12 = v8;
  _MRMediaRemoteServiceProtobuf(v10, 0x10000000000001AuLL, v11, v9, v13);
}

void __MRMediaRemoteServiceAdjustMediaPlaybackVolumeWithAdjustment_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = [a2 error];
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
  }
}

void MRMediaRemoteServiceSetSystemIsMuted(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a1;
  id v10 = [[MRMuteVolumeMessage alloc] initWithMuted:a2 outputDeviceUID:0 details:0];
  v12[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __MRMediaRemoteServiceSetSystemIsMuted_block_invoke;
  v12[3] = &unk_1E57D2638;
  id v13 = v7;
  id v11 = v7;
  _MRMediaRemoteServiceProtobuf(v9, 0x100000000000007uLL, v10, v8, v12);
}

void __MRMediaRemoteServiceSetSystemIsMuted_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = [a2 error];
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
  }
}

void MRMediaRemoteServiceGetGameControllerRemoteInputMode(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  kdebug_trace();
  id v7 = a1;
  id v8 = MRCreateXPCMessage(0x600000000000001uLL);
  id v9 = [v7 connection];

  if (v5 && v6)
  {
    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceGetGameControllerRemoteInputMode_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v11 = v6;
    xpc_connection_send_message_with_reply(v9, v8, v5, handler);
  }
  else
  {
    xpc_connection_send_message(v9, v8);

    kdebug_trace();
  }
}

uint64_t __MRMediaRemoteServiceGetGameControllerRemoteInputMode_block_invoke(uint64_t a1, xpc_object_t xdict)
{
  if (xdict == (xpc_object_t)MEMORY[0x1E4F14520] || xdict == (xpc_object_t)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  else {
    xpc_dictionary_get_uint64(xdict, "MRXPC_GAMECONTROLLER_INPUT_MODE_KEY");
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

  return kdebug_trace();
}

void MRMediaRemoteServiceSetGameControllerRemoteInputMode(void *a1, unsigned int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x600000000000002uLL);
  xpc_dictionary_set_uint64(v10, "MRXPC_GAMECONTROLLER_INPUT_MODE_KEY", a2);
  if (v7 && v8)
  {
    v14[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __MRMediaRemoteServiceSetGameControllerRemoteInputMode_block_invoke;
    v14[3] = &unk_1E57D0F98;
    id v15 = v8;
    id v11 = _MRServiceCreateErrorHandlerBlock(v14);
    id v12 = [v9 connection];
    xpc_connection_send_message_with_reply(v12, v10, v7, v11);
  }
  else
  {
    id v13 = [v9 connection];
    xpc_connection_send_message(v13, v10);

    kdebug_trace();
  }
}

uint64_t __MRMediaRemoteServiceSetGameControllerRemoteInputMode_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceTelevisionServerDeletePairingIdentity(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  kdebug_trace();
  id v7 = a1;
  id v8 = MRCreateXPCMessage(0x600000000000003uLL);
  if (v5 && v6)
  {
    v12[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    v12[2] = __MRMediaRemoteServiceTelevisionServerDeletePairingIdentity_block_invoke;
    v12[3] = &unk_1E57D0F98;
    id v13 = v6;
    id v9 = _MRServiceCreateErrorHandlerBlock(v12);
    id v10 = [v7 connection];
    xpc_connection_send_message_with_reply(v10, v8, v5, v9);
  }
  else
  {
    id v11 = [v7 connection];
    xpc_connection_send_message(v11, v8);

    kdebug_trace();
  }
}

uint64_t __MRMediaRemoteServiceTelevisionServerDeletePairingIdentity_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceTelevisionGetPairedDevices(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  kdebug_trace();
  id v7 = a1;
  id v8 = MRCreateXPCMessage(0x600000000000004uLL);
  id v9 = [v7 connection];

  if (v5 && v6)
  {
    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceTelevisionGetPairedDevices_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v11 = v6;
    xpc_connection_send_message_with_reply(v9, v8, v5, handler);
  }
  else
  {
    xpc_connection_send_message(v9, v8);

    kdebug_trace();
  }
}

void __MRMediaRemoteServiceTelevisionGetPairedDevices_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = (UInt8 *)MRCreateDataFromXPCMessage(v3, "MRXPC_PAIRED_EXTERNAL_DEVICES_DATA");
  BOOL v4 = +[MRDeviceInfo deviceInfosFromData:v6];
  id v5 = _MRServiceCreateGenericErrorFromReply(v3);

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceTelevisionDeletePairedDevice(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x600000000000005uLL);
  UTF8String = (const char *)_MRServiceGetUTF8String(a2);
  xpc_dictionary_set_string(v10, "MRXPC_PAIRED_EXTERNAL_DEVICE", UTF8String);
  if (v7 && v8)
  {
    v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = __MRMediaRemoteServiceTelevisionDeletePairedDevice_block_invoke;
    v15[3] = &unk_1E57D0F98;
    id v16 = v8;
    id v12 = _MRServiceCreateErrorHandlerBlock(v15);
    id v13 = [v9 connection];
    xpc_connection_send_message_with_reply(v13, v10, v7, v12);
  }
  else
  {
    id v14 = [v9 connection];
    xpc_connection_send_message(v14, v10);

    kdebug_trace();
  }
}

uint64_t __MRMediaRemoteServiceTelevisionDeletePairedDevice_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceTelevisionSetMessageLogging(void *a1, BOOL a2)
{
  kdebug_trace();
  id v4 = a1;
  MRCreateXPCMessage(0x600000000000006uLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  xpc_dictionary_set_BOOL(message, "MRXPC_EXTERNAL_DEVICE_LOGGING_KEY", a2);
  id v5 = [v4 connection];

  xpc_connection_send_message(v5, message);
}

void MRMediaRemoteServiceTelevisionSendCustomData(void *a1, uint64_t a2, uint64_t a3)
{
  kdebug_trace();
  id v6 = a1;
  MRCreateXPCMessage(0x60000000000000AuLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  MRAddPropertyListToXPCMessage(message, a2, "MRXPC_CUSTOM_DATA_NAME_KEY");
  MRAddPropertyListToXPCMessage(message, a3, "MRXPC_CUSTOM_DATA_KEY");
  id v7 = [v6 connection];

  xpc_connection_send_message(v7, message);
}

id MRMediaRemoteServiceCopyDeviceInfo(void *a1, void *a2)
{
  id v3 = a2;
  if (MRProcessIsMediaRemoteDaemon())
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = objc_msgSend(NSString, "stringWithUTF8String:", "MRDeviceInfo *MRMediaRemoteServiceCopyDeviceInfo(MRMediaRemoteServiceRef, MRPlayerPath *__strong)");
    [v12 handleFailureInFunction:v13 file:@"MRMediaRemoteService.m" lineNumber:2731 description:@"Trying to call CopyDeviceInfo from Daemon"];
  }
  id v4 = a1;
  id v5 = MRCreateXPCMessage(0x20000000000002CuLL);
  MRAddPlayerPathToXPCMessage(v5, v3);

  id v6 = [v4 connection];

  xpc_object_t v7 = xpc_connection_send_message_with_reply_sync(v6, v5);
  if (v7 == (xpc_object_t)MEMORY[0x1E4F14520] || v7 == (xpc_object_t)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    id v8 = 0;
  }
  else
  {
    id v8 = MRCreateDeviceInfoFromXPCMessage(v7);
    id v9 = (void *)MRCreateClientErrorFromXPCMessage(v5);
    if ([v9 code] == 3 && MSVDeviceOSIsInternalInstall())
    {
      id v10 = _MRLogForCategory(0);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
        __68__MRMediaRemoteService_getDeviceInfoForPlayerPath_queue_completion___block_invoke_cold_1();
      }
    }
  }

  return v8;
}

void MRMediaRemoteServiceSetRecentAVOutputDeviceUID(void *a1, void *a2, void *a3, void *a4)
{
  xpc_object_t v7 = a2;
  id v8 = a4;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x30000000000000EuLL);
  UTF8String = (const char *)_MRServiceGetUTF8String(a3);
  xpc_dictionary_set_string(v10, "MRXPC_ROUTE_UID_KEY", UTF8String);
  if (v8 && !v7)
  {
    id v14 = [MEMORY[0x1E4F28B00] currentHandler];
    id v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceSetRecentAVOutputDeviceUID(MRMediaRemoteServiceRef, __strong dispatch_queue_t, CFStringRef, void (^__strong)(CFErrorRef))");
    [v14 handleFailureInFunction:v15 file:@"MRMediaRemoteService.m" lineNumber:2781 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v16 = [v9 connection];
    xpc_connection_send_message(v16, v10);

    kdebug_trace();
    goto LABEL_8;
  }
  if (!v7 || !v8) {
    goto LABEL_7;
  }
  v17[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = __MRMediaRemoteServiceSetRecentAVOutputDeviceUID_block_invoke;
  v17[3] = &unk_1E57D0F98;
  id v18 = v8;
  id v12 = _MRServiceCreateErrorHandlerBlock(v17);
  id v13 = [v9 connection];
  xpc_connection_send_message_with_reply(v13, v10, v7, v12);

LABEL_8:
}

uint64_t __MRMediaRemoteServiceSetRecentAVOutputDeviceUID_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceGetRecentAVOutputDeviceUIDs(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  kdebug_trace();
  id v7 = a1;
  id v8 = MRCreateXPCMessage(0x30000000000000FuLL);
  id v9 = [v7 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetRecentAVOutputDeviceUIDs_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v12 = v5;
  id v10 = v5;
  xpc_connection_send_message_with_reply(v9, v8, v6, handler);
}

void __MRMediaRemoteServiceGetRecentAVOutputDeviceUIDs_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
LABEL_11:
    id v7 = 0;
    goto LABEL_12;
  }
  uint64_t v6 = MRCreatePropertyListFromXPCMessage(v3, "MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY");
  id v7 = (void *)v6;
  if (!v6)
  {
    id v8 = _MRLogForCategory(0);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v10 = 0;
      _os_log_impl(&dword_194F3C000, v8, OS_LOG_TYPE_DEFAULT, "Didn't receive any pickable routes from the reply.", v10, 2u);
    }

    goto LABEL_11;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v7);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceUpdateActiveSystemEndpointUID(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  kdebug_trace();
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MRMediaRemoteServiceUpdateActiveSystemEndpointUID_block_invoke;
  v11[3] = &unk_1E57D2638;
  id v12 = v7;
  id v10 = v7;
  _MRMediaRemoteServiceProtobuf(a1, 0x300000000000011uLL, v9, v8, v11);
}

void __MRMediaRemoteServiceUpdateActiveSystemEndpointUID_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  kdebug_trace();
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = [v3 error];

  (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
}

void MRMediaRemoteServiceSetNearbyDevicesToRemoteControl(void *a1, void *a2)
{
  id v3 = a2;
  kdebug_trace();
  id v4 = a1;
  MRCreateXPCMessage(0x300000000000022uLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  MRAddStringToXPCMessage(message, v3, "MRXPC_HOMEKIT_IDENTIFIER_KEY");

  id v5 = [v4 connection];

  xpc_connection_send_message(v5, message);
  kdebug_trace();
}

void MRMediaRemoteServiceCreateDirectEndpointForDevices(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x300000000000021uLL);
  MRAddPropertyListToXPCMessage(v10, a2, "MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY");
  if (v8 && !v7)
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceCreateDirectEndpointForDevices(MRMediaRemoteServiceRef, CFArrayRef, __strong dispatch_queue_t, void (^__strong)(MRAVEndpoint *__strong, NSError *__strong))");
    [v12 handleFailureInFunction:v13 file:@"MRMediaRemoteService.m" lineNumber:2865 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v14 = [v9 connection];
    xpc_connection_send_message(v14, v10);

    goto LABEL_8;
  }
  if (!v7 || !v8) {
    goto LABEL_7;
  }
  id v11 = [v9 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceCreateDirectEndpointForDevices_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v16 = v8;
  xpc_connection_send_message_with_reply(v11, v10, v7, handler);

LABEL_8:
}

void __MRMediaRemoteServiceCreateDirectEndpointForDevices_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = (id)MRCreateEndpointFromXPCMessage(v3);
  id v4 = _MRServiceCreateGenericErrorFromReply(v3);

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRMediaRemoteServiceCreateHostedEndpointForDevices(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x300000000000029uLL);
  MRAddPropertyListToXPCMessage(v10, a2, "MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY");
  if (v8 && !v7)
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceCreateHostedEndpointForDevices(MRMediaRemoteServiceRef, CFArrayRef, __strong dispatch_queue_t, void (^__strong)(MRAVEndpoint *__strong, NSError *__strong))");
    [v12 handleFailureInFunction:v13 file:@"MRMediaRemoteService.m" lineNumber:2884 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v14 = [v9 connection];
    xpc_connection_send_message(v14, v10);

    goto LABEL_8;
  }
  if (!v7 || !v8) {
    goto LABEL_7;
  }
  id v11 = [v9 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceCreateHostedEndpointForDevices_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v16 = v8;
  xpc_connection_send_message_with_reply(v11, v10, v7, handler);

LABEL_8:
}

void __MRMediaRemoteServiceCreateHostedEndpointForDevices_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = (id)MRCreateEndpointFromXPCMessage(v3);
  id v4 = _MRServiceCreateGenericErrorFromReply(v3);

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRMediaRemoteServiceCreateGroupWithDevicesLeaderOptions(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = a3;
  id v10 = a5;
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x300000000000020uLL);
  MRAddPropertyListToXPCMessage(v12, a2, "MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY");
  xpc_dictionary_set_uint64(v12, "MRXPC_ENDPOINT_LEADER_OPTIONS_KEY", a4);
  if (v10 && !v9)
  {
    id v14 = [MEMORY[0x1E4F28B00] currentHandler];
    id v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceCreateGroupWithDevicesLeaderOptions(MRMediaRemoteServiceRef, CFArrayRef, __strong dispatch_queue_t, MRGroupLeaderSelectionAdditionalOptions, void (^__strong)(NSString *__strong, NSError *__strong))");
    [v14 handleFailureInFunction:v15 file:@"MRMediaRemoteService.m" lineNumber:2904 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v16 = [v11 connection];
    xpc_connection_send_message(v16, v12);

    goto LABEL_8;
  }
  if (!v9 || !v10) {
    goto LABEL_7;
  }
  id v13 = [v11 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceCreateGroupWithDevicesLeaderOptions_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v18 = v10;
  xpc_connection_send_message_with_reply(v13, v12, v9, handler);

LABEL_8:
}

void __MRMediaRemoteServiceCreateGroupWithDevicesLeaderOptions_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = (id)MRCreatePropertyListFromXPCMessage(v3, "MRXPC_ROUTE_UID_KEY");
  id v4 = _MRServiceCreateGenericErrorFromReply(v3);

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRMediaRemoteServiceGroupDevicesAndSendCommand(void *a1, uint64_t a2, void **a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x300000000000017uLL);
  MRAddPropertyListToXPCMessage(v12, a2, "MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY");
  MRAddSendCommandToXPCMessage(v12, a3);
  if (v10 && !v9)
  {
    id v14 = [MEMORY[0x1E4F28B00] currentHandler];
    id v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceGroupDevicesAndSendCommand(MRMediaRemoteServiceRef, CFArrayRef, const MRServiceSendCommand *, __strong dispatch_queue_t, void (^__strong)(MRSendCommandError, NSError *__strong, NSString *__strong, NSArray<MRSendCommandResultStatus *> *__strong))");
    [v14 handleFailureInFunction:v15 file:@"MRMediaRemoteService.m" lineNumber:2929 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v16 = [v11 connection];
    xpc_connection_send_message(v16, v12);

    kdebug_trace();
    goto LABEL_8;
  }
  if (!v9 || !v10) {
    goto LABEL_7;
  }
  id v13 = [v11 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGroupDevicesAndSendCommand_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v18 = v10;
  xpc_connection_send_message_with_reply(v13, v12, v9, handler);

LABEL_8:
}

void __MRMediaRemoteServiceGroupDevicesAndSendCommand_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  MRCreateCommandResultFromXPCMessage(v3);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  [v7 sendError];
  id v4 = (void *)MRCreatePropertyListFromXPCMessage(v3, "MRXPC_ROUTE_UID_KEY");
  id v5 = _MRServiceCreateGenericErrorFromReply(v3);

  uint64_t v6 = [v7 resultStatuses];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServicePredictGroupLeader(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x300000000000019uLL);
  MRAddPropertyListToXPCMessage(v10, a2, "MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY");
  if (v8 && !v7)
  {
    id v13 = [MEMORY[0x1E4F28B00] currentHandler];
    id v14 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServicePredictGroupLeader(MRMediaRemoteServiceRef, CFArrayRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef, CFStringRef))");
    [v13 handleFailureInFunction:v14 file:@"MRMediaRemoteService.m" lineNumber:2954 description:@"Completion block was provided but without a queue"];

    goto LABEL_7;
  }
  if (!v7 || !v8)
  {
    if (!v8) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t Error = (const void *)MRMediaRemoteCreateError(1);
    v8[2](v8, Error, 0);
    CFRelease(Error);
    kdebug_trace();
    goto LABEL_8;
  }
  id v11 = [v9 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServicePredictGroupLeader_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v16 = v8;
  xpc_connection_send_message_with_reply(v11, v10, v7, handler);

LABEL_8:
}

void __MRMediaRemoteServicePredictGroupLeader_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = (id)MRCreatePropertyListFromXPCMessage(v3, "MRXPC_ROUTE_UID_KEY");
  id v4 = _MRServiceCreateGenericErrorFromReply(v3);

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceRemoveFromParentGroup(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x300000000000018uLL);
  MRAddPropertyListToXPCMessage(v10, a2, "MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY");
  if (v8 && !v7)
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceRemoveFromParentGroup(MRMediaRemoteServiceRef, CFArrayRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))");
    [v12 handleFailureInFunction:v13 file:@"MRMediaRemoteService.m" lineNumber:2977 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v14 = [v9 connection];
    xpc_connection_send_message(v14, v10);

    goto LABEL_8;
  }
  if (!v7 || !v8) {
    goto LABEL_7;
  }
  id v11 = [v9 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceRemoveFromParentGroup_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v16 = v8;
  xpc_connection_send_message_with_reply(v11, v10, v7, handler);

LABEL_8:
}

void __MRMediaRemoteServiceRemoveFromParentGroup_block_invoke(uint64_t a1, void *a2)
{
  if (a2 == (void *)MEMORY[0x1E4F14520] || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = MRCreateClientErrorFromXPCMessage(a2);
  }
  id v5 = (id)v4;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id MRMediaRemoteServiceAddVirtualOutputDevice(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  id v7 = a2;
  id v8 = MRCreateXPCMessage(0x30000000000001EuLL);
  MRAddStringToXPCMessage(v8, v7, "MRXPC_JSON_DATA_BLOCK");

  xpc_dictionary_set_value(v8, "MRXPC_CUSTOM_XPC_ENDPOINT_KEY", v6);
  id v9 = [v5 connection];

  xpc_object_t v10 = xpc_connection_send_message_with_reply_sync(v9, v8);
  if (v10 == (xpc_object_t)MEMORY[0x1E4F14520] || v10 == (xpc_object_t)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    uint64_t Error = MRMediaRemoteCreateError(1);
  }
  else
  {
    uint64_t Error = MRCreateClientErrorFromXPCMessage(v10);
  }
  id v12 = (void *)Error;

  return v12;
}

id MRMediaRemoteServiceCopyVirtualOutputDevices(void *a1)
{
  if (MRProcessIsMediaRemoteDaemon())
  {
    id v9 = [MEMORY[0x1E4F28B00] currentHandler];
    xpc_object_t v10 = [NSString stringWithUTF8String:"NSArray<MRAVVirtualOutputDevice *> *MRMediaRemoteServiceCopyVirtualOutputDevices(MRMediaRemoteServiceRef)"];
    [v9 handleFailureInFunction:v10 file:@"MRMediaRemoteService.m" lineNumber:3037 description:@"Trying to call CopyVirtualOutputDevices from Daemon"];
  }
  id v2 = a1;
  id v3 = MRCreateXPCMessage(0x30000000000001FuLL);
  uint64_t v4 = [v2 connection];

  xpc_object_t v5 = xpc_connection_send_message_with_reply_sync(v4, v3);
  id v6 = 0;
  if (v5 != (xpc_object_t)MEMORY[0x1E4F14520] && v5 != (xpc_object_t)MEMORY[0x1E4F14528]) {
    id v6 = (void *)MRCreateArrayFomXPCMessage(v5, "MRXPC_JSON_DATA_BLOCK", &__block_literal_global_266);
  }
  id v7 = v6;

  return v7;
}

uint64_t __MRMediaRemoteServiceCopyVirtualOutputDevices_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3 = [MRAVVirtualOutputDevice alloc];

  return (uint64_t)[(MRAVVirtualOutputDevice *)v3 initWithJSONData:a2 pipeEndpoint:0];
}

uint64_t MRMediaRemoteServiceSupportsSystemPairing(void *a1)
{
  kdebug_trace();
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 0;
  id v2 = a1;
  id v3 = MRCreateXPCMessage(0x10000000000000DuLL);
  dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
  xpc_object_t v5 = [v2 connection];
  id v6 = dispatch_get_global_queue(0, 0);
  v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __MRMediaRemoteServiceSupportsSystemPairing_block_invoke;
  v10[3] = &unk_1E57D26C0;
  id v12 = &v13;
  id v7 = v4;
  id v11 = v7;
  xpc_connection_send_message_with_reply(v5, v3, v6, v10);

  dispatch_semaphore_wait(v7, 0xFFFFFFFFFFFFFFFFLL);
  kdebug_trace();
  uint64_t v8 = *((unsigned __int8 *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

void sub_19502A03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t __MRMediaRemoteServiceSupportsSystemPairing_block_invoke(uint64_t a1, xpc_object_t xdict)
{
  if (xdict == (xpc_object_t)MEMORY[0x1E4F14520] || xdict == (xpc_object_t)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  else {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = xpc_dictionary_get_BOOL(xdict, "MRXPC_APP_INSTALLED_KEY");
  }
  dispatch_semaphore_t v4 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v4);
}

void MRMediaRemoteServiceVirtualVoiceGetDevices(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  kdebug_trace();
  id v7 = a1;
  uint64_t v8 = MRCreateXPCMessage(0x900000000000001uLL);
  id v9 = [v7 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceVirtualVoiceGetDevices_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v12 = v5;
  id v10 = v5;
  xpc_connection_send_message_with_reply(v9, v8, v6, handler);
}

void __MRMediaRemoteServiceVirtualVoiceGetDevices_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  dispatch_semaphore_t v4 = v3;
  if (v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    id v6 = 0;
  }
  else
  {
    id v7 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v8 = (id)MRCreatePropertyListFromXPCMessage(v4, "MRXPC_VOICE_INPUT_DEVICES_DATA_KEY");
    uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v17;
      do
      {
        uint64_t v12 = 0;
        do
        {
          if (*(void *)v17 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void *)(*((void *)&v16 + 1) + 8 * v12);
          id v14 = [MRVirtualVoiceInputDevice alloc];
          uint64_t v15 = -[MRVirtualVoiceInputDevice initWithData:](v14, "initWithData:", v13, (void)v16);
          [v7 addObject:v15];

          ++v12;
        }
        while (v10 != v12);
        uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }
      while (v10);
    }

    id v6 = (void *)[v7 copy];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceVirtualVoiceRegisterDevice(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  kdebug_trace();
  id v9 = a1;
  uint64_t v10 = MRCreateXPCMessage(0x900000000000002uLL);
  ExternalRepresentation = (void *)MRVirtualVoiceInputDeviceDescriptorCreateExternalRepresentation(a2);
  uint64_t v12 = ExternalRepresentation;
  if (ExternalRepresentation)
  {
    id v13 = ExternalRepresentation;
    xpc_dictionary_set_data(v10, "MRXPC_VOICE_INPUT_DESCRIPTOR_DATA_KEY", (const void *)[v13 bytes], objc_msgSend(v13, "length"));
  }
  id v14 = [v9 connection];
  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceVirtualVoiceRegisterDevice_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v17 = v7;
  id v15 = v7;
  xpc_connection_send_message_with_reply(v14, v10, v8, handler);
}

void __MRMediaRemoteServiceVirtualVoiceRegisterDevice_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v12 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t v6 = *(void *)(a1 + 32);
    id v5 = (uint64_t *)(a1 + 32);
    if (!v6) {
      goto LABEL_13;
    }
    uint64_t uint64 = 0;
    uint64_t v7 = 1;
    goto LABEL_10;
  }
  uint64_t uint64 = xpc_dictionary_get_uint64(v3, "MRXPC_VOICE_INPUT_DEVICE_ID_KEY");
  uint64_t v7 = MRErrorFromXPCMessage(v12);
  uint64_t v10 = *(void *)(a1 + 32);
  id v5 = (uint64_t *)(a1 + 32);
  uint64_t v9 = v10;
  if (v10)
  {
    if (!v7)
    {
      uint64_t Error = 0;
      goto LABEL_12;
    }
LABEL_10:
    uint64_t Error = (void *)MRMediaRemoteCreateError(v7);
    uint64_t v9 = *v5;
LABEL_12:
    (*(void (**)(uint64_t, uint64_t, void *))(v9 + 16))(v9, uint64, Error);
  }
LABEL_13:
  kdebug_trace();
}

void MRMediaRemoteServiceVirtualVoiceUnregisterDevice(void *a1, unsigned int a2, void *a3, void *a4)
{
  uint64_t v7 = a3;
  id v8 = a4;
  kdebug_trace();
  id v9 = a1;
  uint64_t v10 = MRCreateXPCMessage(0x900000000000003uLL);
  xpc_dictionary_set_uint64(v10, "MRXPC_VOICE_INPUT_DEVICE_ID_KEY", a2);
  if (v7 && v8)
  {
    v14[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __MRMediaRemoteServiceVirtualVoiceUnregisterDevice_block_invoke;
    v14[3] = &unk_1E57D0F98;
    id v15 = v8;
    uint64_t v11 = _MRServiceCreateErrorHandlerBlock(v14);
    id v12 = [v9 connection];
    xpc_connection_send_message_with_reply(v12, v10, v7, v11);
  }
  else
  {
    id v13 = [v9 connection];
    xpc_connection_send_message(v13, v10);

    kdebug_trace();
  }
}

uint64_t __MRMediaRemoteServiceVirtualVoiceUnregisterDevice_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceVirtualVoiceProcessAudioData(void *a1, unsigned int a2, const char *a3, double a4, double a5, float a6)
{
  kdebug_trace();
  id v12 = a1;
  MRCreateXPCMessage(0x900000000000005uLL);
  xpc_object_t xdict = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  xpc_dictionary_set_uint64(xdict, "MRXPC_VOICE_INPUT_DEVICE_ID_KEY", a2);
  id v13 = MRAudioDataBlockCreate();
  MRAudioDataBlockSetBuffer(v13, a3);
  MRAudioDataBlockSetTimestamp(v13, a4, a5);
  MRAudioDataBlockSetGain(v13, a6);
  id v14 = (id) MRAudioDataBlockCreateExternalRepresentation(v13);
  xpc_dictionary_set_data(xdict, "MRXPC_VOICE_DATA_PROTOBUF_DATA_KEY", (const void *)[v14 bytes], objc_msgSend(v14, "length"));
  id v15 = [v12 connection];

  xpc_connection_send_message(v15, xdict);
}

void MRMediaRemoteServiceVirtualVoiceSetRecordingState(void *a1, unsigned int a2, unsigned int a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  kdebug_trace();
  id v11 = a1;
  id v12 = MRCreateXPCMessage(0x900000000000004uLL);
  xpc_dictionary_set_uint64(v12, "MRXPC_VOICE_INPUT_DEVICE_ID_KEY", a2);
  xpc_dictionary_set_uint64(v12, "MRXPC_VOICE_RECORDING_STATE", a3);
  if (v10 && !v9)
  {
    id v15 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v16 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteServiceVirtualVoiceSetRecordingState(MRMediaRemoteServiceRef, MRVirtualVoiceInputDeviceID, MRVoiceRecordingState, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))");
    [v15 handleFailureInFunction:v16 file:@"MRMediaRemoteService.m" lineNumber:3195 description:@"Completion block was provided but without a queue"];

LABEL_7:
    id v17 = [v11 connection];
    xpc_connection_send_message(v17, v12);

    kdebug_trace();
    goto LABEL_8;
  }
  if (!v9 || !v10) {
    goto LABEL_7;
  }
  v18[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = __MRMediaRemoteServiceVirtualVoiceSetRecordingState_block_invoke;
  v18[3] = &unk_1E57D0F98;
  id v19 = v10;
  id v13 = _MRServiceCreateErrorHandlerBlock(v18);
  id v14 = [v11 connection];
  xpc_connection_send_message_with_reply(v14, v12, v9, v13);

LABEL_8:
}

uint64_t __MRMediaRemoteServiceVirtualVoiceSetRecordingState_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  return kdebug_trace();
}

void MRMediaRemoteServiceAgentNotifyCallChanged(void *a1, uint64_t a2)
{
  kdebug_trace();
  id v4 = a1;
  MRCreateXPCMessage(0xA00000000000001uLL);
  xpc_object_t message = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  MRAddPropertyListToXPCMessage(message, a2, "MRXPC_AGENT_CALL_ID_KEY");
  id v5 = [v4 connection];

  xpc_connection_send_message(v5, message);
}

void MRMediaRemoteServiceCollectDiagnostic(void *a1, void *a2, void *a3)
{
}

void _MRMediaRemoteServiceCollectDiagnosticWithXPCMessage(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = v7;
  if (a3 && v7)
  {
    id v9 = a2;
    id v10 = a3;
    id v11 = MRCreateXPCMessage(a1);
    id v12 = [v9 connection];

    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = ___MRMediaRemoteServiceCollectDiagnosticWithXPCMessage_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v14 = v8;
    xpc_connection_send_message_with_reply(v12, v11, v10, handler);
  }
}

void MRMediaRemoteServiceCollectClientDiagnostics(void *a1, void *a2, void *a3)
{
}

void MRMediaRemoteServicePostNotification(void *a1, void *a2, void *a3)
{
  kdebug_trace();
  id v6 = a1;
  MRCreateXPCMessage(0x100000000000003uLL);
  xpc_object_t xdict = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  UTF8String = (const char *)_MRServiceGetUTF8String(a2);
  xpc_dictionary_set_string(xdict, "MRXPC_NOTIFICATION_NAME_KEY", UTF8String);
  id v8 = MRCreateEncodedUserInfo(a3);
  id v9 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v8 format:200 options:0 error:0];
  xpc_dictionary_set_data(xdict, "MRXPC_NOTIFICATION_USERINFO_DATA_KEY", (const void *)[v9 bytes], objc_msgSend(v9, "length"));
  id v10 = [v6 connection];

  xpc_connection_send_message(v10, xdict);
}

void MRMediaRemoteServicePostDelayedNotification(void *a1, void *a2, double a3)
{
  kdebug_trace();
  id v6 = a1;
  MRCreateXPCMessage(0x10000000000000AuLL);
  xpc_object_t xdict = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  UTF8String = (const char *)_MRServiceGetUTF8String(a2);
  xpc_dictionary_set_string(xdict, "MRXPC_NOTIFICATION_NAME_KEY", UTF8String);
  xpc_dictionary_set_double(xdict, "MRXPC_NOTIFICATION_DELAY", a3);
  id v8 = [v6 connection];

  xpc_connection_send_message(v8, xdict);
}

BOOL MRMediaRemoteServiceIsBooksAppInstalled(void *a1)
{
  kdebug_trace();
  id v2 = [a1 mrXPCConnection];
  uint64_t v7 = 0;
  id v3 = [v2 sendSyncMessageWithType:0x100000000000016 error:&v7];
  uint64_t v4 = v7;

  kdebug_trace();
  if (v4) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = xpc_dictionary_get_BOOL(v3, "MRXPC_APP_INSTALLED_KEY");
  }

  return v5;
}

BOOL MRMediaRemoteServiceIsMusicAppInstalled(void *a1)
{
  kdebug_trace();
  id v2 = [a1 mrXPCConnection];
  uint64_t v7 = 0;
  id v3 = [v2 sendSyncMessageWithType:0x100000000000017 error:&v7];
  uint64_t v4 = v7;

  kdebug_trace();
  if (v4) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = xpc_dictionary_get_BOOL(v3, "MRXPC_APP_INSTALLED_KEY");
  }

  return v5;
}

BOOL MRMediaRemoteServiceSystemMediaAppWake(void *a1)
{
  kdebug_trace();
  id v2 = a1;
  id v3 = MRCreateXPCMessage(0x100000000000010uLL);
  uint64_t v4 = [v2 connection];

  xpc_object_t v5 = xpc_connection_send_message_with_reply_sync(v4, v3);
  kdebug_trace();
  BOOL v7 = v5 != (xpc_object_t)MEMORY[0x1E4F14520]
    && v5 != (xpc_object_t)MEMORY[0x1E4F14528]
    && xpc_dictionary_get_BOOL(v5, "MRXPC_BOOL_RESULT_KEY");

  return v7;
}

void MRMediaRemoteServiceRegisterPairingHandler(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  kdebug_trace();
  id v10 = a1;
  id v11 = MRCreateXPCMessage(0x100000000000013uLL);
  MRAddStringToXPCMessage(v11, v9, "MRXPC_ROUTE_UID_KEY");

  id v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceRegisterPairingHandler_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void __MRMediaRemoteServiceRegisterPairingHandler_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(void))(v5 + 16))();
  }
  kdebug_trace();
}

void MRMediaRemoteServiceUnregisterPairingHandler(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  kdebug_trace();
  id v10 = a1;
  id v11 = MRCreateXPCMessage(0x100000000000014uLL);
  MRAddStringToXPCMessage(v11, v9, "MRXPC_ROUTE_UID_KEY");

  id v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceUnregisterPairingHandler_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void __MRMediaRemoteServiceUnregisterPairingHandler_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(void))(v5 + 16))();
  }
  kdebug_trace();
}

void MRMediaRemoteServiceCompletePairingHandler(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  id v11 = a3;
  id v12 = a2;
  kdebug_trace();
  id v13 = a1;
  id v14 = MRCreateXPCMessage(0x100000000000015uLL);
  MRAddStringToXPCMessage(v14, v12, "MRXPC_ROUTE_UID_KEY");

  MRAddStringToXPCMessage(v14, v11, "MRXPC_CUSTOM_DATA_KEY");
  id v15 = [v13 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceCompletePairingHandler_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v18 = v9;
  id v16 = v9;
  xpc_connection_send_message_with_reply(v15, v14, v10, handler);
}

void __MRMediaRemoteServiceCompletePairingHandler_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(void))(v5 + 16))();
  }
  kdebug_trace();
}

uint64_t MRMediaRemoteServiceBeginLoadingBrowsableContent(void *a1, void *a2, const void *a3, uint64_t a4)
{
  id v7 = a2;
  kdebug_trace();
  id v8 = a1;
  id v9 = MRCreateXPCMessage(0x500000000000001uLL);
  MRAddStringToXPCMessage(v9, v7, "MRXPC_BUNDLE_ID_KEY");
  xpc_dictionary_set_data(v9, "MRXPC_INDEXPATH_DATA_KEY", a3, 8 * a4);

  id v10 = [v8 connection];

  xpc_connection_send_message(v10, v9);
  return 0;
}

void MRMediaRemoteServiceCopyBrowsableContentNowPlayingIdentifiers(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  kdebug_trace();
  id v10 = a1;
  id v11 = MRCreateXPCMessage(0x500000000000002uLL);
  MRAddStringToXPCMessage(v11, v9, "MRXPC_BUNDLE_ID_KEY");

  id v12 = [v10 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceCopyBrowsableContentNowPlayingIdentifiers_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v15 = v7;
  id v13 = v7;
  xpc_connection_send_message_with_reply(v12, v11, v8, handler);
}

void __MRMediaRemoteServiceCopyBrowsableContentNowPlayingIdentifiers_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
  }
  else
  {
    size_t length = 0;
    data = xpc_dictionary_get_data(v3, "MRXPC_CONTENT_NOW_PLAYING_IDENTIFIERS_KEY", &length);
    if (data)
    {
      id v7 = [MEMORY[0x1E4F1C9B8] dataWithBytesNoCopy:data length:length freeWhenDone:0];
      id v8 = [MEMORY[0x1E4F28F98] propertyListWithData:v7 options:0 format:0 error:0];

      goto LABEL_10;
    }
  }
  id v8 = 0;
LABEL_10:
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v8);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceGetBrowsableContentSupportsPlaybackProgress(void *a1, void *a2, const void *a3, uint64_t a4, void *a5, void *a6)
{
  id v11 = a6;
  id v12 = a5;
  id v13 = a2;
  kdebug_trace();
  id v14 = a1;
  id v15 = MRCreateXPCMessage(0x500000000000003uLL);
  MRAddStringToXPCMessage(v15, v13, "MRXPC_BUNDLE_ID_KEY");
  xpc_dictionary_set_data(v15, "MRXPC_INDEXPATH_DATA_KEY", a3, 8 * a4);

  id v16 = [v14 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetBrowsableContentSupportsPlaybackProgress_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v19 = v11;
  id v17 = v11;
  xpc_connection_send_message_with_reply(v16, v15, v12, handler);
}

void __MRMediaRemoteServiceGetBrowsableContentSupportsPlaybackProgress_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v7 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    BOOL v5 = 0;
  }
  else
  {
    BOOL v5 = xpc_dictionary_get_BOOL(v3, "MRXPC_CONTENT_SUPPORTS_PLAYBACK_PROGRESS_KEY");
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, BOOL))(v6 + 16))(v6, v5);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceGetCountOfBrowsableContentChildItems(void *a1, void *a2, const void *a3, uint64_t a4, void *a5, void *a6)
{
  id v11 = a6;
  id v12 = a5;
  id v13 = a2;
  kdebug_trace();
  id v14 = a1;
  id v15 = MRCreateXPCMessage(0x500000000000004uLL);
  MRAddStringToXPCMessage(v15, v13, "MRXPC_BUNDLE_ID_KEY");
  xpc_dictionary_set_data(v15, "MRXPC_INDEXPATH_DATA_KEY", a3, 8 * a4);

  id v16 = [v14 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceGetCountOfBrowsableContentChildItems_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v19 = v11;
  id v17 = v11;
  xpc_connection_send_message_with_reply(v16, v15, v12, handler);
}

void __MRMediaRemoteServiceGetCountOfBrowsableContentChildItems_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v7 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    uint64_t uint64 = 0;
  }
  else
  {
    uint64_t uint64 = xpc_dictionary_get_uint64(v3, "MRXPC_CONTENT_CHILD_ITEMS_COUNT_KEY");
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v6, uint64);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceCopyBrowsableContentChildItems(void *a1, void *a2, const void *a3, uint64_t a4, int64_t a5, int64_t a6, void *a7, void *a8)
{
  id v15 = a8;
  id v16 = a7;
  id v17 = a2;
  kdebug_trace();
  id v18 = a1;
  id v19 = MRCreateXPCMessage(0x500000000000005uLL);
  MRAddStringToXPCMessage(v19, v17, "MRXPC_BUNDLE_ID_KEY");
  xpc_dictionary_set_data(v19, "MRXPC_INDEXPATH_DATA_KEY", a3, 8 * a4);

  xpc_dictionary_set_int64(v19, "MRXPC_RANGE_BEGIN_KEY", a5);
  xpc_dictionary_set_int64(v19, "MRXPC_RANGE_LENGTH_KEY", a6);
  id v20 = [v18 connection];

  handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __MRMediaRemoteServiceCopyBrowsableContentChildItems_block_invoke;
  handler[3] = &unk_1E57D2550;
  id v23 = v15;
  id v21 = v15;
  xpc_connection_send_message_with_reply(v20, v19, v16, handler);
}

void __MRMediaRemoteServiceCopyBrowsableContentChildItems_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528];
  id v7 = v3;
  if (v4)
  {
    _MRServiceLogReplyError();
    BOOL v5 = 0;
  }
  else
  {
    BOOL v5 = (void *)MRCreateContentItemsFromXPCMessage(v3);
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v5);
  }
  kdebug_trace();
}

void MRMediaRemoteServiceRequestPlaybackInitialization(void *a1, void *a2, const void *a3, uint64_t a4)
{
  id v7 = a2;
  kdebug_trace();
  id v8 = a1;
  MRCreateXPCMessage(0x500000000000006uLL);
  xpc_object_t xdict = (xpc_object_t)objc_claimAutoreleasedReturnValue();
  MRAddStringToXPCMessage(xdict, v7, "MRXPC_BUNDLE_ID_KEY");
  xpc_dictionary_set_data(xdict, "MRXPC_INDEXPATH_DATA_KEY", a3, 8 * a4);

  uint64_t v9 = [v8 connection];

  xpc_connection_send_message(v9, xdict);
}

void MRMediaRemoteServiceGetSupportedBrowsableContentAPI(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  kdebug_trace();
  if (v8 && v9)
  {
    id v10 = a1;
    id v11 = MRCreateXPCMessage(0x500000000000007uLL);
    MRAddStringToXPCMessage(v11, v7, "MRXPC_BUNDLE_ID_KEY");
    id v12 = [v10 connection];

    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceGetSupportedBrowsableContentAPI_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v14 = v9;
    xpc_connection_send_message_with_reply(v12, v11, v8, handler);
  }
  else
  {
    kdebug_trace();
  }
}

void __MRMediaRemoteServiceGetSupportedBrowsableContentAPI_block_invoke(uint64_t a1, void *a2)
{
  BOOL v4 = (void *)MEMORY[0x1E4F14520];
  id v5 = a2;
  uint64_t v6 = v5;
  if (a2 == v4 || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();

    id Error = (id)MRMediaRemoteCreateError(1);
  }
  else
  {
    xpc_dictionary_get_uint64(v5, "MRXPC_CONTENT_API_MASK_KEY");
    id Error = (id)MRCreateClientErrorFromXPCMessage(v6);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceGetAppsSupportingBrowsableContentAPIs(void *a1, unsigned int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  kdebug_trace();
  if (v7 && v8)
  {
    id v9 = a1;
    id v10 = MRCreateXPCMessage(0x500000000000009uLL);
    xpc_dictionary_set_uint64(v10, "MRXPC_CONTENT_API_MASK_KEY", a2);
    id v11 = [v9 connection];

    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceGetAppsSupportingBrowsableContentAPIs_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v13 = v8;
    xpc_connection_send_message_with_reply(v11, v10, v7, handler);
  }
  else
  {
    kdebug_trace();
  }
}

void __MRMediaRemoteServiceGetAppsSupportingBrowsableContentAPIs_block_invoke(uint64_t a1, void *a2)
{
  BOOL v4 = (void *)MEMORY[0x1E4F14520];
  id v5 = a2;
  uint64_t v6 = v5;
  if (a2 == v4 || a2 == (void *)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();

    id Error = (void *)MRMediaRemoteCreateError(1);
    id v9 = 0;
  }
  else
  {
    id Error = _MRServiceCreateGenericErrorFromReply(v5);
    id v9 = (id)MRCreatePropertyListFromXPCMessage(v6, "MRXPC_BUNDLE_ID_ARRAY_DATA_KEY");
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServiceSetSupportedBrowsableContentAPI(void *a1, unsigned int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  kdebug_trace();
  id v9 = a1;
  id v10 = MRCreateXPCMessage(0x500000000000008uLL);
  xpc_dictionary_set_uint64(v10, "MRXPC_CONTENT_API_MASK_KEY", a2);
  id v11 = [v9 connection];

  if (v7 && v8)
  {
    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceSetSupportedBrowsableContentAPI_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v13 = v8;
    xpc_connection_send_message_with_reply(v11, v10, v7, handler);
  }
  else
  {
    xpc_connection_send_message(v11, v10);

    kdebug_trace();
  }
}

uint64_t __MRMediaRemoteServiceSetSupportedBrowsableContentAPI_block_invoke(uint64_t a1, xpc_object_t xdict)
{
  if (xdict == (xpc_object_t)MEMORY[0x1E4F14520] || xdict == (xpc_object_t)MEMORY[0x1E4F14528]) {
    _MRServiceLogReplyError();
  }
  else {
    xpc_dictionary_get_uint64(xdict, "MRXPC_ERROR_CODE_KEY");
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

  return kdebug_trace();
}

void MRMediaRemoteServicePostBrowsableContentNotification(void *a1, void *a2, void *a3)
{
  if (a3)
  {
    uint64_t v5 = [a3 mutableCopy];
  }
  else
  {
    uint64_t v5 = [MEMORY[0x1E4F1CA60] dictionaryWithCapacity:1];
  }
  id v8 = (id)v5;
  uint64_t v6 = [MEMORY[0x1E4F28B50] mainBundle];
  id v7 = [v6 bundleIdentifier];
  [v8 setObject:v7 forKeyedSubscript:@"kMRMediaRemoteBrowsableContentBundleIdentifierUserInfoKey"];

  MRMediaRemoteServicePostNotification(a1, a2, v8);
}

void MRMediaRemoteServiceGetContentItemsForIdentifiers(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  id v11 = a3;
  id v12 = a2;
  kdebug_trace();
  id v13 = a1;
  id v14 = MRCreateXPCMessage(0x50000000000000AuLL);
  MRAddStringToXPCMessage(v14, v12, "MRXPC_BUNDLE_ID_KEY");

  MRAddPropertyListToXPCMessage(v14, (uint64_t)v11, "MRXPC_CONTENT_IDENTIFIERS");
  id v15 = [v13 connection];

  if (v9 && v10)
  {
    handler[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    handler[1] = 3221225472;
    handler[2] = __MRMediaRemoteServiceGetContentItemsForIdentifiers_block_invoke;
    handler[3] = &unk_1E57D2550;
    id v17 = v10;
    xpc_connection_send_message_with_reply(v15, v14, v9, handler);
  }
  else
  {
    xpc_connection_send_message(v15, v14);

    kdebug_trace();
  }
}

void __MRMediaRemoteServiceGetContentItemsForIdentifiers_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  BOOL v4 = v3;
  if (v3 == (id)MEMORY[0x1E4F14520] || v3 == (id)MEMORY[0x1E4F14528])
  {
    _MRServiceLogReplyError();
    id v7 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    id v7 = (void *)MRCreateClientErrorFromXPCMessage(v3);
    id v8 = (void *)MRCreateContentItemsFromXPCMessage(v4);
    id v9 = v8;
    if (v8)
    {
      uint64_t v17 = a1;
      uint64_t v6 = objc_msgSend(MEMORY[0x1E4F1CA60], "dictionaryWithCapacity:", objc_msgSend(v8, "count"));
      long long v18 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v10 = v9;
      uint64_t v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = *(void *)v19;
        do
        {
          for (uint64_t i = 0; i != v12; ++i)
          {
            if (*(void *)v19 != v13) {
              objc_enumerationMutation(v10);
            }
            id v15 = *(void **)(*((void *)&v18 + 1) + 8 * i);
            id v16 = [v15 identifier];
            [v6 setObject:v15 forKeyedSubscript:v16];
          }
          uint64_t v12 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
        }
        while (v12);
      }

      a1 = v17;
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  kdebug_trace();
}

void MRMediaRemoteServicePing(void *a1, void *a2, void *a3)
{
  uint64_t v5 = a2;
  id v6 = a3;
  id v7 = a1;
  id v8 = MRCreateXPCMessage(0x10000000000000CuLL);
  id v9 = [MEMORY[0x1E4F1C9C8] date];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  long long v18 = ___MRMediaRemoteServicePing_block_invoke;
  long long v19 = &unk_1E57D26E8;
  id v20 = v9;
  id v21 = v6;
  id v10 = v6;
  id v11 = v9;
  uint64_t v12 = (void *)MEMORY[0x1997190F0](&v16);
  uint64_t v13 = v12;
  if (v5 && v10)
  {
    id v14 = _MRServiceCreateErrorHandlerBlock(v12);
    objc_msgSend(v7, "connection", v16, v17, v18, v19, v20, v21);
    id v15 = (_xpc_connection_s *)objc_claimAutoreleasedReturnValue();
    xpc_connection_send_message_with_reply(v15, v8, v5, v14);
  }
  else
  {
    id v14 = objc_msgSend(v7, "connection", v16, v17, v18, v19, v20, v21);
    xpc_connection_send_message((xpc_connection_t)v14, v8);
  }
}

BOOL MRMediaRemoteServiceRequestBless(void *a1)
{
  kdebug_trace();
  id v2 = a1;
  id v3 = MRCreateXPCMessage(0x100000000000012uLL);
  BOOL v4 = [v2 connection];

  xpc_object_t v5 = xpc_connection_send_message_with_reply_sync(v4, v3);
  kdebug_trace();
  BOOL v7 = v5 != (xpc_object_t)MEMORY[0x1E4F14520]
    && v5 != (xpc_object_t)MEMORY[0x1E4F14528]
    && xpc_dictionary_get_BOOL(v5, "MRXPC_BOOL_RESULT_KEY");

  return v7;
}

BOOL MRMediaRemoteServiceWakePlayerServiceProcess(void *a1)
{
  kdebug_trace();
  id v2 = a1;
  id v3 = MRCreateXPCMessage(0x100000000000011uLL);
  BOOL v4 = [v2 connection];

  xpc_object_t v5 = xpc_connection_send_message_with_reply_sync(v4, v3);
  kdebug_trace();
  BOOL v7 = v5 != (xpc_object_t)MEMORY[0x1E4F14520]
    && v5 != (xpc_object_t)MEMORY[0x1E4F14528]
    && xpc_dictionary_get_BOOL(v5, "MRXPC_BOOL_RESULT_KEY");

  return v7;
}

void _MRServiceSendReply(void *a1, uint64_t a2)
{
  xpc_object_t original = a1;
  xpc_dictionary_get_remote_connection(original);
  id v3 = (_xpc_connection_s *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    xpc_object_t reply = xpc_dictionary_create_reply(original);
    xpc_object_t v5 = reply;
    if (reply)
    {
      xpc_dictionary_set_uint64(reply, "MRXPC_ERROR_CODE_KEY", a2);
      xpc_connection_send_message(v3, v5);
    }
  }
}

void _MRServiceSendReplyWithClientError(void *a1, uint64_t a2)
{
  xpc_object_t original = a1;
  xpc_dictionary_get_remote_connection(original);
  id v3 = (_xpc_connection_s *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    xpc_object_t reply = xpc_dictionary_create_reply(original);
    xpc_object_t v5 = reply;
    if (reply)
    {
      MRAddClientErrorToXPCMessage(reply, a2);
      xpc_connection_send_message(v3, v5);
    }
  }
}

void OUTLINED_FUNCTION_1_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

BOOL _MRApplicationConnectionRequestInfoProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  BOOL v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    BOOL v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_MRDeviceInfoMessageProtobuf);
        objc_storeStrong((id *)(a1 + 16), v17);
        if (!PBReaderPlaceMark() || (_MRDeviceInfoMessageProtobufReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_30;
        }
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_MRNowPlayingClientProtobuf);
    objc_storeStrong((id *)(a1 + 8), v17);
    if (!PBReaderPlaceMark() || (_MRNowPlayingClientProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_19502F684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_19502FF88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1950300B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _MRGetVoiceInputDevicesMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  BOOL v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

BOOL _MRApplicationConnectionProtocolMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  BOOL v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_MRApplicationConnectionMessageProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark() || !_MRApplicationConnectionMessageProtobufReadFrom((uint64_t)v17, a2)) {
          goto LABEL_30;
        }
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_MRApplicationConnectionContextProtobuf);
    objc_storeStrong((id *)(a1 + 16), v17);
    if (!PBReaderPlaceMark() || !_MRApplicationConnectionContextProtobufReadFrom((uint64_t)v17, a2))
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

__CFString *NSStringFromMROriginType(uint64_t a1)
{
  if (a1 == 1) {
    return @"Custom";
  }
  else {
    return @"Local";
  }
}

uint64_t _MRSetArtworkMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  BOOL v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        long long v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_1950332C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 104));
  _Unwind_Resume(a1);
}

void sub_19503374C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950337BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195033D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195033EB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19503409C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195034170(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195034320(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195034980(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t initMKBDeviceUnlockedSinceBoot()
{
  if (MobileKeyBagLibrary_sOnce != -1) {
    dispatch_once(&MobileKeyBagLibrary_sOnce, &__block_literal_global_278);
  }
  id v0 = (uint64_t (*)())dlsym((void *)MobileKeyBagLibrary_sLib, "MKBDeviceUnlockedSinceBoot");
  softLinkMKBDeviceUnlockedSinceBoot[[NSString stringWithFormat:@"com.apple.%@", 0] = v0;

  return v0();
}

void *__MobileKeyBagLibrary_block_invoke()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/MobileKeyBag.framework/MobileKeyBag", 2);
  MobileKeyBagLibrary_sLib = (uint64_t)result;
  return result;
}

void OUTLINED_FUNCTION_1_2(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_19503713C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t initBiomeLibrary()
{
  if (BiomeLibraryLibrary_sOnce != -1) {
    dispatch_once(&BiomeLibraryLibrary_sOnce, &__block_literal_global_157);
  }
  id v0 = (uint64_t (*)())dlsym((void *)BiomeLibraryLibrary_sLib, "BiomeLibrary");
  softLinkBiomeLibrary[[NSString stringWithFormat:@"com.apple.%@", 0] = v0;

  return v0();
}

void *__BiomeLibraryLibrary_block_invoke()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/BiomeLibrary.framework/BiomeLibrary", 2);
  BiomeLibraryLibrary_sLib = (uint64_t)result;
  return result;
}

Class initBMPublisherOptions()
{
  if (BiomeStreamsLibrary_sOnce != -1) {
    dispatch_once(&BiomeStreamsLibrary_sOnce, &__block_literal_global_161);
  }
  Class result = objc_getClass("BMPublisherOptions");
  classBMPublisherOptions = (uint64_t)result;
  getBMPublisherOptionsClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())BMPublisherOptionsFunction;
  return result;
}

id BMPublisherOptionsFunction()
{
  return (id)classBMPublisherOptions;
}

void *__BiomeStreamsLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams", 2);
  BiomeStreamsLibrary_sLib = (uint64_t)result;
  return result;
}

Class initINPlayMediaIntent()
{
  if (IntentsLibrary_sOnce_0 != -1) {
    dispatch_once(&IntentsLibrary_sOnce_0, &__block_literal_global_165);
  }
  Class result = objc_getClass("INPlayMediaIntent");
  classINPlayMediaIntent = (uint64_t)result;
  getINPlayMediaIntentClass[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())INPlayMediaIntentFunction;
  return result;
}

id INPlayMediaIntentFunction()
{
  return (id)classINPlayMediaIntent;
}

void *__IntentsLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/Frameworks/Intents.framework/Intents", 2);
  IntentsLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initINInteraction_0()
{
  if (IntentsLibrary_sOnce_0 != -1) {
    dispatch_once(&IntentsLibrary_sOnce_0, &__block_literal_global_165);
  }
  Class result = objc_getClass("INInteraction");
  classINInteraction_0 = (uint64_t)result;
  getINInteractionClass_0[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())INInteractionFunction_0;
  return result;
}

id INInteractionFunction_0()
{
  return (id)classINInteraction_0;
}

Class initINSchema()
{
  if (IntentsLibrary_sOnce_0 != -1) {
    dispatch_once(&IntentsLibrary_sOnce_0, &__block_literal_global_165);
  }
  Class result = objc_getClass("INSchema");
  classINSchema = (uint64_t)result;
  getINSchemaClass = (uint64_t (*)())INSchemaFunction;
  return result;
}

id INSchemaFunction()
{
  return (id)classINSchema;
}

uint64_t _MRSendCommandResultProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (PBReaderPlaceMark()
          && _MRNowPlayingPlayerPathProtobufReadFrom((id *)&v17->super.super.isa, a2))
        {
          goto LABEL_33;
        }
        goto LABEL_41;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_38;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_38:
        *(_DWORD *)(a1 + 16) = v21;
        goto LABEL_39;
      case 3u:
        uint64_t v17 = objc_alloc_init(_MRSendCommandResultStatusProtobuf);
        [(id)a1 addStatuses:v17];
        if (PBReaderPlaceMark()
          && (_MRSendCommandResultStatusProtobufReadFrom((uint64_t)v17, a2) & 1) != 0)
        {
LABEL_33:
          PBReaderRecallMark();

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_41:

        return 0;
      case 4u:
        uint64_t v25 = PBReaderReadString();
        id v26 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v25;

        goto LABEL_39;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

BOOL _MRGenericMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 16;
LABEL_22:
        char v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadData();
    uint64_t v18 = 8;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRDiagnosticProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v21 = PBReaderReadString();
        uint64_t v22 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        uint64_t v18 = *v3;
        unint64_t v19 = *(void *)(a2 + v18);
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v19);
          *(void *)(a2 + v18) = v19 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v20 = 0;
        }
        *(void *)(a1 + 8) = v20;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_19503AB40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19503ACB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19503AF04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _MRAVRouteQueryProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRAVAirPlaySecuritySettingsProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 16) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_19503E140(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19503E8D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19503EA3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19503EE44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19503F520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj)
{
}

void sub_19503F748(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19503FE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1950400BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1950403DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1950407CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id OUTLINED_FUNCTION_1_3(id a1)
{
  return a1;
}

void OUTLINED_FUNCTION_2_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

void OUTLINED_FUNCTION_3_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x2Au);
}

uint64_t _MRPromptForRouteAuthorizationResponseMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_195044574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195045B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id AVOutputContextFunction()
{
  return (id)classAVOutputContext;
}

id initValAVOutputContextDestinationChangeReasonKey()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextDestinationChangeReasonKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextDestinationChangeReasonKey, *v0);
  }
  getAVOutputContextDestinationChangeReasonKey[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextDestinationChangeReasonKeyFunction;
  uint64_t v1 = (void *)constantValAVOutputContextDestinationChangeReasonKey;

  return v1;
}

id AVOutputContextDestinationChangeReasonKeyFunction()
{
  return (id)constantValAVOutputContextDestinationChangeReasonKey;
}

id initValAVOutputContextDestinationChangeReasonIdleDisconnect()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextDestinationChangeReasonIdleDisconnect");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextDestinationChangeReasonIdleDisconnect, *v0);
  }
  getAVOutputContextDestinationChangeReasonIdleDisconnect[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextDestinationChangeReasonIdleDisconnectFunction;
  uint64_t v1 = (void *)constantValAVOutputContextDestinationChangeReasonIdleDisconnect;

  return v1;
}

id AVOutputContextDestinationChangeReasonIdleDisconnectFunction()
{
  return (id)constantValAVOutputContextDestinationChangeReasonIdleDisconnect;
}

id initValAVOutputContextDestinationChangePreviousDeviceIDsKey()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextDestinationChangePreviousDeviceIDsKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextDestinationChangePreviousDeviceIDsKey, *v0);
  }
  getAVOutputContextDestinationChangePreviousDeviceIDsKey = (uint64_t (*)())AVOutputContextDestinationChangePreviousDeviceIDsKeyFunction;
  uint64_t v1 = (void *)constantValAVOutputContextDestinationChangePreviousDeviceIDsKey;

  return v1;
}

id AVOutputContextDestinationChangePreviousDeviceIDsKeyFunction()
{
  return (id)constantValAVOutputContextDestinationChangePreviousDeviceIDsKey;
}

id AVOutputContextDestinationChangeInitiatedNotificationFunction()
{
  return (id)constantValAVOutputContextDestinationChangeInitiatedNotification;
}

id AVOutputDeviceVolumeDidChangeNotificationFunction()
{
  return (id)constantValAVOutputDeviceVolumeDidChangeNotification;
}

id AVOutputDeviceCanSetVolumeDidChangeNotificationFunction()
{
  return (id)constantValAVOutputDeviceCanSetVolumeDidChangeNotification;
}

id AVOutputDeviceVolumeControlTypeDidChangeNotificationFunction()
{
  return (id)constantValAVOutputDeviceVolumeControlTypeDidChangeNotification;
}

id AVOutputContextVolumeControlTypeDidChangeNotificationFunction()
{
  return (id)constantValAVOutputContextVolumeControlTypeDidChangeNotification;
}

id AVOutputContextCanSetVolumeDidChangeNotificationFunction()
{
  return (id)constantValAVOutputContextCanSetVolumeDidChangeNotification;
}

id AVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotificationFunction()
{
  return (id)constantValAVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification;
}

id AVOutputContextPredictedOutputDeviceDidChangeNotificationFunction()
{
  return (id)constantValAVOutputContextPredictedOutputDeviceDidChangeNotification;
}

id AVOutputContextPredictedOutputDevicesDidChangeNotificationFunction()
{
  return (id)constantValAVOutputContextPredictedOutputDevicesDidChangeNotification;
}

id AVOutputDeviceClusterMemberVolumeDidChangeNotificationFunction()
{
  return (id)constantValAVOutputDeviceClusterMemberVolumeDidChangeNotification;
}

id AVOutputDeviceClusterMemberVolumeControlTypeDidChangeNotificationFunction()
{
  return (id)constantValAVOutputDeviceClusterMemberVolumeControlTypeDidChangeNotification;
}

id AVOutputDeviceActivatedClusterMembersRoomVolumeDidChangeNotificationFunction()
{
  return (id)constantValAVOutputDeviceActivatedClusterMembersRoomVolumeDidChangeNotification;
}

id initValAVOutputDeviceActivatedClusterMembersRoomIDKey()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputDeviceActivatedClusterMembersRoomIDKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputDeviceActivatedClusterMembersRoomIDKey, *v0);
  }
  getAVOutputDeviceActivatedClusterMembersRoomIDKey = (uint64_t (*)())AVOutputDeviceActivatedClusterMembersRoomIDKeyFunction;
  uint64_t v1 = (void *)constantValAVOutputDeviceActivatedClusterMembersRoomIDKey;

  return v1;
}

id AVOutputDeviceActivatedClusterMembersRoomIDKeyFunction()
{
  return (id)constantValAVOutputDeviceActivatedClusterMembersRoomIDKey;
}

id initValAVOutputContextTypeSharedSystemAudio()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextTypeSharedSystemAudio");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextTypeSharedSystemAudio, *v0);
  }
  getAVOutputContextTypeSharedSystemAudio[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextTypeSharedSystemAudioFunction;
  uint64_t v1 = (void *)constantValAVOutputContextTypeSharedSystemAudio;

  return v1;
}

id AVOutputContextTypeSharedSystemAudioFunction()
{
  return (id)constantValAVOutputContextTypeSharedSystemAudio;
}

id initValAVOutputContextTypeSharedSystemScreen()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextTypeSharedSystemScreen");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextTypeSharedSystemScreen, *v0);
  }
  getAVOutputContextTypeSharedSystemScreen[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextTypeSharedSystemScreenFunction;
  uint64_t v1 = (void *)constantValAVOutputContextTypeSharedSystemScreen;

  return v1;
}

id AVOutputContextTypeSharedSystemScreenFunction()
{
  return (id)constantValAVOutputContextTypeSharedSystemScreen;
}

id initValAVOutputContextTypeSharedAudioPresentation()
{
  if (AVFoundationLibrary_sOnce_3 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_3, &__block_literal_global_217_0);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_3, "AVOutputContextTypeSharedAudioPresentation");
  if (v0) {
    objc_storeStrong((id *)&constantValAVOutputContextTypeSharedAudioPresentation, *v0);
  }
  getAVOutputContextTypeSharedAudioPresentation[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVOutputContextTypeSharedAudioPresentationFunction;
  uint64_t v1 = (void *)constantValAVOutputContextTypeSharedAudioPresentation;

  return v1;
}

id AVOutputContextTypeSharedAudioPresentationFunction()
{
  return (id)constantValAVOutputContextTypeSharedAudioPresentation;
}

void OUTLINED_FUNCTION_1_4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

uint64_t _MRLyricsItemProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  xpc_object_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v20 = objc_alloc_init(_MRLyricsTokenProtobuf);
        objc_storeStrong((id *)(a1 + 16), v20);
        if (!PBReaderPlaceMark() || !_MRLyricsTokenProtobufReadFrom((uint64_t)v20, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else if (v17 == 2)
      {
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 28) |= 1u;
        while (1)
        {
          uint64_t v24 = *v3;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
          *(void *)(a2 + v24) = v25 + 1;
          v23 |= (unint64_t)(v26 & 0x7F) << v21;
          if ((v26 & 0x80) == 0) {
            goto LABEL_35;
          }
          v21 += 7;
          BOOL v14 = v22++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
LABEL_37:
        *(unsigned char *)(a1 + 24) = v23 != 0;
      }
      else if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        char v19 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v18;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_19504C078(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19504C1C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19504C234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19504C3BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19504C728(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

CFStringRef MRMediaRemoteCopyCommandHandlerStatusDescription(int a1)
{
  if (a1 <= 400)
  {
    switch(a1)
    {
      case 'd':
        CFStringRef v1 = @"SkipAdProhibited";
        break;
      case 'e':
        CFStringRef v1 = @"QueueIsUserCurated";
        break;
      case 'f':
        CFStringRef v1 = @"UserModifiedQueueDisabled";
        break;
      case 'g':
        CFStringRef v1 = @"UserQueueModificationNotSupportedForCurrentItem";
        break;
      case 'h':
        CFStringRef v1 = @"SubscriptionRequiredForSharedQueue";
        break;
      case 'i':
        CFStringRef v1 = @"InsertionPositionNotSpecified";
        break;
      case 'j':
        CFStringRef v1 = @"InvalidInsertionPosition";
        break;
      case 'k':
        CFStringRef v1 = @"RequestParametersOutOfBounds";
        break;
      case 'l':
        CFStringRef v1 = @"SkipLimitReached";
        break;
      default:
        CFStringRef v1 = @"Success";
        switch(a1)
        {
          case 0:
            return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
          case 1:
            CFStringRef v1 = @"NoSuchContent";
            return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
          case 2:
            CFStringRef v1 = @"CommandFailed";
            return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
          case 3:
            CFStringRef v1 = @"UIKitLegacy";
            return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
          case 4:
            CFStringRef v1 = @"CannotModifyQueueWithPlaybackTokenItems";
            return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
            return 0;
          case 10:
            CFStringRef v1 = @"NoActionableNowPlayingItem";
            return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
          default:
            if (a1 != 20) {
              return 0;
            }
            CFStringRef v1 = @"DeviceNotFound";
            break;
        }
        break;
    }
    return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
  }
  if (a1 > 500)
  {
    if (a1 == 501)
    {
      CFStringRef v1 = @"MediaServicesUnavailable";
      return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
    }
    if (a1 == 555)
    {
      CFStringRef v1 = @"Timeout";
      return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
    }
  }
  else
  {
    if (a1 == 401)
    {
      CFStringRef v1 = @"AuthenticationFailure";
      return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
    }
    if (a1 == 404)
    {
      CFStringRef v1 = @"UnsupportedCommand";
      return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
    }
  }
  return 0;
}

CFStringRef MRMediaRemoteCopySendCommandErrorDescription(uint64_t a1)
{
  if (a1 >= 0x17)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"UnknownErrorCode-%u", a1);
    CFStringRef v1 = (const __CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    CFStringRef v1 = off_1E57D3228[(int)a1];
  }
  CFStringRef Copy = CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
  CFRelease(v1);
  return Copy;
}

__CFString *MRMediaRemoteSendCommandErrorDescription(uint64_t a1)
{
  CFStringRef v1 = (__CFString *)MRMediaRemoteCopySendCommandErrorDescription(a1);

  return v1;
}

CFStringRef MRMediaRemoteCopyShuffleModeDescription(int a1)
{
  if ((a1 - 1) > 2) {
    CFStringRef v1 = @"<Unknown>";
  }
  else {
    CFStringRef v1 = off_1E57D32E0[a1 - 1];
  }
  return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
}

CFStringRef MRMediaRemoteCopyRepeatModeDescription(int a1)
{
  if ((a1 - 1) > 2) {
    CFStringRef v1 = @"<Unknown>";
  }
  else {
    CFStringRef v1 = off_1E57D32F8[a1 - 1];
  }
  return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
}

CFStringRef MRMediaRemoteCopyHardwareRemoteBehaviorDescription(int a1)
{
  if (!a1)
  {
    CFStringRef v1 = @"Default";
    return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
  }
  if (a1 == 1)
  {
    CFStringRef v1 = @"ForegroundReceiver";
    return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
  }
  return 0;
}

uint64_t MRMediaRemoteCommandCreateExternalRepresentation(uint64_t a1, void *a2)
{
  uint64_t v4 = objc_alloc_init(_MRSendCommandMessageProtobuf);
  [(_MRSendCommandMessageProtobuf *)v4 setCommand:MRMediaRemoteCommandToProtobuf(a1)];
  xpc_object_t v5 = MRMediaRemoteCommandOptionsToProtobuf(a2);
  [(_MRSendCommandMessageProtobuf *)v4 setOptions:v5];

  id v6 = [(_MRSendCommandMessageProtobuf *)v4 data];
  uint64_t v7 = [v6 copy];

  return v7;
}

void MRMediaRemoteCommandFromExternalRepresentation(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  uint64_t v7 = [[_MRSendCommandMessageProtobuf alloc] initWithData:a1];
  uint64_t v4 = MRMediaRemoteCommandFromProtobuf([(_MRSendCommandMessageProtobuf *)v7 command]);
  xpc_object_t v5 = [(_MRSendCommandMessageProtobuf *)v7 options];
  id v6 = MRMediaRemoteCommandOptionsFromProtobuf(v5);

  v3[2](v3, v4, v6);
}

BOOL MRMediaRemoteCommandIsContextual(int a1)
{
  return (a1 - 109) < 2;
}

BOOL MRMediaRemoteCommandIsNavigational(int a1)
{
  return (a1 - 111) < 5;
}

uint64_t MRMediaRemoteCommandIsLegacy(unsigned int a1)
{
  uint64_t result = 1;
  if (a1 > 0x15 || ((1 << a1) & 0x20FFFF) == 0)
  {
    unsigned int v3 = a1 - 100;
    if (v3 > 0xF || ((1 << v3) & 0xF87F) == 0) {
      return 0;
    }
  }
  return result;
}

BOOL MRMediaRemoteCommandRequiresSourcePositionOption(int a1)
{
  return (a1 - 129) < 3;
}

BOOL MRMediaRemoteCommandRequiresDestinationPositionOption(int a1)
{
  return a1 == 130;
}

BOOL MRMediaRemoteCommandRequiresOptions(int a1)
{
  return (a1 - 129) < 3;
}

uint64_t MRMediaRemoteCopyCommandHandlerStatusesDescription(void *a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          unsigned int v9 = (__CFString *)MRMediaRemoteCopyCommandHandlerStatusDescription([v8 unsignedIntValue]);
          if (v9) {
            [v2 addObject:v9];
          }
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            continue;
          }
          unsigned int v9 = v8;
          unint64_t v10 = [MRPlayerPath alloc];
          uint64_t v11 = -[MRPlayerPath initWithData:](v10, "initWithData:", v9, (void)v16);
          unint64_t v12 = v11;
          if (!v11) {
            uint64_t v11 = (MRPlayerPath *)v9;
          }
          char v13 = [(MRPlayerPath *)v11 description];
          [v2 addObject:v13];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v5);
  }

  uint64_t v14 = [v2 description];

  return v14;
}

id MRMediaRemoteCommandCreateDescription(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  uint64_t v6 = MRMediaRemoteCopyCommandDescription(a1);
  uint64_t v7 = (__CFString *)[v5 mutableCopy];

  char v8 = [(__CFString *)v7 objectForKeyedSubscript:@"kMRMediaRemoteOptionSenderID"];
  [(__CFString *)v7 removeObjectForKey:@"kMRMediaRemoteOptionSenderID"];
  unsigned int v9 = [(__CFString *)v7 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
  [(__CFString *)v7 removeObjectForKey:@"kMRMediaRemoteOptionCommandID"];
  unint64_t v10 = [(__CFString *)v7 objectForKeyedSubscript:@"kMRMediaRemoteOptionRemoteControlInterfaceIdentifier"];
  [(__CFString *)v7 removeObjectForKey:@"kMRMediaRemoteOptionRemoteControlInterfaceIdentifier"];
  uint64_t v11 = [(__CFString *)v7 objectForKeyedSubscript:@"kMRMediaRemoteOptionSendOptionsNumber"];
  [(__CFString *)v7 removeObjectForKey:@"kMRMediaRemoteOptionSendOptionsNumber"];
  id v12 = [NSString alloc];
  char v13 = @"not included";
  if (a3) {
    char v13 = v7;
  }
  uint64_t v14 = (void *)[v12 initWithFormat:@"Command = <%@>, %@, commandID = <%@>, remote control interface = <%@>, appOptions = <%@>, options = <%@>", v6, v8, v9, v10, v11, v13];

  return v14;
}

id MRMediaRemoteErrorFromCommandStatuses(uint64_t a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    id v5 = (void *)MRMediaRemoteCopySendCommandErrorDescription(a1);
    uint64_t v6 = 26;
    switch((int)a1)
    {
      case 1:
        uint64_t v6 = 4;
        break;
      case 2:
        uint64_t v6 = 100;
        break;
      case 5:
        break;
      case 6:
        uint64_t v6 = 5;
        break;
      case 7:
        uint64_t v6 = 2;
        break;
      case 8:
        uint64_t v6 = 44;
        break;
      case 12:
        uint64_t v6 = 46;
        break;
      case 13:
        uint64_t v6 = 47;
        break;
      case 14:
        uint64_t v6 = 48;
        break;
      default:
        goto LABEL_14;
    }
LABEL_15:
    ErrorWithDescription = (void *)MRMediaRemoteCreateErrorWithDescription(v6, (uint64_t)v5);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v7 = v3;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v15;
      while (2)
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v15 != v10) {
            objc_enumerationMutation(v7);
          }
          if (objc_msgSend(*(id *)(*((void *)&v14 + 1) + 8 * i), "intValue", (void)v14))
          {
            id v5 = (void *)MRMediaRemoteCopyCommandHandlerStatusesDescription(v7);

LABEL_14:
            uint64_t v6 = 1;
            goto LABEL_15;
          }
        }
        uint64_t v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }

    id v5 = 0;
    ErrorWithDescription = 0;
  }

  return ErrorWithDescription;
}

uint64_t MRMediaRemoteSendErrorFromError(void *a1, void *a2)
{
  id v3 = a1;
  if (!v3)
  {
    uint64_t v11 = [MEMORY[0x1E4F28B00] currentHandler];
    id v12 = objc_msgSend(NSString, "stringWithUTF8String:", "MRSendCommandError MRMediaRemoteSendErrorFromError(NSError *__strong, NSString *__autoreleasing *)");
    [v11 handleFailureInFunction:v12, @"MRRemoteControlTypes.m", 683, @"Invalid parameter not satisfying: %@", @"error" file lineNumber description];
  }
  uint64_t v4 = [v3 domain];
  char v5 = [v4 isEqualToString:@"kMRMediaRemoteFrameworkErrorDomain"];

  if ((v5 & 1) == 0)
  {
    char v13 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v14 = objc_msgSend(NSString, "stringWithUTF8String:", "MRSendCommandError MRMediaRemoteSendErrorFromError(NSError *__strong, NSString *__autoreleasing *)");
    [v13 handleFailureInFunction:v14, @"MRRemoteControlTypes.m", 684, @"Invalid parameter not satisfying: %@", @"[error.domain isEqualToString:(__bridge NSString *)kMRMediaRemoteFrameworkErrorDomain]" file lineNumber description];
  }
  uint64_t v6 = [v3 code];
  id v7 = [v3 userInfo];
  uint64_t v8 = [v7 objectForKeyedSubscript:*MEMORY[0x1E4F28588]];

  if (v6 <= 99)
  {
    switch(v6)
    {
      case 1:
        uint64_t v9 = 11;
        if (!a2) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 47:
        uint64_t v9 = 13;
        if (!a2) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 48:
        uint64_t v9 = 14;
        if (!a2) {
          goto LABEL_27;
        }
        goto LABEL_26;
    }
  }
  else
  {
    if (v6 <= 120)
    {
      if (v6 != 100 && v6 != 117) {
        goto LABEL_25;
      }
LABEL_19:
      uint64_t v9 = 2;
      if (!a2) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
    if (v6 == 121) {
      goto LABEL_19;
    }
    if (v6 == 126)
    {
      uint64_t v9 = 15;
      if (!a2) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }
LABEL_25:
  uint64_t v9 = 0;
  if (a2) {
LABEL_26:
  }
    *a2 = v8;
LABEL_27:

  return v9;
}

BOOL MRMediaRemoteShouldWakeSystemForCommand(int a1)
{
  BOOL result = 1;
  if ((a1 - 122) > 0x10 || ((1 << (a1 - 122)) & 0x1C801) == 0) {
    return !a1 || a1 == 2;
  }
  return result;
}

uint64_t _MRUpdateActiveSystemEndpointRequestProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  char v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 32;
          goto LABEL_30;
        case 2u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 52) |= 4u;
          while (2)
          {
            uint64_t v24 = *v3;
            uint64_t v25 = *(void *)(a2 + v24);
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
              *(void *)(a2 + v24) = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if (v27 < 0)
              {
                v21 += 7;
                BOOL v15 = v22++ >= 9;
                if (v15)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_58;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_58:
          *(_DWORD *)(a1 + 24) = v23;
          continue;
        case 3u:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 40;
LABEL_30:
          char v28 = *(void **)(a1 + v19);
          *(void *)(a1 + v19) = v18;

          continue;
        case 4u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          *(unsigned char *)(a1 + 52) |= 0x10u;
          while (2)
          {
            uint64_t v32 = *v3;
            uint64_t v33 = *(void *)(a2 + v32);
            unint64_t v34 = v33 + 1;
            if (v33 == -1 || v34 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
              *(void *)(a2 + v32) = v34;
              v31 |= (unint64_t)(v35 & 0x7F) << v29;
              if (v35 < 0)
              {
                v29 += 7;
                BOOL v15 = v30++ >= 9;
                if (v15)
                {
                  uint64_t v31 = 0;
                  goto LABEL_62;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
LABEL_62:
          BOOL v53 = v31 != 0;
          uint64_t v54 = 49;
          goto LABEL_71;
        case 5u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0;
          *(unsigned char *)(a1 + 52) |= 2u;
          while (2)
          {
            uint64_t v39 = *v3;
            uint64_t v40 = *(void *)(a2 + v39);
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v41;
              v38 |= (unint64_t)(v42 & 0x7F) << v36;
              if (v42 < 0)
              {
                v36 += 7;
                BOOL v15 = v37++ >= 9;
                if (v15)
                {
                  uint64_t v38 = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
LABEL_66:
          *(void *)(a1 + 16) = v38;
          continue;
        case 6u:
          *(unsigned char *)(a1 + 52) |= 1u;
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v45 = *(void *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v45 = 0;
          }
          *(void *)(a1 + 8) = v45;
          continue;
        case 7u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          *(unsigned char *)(a1 + 52) |= 8u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v49 = *v3;
        uint64_t v50 = *(void *)(a2 + v49);
        unint64_t v51 = v50 + 1;
        if (v50 == -1 || v51 > *(void *)(a2 + *v4)) {
          break;
        }
        char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
        *(void *)(a2 + v49) = v51;
        v48 |= (unint64_t)(v52 & 0x7F) << v46;
        if ((v52 & 0x80) == 0) {
          goto LABEL_68;
        }
        v46 += 7;
        BOOL v15 = v47++ >= 9;
        if (v15)
        {
          uint64_t v48 = 0;
          goto LABEL_70;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_68:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v48 = 0;
      }
LABEL_70:
      BOOL v53 = v48 != 0;
      uint64_t v54 = 48;
LABEL_71:
      *(unsigned char *)(a1 + v54) = v53;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRUpdateClientMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  char v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_MRNowPlayingClientProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark() || (_MRNowPlayingClientProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRRegisterHIDDeviceResultMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  char v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 16) |= 2u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4))
          {
            uint64_t v24 = &OBJC_IVAR____MRRegisterHIDDeviceResultMessageProtobuf__errorCode;
            goto LABEL_38;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            break;
          }
          v17 += 7;
          BOOL v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            uint64_t v24 = &OBJC_IVAR____MRRegisterHIDDeviceResultMessageProtobuf__errorCode;
            goto LABEL_41;
          }
        }
        uint64_t v24 = &OBJC_IVAR____MRRegisterHIDDeviceResultMessageProtobuf__errorCode;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v25 = 0;
    unsigned int v26 = 0;
    uint64_t v19 = 0;
    *(unsigned char *)(a1 + 16) |= 1u;
    while (1)
    {
      uint64_t v27 = *v3;
      unint64_t v28 = *(void *)(a2 + v27);
      if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
      *(void *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        uint64_t v24 = &OBJC_IVAR____MRRegisterHIDDeviceResultMessageProtobuf__deviceIdentifier;
        goto LABEL_39;
      }
      v25 += 7;
      BOOL v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        uint64_t v24 = &OBJC_IVAR____MRRegisterHIDDeviceResultMessageProtobuf__deviceIdentifier;
        goto LABEL_41;
      }
    }
    uint64_t v24 = &OBJC_IVAR____MRRegisterHIDDeviceResultMessageProtobuf__deviceIdentifier;
LABEL_38:
    *(unsigned char *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRGameControllerPropertiesMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  char v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        BOOL v23 = objc_alloc_init(_MRGameControllerPropertiesProtobuf);
        objc_storeStrong((id *)(a1 + 16), v23);
        if (!PBReaderPlaceMark()
          || (_MRGameControllerPropertiesProtobufReadFrom((uint64_t)v23, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_35:
        *(void *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRAudioFadeResponseMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  char v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 16) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        *(void *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_1950559A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195055B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19505A264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a55, 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose(&a67, 8);
  _Block_object_dispose((const void *)(v67 - 256), 8);
  _Block_object_dispose((const void *)(v67 - 208), 8);
  _Block_object_dispose((const void *)(v67 - 160), 8);
  _Block_object_dispose((const void *)(v67 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_19505DCA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19505E128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19505E4FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19505E738(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19505F46C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19505F9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19505FE28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_19505FEAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_4_0(void *a1, const char *a2)
{
  uint64_t v4 = *(void *)(v2 + 56);
  return [a1 timeIntervalSinceDate:v4];
}

void OUTLINED_FUNCTION_7_0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void OUTLINED_FUNCTION_9(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

uint64_t _MRSendPackedVirtualTouchEventMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  char v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        unsigned int v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

_MRGameControllerAccelerationProtobuf *MRGameControllerAccelerationCreate(double a1, double a2, double a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  double v6 = a1;
  double v7 = a2;
  double v8 = a3;
  uint64_t v3 = (void *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBytes:&v6 length:24];
  uint64_t v4 = objc_alloc_init(_MRGameControllerAccelerationProtobuf);
  -[_MRGameControllerAccelerationProtobuf setData:](v4, "setData:", v3, *(void *)&v6, *(void *)&v7, *(void *)&v8, v9);

  return v4;
}

_MRGameControllerAccelerationProtobuf *MRGameControllerAccelerationCreate4(double a1, double a2, double a3, double a4)
{
  void v7[4] = *MEMORY[0x1E4F143B8];
  *(double *)double v7 = a1;
  *(double *)&v7[1] = a2;
  *(double *)&v7[2] = a3;
  *(double *)&v7[3] = a4;
  uint64_t v4 = (void *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBytes:v7 length:32];
  char v5 = objc_alloc_init(_MRGameControllerAccelerationProtobuf);
  [(_MRGameControllerAccelerationProtobuf *)v5 setData:v4];

  return v5;
}

_MRGameControllerAccelerationProtobuf *MRGameControllerAccelerationCreateF(float a1, float a2, float a3)
{
  return MRGameControllerAccelerationCreate4F(a1, a2, a3, 0.0);
}

_MRGameControllerAccelerationProtobuf *MRGameControllerAccelerationCreate4F(float a1, float a2, float a3, float a4)
{
  double v8 = objc_alloc_init(_MRGameControllerAccelerationProtobuf);
  unint64_t v10 = v8;
  if (a1 != 0.0)
  {
    *(float *)&double v9 = a1;
    [(_MRGameControllerAccelerationProtobuf *)v8 setX:v9];
  }
  if (a2 != 0.0)
  {
    *(float *)&double v9 = a2;
    [(_MRGameControllerAccelerationProtobuf *)v10 setY:v9];
  }
  if (a3 != 0.0)
  {
    *(float *)&double v9 = a3;
    [(_MRGameControllerAccelerationProtobuf *)v10 setZ:v9];
  }
  if (a4 != 0.0)
  {
    *(float *)&double v9 = a4;
    [(_MRGameControllerAccelerationProtobuf *)v10 setW:v9];
  }
  return v10;
}

_MRGameControllerAccelerationProtobuf *MRGameControllerAccelerationCopyF(void *a1)
{
  MRGameControllerAccelerationGetX(a1);
  float v3 = v2;
  MRGameControllerAccelerationGetY(a1);
  float v5 = v4;
  MRGameControllerAccelerationGetZ(a1);
  float v7 = v6;
  float v8 = MRGameControllerAccelerationGetW(a1);

  return MRGameControllerAccelerationCreate4F(v3, v5, v7, v8);
}

void MRGameControllerAccelerationGetX(void *a1)
{
  v3[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 hasData])
  {
    double v2 = [v1 data];

    objc_msgSend(v2, "getBytes:range:", v3, 0, 8);
  }
  else
  {
    [v1 x];
  }
}

void MRGameControllerAccelerationGetY(void *a1)
{
  v3[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 hasData])
  {
    double v2 = [v1 data];

    objc_msgSend(v2, "getBytes:range:", v3, 8, 8);
  }
  else
  {
    [v1 y];
  }
}

void MRGameControllerAccelerationGetZ(void *a1)
{
  v3[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 hasData])
  {
    double v2 = [v1 data];

    objc_msgSend(v2, "getBytes:range:", v3, 16, 8);
  }
  else
  {
    [v1 z];
  }
}

double MRGameControllerAccelerationGetW(void *a1)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 hasData])
  {
    v8[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
    double v2 = [v1 data];
    unint64_t v3 = [v2 length];

    double v4 = 0.0;
    if (v3 >= 0x19)
    {
      float v5 = [v1 data];
      objc_msgSend(v5, "getBytes:range:", v8, 24, 8);

      double v4 = *(double *)v8;
    }
  }
  else
  {
    [v1 w];
    double v4 = v6;
  }

  return v4;
}

_MRGameControllerAccelerationProtobuf *MRGameControllerAccelerationCreateWithLegacyAcceleration(double *a1)
{
  return MRGameControllerAccelerationCreate(*a1, a1[1], a1[2]);
}

_MRGameControllerMotionProtobuf *MRGameControllerMotionCreate()
{
  return objc_alloc_init(_MRGameControllerMotionProtobuf);
}

_MRGameControllerMotionProtobuf *MRGameControllerMotionCopyF(void *a1)
{
  id v1 = a1;
  double v2 = [v1 gravity];
  unint64_t v3 = MRGameControllerAccelerationCopyF(v2);

  double v4 = [v1 userAcceleration];
  float v5 = MRGameControllerAccelerationCopyF(v4);

  float v6 = [v1 attitude];
  float v7 = MRGameControllerAccelerationCopyF(v6);

  float v8 = [v1 rotation];

  double v9 = MRGameControllerAccelerationCopyF(v8);
  unint64_t v10 = objc_alloc_init(_MRGameControllerMotionProtobuf);
  [(_MRGameControllerMotionProtobuf *)v10 setGravity:v3];
  [(_MRGameControllerMotionProtobuf *)v10 setUserAcceleration:v5];
  [(_MRGameControllerMotionProtobuf *)v10 setAttitude:v7];
  [(_MRGameControllerMotionProtobuf *)v10 setRotation:v9];

  return v10;
}

uint64_t MRGameControllerMotionSetGravity(void *a1, const char *a2)
{
  return [a1 setGravity:a2];
}

uint64_t MRGameControllerMotionSetUserAcceleration(void *a1, const char *a2)
{
  return [a1 setUserAcceleration:a2];
}

uint64_t MRGameControllerMotionSetAttitude(void *a1, const char *a2)
{
  return [a1 setAttitude:a2];
}

uint64_t MRGameControllerMotionSetRotation(void *a1, const char *a2)
{
  return [a1 setRotation:a2];
}

_MRGameControllerMotionProtobuf *MRGameControllerMotionCreateWithLegacyMotion(double *a1)
{
  double v2 = objc_alloc_init(_MRGameControllerMotionProtobuf);
  unint64_t v3 = MRGameControllerAccelerationCreate(*a1, a1[1], a1[2]);
  [(_MRGameControllerMotionProtobuf *)v2 setGravity:v3];
  double v4 = MRGameControllerAccelerationCreate(a1[3], a1[4], a1[5]);
  [(_MRGameControllerMotionProtobuf *)v2 setUserAcceleration:v4];

  return v2;
}

_MRGameControllerButtonsProtobuf *MRGameControllerButtonsCreate()
{
  return objc_alloc_init(_MRGameControllerButtonsProtobuf);
}

_MRGameControllerButtonsProtobuf *MRGameControllerButtonsCreateWithLegacyButtons(float *a1)
{
  double v2 = objc_alloc_init(_MRGameControllerButtonsProtobuf);
  unint64_t v3 = v2;
  if (fabsf(fabsf(*a1) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setA:](v2, "setA:");
  }
  if (fabsf(fabsf(a1[1]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setX:](v3, "setX:");
  }
  if (fabsf(fabsf(a1[2]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setPause:](v3, "setPause:");
  }
  if (fabsf(fabsf(a1[3]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setDPadX:](v3, "setDPadX:");
  }
  if (fabsf(fabsf(a1[4]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setDPadY:](v3, "setDPadY:");
  }
  if (fabsf(fabsf(a1[5]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setB:](v3, "setB:");
  }
  if (fabsf(fabsf(a1[6]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setY:](v3, "setY:");
  }
  if (fabsf(fabsf(a1[7]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setLeftShoulder:](v3, "setLeftShoulder:");
  }
  if (fabsf(fabsf(a1[8]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setRightShoulder:](v3, "setRightShoulder:");
  }
  if (fabsf(fabsf(a1[9]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setLeftThumbstickX:](v3, "setLeftThumbstickX:");
  }
  if (fabsf(fabsf(a1[10]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setLeftThumbstickY:](v3, "setLeftThumbstickY:");
  }
  if (fabsf(fabsf(a1[11]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setRightThumbstickX:](v3, "setRightThumbstickX:");
  }
  if (fabsf(fabsf(a1[12]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setRightThumbstickY:](v3, "setRightThumbstickY:");
  }
  if (fabsf(fabsf(a1[13]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setLeftTrigger:](v3, "setLeftTrigger:");
  }
  if (fabsf(fabsf(a1[14]) + -1337.0) > 0.0001) {
    -[_MRGameControllerButtonsProtobuf setRightTrigger:](v3, "setRightTrigger:");
  }
  return v3;
}

_MRGameControllerDigitizerProtobuf *MRGameControllerDigitizerCreate()
{
  return objc_alloc_init(_MRGameControllerDigitizerProtobuf);
}

_MRGameControllerDigitizerProtobuf *MRGameControllerDigitizerCreateWithLegacyDigitizer(uint64_t a1)
{
  double v2 = objc_alloc_init(_MRGameControllerDigitizerProtobuf);
  [(_MRGameControllerDigitizerProtobuf *)v2 setX:*(float *)a1];
  [(_MRGameControllerDigitizerProtobuf *)v2 setY:*(float *)(a1 + 4)];
  [(_MRGameControllerDigitizerProtobuf *)v2 setTouchDown:*(unsigned __int8 *)(a1 + 8)];
  [(_MRGameControllerDigitizerProtobuf *)v2 setTimestamp:*(void *)(a1 + 16)];
  return v2;
}

uint64_t MRGameControllerDigitizerSetTouchDown(void *a1, const char *a2)
{
  return [a1 setTouchDown:a2];
}

uint64_t MRGameControllerDigitizerSetTimestamp(void *a1, const char *a2)
{
  return [a1 setTimestamp:a2];
}

_MRGameControllerDigitizerProtobuf *MRGameControllerDigitizerCreateWithHIDTouchEvent(uint64_t a1)
{
  double v2 = objc_alloc_init(_MRGameControllerDigitizerProtobuf);
  [(_MRGameControllerDigitizerProtobuf *)v2 setX:*(float *)a1];
  [(_MRGameControllerDigitizerProtobuf *)v2 setY:*(float *)(a1 + 4)];
  [(_MRGameControllerDigitizerProtobuf *)v2 setTimestamp:*(void *)(a1 + 16)];
  [(_MRGameControllerDigitizerProtobuf *)v2 setTouchDown:*(_DWORD *)(a1 + 8) != 4];
  return v2;
}

_MRGameControllerMessageProtobuf *MRGameControllerEventCreateWithMotion(uint64_t a1)
{
  double v2 = objc_alloc_init(_MRGameControllerMessageProtobuf);
  [(_MRGameControllerMessageProtobuf *)v2 setMotion:a1];
  return v2;
}

_MRGameControllerMessageProtobuf *MRGameControllerEventCreateWithButtons(uint64_t a1)
{
  double v2 = objc_alloc_init(_MRGameControllerMessageProtobuf);
  [(_MRGameControllerMessageProtobuf *)v2 setButtons:a1];
  return v2;
}

_MRGameControllerMessageProtobuf *MRGameControllerEventCreateWithDigitizer(uint64_t a1)
{
  double v2 = objc_alloc_init(_MRGameControllerMessageProtobuf);
  [(_MRGameControllerMessageProtobuf *)v2 setDigitizer:a1];
  return v2;
}

_MRGameControllerMessageProtobuf *MRGameControllerEventCreateWithLegacyEvent(float *a1)
{
  double v2 = objc_alloc_init(_MRGameControllerMessageProtobuf);
  float v3 = *a1;
  if ((*(_DWORD *)a1 - 2) < 2)
  {
    double v4 = MRGameControllerButtonsCreateWithLegacyButtons(a1 + 2);
    [(_MRGameControllerMessageProtobuf *)v2 setButtons:v4];
    goto LABEL_7;
  }
  if (LODWORD(v3) == 4)
  {
    double v4 = MRGameControllerDigitizerCreateWithLegacyDigitizer((uint64_t)(a1 + 2));
    [(_MRGameControllerMessageProtobuf *)v2 setDigitizer:v4];
    goto LABEL_7;
  }
  if (LODWORD(v3) == 1)
  {
    double v4 = MRGameControllerMotionCreateWithLegacyMotion((double *)a1 + 1);
    [(_MRGameControllerMessageProtobuf *)v2 setMotion:v4];
LABEL_7:
  }
  return v2;
}

_MRGameControllerPropertiesProtobuf *MRGameControllerPropertiesCreate()
{
  id v0 = objc_alloc_init(_MRGameControllerPropertiesProtobuf);
  [(_MRGameControllerPropertiesProtobuf *)v0 setButtonAUpDelay:0xFFFFFFFFLL];
  return v0;
}

uint64_t MRGameControllerPropertiesSetPlayerIndex(void *a1, const char *a2)
{
  return [a1 setPlayerIndex:a2];
}

uint64_t MRGameControllerPropertiesSetButtonAUpDelay(void *a1, const char *a2, double a3)
{
  return [a1 setButtonAUpDelay:(int)a3];
}

double MRGameControllerPropertiesGetButtonAUpDelay(void *a1)
{
  return (double)(int)[a1 buttonAUpDelay];
}

uint64_t MRGameControllerPropertiesSetProfile(void *a1, const char *a2)
{
  return [a1 setProfile:a2];
}

uint64_t MRGameControllerPropertiesSetSupportsExtendedMotion(void *a1, const char *a2)
{
  return [a1 setSupportsExtendedMotion:a2];
}

uint64_t MRGameControllerPropertiesSetVendorName(void *a1, const char *a2)
{
  return [a1 setVendorName:a2];
}

uint64_t MRGameControllerPropertiesCopyVendorName(void *a1)
{
  id v1 = [a1 vendorName];
  uint64_t v2 = [v1 copy];

  return v2;
}

void MRGameControllerServerGetRemoteInputMode(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  float v5 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v6 = [v5 service];

  MRMediaRemoteServiceGetGameControllerRemoteInputMode(v6, v4, v3);
}

void MRGameControllerServerSetRemoteInputMode(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  float v7 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v11 = [v7 service];

  float v8 = +[MRNowPlayingOriginClientManager sharedManager];
  double v9 = +[MROrigin localOrigin];
  unint64_t v10 = [v8 originClientForOrigin:v9];

  [v10 setInputMode:a1];
  MRMediaRemoteServiceSetGameControllerRemoteInputMode(v11, a1, v6, v5);
}

__CFString *MRGameControllerInputModeCreateDescription(char a1)
{
  Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppend(Mutable, @"MRGameControllerInputModeNone |");
  if ((a1 & 1) == 0)
  {
    if ((a1 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    CFStringAppend(Mutable, @"MRGameControllerInputModeCaptureButtons |");
    if ((a1 & 4) == 0) {
      return Mutable;
    }
    goto LABEL_4;
  }
  CFStringAppend(Mutable, @"MRGameControllerInputModeCaptureMotion |");
  if ((a1 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_3:
  if ((a1 & 4) != 0) {
LABEL_4:
  }
    CFStringAppend(Mutable, @"MRGameControllerInputModeCaptureDigitizer");
  return Mutable;
}

__CFString *MRGameControllerPlayerIndexCreateDescription(unsigned int a1)
{
  if (a1 > 3) {
    return @"MRGameControllerPlayerIndexUnset";
  }
  else {
    return off_1E57D34F0[a1];
  }
}

__CFString *MRGameControllerEventTypeCreateDescription(unsigned int a1)
{
  if (a1 > 4) {
    return @"Unknown";
  }
  else {
    return off_1E57D3510[a1];
  }
}

uint64_t MRGameControllerEventCreateDescription(uint64_t a1)
{
  switch(*(_DWORD *)a1)
  {
    case 1:
      long long v1 = *(_OWORD *)(a1 + 24);
      long long v8 = *(_OWORD *)(a1 + 8);
      long long v9 = v1;
      v10[[NSString stringWithFormat:@"com.apple.%@", 0] = *(_OWORD *)(a1 + 40);
      uint64_t Description = MRGameControllerMotionCreateDescription(&v8);
      goto LABEL_10;
    case 2:
      uint64_t Description = MRGameControllerButtonsCreateDescription(*(float *)(a1 + 8), *(float *)(a1 + 12), *(float *)(a1 + 16));
      goto LABEL_10;
    case 3:
      long long v4 = *(_OWORD *)(a1 + 24);
      long long v8 = *(_OWORD *)(a1 + 8);
      long long v9 = v4;
      v10[[NSString stringWithFormat:@"com.apple.%@", 0] = *(_OWORD *)(a1 + 40);
      *(_OWORD *)((char *)v10 + 12) = *(_OWORD *)(a1 + 52);
      uint64_t Description = MRGameControllerButtonsExtendedCreateDescription((float *)&v8);
      goto LABEL_10;
    case 4:
      if (*(unsigned char *)(a1 + 16)) {
        id v5 = @"true";
      }
      else {
        id v5 = @"false";
      }
      uint64_t Description = [NSString stringWithFormat:@"Digitizer: { \nx: %lf \ny: %lf \ntouchDown: %@ \n}", *(float *)(a1 + 8), *(float *)(a1 + 12), v5];
LABEL_10:
      id v3 = (__CFString *)Description;
      break;
    default:
      id v3 = @"Unknown Event: Did you remember to use the event initializers?";
      break;
  }
  uint64_t v6 = [NSString stringWithFormat:@"Game Controller Event: {\n%@\n}", v3];

  return v6;
}

uint64_t MRGameControllerMotionCreateDescription(void *a1)
{
  uint64_t v2 = objc_msgSend(NSString, "stringWithFormat:", @"Acceleration: {\nx:%lf y:%lf z:%lf\n}", *a1, a1[1], a1[2]);
  id v3 = objc_msgSend(NSString, "stringWithFormat:", @"Acceleration: {\nx:%lf y:%lf z:%lf\n}", a1[3], a1[4], a1[5]);
  uint64_t v4 = [NSString stringWithFormat:@"Motion: {\nGravity: %@ \nUserAcceleration: %@\n}", v2, v3];

  return v4;
}

uint64_t MRGameControllerButtonsCreateDescription(float a1, float a2, float a3)
{
  uint64_t v6 = [MEMORY[0x1E4F28E78] stringWithString:@"Buttons: {\n"];
  if (a1 != -1337.0)
  {
    float v7 = objc_msgSend(NSString, "stringWithFormat:", @"buttonA:%lf\n", a1);
    [v6 appendString:v7];
  }
  if (a2 != -1337.0)
  {
    long long v8 = objc_msgSend(NSString, "stringWithFormat:", @"buttonX:%lf\n", a2);
    [v6 appendString:v8];
  }
  if (a3 != -1337.0)
  {
    long long v9 = objc_msgSend(NSString, "stringWithFormat:", @"buttonPause:%lf\n", a3);
    [v6 appendString:v9];
  }
  [v6 appendString:@"\n}"];
  uint64_t v10 = [v6 copy];

  return v10;
}

uint64_t MRGameControllerButtonsExtendedCreateDescription(float *a1)
{
  uint64_t v2 = [MEMORY[0x1E4F28E78] stringWithString:@"Extended Buttons: {\n"];
  float v3 = a1[3];
  if (v3 != -1337.0)
  {
    uint64_t v4 = objc_msgSend(NSString, "stringWithFormat:", @"dpadX:%lf\n", v3);
    [v2 appendString:v4];
  }
  float v5 = a1[4];
  if (v5 != -1337.0)
  {
    uint64_t v6 = objc_msgSend(NSString, "stringWithFormat:", @"dpadY:%lf\n", v5);
    [v2 appendString:v6];
  }
  float v7 = a1[5];
  if (v7 != -1337.0)
  {
    long long v8 = objc_msgSend(NSString, "stringWithFormat:", @"buttonB:%lf\n", v7);
    [v2 appendString:v8];
  }
  float v9 = a1[6];
  if (v9 != -1337.0)
  {
    uint64_t v10 = objc_msgSend(NSString, "stringWithFormat:", @"buttonY:%lf\n", v9);
    [v2 appendString:v10];
  }
  float v11 = a1[7];
  if (v11 != -1337.0)
  {
    unint64_t v12 = objc_msgSend(NSString, "stringWithFormat:", @"leftShoulder:%lf\n", v11);
    [v2 appendString:v12];
  }
  float v13 = a1[8];
  if (v13 != -1337.0)
  {
    BOOL v14 = objc_msgSend(NSString, "stringWithFormat:", @"rightShoulder:%lf\n", v13);
    [v2 appendString:v14];
  }
  float v15 = a1[9];
  if (v15 != -1337.0)
  {
    int v16 = objc_msgSend(NSString, "stringWithFormat:", @"leftThumbstickX:%lf\n", v15);
    [v2 appendString:v16];
  }
  float v17 = a1[10];
  if (v17 != -1337.0)
  {
    unsigned int v18 = objc_msgSend(NSString, "stringWithFormat:", @"leftThumbstickY:%lf\n", v17);
    [v2 appendString:v18];
  }
  float v19 = a1[11];
  if (v19 != -1337.0)
  {
    uint64_t v20 = objc_msgSend(NSString, "stringWithFormat:", @"rightThumbstickX:%lf\n", v19);
    [v2 appendString:v20];
  }
  float v21 = a1[12];
  if (v21 != -1337.0)
  {
    char v22 = objc_msgSend(NSString, "stringWithFormat:", @"rightThumbstickY:%lf\n", v21);
    [v2 appendString:v22];
  }
  float v23 = a1[13];
  if (v23 != -1337.0)
  {
    uint64_t v24 = objc_msgSend(NSString, "stringWithFormat:", @"leftTrigger:%lf\n", v23);
    [v2 appendString:v24];
  }
  float v25 = a1[14];
  if (v25 != -1337.0)
  {
    unsigned int v26 = objc_msgSend(NSString, "stringWithFormat:", @"rightTrigger:%lf\n", v25);
    [v2 appendString:v26];
  }
  uint64_t Description = (void *)MRGameControllerButtonsCreateDescription(*a1, a1[1], a1[2]);
  [v2 appendString:Description];
  [v2 appendString:@"\n}"];
  uint64_t v28 = [v2 copy];

  return v28;
}

uint64_t MRGameControllerDigitizerCreateDescription(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    long long v1 = @"true";
  }
  else {
    long long v1 = @"false";
  }
  [NSString stringWithFormat:@"Digitizer: { \nx: %lf \ny: %lf \ntouchDown: %@ \n}", *(float *)a1, *(float *)(a1 + 4), v1];
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRGameControllerAccelerationCreateDescription(double a1, double a2, double a3)
{
  return objc_claimAutoreleasedReturnValue();
}

double MRGameControllerAccelerationMake()
{
  return -1337.0;
}

int64x2_t MRGameControllerMotionMake@<Q0>(int64x2_t *a1@<X8>)
{
  int64x2_t result = vdupq_n_s64(0xC094E40000000000);
  *a1 = result;
  a1[1] = result;
  a1[2] = result;
  return result;
}

float MRGameControllerButtonsMake()
{
  return -1337.0;
}

int32x4_t MRGameControllerButtonsExtendedMake@<Q0>(int32x4_t *a1@<X8>)
{
  int32x4_t result = vdupq_n_s32(0xC4A72000);
  *a1 = result;
  a1[1] = result;
  a1[3].i32[2] = -995680256;
  a1[3].i64[[NSString stringWithFormat:@"com.apple.%@", 0] = result.i64[0];
  a1[2] = result;
  return result;
}

int32x2_t MRGameControllerDigitizerMake@<D0>(int32x2_t *a1@<X8>)
{
  int32x2_t result = vdup_n_s32(0xC4A72000);
  *a1 = result;
  a1[1] = 0;
  a1[2] = 0;
  a1[1].i8[[NSString stringWithFormat:@"com.apple.%@", 0] = 1;
  return result;
}

double MRGameControllerEventMake@<D0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  *(void *)(a2 + 64) = 0;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_DWORD *)a2 = a1;
  switch(a1)
  {
    case 1:
      int32x4_t v2 = (int32x4_t)vdupq_n_s64(0xC094E40000000000);
      *(int32x4_t *)(a2 + 8) = v2;
      *(int32x4_t *)(a2 + 24) = v2;
      *(int32x4_t *)(a2 + 40) = v2;
      break;
    case 2:
      *(int32x2_t *)v2.i8 = vdup_n_s32(0xC4A72000);
      *(void *)(a2 + 8) = v2.i64[0];
      *(_DWORD *)(a2 + 16) = -995680256;
      break;
    case 3:
      int32x4_t v2 = vdupq_n_s32(0xC4A72000);
      *(int32x4_t *)(a2 + 8) = v2;
      *(int32x4_t *)(a2 + 24) = v2;
      *(int32x4_t *)(a2 + 40) = v2;
      *(void *)(a2 + 56) = v2.i64[0];
      *(_DWORD *)(a2 + 64) = -995680256;
      break;
    case 4:
      *(int32x2_t *)v2.i8 = vdup_n_s32(0xC4A72000);
      *(void *)(a2 + 8) = v2.i64[0];
      *(void *)(a2 + 16) = 1;
      break;
    default:
      uint64_t v4 = _MRLogForCategory(0);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        int v6 = 134217984;
        uint64_t v7 = a1;
        _os_log_impl(&dword_194F3C000, v4, OS_LOG_TYPE_DEFAULT, "Unknown MRGameControllerEventType: %ld", (uint8_t *)&v6, 0xCu);
      }

      break;
  }
  return *(double *)v2.i64;
}

void MRMediaRemoteSendPlaybackSession(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a5;
  float v13 = (void *)MEMORY[0x1E4F1C9C8];
  id v14 = a4;
  float v15 = [v13 date];
  id v16 = [NSString alloc];
  if (v9) {
    uint64_t v17 = [v16 initWithFormat:@"destination=<%@>, playbackSession=<%@>, request=<%@>", v11, v9, v10];
  }
  else {
    uint64_t v17 = [v16 initWithFormat:@"destination=<%@>, request=<%@>", v11, v10, v29];
  }
  unsigned int v18 = (void *)v17;
  id v19 = objc_alloc(MEMORY[0x1E4F28E78]);
  uint64_t v20 = [v10 requestID];
  float v21 = (void *)[v19 initWithFormat:@"%@<%@>", @"sendPlaybackSession", v20];

  if (v18) {
    [v21 appendFormat:@" for %@", v18];
  }
  char v22 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    char v36 = v21;
    _os_log_impl(&dword_194F3C000, v22, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  float v23 = [[MRPlaybackSessionMigrateRequestMessage alloc] initWithPlaybackSession:v9 request:v10 forPlayerPath:v11];
  uint64_t v24 = (void *)MRGetSharedService();
  v30[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v30[1] = 3221225472;
  v30[2] = __MRMediaRemoteSendPlaybackSession_block_invoke;
  v30[3] = &unk_1E57D3540;
  id v31 = v11;
  id v32 = v10;
  id v33 = v15;
  id v34 = v12;
  id v25 = v12;
  id v26 = v15;
  id v27 = v10;
  id v28 = v11;
  MRMediaRemoteServiceSendPlaybackSession(v24, v23, v14, v30);
}

void __MRMediaRemoteSendPlaybackSession_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = _MRLogForCategory(0xAuLL);
  id v9 = v8;
  if (!v6)
  {
    BOOL v15 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (!v15) {
        goto LABEL_14;
      }
      id v11 = [*(id *)(a1 + 40) requestID];
      id v16 = *(void **)(a1 + 32);
      float v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v25 = 138544130;
      id v26 = @"sendPlaybackSession";
      __int16 v27 = 2114;
      id v28 = v11;
      __int16 v29 = 2114;
      id v30 = v16;
      __int16 v31 = 2048;
      uint64_t v32 = v17;
      unsigned int v18 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      id v19 = v9;
      uint32_t v20 = 42;
    }
    else
    {
      if (!v15) {
        goto LABEL_14;
      }
      id v11 = [*(id *)(a1 + 40) requestID];
      float v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v25 = 138543874;
      id v26 = @"sendPlaybackSession";
      __int16 v27 = 2114;
      id v28 = v11;
      __int16 v29 = 2048;
      id v30 = v21;
      unsigned int v18 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      id v19 = v9;
      uint32_t v20 = 32;
    }
    _os_log_impl(&dword_194F3C000, v19, OS_LOG_TYPE_DEFAULT, v18, (uint8_t *)&v25, v20);
    goto LABEL_13;
  }
  BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
  if (v7)
  {
    if (!v10) {
      goto LABEL_14;
    }
    id v11 = [*(id *)(a1 + 40) requestID];
    uint64_t v12 = *(void *)(a1 + 32);
    float v13 = [MEMORY[0x1E4F1C9C8] date];
    [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
    int v25 = 138544386;
    id v26 = @"sendPlaybackSession";
    __int16 v27 = 2114;
    id v28 = v11;
    __int16 v29 = 2114;
    id v30 = v6;
    __int16 v31 = 2114;
    uint64_t v32 = v12;
    __int16 v33 = 2048;
    uint64_t v34 = v14;
    _os_log_error_impl(&dword_194F3C000, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", (uint8_t *)&v25, 0x34u);
LABEL_13:

    goto LABEL_14;
  }
  if (v10) {
    __MRMediaRemoteSendPlaybackSession_block_invoke_cold_1();
  }
LABEL_14:

  uint64_t v22 = *(void *)(a1 + 56);
  if (v22)
  {
    if (v6)
    {
      (*(void (**)(void, void, id))(v22 + 16))(*(void *)(a1 + 56), *(void *)(a1 + 40), v6);
    }
    else
    {
      float v23 = [v5 request];
      uint64_t v24 = [v5 error];
      (*(void (**)(uint64_t, void *, void *))(v22 + 16))(v22, v23, v24);
    }
  }
}

void MRMediaRemoteSendPlaybackSessionMigrateBegin(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a4;
  BOOL v10 = (void *)MEMORY[0x1E4F1C9C8];
  id v11 = a3;
  uint64_t v12 = [v10 now];
  id v13 = objc_alloc(MEMORY[0x1E4F28E78]);
  uint64_t v14 = [v7 requestIdentifier];
  BOOL v15 = (void *)[v13 initWithFormat:@"%@<%@>", @"sendPlaybackSessionMigrateBegin", v14];

  if (v8) {
    [v15 appendFormat:@" for %@", v8];
  }
  id v16 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    __int16 v29 = v15;
    _os_log_impl(&dword_194F3C000, v16, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  uint64_t v17 = [[MRPlaybackSessionMigrateBeginMessage alloc] initWithRequest:v7 playerPath:v8];
  unsigned int v18 = (void *)MRGetSharedService();
  v23[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v23[1] = 3221225472;
  v23[2] = __MRMediaRemoteSendPlaybackSessionMigrateBegin_block_invoke;
  v23[3] = &unk_1E57D3568;
  id v24 = v8;
  id v25 = v7;
  id v26 = v12;
  id v27 = v9;
  id v19 = v9;
  id v20 = v12;
  id v21 = v7;
  id v22 = v8;
  MRMediaRemoteServiceSendPlaybackSessionMigrateBegin(v18, v17, v11, v23);
}

void __MRMediaRemoteSendPlaybackSessionMigrateBegin_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = _MRLogForCategory(0xAuLL);
  id v9 = v8;
  if (!v6)
  {
    BOOL v15 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (!v15) {
        goto LABEL_14;
      }
      id v11 = [*(id *)(a1 + 40) requestIdentifier];
      id v16 = *(void **)(a1 + 32);
      id v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v23 = 138544130;
      id v24 = @"sendPlaybackSessionMigrateBegin";
      __int16 v25 = 2114;
      id v26 = v11;
      __int16 v27 = 2114;
      id v28 = v16;
      __int16 v29 = 2048;
      uint64_t v30 = v17;
      unsigned int v18 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      id v19 = v9;
      uint32_t v20 = 42;
    }
    else
    {
      if (!v15) {
        goto LABEL_14;
      }
      id v11 = [*(id *)(a1 + 40) requestIdentifier];
      id v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v23 = 138543874;
      id v24 = @"sendPlaybackSessionMigrateBegin";
      __int16 v25 = 2114;
      id v26 = v11;
      __int16 v27 = 2048;
      id v28 = v21;
      unsigned int v18 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      id v19 = v9;
      uint32_t v20 = 32;
    }
    _os_log_impl(&dword_194F3C000, v19, OS_LOG_TYPE_DEFAULT, v18, (uint8_t *)&v23, v20);
    goto LABEL_13;
  }
  BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
  if (v7)
  {
    if (!v10) {
      goto LABEL_14;
    }
    id v11 = [*(id *)(a1 + 40) requestIdentifier];
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = [MEMORY[0x1E4F1C9C8] date];
    [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
    int v23 = 138544386;
    id v24 = @"sendPlaybackSessionMigrateBegin";
    __int16 v25 = 2114;
    id v26 = v11;
    __int16 v27 = 2114;
    id v28 = v6;
    __int16 v29 = 2114;
    uint64_t v30 = v12;
    __int16 v31 = 2048;
    uint64_t v32 = v14;
    _os_log_error_impl(&dword_194F3C000, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", (uint8_t *)&v23, 0x34u);
LABEL_13:

    goto LABEL_14;
  }
  if (v10) {
    __MRMediaRemoteSendPlaybackSessionMigrateBegin_block_invoke_cold_1();
  }
LABEL_14:

  uint64_t v22 = *(void *)(a1 + 56);
  if (v22) {
    (*(void (**)(uint64_t, id))(v22 + 16))(v22, v6);
  }
}

void MRMediaRemoteSendPlaybackSessionMigrateEnd(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v10 = a3;
  id v11 = a5;
  uint64_t v12 = (void *)MEMORY[0x1E4F1C9C8];
  id v13 = a4;
  id v14 = a2;
  BOOL v15 = [v12 now];
  id v16 = objc_alloc(MEMORY[0x1E4F28E78]);
  uint64_t v17 = [v9 requestIdentifier];
  unsigned int v18 = (void *)[v16 initWithFormat:@"%@<%@>", @"sendPlaybackSessionMigrateEnd", v17];

  if (v10) {
    [v18 appendFormat:@" for %@", v10];
  }
  id v19 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v32 = v18;
    _os_log_impl(&dword_194F3C000, v19, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  uint32_t v20 = [[MRPlaybackSessionMigrateEndMessage alloc] initWithRequest:v9 error:v14 playerPath:v10];
  id v21 = (void *)MRGetSharedService();
  v26[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v26[1] = 3221225472;
  v26[2] = __MRMediaRemoteSendPlaybackSessionMigrateEnd_block_invoke;
  v26[3] = &unk_1E57D3568;
  id v27 = v10;
  id v28 = v9;
  id v29 = v15;
  id v30 = v11;
  id v22 = v11;
  id v23 = v15;
  id v24 = v9;
  id v25 = v10;
  MRMediaRemoteServiceSendPlaybackSessionMigrateEnd(v21, v20, v13, v26);
}

void __MRMediaRemoteSendPlaybackSessionMigrateEnd_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = _MRLogForCategory(0xAuLL);
  id v9 = v8;
  if (!v6)
  {
    BOOL v15 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (!v15) {
        goto LABEL_14;
      }
      id v11 = [*(id *)(a1 + 40) requestIdentifier];
      id v16 = *(void **)(a1 + 32);
      id v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v23 = 138544130;
      id v24 = @"sendPlaybackSessionMigrateEnd";
      __int16 v25 = 2114;
      id v26 = v11;
      __int16 v27 = 2114;
      id v28 = v16;
      __int16 v29 = 2048;
      uint64_t v30 = v17;
      unsigned int v18 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      id v19 = v9;
      uint32_t v20 = 42;
    }
    else
    {
      if (!v15) {
        goto LABEL_14;
      }
      id v11 = [*(id *)(a1 + 40) requestIdentifier];
      id v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v23 = 138543874;
      id v24 = @"sendPlaybackSessionMigrateEnd";
      __int16 v25 = 2114;
      id v26 = v11;
      __int16 v27 = 2048;
      id v28 = v21;
      unsigned int v18 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      id v19 = v9;
      uint32_t v20 = 32;
    }
    _os_log_impl(&dword_194F3C000, v19, OS_LOG_TYPE_DEFAULT, v18, (uint8_t *)&v23, v20);
    goto LABEL_13;
  }
  BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
  if (v7)
  {
    if (!v10) {
      goto LABEL_14;
    }
    id v11 = [*(id *)(a1 + 40) requestIdentifier];
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = [MEMORY[0x1E4F1C9C8] date];
    [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
    int v23 = 138544386;
    id v24 = @"sendPlaybackSessionMigrateEnd";
    __int16 v25 = 2114;
    id v26 = v11;
    __int16 v27 = 2114;
    id v28 = v6;
    __int16 v29 = 2114;
    uint64_t v30 = v12;
    __int16 v31 = 2048;
    uint64_t v32 = v14;
    _os_log_error_impl(&dword_194F3C000, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", (uint8_t *)&v23, 0x34u);
LABEL_13:

    goto LABEL_14;
  }
  if (v10) {
    __MRMediaRemoteSendPlaybackSessionMigrateEnd_block_invoke_cold_1();
  }
LABEL_14:

  uint64_t v22 = *(void *)(a1 + 56);
  if (v22) {
    (*(void (**)(uint64_t, id))(v22 + 16))(v22, v6);
  }
}

void _MRMediaRemotePlaybackSessionRequestSupportedType(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if ([v7 isResolved])
  {
    if (v9) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v21 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v22 = objc_msgSend(NSString, "stringWithUTF8String:", "void _MRMediaRemotePlaybackSessionRequestSupportedType(MRPlayerPath *__strong, MRPlayerPath *__strong, __strong dispatch_queue_t, void (^__strong)(NSString *__strong, NSError *__strong))");
  [v21 handleFailureInFunction:v22 file:@"MRPlaybackSessionMigrateRequestResponse.m" lineNumber:74 description:@"Attempting to use unresolved Player Path"];

  if (!v9)
  {
LABEL_3:
    id v9 = MEMORY[0x1E4F14428];
    id v11 = MEMORY[0x1E4F14428];
  }
LABEL_4:
  v45[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v45[1] = 3221225472;
  v45[2] = ___MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke;
  v45[3] = &unk_1E57D3590;
  id v12 = v10;
  id v46 = v12;
  id v13 = (void (**)(void, void, void))MEMORY[0x1997190F0](v45);
  uint64_t v14 = +[MRUserSettings currentSettings];
  char v15 = [v14 supportMigration];

  if (v15)
  {
    id v16 = dispatch_group_create();
    dispatch_group_enter(v16);
    v43[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
    v43[1] = v43;
    v43[2] = 0x3032000000;
    v43[3] = __Block_byref_object_copy__11;
    v43[4] = __Block_byref_object_dispose__11;
    id v44 = 0;
    v40[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v40[1] = 3221225472;
    v40[2] = ___MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_47;
    v40[3] = &unk_1E57D35B8;
    char v42 = v43;
    uint64_t v17 = v16;
    unint64_t v41 = v17;
    MRMediaRemoteGetSupportedCommandsForPlayer(v7, v9, v40);
    dispatch_group_enter(v17);
    v38[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
    v38[1] = v38;
    v38[2] = 0x3032000000;
    v38[3] = __Block_byref_object_copy__11;
    void v38[4] = __Block_byref_object_dispose__11;
    id v39 = 0;
    v35[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v35[1] = 3221225472;
    v35[2] = ___MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_2;
    v35[3] = &unk_1E57D35B8;
    uint64_t v37 = v38;
    unsigned int v18 = v17;
    char v36 = v18;
    MRMediaRemoteGetSupportedCommandsForPlayer(v8, v9, v35);
    dispatch_group_enter(v18);
    v33[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
    v33[1] = v33;
    v33[2] = 0x3032000000;
    v33[3] = __Block_byref_object_copy__11;
    v33[4] = __Block_byref_object_dispose__11;
    id v34 = 0;
    id v19 = [v7 origin];
    v30[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v30[1] = 3221225472;
    v30[2] = ___MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_3;
    v30[3] = &unk_1E57D35E0;
    uint64_t v32 = v33;
    ErrorWithuint64_t Description = v18;
    __int16 v31 = ErrorWithDescription;
    +[MRDeviceInfoRequest deviceInfoForOrigin:v19 queue:v9 completion:v30];

    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = ___MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_4;
    block[3] = &unk_1E57D3608;
    __int16 v27 = v33;
    id v24 = v7;
    id v28 = v43;
    __int16 v29 = v38;
    id v26 = v13;
    id v25 = v8;
    dispatch_group_notify(ErrorWithDescription, v9, block);

    _Block_object_dispose(v33, 8);
    _Block_object_dispose(v38, 8);

    _Block_object_dispose(v43, 8);
  }
  else
  {
    ErrorWithuint64_t Description = MRMediaRemoteCreateErrorWithDescription(6, @"Migration feature not enabled");
    ((void (**)(void, void, NSObject *))v13)[2](v13, 0, ErrorWithDescription);
  }
}

void sub_1950637F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose((const void *)(v38 - 184), 8);
  _Unwind_Resume(a1);
}

uint64_t MRPlaybackSessionMigrateCopySupportedTypeMatch(void *a1, void *a2)
{
  float v3 = (void *)MRPlaybackSessionMigrateCopySupportedTypes(a2);
  uint64_t v4 = (void *)MRPlaybackSessionMigrateCopyCurrentTypes(a1);
  id v5 = __MRPlaybackSessionMigrateCopySupportedTypeMatch_block_invoke((uint64_t)v4, v3, v4);

  uint64_t v6 = [v5 copy];
  return v6;
}

uint64_t MRPlaybackSessionMigrateCopyCurrentTypes(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v1 = a1;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v9 != v3) {
          objc_enumerationMutation(v1);
        }
        id v5 = *(void **)(*((void *)&v8 + 1) + 8 * i);
        if (objc_msgSend(v5, "command", (void)v8) == 133)
        {
          if ([v5 isEnabled])
          {
            uint64_t v6 = [v5 options];
            uint64_t v2 = [v6 objectForKeyedSubscript:@"kMRMediaRemoteCommandInfoCurrentPlaybackSessionTypes"];
          }
          else
          {
            uint64_t v2 = 0;
          }
          goto LABEL_13;
        }
      }
      uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_13:

  return v2;
}

uint64_t MRPlaybackSessionMigrateCopySupportedTypes(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v1 = a1;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v9 != v3) {
          objc_enumerationMutation(v1);
        }
        id v5 = *(void **)(*((void *)&v8 + 1) + 8 * i);
        if (objc_msgSend(v5, "command", (void)v8) == 133)
        {
          if ([v5 isEnabled])
          {
            uint64_t v6 = [v5 options];
            uint64_t v2 = [v6 objectForKeyedSubscript:@"kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes"];
          }
          else
          {
            uint64_t v2 = 0;
          }
          goto LABEL_13;
        }
      }
      uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_13:

  return v2;
}

void MRMediaRemotePlaybackSessionRequestSupportedType(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a1;
  id v10 = a2;
  v23[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v23[1] = 3221225472;
  v23[2] = __MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke;
  v23[3] = &unk_1E57D3658;
  id v25 = v8;
  id v11 = v7;
  id v24 = v11;
  id v12 = v8;
  uint64_t v13 = (void *)MEMORY[0x1997190F0](v23);
  v18[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = __MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_3;
  v18[3] = &unk_1E57D36A8;
  id v19 = v10;
  id v20 = v11;
  id v21 = v9;
  id v22 = v13;
  id v14 = v9;
  id v15 = v13;
  id v16 = v11;
  id v17 = v10;
  MRMediaRemoteNowPlayingResolvePlayerPath(v14, v16, v18);
}

void __MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  uint64_t v13 = *(void **)(a1 + 40);
  if (v13)
  {
    id v18 = v13;
    id v14 = v9;
    id v15 = v10;
    id v16 = v11;
    id v17 = v12;
    msv_dispatch_async_on_queue();
  }
}

uint64_t __MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_2(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void, void))(a1[8] + 16))(a1[8], a1[4], a1[5], a1[6], a1[7]);
}

void __MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  if ([v5 isResolved])
  {
    uint64_t v6 = (void *)MRPlaybackSessionMigrateCopyCorrespondingPlayerPath(v5, *(void **)(a1 + 32));
    id v7 = *(void **)(a1 + 40);
    v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    v16[2] = __MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_4;
    v16[3] = &unk_1E57D36A8;
    id v17 = v5;
    id v18 = *(id *)(a1 + 40);
    id v8 = *(id *)(a1 + 56);
    id v19 = v6;
    id v20 = v8;
    id v9 = v6;
    MRMediaRemoteNowPlayingResolvePlayerPath(v9, v7, v16);
  }
  else
  {
    if (a3) {
      id Error = a3;
    }
    else {
      id Error = (id)MRMediaRemoteNowPlayingPlayerPathCreateError(v5);
    }
    id v11 = Error;
    uint64_t v12 = *(void *)(a1 + 56);
    uint64_t v13 = [Error code];
    id v14 = (void *)[[NSString alloc] initWithFormat:@"sourcePlayerPath %@ was resolved to %@. Likely there is no now playing app?", *(void *)(a1 + 48), v5];
    ErrorWithuint64_t Description = (void *)MRMediaRemoteCreateErrorWithDescription(v13, (uint64_t)v14);
    (*(void (**)(uint64_t, id, void, void, void *))(v12 + 16))(v12, v5, 0, 0, ErrorWithDescription);
  }
}

uint64_t MRPlaybackSessionMigrateCopyCorrespondingPlayerPath(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (([v3 isResolved] & 1) == 0)
  {
    id v7 = [MEMORY[0x1E4F28B00] currentHandler];
    id v8 = objc_msgSend(NSString, "stringWithUTF8String:", "MRNowPlayingPlayerPathRef MRPlaybackSessionMigrateCopyCorrespondingPlayerPath(MRNowPlayingPlayerPathRef, MROriginRef)");
    [v7 handleFailureInFunction:v8 file:@"MRPlaybackSessionMigrateRequestResponse.m" lineNumber:677 description:@"Non resolved playerPath"];
  }
  uint64_t v5 = [v3 playerPathByRedirectingToOrigin:v4];

  return v5;
}

void __MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 origin];
  if (!v6) {
    goto LABEL_4;
  }
  id v7 = (void *)v6;
  id v8 = [v5 client];
  id v9 = [v8 bundleIdentifier];

  if (v9)
  {
    id v10 = *(void **)(a1 + 32);
    id v11 = *(void **)(a1 + 40);
    v19[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    v19[2] = __MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_5;
    v19[3] = &unk_1E57D3680;
    id v22 = *(id *)(a1 + 56);
    id v20 = *(id *)(a1 + 32);
    id v21 = v5;
    _MRMediaRemotePlaybackSessionRequestSupportedType(v10, v21, v11, v19);
  }
  else
  {
LABEL_4:
    if (a3) {
      id Error = a3;
    }
    else {
      id Error = (id)MRMediaRemoteNowPlayingPlayerPathCreateError(v5);
    }
    uint64_t v13 = Error;
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v15 = *(void *)(a1 + 32);
    uint64_t v16 = [Error code];
    id v17 = (void *)[[NSString alloc] initWithFormat:@"destinationPlayerPath %@ was resolved to %@", *(void *)(a1 + 48), v5];
    ErrorWithuint64_t Description = (void *)MRMediaRemoteCreateErrorWithDescription(v16, (uint64_t)v17);
    (*(void (**)(uint64_t, uint64_t, id, void, void *))(v14 + 16))(v14, v15, v5, 0, ErrorWithDescription);
  }
}

uint64_t __MRMediaRemotePlaybackSessionRequestSupportedType_block_invoke_5(void *a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(a1[6] + 16))(a1[6], a1[4], a1[5], a2, a3);
}

void MRMediaRemotePlaybackSessionRequestSupportedTypeForOrigin(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  MRMediaRemotePlaybackSessionRequestSupportedType(v9, a2, v8, v7);
}

void _MRMediaRemotePlaybackSessionMigrateForPlayer(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v39 = a3;
  id v11 = a4;
  id v12 = a5;
  v69[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v69[1] = 3221225472;
  v69[2] = ___MRMediaRemotePlaybackSessionMigrateForPlayer_block_invoke;
  v69[3] = &unk_1E57D36D0;
  id v13 = v9;
  id v70 = v13;
  id v14 = v10;
  id v71 = v14;
  id v15 = v11;
  id v72 = v15;
  uint64_t v16 = (void *)MEMORY[0x1997190F0](v69);
  v66[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v66[1] = 3221225472;
  v66[2] = ___MRMediaRemotePlaybackSessionMigrateForPlayer_block_invoke_4;
  v66[3] = &unk_1E57D36F8;
  id v17 = v16;
  id v67 = v17;
  id v38 = v12;
  id v68 = v38;
  id v18 = (void *)MEMORY[0x1997190F0](v66);
  id v19 = +[MRUserSettings currentSettings];
  LODWORD(a3) = [v19 forceFadeForEveryHandoff];

  if (a3) {
    objc_msgSend(v13, "setPlayerOptions:", objc_msgSend(v13, "playerOptions") | 0x40);
  }
  v64[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
  v64[1] = v64;
  v64[2] = 0x2020000000;
  int v65 = 0;
  v62[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
  v62[1] = v62;
  v62[2] = 0x3032000000;
  v62[3] = __Block_byref_object_copy__11;
  void v62[4] = __Block_byref_object_dispose__11;
  id v63 = 0;
  v60[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
  v60[1] = v60;
  v60[2] = 0x3032000000;
  v60[3] = __Block_byref_object_copy__11;
  v60[4] = __Block_byref_object_dispose__11;
  id v61 = 0;
  v59[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
  v59[1] = v59;
  v59[2] = 0x2020000000;
  v59[3] = 0;
  v54[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v54[1] = 3221225472;
  v54[2] = ___MRMediaRemotePlaybackSessionMigrateForPlayer_block_invoke_6;
  v54[3] = &unk_1E57D3748;
  id v20 = v13;
  id v55 = v20;
  id v21 = v14;
  id v56 = v21;
  id v22 = v15;
  id v57 = v22;
  char v58 = v60;
  int v23 = (void *)MEMORY[0x1997190F0](v54);
  v50[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v50[1] = 3221225472;
  v50[2] = ___MRMediaRemotePlaybackSessionMigrateForPlayer_block_invoke_9;
  v50[3] = &unk_1E57D3770;
  id v24 = v20;
  id v51 = v24;
  id v25 = v21;
  id v52 = v25;
  id v26 = v22;
  id v53 = v26;
  __int16 v27 = (void *)MEMORY[0x1997190F0](v50);
  id v28 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  __int16 v29 = (void *)[v27 copy];
  uint64_t v30 = (void *)MEMORY[0x1997190F0]();
  [v28 addObject:v30];

  __int16 v31 = (void *)[v23 copy];
  uint64_t v32 = (void *)MEMORY[0x1997190F0]();
  [v28 addObject:v32];

  v40[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v40[1] = 3221225472;
  v40[2] = ___MRMediaRemotePlaybackSessionMigrateForPlayer_block_invoke_12;
  v40[3] = &unk_1E57D39F0;
  id v33 = v24;
  id v41 = v33;
  id v34 = v25;
  id v42 = v34;
  id v35 = v26;
  id v43 = v35;
  id v46 = v62;
  unsigned int v47 = v64;
  id v36 = v39;
  id v44 = v36;
  uint64_t v48 = v60;
  uint64_t v49 = v59;
  id v37 = v18;
  id v45 = v37;
  MRPerformAsyncOperationsUntilError(v28, v40);

  _Block_object_dispose(v59, 8);
  _Block_object_dispose(v60, 8);

  _Block_object_dispose(v62, 8);
  _Block_object_dispose(v64, 8);
}

void sub_195064B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose((const void *)(v49 - 240), 8);
  _Unwind_Resume(a1);
}

void _MRMediaRemotePlaybackSessionMigrateForOrigin(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  if (v12)
  {
    if (v9) {
      goto LABEL_3;
    }
  }
  else
  {
    id v12 = (id)MEMORY[0x1E4F14428];
    id v26 = MEMORY[0x1E4F14428];
    if (v9) {
      goto LABEL_3;
    }
  }
  id v9 = objc_alloc_init(MRPlaybackSessionMigrateRequest);
LABEL_3:
  id v14 = [MEMORY[0x1E4F1C9C8] date];
  id v15 = [NSString alloc];
  uint64_t v16 = [v11 displayName];
  id v17 = (void *)[v15 initWithFormat:@"source=%@ destination=%@ request=%@", v10, v16, v9];

  id v18 = objc_alloc(MEMORY[0x1E4F28E78]);
  id v19 = [(MRPlaybackSessionMigrateRequest *)v9 requestID];
  id v20 = (void *)[v18 initWithFormat:@"%@<%@>", @"migratePlaybackSession", v19];

  if (v17) {
    [v20 appendFormat:@" for %@", v17];
  }
  id v21 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    id v34 = v20;
    _os_log_impl(&dword_194F3C000, v21, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  [(MRPlaybackSessionMigrateRequest *)v9 startEvent:@"requestType"];
  v27[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v27[1] = 3221225472;
  v27[2] = ___MRMediaRemotePlaybackSessionMigrateForOrigin_block_invoke;
  v27[3] = &unk_1E57D3A40;
  id v28 = v9;
  __int16 v29 = @"migratePlaybackSession";
  id v31 = v12;
  id v32 = v13;
  id v30 = v14;
  id v22 = v12;
  id v23 = v13;
  id v24 = v14;
  id v25 = v9;
  MRMediaRemotePlaybackSessionRequestSupportedType(v10, v11, v22, v27);
}

void MRMediaRemotePlaybackSessionMigrate(void *a1, void *a2, void *a3, void *a4)
{
}

void MRMediaRemotePlaybackSessionMigrateWithRequest(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MRMediaRemotePlaybackSessionMigrateWithRequest_block_invoke;
  v11[3] = &unk_1E57D0FE8;
  id v12 = v9;
  id v10 = v9;
  _MRMediaRemotePlaybackSessionMigrateForOrigin(a1, a2, a3, a4, v11);
}

void MRMediaRemotePlaybackSessionMigrateForOrigin(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = objc_alloc_init(MRPlayerPath);
  [(MRPlayerPath *)v9 setOrigin:a1];
  MRMediaRemotePlaybackSessionMigrateWithRequest(0, v9, a2, v8, v7);
}

uint64_t __MRMediaRemotePlaybackSessionMigrateWithRequest_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRMediaRemotePlaybackSessionMigrateForOriginWithRequest(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  uint64_t v16 = objc_alloc_init(MRPlayerPath);
  [(MRPlayerPath *)v16 setOrigin:a2];
  id v11 = a1;
  id v12 = [v11 playerPath];
  id v13 = [v12 client];
  [(MRPlayerPath *)v16 setClient:v13];

  id v14 = [v11 playerPath];
  id v15 = [v14 player];
  [(MRPlayerPath *)v16 setPlayer:v15];

  MRMediaRemotePlaybackSessionMigrateWithRequest(v11, v16, a3, v10, v9);
}

void MRMediaRemotePlaybackSessionMigrateForDevice(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v73 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  if (!v7)
  {
    id v7 = (id)MEMORY[0x1E4F14428];
    id v9 = MEMORY[0x1E4F14428];
  }
  id v32 = a1;
  id v10 = a2;
  id v11 = [MEMORY[0x1E4F1C9C8] date];
  id v12 = [MEMORY[0x1E4F29128] UUID];
  id v13 = [v12 UUIDString];

  id v14 = (void *)[[NSString alloc] initWithFormat:@"source=%@ destination=%@", v32, v10];
  id v15 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"migratePlaybackSessionForDevice", v13];
  uint64_t v16 = v15;
  if (v14) {
    [v15 appendFormat:@" for %@", v14];
  }
  id v17 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v16;
    _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", (uint8_t *)&buf, 0xCu);
  }

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v69 = 0x3032000000;
  id v70 = __Block_byref_object_copy__11;
  id v71 = __Block_byref_object_dispose__11;
  id v72 = 0;
  v66[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
  v66[1] = v66;
  v66[2] = 0x3032000000;
  v66[3] = __Block_byref_object_copy__11;
  void v66[4] = __Block_byref_object_dispose__11;
  id v67 = 0;
  uint64_t v60 = 0;
  id v61 = &v60;
  uint64_t v62 = 0x3032000000;
  id v63 = __Block_byref_object_copy__11;
  char v64 = __Block_byref_object_dispose__11;
  id v65 = 0;
  v58[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
  v58[1] = v58;
  v58[2] = 0x3032000000;
  v58[3] = __Block_byref_object_copy__11;
  v58[4] = __Block_byref_object_dispose__11;
  id v59 = 0;
  id v18 = dispatch_group_create();
  id v19 = v18;
  if (!*(void *)(*((void *)&buf + 1) + 40))
  {
    dispatch_group_enter(v18);
    id v20 = objc_alloc_init(MRAVLightweightReconnaissanceSession);
    id v21 = (void *)[[NSString alloc] initWithFormat:@"%@<%@>", @"migratePlaybackSessionForDevice", v13];
    v51[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v51[1] = 3221225472;
    v51[2] = __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke;
    v51[3] = &unk_1E57D3A90;
    id v22 = v20;
    id v52 = v22;
    id v53 = v13;
    uint64_t v54 = @"migratePlaybackSessionForDevice";
    id v56 = v58;
    p_long long buf = &buf;
    id v55 = v19;
    [(MRAVLightweightReconnaissanceSession *)v22 searchEndpointsForOutputDeviceUID:v32 timeout:v21 reason:v7 queue:v51 completion:7.0];
  }
  if (!v61[5])
  {
    dispatch_group_enter(v19);
    id v23 = objc_alloc_init(MRAVLightweightReconnaissanceSession);
    id v24 = (void *)[[NSString alloc] initWithFormat:@"%@<%@>", @"migratePlaybackSessionForDevice", v13];
    v44[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v44[1] = 3221225472;
    v44[2] = __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_3;
    v44[3] = &unk_1E57D3AB8;
    id v25 = v23;
    id v45 = v25;
    uint64_t v48 = v66;
    uint64_t v49 = &v60;
    id v46 = v10;
    uint64_t v50 = v58;
    unsigned int v47 = v19;
    [(MRAVLightweightReconnaissanceSession *)v25 searchEndpointsForOutputDeviceUID:v46 timeout:v24 reason:v7 queue:v44 completion:7.0];
  }
  id v26 = objc_alloc_init(MRPlaybackSessionMigrateRequest);
  [(MRPlaybackSessionMigrateRequest *)v26 setInitiator:@"shortcuts"];
  [(MRPlaybackSessionMigrateRequest *)v26 setRequestID:v13];
  [(MRPlaybackSessionMigrateRequest *)v26 setPlayerOptions:[(MRPlaybackSessionMigrateRequest *)v26 playerOptions] | 4];
  block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_5;
  block[3] = &unk_1E57D3B08;
  uint64_t v40 = &buf;
  id v41 = &v60;
  id v34 = @"migratePlaybackSessionForDevice";
  id v35 = v13;
  id v36 = v11;
  id v37 = v26;
  id v38 = v7;
  id v39 = v8;
  id v42 = v66;
  id v43 = v58;
  __int16 v27 = v7;
  id v28 = v8;
  __int16 v29 = v26;
  id v30 = v11;
  id v31 = v13;
  dispatch_group_notify(v19, v27, block);

  _Block_object_dispose(v58, 8);
  _Block_object_dispose(&v60, 8);

  _Block_object_dispose(v66, 8);
  _Block_object_dispose(&buf, 8);
}

void sub_195067CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose((const void *)(v47 - 240), 8);
  _Block_object_dispose((const void *)(v47 - 192), 8);
  _Block_object_dispose((const void *)(v47 - 144), 8);
  _Unwind_Resume(a1);
}

void __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke(uint64_t a1, void *a2, void *a3)
{
  v22[2] = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  id v8 = *(void **)(a1 + 32);
  if (v5)
  {
    v21[[NSString stringWithFormat:@"com.apple.%@", 0] = @"MREndpointConnectionCorrelationIDUserInfoKey";
    v21[1] = @"MRExternalDeviceConnectionReasonUserInfoKey";
    uint64_t v9 = *(void *)(a1 + 48);
    v22[[NSString stringWithFormat:@"com.apple.%@", 0] = *(void *)(a1 + 40);
    v22[1] = v9;
    id v10 = (void *)MEMORY[0x1E4F1C9E8];
    id v11 = v8;
    id v12 = [v10 dictionaryWithObjects:v22 forKeys:v21 count:2];
    v17[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    v17[2] = __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_2;
    v17[3] = &unk_1E57D3A68;
    long long v20 = *(_OWORD *)(a1 + 64);
    id v18 = v5;
    id v19 = *(id *)(a1 + 56);
    [v18 connectToExternalDeviceWithUserInfo:v12 completion:v17];
  }
  else
  {
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    id v14 = v6;
    id v15 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v14;
    id v16 = v8;

    dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
  }
}

void __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_2(uint64_t a1, void *a2)
{
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  if (!v4) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(id *)(a1 + 32));
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  id v8 = *(void **)(a1 + 32);
  if (v5)
  {
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    id v10 = v5;
    id v11 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v10;
    id v12 = v8;

    v21[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v21[1] = 3221225472;
    void v21[2] = __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_4;
    v21[3] = &unk_1E57D07B8;
    id v22 = *(id *)(a1 + 40);
    uint64_t v13 = [v10 outputDevicesMatchingPredicate:v21];
    uint64_t v14 = [v13 firstObject];
    uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;
  }
  else
  {
    uint64_t v17 = *(void *)(*(void *)(a1 + 72) + 8);
    id v18 = v6;
    id v19 = *(void **)(v17 + 40);
    *(void *)(v17 + 40) = v18;
    id v20 = v8;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

uint64_t __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_4(uint64_t a1, void *a2)
{
  return [a2 containsUID:*(void *)(a1 + 32)];
}

void __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_5(uint64_t a1)
{
  v6[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  void v6[2] = __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_6;
  v6[3] = &unk_1E57D3AE0;
  long long v12 = *(_OWORD *)(a1 + 80);
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 56);
  id v11 = *(id *)(a1 + 72);
  uint64_t v2 = (void (**)(void, void))MEMORY[0x1997190F0](v6);
  if (!*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)) {
    goto LABEL_7;
  }
  int v3 = [*(id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40) isLocalEndpoint];
  id v4 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40);
  if (!v3)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
      if (v5)
      {
        [v4 migrateToOutputDevice:v5 request:*(void *)(a1 + 56) initiator:0 queue:*(void *)(a1 + 64) completion:v2];
        goto LABEL_8;
      }
    }
LABEL_7:
    v2[2](v2, *(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40));
    goto LABEL_8;
  }
  [v4 migrateToEndpoint:*(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 40) request:*(void *)(a1 + 56) queue:*(void *)(a1 + 64) completion:v2];
LABEL_8:
}

void __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_6(uint64_t a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id v4 = [NSString alloc];
  uint64_t v5 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) debugName];
  id v6 = [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) debugName];
  id v7 = (void *)[v4 initWithFormat:@"source=%@ destination=%@", v5, v6];

  id v8 = _MRLogForCategory(0xAuLL);
  id v9 = v8;
  if (!v3)
  {
    BOOL v15 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (!v15) {
        goto LABEL_14;
      }
      id v16 = *(void **)(a1 + 32);
      uint64_t v17 = *(void *)(a1 + 40);
      uint64_t v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      *(_DWORD *)long long buf = 138544130;
      __int16 v29 = v16;
      __int16 v30 = 2114;
      uint64_t v31 = v17;
      __int16 v32 = 2114;
      id v33 = v7;
      __int16 v34 = 2048;
      id v35 = v18;
      id v19 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      id v20 = v9;
      uint32_t v21 = 42;
    }
    else
    {
      if (!v15) {
        goto LABEL_14;
      }
      id v22 = *(void **)(a1 + 32);
      uint64_t v23 = *(void *)(a1 + 40);
      uint64_t v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      *(_DWORD *)long long buf = 138543874;
      __int16 v29 = v22;
      __int16 v30 = 2114;
      uint64_t v31 = v23;
      __int16 v32 = 2048;
      id v33 = v24;
      id v19 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      id v20 = v9;
      uint32_t v21 = 32;
    }
    _os_log_impl(&dword_194F3C000, v20, OS_LOG_TYPE_DEFAULT, v19, buf, v21);
    goto LABEL_13;
  }
  BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
  if (v7)
  {
    if (!v10) {
      goto LABEL_14;
    }
    id v11 = *(void **)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v13 = [MEMORY[0x1E4F1C9C8] date];
    [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
    *(_DWORD *)long long buf = 138544386;
    __int16 v29 = v11;
    __int16 v30 = 2114;
    uint64_t v31 = v12;
    __int16 v32 = 2114;
    id v33 = v3;
    __int16 v34 = 2114;
    id v35 = v7;
    __int16 v36 = 2048;
    uint64_t v37 = v14;
    _os_log_error_impl(&dword_194F3C000, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
LABEL_13:

    goto LABEL_14;
  }
  if (v10) {
    __MRMediaRemotePlaybackSessionMigrateForDevice_block_invoke_6_cold_1();
  }
LABEL_14:

  [*(id *)(a1 + 56) finalize];
  id v25 = MRLogCategoryMigrationOversize();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
  {
    id v26 = [*(id *)(a1 + 56) report];
    *(_DWORD *)long long buf = 138412290;
    __int16 v29 = v26;
    _os_log_impl(&dword_194F3C000, v25, OS_LOG_TYPE_DEFAULT, "%@", buf, 0xCu);
  }
  uint64_t v27 = *(void *)(a1 + 64);
  if (v27) {
    (*(void (**)(uint64_t, id))(v27 + 16))(v27, v3);
  }
}

id __MRPlaybackSessionMigrateCopySupportedTypeMatch_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v5 = a3;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v22 objects:v27 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v23 != v8) {
          objc_enumerationMutation(v5);
        }
        BOOL v10 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        long long v18 = 0u;
        long long v19 = 0u;
        long long v20 = 0u;
        long long v21 = 0u;
        id v11 = v4;
        uint64_t v12 = [v11 countByEnumeratingWithState:&v18 objects:v26 count:16];
        if (v12)
        {
          uint64_t v13 = v12;
          uint64_t v14 = *(void *)v19;
          while (2)
          {
            for (uint64_t j = 0; j != v13; ++j)
            {
              if (*(void *)v19 != v14) {
                objc_enumerationMutation(v11);
              }
              if ([v10 isEqualToString:*(void *)(*((void *)&v18 + 1) + 8 * j)])
              {
                id v16 = v10;

                goto LABEL_19;
              }
            }
            uint64_t v13 = [v11 countByEnumeratingWithState:&v18 objects:v26 count:16];
            if (v13) {
              continue;
            }
            break;
          }
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v22 objects:v27 count:16];
      id v16 = 0;
    }
    while (v7);
  }
  else
  {
    id v16 = 0;
  }
LABEL_19:

  return v16;
}

uint64_t _MRSetConversationDetectionEnabledMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v23 = PBReaderReadString();
        long long v24 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_33:
        *(unsigned char *)(a1 + 16) = v19 != 0;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MRPlaybackSessionMigrateFallbackReasonFromMRMediaRemoteError(uint64_t a1)
{
  if ((unint64_t)(a1 - 150) >= 6) {
    return 16;
  }
  else {
    return a1 - 144;
  }
}

void *MRMediaRemotePlaybackSessionMigratePlayerOptionsCopyDescription(uint64_t a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  id v3 = v2;
  if (!a1)
  {
    id v4 = @"None | ";
LABEL_14:
    [v3 appendString:v4];
    return v3;
  }
  if ((a1 & 2) != 0)
  {
    [v2 appendString:@"RestorePlaybackState | "];
    if ((a1 & 4) == 0)
    {
LABEL_4:
      if ((a1 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_4;
  }
  [v3 appendString:@"PlayDestination | "];
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  [v3 appendString:@"PauseSource | "];
  if ((a1 & 0x10) == 0)
  {
LABEL_6:
    if ((a1 & 0x20) == 0) {
      return v3;
    }
    goto LABEL_13;
  }
LABEL_12:
  [v3 appendString:@"RestorePlaybackPosition | "];
  if ((a1 & 0x20) != 0)
  {
LABEL_13:
    id v4 = @"RestorePlaybackRate | ";
    goto LABEL_14;
  }
  return v3;
}

void *MRMediaRemotePlaybackSessionMigrateEndpointOptionsCopyDescription(uint64_t a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  id v3 = v2;
  if (!a1)
  {
    id v4 = @"None | ";
LABEL_14:
    [v3 appendString:v4];
    return v3;
  }
  if ((a1 & 2) != 0)
  {
    [v2 appendString:@"UpdateActiveEndpointToDestination | "];
    if ((a1 & 4) == 0)
    {
LABEL_4:
      if ((a1 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_4;
  }
  [v3 appendString:@"ResetOutputContext | "];
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  [v3 appendString:@"FallbackToAddOutputDevices | "];
  if ((a1 & 0x10) == 0)
  {
LABEL_6:
    if ((a1 & 0x20) == 0) {
      return v3;
    }
    goto LABEL_13;
  }
LABEL_12:
  [v3 appendString:@"AllowMigrateToGroup | "];
  if ((a1 & 0x20) != 0)
  {
LABEL_13:
    id v4 = @"AllowMigrateFromGroup | ";
    goto LABEL_14;
  }
  return v3;
}

uint64_t MRMediaRemotePlaybackSessionMigratePlayerOptionsGetDefault()
{
  return 58;
}

uint64_t MRMediaRemotePlaybackSessionMigrateEndpointOptionsGetDefault()
{
  return 58;
}

void sub_195072A64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195072AD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195072B4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195072BDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195072C74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195072D04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195072D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195072E08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195072E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_195072ED4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195072F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_195072FA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195073014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_19507306C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950730E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_195073148(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950731C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_195073224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195073334(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950733CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19507345C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950734F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19507355C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950735C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950739A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id obj)
{
}

void sub_19507426C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950742F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950743FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195074640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950749C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195074A1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195074A90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_195074C80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950750B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195075BEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_195075D40(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

Class initCURunLoopThread()
{
  if (CoreUtilsLibrary_sOnce != -1) {
    dispatch_once(&CoreUtilsLibrary_sOnce, &__block_literal_global_39);
  }
  Class result = objc_getClass("CURunLoopThread");
  classCURunLoopThread = (uint64_t)result;
  getCURunLoopThreadClass = (uint64_t (*)())CURunLoopThreadFunction;
  return result;
}

id CURunLoopThreadFunction()
{
  return (id)classCURunLoopThread;
}

void *__CoreUtilsLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils", 2);
  CoreUtilsLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t _MRAudioFormatProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 80) |= 0x40u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_89;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_91;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_89:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_91:
          uint64_t v70 = 72;
          goto LABEL_126;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(_WORD *)(a1 + 80) |= 2u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_95:
          uint64_t v71 = 16;
          goto LABEL_104;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v26 = 0;
          *(_WORD *)(a1 + 80) |= 4u;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
              *(void *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                BOOL v14 = v31++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_99:
          uint64_t v71 = 24;
          goto LABEL_104;
        case 4u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v26 = 0;
          *(_WORD *)(a1 + 80) |= 1u;
          while (2)
          {
            uint64_t v37 = *v3;
            unint64_t v38 = *(void *)(a2 + v37);
            if (v38 == -1 || v38 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
              *(void *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                BOOL v14 = v36++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_103:
          uint64_t v71 = 8;
LABEL_104:
          *(void *)(a1 + v71) = v26;
          continue;
        case 5u:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 80) |= 0x10u;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v19 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                BOOL v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_108:
          uint64_t v70 = 44;
          goto LABEL_126;
        case 6u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          *(_WORD *)(a1 + 80) |= 0x100u;
          while (2)
          {
            uint64_t v48 = *v3;
            unint64_t v49 = *(void *)(a2 + v48);
            if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
              *(void *)(a2 + v48) = v49 + 1;
              v47 |= (unint64_t)(v50 & 0x7F) << v45;
              if (v50 < 0)
              {
                v45 += 7;
                BOOL v14 = v46++ >= 9;
                if (v14)
                {
                  uint64_t v47 = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_112:
          BOOL v72 = v47 != 0;
          uint64_t v73 = 77;
          goto LABEL_117;
        case 7u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          *(_WORD *)(a1 + 80) |= 0x80u;
          while (2)
          {
            uint64_t v54 = *v3;
            unint64_t v55 = *(void *)(a2 + v54);
            if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v55 + 1;
              v53 |= (unint64_t)(v56 & 0x7F) << v51;
              if (v56 < 0)
              {
                v51 += 7;
                BOOL v14 = v52++ >= 9;
                if (v14)
                {
                  uint64_t v53 = 0;
                  goto LABEL_116;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v53 = 0;
          }
LABEL_116:
          BOOL v72 = v53 != 0;
          uint64_t v73 = 76;
LABEL_117:
          *(unsigned char *)(a1 + v73) = v72;
          continue;
        case 8u:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 80) |= 8u;
          while (2)
          {
            uint64_t v59 = *v3;
            unint64_t v60 = *(void *)(a2 + v59);
            if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
              *(void *)(a2 + v59) = v60 + 1;
              v19 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                BOOL v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_121;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_121:
          uint64_t v70 = 40;
          goto LABEL_126;
        case 9u:
          uint64_t v62 = PBReaderReadString();
          uint64_t v63 = 32;
          goto LABEL_80;
        case 0xAu:
          uint64_t v62 = PBReaderReadString();
          uint64_t v63 = 48;
          goto LABEL_80;
        case 0xBu:
          uint64_t v62 = PBReaderReadString();
          uint64_t v63 = 64;
LABEL_80:
          char v64 = *(void **)(a1 + v63);
          *(void *)(a1 + v63) = v62;

          continue;
        case 0xCu:
          char v65 = 0;
          unsigned int v66 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 80) |= 0x20u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v67 = *v3;
        unint64_t v68 = *(void *)(a2 + v67);
        if (v68 == -1 || v68 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v69 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
        *(void *)(a2 + v67) = v68 + 1;
        v19 |= (unint64_t)(v69 & 0x7F) << v65;
        if ((v69 & 0x80) == 0) {
          goto LABEL_123;
        }
        v65 += 7;
        BOOL v14 = v66++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_125;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_123:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_125:
      uint64_t v70 = 56;
LABEL_126:
      *(_DWORD *)(a1 + v70) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRVoiceInputDeviceReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 != 2)
      {
        if (v17 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          goto LABEL_49;
        }
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_41;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_43;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_43:
        uint64_t v31 = 16;
        goto LABEL_48;
      }
      char v29 = objc_alloc_init(_MRVoiceInputDeviceDescriptorProtobuf);
      objc_storeStrong((id *)(a1 + 8), v29);
      if (!PBReaderPlaceMark()
        || !_MRVoiceInputDeviceDescriptorProtobufReadFrom((id *)&v29->super.super.isa, a2))
      {

        return 0;
      }
      PBReaderRecallMark();

LABEL_49:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v24 = 0;
    unsigned int v25 = 0;
    uint64_t v20 = 0;
    *(unsigned char *)(a1 + 24) |= 2u;
    while (1)
    {
      uint64_t v26 = *v3;
      unint64_t v27 = *(void *)(a2 + v26);
      if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
      *(void *)(a2 + v26) = v27 + 1;
      v20 |= (unint64_t)(v28 & 0x7F) << v24;
      if ((v28 & 0x80) == 0) {
        goto LABEL_45;
      }
      v24 += 7;
      BOOL v14 = v25++ >= 9;
      if (v14)
      {
        LODWORD(v20) = 0;
        goto LABEL_47;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
    if (*(unsigned char *)(a2 + *v5)) {
      LODWORD(v20) = 0;
    }
LABEL_47:
    uint64_t v31 = 20;
LABEL_48:
    *(_DWORD *)(a1 + v31) = v20;
    goto LABEL_49;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MRAVOutputDeviceSourceInfoCopyRoutingContextUID(void *a1)
{
  id v1 = [a1 routingContextUID];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t _MRCreateHostedEndpointRequestProtobufReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = PBReaderReadString();
        if (v17) {
          [a1 addOutputDeviceUIDs:v17];
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRGroupSessionFastSyncMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v23 = PBReaderReadData();
        char v24 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRGroupSessionJoinResponseProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 16;
LABEL_22:
        uint64_t v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadString();
    uint64_t v18 = 8;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRConfigureConnectionMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_24;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
          goto LABEL_24;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_24;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
          goto LABEL_24;
        case 5u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
LABEL_24:
          uint64_t v19 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          goto LABEL_25;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_25:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

__CFString *MRMediaRemoteVolumeControlAdjustmentDescription(unint64_t a1)
{
  if (a1 > 6) {
    return @"?";
  }
  else {
    return off_1E57D3D38[a1];
  }
}

uint64_t _MRVolumeDidChangeMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 16;
      }
      else
      {
        if (v18 != 2)
        {
          if (v18 == 1)
          {
            *(unsigned char *)(a1 + 28) |= 1u;
            uint64_t v19 = *v3;
            unint64_t v20 = *(void *)(a2 + v19);
            if (v20 <= 0xFFFFFFFFFFFFFFFBLL && v20 + 4 <= *(void *)(a2 + *v4))
            {
              int v21 = *(_DWORD *)(*(void *)(a2 + *v7) + v20);
              *(void *)(a2 + v19) = v20 + 4;
            }
            else
            {
              *(unsigned char *)(a2 + *v5) = 1;
              int v21 = 0;
            }
            *(_DWORD *)(a1 + 24) = v21;
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 8;
      }
      char v24 = *(void **)(a1 + v23);
      *(void *)(a1 + v23) = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRPlaybackSessionMigrateEndMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(_MRPlaybackSessionRequestProtobuf);
        objc_storeStrong((id *)(a1 + 32), v17);
        if PBReaderPlaceMark() && (_MRPlaybackSessionRequestProtobufReadFrom((uint64_t)v17, a2)) {
          goto LABEL_26;
        }
        goto LABEL_41;
      case 2u:
        uint64_t v17 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        objc_storeStrong((id *)(a1 + 24), v17);
        if (PBReaderPlaceMark()
          && _MRNowPlayingPlayerPathProtobufReadFrom((id *)&v17->super.super.isa, a2))
        {
LABEL_26:
          PBReaderRecallMark();

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_41:

        return 0;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_38;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_38:
        *(void *)(a1 + 8) = v21;
        goto LABEL_39;
      case 4u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v25;

        goto LABEL_39;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

void sub_19507FE48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950800A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195080154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195080220(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950802B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _MRUnregisterGameControllerMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 16) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        *(void *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRSendCommandResultHandlerDialogActionProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v24 = objc_alloc_init(_MRSendCommandMessageProtobuf);
        objc_storeStrong((id *)(a1 + 8), v24);
        if (!PBReaderPlaceMark() || (_MRSendCommandMessageProtobufReadFrom((uint64_t)v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else if (v17 == 2)
      {
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v25;
      }
      else if (v17 == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_35;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_37:
        *(_DWORD *)(a1 + 24) = v20;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_195084CB8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

id MRApplicationConnectionGetQueue()
{
  if (MRApplicationConnectionGetQueue_onceToken != -1) {
    dispatch_once(&MRApplicationConnectionGetQueue_onceToken, &__block_literal_global_43);
  }
  id v0 = (void *)MRApplicationConnectionGetQueue___queue;

  return v0;
}

void __MRApplicationConnectionGetQueue_block_invoke()
{
  uint64_t v2 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.MediaRemote.MRApplicationConnection", v2);
  uint64_t v1 = (void *)MRApplicationConnectionGetQueue___queue;
  MRApplicationConnectionGetQueue___queue = (uint64_t)v0;
}

id MRApplicationConnectionGetMessageQueue()
{
  if (MRApplicationConnectionGetMessageQueue_onceToken != -1) {
    dispatch_once(&MRApplicationConnectionGetMessageQueue_onceToken, &__block_literal_global_3_1);
  }
  dispatch_queue_t v0 = (void *)MRApplicationConnectionGetMessageQueue___queue;

  return v0;
}

void __MRApplicationConnectionGetMessageQueue_block_invoke()
{
  uint64_t v2 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.MediaRemote.MRApplicationConnectionMessage", v2);
  uint64_t v1 = (void *)MRApplicationConnectionGetMessageQueue___queue;
  MRApplicationConnectionGetMessageQueue___queue = (uint64_t)v0;
}

__CFString *MRApplicationConnectionStateDescription(unint64_t a1)
{
  if (a1 >= 3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown-%ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_1E57D3FD8[a1];
  }

  return v1;
}

void OUTLINED_FUNCTION_1_5(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x16u);
}

void MRTelevisionSetPinPairingCallback(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRTelevisionSetPinPairingCallback_block_invoke;
  v7[3] = &unk_1E57D4028;
  id v8 = v5;
  id v6 = v5;
  MRExternalDeviceSetPairingCallback(a1, a2, v7);
}

void __MRTelevisionSetPinPairingCallback_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  uint64_t v8 = *(void *)(a1 + 32);
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MRTelevisionSetPinPairingCallback_block_invoke_2;
  v11[3] = &unk_1E57D4000;
  id v12 = v7;
  unsigned int v9 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, double))(v8 + 16);
  id v10 = v7;
  v9(v8, a2, a3, v11, 0.0);
}

uint64_t __MRTelevisionSetPinPairingCallback_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRTelevisionSetHiliteModeCallback(void *a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  if (!a1)
  {
    uint64_t v8 = [MEMORY[0x1E4F28B00] currentHandler];
    unsigned int v9 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetHiliteModeCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionHiliteModeCallback)");
    [v8 handleFailureInFunction:v9, @"MRTelevision.m", 753, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetHiliteModeCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionHiliteModeCallback)");
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, @"MRTelevision.m", 757, @"invalid object passed to %s", "void MRTelevisionSetHiliteModeCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionHiliteModeCallback)");
  }
  [v7 setHiliteModeCallback:v5 withQueue:v12];
}

void MRTelevisionRequestHiliteModeExit(void *a1)
{
  if (!a1)
  {
    id v4 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"void MRTelevisionRequestHiliteModeExit(MRExternalDeviceRef)"];
    [v4 handleFailureInFunction:v5, @"MRTelevision.m", 764, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  id v3 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v6 = [MEMORY[0x1E4F28B00] currentHandler];
    id v7 = [NSString stringWithUTF8String:"void MRTelevisionRequestHiliteModeExit(MRExternalDeviceRef)"];
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, @"MRTelevision.m", 768, @"invalid object passed to %s", "void MRTelevisionRequestHiliteModeExit(MRExternalDeviceRef)");
  }
  [v3 exitHiliteMode];
}

uint64_t MRTelevisionGetHiliteMode(void *a1)
{
  if (!a1)
  {
    id v6 = [MEMORY[0x1E4F28B00] currentHandler];
    id v7 = [NSString stringWithUTF8String:"_Bool MRTelevisionGetHiliteMode(MRExternalDeviceRef)"];
    [v6 handleFailureInFunction:v7, @"MRTelevision.m", 775, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  id v3 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    uint64_t v8 = [MEMORY[0x1E4F28B00] currentHandler];
    unsigned int v9 = [NSString stringWithUTF8String:"_Bool MRTelevisionGetHiliteMode(MRExternalDeviceRef)"];
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, @"MRTelevision.m", 779, @"invalid object passed to %s", "_Bool MRTelevisionGetHiliteMode(MRExternalDeviceRef)");
  }
  uint64_t v4 = [v3 hiliteMode];

  return v4;
}

void MRTelevisionWake(void *a1)
{
  if (!a1)
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"void MRTelevisionWake(MRExternalDeviceRef)"];
    [v4 handleFailureInFunction:v5, @"MRTelevision.m", 786, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  id v3 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v6 = [MEMORY[0x1E4F28B00] currentHandler];
    id v7 = [NSString stringWithUTF8String:"void MRTelevisionWake(MRExternalDeviceRef)"];
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, @"MRTelevision.m", 790, @"invalid object passed to %s", "void MRTelevisionWake(MRExternalDeviceRef)");
  }
  [v3 wake];
}

void MRTelevisionRegisterVirtualTouchDevice(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (a1)
  {
    if (v7) {
      goto LABEL_3;
    }
LABEL_8:
    BOOL v14 = [MEMORY[0x1E4F28B00] currentHandler];
    int v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterVirtualTouchDevice(MRExternalDeviceRef, MRVirtualTouchDeviceDescriptorRef, __strong dispatch_queue_t, __strong MRTelevisionTouchDeviceIDCallback)");
    [v14 handleFailureInFunction:v15, @"MRTelevision.m", 801, @"Invalid parameter not satisfying: %@", @"replyQ" file lineNumber description];

    if (v8) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  id v12 = [MEMORY[0x1E4F28B00] currentHandler];
  char v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterVirtualTouchDevice(MRExternalDeviceRef, MRVirtualTouchDeviceDescriptorRef, __strong dispatch_queue_t, __strong MRTelevisionTouchDeviceIDCallback)");
  [v12 handleFailureInFunction:v13, @"MRTelevision.m", 800, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];

  if (!v7) {
    goto LABEL_8;
  }
LABEL_3:
  if (v8) {
    goto LABEL_4;
  }
LABEL_9:
  int v16 = [MEMORY[0x1E4F28B00] currentHandler];
  unint64_t v17 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterVirtualTouchDevice(MRExternalDeviceRef, MRVirtualTouchDeviceDescriptorRef, __strong dispatch_queue_t, __strong MRTelevisionTouchDeviceIDCallback)");
  [v16 handleFailureInFunction:v17, @"MRTelevision.m", 802, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

LABEL_4:
  unsigned int v9 = (void *)MEMORY[0x199718E70]();
  id v10 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    char v18 = [MEMORY[0x1E4F28B00] currentHandler];
    unsigned int v19 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterVirtualTouchDevice(MRExternalDeviceRef, MRVirtualTouchDeviceDescriptorRef, __strong dispatch_queue_t, __strong MRTelevisionTouchDeviceIDCallback)");
    objc_msgSend(v18, "handleFailureInFunction:file:lineNumber:description:", v19, @"MRTelevision.m", 806, @"invalid object passed to %s", "void MRTelevisionRegisterVirtualTouchDevice(MRExternalDeviceRef, MRVirtualTouchDeviceDescriptorRef, __strong dispatch_queue_t, __strong MRTelevisionTouchDeviceIDCallback)");
  }
  v20[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v20[1] = 3221225472;
  v20[2] = __MRTelevisionRegisterVirtualTouchDevice_block_invoke;
  v20[3] = &unk_1E57D4050;
  id v11 = v8;
  id v21 = v11;
  [v10 registerTouchDeviceWithDescriptor:a2 replyQueue:v7 completion:v20];
}

uint64_t __MRTelevisionRegisterVirtualTouchDevice_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRTelevisionSendVirtualTouchEvent(void *a1, _OWORD *a2, uint64_t a3)
{
  if (!a1)
  {
    unsigned int v9 = [MEMORY[0x1E4F28B00] currentHandler];
    id v10 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSendVirtualTouchEvent(MRExternalDeviceRef, MRHIDTouchEvent, MRVirtualTouchDeviceID)");
    [v9 handleFailureInFunction:v10, @"MRTelevision.m", 819, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v11 = [MEMORY[0x1E4F28B00] currentHandler];
    id v12 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSendVirtualTouchEvent(MRExternalDeviceRef, MRHIDTouchEvent, MRVirtualTouchDeviceID)");
    objc_msgSend(v11, "handleFailureInFunction:file:lineNumber:description:", v12, @"MRTelevision.m", 823, @"invalid object passed to %s", "void MRTelevisionSendVirtualTouchEvent(MRExternalDeviceRef, MRHIDTouchEvent, MRVirtualTouchDeviceID)");
  }
  long long v8 = a2[1];
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = *a2;
  v13[1] = v8;
  [v7 sendTouchEvent:v13 toVirtualDeviceWithID:a3];
}

void MRTelevisionSendHIDEvent(void *a1)
{
  if (!a1)
  {
    id v5 = [MEMORY[0x1E4F28B00] currentHandler];
    id v6 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSendHIDEvent(MRExternalDeviceRef, IOHIDEventRef)");
    [v5 handleFailureInFunction:v6, @"MRTelevision.m", 830, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  id v3 = a1;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0)
  {
    id v7 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v8 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSendHIDEvent(MRExternalDeviceRef, IOHIDEventRef)");
    objc_msgSend(v7, "handleFailureInFunction:file:lineNumber:description:", v8, @"MRTelevision.m", 834, @"invalid object passed to %s", "void MRTelevisionSendHIDEvent(MRExternalDeviceRef, IOHIDEventRef)");
  }
}

void MRTelevisionGetCurrentTextEditingSession(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    if (v5) {
      goto LABEL_3;
    }
LABEL_8:
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    char v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionGetCurrentTextEditingSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRTextEditingSessionRef, CFErrorRef))");
    [v12 handleFailureInFunction:v13, @"MRTelevision.m", 844, @"Invalid parameter not satisfying: %@", @"replyQ" file lineNumber description];

    if (v6) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  id v10 = [MEMORY[0x1E4F28B00] currentHandler];
  id v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionGetCurrentTextEditingSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRTextEditingSessionRef, CFErrorRef))");
  [v10 handleFailureInFunction:v11, @"MRTelevision.m", 843, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];

  if (!v5) {
    goto LABEL_8;
  }
LABEL_3:
  if (v6) {
    goto LABEL_4;
  }
LABEL_9:
  BOOL v14 = [MEMORY[0x1E4F28B00] currentHandler];
  int v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionGetCurrentTextEditingSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRTextEditingSessionRef, CFErrorRef))");
  [v14 handleFailureInFunction:v15, @"MRTelevision.m", 845, @"Invalid parameter not satisfying: %@", @"callback" file lineNumber description];

LABEL_4:
  id v7 = (void *)MEMORY[0x199718E70]();
  id v8 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    int v16 = [MEMORY[0x1E4F28B00] currentHandler];
    unint64_t v17 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionGetCurrentTextEditingSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRTextEditingSessionRef, CFErrorRef))");
    objc_msgSend(v16, "handleFailureInFunction:file:lineNumber:description:", v17, @"MRTelevision.m", 849, @"invalid object passed to %s", "void MRTelevisionGetCurrentTextEditingSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRTextEditingSessionRef, CFErrorRef))");
  }
  v18[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = __MRTelevisionGetCurrentTextEditingSession_block_invoke;
  v18[3] = &unk_1E57D4078;
  id v9 = v6;
  id v19 = v9;
  [v8 getTextEditingSessionWithReplyQueue:v5 completion:v18];
}

uint64_t __MRTelevisionGetCurrentTextEditingSession_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRTelevisionSetTextEditingCallback(void *a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  if (!a1)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetTextEditingCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionTextInputCallback)");
    [v8 handleFailureInFunction:v9, @"MRTelevision.m", 860, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    id v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetTextEditingCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionTextInputCallback)");
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, @"MRTelevision.m", 864, @"invalid object passed to %s", "void MRTelevisionSetTextEditingCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionTextInputCallback)");
  }
  [v7 setTextEditingCallback:v5 withQueue:v12];
}

void MRTelevisionTextEditingInsert(void *a1, uint64_t a2, uint64_t a3)
{
  if (!a1)
  {
    id v7 = [MEMORY[0x1E4F28B00] currentHandler];
    id v8 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionTextEditingInsert(MRExternalDeviceRef, MRTextEditingSessionRef, CFStringRef)");
    [v7 handleFailureInFunction:v8, @"MRTelevision.m", 871, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v5 = (void *)MEMORY[0x199718E70]();
  id v6 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v9 = [MEMORY[0x1E4F28B00] currentHandler];
    id v10 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionTextEditingInsert(MRExternalDeviceRef, MRTextEditingSessionRef, CFStringRef)");
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, @"MRTelevision.m", 875, @"invalid object passed to %s", "void MRTelevisionTextEditingInsert(MRExternalDeviceRef, MRTextEditingSessionRef, CFStringRef)");
  }
  [v6 insertTextIntoActiveTextEditingSessionWithText:a3];
}

void MRTelevisionTextEditingSetText(void *a1, uint64_t a2, uint64_t a3)
{
  if (!a1)
  {
    id v7 = [MEMORY[0x1E4F28B00] currentHandler];
    id v8 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionTextEditingSetText(MRExternalDeviceRef, MRTextEditingSessionRef, CFStringRef)");
    [v7 handleFailureInFunction:v8, @"MRTelevision.m", 882, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v5 = (void *)MEMORY[0x199718E70]();
  id v6 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v9 = [MEMORY[0x1E4F28B00] currentHandler];
    id v10 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionTextEditingSetText(MRExternalDeviceRef, MRTextEditingSessionRef, CFStringRef)");
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, @"MRTelevision.m", 886, @"invalid object passed to %s", "void MRTelevisionTextEditingSetText(MRExternalDeviceRef, MRTextEditingSessionRef, CFStringRef)");
  }
  [v6 setTextOnActiveTextEditingSessionWithText:a3];
}

void MRTelevisionTextEditingDeleteBackward(void *a1)
{
  if (!a1)
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionTextEditingDeleteBackward(MRExternalDeviceRef, MRTextEditingSessionRef)");
    [v4 handleFailureInFunction:v5, @"MRTelevision.m", 893, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  id v3 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v6 = [MEMORY[0x1E4F28B00] currentHandler];
    id v7 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionTextEditingDeleteBackward(MRExternalDeviceRef, MRTextEditingSessionRef)");
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, @"MRTelevision.m", 897, @"invalid object passed to %s", "void MRTelevisionTextEditingDeleteBackward(MRExternalDeviceRef, MRTextEditingSessionRef)");
  }
  [v3 deleteBackwardInActiveTextEditingSession];
}

void MRTelevisionTextEditingClearText(void *a1)
{
  if (!a1)
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionTextEditingClearText(MRExternalDeviceRef, MRTextEditingSessionRef)");
    [v4 handleFailureInFunction:v5, @"MRTelevision.m", 904, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  id v3 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v6 = [MEMORY[0x1E4F28B00] currentHandler];
    id v7 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionTextEditingClearText(MRExternalDeviceRef, MRTextEditingSessionRef)");
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, @"MRTelevision.m", 908, @"invalid object passed to %s", "void MRTelevisionTextEditingClearText(MRExternalDeviceRef, MRTextEditingSessionRef)");
  }
  [v3 clearActiveTextEditingSessionData];
}

void MRTelevisionGetCurrentRTISourceSession(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    if (v5) {
      goto LABEL_3;
    }
LABEL_8:
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    char v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionGetCurrentRTISourceSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRRTIInputSystemSourceSessionRef, CFErrorRef))");
    [v12 handleFailureInFunction:v13, @"MRTelevision.m", 918, @"Invalid parameter not satisfying: %@", @"replyQ" file lineNumber description];

    if (v6) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  id v10 = [MEMORY[0x1E4F28B00] currentHandler];
  id v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionGetCurrentRTISourceSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRRTIInputSystemSourceSessionRef, CFErrorRef))");
  [v10 handleFailureInFunction:v11, @"MRTelevision.m", 917, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];

  if (!v5) {
    goto LABEL_8;
  }
LABEL_3:
  if (v6) {
    goto LABEL_4;
  }
LABEL_9:
  BOOL v14 = [MEMORY[0x1E4F28B00] currentHandler];
  int v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionGetCurrentRTISourceSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRRTIInputSystemSourceSessionRef, CFErrorRef))");
  [v14 handleFailureInFunction:v15, @"MRTelevision.m", 919, @"Invalid parameter not satisfying: %@", @"callback" file lineNumber description];

LABEL_4:
  id v7 = (void *)MEMORY[0x199718E70]();
  id v8 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    int v16 = [MEMORY[0x1E4F28B00] currentHandler];
    unint64_t v17 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionGetCurrentRTISourceSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRRTIInputSystemSourceSessionRef, CFErrorRef))");
    objc_msgSend(v16, "handleFailureInFunction:file:lineNumber:description:", v17, @"MRTelevision.m", 923, @"invalid object passed to %s", "void MRTelevisionGetCurrentRTISourceSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRRTIInputSystemSourceSessionRef, CFErrorRef))");
  }
  v18[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = __MRTelevisionGetCurrentRTISourceSession_block_invoke;
  v18[3] = &unk_1E57D40A0;
  id v9 = v6;
  id v19 = v9;
  [v8 getRTISessionWithReplyQueue:v5 completion:v18];
}

uint64_t __MRTelevisionGetCurrentRTISourceSession_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRTelevisionSetRTICallback(void *a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  if (!a1)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetRTICallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionRTICallback)");
    [v8 handleFailureInFunction:v9, @"MRTelevision.m", 934, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    id v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetRTICallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionRTICallback)");
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, @"MRTelevision.m", 938, @"invalid object passed to %s", "void MRTelevisionSetRTICallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionRTICallback)");
  }
  [v7 setRTICallback:v5 withQueue:v12];
}

void MRTelevisionRegisterGameController(void *a1, const char *a2, void *a3, void *a4)
{
  id v16 = a3;
  id v7 = a4;
  if (!a1)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    id v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterGameController(MRExternalDeviceRef, MRGameControllerProfile, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)");
    [v10 handleFailureInFunction:v11, @"MRTelevision.m", 948, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  if (v16)
  {
    if (v7) {
      goto LABEL_5;
    }
  }
  else
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    char v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterGameController(MRExternalDeviceRef, MRGameControllerProfile, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)");
    [v12 handleFailureInFunction:v13, @"MRTelevision.m", 949, @"Invalid parameter not satisfying: %@", @"replyQ" file lineNumber description];

    if (v7) {
      goto LABEL_5;
    }
  }
  BOOL v14 = [MEMORY[0x1E4F28B00] currentHandler];
  int v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterGameController(MRExternalDeviceRef, MRGameControllerProfile, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)");
  [v14 handleFailureInFunction:v15, @"MRTelevision.m", 950, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

LABEL_5:
  id v8 = (void *)MEMORY[0x199718E70]();
  id v9 = MRGameControllerPropertiesCreate();
  MRGameControllerPropertiesSetProfile(v9, a2);
  MRTelevisionRegisterGameControllerWithProperties(a1, (uint64_t)v9, v16, v7);
}

void MRTelevisionRegisterGameControllerWithProperties(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (a1)
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    char v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterGameControllerWithProperties(MRExternalDeviceRef, MRGameControllerPropertiesRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)");
    [v12 handleFailureInFunction:v13, @"MRTelevision.m", 964, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];

    if (a2)
    {
LABEL_3:
      if (v7) {
        goto LABEL_4;
      }
LABEL_10:
      id v16 = [MEMORY[0x1E4F28B00] currentHandler];
      unint64_t v17 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterGameControllerWithProperties(MRExternalDeviceRef, MRGameControllerPropertiesRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)");
      [v16 handleFailureInFunction:v17, @"MRTelevision.m", 966, @"Invalid parameter not satisfying: %@", @"replyQ" file lineNumber description];

      if (v8) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  BOOL v14 = [MEMORY[0x1E4F28B00] currentHandler];
  int v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterGameControllerWithProperties(MRExternalDeviceRef, MRGameControllerPropertiesRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)");
  [v14 handleFailureInFunction:v15, @"MRTelevision.m", 965, @"Invalid parameter not satisfying: %@", @"properties" file lineNumber description];

  if (!v7) {
    goto LABEL_10;
  }
LABEL_4:
  if (v8) {
    goto LABEL_5;
  }
LABEL_11:
  char v18 = [MEMORY[0x1E4F28B00] currentHandler];
  id v19 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterGameControllerWithProperties(MRExternalDeviceRef, MRGameControllerPropertiesRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)");
  [v18 handleFailureInFunction:v19, @"MRTelevision.m", 967, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

LABEL_5:
  id v9 = (void *)MEMORY[0x199718E70]();
  id v10 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    uint64_t v20 = [MEMORY[0x1E4F28B00] currentHandler];
    id v21 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterGameControllerWithProperties(MRExternalDeviceRef, MRGameControllerPropertiesRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)");
    objc_msgSend(v20, "handleFailureInFunction:file:lineNumber:description:", v21, @"MRTelevision.m", 971, @"invalid object passed to %s", "void MRTelevisionRegisterGameControllerWithProperties(MRExternalDeviceRef, MRGameControllerPropertiesRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)");
  }
  v22[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  v22[2] = __MRTelevisionRegisterGameControllerWithProperties_block_invoke;
  void v22[3] = &unk_1E57D4050;
  id v11 = v8;
  id v23 = v11;
  [v10 registerGameControllerWithProperties:a2 queue:v7 completion:v22];
}

uint64_t __MRTelevisionRegisterGameControllerWithProperties_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRTelevisionUnregisterGameController(void *a1, uint64_t a2)
{
  if (!a1)
  {
    id v6 = [MEMORY[0x1E4F28B00] currentHandler];
    id v7 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionUnregisterGameController(MRExternalDeviceRef, MRGameControllerID)");
    [v6 handleFailureInFunction:v7, @"MRTelevision.m", 986, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  uint64_t v4 = (void *)MEMORY[0x199718E70]();
  id v5 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionUnregisterGameController(MRExternalDeviceRef, MRGameControllerID)");
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, @"MRTelevision.m", 990, @"invalid object passed to %s", "void MRTelevisionUnregisterGameController(MRExternalDeviceRef, MRGameControllerID)");
  }
  [v5 unregisterGameController:a2];
}

void MRTelevisionSetGameControllerInputModeCallback(void *a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  if (!a1)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetGameControllerInputModeCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerInputModeCallback)");
    [v8 handleFailureInFunction:v9, @"MRTelevision.m", 999, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    id v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetGameControllerInputModeCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerInputModeCallback)");
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, @"MRTelevision.m", 1003, @"invalid object passed to %s", "void MRTelevisionSetGameControllerInputModeCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerInputModeCallback)");
  }
  [v7 setGameControllerInputModeCallback:v5 withQueue:v12];
}

void MRTelevisionSetGameControllerPropertiesCallback(void *a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  if (!a1)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetGameControllerPropertiesCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerPropertiesCallback)");
    [v8 handleFailureInFunction:v9, @"MRTelevision.m", 1012, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    id v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetGameControllerPropertiesCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerPropertiesCallback)");
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, @"MRTelevision.m", 1016, @"invalid object passed to %s", "void MRTelevisionSetGameControllerPropertiesCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerPropertiesCallback)");
  }
  [v7 setGameControllerPropertiesCallback:v5 withQueue:v12];
}

void MRTelevisionSendGameControllerEvent(void *a1, float *a2, uint64_t a3)
{
  if (!a1)
  {
    id v9 = [MEMORY[0x1E4F28B00] currentHandler];
    id v10 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSendGameControllerEvent(MRExternalDeviceRef, MRGameControllerEvent, MRGameControllerID)");
    [v9 handleFailureInFunction:v10, @"MRTelevision.m", 1027, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v11 = [MEMORY[0x1E4F28B00] currentHandler];
    id v12 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSendGameControllerEvent(MRExternalDeviceRef, MRGameControllerEvent, MRGameControllerID)");
    objc_msgSend(v11, "handleFailureInFunction:file:lineNumber:description:", v12, @"MRTelevision.m", 1031, @"invalid object passed to %s", "void MRTelevisionSendGameControllerEvent(MRExternalDeviceRef, MRGameControllerEvent, MRGameControllerID)");
  }
  id v8 = MRGameControllerEventCreateWithLegacyEvent(a2);
  [v7 sendGameControllerEvent:v8 controllerID:a3];
}

void MRTelevisionSendGameControllerEventV2(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSendGameControllerEventV2(MRExternalDeviceRef, MRGameControllerEventRef, MRGameControllerID)");
    [v8 handleFailureInFunction:v9, @"MRTelevision.m", 1039, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];

    if (a2) {
      goto LABEL_3;
    }
  }
  id v10 = [MEMORY[0x1E4F28B00] currentHandler];
  id v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSendGameControllerEventV2(MRExternalDeviceRef, MRGameControllerEventRef, MRGameControllerID)");
  [v10 handleFailureInFunction:v11, @"MRTelevision.m", 1040, @"Invalid parameter not satisfying: %@", @"event" file lineNumber description];

LABEL_3:
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    char v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSendGameControllerEventV2(MRExternalDeviceRef, MRGameControllerEventRef, MRGameControllerID)");
    objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", v13, @"MRTelevision.m", 1044, @"invalid MRExternalDeviceRef object passed to %s", "void MRTelevisionSendGameControllerEventV2(MRExternalDeviceRef, MRGameControllerEventRef, MRGameControllerID)");
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    BOOL v14 = [MEMORY[0x1E4F28B00] currentHandler];
    int v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSendGameControllerEventV2(MRExternalDeviceRef, MRGameControllerEventRef, MRGameControllerID)");
    objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", v15, @"MRTelevision.m", 1045, @"invalid MRGameControllerEventRef object passed to %s", "void MRTelevisionSendGameControllerEventV2(MRExternalDeviceRef, MRGameControllerEventRef, MRGameControllerID)");
  }
  [v7 sendGameControllerEvent:a2 controllerID:a3];
}

uint64_t MRTelevisionGetGameControllerInputMode(void *a1)
{
  if (!a1)
  {
    id v6 = [MEMORY[0x1E4F28B00] currentHandler];
    id v7 = [NSString stringWithUTF8String:"MRGameControllerInputMode MRTelevisionGetGameControllerInputMode(MRExternalDeviceRef)"];
    [v6 handleFailureInFunction:v7, @"MRTelevision.m", 1052, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  id v3 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = [NSString stringWithUTF8String:"MRGameControllerInputMode MRTelevisionGetGameControllerInputMode(MRExternalDeviceRef)"];
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, @"MRTelevision.m", 1056, @"invalid object passed to %s", "MRGameControllerInputMode MRTelevisionGetGameControllerInputMode(MRExternalDeviceRef)");
  }
  uint64_t v4 = [v3 gameControllerInputMode];

  return v4;
}

void MRTelevisionRegisterVirtualVoiceInputDevice(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (a1)
  {
    if (v7) {
      goto LABEL_3;
    }
LABEL_8:
    BOOL v14 = [MEMORY[0x1E4F28B00] currentHandler];
    int v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterVirtualVoiceInputDevice(MRExternalDeviceRef, MRVirtualVoiceInputDeviceDescriptorRef, __strong dispatch_queue_t, void (^__strong)(MRVirtualVoiceInputDeviceID, CFErrorRef))");
    [v14 handleFailureInFunction:v15, @"MRTelevision.m", 1067, @"Invalid parameter not satisfying: %@", @"replyQ" file lineNumber description];

    if (v8) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  id v12 = [MEMORY[0x1E4F28B00] currentHandler];
  char v13 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterVirtualVoiceInputDevice(MRExternalDeviceRef, MRVirtualVoiceInputDeviceDescriptorRef, __strong dispatch_queue_t, void (^__strong)(MRVirtualVoiceInputDeviceID, CFErrorRef))");
  [v12 handleFailureInFunction:v13, @"MRTelevision.m", 1066, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];

  if (!v7) {
    goto LABEL_8;
  }
LABEL_3:
  if (v8) {
    goto LABEL_4;
  }
LABEL_9:
  id v16 = [MEMORY[0x1E4F28B00] currentHandler];
  unint64_t v17 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterVirtualVoiceInputDevice(MRExternalDeviceRef, MRVirtualVoiceInputDeviceDescriptorRef, __strong dispatch_queue_t, void (^__strong)(MRVirtualVoiceInputDeviceID, CFErrorRef))");
  [v16 handleFailureInFunction:v17, @"MRTelevision.m", 1068, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

LABEL_4:
  id v9 = (void *)MEMORY[0x199718E70]();
  id v10 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    char v18 = [MEMORY[0x1E4F28B00] currentHandler];
    id v19 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionRegisterVirtualVoiceInputDevice(MRExternalDeviceRef, MRVirtualVoiceInputDeviceDescriptorRef, __strong dispatch_queue_t, void (^__strong)(MRVirtualVoiceInputDeviceID, CFErrorRef))");
    objc_msgSend(v18, "handleFailureInFunction:file:lineNumber:description:", v19, @"MRTelevision.m", 1072, @"invalid object passed to %s", "void MRTelevisionRegisterVirtualVoiceInputDevice(MRExternalDeviceRef, MRVirtualVoiceInputDeviceDescriptorRef, __strong dispatch_queue_t, void (^__strong)(MRVirtualVoiceInputDeviceID, CFErrorRef))");
  }
  v20[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v20[1] = 3221225472;
  v20[2] = __MRTelevisionRegisterVirtualVoiceInputDevice_block_invoke;
  v20[3] = &unk_1E57D3E28;
  id v11 = v8;
  id v21 = v11;
  [v10 registerVoiceInputDeviceWithDescriptor:a2 replyQueue:v7 completion:v20];
}

uint64_t __MRTelevisionRegisterVirtualVoiceInputDevice_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRTelevisionSetVoiceRecordingStateCallback(void *a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  if (!a1)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetVoiceRecordingStateCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionRecordingStateCallback)");
    [v8 handleFailureInFunction:v9, @"MRTelevision.m", 1088, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    id v11 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionSetVoiceRecordingStateCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionRecordingStateCallback)");
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, @"MRTelevision.m", 1092, @"invalid object passed to %s", "void MRTelevisionSetVoiceRecordingStateCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionRecordingStateCallback)");
  }
  [v7 setVoiceRecordingStateCallback:v5 withQueue:v12];
}

uint64_t MRTelevisionGetVoiceRecordingState()
{
  return 0;
}

void MRTelevisionProcessVirtualVoiceInputAudioData(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, float a6)
{
  if (!a1)
  {
    int v15 = [MEMORY[0x1E4F28B00] currentHandler];
    id v16 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionProcessVirtualVoiceInputAudioData(MRExternalDeviceRef, MRVirtualVoiceInputDeviceID, MRAudioBufferRef, MRAudioTime, float)");
    [v15 handleFailureInFunction:v16, @"MRTelevision.m", 1115, @"Invalid parameter not satisfying: %@", @"device" file lineNumber description];
  }
  id v12 = (void *)MEMORY[0x199718E70]();
  id v13 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    unint64_t v17 = [MEMORY[0x1E4F28B00] currentHandler];
    char v18 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRTelevisionProcessVirtualVoiceInputAudioData(MRExternalDeviceRef, MRVirtualVoiceInputDeviceID, MRAudioBufferRef, MRAudioTime, float)");
    objc_msgSend(v17, "handleFailureInFunction:file:lineNumber:description:", v18, @"MRTelevision.m", 1119, @"invalid object passed to %s", "void MRTelevisionProcessVirtualVoiceInputAudioData(MRExternalDeviceRef, MRVirtualVoiceInputDeviceID, MRAudioBufferRef, MRAudioTime, float)");
  }
  *(float *)&double v14 = a6;
  objc_msgSend(v13, "processVoiceInputAudioDataForDeviceID:withBuffer:time:gain:", a2, a3, a4, a5, v14);
}

void MRTelevisionSendButtonEvent(void *a1, uint64_t a2, unsigned int a3)
{
}

uint64_t _MRUpdateEndpointsMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_35:
        *(_DWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_MRAVEndpointDescriptorProtobuf);
        [(id)a1 addEndpoints:v17];
        if (!PBReaderPlaceMark() || (_MRAVEndpointDescriptorProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

_MRVolumeControlAvailabilityProtobuf *MRCapabilitiesToProtobuf(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(_MRVolumeControlAvailabilityProtobuf);
  [(_MRVolumeControlAvailabilityProtobuf *)v2 setVolumeControlAvailable:a1 != 0];
  [(_MRVolumeControlAvailabilityProtobuf *)v2 setVolumeCapabilities:a1];

  return v2;
}

uint64_t MRCapabilitiesFromProtobuf(void *a1)
{
  id v1 = a1;
  if ([v1 hasVolumeCapabilities])
  {
    uint64_t v2 = [v1 volumeCapabilities];
  }
  else if ([v1 hasVolumeControlAvailable])
  {
    if ([v1 volumeControlAvailable]) {
      uint64_t v2 = 3;
    }
    else {
      uint64_t v2 = 0;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

void MRMediaRemoteAgentSetEndpoint(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = (void *)MRGetSharedService();
  MRMediaRemoteServiceSetAgentEndpoint(v3, a1, (uint64_t)v4);
}

void MRMediaRemoteAgentNotifyCallChanged(uint64_t a1)
{
  uint64_t v2 = (void *)MRGetSharedService();

  MRMediaRemoteServiceAgentNotifyCallChanged(v2, a1);
}

void MRMediaRemoteSetHardwareRemoteBehavior(uint64_t a1)
{
  uint64_t v2 = +[MRNowPlayingOriginClientManager sharedManager];
  id v4 = [v2 localOriginClient];

  [v4 setHardwareRemoteBehavior:a1];
  id v3 = (void *)MRGetSharedService();
  MRMediaRemoteServiceSetHardwareRemoteBehavior(v3, a1);
}

void MRMediaRemotePrewarmMediaControlsCommand(void *a1, unsigned int a2, void *a3)
{
  id v6 = a3;
  id v5 = (void *)MRGetSharedService();
  MRMediaRemoteServicePrewarmMediaControlsCommand(v5, a2, a1, v6);
}

void MRMediaRemotePresentMediaControlsCommand(void *a1, void *a2)
{
  id v6 = a1;
  if (!v6)
  {
    id v6 = (id)MEMORY[0x1E4F14428];
    id v3 = MEMORY[0x1E4F14428];
  }
  id v4 = a2;
  id v5 = (void *)MRGetSharedService();
  MRMediaRemoteServicePresentMediaControlsCommand(v5, v6, v4);
}

void MRMediaRemoteDismissMediaControlsCommand()
{
  dispatch_queue_t v0 = (void *)MRGetSharedService();

  MRMediaRemoteServiceDismissMediaControlsCommand(v0);
}

id MRMediaRemoteResolveCommandOptions(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = v3;
  if (v3) {
    id v5 = (id)[v3 mutableCopy];
  }
  else {
    id v5 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  }
  id v6 = v5;
  id v7 = [v5 objectForKey:@"kMRMediaRemoteOptionCommandID"];
  if (!v7)
  {
    char v8 = [MEMORY[0x1E4F29128] UUID];
    unsigned int v9 = [v8 UUIDString];
    [v6 setObject:v9 forKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
  }
  unint64_t v10 = [v6 objectForKey:@"kMRMediaRemoteOptionSenderID"];
  if (!v10)
  {
    unsigned int v19 = +[MROrigin localOrigin];
    uint64_t v11 = +[MRClient localClient];
    id v12 = [NSString alloc];
    char v13 = [v19 displayName];
    [v11 bundleIdentifier];
    int v15 = v14 = a2;
    id v16 = (void *)[v12 initWithFormat:@"SenderDevice = <%@>, SenderBundleIdentifier = <%@>, SenderPID = <%d>", v13, v15, objc_msgSend(v11, "processIdentifier")];
    [v6 setObject:v16 forKeyedSubscript:@"kMRMediaRemoteOptionSenderID"];

    a2 = v14;
  }
  unint64_t v17 = [NSNumber numberWithUnsignedInt:a2];
  [v6 setObject:v17 forKeyedSubscript:@"kMRMediaRemoteOptionSendOptionsNumber"];

  return v6;
}

BOOL MRMediaRemoteValidateOutgoingCommandOptions(uint64_t a1, void *a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id v4 = MRMediaRemoteCopyCommandDescription(a1);
  if (MRMediaRemoteCommandRequiresSourcePositionOption(a1))
  {
    int v15 = v4;
    uint64_t v5 = [v3 objectForKey:@"kMRMediaRemoteOptionContentItemID"];
    uint64_t v6 = [v3 objectForKey:@"kMRMediaRemoteOptionPlaybackQueueOffset"];
    uint64_t v7 = [v3 objectForKey:@"kMRMediaRemoteOptionTrackID"];
    uint64_t v8 = v5 | v6 | v7;
    BOOL v9 = v8 != 0;
    if (!v8)
    {
      unint64_t v10 = _MRLogForCategory(2uLL);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138544130;
        unint64_t v17 = v15;
        __int16 v18 = 2114;
        unsigned int v19 = @"kMRMediaRemoteOptionContentItemID";
        __int16 v20 = 2114;
        uint64_t v21 = @"kMRMediaRemoteOptionPlaybackQueueOffset";
        __int16 v22 = 2114;
        char v23 = @"kMRMediaRemoteOptionTrackID";
        _os_log_error_impl(&dword_194F3C000, v10, OS_LOG_TYPE_ERROR, "[MRRemoteControl] Command %{public}@ missing source position option(s): %{public}@ | %{public}@ | %{public}@", buf, 0x2Au);
      }
    }
    id v4 = v15;
  }
  else
  {
    BOOL v9 = 1;
  }
  if (MRMediaRemoteCommandRequiresDestinationPositionOption(a1))
  {
    uint64_t v11 = [v3 objectForKey:@"kMRMediaRemoteOptionInsertAfterContentItemID"];
    uint64_t v12 = [v3 objectForKey:@"kMRMediaRemoteOptionPlaybackQueueDestinationOffset"];
    if (!(v11 | v12))
    {
      char v13 = _MRLogForCategory(2uLL);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138543874;
        unint64_t v17 = v4;
        __int16 v18 = 2114;
        unsigned int v19 = @"kMRMediaRemoteOptionInsertAfterContentItemID";
        __int16 v20 = 2114;
        uint64_t v21 = @"kMRMediaRemoteOptionPlaybackQueueDestinationOffset";
        _os_log_error_impl(&dword_194F3C000, v13, OS_LOG_TYPE_ERROR, "[MRRemoteControl] Command %{public}@ missing source position option(s): %{public}@ | %{public}@", buf, 0x20u);
      }

      BOOL v9 = 0;
    }
  }
  return v9;
}

BOOL MRMediaRemoteValidateIncomingCommandOptions(uint64_t a1, void *a2, void *a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = MRMediaRemoteCopyCommandDescription(a1);
  if (MRMediaRemoteCommandRequiresSourcePositionOption(a1))
  {
    uint64_t v8 = [v5 objectForKey:@"kMRMediaRemoteOptionContentItemID"];
    uint64_t v9 = [v5 objectForKey:@"kMRMediaRemoteOptionTrackID"];
    BOOL v10 = (v8 | v9) != 0;
    if (!(v8 | v9))
    {
      uint64_t v11 = _MRLogForCategory(2uLL);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        int v23 = 138543874;
        uint64_t v24 = v7;
        __int16 v25 = 2114;
        uint64_t v26 = @"kMRMediaRemoteOptionContentItemID";
        __int16 v27 = 2114;
        char v28 = @"kMRMediaRemoteOptionTrackID";
        _os_log_error_impl(&dword_194F3C000, v11, OS_LOG_TYPE_ERROR, "[MRRemoteControl] Command %{public}@ missing source position option(s): %{public}@ | %{public}@", (uint8_t *)&v23, 0x20u);
      }
    }
  }
  else
  {
    BOOL v10 = 1;
  }
  if (MRMediaRemoteCommandRequiresDestinationPositionOption(a1))
  {
    uint64_t v12 = [v5 objectForKey:@"kMRMediaRemoteOptionInsertAfterContentItemID"];
    if (!v12)
    {
      char v13 = _MRLogForCategory(2uLL);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        MRMediaRemoteValidateIncomingCommandOptions_cold_1((uint64_t)v7, @"kMRMediaRemoteOptionInsertAfterContentItemID", v13);
      }

      BOOL v10 = 0;
    }
  }
  uint64_t v14 = [v6 subscriptionController];
  int v15 = [v14 contentItemIdentifierForOffset:0];

  id v16 = [v5 objectForKey:@"kMRMediaRemoteOptionNowPlayingContentItemID"];
  unint64_t v17 = v16;
  if (v16)
  {
    if (!v15)
    {
      __int16 v18 = _MRLogForCategory(2uLL);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        int v23 = 138543874;
        uint64_t v24 = v7;
        __int16 v25 = 2112;
        uint64_t v26 = @"kMRMediaRemoteOptionNowPlayingContentItemID";
        __int16 v27 = 2112;
        char v28 = v17;
        unsigned int v19 = "[MRRemoteControl] Command %{public}@ sender sepecified %@ = %@ which is no longer the now playing item.";
        __int16 v20 = v18;
        uint32_t v21 = 32;
        goto LABEL_23;
      }
LABEL_20:

      BOOL v10 = 0;
      goto LABEL_21;
    }
    if ([(__CFString *)v16 isEqualToString:v15])
    {
      __int16 v18 = _MRLogForCategory(2uLL);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        int v23 = 138544130;
        uint64_t v24 = v7;
        __int16 v25 = 2112;
        uint64_t v26 = @"kMRMediaRemoteOptionNowPlayingContentItemID";
        __int16 v27 = 2112;
        char v28 = v17;
        __int16 v29 = 2112;
        char v30 = v15;
        unsigned int v19 = "[MRRemoteControl] Command %{public}@ sender sepecified %@ = %@. Now Playing Item = %@. Ignoring command";
        __int16 v20 = v18;
        uint32_t v21 = 42;
LABEL_23:
        _os_log_error_impl(&dword_194F3C000, v20, OS_LOG_TYPE_ERROR, v19, (uint8_t *)&v23, v21);
        goto LABEL_20;
      }
      goto LABEL_20;
    }
  }
LABEL_21:

  return v10;
}

void MRMediaRemoteSendImplicitCommandsForOptions(int a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1 == 122)
  {
    v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    _OWORD v13[2] = __MRMediaRemoteSendImplicitCommandsForOptions_block_invoke;
    v13[3] = &unk_1E57D40D0;
    id v7 = v5;
    id v14 = v7;
    uint64_t v8 = (void (**)(void, void))MEMORY[0x1997190F0](v13);
    uint64_t v9 = [v7 objectForKeyedSubscript:@"kMRMediaRemoteOptionShuffleMode"];

    if (v9)
    {
      BOOL v10 = v8[2](v8, 26);
      MRMediaRemoteSendCommandToPlayer(26, v10, v6, 0, 0, 0);
    }
    uint64_t v11 = [v7 objectForKeyedSubscript:@"kMRMediaRemoteOptionRepeatMode"];

    if (v11)
    {
      uint64_t v12 = v8[2](v8, 25);
      MRMediaRemoteSendCommandToPlayer(25, v12, v6, 0, 0, 0);
    }
  }
}

id __MRMediaRemoteSendImplicitCommandsForOptions_block_invoke(uint64_t a1)
{
  id v1 = (void *)[*(id *)(a1 + 32) mutableCopy];
  [v1 setObject:0 forKeyedSubscript:@"kMRMediaRemoteOptionSystemAppPlaybackQueueData"];
  uint64_t v2 = MRMediaRemoteCopyCommandDescription(26);
  id v3 = (void *)[[NSString alloc] initWithFormat:@"implicit%@Command", v2];
  [v1 setObject:v3 forKeyedSubscript:@"kMRMediaRemoteOptionRemoteControlInterfaceIdentifier"];

  return v1;
}

uint64_t MRMediaRemoteCommandSupportsAttribution(int a1)
{
  return ((a1 - 122) < 0xC) & (0x809u >> (a1 - 122));
}

BOOL _MRApplicationConnectionMessageHeaderProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

void sub_1950911DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195091260(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950912D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950914A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1950915A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1950917F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950918F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195091A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t MRAVEndpointObserverCreateWithOutputDeviceUID(uint64_t a1)
{
  uint64_t v2 = [MRAVEndpointObserver alloc];

  return (uint64_t)[(MRAVEndpointObserver *)v2 initWithOutputDeviceUID:a1];
}

uint64_t MRAVEndpointObserverAddEndpointChangedCallback(void *a1, const char *a2)
{
  return [a1 setEndpointChangedCallback:a2];
}

void sub_195092138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_195092A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195093D14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195094518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
}

void sub_19509478C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195094C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _MRLanguageOptionGroupProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v24 = objc_alloc_init(_MRLanguageOptionProtobuf);
        [(id)a1 addLanguageOptions:v24];
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_36;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_38;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_36:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_38:
            *(unsigned char *)(a1 + 24) = v20 != 0;
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v24 = objc_alloc_init(_MRLanguageOptionProtobuf);
        objc_storeStrong((id *)(a1 + 8), v24);
      }
      if (!PBReaderPlaceMark() || (_MRLanguageOptionProtobufReadFrom((uint64_t)v24, a2) & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRTextEditingAttributesProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 16;
LABEL_26:
        uint64_t v20 = *(_MRTextInputTraitsProtobuf **)(a1 + v19);
        *(void *)(a1 + v19) = v18;
LABEL_27:

        goto LABEL_29;
      }
      if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 24;
        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v20 = objc_alloc_init(_MRTextInputTraitsProtobuf);
    objc_storeStrong((id *)(a1 + 8), v20);
    if (!PBReaderPlaceMark() || (_MRTextInputTraitsProtobufReadFrom((uint64_t)v20, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRApplicationConnectionMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_MRApplicationConnectionMessageHeaderProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark()
          || !_MRApplicationConnectionMessageHeaderProtobufReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = PBReaderReadData();
    unint64_t v17 = *(_MRApplicationConnectionMessageHeaderProtobuf **)(a1 + 16);
    *(void *)(a1 + 16) = v18;
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRApplicationConnectionContextProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 24;
LABEL_26:
        uint64_t v20 = *(_MRNowPlayingPlayerPathProtobuf **)(a1 + v19);
        *(void *)(a1 + v19) = v18;
LABEL_27:

        goto LABEL_29;
      }
      if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 16;
        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v20 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
    objc_storeStrong((id *)(a1 + 8), v20);
    if (!PBReaderPlaceMark() || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v20->super.super.isa, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id MRCreateCryptoError(void *a1)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  id v1 = (objc_class *)MEMORY[0x1E4F28C58];
  id v2 = a1;
  id v3 = [v1 alloc];
  uint64_t v7 = *MEMORY[0x1E4F28568];
  v8[[NSString stringWithFormat:@"com.apple.%@", 0] = v2;
  id v4 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v8 forKeys:&v7 count:1];

  id v5 = (void *)[v3 initWithDomain:@"kMRMediaRemoteFrameworkErrorDomain" code:23 userInfo:v4];

  return v5;
}

void sub_19509AF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19509B4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MRAVRoutingDiscoverySessionCreate(uint64_t a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = +[MRAVRoutingDiscoverySession discoverySessionWithEndpointFeatures:a1];
  return v3;
}

uint64_t MRAVRoutingDiscoverySessionCreateRemoteControlThrottled()
{
  dispatch_queue_t v0 = (void *)MEMORY[0x199718E70]();
  uint64_t v1 = +[MRAVRoutingDiscoverySession discoverySessionWithEndpointFeatures:8 enableThrottling:1];
  return v1;
}

uint64_t MRAVRoutingDiscoverySessionGetEndpointFeatures(void *a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 endpointFeatures];
  return v3;
}

uint64_t MRAVRoutingDiscoverySessionGetDiscoveryMode(void *a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 discoveryMode];
  return v3;
}

void MRAVRoutingDiscoverySessionSetDiscoveryMode(void *a1, uint64_t a2)
{
  id v4 = (void *)MEMORY[0x199718E70]();
  [a1 setDiscoveryMode:a2];
}

uint64_t MRAVRoutingDiscoverySessionAlwaysAllowUpdates(void *a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 alwaysAllowUpdates];
  return v3;
}

void MRAVRoutingDiscoverySessionSetAlwaysAllowUpdates(void *a1, uint64_t a2)
{
  id v4 = (void *)MEMORY[0x199718E70]();
  [a1 setAlwaysAllowUpdates:a2];
}

uint64_t MRAVRoutingDiscoverySessionGetTargetAudioSessionID(void *a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 targetAudioSessionID];
  return v3;
}

void MRAVRoutingDiscoverySessionSetTargetAudioSessionID(void *a1, uint64_t a2)
{
  id v4 = (void *)MEMORY[0x199718E70]();
  [a1 setTargetAudioSessionID:a2];
}

uint64_t MRAVRoutingDiscoverySessionCopyRoutingContextUID(void *a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 routingContextUID];
  uint64_t v4 = [v3 copy];

  return v4;
}

uint64_t MRAVRoutingDiscoverySessionDevicePresenceDetected(void *a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 devicePresenceDetected];
  return v3;
}

uint64_t MRAVRoutingDiscoverySessionHasAvailableEndpoints(void *a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 devicePresenceDetected];
  return v3;
}

uint64_t MRAVRoutingDiscoverySessionCopyAvailableOutputDevices(void *a1)
{
  id v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 availableOutputDevices];
  uint64_t v4 = [v3 copy];

  return v4;
}

uint64_t MRAVRoutingDiscoverySessionAddEndpointsChangedCallback(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)MEMORY[0x199718E70]();
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRAVRoutingDiscoverySessionAddEndpointsChangedCallback_block_invoke;
  v9[3] = &unk_1E57D4470;
  id v5 = v3;
  id v10 = v5;
  id v6 = [a1 addEndpointsChangedCallback:v9];
  uint64_t v7 = [v6 copy];

  return v7;
}

uint64_t __MRAVRoutingDiscoverySessionAddEndpointsChangedCallback_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRAVRoutingDiscoverySessionRemoveEndpointsChangedCallback(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)MEMORY[0x199718E70]();
  [a1 removeEndpointsChangedCallback:a2];
}

uint64_t MRAVRoutingDiscoverySessionAddOutputDevicesChangedCallback(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)MEMORY[0x199718E70]();
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRAVRoutingDiscoverySessionAddOutputDevicesChangedCallback_block_invoke;
  v9[3] = &unk_1E57D4470;
  id v5 = v3;
  id v10 = v5;
  id v6 = [a1 addOutputDevicesChangedCallback:v9];
  uint64_t v7 = [v6 copy];

  return v7;
}

uint64_t __MRAVRoutingDiscoverySessionAddOutputDevicesChangedCallback_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRAVRoutingDiscoverySessionRemoveOutputDevicesChangedCallback(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)MEMORY[0x199718E70]();
  [a1 removeOutputDevicesChangedCallback:a2];
}

void sub_19509C0E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19509C14C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19509C1D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19509C238(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19509CB1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19509FA08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19509FAFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19509FBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19509FD50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19509FE00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19509FFDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950A01F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950A08E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950A0A2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950A0AD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _MRUserIdentityProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 28) |= 1u;
        while (1)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0) {
            goto LABEL_34;
          }
          v20 += 7;
          BOOL v14 = v21++ >= 9;
          if (v14)
          {
            LODWORD(v22) = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_36:
        *(_DWORD *)(a1 + 24) = v22;
      }
      else
      {
        if (v17 == 2)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 8;
        }
        else
        {
          if (v17 != 1)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 16;
        }
        uint64_t v26 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRVideoThumbnailRequestProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      int v18 = v10 & 7;
      if (v17 || v18 == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v20 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 40) |= 2u;
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(void *)(a2 + *v4))
        {
          int v28 = *(_DWORD *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v30 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v28 = 0;
        }
        uint64_t v33 = 36;
LABEL_46:
        *(_DWORD *)(a1 + v33) = v28;
        goto LABEL_49;
      }
      if (v20 == 1)
      {
        if (v18 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (1)
          {
            uint64_t v22 = (unint64_t *)(a2 + *v3);
            unint64_t v23 = *v22;
            unint64_t v24 = *(void *)(a2 + *v4);
            if (*v22 >= v24) {
              break;
            }
            uint64_t v25 = *v5;
            if (*(unsigned char *)(a2 + v25)) {
              break;
            }
            if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > v24) {
              *(unsigned char *)(a2 + v25) = 1;
            }
            else {
              *uint64_t v22 = v23 + 8;
            }
            PBRepeatedDoubleAdd();
          }
          PBReaderRecallMark();
        }
        else
        {
          uint64_t v31 = *v3;
          unint64_t v32 = *(void *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)(a2 + *v4)) {
            *(void *)(a2 + v31) = v32 + 8;
          }
          else {
            *(unsigned char *)(a2 + v16) = 1;
          }
          PBRepeatedDoubleAdd();
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
LABEL_49:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    *(unsigned char *)(a1 + 40) |= 1u;
    uint64_t v26 = *v3;
    unint64_t v27 = *(void *)(a2 + v26);
    if (v27 <= 0xFFFFFFFFFFFFFFFBLL && v27 + 4 <= *(void *)(a2 + *v4))
    {
      int v28 = *(_DWORD *)(*(void *)(a2 + *v7) + v27);
      *(void *)(a2 + v26) = v27 + 4;
    }
    else
    {
      *(unsigned char *)(a2 + *v5) = 1;
      int v28 = 0;
    }
    uint64_t v33 = 32;
    goto LABEL_46;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRPlaybackQueueParticipantProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        int v18 = *(_MRUserIdentityProtobuf **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    int v18 = objc_alloc_init(_MRUserIdentityProtobuf);
    objc_storeStrong((id *)(a1 + 16), v18);
    if (!PBReaderPlaceMark() || (_MRUserIdentityProtobufReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MRUniversalTrackIdentifierCreateURL(int a1, uint64_t a2)
{
  if ((a1 - 1) > 2 || !a2) {
    return 0;
  }
  id v2 = [NSString stringWithFormat:@"%@://%@/%@", @"mediaremoteuti", off_1E57D46A0[a1 - 1], a2];
  uint64_t v3 = [MEMORY[0x1E4F1CB10] URLWithString:v2];

  return v3;
}

uint64_t MRUniversalTrackIdentifierCreateURLWithIntegerBaseID(int a1, uint64_t a2)
{
  uint64_t v3 = objc_msgSend(NSString, "stringWithFormat:", @"%llu", a2);
  uint64_t URL = MRUniversalTrackIdentifierCreateURL(a1, (uint64_t)v3);

  return URL;
}

uint64_t MRUniversalTrackIdentifierTypeFromURL(void *a1)
{
  id v1 = [a1 host];
  if ([v1 isEqualToString:@"library"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"multiverse"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"store"])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t MRUniversalTrackIdentifierBaseIDIntegerFromURL(const __CFURL *a1)
{
  PathComponent = (__CFString *)CFURLCopyLastPathComponent(a1);
  uint64_t v2 = [(__CFString *)PathComponent longLongValue];

  return v2;
}

CFStringRef MRUniversalTrackIdentifierCopyTypeDescription(int a1)
{
  if ((a1 - 1) > 2) {
    return 0;
  }
  else {
    return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], off_1E57D46A0[a1 - 1]);
  }
}

void MRAddDistantEndpointToXPCMessage(void *a1, void *a2)
{
  id v3 = a1;
  if (a2)
  {
    xpc_object_t xdict = v3;
    uint64_t v4 = (void *)MEMORY[0x199718E70]();
    id v5 = a2;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      MRAddDistantEndpointToXPCMessage_cold_1();
    }
    id v6 = v5;
    MSVArchivedDataWithRootObject();
    id v7 = objc_claimAutoreleasedReturnValue();
    xpc_dictionary_set_data(xdict, "MRXPC_DISTANT_ENDPOINT_METADATA_KEY", (const void *)[v7 bytes], objc_msgSend(v7, "length"));
    char v8 = [v6 externalDeviceListenerEndpoint];

    if (v8)
    {
      unsigned int v9 = [v6 externalDeviceListenerEndpoint];
      unint64_t v10 = [v9 _endpoint];

      xpc_dictionary_set_value(xdict, "MRXPC_EXTERNAL_DEVICE_LISTENER_KEY", v10);
    }

    id v3 = xdict;
  }
}

void MRAddEndpointUIDToXPCMessage(void *a1, void *a2)
{
  id v5 = a1;
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)MEMORY[0x199718E70]();
    MRAddStringToXPCMessage(v5, v3, "MRXPC_ENDPOINT_UID_KEY");
  }
}

void MRAddClientErrorToXPCMessage(void *a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = a1;
    MSVArchivedDataWithRootObject();
    id v3 = objc_claimAutoreleasedReturnValue();
    xpc_dictionary_set_data(v2, "MRXPC_CLIENT_ERROR_DATA_KEY", (const void *)[v3 bytes], objc_msgSend(v3, "length"));
  }
}

uint64_t MRCFErrorCreateExternalRepresentation(uint64_t result)
{
  if (result)
  {
    MSVArchivedDataWithRootObject();
    return objc_claimAutoreleasedReturnValue();
  }
  return result;
}

void MRAddOriginsToXPCMessage(void *a1, const __CFArray *a2)
{
  id v3 = a1;
  if (a2)
  {
    id v9 = v3;
    CFIndex Count = CFArrayGetCount(a2);
    id v5 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:Count];
    if (Count >= 1)
    {
      for (CFIndex i = 0; i != Count; ++i)
      {
        id v7 = CFArrayGetValueAtIndex(a2, i);
        char v8 = [v7 data];
        if (v8) {
          [v5 addObject:v8];
        }
      }
    }
    MRAddPropertyListToXPCMessage(v9, (uint64_t)v5, "MRXPC_AVAILABLE_ORIGINS_DATA_KEY");

    id v3 = v9;
  }
}

void MRAddClientToXPCMessage(void *a1, void *a2)
{
  if (a1 && a2)
  {
    id v3 = a1;
    id v4 = [a2 data];
    xpc_dictionary_set_data(v3, "MRXPC_NOWPLAYING_CLIENT_DATA_KEY", (const void *)[v4 bytes], objc_msgSend(v4, "length"));
  }
}

void MRAddPlayerToXPCMessage(void *a1, void *a2)
{
  if (a1 && a2)
  {
    id v3 = a1;
    id v4 = [a2 data];
    xpc_dictionary_set_data(v3, "MRXPC_NOWPLAYING_PLAYER_DATA_KEY", (const void *)[v4 bytes], objc_msgSend(v4, "length"));
  }
}

void MRAddSupportedCommandsDataToXPCMessage(void *a1, void *a2)
{
}

void MRAddSendCommandToXPCMessage(void *a1, void **a2)
{
  id v3 = a1;
  xpc_dictionary_set_uint64(v3, "MRXPC_COMMAND_KEY", *(unsigned int *)a2);
  MRAddPlayerPathToXPCMessage(v3, a2[2]);
  id v4 = (void *)[a2[1] mutableCopy];
  id v5 = v4;
  if (v4) {
    id v6 = v4;
  }
  else {
    id v6 = (id)objc_opt_new();
  }
  id v7 = v6;

  if ([v7 count])
  {
    uint64_t v11 = 0;
    char v8 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v7 format:200 options:0 error:&v11];
    id v9 = v8;
    if (v8)
    {
      id v10 = v8;
      xpc_dictionary_set_data(v3, "MRXPC_COMMAND_OPTIONS_KEY", (const void *)[v10 bytes], objc_msgSend(v10, "length"));
    }
  }
}

void MRAddVideoThumbnailRequestToXPCMessage(void *a1, uint64_t a2)
{
  xpc_object_t xdict = a1;
  id v3 = objc_alloc_init(_MRVideoThumbnailRequestProtobuf);
  LODWORD(v4) = *(_DWORD *)(a2 + 2056);
  [(_MRVideoThumbnailRequestProtobuf *)v3 setThumbnailsWidth:v4];
  LODWORD(v5) = *(_DWORD *)(a2 + 2060);
  [(_MRVideoThumbnailRequestProtobuf *)v3 setThumbnailsHeight:v5];
  if (*(void *)(a2 + 2048))
  {
    uint64_t v6 = 0;
    unsigned int v7 = 1;
    do
    {
      [(_MRVideoThumbnailRequestProtobuf *)v3 addTimeIntervals:*(double *)(a2 + 8 * v6)];
      uint64_t v6 = v7;
    }
    while (*(void *)(a2 + 2048) > (unint64_t)v7++);
  }
  id v9 = [(_MRVideoThumbnailRequestProtobuf *)v3 data];
  xpc_dictionary_set_data(xdict, "MRXPC_VIDEO_THUMBNAILS_REQ_DATA_KEY", (const void *)[v9 bytes], objc_msgSend(v9, "length"));
}

void MRAddVideoThumbnailsToXPCMessage(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  double v5 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v4, "count"));
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v6 = v4;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v14;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v6);
        }
        ExternalRepresentation = (void *)MRVideoThumbnailCreateExternalRepresentation(*(void **)(*((void *)&v13 + 1)
                                                                                               + 8 * v10));
        objc_msgSend(v5, "addObject:", ExternalRepresentation, (void)v13);

        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v8);
  }

  id v12 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v5 format:200 options:0 error:0];
  xpc_dictionary_set_data(v3, "MRXPC_VIDEO_THUMBNAILS_ARRAY_DATA_KEY", (const void *)[v12 bytes], objc_msgSend(v12, "length"));
}

void MRAddApplicationActivityToXPCMessage(void *a1, uint64_t a2)
{
  if (a1 && a2)
  {
    id v3 = a1;
    id ExternalRepresentation = (id)_MRApplicationActivityCreateExternalRepresentation(a2);
    MRAddDataToXPCMessage(v3, ExternalRepresentation, "MRXPC_APPLICATION_ACTIVITY_DATA_KEY");
  }
}

void MRAddNowPlayingStateToXPCMessage(void *a1, void *a2)
{
  if (a2)
  {
    id v3 = a1;
    id v4 = [a2 data];
    xpc_dictionary_set_data(v3, "MRXPC_NOWPLAYING_STATE_DATA_KEY", (const void *)[v4 bytes], objc_msgSend(v4, "length"));
  }
}

void MRAddDiagnosticToXPCMessage(void *a1, void *a2)
{
  if (a1 && a2)
  {
    id v3 = a1;
    id v4 = (id) MRDiagnosticCreateExternalRepresentation(a2);
    xpc_dictionary_set_data(v3, "MRXPC_DIAGNOSTIC_DATA_KEY", (const void *)[v4 bytes], objc_msgSend(v4, "length"));
  }
}

void MRAddPlaybackSessionToXPCMessage(void *a1, void *a2)
{
  if (a1 && a2)
  {
    id v3 = a1;
    id v4 = [a2 data];
    MRAddDataToXPCMessage(v3, v4, "MRXPC_PLAYBACK_SESSION");
  }
}

void MRAddCommandResultToXPCMessage(void *a1, void *a2)
{
  if (a1 && a2)
  {
    id v3 = a1;
    id v4 = [a2 data];
    MRAddDataToXPCMessage(v3, v4, "MRXPC_COMMAND_RESULT_DATA_KEY");
  }
}

uint64_t MRCreateClientErrorFromExternalRepresentation(uint64_t result)
{
  if (result)
  {
    objc_opt_class();
    MSVUnarchivedObjectOfClass();
    return objc_claimAutoreleasedReturnValue();
  }
  return result;
}

uint64_t MRErrorFromXPCMessage(void *a1)
{
  return xpc_dictionary_get_uint64(a1, "MRXPC_ERROR_CODE_KEY");
}

uint64_t MRCreateUserInfoFromXPCMessage(void *a1)
{
  return MRCreatePropertyListFromXPCMessage(a1, "MRXPC_NOTIFICATION_USERINFO_DATA_KEY");
}

uint64_t MRCreateSupportedCommandsFromXPCMessage(void *a1)
{
  id v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_COMMAND_INFO_ARRAY_DATA_KEY");
  uint64_t v2 = +[MRCommandInfo commandInfosFromData:v1];

  return v2;
}

uint64_t MRCreateOriginArrayFromXPCMessage(void *a1)
{
  return MRCreateArrayFomXPCMessage(a1, "MRXPC_AVAILABLE_ORIGINS_DATA_KEY", &__block_literal_global_66);
}

uint64_t __MRCreateOriginArrayFromXPCMessage_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3 = [MROrigin alloc];

  return (uint64_t)[(MROrigin *)v3 initWithData:a2];
}

MRClient *MRCreateClientFromXPCMessage(void *a1)
{
  id v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_NOWPLAYING_CLIENT_DATA_KEY");
  if (v1) {
    uint64_t v2 = [[MRClient alloc] initWithData:v1];
  }
  else {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t MRCreateClientArrayFromXPCMessage(void *a1)
{
  return MRCreateArrayFomXPCMessage(a1, "MRXPC_NOWPLAYING_CLIENT_ARRAY_DATA_KEY", &__block_literal_global_70);
}

uint64_t __MRCreateClientArrayFromXPCMessage_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3 = [MRClient alloc];

  return (uint64_t)[(MRClient *)v3 initWithData:a2];
}

MRPlayer *MRCreatePlayerFromXPCMessage(void *a1)
{
  id v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_NOWPLAYING_PLAYER_DATA_KEY");
  if (v1) {
    uint64_t v2 = [[MRPlayer alloc] initWithData:v1];
  }
  else {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t MRCreatePlayerArrayFromXPCMessage(void *a1)
{
  return MRCreateArrayFomXPCMessage(a1, "MRXPC_NOWPLAYING_PLAYER_ARRAY_DATA_KEY", &__block_literal_global_74);
}

uint64_t __MRCreatePlayerArrayFromXPCMessage_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3 = [MRPlayer alloc];

  return (uint64_t)[(MRPlayer *)v3 initWithData:a2];
}

id MRCreatePlayerPathArrayFromXPCMessage(void *a1)
{
  id v1 = (void *)MRCreateArrayFomXPCMessage(a1, "MRXPC_NOWPLAYING_PLAYER_PATH_ARRAY_DATA_KEY", &__block_literal_global_77_1);

  return v1;
}

uint64_t __MRCreatePlayerPathArrayFromXPCMessage_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3 = [MRPlayerPath alloc];

  return (uint64_t)[(MRPlayerPath *)v3 initWithData:a2];
}

MRNowPlayingState *MRCreateNowPlayingStateFromXPCMessage(void *a1)
{
  id v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_NOWPLAYING_STATE_DATA_KEY");
  if (v1) {
    uint64_t v2 = [[MRNowPlayingState alloc] initWithData:v1];
  }
  else {
    uint64_t v2 = 0;
  }

  return v2;
}

void MRVideoThumbnailRequestFromXPCMessage(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v10 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_VIDEO_THUMBNAILS_REQ_DATA_KEY");
  id v3 = [[_MRVideoThumbnailRequestProtobuf alloc] initWithData:v10];
  bzero((void *)a2, 0x810uLL);
  if ([(_MRVideoThumbnailRequestProtobuf *)v3 timeIntervalsCount] > 0xFF) {
    unint64_t v4 = 256;
  }
  else {
    unint64_t v4 = [(_MRVideoThumbnailRequestProtobuf *)v3 timeIntervalsCount];
  }
  *(void *)(a2 + 2048) = v4;
  [(_MRVideoThumbnailRequestProtobuf *)v3 thumbnailsWidth];
  *(_DWORD *)(a2 + 2056) = v5;
  [(_MRVideoThumbnailRequestProtobuf *)v3 thumbnailsHeight];
  *(_DWORD *)(a2 + 2060) = v6;
  if (v4)
  {
    uint64_t v7 = 0;
    unsigned int v8 = 1;
    do
    {
      *(void *)(a2 + 8 * v7) = (void)[(_MRVideoThumbnailRequestProtobuf *)v3 timeIntervals][8 * v7];
      uint64_t v7 = v8;
    }
    while (v4 > v8++);
  }
}

void *MRCreateVideoThumbnailsFromXPCMessage(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = (UInt8 *)MRCreateDataFromXPCMessage(a1, "MRXPC_VIDEO_THUMBNAILS_ARRAY_DATA_KEY");
  uint64_t v2 = [MEMORY[0x1E4F28F98] propertyListWithData:v1 options:0 format:0 error:0];
  id v3 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v2, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = v2;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = (void *)MRVideoThumbnailCreateFromExternalRepresentation(*(void *)(*((void *)&v11 + 1) + 8 * v8));
        objc_msgSend(v3, "addObject:", v9, (void)v11);

        ++v8;
      }
      while (v6 != v8);
      uint64_t v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }

  return v3;
}

uint64_t MRCreateAppActivityFromXPCMessage(void *a1)
{
  id v1 = MRCreateDataFromXPCMessage(a1, "MRXPC_APPLICATION_ACTIVITY_DATA_KEY");
  uint64_t v2 = (UInt8 *)v1;
  if (v1) {
    uint64_t v3 = _MRApplicationActivityCreateWithExternalRepresentation((uint64_t)v1);
  }
  else {
    uint64_t v3 = 0;
  }

  return v3;
}

MRPlaybackSession *MRCreatePlaybackSessionFromXPCMessage(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [MRPlaybackSession alloc];
  uint64_t v3 = (UInt8 *)MRCreateDataFromXPCMessage(v1, "MRXPC_PLAYBACK_SESSION");

  id v4 = [(MRPlaybackSession *)v2 initWithData:v3];

  return v4;
}

MRCommandResult *MRCreateCommandResultFromXPCMessage(void *a1)
{
  id v1 = a1;
  uint64_t v2 = MRCreateClientErrorFromXPCMessage(v1);
  uint64_t v3 = (UInt8 *)MRCreateDataFromXPCMessage(v1, "MRXPC_COMMAND_RESULT_DATA_KEY");

  if (!(v2 | (unint64_t)v3)) {
    uint64_t v2 = [objc_alloc(MEMORY[0x1E4F28C58]) initWithMRError:1];
  }
  if (v2 && !MRMediaRemoteErrorIsInformational((void *)v2)) {
    id v4 = [[MRCommandResult alloc] initWithResultStatuses:0 sendError:11 playerPath:0];
  }
  else {
    id v4 = [[MRCommandResult alloc] initWithData:v3];
  }
  uint64_t v5 = v4;

  return v5;
}

MRRequestDetails *MRCreateRequestDetailsFromXPCMessage(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [MRRequestDetails alloc];
  uint64_t v3 = (UInt8 *)MRCreateDataFromXPCMessage(v1, "MRXPC_REQUEST_DETAILS");

  id v4 = [(MRRequestDetails *)v2 initWithData:v3];

  return v4;
}

float MRColorFromXPCMessage(void *a1)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  size_t length = 0;
  if (xpc_dictionary_get_data(a1, "MRXPC_COLOR_DATA_KEY", &length)) {
    __memcpy_chk();
  }
  return *(float *)&v3;
}

uint64_t MRCreateDiagnosticFromXPCMessage(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = MRCreateDataFromXPCMessage(a1, "MRXPC_DIAGNOSTIC_DATA_KEY");
  uint64_t v2 = (UInt8 *)v1;
  if (v1) {
    uint64_t v3 = MRDiagnosticCreateFromExternalRepresentation((uint64_t)v1);
  }
  else {
    uint64_t v3 = 0;
  }

  return v3;
}

uint64_t MRCreateEndpointFromXPCMessage(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

id MREndpointFromXPCMessage(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = (void *)MEMORY[0x199718E70]();
    uint64_t v3 = (UInt8 *)MRCreateDataFromXPCMessage(v1, "MRXPC_DISTANT_ENDPOINT_METADATA_KEY");
    if (!v3 || (objc_opt_class(), MSVUnarchivedObjectOfClass(), (uint64_t v4 = objc_claimAutoreleasedReturnValue()) == 0))
    {

      uint64_t v9 = 0;
      goto LABEL_12;
    }
    uint64_t v5 = (void *)v4;
    uint64_t v6 = xpc_dictionary_get_value(v1, "MRXPC_EXTERNAL_DEVICE_LISTENER_KEY");
    if (v6)
    {
      id v7 = objc_alloc_init(MEMORY[0x1E4F292A0]);
      [v7 _setEndpoint:v6];
      [v5 setExternalDeviceListenerEndpoint:v7];
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  id v8 = v5;
  uint64_t v9 = v8;
  if ([v8 connectionType] == 1)
  {
    uint64_t v9 = +[MRAVLocalEndpoint sharedLocalEndpoint];
  }
LABEL_12:

  return v9;
}

id MRCreateDistantExternalDeviceFromXPCMessage(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = (void *)MEMORY[0x199718E70]();
    uint64_t v3 = xpc_dictionary_get_value(v1, "MRXPC_EXTERNAL_DEVICE_LISTENER_KEY");
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      id v5 = objc_alloc_init(MEMORY[0x1E4F292A0]);
      [v5 _setEndpoint:v4];

      goto LABEL_6;
    }
  }
  id v5 = 0;
LABEL_6:

  return v5;
}

uint64_t MRGetContentItemsFromUserInfo(void *a1, const char *a2)
{
  return [a1 objectForKeyedSubscript:@"kMRMediaRemoteUpdatedContentItemsUserInfoKey"];
}

uint64_t MRGetDeviceInfoFromUserInfo(void *a1, const char *a2)
{
  return [a1 objectForKeyedSubscript:@"kMRPairedDeviceUserInfoKey"];
}

MRClient *__MRCreateDecodedUserInfo_block_invoke_4(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [[MRClient alloc] initWithData:v2];

  return v3;
}

MRPlayer *__MRCreateDecodedUserInfo_block_invoke_5(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [[MRPlayer alloc] initWithData:v2];

  return v3;
}

MRDeviceInfo *__MRCreateDecodedUserInfo_block_invoke_98(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [[MRDeviceInfo alloc] initWithData:v2];

  return v3;
}

MRDeviceInfo *__MRCreateDecodedUserInfo_block_invoke_2_101(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [[MRDeviceInfo alloc] initWithData:v2];

  return v3;
}

MROrigin *__MRCreateDecodedUserInfo_block_invoke_3_104(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [[MROrigin alloc] initWithData:v2];

  return v3;
}

MRPlaybackSessionRequest *__MRCreateDecodedUserInfo_block_invoke_107(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [[MRPlaybackSessionRequest alloc] initWithData:v2];

  return v3;
}

MRPlaybackSession *__MRCreateDecodedUserInfo_block_invoke_2_112(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [[MRPlaybackSession alloc] initWithData:v2];

  return v3;
}

MRPlaybackQueueRequest *__MRCreateDecodedUserInfo_block_invoke_3_115(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [[MRPlaybackQueueRequest alloc] initWithData:v2];

  return v3;
}

MRPlaybackQueue *__MRCreateDecodedUserInfo_block_invoke_4_118(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [[MRPlaybackQueue alloc] initWithData:v2];

  return v3;
}

id __MRCreateDecodedUserInfo_block_invoke_5_121(uint64_t a1, uint64_t a2)
{
  return +[MRCommandInfo commandInfosFromData:a2];
}

MRAVDistantOutputDevice *__MRCreateDecodedUserInfo_block_invoke_6(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [MRAVDistantOutputDevice alloc];
  uint64_t v4 = [[_MRAVOutputDeviceDescriptorProtobuf alloc] initWithData:v2];

  id v5 = [(MRAVDistantOutputDevice *)v3 initWithDescriptor:v4];

  return v5;
}

uint64_t __MRCreateEncodedUserInfo_block_invoke(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_3(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_150(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_2_154(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_3_157(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_4_161(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_5_165(uint64_t a1, void *a2)
{
  return [a2 data];
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_6_169(uint64_t a1, void *a2)
{
  return [a2 data];
}

id __MRCreateEncodedUserInfo_block_invoke_7(uint64_t a1, uint64_t a2)
{
  return +[MRCommandInfo dataFromCommandInfos:a2];
}

id __MRCreateEncodedUserInfo_block_invoke_8(uint64_t a1, void *a2)
{
  id v2 = [a2 descriptor];
  uint64_t v3 = [v2 data];

  return v3;
}

uint64_t __MRCreateEncodedUserInfo_block_invoke_9(uint64_t a1, uint64_t a2)
{
  return [MEMORY[0x1E4F28DB0] archivedDataWithRootObject:a2 requiringSecureCoding:1 error:0];
}

uint64_t _MRReceivedCommandAppOptionsProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        *(unsigned char *)(a1 + 8) = v19 != 0;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRPromptForRouteAuthorizationMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_35:
        *(_DWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_MRAVOutputDeviceDescriptorProtobuf);
        objc_storeStrong((id *)(a1 + 16), v17);
        if (!PBReaderPlaceMark()
          || (_MRAVOutputDeviceDescriptorProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRSystemPlaybackGenericTracklistQueueProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_24;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
          goto LABEL_24;
        case 3u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 8;
LABEL_24:
          uint64_t v20 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        case 4u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          while (2)
          {
            uint64_t v24 = *v3;
            unint64_t v25 = *(void *)(a2 + v24);
            if (v25 == -1 || v25 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
              *(void *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                BOOL v14 = v22++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_42:
          uint64_t v32 = 28;
          goto LABEL_47;
        case 5u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v30 + 1;
        v23 |= (unint64_t)(v31 & 0x7F) << v27;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        v27 += 7;
        BOOL v14 = v28++ >= 9;
        if (v14)
        {
          LODWORD(v23) = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v23) = 0;
      }
LABEL_46:
      uint64_t v32 = 24;
LABEL_47:
      *(_DWORD *)(a1 + v32) = v23;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRCreateApplicationConnectionMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_MRApplicationConnectionContextProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark() || !_MRApplicationConnectionContextProtobufReadFrom((uint64_t)v17, a2)) {
          goto LABEL_30;
        }
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_MRApplicationConnectionRequestInfoProtobuf);
    objc_storeStrong((id *)(a1 + 16), v17);
    if (!PBReaderPlaceMark() || !_MRApplicationConnectionRequestInfoProtobufReadFrom((uint64_t)v17, a2))
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_1950AB1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1950AB7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1950AB908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1950ABBB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1950AC25C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950AC404(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950AC478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950AC5E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950AC7BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950AC948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950ACA68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _MRSendVoiceInputMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_MRAudioDataBlockProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark() || (_MRAudioDataBlockProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRGroupSessionJoinResponseMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v23;
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_33:
        *(unsigned char *)(a1 + 16) = v19 != 0;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

__CFString *MRNowPlayingBestAvailableAudioFormatDescription(uint64_t a1)
{
  id v1 = @"Stereo";
  if (a1 == 1) {
    id v1 = @"Multichannel";
  }
  if (a1 == 2) {
    return @"Atmos";
  }
  else {
    return v1;
  }
}

uint64_t initAudioFormatGetProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (AVFoundationLibrary_sOnce_4 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_4, &__block_literal_global_48);
  }
  unint64_t v10 = (uint64_t (*)())dlsym((void *)AVFoundationLibrary_sLib_4, "AudioFormatGetProperty");
  softLinkAudioFormatGetProperty[[NSString stringWithFormat:@"com.apple.%@", 0] = v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v10)(a1, a2, a3, a4, a5);
}

id initValkMXSession_SourceFormatInfoKey_BestAvailableContentType_Multichannel()
{
  if (MediaExperienceLibrary_sOnce_0 != -1) {
    dispatch_once(&MediaExperienceLibrary_sOnce_0, &__block_literal_global_116);
  }
  dispatch_queue_t v0 = (id *)dlsym((void *)MediaExperienceLibrary_sLib_0, "kMXSession_SourceFormatInfoKey_BestAvailableContentType_Multichannel");
  if (v0) {
    objc_storeStrong((id *)&constantValkMXSession_SourceFormatInfoKey_BestAvailableContentType_Multichannel, *v0);
  }
  getkMXSession_SourceFormatInfoKey_BestAvailableContentType_Multichannel[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())kMXSession_SourceFormatInfoKey_BestAvailableContentType_MultichannelFunction;
  id v1 = (void *)constantValkMXSession_SourceFormatInfoKey_BestAvailableContentType_Multichannel;

  return v1;
}

id initValkMXSession_SourceFormatInfoKey_BestAvailableContentType_Atmos()
{
  if (MediaExperienceLibrary_sOnce_0 != -1) {
    dispatch_once(&MediaExperienceLibrary_sOnce_0, &__block_literal_global_116);
  }
  dispatch_queue_t v0 = (id *)dlsym((void *)MediaExperienceLibrary_sLib_0, "kMXSession_SourceFormatInfoKey_BestAvailableContentType_Atmos");
  if (v0) {
    objc_storeStrong((id *)&constantValkMXSession_SourceFormatInfoKey_BestAvailableContentType_Atmos, *v0);
  }
  getkMXSession_SourceFormatInfoKey_BestAvailableContentType_Atmos[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())kMXSession_SourceFormatInfoKey_BestAvailableContentType_AtmosFunction;
  id v1 = (void *)constantValkMXSession_SourceFormatInfoKey_BestAvailableContentType_Atmos;

  return v1;
}

uint64_t _MRRegisterHIDDeviceMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_MRVirtualTouchDeviceDescriptorProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark()
          || (_MRVirtualTouchDeviceDescriptorProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRPlaybackSessionMigrateRequestMessageProtobufReadFrom(id *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        objc_storeStrong(a1 + 2, v18);
        if (!PBReaderPlaceMark()
          || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v18->super.super.isa, a2))
        {
LABEL_34:

          return 0;
        }
        goto LABEL_29;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(_MRPlaybackSessionProtobuf);
        objc_storeStrong(a1 + 1, v18);
        if (!PBReaderPlaceMark() || !_MRPlaybackSessionProtobufReadFrom((uint64_t)v18, a2)) {
          goto LABEL_34;
        }
LABEL_29:
        PBReaderRecallMark();

        goto LABEL_31;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_31:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(_MRPlaybackSessionMigrateRequestProtobuf);
    objc_storeStrong(a1 + 3, v18);
    if (!PBReaderPlaceMark()
      || (_MRPlaybackSessionMigrateRequestProtobufReadFrom((uint64_t)v18, a2) & 1) == 0)
    {
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRCUPSShowSetupCodeCallback(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  if (!a4)
  {
    uint64_t v11 = [MEMORY[0x1E4F28B00] currentHandler];
    unint64_t v12 = objc_msgSend(NSString, "stringWithUTF8String:", "OSStatus _MRCUPSShowSetupCodeCallback(PairingFlags, char *, size_t, void *)");
    [v11 handleFailureInFunction:v12 file:@"MRCoreUtilsPairingSession.m" lineNumber:957 description:@"NULL context"];
  }
  id v7 = a4;
  char v8 = -[MRCoreUtilsPairingSession _generateSetupCodeWithMaximumLength:]((uint64_t)v7, a3);
  [v8 getCString:a2 maxLength:a3 encoding:4];
  uint64_t v9 = -[MRCoreUtilsPairingSession _displaySetupCode:]((uint64_t)v7, v8);

  return v9;
}

void _MRCUPSHideSetupCodeCallback(void *a1)
{
  if (!a1)
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"void _MRCUPSHideSetupCodeCallback(void *)"];
    [v2 handleFailureInFunction:v3 file:@"MRCoreUtilsPairingSession.m" lineNumber:968 description:@"NULL context"];
  }

  -[MRCoreUtilsPairingSession _hideSetupCode](a1);
}

uint64_t _MRCUPSPromptForSetupCodeCallback(uint64_t a1, int a2, uint64_t a3)
{
  if (!a3)
  {
    uint64_t v6 = [MEMORY[0x1E4F28B00] currentHandler];
    id v7 = objc_msgSend(NSString, "stringWithUTF8String:", "OSStatus _MRCUPSPromptForSetupCodeCallback(PairingFlags, int32_t, void *)");
    [v6 handleFailureInFunction:v7 file:@"MRCoreUtilsPairingSession.m" lineNumber:975 description:@"NULL context"];
  }

  return -[MRCoreUtilsPairingSession _promptForSetupCodeWithDelay:](a3, (double)a2);
}

void sub_1950AFBA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1950B000C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1950B070C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1950B123C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1950B1EF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void _MRMediaRemotePlaybackSessionRequest(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if (v9)
  {
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    id v9 = (id)MEMORY[0x1E4F14428];
    id v22 = MEMORY[0x1E4F14428];
    if (v7) {
      goto LABEL_3;
    }
  }
  id v7 = objc_alloc_init(MRPlaybackSessionRequest);
LABEL_3:
  uint64_t v11 = [(MRPlaybackSessionRequest *)v7 requestIdentifier];

  if (!v11)
  {
    uint64_t v12 = [MEMORY[0x1E4F29128] UUID];
    uint64_t v13 = [v12 UUIDString];
    [(MRPlaybackSessionRequest *)v7 setRequestIdentifier:v13];
  }
  uint64_t v14 = [MEMORY[0x1E4F1C9C8] date];
  uint64_t v15 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"playbackSession", v7];
  uint64_t v16 = v15;
  if (v8) {
    [v15 appendFormat:@" for %@", v8];
  }
  unint64_t v17 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v29 = v16;
    _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v23[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v23[1] = 3221225472;
  v23[2] = ___MRMediaRemotePlaybackSessionRequest_block_invoke;
  v23[3] = &unk_1E57D36A8;
  uint64_t v24 = v7;
  id v25 = v14;
  id v26 = v9;
  id v27 = v10;
  id v18 = v9;
  id v19 = v10;
  id v20 = v14;
  unint64_t v21 = v7;
  MRMediaRemoteNowPlayingResolvePlayerPath(v8, v18, v23);
}

void MRMediaRemotePlaybackSessionRequest(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemotePlaybackSessionRequest_block_invoke;
  v9[3] = &unk_1E57D4B10;
  id v10 = v7;
  id v8 = v7;
  _MRMediaRemotePlaybackSessionRequest(a1, a2, a3, v9);
}

uint64_t __MRMediaRemotePlaybackSessionRequest_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1950B3EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _MRNowPlayingValuesAreEqual(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3 == v4) {
    goto LABEL_3;
  }
  if ([v3 isEqual:v4]) {
    goto LABEL_3;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [v3 floatValue];
      float v7 = v6;
      [v4 floatValue];
      if (vabds_f32(v7, v8) <= 0.01) {
        goto LABEL_3;
      }
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    && ([v3 timeIntervalSinceDate:v4], fabs(v9) <= 1.0))
  {
LABEL_3:
    uint64_t v5 = 1;
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

MRContentItem *_MRCreateTemporalContentItemFromNowPlayingInfo(void *a1)
{
  id v1 = a1;
  id v2 = [v1 objectForKey:@"kMRMediaRemoteNowPlayingInfoTimestamp"];
  id v3 = [v1 objectForKey:@"kMRMediaRemoteNowPlayingInfoPlaybackRate"];
  id v4 = [v1 objectForKey:@"kMRMediaRemoteNowPlayingInfoElapsedTime"];

  uint64_t v5 = (void *)[objc_alloc(MEMORY[0x1E4F1CA60]) initWithCapacity:3];
  float v6 = v5;
  if (v2) {
    [v5 setValue:v2 forKey:@"kMRMediaRemoteNowPlayingInfoTimestamp"];
  }
  if (v3) {
    [v6 setValue:v3 forKey:@"kMRMediaRemoteNowPlayingInfoPlaybackRate"];
  }
  if (v4) {
    [v6 setValue:v4 forKey:@"kMRMediaRemoteNowPlayingInfoElapsedTime"];
  }
  float v7 = [[MRContentItem alloc] initWithNowPlayingInfo:v6];

  return v7;
}

uint64_t MRNowPlayingSessionManagerDataSourceSetCreatePlayerCallback(void *a1)
{
  id v1 = a1;
  id v2 = +[MRNowPlayingOriginClientManager sharedManager];
  [v2 setCreateNewPlayerCallback:v1];

  return MRGetSharedService();
}

void MRNowPlayingSessionManagerDataSourceSetDestroyPlayerCallback(void *a1)
{
  id v1 = a1;
  id v2 = +[MRNowPlayingOriginClientManager sharedManager];
  [v2 setDestroyPlayerCallback:v1];
}

void MRNowPlayingSessionManagerDataSourceGenerateSetGeneratePlayerIDCallback(void *a1)
{
  id v1 = a1;
  id v2 = +[MRNowPlayingOriginClientManager sharedManager];
  [v2 setGeneratePlayerIDCallback:v1];
}

void MRNowPlayingSessionManagerStartSession(void *a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [MEMORY[0x1E4F29128] UUID];
  float v6 = [v5 UUIDString];

  float v7 = [MEMORY[0x1E4F1C9C8] now];
  float v8 = +[MRAVOutputDevice localDeviceUID];
  double v9 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"MRNowPlayingSessionManagerStartSession", v6];
  id v10 = v9;
  if (v8) {
    [v9 appendFormat:@" for %@", v8];
  }
  uint64_t v11 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v37 = v10;
    _os_log_impl(&dword_194F3C000, v11, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v29[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v29[1] = 3221225472;
  v29[2] = __MRNowPlayingSessionManagerStartSession_block_invoke;
  v29[3] = &unk_1E57D4B78;
  id v30 = v8;
  char v31 = @"MRNowPlayingSessionManagerStartSession";
  id v12 = v6;
  id v32 = v12;
  id v33 = v7;
  id v35 = v4;
  id v13 = v3;
  id v34 = v13;
  id v14 = v4;
  id v15 = v7;
  id v16 = v8;
  unint64_t v17 = (void *)MEMORY[0x1997190F0](v29);
  if (MRNowPlayingSessionManagerStartSession_onceToken != -1) {
    dispatch_once(&MRNowPlayingSessionManagerStartSession_onceToken, &__block_literal_global_50);
  }
  id v18 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v19 = [v18 service];
  id v20 = [v19 mrXPCConnection];
  v24[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v24[1] = 3221225472;
  v24[2] = __MRNowPlayingSessionManagerStartSession_block_invoke_57;
  v24[3] = &unk_1E57D4BE8;
  id v25 = @"MRNowPlayingSessionManagerStartSession";
  id v26 = v12;
  id v27 = v13;
  id v28 = v17;
  id v21 = v17;
  id v22 = v13;
  id v23 = v12;
  [v20 sendMessageWithType:0x300000000000023 queue:v22 reply:v24];
}

void __MRNowPlayingSessionManagerStartSession_block_invoke(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v73 = *MEMORY[0x1E4F143B8];
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = [v7 origin];

  if (v10)
  {
    uint64_t v11 = [MRPlayerPath alloc];
    uint64_t v12 = [v7 origin];
    id v13 = +[MRClient localClient];
    id v14 = +[MRPlayer defaultPlayer];
    id v15 = [(MRPlayerPath *)v11 initWithOrigin:v12 client:v13 player:v14];

    id v7 = (id)v12;
  }
  else
  {
    id v15 = +[MRPlayerPath localPlayerPath];
  }

  id v16 = [(MRPlayerPath *)v15 origin];
  int v17 = [v16 isHosted];

  if (v17)
  {
    id v18 = +[MRNowPlayingOriginClientManager sharedManager];
    id v19 = [(MRPlayerPath *)v15 origin];
    id v20 = [v8 routingContextID];
    id v21 = [v18 createCustomOriginClientForOrigin:v19 routingContextID:v20];
  }
  MRMediaRemoteSetNowPlayingApplicationOverrideEnabled(1);
  id v22 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v23 = [v22 currentSessionPlayerPath];

  if (v23)
  {
    unsigned int v58 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v59 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRNowPlayingSessionManagerStartSession(__strong dispatch_queue_t, void (^__strong)(MRPlayerPath *__strong))_block_invoke");
    [v58 handleFailureInFunction:v59 file:@"MRNowPlayingSessionManagerDataSource.m" lineNumber:61 description:@"Unbalanced calls to start/stop session: currentSessionPlayerPath should be nil when starting"];
  }
  uint64_t v24 = +[MRMediaRemoteServiceClient sharedServiceClient];
  [v24 setCurrentSessionPlayerPath:v15];

  id v25 = [NSString alloc];
  id v26 = [v8 routingContextID];
  id v27 = (void *)[v25 initWithFormat:@"playerPath=%@ routingContext=%@", v15, v26];

  uint64_t v28 = a1[4];
  uint64_t v29 = _MRLogForCategory(0xAuLL);
  id v30 = v29;
  if (!v9 && v27)
  {
    BOOL v31 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
    if (v28)
    {
      if (!v31) {
        goto LABEL_29;
      }
      uint64_t v33 = a1[5];
      uint64_t v32 = a1[6];
      uint64_t v34 = a1[4];
      id v35 = [MEMORY[0x1E4F1C9C8] date];
      [v35 timeIntervalSinceDate:a1[7]];
      *(_DWORD *)long long buf = 138544386;
      uint64_t v64 = v33;
      __int16 v65 = 2114;
      uint64_t v66 = v32;
      __int16 v67 = 2112;
      id v68 = v27;
      __int16 v69 = 2114;
      uint64_t v70 = v34;
      __int16 v71 = 2048;
      uint64_t v72 = v36;
      uint64_t v37 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
      uint64_t v38 = v30;
      uint32_t v39 = 52;
      goto LABEL_23;
    }
    if (!v31) {
      goto LABEL_29;
    }
    uint64_t v50 = a1[5];
    uint64_t v51 = a1[6];
    id v35 = [MEMORY[0x1E4F1C9C8] date];
    [v35 timeIntervalSinceDate:a1[7]];
    *(_DWORD *)long long buf = 138544130;
    uint64_t v64 = v50;
    __int16 v65 = 2114;
    uint64_t v66 = v51;
    __int16 v67 = 2112;
    id v68 = v27;
    __int16 v69 = 2048;
    uint64_t v70 = v52;
    uint64_t v37 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
    goto LABEL_22;
  }
  if (v9)
  {
    BOOL v40 = os_log_type_enabled(v29, OS_LOG_TYPE_ERROR);
    if (v28)
    {
      if (!v40) {
        goto LABEL_29;
      }
      uint64_t v42 = a1[5];
      uint64_t v41 = a1[6];
      uint64_t v43 = a1[4];
      id v35 = [MEMORY[0x1E4F1C9C8] date];
      [v35 timeIntervalSinceDate:a1[7]];
      *(_DWORD *)long long buf = 138544386;
      uint64_t v64 = v42;
      __int16 v65 = 2114;
      uint64_t v66 = v41;
      __int16 v67 = 2114;
      id v68 = v9;
      __int16 v69 = 2114;
      uint64_t v70 = v43;
      __int16 v71 = 2048;
      uint64_t v72 = v44;
      _os_log_error_impl(&dword_194F3C000, v30, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
      goto LABEL_24;
    }
    if (v40) {
      __94__MRAVDiscoverySessionHelper_searchAVOutputDeviceForUID_timeout_identifier_reason_completion___block_invoke_cold_1(a1, (uint64_t)v9, v30);
    }
  }
  else
  {
    BOOL v45 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
    if (v28)
    {
      if (!v45) {
        goto LABEL_29;
      }
      uint64_t v47 = a1[5];
      uint64_t v46 = a1[6];
      uint64_t v48 = (void *)a1[4];
      id v35 = [MEMORY[0x1E4F1C9C8] date];
      [v35 timeIntervalSinceDate:a1[7]];
      *(_DWORD *)long long buf = 138544130;
      uint64_t v64 = v47;
      __int16 v65 = 2114;
      uint64_t v66 = v46;
      __int16 v67 = 2114;
      id v68 = v48;
      __int16 v69 = 2048;
      uint64_t v70 = v49;
      uint64_t v37 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
LABEL_22:
      uint64_t v38 = v30;
      uint32_t v39 = 42;
LABEL_23:
      _os_log_impl(&dword_194F3C000, v38, OS_LOG_TYPE_DEFAULT, v37, buf, v39);
LABEL_24:

      goto LABEL_29;
    }
    if (v45)
    {
      uint64_t v53 = a1[5];
      uint64_t v54 = a1[6];
      id v35 = [MEMORY[0x1E4F1C9C8] date];
      [v35 timeIntervalSinceDate:a1[7]];
      *(_DWORD *)long long buf = 138543874;
      uint64_t v64 = v53;
      __int16 v65 = 2114;
      uint64_t v66 = v54;
      __int16 v67 = 2048;
      id v68 = v55;
      uint64_t v37 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      uint64_t v38 = v30;
      uint32_t v39 = 32;
      goto LABEL_23;
    }
  }
LABEL_29:

  char v56 = (void *)a1[9];
  if (v56)
  {
    char v57 = a1[8];
    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __MRNowPlayingSessionManagerStartSession_block_invoke_44;
    block[3] = &unk_1E57D0DB8;
    id v62 = v56;
    char v61 = v15;
    dispatch_async(v57, block);
  }
}

uint64_t __MRNowPlayingSessionManagerStartSession_block_invoke_44(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void __MRNowPlayingSessionManagerStartSession_block_invoke_2()
{
  id v1 = [MEMORY[0x1E4F28EB8] defaultCenter];
  id v0 = (id)[v1 addObserverForName:@"_MRMediaRemoteWillSendCommandToPlayerNotification" object:0 queue:0 usingBlock:&__block_literal_global_50];
}

void __MRNowPlayingSessionManagerStartSession_block_invoke_3(uint64_t a1, void *a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  id v3 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v4 = [v3 currentSessionPlayerPath];

  if (v4)
  {
    uint64_t v5 = [v2 playerPath];
    float v6 = [v5 client];
    id v7 = [v4 client];
    char v8 = [v6 isEqual:v7];

    if ((v8 & 1) == 0)
    {
      id v9 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", &unk_1EE66EF28, &unk_1EE66EF40, &unk_1EE66EF58, 0);
      id v10 = [v2 userInfo];
      uint64_t v11 = [v10 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandType"];

      if ([v9 containsObject:v11])
      {
        uint64_t v12 = [v11 intValue];
        id v13 = [v2 userInfo];
        id v14 = MRMediaRemoteCommandCreateDescription(v12, v13, 0);

        id v15 = MRLogCategoryConnections();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          id v16 = [v2 playerPath];
          int v17 = [v16 client];
          *(_DWORD *)long long buf = 138543618;
          id v20 = v14;
          __int16 v21 = 2114;
          id v22 = v17;
          _os_log_impl(&dword_194F3C000, v15, OS_LOG_TYPE_DEFAULT, "[MRNowPlayingSessionManagerDataSource] [MRNowPlayingSessionManager] Got command preview that will cause a hijack (%{public}@) playerPath %{public}@. Posting MRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback", buf, 0x16u);
        }
        id v18 = [MEMORY[0x1E4F28EB8] defaultCenter];
        [v18 postNotificationName:@"MRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback" object:0];
      }
    }
  }
}

void __MRNowPlayingSessionManagerStartSession_block_invoke_57(uint64_t a1, void *a2, void *a3)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if ([v6 code] == 1)
  {
    id v7 = (void *)[[NSString alloc] initWithFormat:@"xpc error, likely mediaremoted crash, so retrying.."];
    char v8 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138543874;
      uint64_t v21 = v9;
      __int16 v22 = 2114;
      uint64_t v23 = v10;
      __int16 v24 = 2112;
      id v25 = v7;
      _os_log_impl(&dword_194F3C000, v8, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
    }

    uint64_t v11 = +[MRMediaRemoteServiceClient sharedServiceClient];
    uint64_t v12 = [v11 service];
    id v13 = [v12 mrXPCConnection];
    uint64_t v14 = *(void *)(a1 + 48);
    v16[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    v16[2] = __MRNowPlayingSessionManagerStartSession_block_invoke_61;
    v16[3] = &unk_1E57D4BC0;
    id v17 = v5;
    id v19 = *(id *)(a1 + 56);
    id v18 = v6;
    [v13 sendMessageWithType:0x300000000000023 queue:v14 reply:v16];
  }
  else
  {
    id v7 = MRCreatePlayerPathFromXPCMessage(v5);
    id v15 = MRCreateDeviceInfoFromXPCMessage(v5);
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void __MRNowPlayingSessionManagerStartSession_block_invoke_61(uint64_t a1)
{
  MRCreatePlayerPathFromXPCMessage(*(void **)(a1 + 32));
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = MRCreateDeviceInfoFromXPCMessage(*(void **)(a1 + 32));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void MRNowPlayingSessionManagerStopSession()
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  id v0 = [MEMORY[0x1E4F1C9C8] date];
  id v1 = [MEMORY[0x1E4F29128] UUID];
  id v2 = [v1 UUIDString];

  id v3 = +[MRAVOutputDevice localDeviceUID];
  id v4 = (__CFString *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"MRNowPlayingSessionManagerStopSession", v2];
  id v5 = v4;
  if (v3) {
    [(__CFString *)v4 appendFormat:@" for %@", v3];
  }
  id v6 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint32_t v39 = v5;
    _os_log_impl(&dword_194F3C000, v6, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  id v7 = +[MRMediaRemoteServiceClient sharedServiceClient];
  char v8 = [v7 service];
  uint64_t v9 = [v8 mrXPCConnection];
  uint64_t v10 = MRCreateXPCMessage(0x300000000000024uLL);
  id v37 = 0;
  id v11 = (id)[v9 sendSyncMessage:v10 error:&v37];
  id v12 = v37;

  MRMediaRemoteSetNowPlayingApplicationOverrideEnabled(0);
  id v13 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v14 = [v13 currentSessionPlayerPath];

  if (!v14)
  {
    id v35 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v36 = [NSString stringWithUTF8String:"void MRNowPlayingSessionManagerStopSession(void)"];
    [v35 handleFailureInFunction:v36 file:@"MRNowPlayingSessionManagerDataSource.m" lineNumber:129 description:@"Unbalanced calls to start/stop session: currentSessionPlayerPath should not be nil when stopping"];
  }
  id v15 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v16 = [v15 currentSessionPlayerPath];

  id v17 = [v16 client];
  id v18 = [v16 origin];
  MRMediaRemoteRemoveClientForOrigin((uint64_t)v17, (uint64_t)v18, 0, 0);

  id v19 = +[MRMediaRemoteServiceClient sharedServiceClient];
  [v19 setCurrentSessionPlayerPath:0];

  id v20 = _MRLogForCategory(0xAuLL);
  uint64_t v21 = v20;
  if (!v12)
  {
    BOOL v28 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);
    if (v3)
    {
      if (!v28) {
        goto LABEL_21;
      }
      uint64_t v23 = [MEMORY[0x1E4F1C9C8] date];
      [v23 timeIntervalSinceDate:v0];
      *(_DWORD *)long long buf = 138544130;
      uint32_t v39 = @"MRNowPlayingSessionManagerStopSession";
      __int16 v40 = 2114;
      uint64_t v41 = v2;
      __int16 v42 = 2114;
      id v43 = v3;
      __int16 v44 = 2048;
      BOOL v45 = v29;
      id v30 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      BOOL v31 = v21;
      uint32_t v32 = 42;
    }
    else
    {
      if (!v28) {
        goto LABEL_21;
      }
      uint64_t v23 = [MEMORY[0x1E4F1C9C8] date];
      [v23 timeIntervalSinceDate:v0];
      *(_DWORD *)long long buf = 138543874;
      uint32_t v39 = @"MRNowPlayingSessionManagerStopSession";
      __int16 v40 = 2114;
      uint64_t v41 = v2;
      __int16 v42 = 2048;
      id v43 = v34;
      id v30 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      BOOL v31 = v21;
      uint32_t v32 = 32;
    }
    _os_log_impl(&dword_194F3C000, v31, OS_LOG_TYPE_DEFAULT, v30, buf, v32);
    goto LABEL_20;
  }
  BOOL v22 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
  if (v3)
  {
    if (v22)
    {
      uint64_t v23 = [MEMORY[0x1E4F1C9C8] date];
      [v23 timeIntervalSinceDate:v0];
      *(_DWORD *)long long buf = 138544386;
      uint32_t v39 = @"MRNowPlayingSessionManagerStopSession";
      __int16 v40 = 2114;
      uint64_t v41 = v2;
      __int16 v42 = 2114;
      id v43 = v12;
      __int16 v44 = 2114;
      BOOL v45 = v3;
      __int16 v46 = 2048;
      uint64_t v47 = v24;
      id v25 = "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds";
      uint64_t v26 = v21;
      uint32_t v27 = 52;
LABEL_16:
      _os_log_error_impl(&dword_194F3C000, v26, OS_LOG_TYPE_ERROR, v25, buf, v27);
LABEL_20:
    }
  }
  else if (v22)
  {
    uint64_t v23 = [MEMORY[0x1E4F1C9C8] date];
    [v23 timeIntervalSinceDate:v0];
    *(_DWORD *)long long buf = 138544130;
    uint32_t v39 = @"MRNowPlayingSessionManagerStopSession";
    __int16 v40 = 2114;
    uint64_t v41 = v2;
    __int16 v42 = 2114;
    id v43 = v12;
    __int16 v44 = 2048;
    BOOL v45 = v33;
    id v25 = "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds";
    uint64_t v26 = v21;
    uint32_t v27 = 42;
    goto LABEL_16;
  }
LABEL_21:
}

id MRNowPlayingSessionManagerLocalDeviceRoutingContextID()
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  if (MRNowPlayingSessionManagerLocalDeviceRoutingContextID_onceToken != -1) {
    dispatch_once(&MRNowPlayingSessionManagerLocalDeviceRoutingContextID_onceToken, &__block_literal_global_70_0);
  }
  id v0 = [MEMORY[0x1E4F29128] UUID];
  id v1 = [v0 UUIDString];

  id v2 = [MEMORY[0x1E4F1C9C8] now];
  id v3 = (__CFString *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"MRNowPlayingSessionManagerLocalDeviceRoutingContextID", v1];
  id v4 = +[MROrigin localOrigin];
  id v5 = [v4 displayName];

  if (v5)
  {
    id v6 = +[MROrigin localOrigin];
    id v7 = [v6 displayName];
    [(__CFString *)v3 appendFormat:@" for %@", v7];
  }
  char v8 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint32_t v32 = v3;
    _os_log_impl(&dword_194F3C000, v8, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  uint64_t v9 = +[MROrigin localOrigin];
  uint64_t v10 = +[MRDeviceInfoRequest deviceInfoForOrigin:v9];

  id v11 = [v10 routingContextID];
  id v12 = (void *)[v11 copy];

  [(id)MRNowPlayingSessionManagerLocalDeviceRoutingContextID___lock lock];
  objc_storeStrong((id *)&MRNowPlayingSessionManagerLocalDeviceRoutingContextID___routingContextID, v12);
  [(id)MRNowPlayingSessionManagerLocalDeviceRoutingContextID___lock unlock];
  id v13 = +[MROrigin localOrigin];
  uint64_t v14 = [v13 displayName];

  id v15 = _MRLogForCategory(0xAuLL);
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);
  if (!v12)
  {
    if (v14)
    {
      if (!v16) {
        goto LABEL_21;
      }
      id v17 = +[MROrigin localOrigin];
      id v18 = [v17 displayName];
      id v19 = [MEMORY[0x1E4F1C9C8] date];
      [v19 timeIntervalSinceDate:v2];
      *(_DWORD *)long long buf = 138544130;
      uint32_t v32 = @"MRNowPlayingSessionManagerLocalDeviceRoutingContextID";
      __int16 v33 = 2114;
      uint64_t v34 = v1;
      __int16 v35 = 2114;
      uint64_t v36 = v18;
      __int16 v37 = 2048;
      uint64_t v38 = v24;
      uint64_t v21 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      BOOL v22 = v15;
      uint32_t v23 = 42;
      goto LABEL_14;
    }
    if (!v16) {
      goto LABEL_21;
    }
    id v17 = [MEMORY[0x1E4F1C9C8] date];
    [v17 timeIntervalSinceDate:v2];
    *(_DWORD *)long long buf = 138543874;
    uint32_t v32 = @"MRNowPlayingSessionManagerLocalDeviceRoutingContextID";
    __int16 v33 = 2114;
    uint64_t v34 = v1;
    __int16 v35 = 2048;
    uint64_t v36 = v29;
    uint64_t v26 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
    uint32_t v27 = v15;
    uint32_t v28 = 32;
LABEL_19:
    _os_log_impl(&dword_194F3C000, v27, OS_LOG_TYPE_DEFAULT, v26, buf, v28);
    goto LABEL_20;
  }
  if (!v14)
  {
    if (!v16) {
      goto LABEL_21;
    }
    id v17 = [MEMORY[0x1E4F1C9C8] date];
    [v17 timeIntervalSinceDate:v2];
    *(_DWORD *)long long buf = 138544130;
    uint32_t v32 = @"MRNowPlayingSessionManagerLocalDeviceRoutingContextID";
    __int16 v33 = 2114;
    uint64_t v34 = v1;
    __int16 v35 = 2112;
    uint64_t v36 = v12;
    __int16 v37 = 2048;
    uint64_t v38 = v25;
    uint64_t v26 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
    uint32_t v27 = v15;
    uint32_t v28 = 42;
    goto LABEL_19;
  }
  if (!v16) {
    goto LABEL_21;
  }
  id v17 = +[MROrigin localOrigin];
  id v18 = [v17 displayName];
  id v19 = [MEMORY[0x1E4F1C9C8] date];
  [v19 timeIntervalSinceDate:v2];
  *(_DWORD *)long long buf = 138544386;
  uint32_t v32 = @"MRNowPlayingSessionManagerLocalDeviceRoutingContextID";
  __int16 v33 = 2114;
  uint64_t v34 = v1;
  __int16 v35 = 2112;
  uint64_t v36 = v12;
  __int16 v37 = 2114;
  uint64_t v38 = v18;
  __int16 v39 = 2048;
  uint64_t v40 = v20;
  uint64_t v21 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
  BOOL v22 = v15;
  uint32_t v23 = 52;
LABEL_14:
  _os_log_impl(&dword_194F3C000, v22, OS_LOG_TYPE_DEFAULT, v21, buf, v23);

LABEL_20:
LABEL_21:

  return v12;
}

void __MRNowPlayingSessionManagerLocalDeviceRoutingContextID_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28E08]);
  id v1 = (void *)MRNowPlayingSessionManagerLocalDeviceRoutingContextID___lock;
  MRNowPlayingSessionManagerLocalDeviceRoutingContextID___lock = (uint64_t)v0;

  id v3 = [MEMORY[0x1E4F28EB8] defaultCenter];
  id v2 = (id)[v3 addObserverForName:@"kMRDeviceInfoDidChangeNotification" object:0 queue:0 usingBlock:&__block_literal_global_73];
}

void __MRNowPlayingSessionManagerLocalDeviceRoutingContextID_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  id v3 = [v2 userInfo];
  id v4 = MRGetOriginFromUserInfo(v3);
  int v5 = [v4 isLocal];

  if (v5)
  {
    id v6 = [v2 userInfo];
    char v8 = MRGetDeviceInfoFromUserInfo(v6, v7);

    [(id)MRNowPlayingSessionManagerLocalDeviceRoutingContextID___lock lock];
    uint64_t v9 = (void *)MRNowPlayingSessionManagerLocalDeviceRoutingContextID___routingContextID;
    uint64_t v10 = [v8 routingContextID];
    if (v9 == v10) {
      int v11 = 0;
    }
    else {
      int v11 = [v9 isEqual:v10] ^ 1;
    }

    [(id)MRNowPlayingSessionManagerLocalDeviceRoutingContextID___lock unlock];
    if (!v8 || v11)
    {
      id v12 = _MRLogForCategory(0);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v14 = 138412290;
        id v15 = @"MRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange";
        _os_log_impl(&dword_194F3C000, v12, OS_LOG_TYPE_DEFAULT, "Posting %@", (uint8_t *)&v14, 0xCu);
      }

      id v13 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v13 postNotificationName:@"MRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange" object:0];
    }
  }
}

uint64_t MRNowPlayingSessionManagerIsSilentPrimary()
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  if (MRNowPlayingSessionManagerIsSilentPrimary_onceToken != -1) {
    dispatch_once(&MRNowPlayingSessionManagerIsSilentPrimary_onceToken, &__block_literal_global_80_0);
  }
  id v0 = [MEMORY[0x1E4F29128] UUID];
  id v1 = [v0 UUIDString];

  id v2 = [MEMORY[0x1E4F1C9C8] now];
  id v3 = (__CFString *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"MRNowPlayingSessionManagerIsSilentPrimary", v1];
  id v4 = +[MROrigin localOrigin];
  int v5 = [v4 displayName];

  if (v5)
  {
    id v6 = +[MROrigin localOrigin];
    id v7 = [v6 displayName];
    [(__CFString *)v3 appendFormat:@" for %@", v7];
  }
  char v8 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v24 = v3;
    _os_log_impl(&dword_194F3C000, v8, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  uint64_t v9 = +[MROrigin localOrigin];
  uint64_t v10 = +[MRDeviceInfoRequest deviceInfoForOrigin:v9];

  uint64_t v11 = [v10 isProxyGroupPlayer];
  [(id)MRNowPlayingSessionManagerIsSilentPrimary___lock lock];
  MRNowPlayingSessionManagerIsSilentPrimary___isSilentPrimary = v11;
  [(id)MRNowPlayingSessionManagerIsSilentPrimary___lock unlock];
  if (v11) {
    id v12 = @"YES";
  }
  else {
    id v12 = @"NO";
  }
  id v13 = +[MROrigin localOrigin];
  int v14 = [v13 displayName];

  id v15 = _MRLogForCategory(0xAuLL);
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);
  if (v14)
  {
    if (v16)
    {
      id v17 = +[MROrigin localOrigin];
      id v18 = [v17 displayName];
      id v19 = [MEMORY[0x1E4F1C9C8] date];
      [v19 timeIntervalSinceDate:v2];
      *(_DWORD *)long long buf = 138544386;
      uint64_t v24 = @"MRNowPlayingSessionManagerIsSilentPrimary";
      __int16 v25 = 2114;
      uint64_t v26 = v1;
      __int16 v27 = 2112;
      uint32_t v28 = v12;
      __int16 v29 = 2114;
      id v30 = v18;
      __int16 v31 = 2048;
      uint64_t v32 = v20;
      _os_log_impl(&dword_194F3C000, v15, OS_LOG_TYPE_DEFAULT, "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds", buf, 0x34u);

LABEL_15:
    }
  }
  else if (v16)
  {
    id v17 = [MEMORY[0x1E4F1C9C8] date];
    [v17 timeIntervalSinceDate:v2];
    *(_DWORD *)long long buf = 138544130;
    uint64_t v24 = @"MRNowPlayingSessionManagerIsSilentPrimary";
    __int16 v25 = 2114;
    uint64_t v26 = v1;
    __int16 v27 = 2112;
    uint32_t v28 = v12;
    __int16 v29 = 2048;
    id v30 = v21;
    _os_log_impl(&dword_194F3C000, v15, OS_LOG_TYPE_DEFAULT, "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds", buf, 0x2Au);
    goto LABEL_15;
  }

  return v11;
}

void __MRNowPlayingSessionManagerIsSilentPrimary_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28E08]);
  id v1 = (void *)MRNowPlayingSessionManagerIsSilentPrimary___lock;
  MRNowPlayingSessionManagerIsSilentPrimary___lock = (uint64_t)v0;

  id v3 = [MEMORY[0x1E4F28EB8] defaultCenter];
  id v2 = (id)[v3 addObserverForName:@"kMRDeviceInfoDidChangeNotification" object:0 queue:0 usingBlock:&__block_literal_global_82];
}

void __MRNowPlayingSessionManagerIsSilentPrimary_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  id v3 = [v2 userInfo];
  id v4 = MRGetOriginFromUserInfo(v3);
  int v5 = [v4 isLocal];

  if (v5)
  {
    id v6 = [v2 userInfo];
    char v8 = MRGetDeviceInfoFromUserInfo(v6, v7);

    [(id)MRNowPlayingSessionManagerIsSilentPrimary___lock lock];
    int v9 = [v8 isProxyGroupPlayer];
    int v10 = MRNowPlayingSessionManagerIsSilentPrimary___isSilentPrimary;
    [(id)MRNowPlayingSessionManagerIsSilentPrimary___lock unlock];
    if (!v8 || v10 != v9)
    {
      uint64_t v11 = _MRLogForCategory(0);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 138412290;
        int v14 = @"MRNowPlayingSessionManagerIsSilentPrimaryDidChange";
        _os_log_impl(&dword_194F3C000, v11, OS_LOG_TYPE_DEFAULT, "Posting %@", (uint8_t *)&v13, 0xCu);
      }

      id v12 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v12 postNotificationName:@"MRNowPlayingSessionManagerIsSilentPrimaryDidChange" object:0];
    }
  }
}

void sub_1950B6F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  objc_sync_exit(v11);
  _Unwind_Resume(a1);
}

void sub_1950B72A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950B7328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950B7500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void MRMediaRemoteGetApplicationDisplayIDForClient(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteGetApplicationDisplayIDForClient_block_invoke;
  v9[3] = &unk_1E57D3458;
  id v10 = v7;
  id v8 = v7;
  MRMediaRemoteGetClientProperties(a1, a2, a3, v9);
}

void __MRMediaRemoteGetApplicationDisplayIDForClient_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = [a2 bundleIdentifier];
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
  }
}

void MRMediaRemoteGetNowPlayingApplicationDisplayIDForOrigin(uint64_t a1, void *a2, void *a3)
{
}

void MRMediaRemoteGetNowPlayingApplicationDisplayID(void *a1, void *a2)
{
}

void MRMediaRemoteGetNowPlayingApplicationPIDForOrigin(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteGetNowPlayingApplicationPIDForOrigin_block_invoke;
  v7[3] = &unk_1E57D3458;
  id v8 = v5;
  id v6 = v5;
  MRMediaRemoteGetClientProperties(0, a1, a2, v7);
}

uint64_t __MRMediaRemoteGetNowPlayingApplicationPIDForOrigin_block_invoke(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 32);
  if (v2)
  {
    uint64_t v3 = [a2 processIdentifier];
    id v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
    return v4(v2, v3);
  }
  return result;
}

void MRMediaRemoteGetNowPlayingApplicationPID(void *a1, void *a2)
{
}

void MRMediaRemoteGetNowPlayingApplicationDisplayNameForClient(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRMediaRemoteGetNowPlayingApplicationDisplayNameForClient_block_invoke;
  v9[3] = &unk_1E57D3458;
  id v10 = v7;
  id v8 = v7;
  MRMediaRemoteGetClientProperties(a1, a2, a3, v9);
}

void __MRMediaRemoteGetNowPlayingApplicationDisplayNameForClient_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = [a2 displayName];
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
  }
}

void MRMediaRemoteGetNowPlayingApplicationDisplayName(uint64_t a1, void *a2, void *a3)
{
}

void MRMediaRemoteGetNowPlayingApplicationIsPlayingForOrigin(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteGetNowPlayingApplicationIsPlayingForOrigin_block_invoke;
  v7[3] = &unk_1E57D4C70;
  id v8 = v5;
  id v6 = v5;
  MRMediaRemoteGetNowPlayingApplicationPlaybackStateForOrigin(a1, a2, v7);
}

uint64_t __MRMediaRemoteGetNowPlayingApplicationIsPlayingForOrigin_block_invoke(uint64_t result, int a2)
{
  uint64_t v2 = *(void *)(result + 32);
  if (v2)
  {
    BOOL IsAdvancing = MRMediaRemotePlaybackStateIsAdvancing(a2);
    id v4 = *(uint64_t (**)(uint64_t, BOOL))(v2 + 16);
    return v4(v2, IsAdvancing);
  }
  return result;
}

void MRMediaRemoteGetNowPlayingApplicationIsPlaying(void *a1, void *a2)
{
}

void MRMediaRemoteGetAnyApplicationIsPlayingForOrigin(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v8 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v7 = (void *)MRGetSharedService();
  MRMediaRemoteServiceGetAnyAppIsPlaying(v7, v8, v6, v5);
}

void MRMediaRemoteGetAnyApplicationIsPlaying(void *a1, void *a2)
{
}

void MRMediaRemoteSetDisplayNameForClient(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  [a1 setDisplayName:a3];
  MRMediaRemoteUpdateClientProperties((uint64_t)a1, a2, v10, v9);
}

void MRMediaRemoteGetNowPlayingInfoForClient(uint64_t a1, uint64_t a2, int a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  uint64_t v11 = [[MRPlayerPath alloc] initWithOrigin:a2 client:a1 player:0];
  MRMediaRemoteGetNowPlayingInfoForPlayer((uint64_t)v11, a3, v10, v9);
}

void MRMediaRemoteGetNowPlayingInfoForOrigin(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteGetNowPlayingInfoForOrigin_block_invoke;
  v7[3] = &unk_1E57D4C98;
  id v8 = v5;
  id v6 = v5;
  MRMediaRemoteGetNowPlayingInfoForClient(0, a1, 1, a2, v7);
}

uint64_t __MRMediaRemoteGetNowPlayingInfoForOrigin_block_invoke(uint64_t a1, __CFDictionary *a2, uint64_t a3)
{
  if (a2 && a3)
  {
    id v5 = (void *)MRNowPlayingArtworkCopyImageData(a3);
    CFDictionarySetValue(a2, @"kMRMediaRemoteNowPlayingInfoArtworkData", v5);
    CFDictionarySetValue(a2, @"kMRMediaRemoteNowPlayingInfoArtworkMIMEType", @"image/jpeg");
  }
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v7 = *(uint64_t (**)(void))(result + 16);
    return v7();
  }
  return result;
}

void MRMediaRemoteGetNowPlayingInfo(void *a1, void *a2)
{
}

void MRMediaRemoteGetNowPlayingInfoWithOptionalArtwork(uint64_t a1, int a2, void *a3, void *a4)
{
}

void MRMediaRemoteGetNowPlayingArtwork(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v8 = -[MRPlaybackQueueRequest initWithRange:]([MRPlaybackQueueRequest alloc], "initWithRange:", 0, 1);
  [(MRPlaybackQueueRequest *)v8 setCachingPolicy:2];
  [(MRPlaybackQueueRequest *)v8 setArtworkWidth:600.0];
  [(MRPlaybackQueueRequest *)v8 setArtworkHeight:600.0];
  [(MRPlaybackQueueRequest *)v8 setLegacyNowPlayingInfoRequest:1];
  id v9 = (void *)[v5 copy];

  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MRMediaRemoteGetNowPlayingArtwork_block_invoke;
  v11[3] = &unk_1E57D2318;
  id v12 = v9;
  id v10 = v9;
  MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync(v8, v7, v6, v11);
}

void __MRMediaRemoteGetNowPlayingArtwork_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v9 = v3;
  if (v3 && (id v4 = (void *)[v3 contentItemWithOffset:0]) != 0)
  {
    id v5 = v4;
    ArtworkData = (void *)MRContentItemGetArtworkData(v4);
    CFTypeRef ArtworkMIMEType = MRContentItemGetArtworkMIMEType(v5);
    if (ArtworkData) {
      ArtworkData = (void *)MRNowPlayingArtworkCreateWithImageData((uint64_t)ArtworkData, (uint64_t)ArtworkMIMEType);
    }
  }
  else
  {
    ArtworkData = 0;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  if (v8) {
    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, ArtworkData);
  }
}

void MRMediaRemoteGetNowPlayingInfoForApp(uint64_t a1, uint64_t a2, int a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  uint64_t v11 = [[MRClient alloc] initWithProcessIdentifier:0 bundleIdentifier:a1];
  MRMediaRemoteGetNowPlayingInfoForClient((uint64_t)v11, a2, a3, v10, v9);
}

void MRMediaRemoteSetNowPlayingInfoForOriginWithMergePolicy(uint64_t a1, void *a2, int a3)
{
  id v5 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  MRMediaRemoteSetNowPlayingInfoForPlayer((uint64_t)v5, a2, a3, 0, 0);
}

void MRMediaRemoteSetNowPlayingInfoForPlayer(uint64_t a1, void *a2, int a3, void *a4, void *a5)
{
  uint64_t v106 = *MEMORY[0x1E4F143B8];
  id v9 = a4;
  id v10 = a5;
  id v11 = v9;
  id v12 = v10;
  int v13 = [MEMORY[0x1E4F1C9C8] date];
  id v14 = a2;
  uint64_t v15 = v11;
  if (!v11)
  {
    uint64_t v15 = (void *)MEMORY[0x1E4F14428];
    id v16 = MEMORY[0x1E4F14428];
  }
  v99[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v99[1] = 3221225472;
  v99[2] = ___MRSetNowPlayingInfo_block_invoke;
  v99[3] = &unk_1E57D1DA0;
  id v96 = v15;
  id v100 = v96;
  id v17 = v12;
  id v101 = v17;
  uint64_t v97 = MEMORY[0x1997190F0](v99);
  id v18 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG)) {
    MRMediaRemoteSetNowPlayingInfoForPlayer_cold_2(a3, v14, v18);
  }

  id v19 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v20 = [v19 playerClientForPlayerPath:a1];

  uint64_t v98 = [v20 playerPath];
  uint64_t v21 = [v20 clientCallbacks];
  LODWORD(v19) = [v21 hasPlaybackQueueCallbacks];

  if (!v19)
  {
    if (a3 && ![v14 count]) {
      id Error = 0;
    }
    else {
      id Error = (void *)[v14 mutableCopy];
    }
    [Error objectForKey:@"kMRMediaRemoteNowPlayingInfoClientPropertiesData"];
    v93 = id v90 = v17;
    if (v93)
    {
      __int16 v25 = [[MRClient alloc] initWithData:v93];
      if (v25)
      {
        uint64_t v26 = [v98 client];
        __int16 v27 = [v98 origin];
        MRMediaRemoteSyncClientProperties(v25, (uint64_t)v26, (uint64_t)v27);
      }
      [Error removeObjectForKey:@"kMRMediaRemoteNowPlayingInfoClientPropertiesData"];
    }
    uint32_t v28 = [v20 nowPlayingArtwork];
    id v29 = [v20 nowPlayingInfo];
    char v94 = v28;
    char v95 = v29;
    char v89 = v13;
    int v87 = a3;
    if (Error)
    {
      id v30 = [Error objectForKeyedSubscript:@"kMRMediaRemoteNowPlayingInfoArtworkData"];
      if ([v30 length])
      {
        __int16 v31 = [[MRNowPlayingArtworkImage alloc] initWithImageData:v30 mimeType:@"image/jpeg"];
        [Error removeObjectForKey:@"kMRMediaRemoteNowPlayingInfoArtworkData"];
      }
      else
      {
        __int16 v31 = 0;
      }
      uint64_t v91 = v30;
      if (v87)
      {
        id v32 = Error;
      }
      else
      {
        if (v29) {
          id v33 = (id)[v29 mutableCopy];
        }
        else {
          id v33 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
        }
        id v32 = v33;
        [v33 addEntriesFromDictionary:Error];
        if (!v31) {
          __int16 v31 = v28;
        }
        uint64_t v34 = [Error objectForKey:@"kMRMediaRemoteNowPlayingInfoElapsedTime"];
        if (v34)
        {
          __int16 v35 = (void *)v34;
          id v84 = v14;
          uint64_t v36 = v13;
          __int16 v37 = [Error objectForKey:@"kMRMediaRemoteNowPlayingInfoTimestamp"];

          if (!v37) {
            [v32 removeObjectForKey:@"kMRMediaRemoteNowPlayingInfoTimestamp"];
          }
          int v13 = v36;
          id v14 = v84;
        }
      }
      if (_MRSetNowPlayingInfoShouldReplacePlaybackRateWithDefaultPlaybackRate_onceToken != -1) {
        dispatch_once(&_MRSetNowPlayingInfoShouldReplacePlaybackRateWithDefaultPlaybackRate_onceToken, &__block_literal_global_52);
      }
      if (_MRSetNowPlayingInfoShouldReplacePlaybackRateWithDefaultPlaybackRate_shouldReplace)
      {
        uint64_t v38 = [Error objectForKey:@"kMRMediaRemoteNowPlayingInfoDefaultPlaybackRate"];
        if (v38) {
          [v32 setValue:v38 forKey:@"kMRMediaRemoteNowPlayingInfoPlaybackRate"];
        }
      }
      __int16 v39 = [Error objectForKey:@"kMRMediaRemoteNowPlayingInfoPlaybackRate"];

      if (!v39)
      {
        int v40 = [v20 playbackState];
        if (v40) {
          goto LABEL_42;
        }
        uint64_t v41 = +[MRNowPlayingOriginClientManager sharedManager];
        __int16 v42 = [v20 playerPath];
        [v41 playerClientRequestsForPlayerPath:v42];
        id v43 = v85 = v14;

        int v13 = v89;
        int v40 = [v43 playbackState];

        id v14 = v85;
        if (v40)
        {
LABEL_42:
          [v95 objectForKey:@"kMRMediaRemoteNowPlayingInfoDefaultPlaybackRate"];
          __int16 v44 = v31;
          id v45 = v14;
          v47 = __int16 v46 = v13;
          [v47 doubleValue];
          double v49 = v48;

          int v13 = v46;
          id v14 = v45;
          __int16 v31 = v44;
          uint32_t v28 = v94;
          BOOL IsAdvancing = MRMediaRemotePlaybackStateIsAdvancing(v40);
          BOOL v51 = v49 != 0.0;
          if (!IsAdvancing) {
            BOOL v51 = v49 == 0.0;
          }
          if (!v51)
          {
            double v52 = 0.0;
            if (IsAdvancing) {
              double v52 = 1.0;
            }
            uint64_t v53 = [NSNumber numberWithDouble:v52];
            [v32 setValue:v53 forKey:@"kMRMediaRemoteNowPlayingInfoPlaybackRate"];
          }
        }
      }

      id v29 = v95;
    }
    else
    {
      __int16 v31 = 0;
      id v32 = 0;
    }
    if (v29 == v32)
    {
      BOOL v55 = v29 == 0;
      int IsEqual = 1;
    }
    else
    {
      if ([v20 hasReceivedCommandRecently])
      {
        int IsEqual = 0;
      }
      else
      {
        char v56 = v31;
        char v57 = (void *)[v29 mutableCopy];
        unsigned int v58 = (void *)[v32 mutableCopy];
        id v59 = v29;
        [v57 removeObjectForKey:@"kMRMediaRemoteNowPlayingInfoTimestamp"];
        [v58 removeObjectForKey:@"kMRMediaRemoteNowPlayingInfoTimestamp"];
        int IsEqual = 0;
        if (v59 && v32) {
          int IsEqual = MRMediaRemoteNowPlayingInfoIsEqual(v58, v57);
        }

        uint32_t v28 = v94;
        __int16 v31 = v56;
        int v13 = v89;
      }
      BOOL v55 = v32 == 0;
      if (v32 && (IsEqual & 1) == 0)
      {
        unint64_t v60 = [v32 objectForKey:@"kMRMediaRemoteNowPlayingInfoTimestamp"];

        if (!v60) {
          [v32 setObject:v13 forKeyedSubscript:@"kMRMediaRemoteNowPlayingInfoTimestamp"];
        }
        if (v95)
        {
          int IsEqual = MRMediaRemoteNowPlayingInfoIsEqual(v32, v95);
          BOOL v55 = 0;
        }
        else
        {
          BOOL v55 = 0;
          int IsEqual = 0;
        }
        uint32_t v28 = v94;
      }
    }
    BOOL v92 = v55;
    int v61 = v28 == v31 || [(MRNowPlayingArtworkImage *)v28 isEqual:v31];
    if (IsEqual & v61)
    {
      id v62 = _MRLogForCategory(1uLL);
      if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_194F3C000, v62, OS_LOG_TYPE_DEFAULT, "[NowPlayingInfo] Setting identical nowPlayingInfo, skipping update.", buf, 2u);
      }

      uint64_t v63 = v94;
      uint64_t v64 = v95;
      if (!v92) {
        goto LABEL_112;
      }
    }
    else
    {
      uint64_t v82 = v31;
      id v86 = v14;
      MRTypeAuditNowPlayingInfoDictionary((const __CFDictionary *)v32);
      uint64_t v65 = +[MRContentItem extractedIdentifierFromNowPlayingInfo:v32];
      if (!v65)
      {
        uint64_t v66 = [MEMORY[0x1E4F29128] UUID];
        uint64_t v65 = [v66 UUIDString];

        [v32 setObject:v65 forKeyedSubscript:@"kMRMediaRemoteNowPlayingInfoContentItemIdentifier"];
      }
      unint64_t v83 = (void *)v65;
      if ((IsEqual & 1) == 0) {
        [v20 setNowPlayingInfo:v32];
      }
      if ((v61 & 1) == 0)
      {
        [v20 setNowPlayingArtwork:v82];
        if (v82)
        {
          __int16 v67 = [MEMORY[0x1E4F29128] UUID];
          id v68 = [v67 UUIDString];
          [v32 setObject:v68 forKeyedSubscript:@"kMRMediaRemoteNowPlayingInfoArtworkIdentifier"];
        }
        else
        {
          [v32 removeObjectForKey:@"kMRMediaRemoteNowPlayingInfoArtworkIdentifier"];
        }
      }
      __int16 v69 = MRMediaRemoteCopyReadableDictionaryDescription(v32);
      uint64_t v70 = _MRLogForCategory(1uLL);
      if (os_log_type_enabled(v70, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v71 = @"Replace";
        if (!v87) {
          __int16 v71 = @"Update";
        }
        *(_DWORD *)long long buf = 138543618;
        unsigned int v103 = v71;
        __int16 v104 = 2112;
        uint64_t v105 = v69;
        _os_log_impl(&dword_194F3C000, v70, OS_LOG_TYPE_DEFAULT, "[NowPlayingInfo] Setting nowPlayingInfo with mergePolicy %{public}@: %@", buf, 0x16u);
      }
      id v88 = v11;

      uint64_t v72 = _MRLogForCategory(1uLL);
      if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        unsigned int v103 = (__CFString *)v82;
        _os_log_impl(&dword_194F3C000, v72, OS_LOG_TYPE_DEFAULT, "[NowPlayingInfo] Setting nowPlayingInfo artwork: %@", buf, 0xCu);
      }

      uint64_t v73 = [[MRContentItem alloc] initWithNowPlayingInfo:v32];
      MRContentItemSetHasArtworkData(v73, v82 != 0);
      if (v95)
      {
        char v74 = +[MRContentItem extractedIdentifierFromNowPlayingInfo:](MRContentItem, "extractedIdentifierFromNowPlayingInfo:");
      }
      else
      {
        char v74 = 0;
      }
      if ([v74 isEqualToString:v65])
      {
        uint64_t v75 = [v20 subscriptionController];
        BOOL v76 = [v75 requestForSubscribedContentItemIdentifier:v65];

        __int16 v31 = v82;
        if (v76)
        {
          uint64_t v77 = -[MRPlaybackQueueRequest initWithRange:]([MRPlaybackQueueRequest alloc], "initWithRange:", 0, 1);
          if ((IsEqual & 1) == 0)
          {
            if ([v76 includeLanguageOptions]
              && MRContentItemGetHasLanguageOptions(v73))
            {
              [(MRPlaybackQueueRequest *)v77 setIncludeLanguageOptions:1];
            }
            if ([v76 includeMetadata]) {
              [(MRPlaybackQueueRequest *)v77 setIncludeMetadata:1];
            }
          }
          if ((v61 & 1) == 0)
          {
            if (MRContentItemGetHasArtworkData(v73))
            {
              [(MRPlaybackQueueRequest *)v77 setArtworkWidth:600.0];
              [(MRPlaybackQueueRequest *)v77 setArtworkHeight:600.0];
            }
            [(MRPlaybackQueueRequest *)v77 setIncludeMetadata:1];
          }
          MRMediaRemotePlaybackQueueDataSourceContentItemChangedWithRequestForPlayer((uint64_t)v73, v77, (uint64_t)v98);
        }
        int v13 = v89;
        id v14 = v86;
      }
      else
      {
        int v13 = v89;
        if (v92 && MRMediaRemoteCurrentApplicationIsAirPlayReceiver())
        {
          uint64_t v78 = [v98 client];
          char v79 = [v78 skeleton];

          unsigned int v80 = [v98 origin];
          MRMediaRemoteSetClientProperties((uint64_t)v79, (uint64_t)v80, 0, 0);
        }
        MRMediaRemotePlaybackQueueDataSourceInvalidateWithNowPlayingContentItemForPlayer((uint64_t)v73, (uint64_t)v98);
        __int16 v31 = v82;
      }

      id v11 = v88;
      uint64_t v63 = v94;
      uint64_t v64 = v95;
      if (!v92) {
        goto LABEL_112;
      }
    }
    uint64_t v81 = _MRLogForCategory(1uLL);
    if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_194F3C000, v81, OS_LOG_TYPE_DEFAULT, "[NowPlayingInfo] Clearing nowPlayingInfo", buf, 2u);
    }

LABEL_112:
    uint64_t v24 = (void *)v97;
    (*(void (**)(uint64_t, void))(v97 + 16))(v97, 0);

    id v17 = v90;
    goto LABEL_113;
  }
  BOOL v22 = _MRLogForCategory(1uLL);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
    MRMediaRemoteSetNowPlayingInfoForPlayer_cold_1(v22);
  }

  id Error = (void *)MRMediaRemoteCreateError(2);
  uint64_t v24 = (void *)v97;
  (*(void (**)(uint64_t, void *))(v97 + 16))(v97, Error);
LABEL_113:
}

void MRMediaRemoteSetNowPlayingInfoWithMergePolicy(void *a1, int a2)
{
  id v4 = +[MROrigin localOrigin];
  MRMediaRemoteSetNowPlayingInfoForOriginWithMergePolicy((uint64_t)v4, a1, a2);
}

void MRMediaRemoteSetNowPlayingInfoForOrigin(uint64_t a1, void *a2)
{
}

void MRMediaRemoteSetNowPlayingInfo(void *a1)
{
  id v2 = +[MROrigin localOrigin];
  MRMediaRemoteSetNowPlayingInfoForOriginWithMergePolicy((uint64_t)v2, a1, 0);
}

uint64_t _MRAdjustVolumeMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v24 = objc_alloc_init(_MRRequestDetailsProtobuf);
        objc_storeStrong((id *)(a1 + 16), v24);
        if (!PBReaderPlaceMark() || (_MRRequestDetailsProtobufReadFrom((uint64_t)v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else if (v17 == 2)
      {
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v25;
      }
      else if (v17 == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 32) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_35;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_37:
        *(_DWORD *)(a1 + 8) = v20;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MRMediaRemoteSendCommand(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t MRMediaRemoteSendCommandToApp(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  id v13 = a7;
  id v14 = a6;
  int v15 = [[MRClient alloc] initWithProcessIdentifier:0 bundleIdentifier:a4];
  MRMediaRemoteSendCommandToClient(a1, a2, a3, (uint64_t)v15, a5, v14, v13);

  return 1;
}

uint64_t MRMediaRemoteSendCommandForOrigin(uint64_t a1, uint64_t a2, void *a3)
{
  return 1;
}

uint64_t MRMediaRemoteSendCommandWithReply(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  _OWORD v10[2] = __MRMediaRemoteSendCommandWithReply_block_invoke;
  v10[3] = &unk_1E57D4D40;
  id v11 = v7;
  id v8 = v7;
  MRMediaRemoteSendCommandToApp(a1, a2, 0, 0, 0, a3, v10);

  return 1;
}

uint64_t __MRMediaRemoteSendCommandWithReply_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

uint64_t MRMediaRemoteSendCommandForOriginWithReply(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  v12[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __MRMediaRemoteSendCommandForOriginWithReply_block_invoke;
  v12[3] = &unk_1E57D4D40;
  id v13 = v9;
  id v10 = v9;
  MRMediaRemoteSendCommandToApp(a2, a3, a1, 0, 0, a4, v12);

  return 1;
}

uint64_t __MRMediaRemoteSendCommandForOriginWithReply_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

uint64_t MRMediaRemoteSendCommandToClient(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  id v13 = a7;
  id v14 = a6;
  int v15 = [[MRPlayerPath alloc] initWithOrigin:a3 client:a4 player:0];
  MRMediaRemoteSendCommandToPlayer(a1, a2, v15, a5, v14, v13);

  return 1;
}

uint64_t MRMediaRemoteSendCommandToPlayer(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  id v11 = a6;
  v14[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __MRMediaRemoteSendCommandToPlayer_block_invoke;
  v14[3] = &unk_1E57D4DB8;
  id v15 = v11;
  id v12 = v11;
  _MRMediaRemoteSendCommandToPlayerWithResult(a1, a2, a3, a4, a5, v14);

  return 1;
}

void _MRMediaRemoteSendCommandToPlayer(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  if (MRMediaRemoteCommandRequiresOptions(a1) && [v13 isResolved])
  {
    id v16 = +[MRNowPlayingOriginClientManager sharedManager];
    unint64_t v17 = [v16 playerClientRequestsForPlayerPath:v13];

    char v18 = [v17 subscriptionController];
    [v18 augmentCommandOptions:v11 forCommand:a1];
  }
  if (MRMediaRemoteValidateOutgoingCommandOptions(a1, v11))
  {
    if ([v13 isLocal])
    {
      if (MRMediaRemoteCommandSupportsAttribution(a1))
      {
        unsigned int v19 = +[MRGroupSessionRequestManager sharedManager];
        [v19 augmentLocalCommandOptions:v11];
      }
      uint64_t v20 = MRGetSharedService();
      ClientModule = (void (**)(id, uint64_t, id, id))MRMediaRemoteServiceGetClientModule(v20);
      (*ClientModule)(v13, a1, v11, v15);
      goto LABEL_19;
    }
    uint64_t v23 = MRGetSharedService();
    id v24 = v12;
    id v25 = [v13 origin];
    id v26 = [v24 origin];
    __int16 v31 = (void *)v23;
    if (v25 == v26)
    {
    }
    else
    {
      int v27 = [v25 isEqual:v26];

      if (!v27)
      {
        uint32_t v28 = [v13 origin];
        char v30 = [v28 isLocal];

        id v29 = v31;
        if (v30)
        {
LABEL_18:
          v32[1] = v11;
          v32[[NSString stringWithFormat:@"com.apple.%@", 0] = a1;
          v32[2] = v24;
          MRMediaRemoteServiceSendCommand(v29, (uint64_t)v32, v14, v15);

          goto LABEL_19;
        }
        id v25 = v24;
        id v24 = (id)[v13 copy];
LABEL_17:

        goto LABEL_18;
      }
    }

    id v29 = v31;
    goto LABEL_17;
  }
  if (v15)
  {
    unint64_t v22 = +[MRCommandResult commandResultWithSendError:7];
    (*((void (**)(id, void *))v15 + 2))(v15, v22);
  }
LABEL_19:
}

uint64_t _MRMediaRemoteSendCommandToPlayerWithResult(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  id v11 = a2;
  id v12 = a3;
  id v13 = a5;
  id v14 = a6;
  if (!v13)
  {
    id v13 = MEMORY[0x1E4F14428];
    id v15 = MEMORY[0x1E4F14428];
  }
  if (a1 != 116)
  {
    uint64_t v17 = [MEMORY[0x1E4F1C9C8] date];
    if (a1 == 122 || !a1)
    {
      char v18 = _MRLogForCategory(2uLL);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v19 = MRMediaRemoteCopyCommandDescription(a1);
        *(_DWORD *)long long buf = 138412546;
        int v61 = v19;
        __int16 v62 = 2112;
        uint64_t v63 = v17;
        _os_log_impl(&dword_194F3C000, v18, OS_LOG_TYPE_DEFAULT, "[MRSendCommand] WHAPRO: Sending %@ Command with Timestamp: %@", buf, 0x16u);
      }
    }
    __int16 v46 = (void *)v17;
    qos_class_t v45 = qos_class_self();
    id v47 = v11;
    uint64_t v20 = MRMediaRemoteResolveCommandOptions(v11, a4);
    uint64_t v21 = MRMediaRemoteCopyCommandDescription(a1);
    id v22 = objc_alloc(MEMORY[0x1E4F28E78]);
    uint64_t v23 = MRMediaRemoteCommandCreateDescription(a1, v20, 1);
    id v24 = (void *)[v22 initWithFormat:@"%@<%@>", v23, 0];

    if (v12) {
      [v24 appendFormat:@" for %@", v12];
    }
    id v25 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138543362;
      int v61 = v24;
      _os_log_impl(&dword_194F3C000, v25, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
    }

    id v26 = _MRLogForCategory(2uLL);
    int v27 = [v20 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
    os_signpost_id_t v28 = [v27 hash];

    if (v28 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v26))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl(&dword_194F3C000, v26, OS_SIGNPOST_INTERVAL_BEGIN, v28, "SendCommand", (const char *)&unk_195251F31, buf, 2u);
    }

    id v29 = _MRLogForCategory(2uLL);
    char v30 = [v20 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
    os_signpost_id_t v31 = [v30 hash];

    if (v31 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v29))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl(&dword_194F3C000, v29, OS_SIGNPOST_INTERVAL_BEGIN, v31, "SendCommandWithResult", (const char *)&unk_195251F31, buf, 2u);
    }

    id v32 = [NSString alloc];
    id v33 = [v20 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
    uint64_t v34 = (void *)[v32 initWithFormat:@"com.apple.mediaremote.command.%@.%@", v21, v33];

    id v16 = v34;
    __int16 v35 = (const char *)[v16 UTF8String];
    uint64_t v36 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    qos_class_t v37 = qos_class_self();
    uint64_t v38 = dispatch_queue_attr_make_with_qos_class(v36, v37, 0);
    dispatch_queue_t v39 = dispatch_queue_create(v35, v38);

    v48[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v48[1] = 3221225472;
    v48[2] = ___MRMediaRemoteSendCommandToPlayerWithResult_block_invoke_25;
    v48[3] = &unk_1E57D4D90;
    qos_class_t v56 = v45;
    int v57 = a1;
    id v49 = v20;
    id v50 = v46;
    id v51 = v12;
    id v55 = v14;
    double v52 = v13;
    id v53 = v21;
    dispatch_queue_t v54 = v39;
    int v40 = v39;
    id v41 = v21;
    id v42 = v46;
    id v43 = v20;
    MRMediaRemoteNowPlayingResolvePlayerPath(v51, v40, v48);

    id v11 = v47;
    goto LABEL_22;
  }
  if (v14)
  {
    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = ___MRMediaRemoteSendCommandToPlayerWithResult_block_invoke;
    block[3] = &unk_1E57D0FC0;
    id v59 = v14;
    dispatch_async(v13, block);
    id v16 = v59;
LABEL_22:
  }
  return 1;
}

void __MRMediaRemoteSendCommandToPlayer_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = a2;
    uint64_t v4 = [v3 sendError];
    id v5 = [v3 handlerReturnStatuses];

    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, v4, v5);
  }
}

uint64_t MRMediaRemoteSendCommandToPlayerWithResult(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  return 1;
}

uint64_t MRMediaRemoteBroadcastCommand(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v11 = a5;
  id v12 = a6;
  if (!v11)
  {
    id v11 = (id)MEMORY[0x1E4F14428];
    id v13 = MEMORY[0x1E4F14428];
  }
  id v14 = [MEMORY[0x1E4F1C9C8] date];
  id v15 = MRMediaRemoteResolveCommandOptions(a2, a4);
  [v15 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:@"kMRMediaRemoteOptionCommandBroadcasted"];
  id v16 = [[MRPlayerPath alloc] initWithOrigin:a3 client:0 player:0];
  id v17 = [NSString alloc];
  char v18 = MRMediaRemoteCommandCreateDescription(a1, v15, 1);
  unsigned int v19 = (void *)[v17 initWithFormat:@"%@%@", @"Broadcast", v18];

  uint64_t v20 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", v19, 0];
  uint64_t v21 = v20;
  if (v16) {
    [v20 appendFormat:@" for %@", v16];
  }
  id v22 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    int buf = 138543362;
    *(void *)buf_4 = v21;
    _os_log_impl(&dword_194F3C000, v22, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", (uint8_t *)&buf, 0xCu);
  }

  uint64_t v23 = (void *)MRGetSharedService();
  *(_DWORD *)buf_4 = 0;
  *(void *)&buf_4[4] = v15;
  int buf = a1;
  qos_class_t v37 = v16;
  v29[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v29[1] = 3221225472;
  v29[2] = __MRMediaRemoteBroadcastCommand_block_invoke;
  v29[3] = &unk_1E57D4DE0;
  int v34 = a1;
  id v30 = v15;
  os_signpost_id_t v31 = v16;
  id v32 = v14;
  id v33 = v12;
  id v24 = v12;
  id v25 = v14;
  id v26 = v16;
  id v27 = v15;
  MRMediaRemoteServiceBroadcastCommand(v23, (void **)&buf, v11, v29);

  return 1;
}

void __MRMediaRemoteBroadcastCommand_block_invoke(uint64_t a1, uint64_t a2, __CFString *a3)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v6 = [NSString alloc];
  id v7 = MRMediaRemoteCommandCreateDescription(*(unsigned int *)(a1 + 64), *(void **)(a1 + 32), 0);
  id v8 = (void *)[v6 initWithFormat:@"%@%@", @"Broadcast", v7];

  id v9 = (__CFString *)MRMediaRemoteCopySendCommandErrorDescription(a2);
  if (a3 && !v9)
  {
    uint64_t v10 = *(void *)(a1 + 40);
    id v11 = _MRLogForCategory(0xAuLL);
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    if (v10)
    {
      if (!v12) {
        goto LABEL_22;
      }
      uint64_t v13 = *(void *)(a1 + 40);
      id v14 = [MEMORY[0x1E4F1C9C8] date];
      [(__CFString *)v14 timeIntervalSinceDate:*(void *)(a1 + 48)];
      *(_DWORD *)int buf = 138544386;
      id v42 = v8;
      __int16 v43 = 2114;
      uint64_t v44 = 0;
      __int16 v45 = 2112;
      __int16 v46 = a3;
      __int16 v47 = 2114;
      uint64_t v48 = v13;
      __int16 v49 = 2048;
      uint64_t v50 = v15;
      id v16 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
      id v17 = v11;
      uint32_t v18 = 52;
      goto LABEL_16;
    }
    if (!v12) {
      goto LABEL_22;
    }
    id v14 = [MEMORY[0x1E4F1C9C8] date];
    [(__CFString *)v14 timeIntervalSinceDate:*(void *)(a1 + 48)];
    *(_DWORD *)int buf = 138544130;
    id v42 = v8;
    __int16 v43 = 2114;
    uint64_t v44 = 0;
    __int16 v45 = 2112;
    __int16 v46 = a3;
    __int16 v47 = 2048;
    uint64_t v48 = v32;
    id v16 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
    goto LABEL_15;
  }
  unsigned int v19 = (__CFString *)MRMediaRemoteCopySendCommandErrorDescription(a2);

  uint64_t v20 = *(void *)(a1 + 40);
  uint64_t v21 = _MRLogForCategory(0xAuLL);
  id v11 = v21;
  if (v19)
  {
    BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);
    if (v20)
    {
      if (!v22) {
        goto LABEL_22;
      }
      uint64_t v23 = (__CFString *)MRMediaRemoteCopySendCommandErrorDescription(a2);
      uint64_t v24 = *(void *)(a1 + 40);
      id v25 = (void *)MEMORY[0x1E4F1C9C8];
      id v14 = v23;
      id v26 = [v25 date];
      [v26 timeIntervalSinceDate:*(void *)(a1 + 48)];
      uint64_t v28 = v27;

      *(_DWORD *)int buf = 138544386;
      id v42 = v8;
      __int16 v43 = 2114;
      uint64_t v44 = 0;
      __int16 v45 = 2114;
      __int16 v46 = v23;
      __int16 v47 = 2114;
      uint64_t v48 = v24;
      __int16 v49 = 2048;
      uint64_t v50 = v28;
      _os_log_error_impl(&dword_194F3C000, v11, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);

      goto LABEL_17;
    }
    if (v22)
    {
      id v33 = (__CFString *)MRMediaRemoteCopySendCommandErrorDescription(a2);
      int v34 = (void *)MEMORY[0x1E4F1C9C8];
      __int16 v35 = v33;
      uint64_t v36 = [v34 date];
      [v36 timeIntervalSinceDate:*(void *)(a1 + 48)];
      uint64_t v38 = v37;

      *(_DWORD *)int buf = 138544130;
      id v42 = v8;
      __int16 v43 = 2114;
      uint64_t v44 = 0;
      __int16 v45 = 2114;
      __int16 v46 = v33;
      __int16 v47 = 2048;
      uint64_t v48 = v38;
      _os_log_error_impl(&dword_194F3C000, v11, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", buf, 0x2Au);
    }
  }
  else
  {
    BOOL v29 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);
    if (v20)
    {
      if (!v29) {
        goto LABEL_22;
      }
      id v30 = *(__CFString **)(a1 + 40);
      id v14 = [MEMORY[0x1E4F1C9C8] date];
      [(__CFString *)v14 timeIntervalSinceDate:*(void *)(a1 + 48)];
      *(_DWORD *)int buf = 138544130;
      id v42 = v8;
      __int16 v43 = 2114;
      uint64_t v44 = 0;
      __int16 v45 = 2114;
      __int16 v46 = v30;
      __int16 v47 = 2048;
      uint64_t v48 = v31;
      id v16 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
LABEL_15:
      id v17 = v11;
      uint32_t v18 = 42;
LABEL_16:
      _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, v16, buf, v18);
LABEL_17:

      goto LABEL_22;
    }
    if (v29)
    {
      id v14 = [MEMORY[0x1E4F1C9C8] date];
      [(__CFString *)v14 timeIntervalSinceDate:*(void *)(a1 + 48)];
      *(_DWORD *)int buf = 138543874;
      id v42 = v8;
      __int16 v43 = 2114;
      uint64_t v44 = 0;
      __int16 v45 = 2048;
      __int16 v46 = v39;
      id v16 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      id v17 = v11;
      uint32_t v18 = 32;
      goto LABEL_16;
    }
  }
LABEL_22:

  uint64_t v40 = *(void *)(a1 + 56);
  if (v40) {
    (*(void (**)(uint64_t, uint64_t, __CFString *))(v40 + 16))(v40, a2, a3);
  }
}

void MRMediaRemoteSetElapsedTime()
{
  v3[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = @"kMRMediaRemoteOptionPlaybackPosition";
  id v0 = objc_msgSend(NSNumber, "numberWithDouble:");
  v3[[NSString stringWithFormat:@"com.apple.%@", 0] = v0;
  id v1 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v3 forKeys:&v2 count:1];

  MRMediaRemoteSendCommandToApp(24, v1, 0, 0, 0, 0, 0);
}

void MRMediaRemoteSetPlaybackSpeed(uint64_t a1)
{
  v4[1] = *MEMORY[0x1E4F143B8];
  id v3 = @"kMRMediaRemoteOptionPredefinedPlaybackRate";
  id v1 = [NSNumber numberWithInt:a1];
  v4[[NSString stringWithFormat:@"com.apple.%@", 0] = v1;
  uint64_t v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v4 forKeys:&v3 count:1];

  MRMediaRemoteSendCommandToApp(19, v2, 0, 0, 0, 0, 0);
}

void MRMediaRemoteSetRepeatMode(uint64_t a1)
{
  v4[1] = *MEMORY[0x1E4F143B8];
  id v3 = @"kMRMediaRemoteOptionRepeatMode";
  id v1 = [NSNumber numberWithInt:a1];
  v4[[NSString stringWithFormat:@"com.apple.%@", 0] = v1;
  uint64_t v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v4 forKeys:&v3 count:1];

  MRMediaRemoteSendCommandToApp(25, v2, 0, 0, 0, 0, 0);
}

void MRMediaRemoteSetShuffleMode(uint64_t a1)
{
  v4[1] = *MEMORY[0x1E4F143B8];
  id v3 = @"kMRMediaRemoteOptionShuffleMode";
  id v1 = [NSNumber numberWithInt:a1];
  v4[[NSString stringWithFormat:@"com.apple.%@", 0] = v1;
  uint64_t v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v4 forKeys:&v3 count:1];

  MRMediaRemoteSendCommandToApp(26, v2, 0, 0, 0, 0, 0);
}

id MRMediaRemoteRestrictCommandClients(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[MRRestrictedCommandClientsManager sharedManager];
  id v3 = [v2 restrictCommandClientsTo:v1];

  return v3;
}

BOOL __trackAnalyticsSendCommand_block_invoke(uint64_t a1, void *a2)
{
  return [a2 intValue] != 0;
}

void __trackAnalyticsSendCommand_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 deviceClass];
  v4[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  void v4[2] = __trackAnalyticsSendCommand_block_invoke_3;
  v4[3] = &unk_1E57D4E28;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v7 = *(id *)(a1 + 48);
  uint64_t v11 = v3;
  id v8 = *(id *)(a1 + 56);
  int v12 = *(_DWORD *)(a1 + 80);
  int v13 = *(_DWORD *)(a1 + 84);
  __int16 v14 = *(_WORD *)(a1 + 88);
  id v9 = *(id *)(a1 + 64);
  id v10 = *(id *)(a1 + 72);
  MRAnalyticsSendEvent(@"com.apple.mediaremote.send-mr-command", 0, v4);
}

id __trackAnalyticsSendCommand_block_invoke_3(uint64_t a1)
{
  v44[17] = *MEMORY[0x1E4F143B8];
  id v38 = objc_alloc(MEMORY[0x1E4F1CA60]);
  v43[[NSString stringWithFormat:@"com.apple.%@", 0] = @"duration";
  uint64_t v2 = NSNumber;
  [*(id *)(a1 + 32) timeIntervalSinceNow];
  uint64_t v4 = [v2 numberWithDouble:fabs(v3)];
  id v5 = *(void **)(a1 + 40);
  if (v5) {
    id v6 = *(__CFString **)(a1 + 40);
  }
  else {
    id v6 = @"unknown";
  }
  id v42 = (void *)v4;
  v44[[NSString stringWithFormat:@"com.apple.%@", 0] = v4;
  v44[1] = v6;
  v43[1] = @"appBundle";
  v43[2] = @"appBundleInt";
  id v41 = [NSNumber numberWithInt:MRAnalyticsAppBundleIDStringToInt(v5)];
  v44[2] = v41;
  v43[3] = @"destinationAppBundle";
  uint64_t v40 = [*(id *)(a1 + 48) client];
  uint64_t v7 = [v40 bundleIdentifier];
  dispatch_queue_t v39 = (void *)v7;
  if (v7) {
    id v8 = (__CFString *)v7;
  }
  else {
    id v8 = @"unknown";
  }
  v44[3] = v8;
  v43[4] = @"destinationAppBundleInt";
  id v9 = NSNumber;
  uint64_t v37 = [*(id *)(a1 + 48) client];
  uint64_t v36 = [v37 bundleIdentifier];
  __int16 v35 = [v9 numberWithInt:MRAnalyticsAppBundleIDStringToInt(v36)];
  void v44[4] = v35;
  void v43[5] = @"originator";
  int v10 = MRAnalyticsCompositionForLocalDevice();
  int v34 = MRAnalyticsDeviceCompositionDescription(v10);
  v44[5] = v34;
  v43[6] = @"destination";
  int v11 = MRAnalyticsCompositionForDeviceClass(*(void *)(a1 + 80));
  uint64_t v12 = MRAnalyticsDeviceCompositionDescription(v11);
  uint64_t v13 = *(void *)(a1 + 56);
  id v33 = (void *)v12;
  v44[6] = v12;
  v44[7] = v13;
  v43[7] = @"commandDescription";
  v43[8] = @"isLocalDevice";
  uint64_t v32 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 92)];
  v44[8] = v32;
  v43[9] = @"isLocalApp";
  __int16 v14 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 93)];
  v44[9] = v14;
  v43[1[NSString stringWithFormat:@"com.apple.%@", 0] = @"sendError";
  uint64_t v15 = [NSNumber numberWithUnsignedInt:*(unsigned int *)(a1 + 88)];
  v44[1[NSString stringWithFormat:@"com.apple.%@", 0] = v15;
  v43[11] = @"directUserInteraction";
  id v16 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 94)];
  v44[11] = v16;
  v43[12] = @"targeted";
  id v17 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 95)];
  v44[12] = v17;
  v43[13] = @"placeholder";
  uint32_t v18 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 96)];
  v44[13] = v18;
  v43[14] = @"contextID";
  uint64_t v19 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 97)];
  uint64_t v20 = (void *)v19;
  uint64_t v21 = *(void **)(a1 + 64);
  if (v21) {
    BOOL v22 = *(__CFString **)(a1 + 64);
  }
  else {
    BOOL v22 = @"unknown";
  }
  v44[14] = v19;
  v44[15] = v22;
  v43[15] = @"remoteControlInterface";
  v43[16] = @"remoteControlInterfaceInt";
  uint64_t v23 = NSNumber;
  id v24 = v21;
  id v25 = v24;
  if (v21)
  {
    if ([v24 containsString:@"MediaAssistant"])
    {
      uint64_t v26 = 1;
    }
    else if ([v25 containsString:@"airplay"])
    {
      uint64_t v26 = 2;
    }
    else if ([v25 containsString:@"SoundBoard"])
    {
      uint64_t v26 = 3;
    }
    else if ([v25 containsString:@"AVRCP"])
    {
      uint64_t v26 = 4;
    }
    else if ([v25 containsString:@"Krono"])
    {
      uint64_t v26 = 5;
    }
    else if ([v25 containsString:@"Player.DataSource.PlaybackCommand"])
    {
      uint64_t v26 = 6;
    }
    else if ([v25 containsString:@"com.apple.NowPlayingCap.interfaceIdentifer"])
    {
      uint64_t v26 = 7;
    }
    else
    {
      uint64_t v26 = 0;
    }
  }
  else
  {
    uint64_t v26 = 149;
  }

  uint64_t v27 = [v23 numberWithInt:v26];
  v44[16] = v27;
  uint64_t v28 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v44 forKeys:v43 count:17];
  BOOL v29 = (void *)[v38 initWithDictionary:v28];

  uint64_t v30 = *(void *)(a1 + 72);
  if (v30) {
    [v29 setObject:v30 forKeyedSubscript:@"returnStatuses"];
  }

  return v29;
}

void sub_1950BE570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

BOOL _MRGetStateMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  double v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t _MRRemoveEndpointsMessageProtobufReadFrom(void *a1, uint64_t a2)
{
  double v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        id v17 = PBReaderReadString();
        if (v17) {
          [a1 addEndpointUIDs:v17];
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_1950C03A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950C041C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950C04A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _MRSetDiscoveryModeProtobufMessageReadFrom(uint64_t a1, uint64_t a2)
{
  double v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        id v24 = objc_alloc_init(_MRDiscoverySessionConfigurationProtobuf);
        objc_storeStrong((id *)(a1 + 8), v24);
        if (!PBReaderPlaceMark()
          || (_MRDiscoverySessionConfigurationProtobufReadFrom((uint64_t)v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v20 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0) {
              goto LABEL_45;
            }
            v25 += 7;
            BOOL v14 = v26++ >= 9;
            if (v14)
            {
              LODWORD(v20) = 0;
              goto LABEL_47;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v20) = 0;
          }
LABEL_47:
          uint64_t v31 = 16;
        }
        else
        {
          if (v17 != 1)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v3;
            unint64_t v22 = *(void *)(a2 + v21);
            if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0) {
              goto LABEL_41;
            }
            v18 += 7;
            BOOL v14 = v19++ >= 9;
            if (v14)
            {
              LODWORD(v20) = 0;
              goto LABEL_43;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v20) = 0;
          }
LABEL_43:
          uint64_t v31 = 20;
        }
        *(_DWORD *)(a1 + v31) = v20;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRAudioRouteProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  double v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_44;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_46;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_46:
          *(_DWORD *)(a1 + 16) = v19;
          continue;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          char v25 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v24;

          continue;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 24) |= 4u;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v28 = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_50:
          BOOL v38 = v28 != 0;
          uint64_t v39 = 21;
          goto LABEL_55;
        case 4u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v35 = *v3;
        unint64_t v36 = *(void *)(a2 + v35);
        if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
        *(void *)(a2 + v35) = v36 + 1;
        v34 |= (unint64_t)(v37 & 0x7F) << v32;
        if ((v37 & 0x80) == 0) {
          goto LABEL_52;
        }
        v32 += 7;
        BOOL v14 = v33++ >= 9;
        if (v14)
        {
          uint64_t v34 = 0;
          goto LABEL_54;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_52:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v34 = 0;
      }
LABEL_54:
      BOOL v38 = v34 != 0;
      uint64_t v39 = 20;
LABEL_55:
      *(unsigned char *)(a1 + v39) = v38;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

_OWORD *MRSystemAppPlaybackQueueCreate(const __CFAllocator *a1, int a2)
{
  uint64_t v4 = CFAllocatorAllocate(a1, 96, 0);
  _OWORD *v4 = 0u;
  v4[1] = 0u;
  void v4[2] = 0u;
  v4[3] = 0u;
  void v4[4] = 0u;
  v4[5] = 0u;
  *((_DWORD *)v4 + 2) = a2;
  *((unsigned char *)v4 + 12) = 0;
  *((_DWORD *)v4 + 12) = 0;
  *(void *)uint64_t v4 = a1;
  if (a1) {
    CFRetain(a1);
  }
  switch(a2)
  {
    case 1:
      *((void *)v4 + 10) = 0;
      break;
    case 2:
    case 3:
    case 5:
      *((_DWORD *)v4 + 16) = 0;
      break;
    case 6:
      goto LABEL_7;
    case 7:
      *((void *)v4 + 9) = 0;
LABEL_7:
      *((void *)v4 + 8) = 0;
      break;
    default:
      return v4;
  }
  return v4;
}

void MRSystemAppPlaybackQueueDestroy(void *ptr)
{
  if (!ptr) {
    MRSystemAppPlaybackQueueDestroy_cold_1();
  }
  switch(*((_DWORD *)ptr + 2))
  {
    case 1:
    case 7:
      id v6 = (const void *)ptr[8];
      if (v6)
      {
        CFRelease(v6);
        ptr[8] = 0;
      }
      goto LABEL_12;
    case 2:
      if (*((_DWORD *)ptr + 16) != 2) {
        goto LABEL_14;
      }
LABEL_12:
      id v5 = (char *)(ptr + 9);
      uint64_t v4 = (const void *)ptr[9];
      if (v4)
      {
LABEL_13:
        CFRelease(v4);
        *(void *)id v5 = 0;
      }
LABEL_14:
      int v7 = (const void *)ptr[2];
      if (v7)
      {
        CFRelease(v7);
        ptr[2] = 0;
      }
      char v8 = (const void *)ptr[3];
      if (v8)
      {
        CFRelease(v8);
        ptr[3] = 0;
      }
      unsigned int v9 = (const void *)ptr[5];
      if (v9)
      {
        CFRelease(v9);
        ptr[5] = 0;
      }
      unint64_t v10 = (const void *)ptr[7];
      if (v10)
      {
        CFRelease(v10);
        ptr[7] = 0;
      }
      uint64_t v11 = (const void *)*ptr;
      CFAllocatorDeallocate((CFAllocatorRef)*ptr, ptr);
      if (v11)
      {
        CFRelease(v11);
      }
      return;
    case 3:
    case 5:
      uint64_t v2 = (const void *)ptr[9];
      if (v2)
      {
        CFRelease(v2);
        ptr[9] = 0;
      }
      double v3 = (const void *)ptr[10];
      if (v3)
      {
        CFRelease(v3);
        ptr[1[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
      }
      id v5 = (char *)(ptr + 11);
      uint64_t v4 = (const void *)ptr[11];
      if (!v4) {
        goto LABEL_14;
      }
      goto LABEL_13;
    case 6:
      id v5 = (char *)(ptr + 8);
      uint64_t v4 = (const void *)ptr[8];
      if (!v4) {
        goto LABEL_14;
      }
      goto LABEL_13;
    default:
      goto LABEL_14;
  }
}

uint64_t MRSystemAppPlaybackQueueCopyDescription(uint64_t a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    uint64_t v2 = 0;
    switch(*(_DWORD *)(a1 + 8))
    {
      case 1:
        double v3 = (__CFString *)MRMediaRemoteCopyShuffleModeDescription(*(_DWORD *)(a1 + 80));
        char v8 = (__CFString *)MRMediaRemoteCopyRepeatModeDescription(*(_DWORD *)(v1 + 84));
        uint64_t v2 = [NSString stringWithFormat:@"queryData: %p, shuffleMode: %@, repeatMode: %@", *(void *)(v1 + 64), v3, v8];

        goto LABEL_8;
      case 2:
        int v9 = *(_DWORD *)(a1 + 64);
        if (v9 == 2)
        {
          [NSString stringWithFormat:@"stationStringID: %@", *(void *)(a1 + 72), v14];
          goto LABEL_15;
        }
        if (v9 == 1)
        {
          objc_msgSend(NSString, "stringWithFormat:", @"stationID: %lld", *(void *)(a1 + 72), v14);
LABEL_15:
          uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
          goto LABEL_18;
        }
LABEL_17:
        uint64_t v2 = 0;
LABEL_18:
        uint64_t v11 = (__CFString *)MRSystemAppPlaybackQueueCopyTypeDescription(*(_DWORD *)(v1 + 8));
        uint64_t v1 = [NSString stringWithFormat:@"<MRSystemAppPlaybackQueue %p, type: %@, %@>", v1, v11, v2];

        break;
      case 3:
      case 5:
        double v3 = (__CFString *)MRMediaRemoteCopyShuffleModeDescription(*(_DWORD *)(a1 + 64));
        uint64_t v2 = [NSString stringWithFormat:@"shuffleMode: %@, trackIDs: %@", v3, *(void *)(v1 + 72)];
LABEL_8:

        goto LABEL_18;
      case 6:
        CFURLRef v10 = *(const __CFURL **)(a1 + 64);
        if (!v10) {
          goto LABEL_17;
        }
        uint64_t v4 = NSString;
        CFStringRef v13 = CFURLGetString(v10);
        int v7 = @"seedTrack: %@";
LABEL_14:
        objc_msgSend(v4, "stringWithFormat:", v7, v13, v14);
        goto LABEL_15;
      case 7:
        uint64_t v4 = NSString;
        CFStringRef v6 = *(const __CFString **)(a1 + 64);
        CFDataRef Length = *(const __CFData **)(a1 + 72);
        if (Length) {
          CFDataRef Length = (const __CFData *)CFDataGetLength(Length);
        }
        CFStringRef v13 = v6;
        CFDataRef v14 = Length;
        int v7 = @"identifier: %@ data: <%ld>";
        goto LABEL_14;
      case 8:
        uint64_t v2 = @"Empty Queue";
        goto LABEL_18;
      default:
        goto LABEL_18;
    }
  }
  return v1;
}

CFStringRef MRSystemAppPlaybackQueueCopyTypeDescription(int a1)
{
  int v1 = a1 - 1;
  if (a1 - 1) <= 7 && ((0xF7u >> v1)) {
    return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], off_1E57D50B8[v1]);
  }
  else {
    return 0;
  }
}

uint64_t MRSystemAppPlaybackQueueGetType(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetType_cold_1();
  }
  return *(unsigned int *)(a1 + 8);
}

uint64_t MRSystemAppPlaybackQueueIsRequestingImmediatePlayback(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueIsRequestingImmediatePlayback_cold_1();
  }
  return *(unsigned __int8 *)(a1 + 12);
}

uint64_t MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback(uint64_t result, char a2)
{
  if (!result) {
    MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback_cold_1();
  }
  *(unsigned char *)(result + 12) = a2;
  return result;
}

uint64_t MRSystemAppPlaybackQueueGetSiriRecommendationIdentifier(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetSiriRecommendationIdentifier_cold_1();
  }
  return *(void *)(a1 + 16);
}

void MRSystemAppPlaybackQueueSetSiriRecommendationIdentifier(uint64_t a1, const __CFString *a2)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetSiriRecommendationIdentifier_cold_1();
  }
  if (a2) {
    CFStringRef Copy = CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a2);
  }
  else {
    CFStringRef Copy = 0;
  }
  uint64_t v4 = *(const void **)(a1 + 16);
  if (v4) {
    CFRelease(v4);
  }
  *(void *)(a1 + 16) = Copy;
}

uint64_t MRSystemAppPlaybackQueueGetSiriAssetInfo(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetSiriAssetInfo_cold_1();
  }
  return *(void *)(a1 + 24);
}

void MRSystemAppPlaybackQueueSetSiriAssetInfo(uint64_t a1, const __CFString *a2)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetSiriAssetInfo_cold_1();
  }
  if (a2) {
    CFStringRef Copy = CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a2);
  }
  else {
    CFStringRef Copy = 0;
  }
  uint64_t v4 = *(const void **)(a1 + 24);
  if (v4) {
    CFRelease(v4);
  }
  *(void *)(a1 + 24) = Copy;
}

uint64_t MRSystemAppPlaybackQueueCopyFeatureName(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueCopyFeatureName_cold_1();
  }
  int v1 = *(void **)(a1 + 32);

  return [v1 copy];
}

void MRSystemAppPlaybackQueueSetFeatureName(uint64_t a1, const __CFString *a2)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetFeatureName_cold_1();
  }
  if (a2) {
    CFStringRef Copy = CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a2);
  }
  else {
    CFStringRef Copy = 0;
  }
  uint64_t v4 = *(const void **)(a1 + 32);
  if (v4) {
    CFRelease(v4);
  }
  *(void *)(a1 + 32) = Copy;
}

uint64_t MRSystemAppPlaybackQueueGetSiriWHAMetricsInfo(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetSiriWHAMetricsInfo_cold_1();
  }
  return *(void *)(a1 + 40);
}

void MRSystemAppPlaybackQueueSetSiriWHAMetricsInfo(uint64_t a1, const __CFDictionary *a2)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetSiriWHAMetricsInfo_cold_1();
  }
  if (a2) {
    CFDictionaryRef Copy = CFDictionaryCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a2);
  }
  else {
    CFDictionaryRef Copy = 0;
  }
  uint64_t v4 = *(const void **)(a1 + 40);
  if (v4) {
    CFRelease(v4);
  }
  *(void *)(a1 + 40) = Copy;
}

BOOL MRSystemAppPlaybackQueueShouldOverrideManuallyCuratedQueue(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueShouldOverrideManuallyCuratedQueue_cold_1();
  }
  return *(_DWORD *)(a1 + 48) != 1;
}

uint64_t MRSystemAppPlaybackQueueGetReplaceIntent(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueShouldOverrideManuallyCuratedQueue_cold_1();
  }
  return *(unsigned int *)(a1 + 48);
}

uint64_t MRSystemAppPlaybackQueueSetShouldOverrideManuallyCuratedQueue(uint64_t result, int a2)
{
  if (!result) {
    MRSystemAppPlaybackQueueSetShouldOverrideManuallyCuratedQueue_cold_1();
  }
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t MRSystemAppPlaybackQueueSetReplaceIntent(uint64_t result, int a2)
{
  if (!result) {
    MRSystemAppPlaybackQueueSetShouldOverrideManuallyCuratedQueue_cold_1();
  }
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t MRSystemAppPlaybackQueueGetUserInfo(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetUserInfo_cold_1();
  }
  return *(void *)(a1 + 56);
}

void MRSystemAppPlaybackQueueSetUserInfo(uint64_t a1, const __CFDictionary *a2)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetUserInfo_cold_1();
  }
  if (a2) {
    CFDictionaryRef Copy = CFDictionaryCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a2);
  }
  else {
    CFDictionaryRef Copy = 0;
  }
  uint64_t v4 = *(const void **)(a1 + 56);
  if (v4) {
    CFRelease(v4);
  }
  *(void *)(a1 + 56) = Copy;
}

uint64_t MRSystemAppPlaybackQueueGetLocalQueryData(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetLocalQueryData_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 1) {
    MRSystemAppPlaybackQueueGetLocalQueryData_cold_2();
  }
  return *(void *)(a1 + 64);
}

void MRSystemAppPlaybackQueueSetLocalQueryData(uint64_t a1, CFTypeRef cf)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetLocalQueryData_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 1) {
    MRSystemAppPlaybackQueueSetLocalQueryData_cold_2();
  }
  uint64_t v4 = *(const void **)(a1 + 64);
  if (v4) {
    CFRelease(v4);
  }
  *(void *)(a1 + 64) = cf;
  if (cf)
  {
    CFRetain(cf);
  }
}

uint64_t MRSystemAppPlaybackQueueGetLocalQueryFirstItemMultiverseIDData(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetLocalQueryFirstItemMultiverseIDData_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 1) {
    MRSystemAppPlaybackQueueGetLocalQueryFirstItemMultiverseIDData_cold_2();
  }
  return *(void *)(a1 + 72);
}

void MRSystemAppPlaybackQueueSetLocalQueryFirstItemMultiverseIDData(uint64_t a1, CFTypeRef cf)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetLocalQueryFirstItemMultiverseIDData_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 1) {
    MRSystemAppPlaybackQueueSetLocalQueryFirstItemMultiverseIDData_cold_2();
  }
  uint64_t v4 = *(const void **)(a1 + 72);
  if (v4) {
    CFRelease(v4);
  }
  *(void *)(a1 + 72) = cf;
  if (cf)
  {
    CFRetain(cf);
  }
}

uint64_t MRSystemAppPlaybackQueueGetLocalQueryFirstItemPID(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetLocalQueryFirstItemPID_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 1) {
    MRSystemAppPlaybackQueueGetLocalQueryFirstItemPID_cold_2();
  }
  return *(void *)(a1 + 88);
}

uint64_t MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID(uint64_t result, uint64_t a2)
{
  if (!result) {
    MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID_cold_1();
  }
  if (*(_DWORD *)(result + 8) != 1) {
    MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID_cold_2();
  }
  *(void *)(result + 88) = a2;
  return result;
}

uint64_t MRSystemAppPlaybackQueueGetLocalQueryShuffleMode(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetLocalQueryShuffleMode_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 1) {
    MRSystemAppPlaybackQueueGetLocalQueryShuffleMode_cold_2();
  }
  return *(unsigned int *)(a1 + 80);
}

uint64_t MRSystemAppPlaybackQueueSetLocalQueryShuffleMode(uint64_t result, int a2)
{
  if (!result) {
    MRSystemAppPlaybackQueueSetLocalQueryShuffleMode_cold_1();
  }
  if (*(_DWORD *)(result + 8) != 1) {
    MRSystemAppPlaybackQueueSetLocalQueryShuffleMode_cold_2();
  }
  *(_DWORD *)(result + 80) = a2;
  return result;
}

uint64_t MRSystemAppPlaybackQueueGetLocalQueryRepeatMode(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetLocalQueryRepeatMode_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 1) {
    MRSystemAppPlaybackQueueGetLocalQueryRepeatMode_cold_2();
  }
  return *(unsigned int *)(a1 + 84);
}

uint64_t MRSystemAppPlaybackQueueSetLocalQueryRepeatMode(uint64_t result, int a2)
{
  if (!result) {
    MRSystemAppPlaybackQueueSetLocalQueryRepeatMode_cold_1();
  }
  if (*(_DWORD *)(result + 8) != 1) {
    MRSystemAppPlaybackQueueSetLocalQueryRepeatMode_cold_2();
  }
  *(_DWORD *)(result + 84) = a2;
  return result;
}

uint64_t MRSystemAppPlaybackQueueGetRadioStationIDType(uint64_t result)
{
  if (result)
  {
    if (*(_DWORD *)(result + 8) == 2) {
      return *(unsigned int *)(result + 64);
    }
    else {
      return 0;
    }
  }
  return result;
}

void MRSystemAppPlaybackQueueSetRadioStationIDType(uint64_t a1, int a2)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetRadioStationIDType_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 2) {
    MRSystemAppPlaybackQueueSetRadioStationIDType_cold_2();
  }
  int v4 = *(_DWORD *)(a1 + 64);
  if (v4 != 2)
  {
    if (v4 != 1) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  id v5 = *(const void **)(a1 + 72);
  if (v5)
  {
    CFRelease(v5);
LABEL_8:
    *(void *)(a1 + 72) = 0;
  }
LABEL_9:
  *(_DWORD *)(a1 + 64) = a2;
}

uint64_t MRSystemAppPlaybackQueueGetRadioStationIntegerPID(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetRadioStationIntegerPID_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) == 2 && *(_DWORD *)(a1 + 64) == 1) {
    return *(void *)(a1 + 72);
  }
  else {
    return 0;
  }
}

uint64_t MRSystemAppPlaybackQueueSetRadioStationIntegerPID(uint64_t result, uint64_t a2)
{
  if (!result) {
    MRSystemAppPlaybackQueueSetRadioStationIntegerPID_cold_1();
  }
  if (*(_DWORD *)(result + 8) != 2) {
    MRSystemAppPlaybackQueueSetRadioStationIntegerPID_cold_3();
  }
  if (*(_DWORD *)(result + 64) != 1) {
    MRSystemAppPlaybackQueueSetRadioStationIntegerPID_cold_2();
  }
  *(void *)(result + 72) = a2;
  return result;
}

CFStringRef MRSystemAppPlaybackQueueCopyRadioStationStringIdentifier(uint64_t a1)
{
  if (a1 && *(_DWORD *)(a1 + 8) == 2 && *(_DWORD *)(a1 + 64) == 2 && (CFStringRef v1 = *(const __CFString **)(a1 + 72)) != 0) {
    return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1);
  }
  else {
    return 0;
  }
}

void MRSystemAppPlaybackQueueSetRadioStationStringIdentifier(uint64_t a1, CFStringRef theString)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetRadioStationStringIdentifier_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 2) {
    MRSystemAppPlaybackQueueSetRadioStationStringIdentifier_cold_3();
  }
  if (*(_DWORD *)(a1 + 64) != 2) {
    MRSystemAppPlaybackQueueSetRadioStationStringIdentifier_cold_2();
  }
  int v4 = *(const void **)(a1 + 72);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 72) = 0;
  }
  if (theString) {
    *(void *)(a1 + 72) = CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], theString);
  }
}

CFArrayRef MRSystemAppPlaybackQueueCopyGenericTrackIdentifiers(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueCopyGenericTrackIdentifiers_cold_1();
  }
  int v1 = *(_DWORD *)(a1 + 8);
  if (v1 != 3 && v1 != 5) {
    MRSystemAppPlaybackQueueCopyGenericTrackIdentifiers_cold_2();
  }
  CFArrayRef v3 = *(const __CFArray **)(a1 + 72);
  if (!v3) {
    return 0;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];

  return CFArrayCreateCopy(v4, v3);
}

void MRSystemAppPlaybackQueueSetGenericTrackIdentifiers(uint64_t a1, CFArrayRef theArray)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetGenericTrackIdentifiers_cold_1();
  }
  int v3 = *(_DWORD *)(a1 + 8);
  if (v3 != 3 && v3 != 5) {
    MRSystemAppPlaybackQueueSetGenericTrackIdentifiers_cold_2();
  }
  CFStringRef v6 = *(const void **)(a1 + 72);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(a1 + 72) = 0;
  }
  if (theArray) {
    *(void *)(a1 + 72) = CFArrayCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], theArray);
  }
}

uint64_t MRSystemAppPlaybackQueueGetFirstItemGenericTrackIdentifier(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetFirstItemGenericTrackIdentifier_cold_1();
  }
  int v1 = *(_DWORD *)(a1 + 8);
  if (v1 != 3 && v1 != 5) {
    MRSystemAppPlaybackQueueGetFirstItemGenericTrackIdentifier_cold_2();
  }
  return *(void *)(a1 + 80);
}

void MRSystemAppPlaybackQueueSetFirstItemGenericTrackIdentifier(uint64_t a1, const __CFString *a2)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetFirstItemGenericTrackIdentifier_cold_1();
  }
  int v3 = *(_DWORD *)(a1 + 8);
  if (v3 != 3 && v3 != 5) {
    MRSystemAppPlaybackQueueSetFirstItemGenericTrackIdentifier_cold_2();
  }
  id v5 = *(const void **)(a1 + 80);
  if (a2) {
    CFStringRef Copy = CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a2);
  }
  else {
    CFStringRef Copy = 0;
  }
  *(void *)(a1 + 80) = Copy;
  if (v5)
  {
    CFRelease(v5);
  }
}

uint64_t MRSystemAppPlaybackQueueGetTracklistShuffleMode(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetTracklistShuffleMode_cold_1();
  }
  int v1 = *(_DWORD *)(a1 + 8);
  if (v1 != 3 && v1 != 5) {
    MRSystemAppPlaybackQueueGetTracklistShuffleMode_cold_2();
  }
  return *(unsigned int *)(a1 + 64);
}

uint64_t MRSystemAppPlaybackQueueSetTracklistShuffleMode(uint64_t result, int a2)
{
  if (!result) {
    MRSystemAppPlaybackQueueSetTracklistShuffleMode_cold_1();
  }
  int v2 = *(_DWORD *)(result + 8);
  if (v2 != 3 && v2 != 5) {
    MRSystemAppPlaybackQueueSetTracklistShuffleMode_cold_2();
  }
  *(_DWORD *)(result + 64) = a2;
  return result;
}

uint64_t MRSystemAppPlaybackQueueGetTracklistRepeatMode(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetTracklistRepeatMode_cold_1();
  }
  int v1 = *(_DWORD *)(a1 + 8);
  if (v1 != 3 && v1 != 5) {
    MRSystemAppPlaybackQueueGetTracklistRepeatMode_cold_2();
  }
  return *(unsigned int *)(a1 + 68);
}

uint64_t MRSystemAppPlaybackQueueSetTracklistRepeatMode(uint64_t result, int a2)
{
  if (!result) {
    MRSystemAppPlaybackQueueSetTracklistRepeatMode_cold_1();
  }
  int v2 = *(_DWORD *)(result + 8);
  if (v2 != 3 && v2 != 5) {
    MRSystemAppPlaybackQueueSetTracklistRepeatMode_cold_2();
  }
  *(_DWORD *)(result + 68) = a2;
  return result;
}

uint64_t MRSystemAppPlaybackQueueGetTracklistCollectionIdentifierSetData(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetTracklistCollectionIdentifierSetData_cold_1();
  }
  int v1 = *(_DWORD *)(a1 + 8);
  if (v1 != 3 && v1 != 5) {
    MRSystemAppPlaybackQueueGetTracklistCollectionIdentifierSetData_cold_2();
  }
  return *(void *)(a1 + 88);
}

void MRSystemAppPlaybackQueueSetTracklistCollectionIdentifierSetData(uint64_t a1, CFTypeRef cf)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetTracklistCollectionIdentifierSetData_cold_1();
  }
  int v3 = *(_DWORD *)(a1 + 8);
  if (v3 != 3 && v3 != 5) {
    MRSystemAppPlaybackQueueSetTracklistCollectionIdentifierSetData_cold_2();
  }
  CFStringRef v6 = *(const void **)(a1 + 88);
  if (v6) {
    CFRelease(v6);
  }
  *(void *)(a1 + 88) = cf;
  if (cf)
  {
    CFRetain(cf);
  }
}

CFURLRef MRSystemAppPlaybackQueueCopyGeniusSeedTrack(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueCopyGeniusSeedTrack_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 6) {
    MRSystemAppPlaybackQueueCopyGeniusSeedTrack_cold_2();
  }
  CFURLRef result = *(const __CFURL **)(a1 + 64);
  if (result)
  {
    CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFStringRef v4 = CFURLGetString(result);
    CFURLRef v5 = CFURLGetBaseURL(*(CFURLRef *)(a1 + 64));
    return CFURLCreateWithString(v3, v4, v5);
  }
  return result;
}

void MRSystemAppPlaybackQueueSetGeniusSeedTrack(uint64_t a1, CFURLRef anURL)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetGeniusSeedTrack_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 6) {
    MRSystemAppPlaybackQueueSetGeniusSeedTrack_cold_2();
  }
  CFStringRef v4 = *(const void **)(a1 + 64);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 64) = 0;
  }
  if (anURL)
  {
    CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFStringRef v6 = CFURLGetString(anURL);
    CFURLRef v7 = CFURLGetBaseURL(anURL);
    *(void *)(a1 + 64) = CFURLCreateWithString(v5, v6, v7);
  }
}

CFStringRef MRSystemAppPlaybackQueueCopyCustomDataIdentifier(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueCopyCustomDataIdentifier_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 7) {
    MRSystemAppPlaybackQueueCopyCustomDataIdentifier_cold_2();
  }
  CFStringRef v1 = *(const __CFString **)(a1 + 64);
  if (!v1) {
    return 0;
  }
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];

  return CFStringCreateCopy(v2, v1);
}

CFStringRef MRSystemAppPlaybackQueueSetCustomDataIdentifier(uint64_t a1, CFStringRef theString)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetCustomDataIdentifier_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 7) {
    MRSystemAppPlaybackQueueSetCustomDataIdentifier_cold_2();
  }
  CFStringRef v4 = *(const void **)(a1 + 64);
  if (v4) {
    CFRelease(v4);
  }
  if (theString) {
    CFStringRef result = CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], theString);
  }
  else {
    CFStringRef result = 0;
  }
  *(void *)(a1 + 64) = result;
  return result;
}

CFTypeRef MRSystemAppPlaybackQueueCopyCustomData(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueCopyCustomData_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 7) {
    MRSystemAppPlaybackQueueCopyCustomData_cold_2();
  }
  CFTypeRef result = *(CFTypeRef *)(a1 + 72);
  if (result)
  {
    return CFRetain(result);
  }
  return result;
}

CFTypeRef MRSystemAppPlaybackQueueSetCustomData(uint64_t a1, CFTypeRef cf)
{
  if (!a1) {
    MRSystemAppPlaybackQueueSetCustomData_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) != 7) {
    MRSystemAppPlaybackQueueSetCustomData_cold_2();
  }
  CFStringRef v4 = *(const void **)(a1 + 72);
  if (v4) {
    CFRelease(v4);
  }
  if (cf) {
    CFTypeRef result = CFRetain(cf);
  }
  else {
    CFTypeRef result = 0;
  }
  *(void *)(a1 + 72) = result;
  return result;
}

uint64_t MRMediaRemoteCopyPlaybackQueueInsertionPositionDescription(unsigned int a1)
{
  if (a1 > 3) {
    CFStringRef v1 = 0;
  }
  else {
    CFStringRef v1 = off_1E57D50F8[a1];
  }
  return [(__CFString *)v1 copy];
}

uint64_t MRSystemAppPlaybackQueueCreateExternalRepresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a2)
  {
    CFAllocatorRef v3 = [MEMORY[0x1E4F1CA60] dictionary];
    unsigned int v4 = *(_DWORD *)(v2 + 8);
    CFAllocatorRef v5 = [NSNumber numberWithInt:v4];
    [v3 setObject:v5 forKeyedSubscript:@"PQty"];

    CFStringRef v6 = [NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 12)];
    [v3 setObject:v6 forKeyedSubscript:@"PQip"];

    LODWORD(v6) = *(_DWORD *)(v2 + 48);
    CFURLRef v7 = [NSNumber numberWithInt:v6];
    [v3 setObject:v7 forKeyedSubscript:@"PQri"];

    if (v6 == 1) {
      [v3 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:@"PQso"];
    }
    id v8 = *(id *)(v2 + 56);
    if (v8) {
      [v3 setObject:v8 forKeyedSubscript:@"PQui"];
    }
    id v9 = *(id *)(v2 + 16);
    if (v9) {
      [v3 setObject:v9 forKeyedSubscript:@"PQsr"];
    }
    id v10 = *(id *)(v2 + 24);
    if (v10) {
      [v3 setObject:v10 forKeyedSubscript:@"PQai"];
    }
    id v11 = *(id *)(v2 + 32);
    if (v11) {
      [v3 setObject:v11 forKeyedSubscript:@"PQfn"];
    }
    id v12 = *(id *)(v2 + 40);
    if (v12) {
      [v3 setObject:v12 forKeyedSubscript:@"PQwm"];
    }
    switch(v4)
    {
      case 1u:
        id v21 = *(id *)(v2 + 64);
        if (v21) {
          [v3 setObject:v21 forKeyedSubscript:@"PQqd"];
        }
        char v32 = v21;
        id v22 = *(id *)(v2 + 72);
        if (v22) {
          [v3 setObject:v22 forKeyedSubscript:@"PQmv"];
        }
        if (*(void *)(v2 + 88))
        {
          char v23 = objc_msgSend(NSNumber, "numberWithUnsignedLongLong:");
          [v3 setObject:v23 forKeyedSubscript:@"PQfi"];
        }
        uint64_t v24 = [NSNumber numberWithInt:*(unsigned int *)(v2 + 80)];
        [v3 setObject:v24 forKeyedSubscript:@"PQsm"];

        char v25 = [NSNumber numberWithInt:*(unsigned int *)(v2 + 84)];
        [v3 setObject:v25 forKeyedSubscript:@"PQrm"];

        break;
      case 2u:
        char v26 = [NSNumber numberWithInt:*(unsigned int *)(v2 + 64)];
        [v3 setObject:v26 forKeyedSubscript:@"PQsy"];

        int v27 = *(_DWORD *)(v2 + 64);
        if (v27 == 2)
        {
          uint64_t v17 = *(void *)(v2 + 72);
          unsigned int v18 = @"PQss";
          goto LABEL_40;
        }
        if (v27 == 1)
        {
          uint64_t v28 = [NSNumber numberWithLongLong:*(void *)(v2 + 72)];
          uint64_t v29 = @"PQsi";
          goto LABEL_38;
        }
        break;
      case 3u:
      case 5u:
        uint64_t v13 = *(void *)(v2 + 72);
        if (v13) {
          [v3 setObject:v13 forKeyedSubscript:@"PQst"];
        }
        uint64_t v14 = *(void *)(v2 + 80);
        if (v14) {
          [v3 setObject:v14 forKeyedSubscript:@"PQfg"];
        }
        int v15 = [NSNumber numberWithInt:*(unsigned int *)(v2 + 64)];
        [v3 setObject:v15 forKeyedSubscript:@"PQts"];

        id v16 = [NSNumber numberWithInt:*(unsigned int *)(v2 + 68)];
        [v3 setObject:v16 forKeyedSubscript:@"PQtr"];

        uint64_t v17 = *(void *)(v2 + 88);
        if (v17)
        {
          unsigned int v18 = @"PQis";
LABEL_40:
          [v3 setObject:v17 forKeyedSubscript:v18];
        }
        break;
      case 6u:
        CFURLRef v30 = *(const __CFURL **)(v2 + 64);
        if (v30)
        {
          uint64_t v28 = CFURLGetString(v30);
          uint64_t v29 = @"PQgs";
LABEL_38:
          [v3 setObject:v28 forKeyedSubscript:v29];
        }
        break;
      case 7u:
        id v19 = *(id *)(v2 + 64);
        if (v19) {
          [v3 setObject:v19 forKeyedSubscript:@"PQci"];
        }
        uint64_t v20 = *(void *)(v2 + 72);
        if (v20) {
          [v3 setObject:v20 forKeyedSubscript:@"PQcd"];
        }

        break;
      default:
        break;
    }
    uint64_t v2 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v3 format:200 options:0 error:0];
  }
  return v2;
}

_OWORD *MRSystemAppPlaybackQueueCreateFromExternalRepresentation(const __CFAllocator *a1, uint64_t a2)
{
  CFAllocatorRef v3 = [MEMORY[0x1E4F28F98] propertyListWithData:a2 options:0 format:0 error:0];
  unsigned int v4 = v3;
  if (!v3)
  {
    CFURLRef v7 = 0;
    goto LABEL_53;
  }
  CFAllocatorRef v5 = [v3 objectForKeyedSubscript:@"PQty"];
  int v6 = [v5 integerValue];

  CFURLRef v7 = MRSystemAppPlaybackQueueCreate(a1, v6);
  id v8 = [v4 objectForKeyedSubscript:@"PQip"];
  char v9 = [v8 BOOLValue];

  if (!v7) {
    MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback_cold_1();
  }
  *((unsigned char *)v7 + 12) = v9;
  id v10 = [v4 objectForKeyedSubscript:@"PQri"];
  uint64_t v11 = objc_opt_class();
  if (MRIsObjectOfClass(v10, v11))
  {
    if (!v10)
    {
      uint64_t v13 = [v4 objectForKeyedSubscript:@"PQso"];
      int v12 = [v13 BOOLValue];

      goto LABEL_9;
    }
    if (objc_opt_respondsToSelector())
    {
      int v12 = [v10 integerValue];
LABEL_9:
      *((_DWORD *)v7 + 12) = v12;
    }
  }
  CFDictionaryRef v14 = [v4 objectForKeyedSubscript:@"PQui"];
  uint64_t v15 = objc_opt_class();
  if (MRIsObjectOfClass(v14, v15)) {
    MRSystemAppPlaybackQueueSetUserInfo((uint64_t)v7, v14);
  }
  CFDictionaryRef v60 = v14;
  id v16 = [v4 objectForKeyedSubscript:@"PQsr"];
  uint64_t v17 = objc_opt_class();
  if (MRIsObjectOfClass(v16, v17)) {
    MRSystemAppPlaybackQueueSetSiriRecommendationIdentifier((uint64_t)v7, v16);
  }
  unsigned int v18 = [v4 objectForKeyedSubscript:@"PQai"];
  uint64_t v19 = objc_opt_class();
  if (MRIsObjectOfClass(v18, v19)) {
    MRSystemAppPlaybackQueueSetSiriAssetInfo((uint64_t)v7, v18);
  }
  uint64_t v20 = [v4 objectForKeyedSubscript:@"PQfn"];
  uint64_t v21 = objc_opt_class();
  if (MRIsObjectOfClass(v20, v21)) {
    MRSystemAppPlaybackQueueSetFeatureName((uint64_t)v7, v20);
  }
  CFDictionaryRef v22 = [v4 objectForKeyedSubscript:@"PQwm"];
  uint64_t v23 = objc_opt_class();
  if (MRIsObjectOfClass(v22, v23)) {
    MRSystemAppPlaybackQueueSetSiriWHAMetricsInfo((uint64_t)v7, v22);
  }
  switch(v6)
  {
    case 1:
      id v59 = v10;
      unsigned int v33 = [v4 objectForKeyedSubscript:@"PQqd"];
      uint64_t v34 = objc_opt_class();
      if (MRIsObjectOfClass(v33, v34)) {
        MRSystemAppPlaybackQueueSetLocalQueryData((uint64_t)v7, v33);
      }
      unsigned int v58 = v33;
      uint64_t v35 = [v4 objectForKeyedSubscript:@"PQmv"];
      uint64_t v36 = objc_opt_class();
      if (MRIsObjectOfClass(v35, v36)) {
        MRSystemAppPlaybackQueueSetLocalQueryFirstItemMultiverseIDData((uint64_t)v7, v35);
      }
      char v37 = [v4 objectForKeyedSubscript:@"PQfi"];
      uint64_t v38 = [v37 longLongValue];

      if (v38) {
        MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID((uint64_t)v7, v38);
      }
      uint64_t v39 = [v4 objectForKeyedSubscript:@"PQsm"];
      int v40 = [v39 integerValue];

      MRSystemAppPlaybackQueueSetLocalQueryShuffleMode((uint64_t)v7, v40);
      id v41 = [v4 objectForKeyedSubscript:@"PQrm"];
      int v42 = [v41 integerValue];

      MRSystemAppPlaybackQueueSetLocalQueryRepeatMode((uint64_t)v7, v42);
      goto LABEL_35;
    case 2:
      __int16 v43 = [v4 objectForKeyedSubscript:@"PQsy"];
      int v44 = [v43 integerValue];

      MRSystemAppPlaybackQueueSetRadioStationIDType((uint64_t)v7, v44);
      if (v44 == 2)
      {
        id v55 = [v4 objectForKeyedSubscript:@"PQss"];
        uint64_t v56 = objc_opt_class();
        if (MRIsObjectOfClass(v55, v56)) {
          MRSystemAppPlaybackQueueSetRadioStationStringIdentifier((uint64_t)v7, v55);
        }
      }
      else if (v44 == 1)
      {
        __int16 v45 = [v4 objectForKeyedSubscript:@"PQsi"];
        uint64_t v46 = [v45 longLongValue];

        MRSystemAppPlaybackQueueSetRadioStationIntegerPID((uint64_t)v7, v46);
      }
      break;
    case 3:
    case 5:
      id v59 = v10;
      CFArrayRef v24 = [v4 objectForKeyedSubscript:@"PQst"];
      uint64_t v25 = objc_opt_class();
      if (MRIsObjectOfClass(v24, v25)) {
        MRSystemAppPlaybackQueueSetGenericTrackIdentifiers((uint64_t)v7, v24);
      }
      char v26 = [v4 objectForKeyedSubscript:@"PQfg"];
      uint64_t v27 = objc_opt_class();
      if (MRIsObjectOfClass(v26, v27)) {
        MRSystemAppPlaybackQueueSetFirstItemGenericTrackIdentifier((uint64_t)v7, v26);
      }
      uint64_t v28 = [v4 objectForKeyedSubscript:@"PQts"];
      int v29 = [v28 integerValue];

      MRSystemAppPlaybackQueueSetTracklistShuffleMode((uint64_t)v7, v29);
      CFURLRef v30 = [v4 objectForKeyedSubscript:@"PQtr"];
      LODWORD(v28) = [v30 integerValue];

      MRSystemAppPlaybackQueueSetTracklistRepeatMode((uint64_t)v7, (int)v28);
      char v31 = [v4 objectForKeyedSubscript:@"PQis"];
      uint64_t v32 = objc_opt_class();
      if (MRIsObjectOfClass(v31, v32)) {
        MRSystemAppPlaybackQueueSetTracklistCollectionIdentifierSetData((uint64_t)v7, v31);
      }

LABEL_35:
      id v10 = v59;
      break;
    case 6:
      __int16 v47 = [v4 objectForKeyedSubscript:@"PQgs"];
      uint64_t v48 = objc_opt_class();
      if (MRIsObjectOfClass(v47, v48))
      {
        CFURLRef v49 = [MEMORY[0x1E4F1CB10] URLWithString:v47];
        if (v49) {
          MRSystemAppPlaybackQueueSetGeniusSeedTrack((uint64_t)v7, v49);
        }
      }
      break;
    case 7:
      uint64_t v50 = v10;
      uint64_t v51 = [v4 objectForKeyedSubscript:@"PQci"];
      uint64_t v52 = objc_opt_class();
      if (MRIsObjectOfClass(v51, v52)) {
        MRSystemAppPlaybackQueueSetCustomDataIdentifier((uint64_t)v7, v51);
      }
      id v53 = [v4 objectForKeyedSubscript:@"PQcd"];
      uint64_t v54 = objc_opt_class();
      if (MRIsObjectOfClass(v53, v54)) {
        MRSystemAppPlaybackQueueSetCustomData((uint64_t)v7, v53);
      }

      id v10 = v50;
      break;
    default:
      break;
  }

LABEL_53:
  return v7;
}

CFDataRef MRSystemAppPlaybackQueueGetLocalQueryEncodingType(uint64_t a1)
{
  if (!a1) {
    MRSystemAppPlaybackQueueGetType_cold_1();
  }
  if (*(_DWORD *)(a1 + 8) == 1)
  {
    CFDataRef result = (const __CFData *)MRSystemAppPlaybackQueueGetLocalQueryData(a1);
    if (!result) {
      return result;
    }
    CFDataRef v2 = result;
    BytePtr = (const char *)CFDataGetBytePtr(result);
    if ((unint64_t)CFDataGetLength(v2) >= 6) {
      return (const __CFData *)(strncmp("bplist", BytePtr, 6uLL) == 0);
    }
  }
  return 0;
}

_OWORD *MRSystemAppPlaybackQueueCreateFromProtobuf(void *a1)
{
  id v1 = a1;
  int v2 = MRMediaRemotePlaybackQueueTypeFromProtobuf([v1 type]);
  CFAllocatorRef v3 = MRSystemAppPlaybackQueueCreate((const __CFAllocator *)*MEMORY[0x1E4F1CF80], v2);
  if ([v1 hasReplaceIntent])
  {
    int v4 = MRMediaRemoteReplaceIntentFromProtobuf([v1 replaceIntent]);
    if (!v3) {
      MRSystemAppPlaybackQueueSetShouldOverrideManuallyCuratedQueue_cold_1();
    }
    *((_DWORD *)v3 + 12) = v4;
  }
  if ([v1 hasIsRequestingImmediatePlayback])
  {
    char v5 = [v1 isRequestingImmediatePlayback];
    if (!v3) {
      MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback_cold_1();
    }
    *((unsigned char *)v3 + 12) = v5;
  }
  if ([v1 hasFeatureName])
  {
    int v6 = [v1 featureName];
    MRSystemAppPlaybackQueueSetFeatureName((uint64_t)v3, v6);
  }
  if ([v1 hasCustomData])
  {
    CFURLRef v7 = [v1 customData];
    id v8 = [v7 data];
    MRSystemAppPlaybackQueueSetCustomData((uint64_t)v3, v8);

    char v9 = [v1 customData];
    id v10 = [v9 identifier];
    MRSystemAppPlaybackQueueSetCustomDataIdentifier((uint64_t)v3, v10);
  }
  if ([v1 hasTracklist])
  {
    uint64_t v11 = [v1 tracklist];
    if ([v11 hasFirstTrackIdentifier])
    {
      int v12 = [v11 firstTrackIdentifier];
      MRSystemAppPlaybackQueueSetFirstItemGenericTrackIdentifier((uint64_t)v3, v12);
    }
    if ([v11 hasTrackIdentifiers])
    {
      CFArrayRef v13 = [v11 trackIdentifiers];
      MRSystemAppPlaybackQueueSetGenericTrackIdentifiers((uint64_t)v3, v13);
    }
    if ([v11 hasCollectionIdentifierSet])
    {
      CFDictionaryRef v14 = [v11 collectionIdentifierSet];
      MRSystemAppPlaybackQueueSetTracklistCollectionIdentifierSetData((uint64_t)v3, v14);
    }
    if ([v11 hasShuffleMode])
    {
      int v15 = MRMediaRemoteShuffleModeFromProtobuf([v11 shuffleMode]);
      MRSystemAppPlaybackQueueSetTracklistShuffleMode((uint64_t)v3, v15);
    }
    if ([v11 hasRepeatMode])
    {
      int v16 = MRMediaRemoteRepeatModeFromProtobuf([v11 repeatMode]);
      MRSystemAppPlaybackQueueSetTracklistRepeatMode((uint64_t)v3, v16);
    }
  }
  if ([v1 hasMetrics])
  {
    uint64_t v17 = [v1 metrics];
    unsigned int v18 = MSVPropertyListDataClasses();
    MRCreateFromData(v17, v18);
    CFDictionaryRef v19 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();

    MRSystemAppPlaybackQueueSetSiriWHAMetricsInfo((uint64_t)v3, v19);
  }
  if ([v1 hasUserInfo])
  {
    uint64_t v20 = [v1 userInfo];
    uint64_t v21 = MSVPropertyListDataClasses();
    MRCreateFromData(v20, v21);
    CFDictionaryRef v22 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();

    MRSystemAppPlaybackQueueSetUserInfo((uint64_t)v3, v22);
  }

  return v3;
}

uint64_t MRVirtualVoiceInputDeviceCreate(uint64_t a1, uint64_t a2)
{
  CFAllocatorRef v3 = [MRVirtualVoiceInputDevice alloc];

  return (uint64_t)[(MRVirtualVoiceInputDevice *)v3 initWithDeviceID:a2];
}

uint64_t MRVirtualVoiceInputDeviceCreateWithExternalRepresentation(uint64_t a1, uint64_t a2)
{
  CFAllocatorRef v3 = [MRVirtualVoiceInputDevice alloc];

  return (uint64_t)[(MRVirtualVoiceInputDevice *)v3 initWithData:a2];
}

uint64_t MRVirtualVoiceInputDeviceCreateExternalRepresentation(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

__CFString *MRVoiceRecordingStateCopyDescription(unsigned int a1)
{
  if (a1 > 2) {
    return 0;
  }
  else {
    return off_1E57D5118[a1];
  }
}

uint64_t _MRGetVoiceInputDevicesResponseMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  CFAllocatorRef v3 = (int *)MEMORY[0x1E4F940E8];
  int v4 = (int *)MEMORY[0x1E4F940E0];
  char v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    CFURLRef v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      int v16 = v10 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(unsigned char *)(a1 + 36) |= 1u;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_43;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            LODWORD(v27) = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_45:
        *(_DWORD *)(a1 + 32) = v27;
      }
      else if ((v10 >> 3) == 1)
      {
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              unint64_t v23 = *(void *)(a2 + v22);
              if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                BOOL v14 = v20++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_32;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_32:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (1)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_55;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
          PBRepeatedUInt32Add();
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

MRMutableAudioDataBlock *MRAudioDataBlockCreate()
{
  return objc_alloc_init(MRMutableAudioDataBlock);
}

uint64_t MRAudioDataBlockCreateFromExternalRepresentation(uint64_t a1, uint64_t a2)
{
  CFAllocatorRef v3 = [MRMutableAudioDataBlock alloc];

  return (uint64_t)[(MRAudioDataBlock *)v3 initWithData:a2];
}

uint64_t MRAudioDataBlockSetBuffer(void *a1, const char *a2)
{
  return [a1 setBuffer:a2];
}

uint64_t MRAudioDataBlockCreateExternalRepresentation(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

void MRMediaRemotePlaybackQueueDataSourceSetRequestCallback(void *a1, void *a2)
{
  id v3 = a2;
  v5[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = __MRMediaRemotePlaybackQueueDataSourceSetRequestCallback_block_invoke;
  v5[3] = &unk_1E57D5198;
  id v6 = v3;
  id v4 = v3;
  _MRMediaRemotePlaybackQueueDataSourceSetRequestCallback(a1, v5);
}

void _MRMediaRemotePlaybackQueueDataSourceSetRequestCallback(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  char v5 = +[MRNowPlayingOriginClientManager sharedManager];
  id v6 = [v5 originClientForOrigin:v4];

  [v6 setPlaybackQueueCallback:v3];
}

void __MRMediaRemotePlaybackQueueDataSourceSetRequestCallback_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  uint64_t v8 = *(void *)(a1 + 32);
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MRMediaRemotePlaybackQueueDataSourceSetRequestCallback_block_invoke_2;
  v11[3] = &unk_1E57D2318;
  id v12 = v7;
  unsigned int v9 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v8 + 16);
  id v10 = v7;
  v9(v8, a2, a3, v11);
}

uint64_t __MRMediaRemotePlaybackQueueDataSourceSetRequestCallback_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void *MRMediaRemotePlaybackQueueDataSourceAddCreatePlaybackQueueForRequestCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  PlaybackQueueForRequestCallbackForPlayer = MRMediaRemotePlaybackQueueDataSourceAddCreatePlaybackQueueForRequestCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return PlaybackQueueForRequestCallbackForPlayer;
}

void *MRMediaRemotePlaybackQueueDataSourceAddCreateContentItemCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  ContentItemCallbackForPlayer = MRMediaRemotePlaybackQueueDataSourceAddCreateContentItemCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return ContentItemCallbackForPlayer;
}

void *MRMediaRemotePlaybackQueueDataSourceAddCreateContentItemCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  id v12 = [v11 createItemForOffsetCallbacks];
  char v13 = (void *)MEMORY[0x1E4F77978];
  BOOL v14 = (void *)MEMORY[0x1997190F0](v7);

  int v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  int v16 = [v10 playerPath];
  uint64_t v17 = [v10 clientCallbacks];
  MRMediaRemoteSetPlaybackQueueCapabilities((uint64_t)v16, [v17 capabilities], 0, 0);

  return v15;
}

void *MRMediaRemotePlaybackQueueDataSourceAddCreateChildContentItemCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  ChildContentItemCallbackForPlayer = MRMediaRemotePlaybackQueueDataSourceAddCreateChildContentItemCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return ChildContentItemCallbackForPlayer;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemMetadataCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v10 = MRMediaRemotePlaybackQueueDataSourceAddContentItemMetadataCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return v10;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemLanguageOptionsCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v10 = MRMediaRemotePlaybackQueueDataSourceAddContentItemLanguageOptionsCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return v10;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemLanguageOptionsCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  id v12 = [v11 languageOptionsCallbacks];
  char v13 = (void *)MEMORY[0x1E4F77978];
  BOOL v14 = (void *)MEMORY[0x1997190F0](v7);

  int v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  return v15;
}

uint64_t MRMediaRemotePlaybackQueueDataSourceAddCreateParticipantsCallback(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  char v5 = (void *)MEMORY[0x1E4F77978];
  id v6 = a3;
  id v7 = (void *)MEMORY[0x1997190F0](a4);
  uint64_t v8 = [v5 callbackWithQueue:v6 block:v7];

  return v8;
}

uint64_t MRMediaRemotePlaybackQueueDataSourceAddCreateParticipantsCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  char v5 = (void *)MEMORY[0x1E4F77978];
  id v6 = a3;
  id v7 = (void *)MEMORY[0x1997190F0](a4);
  uint64_t v8 = [v5 callbackWithQueue:v6 block:v7];

  return v8;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemInfoCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v10 = MRMediaRemotePlaybackQueueDataSourceAddContentItemInfoCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return v10;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemTranscriptAlignmentsCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v10 = MRMediaRemotePlaybackQueueDataSourceAddContentItemTranscriptAlignmentsCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return v10;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemLyricsCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v10 = MRMediaRemotePlaybackQueueDataSourceAddContentItemLyricsCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return v10;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemArtworkCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v10 = MRMediaRemotePlaybackQueueDataSourceAddContentItemArtworkCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return v10;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemFormattedArtworkCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v10 = MRMediaRemotePlaybackQueueDataSourceAddContentItemAvailableArtworkFormatsCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return v10;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemAvailableArtworkFormatsCallbackForPlayer(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = +[MRNowPlayingOriginClientManager sharedManager];
  id v10 = [v9 playerClientForPlayerPath:a1];

  uint64_t v11 = [v10 clientCallbacks];
  id v12 = [v11 availableArtworkFormatsCallbacks];
  char v13 = (void *)MEMORY[0x1E4F77978];
  BOOL v14 = (void *)MEMORY[0x1997190F0](v7);

  int v15 = [v13 callbackWithQueue:v8 block:v14];

  MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList(v12, a2, v15);
  return v15;
}

void *MRMediaRemotePlaybackQueueDataSourceAddContentItemAvailableArtworkFormatsCallback(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  unsigned int v9 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  id v10 = MRMediaRemotePlaybackQueueDataSourceAddContentItemAvailableArtworkFormatsCallbackForPlayer((uint64_t)v9, a2, v8, v7);

  return v10;
}

uint64_t MRMediaRemotePlaybackQueueDataSourceRemoveCallback(uint64_t a1, const void *a2)
{
  id v3 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  uint64_t v4 = MRMediaRemotePlaybackQueueDataSourceRemoveCallbackForPlayer((uint64_t)v3, a2);

  return v4;
}

uint64_t MRMediaRemotePlaybackQueueDataSourceRemoveCallbackForPlayer(uint64_t a1, const void *a2)
{
  uint64_t v4 = +[MRNowPlayingOriginClientManager sharedManager];
  char v5 = [v4 playerClientForPlayerPath:a1];

  id v6 = [v5 clientCallbacks];
  uint64_t v7 = [v6 removePlaybackQueueDataSourceCallback:a2];

  if (a2) {
    CFRelease(a2);
  }

  return v7;
}

void sub_1950CFED4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 104));
  _Unwind_Resume(a1);
}

void sub_1950D0370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_12(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void _MRServiceClientVideoThumbnailsRequestCallback(uint64_t a1, const void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  uint64_t v7 = +[MRNowPlayingOriginClientManager sharedManager];
  id v8 = [v7 playerClientForPlayerPath:a1];

  if (!v8)
  {
    uint64_t v12 = 5;
LABEL_6:
    id Error = (void *)MRMediaRemoteCreateError(v12);
    v6[2](v6, 0, Error);

    goto LABEL_7;
  }
  unsigned int v9 = [v8 clientCallbacks];
  uint64_t v10 = [v9 videoThumbnailsCallback];

  if (!v10)
  {
    uint64_t v12 = 14;
    goto LABEL_6;
  }
  uint64_t v11 = (void (*)(void *, unsigned char *, void))v10[2];
  memcpy(v14, a2, sizeof(v14));
  v11(v10, v14, v6);

LABEL_7:
}

void _MRServiceClientAudioAmplitudeSamplesCallback(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v11 = a4;
  id v6 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v7 = [v6 playerClientForPlayerPath:a1];

  if (v7)
  {
    id v8 = [v7 clientCallbacks];
    id Error = [v8 audioAmplitudeSamplesCallback];

    if (Error)
    {
      ((void (**)(void, uint64_t, id))Error)[2](Error, a2, v11);
      goto LABEL_7;
    }
    uint64_t v10 = 14;
  }
  else
  {
    uint64_t v10 = 5;
  }
  id Error = (void (**)(void, void, void))MRMediaRemoteCreateError(v10);
  (*((void (**)(id, void, void))v11 + 2))(v11, 0, Error);
LABEL_7:
}

void _MRServiceClientLyricsEventCallback(uint64_t a1, void *a2)
{
  uint64_t v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v14 = [v4 originClientForPlayerPath:a1];

  uint64_t v5 = +[MRNowPlayingOriginClientManager sharedManager];
  id v6 = [v5 playerClientForPlayerPath:a1];

  if (v14)
  {
    if (MRLyricsEventGetEndDate(a2)) {
      [v14 endLyricsEventCallback];
    }
    else {
    uint64_t v7 = [v14 beginLyricsEventCallback];
    }
    id v8 = (void (**)(void, void, void))MEMORY[0x1997190F0]();

    if (v8) {
      ((void (**)(void, void *, uint64_t))v8)[2](v8, a2, a1);
    }
  }
  if (v6)
  {
    uint64_t EndDate = MRLyricsEventGetEndDate(a2);
    uint64_t v10 = [v6 clientCallbacks];
    id v11 = v10;
    if (EndDate) {
      [v10 endLyricsEventCallback];
    }
    else {
    uint64_t v12 = [v10 beginLyricsEventCallback];
    }
    char v13 = (void (**)(void, void))MEMORY[0x1997190F0]();

    if (v13) {
      ((void (**)(void, void *))v13)[2](v13, a2);
    }
  }
}

void _MRServiceClientCollectDiagnosticCallback(uint64_t a1, void *a2)
{
  uint64_t v10 = a2;
  int v2 = (void *)MEMORY[0x199718E70]();
  id v3 = objc_alloc_init(MEMORY[0x1E4F1C9C8]);
  uint64_t v4 = +[MRMediaRemoteServiceClient sharedServiceClient];
  uint64_t v5 = [v4 debugDescription];
  id v6 = (void *)[v5 mutableCopy];

  [v6 appendString:@"\n"];
  uint64_t v7 = +[MRClientDiagnosticsDataSource sharedDataSource];
  id v8 = [v7 diagnostic];
  [v6 appendString:v8];

  unsigned int v9 = MRDiagnosticCreate((uint64_t)v3, (uint64_t)v6);
  v10[2](v10, v9, 0);
}

void _MRServiceClientClientMessageCallback(void *a1, void *a2, void *a3)
{
  id v14 = a2;
  uint64_t v5 = a3;
  id v6 = a1;
  uint64_t v7 = +[MRNowPlayingOriginClientManager sharedManager];
  id v8 = [v7 originClientForPlayerPath:v6];

  uint64_t v9 = [v8 clientMessageCallback];
  uint64_t v10 = (void *)v9;
  if (v9)
  {
    (*(void (**)(uint64_t, id, void (**)(id, void *)))(v9 + 16))(v9, v14, v5);
  }
  else
  {
    id v11 = [MRProtocolMessage alloc];
    id Error = (void *)MRMediaRemoteCreateError(14);
    char v13 = [(MRProtocolMessage *)v11 initWithUnderlyingCodableMessage:0 error:Error];
    v5[2](v5, v13);
  }
}

void sub_1950D2C40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D3518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D3598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D368C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D3760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D37E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D3860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D38E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D3960(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D3F00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D3F8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D400C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1950D41B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950D473C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1950D4C88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

Class initAVAudioSession_0()
{
  if (AVFoundationLibrary_sOnce_5 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_5, &__block_literal_global_56);
  }
  Class result = objc_getClass("AVAudioSession");
  classAVAudioSession_0 = (uint64_t)result;
  getAVAudioSessionClass_0[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVAudioSessionFunction_0;
  return result;
}

id AVAudioSessionFunction_0()
{
  return (id)classAVAudioSession_0;
}

id initValAVAudioSessionRoutingContextChangeNotification()
{
  if (AVFoundationLibrary_sOnce_5 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_5, &__block_literal_global_56);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_5, "AVAudioSessionRoutingContextChangeNotification");
  if (v0) {
    objc_storeStrong((id *)&constantValAVAudioSessionRoutingContextChangeNotification, *v0);
  }
  getAVAudioSessionRoutingContextChangeNotification = (uint64_t (*)())AVAudioSessionRoutingContextChangeNotificationFunction;
  id v1 = (void *)constantValAVAudioSessionRoutingContextChangeNotification;

  return v1;
}

id AVAudioSessionRoutingContextChangeNotificationFunction()
{
  return (id)constantValAVAudioSessionRoutingContextChangeNotification;
}

void MRClassSwizzleMethod(objc_class *a1, const char *a2, const char *a3)
{
  InstanceMethod = class_getInstanceMethod(a1, a2);
  uint64_t v7 = class_getInstanceMethod(a1, a3);
  Implementation = method_getImplementation(v7);
  TypeEncoding = method_getTypeEncoding(v7);
  if (class_addMethod(a1, a2, Implementation, TypeEncoding))
  {
    uint64_t v10 = method_getImplementation(InstanceMethod);
    id v11 = method_getTypeEncoding(InstanceMethod);
    class_replaceMethod(a1, a3, v10, v11);
  }
  else
  {
    method_exchangeImplementations(InstanceMethod, v7);
  }
}

void MRSwizzleClassMethod(objc_class *a1, const char *a2, const char *a3)
{
  ClassMethod = class_getClassMethod(a1, a2);
  uint64_t v7 = class_getClassMethod(a1, a3);
  Class = object_getClass(a1);
  Implementation = method_getImplementation(v7);
  TypeEncoding = method_getTypeEncoding(v7);
  if (class_addMethod(Class, a2, Implementation, TypeEncoding))
  {
    id v11 = method_getImplementation(ClassMethod);
    uint64_t v12 = method_getTypeEncoding(ClassMethod);
    class_replaceMethod(Class, a3, v11, v12);
  }
  else
  {
    method_exchangeImplementations(ClassMethod, v7);
  }
}

void sub_1950D6940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1950D6B4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

Class initFBSDisplayLayoutMonitorConfiguration()
{
  if (FrontBoardServicesLibrary_sOnce != -1) {
    dispatch_once(&FrontBoardServicesLibrary_sOnce, &__block_literal_global_150);
  }
  Class result = objc_getClass("FBSDisplayLayoutMonitorConfiguration");
  classFBSDisplayLayoutMonitorConfiguration = (uint64_t)result;
  getFBSDisplayLayoutMonitorConfigurationClass = (uint64_t (*)())FBSDisplayLayoutMonitorConfigurationFunction;
  return result;
}

id FBSDisplayLayoutMonitorConfigurationFunction()
{
  return (id)classFBSDisplayLayoutMonitorConfiguration;
}

void *__FrontBoardServicesLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices", 2);
  FrontBoardServicesLibrary_sLib = (uint64_t)result;
  return result;
}

Class initFBSDisplayLayoutMonitor()
{
  if (FrontBoardServicesLibrary_sOnce != -1) {
    dispatch_once(&FrontBoardServicesLibrary_sOnce, &__block_literal_global_150);
  }
  Class result = objc_getClass("FBSDisplayLayoutMonitor");
  classFBSDisplayLayoutMonitor = (uint64_t)result;
  getFBSDisplayLayoutMonitorClass = (uint64_t (*)())FBSDisplayLayoutMonitorFunction;
  return result;
}

id FBSDisplayLayoutMonitorFunction()
{
  return (id)classFBSDisplayLayoutMonitor;
}

MRCommandResult *_MRServiceClientRemoteCommandVerifyOptions(uint64_t a1, void *a2, void *a3)
{
  uint64_t v73 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  unsigned int v58 = +[MRSendCommandResultStatus successStatus];
  CFDictionaryRef v60 = [v5 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
  id v59 = (__CFString *)MRMediaRemoteCopyCommandDescription(a1);
  if (!MRMediaRemoteCommandRequiresSourcePositionOption(a1))
  {
    uint64_t v17 = 0;
    goto LABEL_27;
  }
  uint64_t v7 = [v5 objectForKeyedSubscript:@"kMRMediaRemoteOptionContentItemID"];
  uint64_t v8 = [v5 objectForKeyedSubscript:@"kMRMediaRemoteOptionPlaybackQueueOffset"];
  if (v7) {
    BOOL v9 = v8 == 0;
  }
  else {
    BOOL v9 = 0;
  }
  if (v9)
  {
    unsigned int v18 = [v6 subscriptionController];
    uint64_t v10 = [v18 offsetForIdentifier:v7];

    if (!v10) {
      goto LABEL_21;
    }
    char v19 = _MRLogForCategory(0);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138413058;
      uint64_t v66 = @"kMRMediaRemoteOptionContentItemID";
      __int16 v67 = 2112;
      id v68 = v7;
      __int16 v69 = 2112;
      uint64_t v70 = @"kMRMediaRemoteOptionPlaybackQueueOffset";
      __int16 v71 = 2112;
      uint64_t v72 = v10;
      _os_log_impl(&dword_194F3C000, v19, OS_LOG_TYPE_DEFAULT, "'%@':%@ -> '%@':%@", buf, 0x2Au);
    }

    id v14 = v5;
    int v15 = v10;
    int v16 = @"kMRMediaRemoteOptionPlaybackQueueOffset";
    goto LABEL_20;
  }
  uint64_t v10 = (void *)v8;
  if (v8) {
    BOOL v11 = v7 == 0;
  }
  else {
    BOOL v11 = 0;
  }
  if (v11)
  {
    uint64_t v12 = [v6 subscriptionController];
    uint64_t v7 = objc_msgSend(v12, "contentItemIdentifierForOffset:", objc_msgSend(v10, "integerValue"));

    if (v7)
    {
      char v13 = _MRLogForCategory(0);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 138413058;
        uint64_t v66 = @"kMRMediaRemoteOptionPlaybackQueueOffset";
        __int16 v67 = 2112;
        id v68 = v10;
        __int16 v69 = 2112;
        uint64_t v70 = @"kMRMediaRemoteOptionContentItemID";
        __int16 v71 = 2112;
        uint64_t v72 = v7;
        _os_log_impl(&dword_194F3C000, v13, OS_LOG_TYPE_DEFAULT, "'%@':%@ -> '%@':%@", buf, 0x2Au);
      }

      id v14 = v5;
      int v15 = v7;
      int v16 = @"kMRMediaRemoteOptionContentItemID";
LABEL_20:
      [v14 setObject:v15 forKeyedSubscript:v16];
    }
  }
LABEL_21:
  uint64_t v20 = [v5 objectForKeyedSubscript:@"kMRMediaRemoteOptionContentItemID"];
  if (v20)
  {
    uint64_t v21 = (__CFString *)v20;
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v22 = [v5 objectForKeyedSubscript:@"kMRMediaRemoteOptionTrackID"];

    if (v22)
    {
      uint64_t v17 = 0;
      goto LABEL_26;
    }
    uint64_t v21 = (__CFString *)[[NSString alloc] initWithFormat:@"Command options do not have requried source position parameters to perform command"];
    uint64_t v51 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138543874;
      uint64_t v66 = v59;
      __int16 v67 = 2114;
      id v68 = v60;
      __int16 v69 = 2112;
      uint64_t v70 = v21;
      _os_log_impl(&dword_194F3C000, v51, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
    }

    uint64_t v17 = 7;
  }

LABEL_26:
LABEL_27:
  if (!MRMediaRemoteCommandRequiresDestinationPositionOption(a1)) {
    goto LABEL_51;
  }
  unint64_t v23 = [v5 objectForKeyedSubscript:@"kMRMediaRemoteOptionInsertAfterContentItemID"];
  uint64_t v24 = [v5 objectForKeyedSubscript:@"kMRMediaRemoteOptionPlaybackQueueDestinationOffset"];
  if (v23) {
    BOOL v25 = v24 == 0;
  }
  else {
    BOOL v25 = 0;
  }
  if (!v25)
  {
    unsigned int v26 = (void *)v24;
    if (v24) {
      BOOL v27 = v23 == 0;
    }
    else {
      BOOL v27 = 0;
    }
    if (!v27) {
      goto LABEL_46;
    }
    uint64_t v28 = [v6 subscriptionController];
    unint64_t v23 = objc_msgSend(v28, "contentItemIdentifierForOffset:", objc_msgSend(v26, "integerValue") - 1);

    if (!v23) {
      goto LABEL_46;
    }
    unint64_t v29 = _MRLogForCategory(0);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138413058;
      uint64_t v66 = @"kMRMediaRemoteOptionPlaybackQueueDestinationOffset";
      __int16 v67 = 2112;
      id v68 = v26;
      __int16 v69 = 2112;
      uint64_t v70 = @"kMRMediaRemoteOptionInsertAfterContentItemID";
      __int16 v71 = 2112;
      uint64_t v72 = v23;
      _os_log_impl(&dword_194F3C000, v29, OS_LOG_TYPE_DEFAULT, "'%@':%@ -> '%@':%@", buf, 0x2Au);
    }

    char v30 = v5;
    char v31 = v23;
    unsigned int v32 = @"kMRMediaRemoteOptionInsertAfterContentItemID";
    goto LABEL_45;
  }
  uint64_t v33 = [v6 subscriptionController];
  unsigned int v26 = [v33 offsetForIdentifier:v23];

  if (v26)
  {
    uint64_t v34 = _MRLogForCategory(0);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138413058;
      uint64_t v66 = @"kMRMediaRemoteOptionInsertAfterContentItemID";
      __int16 v67 = 2112;
      id v68 = v23;
      __int16 v69 = 2112;
      uint64_t v70 = @"kMRMediaRemoteOptionPlaybackQueueDestinationOffset";
      __int16 v71 = 2112;
      uint64_t v72 = v26;
      _os_log_impl(&dword_194F3C000, v34, OS_LOG_TYPE_DEFAULT, "'%@':%@ -> '%@':%@", buf, 0x2Au);
    }

    char v30 = v5;
    char v31 = v26;
    unsigned int v32 = @"kMRMediaRemoteOptionPlaybackQueueDestinationOffset";
LABEL_45:
    [v30 setObject:v31 forKeyedSubscript:v32];
  }
LABEL_46:
  unint64_t v35 = [v5 objectForKeyedSubscript:@"kMRMediaRemoteOptionInsertAfterContentItemID"];

  if (!v35)
  {
    char v36 = (__CFString *)[[NSString alloc] initWithFormat:@"Command options do not have requried destination position parameters to perform command"];
    char v37 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138543874;
      uint64_t v66 = v59;
      __int16 v67 = 2114;
      id v68 = v60;
      __int16 v69 = 2112;
      uint64_t v70 = v36;
      _os_log_impl(&dword_194F3C000, v37, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
    }

    uint64_t v17 = 7;
  }

LABEL_51:
  uint64_t v38 = [v5 objectForKeyedSubscript:@"kMRMediaRemoteOptionNowPlayingContentItemID"];
  uint64_t v39 = [v6 subscriptionController];
  int v40 = [v39 contentItemIdentifierForOffset:0];

  if (!v38) {
    goto LABEL_59;
  }
  if (v40)
  {
    if ([v40 isEqualToString:v38]) {
      goto LABEL_59;
    }
    id v41 = (__CFString *)[[NSString alloc] initWithFormat:@"Sender specified %@ = %@. Now Playing Item = %@. Ignoring command", @"kMRMediaRemoteOptionNowPlayingContentItemID", v38, v40];
    int v42 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_57;
    }
  }
  else
  {
    id v41 = (__CFString *)[[NSString alloc] initWithFormat:@"Sender specified %@ = %@ which is no longer the now playing item.", @"kMRMediaRemoteOptionNowPlayingContentItemID", v38];
    int v42 = _MRLogForCategory(0xAuLL);
    if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
    {
LABEL_57:
      *(_DWORD *)int buf = 138543874;
      uint64_t v66 = v59;
      __int16 v67 = 2114;
      id v68 = v60;
      __int16 v69 = 2112;
      uint64_t v70 = v41;
      _os_log_impl(&dword_194F3C000, v42, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
    }
  }

  uint64_t v17 = 7;
LABEL_59:
  __int16 v43 = [v5 objectForKeyedSubscript:@"kMRMediaRemoteOptionVerifySupportedCommands"];
  int v44 = [v43 BOOLValue];

  if (v44)
  {
    __int16 v45 = [v6 supportedCommands];
    v61[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v61[1] = 3221225472;
    v61[2] = ___MRServiceClientRemoteCommandVerifyOptions_block_invoke;
    v61[3] = &unk_1E57D5478;
    id v46 = v45;
    id v62 = v46;
    int v63 = a1;
    __int16 v47 = (uint64_t (**)(void))MEMORY[0x1997190F0](v61);
    if ((v47[2]() & 1) == 0)
    {
      uint64_t v48 = (__CFString *)[[NSString alloc] initWithFormat:@"Sender specified %@ option and command is not supported. Ignoring command", @"kMRMediaRemoteOptionVerifySupportedCommands"];
      CFURLRef v49 = _MRLogForCategory(0xAuLL);
      if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 138543874;
        uint64_t v66 = v59;
        __int16 v67 = 2114;
        id v68 = v60;
        __int16 v69 = 2112;
        uint64_t v70 = v48;
        _os_log_impl(&dword_194F3C000, v49, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
      }

      unsigned int v50 = objc_msgSend(v46, "mr_ifDisabledWhyDisabled:", a1) - 1;
      if (v50 <= 5 && ((0x3Bu >> v50) & 1) != 0)
      {
        uint64_t v52 = +[MRSendCommandResultStatus statusWithCode:dword_195224470[v50]];

        unsigned int v58 = (void *)v52;
      }
      else
      {
        uint64_t v17 = 10;
      }
    }
  }
  id v53 = [MRCommandResult alloc];
  uint64_t v64 = v58;
  uint64_t v54 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v64 count:1];
  id v55 = [v6 playerPath];
  uint64_t v56 = [(MRCommandResult *)v53 initWithResultStatuses:v54 sendError:v17 playerPath:v55];

  return v56;
}

void _MRServiceClientPostPlaybackImminentIfNeccessary(int a1)
{
  int v2 = [MEMORY[0x1E4F28F80] processInfo];
  id v6 = [v2 processName];

  if (([v6 isEqualToString:@"airtunesd"] & 1) == 0
    && ([v6 isEqualToString:@"tvairplayd"] & 1) == 0)
  {
    id v3 = +[MRDeviceInfoRequest localDeviceInfo];
    if (![v3 clusterType]
      && ((a1 - 121) <= 0xC && ((1 << (a1 - 121)) & 0x1413) != 0 || a1 == 2 || !a1))
    {
      DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.mediaremote.playbackImminentOnStereoPair", 0, 0, 1u);
      id v5 = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterPostNotification(v5, @"com.apple.mediaremote.playbackImminent", 0, 0, 1u);
    }
  }
}

void _MRServiceClientOriginCommandCallback(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v10 = a3;
  id v11 = a5;
  uint64_t v12 = (void *)MEMORY[0x1E4F1C9C8];
  uint64_t v48 = a4;
  char v13 = [v12 date];
  unsigned int v50 = v10;
  id v14 = [v10 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
  unsigned int v49 = a2;
  int v15 = MRMediaRemoteCopyCommandDescription(a2);
  int v16 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"originCommand", v14];
  uint64_t v17 = v16;
  if (v9) {
    [v16 appendFormat:@" for %@", v9];
  }
  unsigned int v18 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 138543362;
    uint64_t v75 = v17;
    _os_log_impl(&dword_194F3C000, v18, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v69[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v69[1] = 3221225472;
  v69[2] = ___MRServiceClientOriginCommandCallback_block_invoke;
  v69[3] = &unk_1E57D54A0;
  id v19 = v9;
  id v70 = v19;
  id v20 = v14;
  id v71 = v20;
  id v47 = v13;
  id v72 = v47;
  id v46 = v11;
  id v73 = v46;
  uint64_t v21 = (void *)MEMORY[0x1997190F0](v69);
  id v22 = objc_alloc(MEMORY[0x1E4F77968]);
  v65[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v65[1] = 3221225472;
  v65[2] = ___MRServiceClientOriginCommandCallback_block_invoke_54;
  v65[3] = &unk_1E57D3F90;
  id v23 = v15;
  id v66 = v23;
  id v24 = v20;
  id v67 = v24;
  id v25 = v21;
  id v68 = v25;
  int v44 = (void *)[v22 initWithDeallocHandler:v65];
  id v26 = objc_alloc(MEMORY[0x1E4F77A30]);
  BOOL v27 = dispatch_get_global_queue(0, 0);
  v61[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v61[1] = 3221225472;
  v61[2] = ___MRServiceClientOriginCommandCallback_block_invoke_2;
  v61[3] = &unk_1E57D4358;
  uint64_t v64 = 0x401C000000000000;
  id v28 = v23;
  id v62 = v28;
  id v29 = v24;
  id v63 = v29;
  char v30 = (void *)[v26 initWithInterval:0 repeats:v27 queue:v61 block:7.0];

  id v31 = objc_alloc(MEMORY[0x1E4F77A30]);
  v57[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v57[1] = 3221225472;
  v57[2] = ___MRServiceClientOriginCommandCallback_block_invoke_64;
  v57[3] = &unk_1E57D4358;
  uint64_t v60 = 0x403E000000000000;
  id v58 = v28;
  id v32 = v29;
  id v59 = v32;
  id v45 = v28;
  uint64_t v33 = (void *)[v31 initWithInterval:0 repeats:v27 queue:v57 block:30.0];

  uint64_t v34 = (void *)[v19 copy];
  unint64_t v35 = _MRLogForCategory(2uLL);
  uint64_t v36 = [v32 hash];
  if ((unint64_t)(v36 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v37 = v36;
    if (os_signpost_enabled(v35))
    {
      *(_WORD *)int buf = 0;
      _os_signpost_emit_with_name_impl(&dword_194F3C000, v35, OS_SIGNPOST_INTERVAL_BEGIN, v37, "SendCommandOrigin", (const char *)&unk_195251F31, buf, 2u);
    }
  }

  v51[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v51[1] = 3221225472;
  v51[2] = ___MRServiceClientOriginCommandCallback_block_invoke_65;
  v51[3] = &unk_1E57D54C8;
  id v52 = v30;
  id v53 = v33;
  id v54 = v44;
  id v55 = v32;
  id v56 = v25;
  uint64_t v38 = (void (*)(void *, void *, void, void *, void *))v48[2];
  id v39 = v25;
  id v40 = v32;
  id v41 = v44;
  id v42 = v33;
  id v43 = v30;
  v38(v48, v34, v49, v50, v51);
}

void _MRServiceClientRemoteResolvedPlayerPathCommandCallback(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  id v9 = a2;
  id v10 = a3;
  id v46 = a4;
  id v11 = a5;
  uint64_t v12 = [MEMORY[0x1E4F1C9C8] date];
  char v13 = [v9 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
  int v45 = a1;
  id v14 = MRMediaRemoteCopyCommandDescription(a1);
  int v15 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", @"playerCommand", v13];
  int v16 = v15;
  if (v10) {
    [v15 appendFormat:@" for %@", v10];
  }
  uint64_t v17 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 138543362;
    uint64_t v77 = v16;
    _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v71[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v71[1] = 3221225472;
  v71[2] = ___MRServiceClientRemoteResolvedPlayerPathCommandCallback_block_invoke;
  v71[3] = &unk_1E57D54F0;
  id v49 = v10;
  id v72 = v49;
  id v18 = v13;
  id v73 = v18;
  id v48 = v12;
  id v74 = v48;
  id v47 = v11;
  id v75 = v47;
  id v19 = (void *)MEMORY[0x1997190F0](v71);
  id v20 = objc_alloc(MEMORY[0x1E4F77968]);
  v67[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v67[1] = 3221225472;
  v67[2] = ___MRServiceClientRemoteResolvedPlayerPathCommandCallback_block_invoke_70;
  v67[3] = &unk_1E57D3F90;
  id v21 = v14;
  id v68 = v21;
  id v22 = v18;
  id v69 = v22;
  id v23 = v19;
  id v70 = v23;
  id v24 = (void *)[v20 initWithDeallocHandler:v67];
  id v25 = objc_alloc(MEMORY[0x1E4F77A30]);
  id v26 = dispatch_get_global_queue(0, 0);
  v63[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v63[1] = 3221225472;
  v63[2] = ___MRServiceClientRemoteResolvedPlayerPathCommandCallback_block_invoke_2;
  v63[3] = &unk_1E57D4358;
  uint64_t v66 = 0x401C000000000000;
  id v27 = v21;
  id v64 = v27;
  id v28 = v22;
  id v65 = v28;
  id v29 = (void *)[v25 initWithInterval:0 repeats:v26 queue:v63 block:7.0];

  id v30 = objc_alloc(MEMORY[0x1E4F77A30]);
  v59[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v59[1] = 3221225472;
  v59[2] = ___MRServiceClientRemoteResolvedPlayerPathCommandCallback_block_invoke_74;
  v59[3] = &unk_1E57D4358;
  uint64_t v62 = 0x403E000000000000;
  id v60 = v27;
  id v31 = v28;
  id v61 = v31;
  id v32 = v27;
  uint64_t v33 = (void *)[v30 initWithInterval:0 repeats:v26 queue:v59 block:30.0];

  uint64_t v34 = _MRLogForCategory(2uLL);
  uint64_t v35 = [v31 hash];
  if ((unint64_t)(v35 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v36 = v35;
    if (os_signpost_enabled(v34))
    {
      *(_WORD *)int buf = 0;
      _os_signpost_emit_with_name_impl(&dword_194F3C000, v34, OS_SIGNPOST_INTERVAL_BEGIN, v36, "SendCommandPlayerMain", (const char *)&unk_195251F31, buf, 2u);
    }
  }

  v50[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v50[1] = 3221225472;
  v50[2] = ___MRServiceClientRemoteResolvedPlayerPathCommandCallback_block_invoke_75;
  v50[3] = &unk_1E57D5540;
  int v58 = v45;
  id v51 = v31;
  id v52 = v9;
  id v53 = v29;
  id v54 = v33;
  id v55 = v24;
  id v56 = v46;
  id v57 = v23;
  id v37 = v23;
  id v38 = v24;
  id v39 = v33;
  id v40 = v29;
  id v41 = v9;
  id v42 = v46;
  id v43 = v31;
  int v44 = MRCreateDonatedQosBlock(v50);
  dispatch_async(MEMORY[0x1E4F14428], v44);
}

void _MRServiceClientRemoteResolvedPlayerPathCommandCallbacks(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  id v10 = _MRServiceClientRemoteCommandVerifyOptions(a2, v8, v7);
  id v11 = [v10 error];

  if (v11)
  {
    v9[2](v9, v10);
  }
  else
  {
    uint64_t v33 = v10;
    uint64_t v34 = v9;
    uint64_t v12 = [v8 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
    uint64_t v13 = MRMediaRemoteCommandCreateDescription(a2, v8, 0);
    id v37 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    id v31 = (void *)v13;
    id v32 = (void *)v12;
    id v14 = (id) [[NSString alloc] initWithFormat:@"com.apple.MediaRemote.serviceClientRemotePlayerPathCommandCallback.%@.%@", v13, v12];
    int v15 = (const char *)[v14 UTF8String];
    int v16 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    uint64_t v17 = dispatch_queue_attr_make_with_qos_class(v16, QOS_CLASS_USER_INITIATED, 0);
    queue = dispatch_queue_create(v15, v17);

    id v18 = dispatch_group_create();
    id v19 = [v7 clientCallbacks];
    id v20 = [v19 commandHandlerBlocks];

    uint64_t v21 = a2;
    if ([v20 count])
    {
      _MRServiceClientPostPlaybackImminentIfNeccessary(a2);
      int v30 = 0;
    }
    else
    {
      int v30 = 8;
    }
    long long v50 = 0u;
    long long v51 = 0u;
    long long v49 = 0u;
    long long v48 = 0u;
    obuint64_t j = v20;
    uint64_t v22 = [obj countByEnumeratingWithState:&v48 objects:v52 count:16];
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = *(void *)v49;
      do
      {
        for (uint64_t i = 0; i != v23; ++i)
        {
          if (*(void *)v49 != v24) {
            objc_enumerationMutation(obj);
          }
          id v26 = *(void **)(*((void *)&v48 + 1) + 8 * i);
          dispatch_group_enter(v18);
          id v27 = [v7 playerPath];
          v44[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
          v44[1] = 3221225472;
          v44[2] = ___MRServiceClientRemoteResolvedPlayerPathCommandCallbacks_block_invoke;
          v44[3] = &unk_1E57D5568;
          int v45 = queue;
          id v46 = v37;
          id v47 = v18;
          _MRServiceClientRemoteResolvedPlayerPathCommandCallback(v21, v8, v27, v26, v44);
        }
        uint64_t v23 = [obj countByEnumeratingWithState:&v48 objects:v52 count:16];
      }
      while (v23);
    }

    v38[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v38[1] = 3221225472;
    v38[2] = ___MRServiceClientRemoteResolvedPlayerPathCommandCallbacks_block_invoke_3;
    v38[3] = &unk_1E57D55D8;
    id v39 = v37;
    int v42 = v21;
    int v43 = v30;
    id v40 = v7;
    id v9 = v34;
    id v41 = v34;
    id v28 = v37;
    id v29 = MRCreateDonatedQosBlock(v38);
    dispatch_group_notify(v18, queue, v29);

    id v10 = v33;
  }
}

void sub_1950D969C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void MRServiceClientRemotePlayerPathCommandCallback(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v81 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a3;
  id v66 = a4;
  uint64_t v9 = [v8 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
  id v67 = MRMediaRemoteCopyCommandDescription(a2);
  id v10 = (void *)[v7 copy];
  unint64_t v11 = 0x1E57CF000uLL;
  uint64_t v12 = +[MRNowPlayingOriginClientManager sharedManager];
  id v68 = [v12 clientForPlayerPath:v10];

  id v13 = [v68 client];
  id v14 = [v10 client];
  if (v14 == v13)
  {
  }
  else
  {
    int v15 = v14;
    char v16 = [v14 isEqual:v13];

    if ((v16 & 1) == 0)
    {
      id v63 = v7;
      id v17 = [NSString alloc];
      id v18 = [v10 client];
      id v19 = [v18 bundleIdentifier];
      id v20 = [v13 bundleIdentifier];
      uint64_t v21 = (void *)[v17 initWithFormat:@"Resolved client from %@ to %@ ", v19, v20];

      uint64_t v22 = _MRLogForCategory(0xAuLL);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 138543874;
        uint64_t v76 = v67;
        __int16 v77 = 2114;
        uint64_t v78 = v9;
        __int16 v79 = 2112;
        uint64_t v80 = (uint64_t)v21;
        _os_log_impl(&dword_194F3C000, v22, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
      }

      [v10 setClient:v13];
      id v7 = v63;
      unint64_t v11 = 0x1E57CF000;
    }
  }
  uint64_t v23 = [v10 player];

  if (!v23)
  {
    uint64_t v24 = [v68 activePlayerPath];
    id v25 = [v24 player];

    id v26 = [v10 player];
    if (v26 == v25)
    {
      id v64 = v7;

      uint64_t v33 = v25;
    }
    else
    {
      id v27 = v26;
      char v28 = [v26 isEqual:v25];

      if (v28)
      {
LABEL_15:

        goto LABEL_16;
      }
      id v64 = v7;
      id v29 = [NSString alloc];
      int v30 = [v10 player];
      id v31 = [v30 identifier];
      id v32 = [v25 identifier];
      uint64_t v33 = (void *)[v29 initWithFormat:@"Resolved player from %@ to %@", v31, v32];

      uint64_t v34 = _MRLogForCategory(0xAuLL);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 138543874;
        uint64_t v76 = v67;
        __int16 v77 = 2114;
        uint64_t v78 = v9;
        __int16 v79 = 2112;
        uint64_t v80 = (uint64_t)v33;
        _os_log_impl(&dword_194F3C000, v34, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
      }

      [v10 setPlayer:v25];
      unint64_t v11 = 0x1E57CF000;
    }

    id v7 = v64;
    goto LABEL_15;
  }
LABEL_16:
  uint64_t v35 = [v10 isResolved];
  if (!v35)
  {
    id v38 = v68;
    id v37 = 0;
    if (!__MRServiceClientRemotePlayerPathCommandCallback_block_invoke(v35, v68, 0)) {
      goto LABEL_18;
    }
LABEL_20:
    uint64_t v62 = v37;
    if (![v10 isResolved])
    {
      id v56 = (void *)[[NSString alloc] initWithFormat:@"Client is CanBeNowPlaying=YES but does not have activePlayer to send command to"];
      id v57 = _MRLogForCategory(0xAuLL);
      if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 138543874;
        uint64_t v76 = v67;
        __int16 v77 = 2114;
        uint64_t v78 = v9;
        __int16 v79 = 2112;
        uint64_t v80 = (uint64_t)v56;
        _os_log_impl(&dword_194F3C000, v57, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
      }
      id v40 = (void *)v9;

      int v58 = +[MRCommandResult commandResultWithSendError:3 description:v56];
      id v41 = v66;
      (*((void (**)(id, void *))v66 + 2))(v66, v58);

      goto LABEL_41;
    }
    id v65 = v7;
    int v42 = [*(id *)(v11 + 1552) sharedManager];
    int v43 = [v42 playerClientForPlayerPath:v10];

    uint64_t v44 = [v43 resolveCommand:a2];
    uint64_t v45 = v44;
    if (v44 != a2)
    {
      uint64_t v46 = v9;
      id v47 = MRMediaRemoteCopyCommandDescription(v44);
      long long v48 = (void *)[[NSString alloc] initWithFormat:@"Resolved command from %@ to %@", v67, v47];
      long long v49 = _MRLogForCategory(0xAuLL);
      if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 138543874;
        uint64_t v76 = v67;
        __int16 v77 = 2114;
        uint64_t v78 = v46;
        __int16 v79 = 2112;
        uint64_t v80 = (uint64_t)v48;
        _os_log_impl(&dword_194F3C000, v49, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
      }

      a2 = v45;
      uint64_t v9 = v46;
    }
    long long v50 = [v43 resolveCommandOptions:a2 options:v8];
    if (([v8 isEqualToDictionary:v50] & 1) == 0)
    {
      uint64_t v51 = [[NSString alloc] initWithFormat:@"Resolved command options to %@", v50];
      id v52 = _MRLogForCategory(0xAuLL);
      if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 138543874;
        uint64_t v76 = v67;
        __int16 v77 = 2114;
        uint64_t v78 = v9;
        __int16 v79 = 2112;
        uint64_t v80 = v51;
        _os_log_impl(&dword_194F3C000, v52, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
      }

      uint64_t v53 = (void *)v51;
      uint64_t v54 = [v50 mutableCopy];

      id v8 = (id)v54;
    }
    if (a2 == 125)
    {
      id v55 = [v8 objectForKeyedSubscript:@"kMRMediaRemoteOptionHomeKitUserIdentifier"];
      if (v55) {
        [v43 appendHomeUserIdentifier:v55];
      }
    }
    else
    {
      if (a2 != 122)
      {
LABEL_40:
        int v59 = v45;
        id v40 = (void *)v9;
        v69[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
        v69[1] = 3221225472;
        v69[2] = __MRServiceClientRemotePlayerPathCommandCallback_block_invoke_97;
        v69[3] = &unk_1E57D5600;
        int v74 = v59;
        id v70 = v50;
        id v71 = v43;
        id v8 = v8;
        id v72 = v8;
        id v41 = v66;
        id v73 = v66;
        id v60 = v43;
        id v61 = v50;
        _MRServiceClientRemoteResolvedPlayerPathCommandCallbacks(v60, a2, v8, v69);

        id v7 = v65;
LABEL_41:
        id v38 = v68;
        id v37 = v62;
        goto LABEL_42;
      }
      id v55 = [v8 objectForKeyedSubscript:@"kMRMediaRemoteOptionHomeKitUserIdentifier"];
      if (v55) {
        [v43 setHomeUserIdentifier:v55];
      }
      else {
        [v43 clearHomeUserIdentifiers];
      }
    }

    goto LABEL_40;
  }
  os_signpost_id_t v36 = [*(id *)(v11 + 1552) sharedManager];
  id v37 = [v36 playerClientForPlayerPath:v10];

  id v38 = v68;
  if (__MRServiceClientRemotePlayerPathCommandCallback_block_invoke(v39, v68, v37)) {
    goto LABEL_20;
  }
LABEL_18:
  id v40 = (void *)v9;
  id v41 = v66;
  [v38 enqueueCommand:a2 options:v8 playerPath:v7 commandCompletion:v66];
LABEL_42:
}

uint64_t __MRServiceClientRemotePlayerPathCommandCallback_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  if ([a3 canBeNowPlayingPlayer])
  {
    uint64_t v5 = 1;
  }
  else if ([v4 perPlayerCanBeNowPlaying])
  {
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = [v4 canBeNowPlaying];
  }

  return v5;
}

void __MRServiceClientRemotePlayerPathCommandCallback_block_invoke_97(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 error];

  if (!v4)
  {
    int v5 = *(_DWORD *)(a1 + 64);
    id v6 = *(void **)(a1 + 32);
    id v7 = [*(id *)(a1 + 40) playerPath];
    MRMediaRemoteSendImplicitCommandsForOptions(v5, v6, v7);
  }
  id v8 = _MRLogForCategory(2uLL);
  uint64_t v9 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
  os_signpost_id_t v10 = [v9 hash];

  if (v10 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v8))
  {
    *(_WORD *)unint64_t v11 = 0;
    _os_signpost_emit_with_name_impl(&dword_194F3C000, v8, OS_SIGNPOST_INTERVAL_END, v10, "SendCommand", (const char *)&unk_195251F31, v11, 2u);
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void MRServiceClientRemoteCommandCallback(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  if (v8)
  {
    uint64_t v10 = [v8 mutableCopy];
  }
  else
  {
    uint64_t v10 = [MEMORY[0x1E4F1CA60] dictionary];
  }
  unint64_t v11 = (void *)v10;
  uint64_t v12 = (void *)[v7 copy];
  id v13 = [v11 objectForKeyedSubscript:@"kMRMediaRemoteOptionCommandID"];
  id v14 = [NSString alloc];
  int v15 = MRMediaRemoteCommandCreateDescription(a2, v11, 1);
  char v16 = (void *)[v14 initWithFormat:@"Got %@ for %@", v15, v12];

  id v17 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 138543874;
    id v25 = @"command";
    __int16 v26 = 2114;
    id v27 = v13;
    __int16 v28 = 2112;
    id v29 = v16;
    _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, "Update: %{public}@<%{public}@> %@", buf, 0x20u);
  }

  id v18 = +[MRNowPlayingOriginClientManager sharedManager];
  id v19 = [v18 originClientForPlayerPath:v12];

  if (v19)
  {
    id v20 = [v19 commandCallback];
    if (v20)
    {
      v21[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
      v21[1] = 3221225472;
      void v21[2] = __MRServiceClientRemoteCommandCallback_block_invoke;
      v21[3] = &unk_1E57D5628;
      id v22 = v12;
      id v23 = v9;
      _MRServiceClientOriginCommandCallback(v22, a2, v11, v20, v21);
    }
    else
    {
      MRServiceClientRemotePlayerPathCommandCallback(v12, a2, v11, v9);
    }
    goto LABEL_12;
  }
  if (v9)
  {
    id v20 = [[MRCommandResult alloc] initWithWithSendError:6 description:@"Could not create an originClient for playerPath"];
    (*((void (**)(id, MRCommandResult *))v9 + 2))(v9, v20);
LABEL_12:
  }
}

void __MRServiceClientRemoteCommandCallback_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 playerPath];
  int v5 = [*(id *)(a1 + 32) origin];
  id v8 = [v4 playerPathByLocalizingWithOrigin:v5];

  id v6 = v8;
  if (!v8) {
    id v6 = *(id *)(a1 + 32);
  }
  id v9 = v6;
  id v7 = (void *)[v3 copyWithPlayerPath:v6];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void OUTLINED_FUNCTION_1_7(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void OUTLINED_FUNCTION_2_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

uint64_t MRMediaRemoteBundle()
{
  return [MEMORY[0x1E4F28B50] bundleWithIdentifier:@"com.apple.MediaRemote"];
}

id MRLocalizedStringFromTable(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = (id)[MEMORY[0x1E4F28B50] bundleWithIdentifier:@"com.apple.MediaRemote"];
  id v6 = (void *)MEMORY[0x1E4F28B50];
  id v7 = [v5 localizations];
  id v8 = [MEMORY[0x1E4F1CA20] preferredLanguages];
  uint64_t v9 = [v6 preferredLocalizationsFromArray:v7 forPreferences:v8];

  uint64_t v10 = (void *)[0 copy];
  if ([v9 count])
  {
    if (!v10)
    {
      unint64_t v11 = [v9 objectAtIndexedSubscript:0];
      uint64_t v12 = [v5 pathForResource:v4 ofType:@"strings" inDirectory:@"." forLocalization:v11];
      uint64_t v10 = (void *)[objc_alloc(MEMORY[0x1E4F1C9E8]) initWithContentsOfFile:v12];
    }
    uint64_t v13 = [v10 objectForKey:v3];
    if (!v13)
    {
      uint64_t v13 = [v5 localizedStringForKey:v3 value:&stru_1EE60E7D8 table:v4];
    }
    id v14 = (void *)v13;
  }
  else
  {
    id v14 = 0;
  }

  return v14;
}

id MRLocalizedString(void *a1)
{
  return MRLocalizedStringFromTable(a1, @"MediaRemote");
}

id MRLocalizedStringWithFormat(void *a1)
{
  return MRLocalizedStringFromTable(a1, @"MediaRemote");
}

uint64_t MRColorCopyDescription(float a1, float a2, float a3, float a4)
{
  *(float *)id v5 = a1;
  *(float *)&v5[1] = a2;
  *(float *)&void v5[2] = a3;
  *(float *)&v5[3] = a4;
  [NSString stringWithFormat:@"<MRColor:%p red = %f, green = %f, blue = %f, alpha = %f>", v5, a1, a2, a3, a4];
  return objc_claimAutoreleasedReturnValue();
}

BOOL MRColorIsEqual(float a1, float a2, float a3, float a4, float a5, float a6, float a7, float a8)
{
  return vabds_f32(a1, a5) <= 0.00000011921
      && vabds_f32(a2, a6) <= 0.00000011921
      && vabds_f32(a3, a7) <= 0.00000011921
      && vabds_f32(a4, a8) <= 0.00000011921;
}

BOOL MRColorIsNull(float a1, float a2, float a3, float a4)
{
  return fabsf(a1 + 1.0) <= 0.00000011921
      && fabsf(a2 + 1.0) <= 0.00000011921
      && fabsf(a3 + 1.0) <= 0.00000011921
      && fabsf(a4 + 1.0) <= 0.00000011921;
}

MRContentItem *MRContentItemRepresentationForIdentity(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = [[MRContentItem alloc] initWithIdentifier:v4];

  id v6 = [v3 displayName];
  id v7 = [(MRContentItem *)v5 metadata];
  [v7 setParticipantName:v6];

  id v8 = [v3 identifier];
  uint64_t v9 = [(MRContentItem *)v5 metadata];
  [v9 setParticipantIdentifier:v8];

  uint64_t v10 = [v3 type];
  BOOL v11 = v10 == 1;
  uint64_t v12 = [(MRContentItem *)v5 metadata];
  [v12 setIsResolvableParticipant:v11];

  return v5;
}

id MRIdentityRepresentationForParticipantItem(void *a1)
{
  id v1 = a1;
  int v2 = [v1 metadata];
  id v3 = [v2 participantIdentifier];

  if (v3) {
    goto LABEL_2;
  }
  id v5 = [v1 metadata];
  int v6 = [v5 isResolvableParticipant];

  if (v6)
  {
    id v7 = [v1 metadata];
    id v8 = [v7 participantIdentifier];
    uint64_t v9 = [v1 metadata];
    uint64_t v10 = [v9 participantName];
    uint64_t v11 = +[MRUserIdentity resolvableIdentityWithIdentifier:v8 displayName:v10];
  }
  else
  {
    uint64_t v12 = [v1 metadata];
    uint64_t v13 = [v12 participantName];

    if (!v13)
    {
LABEL_2:
      id v4 = 0;
      goto LABEL_8;
    }
    id v7 = [v1 metadata];
    id v8 = [v7 participantIdentifier];
    uint64_t v9 = [v1 metadata];
    uint64_t v10 = [v9 participantName];
    uint64_t v11 = +[MRUserIdentity basicIdentityWithIdentifier:v8 displayName:v10];
  }
  id v4 = (void *)v11;

LABEL_8:

  return v4;
}

uint64_t _MRUpdateActiveSystemEndpointMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        id v17 = objc_alloc_init(_MRUpdateActiveSystemEndpointRequestProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark()
          || (_MRUpdateActiveSystemEndpointRequestProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRSetRecordingStateMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void MRMediaRemoteRequestNowPlayingPlaybackQueue(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  uint64_t v11 = [[MRPlayerPath alloc] initWithOrigin:a3 client:a2 player:0];
  MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayer(a1, v11, v10, v9);
}

void MRMediaRemoteRequestNowPlayingPlaybackQueueSync(void *a1, void *a2, void *a3)
{
}

void MRMediaRemoteRequestNowPlayingPlaybackQueueCapabilities(void *a1, void *a2)
{
}

void MRMediaRemoteRequestNowPlayingPlaybackQueueCapabilitiesForPlayer(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    id v5 = (id)MEMORY[0x1E4F14428];
    id v7 = MEMORY[0x1E4F14428];
  }
  char v8 = [MEMORY[0x1E4F29128] UUID];
  id v9 = [v8 UUIDString];

  id v10 = [MEMORY[0x1E4F1C9C8] date];
  uint64_t v11 = +[MRMediaRemoteServiceClient sharedServiceClient];
  unint64_t v12 = [v11 workerQueue];
  v17[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = __MRMediaRemoteRequestNowPlayingPlaybackQueueCapabilitiesForPlayer_block_invoke;
  v17[3] = &unk_1E57D0E58;
  unsigned int v18 = @"playbackQueueCapabilities";
  id v19 = v9;
  id v20 = v10;
  id v21 = v5;
  id v22 = v6;
  id v13 = v6;
  id v14 = v5;
  id v15 = v10;
  id v16 = v9;
  MRMediaRemoteNowPlayingResolvePlayerPath(a1, v12, v17);
}

void __MRMediaRemoteRequestNowPlayingPlaybackQueueCapabilitiesForPlayer_block_invoke(id *a1, void *a2, void *a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v19 = MEMORY[0x1E4F143A8];
  uint64_t v20 = 3221225472;
  id v21 = __MRMediaRemoteRequestNowPlayingPlaybackQueueCapabilitiesForPlayer_block_invoke_2;
  id v22 = &unk_1E57D5890;
  id v7 = v5;
  id v23 = v7;
  id v24 = a1[4];
  id v25 = a1[5];
  id v26 = a1[6];
  id v27 = a1[7];
  id v28 = a1[8];
  char v8 = (void (**)(void, void, void))MEMORY[0x1997190F0](&v19);
  id v9 = objc_alloc(MEMORY[0x1E4F28E78]);
  id v10 = (void *)[v9 initWithFormat:@"%@<%@>", a1[4], a1[5], v19, v20, v21, v22];
  uint64_t v11 = v10;
  if (v7) {
    [v10 appendFormat:@" for %@", v7];
  }
  unint64_t v12 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 138543362;
    uint64_t v30 = v11;
    _os_log_impl(&dword_194F3C000, v12, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  if ([v7 isResolved])
  {
    if ([v7 isLocal])
    {
      id v13 = +[MRNowPlayingOriginClientManager sharedManager];
      id v14 = [v13 playerClientForPlayerPath:v7];

      id v15 = [v14 clientCallbacks];
      v8[2](v8, [v15 capabilities], 0);
    }
    else
    {
      unsigned int v18 = (void *)MRGetSharedService();
      MRMediaRemoteServiceRequestNowPlayingPlaybackQueueCapabilities(v18, v7, a1[7], v8);
    }
  }
  else
  {
    if (v6)
    {
      id v16 = 0;
      uint64_t Error = (uint64_t)v6;
    }
    else
    {
      uint64_t Error = MRMediaRemoteNowPlayingPlayerPathCreateError(v7);
      id v16 = (void *)Error;
    }
    v8[2](v8, 0, Error);
  }
}

void __MRMediaRemoteRequestNowPlayingPlaybackQueueCapabilitiesForPlayer_block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = MRPlaybackQueueCapabilitiesCopyDescription(a2);
  uint64_t v7 = *(void *)(a1 + 32);
  char v8 = _MRLogForCategory(0xAuLL);
  id v9 = v8;
  if (!v5 && v6)
  {
    BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v10)
      {
        uint64_t v12 = *(void *)(a1 + 40);
        uint64_t v11 = *(void *)(a1 + 48);
        uint64_t v13 = *(void *)(a1 + 32);
        id v14 = [MEMORY[0x1E4F1C9C8] date];
        [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
        *(_DWORD *)int buf = 138544386;
        uint64_t v38 = v12;
        __int16 v39 = 2114;
        uint64_t v40 = v11;
        __int16 v41 = 2112;
        id v42 = v6;
        __int16 v43 = 2114;
        uint64_t v44 = v13;
        __int16 v45 = 2048;
        uint64_t v46 = v15;
        id v16 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
        char v17 = v9;
        uint32_t v18 = 52;
LABEL_16:
        _os_log_impl(&dword_194F3C000, v17, OS_LOG_TYPE_DEFAULT, v16, buf, v18);
        goto LABEL_17;
      }
      goto LABEL_22;
    }
    if (!v10) {
      goto LABEL_22;
    }
    uint64_t v29 = *(void *)(a1 + 40);
    uint64_t v30 = *(void *)(a1 + 48);
    id v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
    *(_DWORD *)int buf = 138544130;
    uint64_t v38 = v29;
    __int16 v39 = 2114;
    uint64_t v40 = v30;
    __int16 v41 = 2112;
    id v42 = v6;
    __int16 v43 = 2048;
    uint64_t v44 = v31;
    id v16 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
LABEL_15:
    char v17 = v9;
    uint32_t v18 = 42;
    goto LABEL_16;
  }
  if (v5)
  {
    BOOL v19 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
    if (v7)
    {
      if (v19)
      {
        uint64_t v21 = *(void *)(a1 + 40);
        uint64_t v20 = *(void *)(a1 + 48);
        uint64_t v22 = *(void *)(a1 + 32);
        id v14 = [MEMORY[0x1E4F1C9C8] date];
        [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
        *(_DWORD *)int buf = 138544386;
        uint64_t v38 = v21;
        __int16 v39 = 2114;
        uint64_t v40 = v20;
        __int16 v41 = 2114;
        id v42 = v5;
        __int16 v43 = 2114;
        uint64_t v44 = v22;
        __int16 v45 = 2048;
        uint64_t v46 = v23;
        _os_log_error_impl(&dword_194F3C000, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
LABEL_17:

        goto LABEL_22;
      }
    }
    else if (v19)
    {
      __MRMediaRemoteRequestNowPlayingPlaybackQueueCapabilitiesForPlayer_block_invoke_2_cold_1(a1);
    }
    goto LABEL_22;
  }
  BOOL v24 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (!v7)
  {
    if (!v24) {
      goto LABEL_22;
    }
    uint64_t v32 = *(void *)(a1 + 40);
    uint64_t v33 = *(void *)(a1 + 48);
    id v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
    *(_DWORD *)int buf = 138543874;
    uint64_t v38 = v32;
    __int16 v39 = 2114;
    uint64_t v40 = v33;
    __int16 v41 = 2048;
    id v42 = v34;
    id v16 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
    char v17 = v9;
    uint32_t v18 = 32;
    goto LABEL_16;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(a1 + 40);
    uint64_t v25 = *(void *)(a1 + 48);
    id v27 = *(void **)(a1 + 32);
    id v14 = [MEMORY[0x1E4F1C9C8] date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 56)];
    *(_DWORD *)int buf = 138544130;
    uint64_t v38 = v26;
    __int16 v39 = 2114;
    uint64_t v40 = v25;
    __int16 v41 = 2114;
    id v42 = v27;
    __int16 v43 = 2048;
    uint64_t v44 = v28;
    id v16 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
    goto LABEL_15;
  }
LABEL_22:

  id v36 = *(id *)(a1 + 72);
  id v35 = v5;
  msv_dispatch_async_on_queue();
}

uint64_t __MRMediaRemoteRequestNowPlayingPlaybackQueueCapabilitiesForPlayer_block_invoke_104(void *a1)
{
  uint64_t result = a1[5];
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, a1[6], a1[4]);
  }
  return result;
}

uint64_t _MRSetNowPlayingPlayerMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark()
          || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v17->super.super.isa, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRTransactionMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        BOOL v24 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        objc_storeStrong((id *)(a1 + 24), v24);
        if (!PBReaderPlaceMark()
          || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v24->super.super.isa, a2))
        {
LABEL_42:

          return 0;
        }
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_37;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_39;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_39:
            *(void *)(a1 + 8) = v20;
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        BOOL v24 = objc_alloc_init(_MRTransactionPacketsProtobuf);
        objc_storeStrong((id *)(a1 + 16), v24);
        if (!PBReaderPlaceMark() || (_MRTransactionPacketsProtobufReadFrom(v24, a2) & 1) == 0) {
          goto LABEL_42;
        }
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRSetListeningModeMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 8;
LABEL_22:
        unsigned int v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadString();
    uint64_t v18 = 16;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRUpdatePlayerMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark()
          || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v17->super.super.isa, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRGroupSessionTokenProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 24;
          goto LABEL_33;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_44;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_44:
          uint64_t v32 = 32;
          goto LABEL_49;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
          goto LABEL_33;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_33;
        case 5u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 48;
          goto LABEL_33;
        case 6u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
LABEL_33:
          uint64_t v26 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        case 7u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 60) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v30 + 1;
        v22 |= (unint64_t)(v31 & 0x7F) << v27;
        if ((v31 & 0x80) == 0) {
          goto LABEL_46;
        }
        v27 += 7;
        BOOL v14 = v28++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_48;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v22) = 0;
      }
LABEL_48:
      uint64_t v32 = 56;
LABEL_49:
      *(_DWORD *)(a1 + v32) = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MRBroadcastCommandResponseGetPID(void *a1)
{
  id v1 = [a1 playerPath];
  int v2 = [v1 client];
  uint64_t v3 = [v2 processIdentifier];

  return v3;
}

void *MRBroadcastCommandResponseGetBundleIdentifier(void *a1)
{
  id v1 = [a1 playerPath];
  int v2 = [v1 client];
  uint64_t v3 = [v2 bundleIdentifier];

  return v3;
}

uint64_t MRAnalyticsCompositionForEndpoint(void *a1)
{
  id v1 = a1;
  if ([v1 isLocalEndpoint])
  {
    if (MRAnalyticsCompositionForLocalDevice_onceToken != -1) {
      dispatch_once(&MRAnalyticsCompositionForLocalDevice_onceToken, &__block_literal_global_63);
    }
    uint64_t v2 = MRAnalyticsCompositionForLocalDevice_localDeviceComposition;
  }
  else
  {
    uint64_t v3 = [v1 designatedGroupLeader];
    id v4 = v3;
    if (v3)
    {
      id v5 = v3;
    }
    else
    {
      id v6 = [v1 outputDevices];
      id v5 = [v6 firstObject];
    }
    int v7 = [v5 deviceSubtype];
    switch(v7)
    {
      case 2:
        uint64_t v2 = 2;
        break;
      case 13:
        uint64_t v2 = 4;
        break;
      case 12:
        uint64_t v2 = 8;
        break;
      default:
        uint64_t v2 = 1;
        break;
    }
  }
  return v2;
}

uint64_t MRAnalyticsCompositionForLocalDevice()
{
  if (MRAnalyticsCompositionForLocalDevice_onceToken != -1) {
    dispatch_once(&MRAnalyticsCompositionForLocalDevice_onceToken, &__block_literal_global_63);
  }
  return MRAnalyticsCompositionForLocalDevice_localDeviceComposition;
}

uint64_t MRAnalyticsCompositionForOutputDevice(void *a1)
{
  int v1 = [a1 deviceSubtype];
  if (v1 == 12) {
    int v2 = 8;
  }
  else {
    int v2 = 1;
  }
  if (v1 == 13) {
    unsigned int v3 = 4;
  }
  else {
    unsigned int v3 = v2;
  }
  if (v1 == 2) {
    return 2;
  }
  else {
    return v3;
  }
}

uint64_t MRAnalyticsCompositionForOutputDevices(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    LODWORD(v4) = 0;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v1);
        }
        int v7 = [*(id *)(*((void *)&v10 + 1) + 8 * i) deviceSubtype];
        switch(v7)
        {
          case 2:
            int v8 = 2;
            break;
          case 13:
            int v8 = 4;
            break;
          case 12:
            int v8 = 8;
            break;
          default:
            int v8 = 1;
            break;
        }
        uint64_t v4 = v8 | v4;
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t MRAnalyticsCompositionForDeviceInfo(void *a1)
{
  uint64_t v1 = [a1 deviceClass];
  if ((unint64_t)(v1 - 1) > 8) {
    return 1;
  }
  else {
    return dword_1952244D8[v1 - 1];
  }
}

uint64_t MRAnalyticsCompositionForDeviceClass(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 8) {
    return 1;
  }
  else {
    return dword_1952244D8[a1 - 1];
  }
}

void __MRAnalyticsCompositionForLocalDevice_block_invoke()
{
  int IsMediaRemoteDaemon = MRProcessIsMediaRemoteDaemon();
  uint64_t v1 = +[MROrigin localOrigin];
  if (IsMediaRemoteDaemon) {
    +[MRDeviceInfoRequest cachedDeviceInfoForOrigin:v1];
  }
  else {
  id v2 = +[MRDeviceInfoRequest deviceInfoForOrigin:v1];
  }

  MRAnalyticsCompositionForLocalDevice_localDeviceComposition = MRAnalyticsCompositionForDeviceInfo(v2);
}

void __MRAnalyticsSendEvent_block_invoke_3(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (MSVDeviceOSIsInternalInstall())
  {
    id v2 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    uint64_t v3 = _MRLogForCategory(0);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)int buf = 138412546;
      uint64_t v8 = v4;
      __int16 v9 = 2112;
      long long v10 = v2;
      _os_log_impl(&dword_194F3C000, v3, OS_LOG_TYPE_DEFAULT, "Logging to CoreAnalytics: %@\n%@", buf, 0x16u);
    }

    id v6 = v2;
    id v5 = v2;
    AnalyticsSendEventLazy();
  }
  else
  {
    AnalyticsSendEventLazy();
  }
}

id __MRAnalyticsSendEvent_block_invoke_381(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void MRAnalyticsTrackTopologyChangeEvent(void *a1, void *a2, void *a3, int a4, uint64_t a5, void *a6, char a7, void *a8)
{
  id v15 = a1;
  id v16 = a2;
  id v17 = a6;
  id v18 = a8;
  unsigned int v19 = [a3 componentsSeparatedByString:@"/"];
  char v20 = [v19 firstObject];

  v25[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v25[1] = 3221225472;
  v25[2] = __MRAnalyticsTrackTopologyChangeEvent_block_invoke;
  v25[3] = &unk_1E57D5EA8;
  id v26 = v17;
  id v27 = v16;
  int v31 = a4;
  char v32 = a7;
  id v28 = v15;
  id v29 = v20;
  uint64_t v30 = a5;
  id v21 = v20;
  id v22 = v15;
  id v23 = v16;
  id v24 = v17;
  MRAnalyticsSendEvent(@"com.apple.mediaremote.topology-modification", v18, v25);
}

id __MRAnalyticsTrackTopologyChangeEvent_block_invoke(uint64_t a1)
{
  v23[1[NSString stringWithFormat:@"com.apple.%@", 0] = *MEMORY[0x1E4F143B8];
  v22[[NSString stringWithFormat:@"com.apple.%@", 0] = @"originator";
  if (MRAnalyticsCompositionForLocalDevice_onceToken != -1) {
    dispatch_once(&MRAnalyticsCompositionForLocalDevice_onceToken, &__block_literal_global_63);
  }
  id v2 = MRAnalyticsDeviceCompositionDescription(MRAnalyticsCompositionForLocalDevice_localDeviceComposition);
  v23[[NSString stringWithFormat:@"com.apple.%@", 0] = v2;
  uint64_t v3 = objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle", v22[0], @"appBundle");
  uint64_t v4 = [v3 bundleIdentifier];
  id v5 = (void *)v4;
  if (v4) {
    id v6 = (__CFString *)v4;
  }
  else {
    id v6 = @"unknown";
  }
  v23[1] = v6;
  v22[2] = @"destination";
  int v7 = MRAnalyticsCompositionForOutputDevices(*(void **)(a1 + 32));
  uint64_t v8 = MRAnalyticsDeviceCompositionDescription(v7);
  v23[2] = v8;
  void v22[3] = @"duration";
  __int16 v9 = NSNumber;
  [*(id *)(a1 + 40) timeIntervalSinceNow];
  uint64_t v11 = [v9 numberWithDouble:fabs(v10)];
  uint64_t v12 = *(void *)(a1 + 48);
  v23[3] = v11;
  void v23[4] = v12;
  void v22[4] = @"type";
  v22[5] = @"leader";
  long long v13 = MRAnalyticsDeviceCompositionDescription(*(_DWORD *)(a1 + 72));
  v23[5] = v13;
  v22[6] = @"isLocal";
  uint64_t v14 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 76)];
  id v15 = (void *)v14;
  id v17 = *(__CFString **)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 64);
  if (!v17) {
    id v17 = @"unknown";
  }
  v23[6] = v14;
  v23[7] = v17;
  v22[7] = @"initiator";
  v22[8] = @"initialGroupSize";
  id v18 = [NSNumber numberWithUnsignedInteger:v16];
  v23[8] = v18;
  v22[9] = @"changeSetSize";
  unsigned int v19 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "count"));
  v23[9] = v19;
  char v20 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v23 forKeys:v22 count:10];

  return v20;
}

void MRMediaRemoteSetCommandHandler(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = +[MRNowPlayingOriginClientManager sharedManager];
  id v6 = [v5 originClientForOrigin:v4];

  [v6 setCommandCallback:v3];
}

void MRMediaRemoteSetCommandHandlerBlock(void *a1)
{
}

void MRMediaRemoteSetCommandHandlerBlockForPlayer(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRNowPlayingOriginClientManager sharedManager];
  id v5 = [v4 playerClientForPlayerPath:a1];

  id v6 = [v5 clientCallbacks];
  [v6 removeCommandHandlerBlockForKey:@"JUST_GOT_SPLASH_BEATS!"];

  if (v3)
  {
    int v7 = [v5 clientCallbacks];
    v8[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    void v8[2] = __MRMediaRemoteSetCommandHandlerBlockForPlayer_block_invoke;
    v8[3] = &unk_1E57D5ED0;
    id v9 = v3;
    [v7 addCommandHandlerBlock:v8 forKey:@"JUST_GOT_SPLASH_BEATS!"];
  }
}

void __MRMediaRemoteSetCommandHandlerBlockForPlayer_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *(void *)(a1 + 32);
  int v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = a4;
  id v10 = (id)v7(v6, a2, a3);
  id v9 = objc_msgSend(v10, "msv_map:", &__block_literal_global_64);
  v8[2](v8, v9);
}

MRSendCommandResultStatus *__MRMediaRemoteSetCommandHandlerBlockForPlayer_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 unsignedIntValue];

  return +[MRSendCommandResultStatus statusWithCode:v2];
}

uint64_t MRMediaRemoteAddCommandHandlerBlock(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[MROrigin localOrigin];
  uint64_t v3 = MRMediaRemoteAddCommandHandlerBlockForOrigin((uint64_t)v2, v1);

  return v3;
}

uint64_t MRMediaRemoteAddCommandHandlerBlockForOrigin(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  uint64_t v5 = MRMediaRemoteAddCommandHandlerBlockForPlayer((uint64_t)v4, v3);

  return v5;
}

uint64_t MRMediaRemoteAddCommandHandlerBlockForPlayer(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteAddCommandHandlerBlockForPlayer_block_invoke;
  v7[3] = &unk_1E57D5EF8;
  id v8 = v3;
  id v4 = v3;
  uint64_t v5 = MRMediaRemoteAddAsyncCommandHandlerBlockForPlayer(a1, v7);

  return v5;
}

uint64_t MRMediaRemoteAddAsyncCommandHandlerBlockForPlayer(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_msgSend(NSString, "stringWithFormat:", @"%08x", arc4random());
  uint64_t v5 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v6 = [v5 playerClientForPlayerPath:a1];

  int v7 = [v6 clientCallbacks];
  v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  _OWORD v10[2] = __MRMediaRemoteAddAsyncCommandHandlerBlockForPlayer_block_invoke;
  v10[3] = &unk_1E57D5ED0;
  id v11 = v3;
  id v8 = v3;
  [v7 addCommandHandlerBlock:v10 forKey:v4];

  return v4;
}

uint64_t MRMediaRemoteAddAsyncCommandHandlerBlock(void *a1)
{
  return MRMediaRemoteAddAsyncCommandHandlerBlockForOrigin(0, a1);
}

uint64_t MRMediaRemoteAddAsyncCommandHandlerBlockForOrigin(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  uint64_t v5 = MRMediaRemoteAddAsyncCommandHandlerBlockForPlayer((uint64_t)v4, v3);

  return v5;
}

void __MRMediaRemoteAddAsyncCommandHandlerBlockForPlayer_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  id v8 = v7;
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9)
  {
    v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    _OWORD v10[2] = __MRMediaRemoteAddAsyncCommandHandlerBlockForPlayer_block_invoke_2;
    v10[3] = &unk_1E57D1440;
    id v11 = v7;
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v9 + 16))(v9, a2, a3, v10);
  }
}

void __MRMediaRemoteAddAsyncCommandHandlerBlockForPlayer_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  objc_msgSend(a2, "msv_map:", &__block_literal_global_20_0);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void __MRMediaRemoteSetCommandHandlerCallback_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = a5;
  uint64_t v10 = *(void *)(a1 + 32);
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  _OWORD v13[2] = __MRMediaRemoteSetCommandHandlerCallback_block_invoke_2;
  v13[3] = &unk_1E57D4D40;
  id v14 = v9;
  id v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v10 + 16);
  id v12 = v9;
  v11(v10, a2, a3, a4, v13);
}

void __MRMediaRemoteSetCommandHandlerCallback_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = [[MRCommandResult alloc] initWithHandlerStatuses:a3 sendError:a2];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRMediaRemoteSetCommandHandlerCallbackForOrigin(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[MRNowPlayingOriginClientManager sharedManager];
  uint64_t v5 = [v4 originClientForOrigin:a1];

  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteSetCommandHandlerCallbackForOrigin_block_invoke;
  v7[3] = &unk_1E57D5F20;
  id v8 = v3;
  id v6 = v3;
  [v5 setCommandCallback:v7];
}

void __MRMediaRemoteSetCommandHandlerCallbackForOrigin_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = a5;
  uint64_t v10 = *(void *)(a1 + 32);
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  _OWORD v13[2] = __MRMediaRemoteSetCommandHandlerCallbackForOrigin_block_invoke_2;
  v13[3] = &unk_1E57D1440;
  id v14 = v9;
  id v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v10 + 16);
  id v12 = v9;
  v11(v10, a2, a3, a4, v13);
}

void __MRMediaRemoteSetCommandHandlerCallbackForOrigin_block_invoke_2(uint64_t a1, uint64_t a2)
{
  id v3 = [[MRCommandResult alloc] initWithHandlerStatuses:a2 sendError:0];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void MRMediaRemoteRemoveCommandHandlerBlock(uint64_t a1)
{
}

void MRMediaRemoteRemoveCommandHandlerBlockForOrigin(uint64_t a1, uint64_t a2)
{
  id v3 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  MRMediaRemoteRemoveCommandHandlerBlockForPlayer((uint64_t)v3, a2);
}

void MRMediaRemoteRemoveCommandHandlerBlockForPlayer(uint64_t a1, uint64_t a2)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v4 = +[MRNowPlayingOriginClientManager sharedManager];
    id v6 = [v4 playerClientForPlayerPath:a1];

    uint64_t v5 = [v6 clientCallbacks];
    [v5 removeCommandHandlerBlockForKey:a2];
  }
}

uint64_t _MRGetVolumeControlCapabilitiesMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        id v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

MRTelevisionController *MRTelevisionControllerCreate()
{
  id v0 = (void *)MEMORY[0x199718E70]();
  id v1 = objc_alloc_init(MRTelevisionController);
  return v1;
}

uint64_t MRTelevisionControllerIsDiscoveringDevices(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 isDiscovering];
  return v3;
}

void MRTelevisionControllerSetDiscoveryCallback(void *a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  char v8 = 0;
  if (v9 && v5) {
    char v8 = [[_MRTelevisionControllerBlockCallback alloc] initWithCallbackBlock:v5 queue:v9];
  }
  [v7 setDiscoveryCallback:v8];
}

void MRTelevisionControllerSetRemovalCallback(void *a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id v6 = (void *)MEMORY[0x199718E70]();
  id v7 = a1;
  char v8 = 0;
  if (v9 && v5) {
    char v8 = [[_MRTelevisionControllerBlockCallback alloc] initWithCallbackBlock:v5 queue:v9];
  }
  [v7 setRemovalCallback:v8];
}

void MRTelevisionControllerBeginDiscovery(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  [a1 beginDiscovery];
}

void MRTelevisionControllerEndDiscovery(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  [a1 endDiscovery];
}

uint64_t MRAVEndpointGetExternalDevice(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 externalDevice];
  return v3;
}

uint64_t MRAVEndpointCopyOutputDevices(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 outputDevices];
  uint64_t v4 = [v3 copy];

  return v4;
}

uint64_t MRAVEndpointCopyPersonalOutputDevices(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 personalOutputDevices];
  uint64_t v4 = [v3 copy];

  return v4;
}

uint64_t MRAVEndpointCopyLocalizedName(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 localizedName];
  uint64_t v4 = [v3 copy];

  return v4;
}

uint64_t MRAVEndpointCopyUniqueIdentifier(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 uniqueIdentifier];
  uint64_t v4 = [v3 copy];

  return v4;
}

uint64_t MRAVEndpointGetLocalizedName(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 localizedName];
  return v3;
}

uint64_t MRAVEndpointGetUniqueIdentifier(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 uniqueIdentifier];
  return v3;
}

uint64_t MRAVEndpointIsLocalEndpoint(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 isLocalEndpoint];
  return v3;
}

uint64_t MRAVEndpointIsProxyGroupPlayer(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 isProxyGroupPlayer];
  return v3;
}

uint64_t MRAVEndpointGetConnectionType(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 connectionType];
  return v3;
}

uint64_t MRAVEndpointCreateWithDevices()
{
  return 0;
}

void MRAVEndpointCreateWithDevicesAsync(uint64_t a1, uint64_t a2, void (**a3)(void, void, void))
{
  if (a3)
  {
    id v5 = a3;
    uint64_t Error = MRMediaRemoteCreateError(3);
    ((void (**)(id, uint64_t, void))a3)[2](v5, Error, 0);
  }
}

void MRAVEndpointGroupDevicesAndSendCommandWithResult(void *a1, unsigned int a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a1;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  uint64_t v16 = (void *)MEMORY[0x199718E70]();
  uint64_t v17 = NSStringFromSelector("uid");
  id v18 = [v11 valueForKeyPath:v17];

  v25[1] = v12;
  v25[[NSString stringWithFormat:@"com.apple.%@", 0] = (void *)a2;
  v25[2] = v13;
  unsigned int v19 = (void *)MRGetSharedService();
  v22[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  v22[2] = __MRAVEndpointGroupDevicesAndSendCommandWithResult_block_invoke;
  void v22[3] = &unk_1E57D5FD0;
  id v20 = v13;
  id v23 = v20;
  id v21 = v15;
  id v24 = v21;
  MRMediaRemoteServiceGroupDevicesAndSendCommand(v19, (uint64_t)v18, v25, v14, v22);
}

void __MRAVEndpointGroupDevicesAndSendCommandWithResult_block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  id v11 = a3;
  id v12 = [[MRCommandResult alloc] initWithResultStatuses:v9 sendError:a2 playerPath:*(void *)(a1 + 32)];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void MRAVEndpointGroupDevicesAndSendCommand(void *a1, unsigned int a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  id v13 = (void *)MEMORY[0x199718E70]();
  v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __MRAVEndpointGroupDevicesAndSendCommand_block_invoke;
  v15[3] = &unk_1E57D5FF8;
  id v14 = v12;
  id v16 = v14;
  MRAVEndpointGroupDevicesAndSendCommandWithResult(a1, a2, a3, a4, v11, v15);
}

void __MRAVEndpointGroupDevicesAndSendCommand_block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  uint64_t v10 = [v9 sendError];
  id v11 = [v9 handlerReturnStatuses];

  (*(void (**)(uint64_t, uint64_t, id, id, id))(v6 + 16))(v6, v10, v8, v7, v11);
}

void MRAVEndpointPredictGroupLeader(void *a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  uint64_t v6 = (void *)MEMORY[0x199718E70]();
  id v7 = NSStringFromSelector("uid");
  id v8 = [a1 valueForKeyPath:v7];

  id v9 = (void *)MRGetSharedService();
  MRMediaRemoteServicePredictGroupLeader(v9, (uint64_t)v8, v10, v5);
}

uint64_t MRAVEndpointGetDesignatedGroupLeader(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 designatedGroupLeader];
  return v3;
}

void MRAVEndpointSetVolume(void *a1, void *a2, void *a3, float a4)
{
}

void MRAVEndpointGetOutputDeviceVolumeControlCapabilities(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)MEMORY[0x199718E70]();
  id v10 = (void *)MRAVOutputDeviceCopyUniqueIdentifier(a2);
  v12[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __MRAVEndpointGetOutputDeviceVolumeControlCapabilities_block_invoke;
  v12[3] = &unk_1E57D3E28;
  id v11 = v8;
  id v13 = v11;
  [a1 outputDeviceVolumeControlCapabilities:v10 queue:v7 completion:v12];
}

uint64_t __MRAVEndpointGetOutputDeviceVolumeControlCapabilities_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t MRAVEndpointIsOutputDeviceVolumeControlAvailable()
{
  return 0;
}

void MRAVEndpointGetOutputDeviceVolume(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)MEMORY[0x199718E70]();
  id v10 = (void *)MRAVOutputDeviceCopyUniqueIdentifier(a2);
  v12[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __MRAVEndpointGetOutputDeviceVolume_block_invoke;
  v12[3] = &unk_1E57D6020;
  id v11 = v8;
  id v13 = v11;
  [a1 outputDeviceVolume:v10 queue:v7 completion:v12];
}

uint64_t __MRAVEndpointGetOutputDeviceVolume_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t __MRAVEndpointSetOutputDeviceVolume_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRAVEndpointSetOutputDeviceUIDVolume(void *a1, uint64_t a2, void *a3, void *a4, float a5)
{
  id v9 = a3;
  id v10 = a4;
  id v11 = (void *)MEMORY[0x199718E70]();
  v14[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __MRAVEndpointSetOutputDeviceUIDVolume_block_invoke;
  v14[3] = &unk_1E57D0FE8;
  id v12 = v10;
  id v15 = v12;
  *(float *)&double v13 = a5;
  [a1 setOutputDeviceVolume:a2 outputDevice:v9 queue:v14 completion:v13];
}

uint64_t __MRAVEndpointSetOutputDeviceUIDVolume_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRAVEndpointAddOutputDevices(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void MRAVEndpointAddOutputDevicesWithInitiator(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)MEMORY[0x199718E70]();
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  _OWORD v13[2] = __MRAVEndpointAddOutputDevicesWithInitiator_block_invoke;
  v13[3] = &unk_1E57D0FE8;
  id v12 = v10;
  id v14 = v12;
  [a1 migrateToOrAddOutputDevices:a2 initiator:a3 withReplyQueue:v9 completion:v13];
}

void __MRAVEndpointAddOutputDevicesWithInitiator_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(a1 + 32))
  {
    id v5 = v3;
    if (MRMediaRemoteErrorIsInformational(v3))
    {

      id v4 = 0;
    }
    else
    {
      id v4 = v5;
    }
    id v6 = v4;
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id v3 = v6;
  }
}

void MRAVEndpointRemoveOutputDevices(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void __MRAVEndpointRemoveOutputDevicesWithInitiator_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(a1 + 32))
  {
    id v5 = v3;
    if (MRMediaRemoteErrorIsInformational(v3))
    {

      id v4 = 0;
    }
    else
    {
      id v4 = v5;
    }
    id v6 = v4;
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id v3 = v6;
  }
}

void MRAVEndpointSetOutputDevices(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void MRAVEndpointSetOutputDevicesWithInitiator(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)MEMORY[0x199718E70]();
  v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  _OWORD v13[2] = __MRAVEndpointSetOutputDevicesWithInitiator_block_invoke;
  v13[3] = &unk_1E57D0FE8;
  id v12 = v10;
  id v14 = v12;
  [a1 migrateToOrSetOutputDevices:a2 initiator:a3 withReplyQueue:v9 completion:v13];
}

void __MRAVEndpointSetOutputDevicesWithInitiator_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(a1 + 32))
  {
    id v5 = v3;
    if (MRMediaRemoteErrorIsInformational(v3))
    {

      id v4 = 0;
    }
    else
    {
      id v4 = v5;
    }
    id v6 = v4;
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id v3 = v6;
  }
}

void MRAVEndpointModifyOutputDevicesInGroup(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v120 = *MEMORY[0x1E4F143B8];
  id v10 = a2;
  id v11 = a3;
  id v63 = a4;
  id v69 = a5;
  id v65 = a6;
  id v12 = [MEMORY[0x1E4F1C9C8] date];
  double v13 = [MEMORY[0x1E4F29128] UUID];
  id v14 = [v13 UUIDString];

  id v15 = [NSString alloc];
  id v16 = MRGroupTopologyModificationRequestTypeDescription(a1);
  uint64_t v17 = (void *)[v15 initWithFormat:@"%@OutputDevicesInGroup", v16];

  id v18 = [MEMORY[0x1E4F1CA60] dictionary];
  id v19 = [NSString alloc];
  id v20 = v19;
  if (v11)
  {
    uint64_t v21 = [v19 initWithFormat:@"group=%@ outputDevices=%@", v11, v10];
  }
  else
  {
    id v22 = +[MRAVOutputDevice localDeviceUID];
    uint64_t v21 = [v20 initWithFormat:@"group=%@ outputDevices=%@", v22, v10];
  }
  id v23 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", v17, v14];
  id v24 = v23;
  if (v21) {
    [v23 appendFormat:@" for %@", v21];
  }
  uint64_t v62 = (void *)v21;
  char v25 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v24;
    _os_log_impl(&dword_194F3C000, v25, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", (uint8_t *)&buf, 0xCu);
  }

  id v67 = (id)[[NSString alloc] initWithFormat:@"com.apple.mediaremote.%@.%@", v17, v14];
  if (v69)
  {
    queue = v69;
  }
  else
  {
    id v26 = (const char *)[v67 UTF8String];
    id v27 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    qos_class_t v28 = qos_class_self();
    id v29 = dispatch_queue_attr_make_with_qos_class(v27, v28, 0);
    queue = dispatch_queue_create(v26, v29);
  }
  v106[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v106[1] = 3221225472;
  v106[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke;
  v106[3] = &unk_1E57D6048;
  id v30 = v17;
  id v107 = v30;
  id v31 = v14;
  id v108 = v31;
  id v60 = v12;
  id v109 = v60;
  id v32 = v18;
  id v110 = v32;
  uint64_t v114 = a1;
  id v58 = v63;
  id v111 = v58;
  id v33 = v10;
  id v112 = v33;
  id v59 = v65;
  id v113 = v59;
  id v64 = (void *)MEMORY[0x1997190F0](v106);
  uint64_t v34 = [(Class)getAVAudioSessionClass_1[0]() auxiliarySession];
  id v35 = getAVAudioSessionCategoryPlayback_0();
  id v105 = 0;
  char v36 = [v34 setCategory:v35 error:&v105];
  id v66 = v105;

  if ((v36 & 1) == 0)
  {
    id v37 = _MRLogForCategory(0);
    if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      MRAVEndpointModifyOutputDevicesInGroup_cold_1((uint64_t)v66, v37);
    }
  }
  v100[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v100[1] = 3221225472;
  v100[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_92;
  v100[3] = &unk_1E57D60C0;
  id v38 = v30;
  id v101 = v38;
  id v39 = v31;
  id v102 = v39;
  id v40 = v32;
  id v103 = v40;
  id v41 = v11;
  id v104 = v41;
  id v42 = (void (**)(void, void, void))MEMORY[0x1997190F0](v100);
  v95[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v95[1] = 3221225472;
  v95[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_139;
  v95[3] = &unk_1E57D6138;
  id v43 = v38;
  id v96 = v43;
  id v44 = v39;
  id v97 = v44;
  id v45 = v40;
  id v98 = v45;
  id v61 = v34;
  id v99 = v61;
  uint64_t v46 = (void (**)(void, void, void))MEMORY[0x1997190F0](v95);
  v90[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v90[1] = 3221225472;
  v90[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_150;
  v90[3] = &unk_1E57D61B0;
  id v56 = v43;
  id v91 = v56;
  id v55 = v44;
  id v92 = v55;
  id v47 = v33;
  id v93 = v47;
  id v57 = v45;
  id v94 = v57;
  long long v48 = (void *)MEMORY[0x1997190F0](v90);
  long long v49 = (void *)MEMORY[0x199718E70]();
  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v116 = 0x3032000000;
  unint64_t v117 = __Block_byref_object_copy__26;
  char v118 = __Block_byref_object_dispose__26;
  id v119 = 0;
  v88[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
  v88[1] = v88;
  v88[2] = 0x3032000000;
  v88[3] = __Block_byref_object_copy__26;
  v88[4] = __Block_byref_object_dispose__26;
  id v89 = 0;
  v86[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
  v86[1] = v86;
  v86[2] = 0x3032000000;
  v86[3] = __Block_byref_object_copy__26;
  v86[4] = __Block_byref_object_dispose__26;
  id v87 = 0;
  long long v50 = dispatch_group_create();
  dispatch_group_enter(v50);
  dispatch_group_enter(v50);
  v82[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v82[1] = 3221225472;
  v82[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_159;
  v82[3] = &unk_1E57D21D8;
  id v84 = v88;
  id v85 = v86;
  uint64_t v51 = v50;
  unint64_t v83 = v51;
  ((void (**)(void, id, void *))v46)[2](v46, v47, v82);
  v78[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v78[1] = 3221225472;
  v78[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_2;
  v78[3] = &unk_1E57D61D8;
  p_long long buf = &buf;
  uint64_t v81 = v86;
  id v52 = v51;
  __int16 v79 = v52;
  ((void (**)(void, id, void *))v42)[2](v42, v41, v78);
  block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_3;
  block[3] = &unk_1E57D6228;
  int v74 = v86;
  id v53 = v48;
  id v72 = v53;
  id v75 = &buf;
  uint64_t v76 = v88;
  uint64_t v77 = a1;
  id v54 = v64;
  id v73 = v54;
  dispatch_group_notify(v52, queue, block);

  _Block_object_dispose(v86, 8);
  _Block_object_dispose(v88, 8);

  _Block_object_dispose(&buf, 8);
}

void sub_1950EBFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  _Block_object_dispose(&a50, 8);
  _Block_object_dispose(&a56, 8);
  _Block_object_dispose((const void *)(v56 - 160), 8);
  _Unwind_Resume(a1);
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = [v7 debugName];

  id v11 = _MRLogForCategory(0xAuLL);
  id v12 = v11;
  if (!v9)
  {
    BOOL v19 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    if (!v10)
    {
      if (!v19) {
        goto LABEL_14;
      }
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v24 = *(void *)(a1 + 40);
      id v16 = [MEMORY[0x1E4F1C9C8] date];
      [v16 timeIntervalSinceDate:*(void *)(a1 + 48)];
      *(_DWORD *)long long buf = 138543874;
      uint64_t v40 = v23;
      __int16 v41 = 2114;
      uint64_t v42 = v24;
      __int16 v43 = 2048;
      id v44 = v25;
      _os_log_impl(&dword_194F3C000, v12, OS_LOG_TYPE_DEFAULT, "Response: %{public}@<%{public}@> returned in %.4lf seconds", buf, 0x20u);
      goto LABEL_13;
    }
    if (!v19) {
      goto LABEL_14;
    }
    uint64_t v20 = *(void *)(a1 + 32);
    uint64_t v21 = *(void *)(a1 + 40);
    id v16 = [v7 debugName];
    uint64_t v17 = [MEMORY[0x1E4F1C9C8] date];
    [v17 timeIntervalSinceDate:*(void *)(a1 + 48)];
    *(_DWORD *)long long buf = 138544130;
    uint64_t v40 = v20;
    __int16 v41 = 2114;
    uint64_t v42 = v21;
    __int16 v43 = 2114;
    id v44 = v16;
    __int16 v45 = 2048;
    uint64_t v46 = v22;
    _os_log_impl(&dword_194F3C000, v12, OS_LOG_TYPE_DEFAULT, "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds", buf, 0x2Au);
LABEL_8:

LABEL_13:
    goto LABEL_14;
  }
  BOOL v13 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
  if (v10)
  {
    if (!v13) {
      goto LABEL_14;
    }
    uint64_t v14 = *(void *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 40);
    id v16 = [v7 debugName];
    uint64_t v17 = [MEMORY[0x1E4F1C9C8] date];
    [v17 timeIntervalSinceDate:*(void *)(a1 + 48)];
    *(_DWORD *)long long buf = 138544386;
    uint64_t v40 = v14;
    __int16 v41 = 2114;
    uint64_t v42 = v15;
    __int16 v43 = 2114;
    id v44 = v9;
    __int16 v45 = 2114;
    uint64_t v46 = v16;
    __int16 v47 = 2048;
    uint64_t v48 = v18;
    _os_log_error_impl(&dword_194F3C000, v12, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", buf, 0x34u);
    goto LABEL_8;
  }
  if (v13) {
    __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_cold_1((void *)a1, (uint64_t)v9, v12);
  }
LABEL_14:

  id v26 = MRGroupTopologyModificationRequestTypeDescription(*(void *)(a1 + 88));
  [*(id *)(a1 + 56) setObject:v26 forKeyedSubscript:@"eventType"];

  [*(id *)(a1 + 56) setObject:*(void *)(a1 + 64) forKeyedSubscript:@"source"];
  id v27 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 72), "count"));
  [*(id *)(a1 + 56) setObject:v27 forKeyedSubscript:@"numberOfDevices"];

  qos_class_t v28 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v8, "count"));
  [*(id *)(a1 + 56) setObject:v28 forKeyedSubscript:@"actualNumberOfDevices"];

  id v29 = [v9 localizedFailureReason];
  [*(id *)(a1 + 56) setObject:v29 forKeyedSubscript:@"errorMessage"];

  id v30 = NSNumber;
  if (v9) {
    uint64_t v31 = [v9 isInformational];
  }
  else {
    uint64_t v31 = 1;
  }
  id v32 = [v30 numberWithInt:v31];
  [*(id *)(a1 + 56) setObject:v32 forKeyedSubscript:@"success"];

  id v33 = NSNumber;
  [*(id *)(a1 + 48) timeIntervalSinceNow];
  id v35 = [v33 numberWithDouble:fabs(v34)];
  [*(id *)(a1 + 56) setObject:v35 forKeyedSubscript:@"duration"];

  v37[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v37[1] = 3221225472;
  v37[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_89;
  v37[3] = &unk_1E57D3B68;
  id v38 = *(id *)(a1 + 56);
  MRAnalyticsSendEvent(@"com.apple.mediaremote.endpoint.modify.wha", 0, v37);
  uint64_t v36 = *(void *)(a1 + 80);
  if (v36) {
    (*(void (**)(uint64_t, id))(v36 + 16))(v36, v9);
  }
}

id __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_89(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_143(uint64_t a1, void *a2, void *a3)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id v7 = NSNumber;
  [*(id *)(a1 + 48) timeIntervalSinceNow];
  id v9 = [v7 numberWithDouble:fabs(v8)];
  [*(id *)(a1 + 32) setObject:v9 forKeyedSubscript:*(void *)(a1 + 40)];

  uint64_t v10 = *(void *)(a1 + 56);
  id v11 = _MRLogForCategory(0xAuLL);
  id v12 = v11;
  if (v5 && !v6)
  {
    BOOL v13 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    if (v10)
    {
      if (v13)
      {
        uint64_t v15 = *(void *)(a1 + 64);
        uint64_t v14 = *(void *)(a1 + 72);
        uint64_t v16 = *(void *)(a1 + 56);
        uint64_t v17 = [MEMORY[0x1E4F1C9C8] date];
        [v17 timeIntervalSinceDate:*(void *)(a1 + 48)];
        int v49 = 138544386;
        uint64_t v50 = v15;
        __int16 v51 = 2114;
        uint64_t v52 = v14;
        __int16 v53 = 2112;
        id v54 = v5;
        __int16 v55 = 2114;
        uint64_t v56 = v16;
        __int16 v57 = 2048;
        uint64_t v58 = v18;
        BOOL v19 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
        uint64_t v20 = v12;
        uint32_t v21 = 52;
LABEL_16:
        _os_log_impl(&dword_194F3C000, v20, OS_LOG_TYPE_DEFAULT, v19, (uint8_t *)&v49, v21);
LABEL_17:

        goto LABEL_23;
      }
      goto LABEL_23;
    }
    if (!v13) {
      goto LABEL_23;
    }
    uint64_t v35 = *(void *)(a1 + 64);
    uint64_t v36 = *(void *)(a1 + 72);
    uint64_t v17 = [MEMORY[0x1E4F1C9C8] date];
    [v17 timeIntervalSinceDate:*(void *)(a1 + 48)];
    int v49 = 138544130;
    uint64_t v50 = v35;
    __int16 v51 = 2114;
    uint64_t v52 = v36;
    __int16 v53 = 2112;
    id v54 = v5;
    __int16 v55 = 2048;
    uint64_t v56 = v37;
    BOOL v19 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
LABEL_15:
    uint64_t v20 = v12;
    uint32_t v21 = 42;
    goto LABEL_16;
  }
  if (v6)
  {
    BOOL v22 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
    if (v10)
    {
      if (!v22) {
        goto LABEL_23;
      }
      uint64_t v24 = *(void *)(a1 + 64);
      uint64_t v23 = *(void *)(a1 + 72);
      uint64_t v25 = *(void *)(a1 + 56);
      uint64_t v17 = [MEMORY[0x1E4F1C9C8] date];
      [v17 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v49 = 138544386;
      uint64_t v50 = v24;
      __int16 v51 = 2114;
      uint64_t v52 = v23;
      __int16 v53 = 2114;
      id v54 = v6;
      __int16 v55 = 2114;
      uint64_t v56 = v25;
      __int16 v57 = 2048;
      uint64_t v58 = v26;
      id v27 = "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds";
      qos_class_t v28 = v12;
      uint32_t v29 = 52;
    }
    else
    {
      if (!v22) {
        goto LABEL_23;
      }
      uint64_t v38 = *(void *)(a1 + 64);
      uint64_t v39 = *(void *)(a1 + 72);
      uint64_t v17 = [MEMORY[0x1E4F1C9C8] date];
      [v17 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v49 = 138544130;
      uint64_t v50 = v38;
      __int16 v51 = 2114;
      uint64_t v52 = v39;
      __int16 v53 = 2114;
      id v54 = v6;
      __int16 v55 = 2048;
      uint64_t v56 = v40;
      id v27 = "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds";
      qos_class_t v28 = v12;
      uint32_t v29 = 42;
    }
    _os_log_error_impl(&dword_194F3C000, v28, OS_LOG_TYPE_ERROR, v27, (uint8_t *)&v49, v29);
    goto LABEL_17;
  }
  BOOL v30 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (!v10)
  {
    if (!v30) {
      goto LABEL_23;
    }
    uint64_t v41 = *(void *)(a1 + 64);
    uint64_t v42 = *(void *)(a1 + 72);
    uint64_t v17 = [MEMORY[0x1E4F1C9C8] date];
    [v17 timeIntervalSinceDate:*(void *)(a1 + 48)];
    int v49 = 138543874;
    uint64_t v50 = v41;
    __int16 v51 = 2114;
    uint64_t v52 = v42;
    __int16 v53 = 2048;
    id v54 = v43;
    BOOL v19 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
    uint64_t v20 = v12;
    uint32_t v21 = 32;
    goto LABEL_16;
  }
  if (v30)
  {
    uint64_t v32 = *(void *)(a1 + 64);
    uint64_t v31 = *(void *)(a1 + 72);
    id v33 = *(void **)(a1 + 56);
    uint64_t v17 = [MEMORY[0x1E4F1C9C8] date];
    [v17 timeIntervalSinceDate:*(void *)(a1 + 48)];
    int v49 = 138544130;
    uint64_t v50 = v32;
    __int16 v51 = 2114;
    uint64_t v52 = v31;
    __int16 v53 = 2114;
    id v54 = v33;
    __int16 v55 = 2048;
    uint64_t v56 = v34;
    BOOL v19 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
    goto LABEL_15;
  }
LABEL_23:

  (*(void (**)(void, id, id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 80) + 16))(*(void *)(a1 + 80), v5, v6, v44, v45, v46, v47, v48);
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_145(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  if ([v6 count])
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    id v8 = v7;
    id v9 = v8;
    if ([v8 code] == 26)
    {
      id v9 = (void *)[objc_alloc(MEMORY[0x1E4F28C58]) initWithMRError:47, @"Timedout after %lf seconds trying discover audioOutputDevices. Discovered=%@, Requested=%@", 0x4008000000000000, v6, *(void *)(a1 + 32) format];
    }
    uint64_t v10 = _MRLogForCategory(0);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_145_cold_1(a1, (uint64_t)v8, v10);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_150(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = [MEMORY[0x1E4F1C9C8] now];
  BOOL v13 = (void *)[[NSString alloc] initWithFormat:@"%@.%@", *(void *)(a1 + 32), @"routingOperation"];
  uint64_t v14 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithFormat:@"%@<%@>", v13, *(void *)(a1 + 40)];
  uint64_t v15 = v14;
  if (*(void *)(a1 + 48)) {
    [v14 appendFormat:@" for %@", *(void *)(a1 + 48)];
  }
  uint64_t v16 = _MRLogForCategory(0xAuLL);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    uint64_t v48 = v15;
    _os_log_impl(&dword_194F3C000, v16, OS_LOG_TYPE_DEFAULT, "Request: %{public}@", buf, 0xCu);
  }

  v38[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v38[1] = 3221225472;
  v38[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_154;
  v38[3] = &unk_1E57D6160;
  id v39 = *(id *)(a1 + 56);
  uint64_t v40 = @"routingOperation";
  id v17 = v12;
  id v41 = v17;
  id v18 = v10;
  id v42 = v18;
  id v43 = *(id *)(a1 + 48);
  id v19 = v13;
  id v44 = v19;
  id v45 = *(id *)(a1 + 40);
  id v20 = v11;
  id v46 = v20;
  uint32_t v21 = (void *)MEMORY[0x1997190F0](v38);
  BOOL v22 = [[MRRequestDetails alloc] initWithInitiator:@"Infer" requestID:*(void *)(a1 + 40) reason:*(void *)(a1 + 32)];
  switch(a2)
  {
    case 3:
      if ([v9 isGroupable])
      {
        id v27 = v9;
        qos_class_t v28 = [[MRGroupTopologyModificationRequest alloc] initWithRequestDetails:v22 type:1 outputDevices:v18];
        qos_class_t v29 = qos_class_self();
        BOOL v30 = dispatch_get_global_queue(v29, 0);
        v33[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
        v33[1] = 3221225472;
        v33[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_157;
        v33[3] = &unk_1E57D6188;
        id v37 = v21;
        uint64_t v34 = v22;
        id v35 = v18;
        id v36 = v27;
        id v31 = v27;
        [v31 modifyTopologyWithRequest:v28 withReplyQueue:v30 completion:v33];

LABEL_17:
        break;
      }
      uint64_t v25 = [MRGroupTopologyModificationRequest alloc];
      uint64_t v26 = v22;
      uint64_t v24 = 3;
LABEL_16:
      qos_class_t v28 = [(MRGroupTopologyModificationRequest *)v25 initWithRequestDetails:v26 type:v24 outputDevices:v18];
      qos_class_t v32 = qos_class_self();
      dispatch_get_global_queue(v32, 0);
      id v31 = (id)objc_claimAutoreleasedReturnValue();
      [v9 modifyTopologyWithRequest:v28 withReplyQueue:v31 completion:v21];
      goto LABEL_17;
    case 2:
      uint64_t v25 = [MRGroupTopologyModificationRequest alloc];
      uint64_t v26 = v22;
      uint64_t v24 = 2;
      goto LABEL_16;
    case 1:
      uint64_t v23 = [MRGroupTopologyModificationRequest alloc];
      if ([v9 isGroupable]) {
        uint64_t v24 = 1;
      }
      else {
        uint64_t v24 = 3;
      }
      uint64_t v25 = v23;
      uint64_t v26 = v22;
      goto LABEL_16;
  }
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_154(uint64_t a1, void *a2)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id v4 = NSNumber;
  [*(id *)(a1 + 48) timeIntervalSinceNow];
  id v6 = [v4 numberWithDouble:fabs(v5)];
  [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:*(void *)(a1 + 40)];

  if (!v3)
  {
    uint64_t v19 = *(void *)(a1 + 56);
    uint64_t v18 = *(void *)(a1 + 64);
    id v8 = _MRLogForCategory(0xAuLL);
    BOOL v20 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v19)
    {
      if (v18)
      {
        if (!v20) {
          goto LABEL_22;
        }
        uint64_t v21 = *(void *)(a1 + 72);
        uint64_t v22 = *(void *)(a1 + 80);
        uint64_t v23 = *(void **)(a1 + 56);
        uint64_t v24 = *(void *)(a1 + 64);
        BOOL v13 = [MEMORY[0x1E4F1C9C8] date];
        [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
        int v49 = 138544386;
        uint64_t v50 = v21;
        __int16 v51 = 2114;
        uint64_t v52 = v22;
        __int16 v53 = 2112;
        id v54 = v23;
        __int16 v55 = 2114;
        uint64_t v56 = v24;
        __int16 v57 = 2048;
        uint64_t v58 = v25;
        uint64_t v26 = "Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds";
        id v27 = v8;
        uint32_t v28 = 52;
LABEL_20:
        _os_log_impl(&dword_194F3C000, v27, OS_LOG_TYPE_DEFAULT, v26, (uint8_t *)&v49, v28);
        goto LABEL_21;
      }
      if (!v20) {
        goto LABEL_22;
      }
      uint64_t v36 = *(void *)(a1 + 72);
      uint64_t v37 = *(void *)(a1 + 80);
      uint64_t v38 = *(void **)(a1 + 56);
      BOOL v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v49 = 138544130;
      uint64_t v50 = v36;
      __int16 v51 = 2114;
      uint64_t v52 = v37;
      __int16 v53 = 2112;
      id v54 = v38;
      __int16 v55 = 2048;
      uint64_t v56 = v39;
      uint64_t v26 = "Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds";
    }
    else
    {
      if (!v18)
      {
        if (!v20) {
          goto LABEL_22;
        }
        uint64_t v40 = *(void *)(a1 + 72);
        uint64_t v41 = *(void *)(a1 + 80);
        BOOL v13 = [MEMORY[0x1E4F1C9C8] date];
        [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
        int v49 = 138543874;
        uint64_t v50 = v40;
        __int16 v51 = 2114;
        uint64_t v52 = v41;
        __int16 v53 = 2048;
        id v54 = v42;
        uint64_t v26 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
        id v27 = v8;
        uint32_t v28 = 32;
        goto LABEL_20;
      }
      if (!v20) {
        goto LABEL_22;
      }
      uint64_t v33 = *(void *)(a1 + 72);
      uint64_t v32 = *(void *)(a1 + 80);
      uint64_t v34 = *(void **)(a1 + 64);
      BOOL v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v49 = 138544130;
      uint64_t v50 = v33;
      __int16 v51 = 2114;
      uint64_t v52 = v32;
      __int16 v53 = 2114;
      id v54 = v34;
      __int16 v55 = 2048;
      uint64_t v56 = v35;
      uint64_t v26 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
    }
    id v27 = v8;
    uint32_t v28 = 42;
    goto LABEL_20;
  }
  uint64_t v7 = *(void *)(a1 + 64);
  id v8 = _MRLogForCategory(0xAuLL);
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
  if (v7)
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(a1 + 72);
      uint64_t v10 = *(void *)(a1 + 80);
      uint64_t v12 = *(void *)(a1 + 64);
      BOOL v13 = [MEMORY[0x1E4F1C9C8] date];
      [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
      int v49 = 138544386;
      uint64_t v50 = v11;
      __int16 v51 = 2114;
      uint64_t v52 = v10;
      __int16 v53 = 2114;
      id v54 = v3;
      __int16 v55 = 2114;
      uint64_t v56 = v12;
      __int16 v57 = 2048;
      uint64_t v58 = v14;
      uint64_t v15 = "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds";
      uint64_t v16 = v8;
      uint32_t v17 = 52;
LABEL_11:
      _os_log_error_impl(&dword_194F3C000, v16, OS_LOG_TYPE_ERROR, v15, (uint8_t *)&v49, v17);
LABEL_21:
    }
  }
  else if (v9)
  {
    uint64_t v29 = *(void *)(a1 + 72);
    uint64_t v30 = *(void *)(a1 + 80);
    BOOL v13 = [MEMORY[0x1E4F1C9C8] date];
    [v13 timeIntervalSinceDate:*(void *)(a1 + 48)];
    int v49 = 138544130;
    uint64_t v50 = v29;
    __int16 v51 = 2114;
    uint64_t v52 = v30;
    __int16 v53 = 2114;
    id v54 = v3;
    __int16 v55 = 2048;
    uint64_t v56 = v31;
    uint64_t v15 = "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds";
    uint64_t v16 = v8;
    uint32_t v17 = 42;
    goto LABEL_11;
  }
LABEL_22:

  (*(void (**)(void, id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 88) + 16))(*(void *)(a1 + 88), v3, v43, v44, v45, v46, v47, v48);
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_157(void *a1, void *a2)
{
  id v3 = a2;
  id v8 = v3;
  if (v3 && ([v3 isInformational] & 1) == 0)
  {
    (*(void (**)(void))(a1[7] + 16))();
  }
  else
  {
    id v4 = [[MRGroupTopologyModificationRequest alloc] initWithRequestDetails:a1[4] type:3 outputDevices:a1[5]];
    double v5 = (void *)a1[6];
    qos_class_t v6 = qos_class_self();
    uint64_t v7 = dispatch_get_global_queue(v6, 0);
    [v5 modifyTopologyWithRequest:v4 withReplyQueue:v7 completion:a1[7]];
  }
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_159(uint64_t a1, void *a2, void *a3)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v6 = a2;
  id v7 = a3;
  id v12 = v7;
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v11 = *(void **)(v8 + 40);
  BOOL v9 = (id *)(v8 + 40);
  uint64_t v10 = v11;
  if (v11) {
    id v7 = v10;
  }
  objc_storeStrong(v9, v7);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v6 = a2;
  id v7 = a3;
  id v12 = v7;
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v11 = *(void **)(v8 + 40);
  BOOL v9 = (id *)(v8 + 40);
  uint64_t v10 = v11;
  if (v11) {
    id v7 = v10;
  }
  objc_storeStrong(v9, v7);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_3(uint64_t a1)
{
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    uint64_t v2 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v2();
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 72);
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
    v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_4;
    v7[3] = &unk_1E57D6200;
    uint64_t v6 = *(void *)(a1 + 32);
    id v8 = *(id *)(a1 + 40);
    long long v9 = *(_OWORD *)(a1 + 56);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v6 + 16))(v6, v3, v4, v5, v7);
  }
}

uint64_t __MRAVEndpointModifyOutputDevicesInGroup_block_invoke_4(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(a1[4] + 16))(a1[4], *(void *)(*(void *)(a1[5] + 8) + 40), *(void *)(*(void *)(a1[6] + 8) + 40), a2);
}

void MRAVEndpointAddOutputDevicesToGroup(void *a1, void *a2, void *a3, void *a4)
{
}

void MRAVEndpointAddOutputDevicesToGroupFromSource(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MRAVEndpointAddOutputDevicesToGroupFromSource_block_invoke;
  v11[3] = &unk_1E57D0FE8;
  id v12 = v9;
  id v10 = v9;
  MRAVEndpointModifyOutputDevicesInGroup(1, a2, a1, a3, a4, v11);
}

uint64_t __MRAVEndpointAddOutputDevicesToGroupFromSource_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRAVEndpointRemoveOutputDevicesFromGroup(void *a1, void *a2, void *a3, void *a4)
{
}

void MRAVEndpointRemoveOutputDevicesFromGroupFromSource(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MRAVEndpointRemoveOutputDevicesFromGroupFromSource_block_invoke;
  v11[3] = &unk_1E57D0FE8;
  id v12 = v9;
  id v10 = v9;
  MRAVEndpointModifyOutputDevicesInGroup(2, a2, a1, a3, a4, v11);
}

uint64_t __MRAVEndpointRemoveOutputDevicesFromGroupFromSource_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void MRAVEndpointMoveOutputGroupToDevices(void *a1, void *a2, void *a3, void *a4)
{
}

void MRAVEndpointMoveOutputGroupToDevicesFromSource(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MRAVEndpointMoveOutputGroupToDevicesFromSource_block_invoke;
  v11[3] = &unk_1E57D0FE8;
  id v12 = v9;
  id v10 = v9;
  MRAVEndpointModifyOutputDevicesInGroup(3, a2, a1, a3, a4, v11);
}

uint64_t __MRAVEndpointMoveOutputGroupToDevicesFromSource_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t MRAVEndpointCanModifyGroupMembership(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x199718E70]();
  uint64_t v3 = [a1 canModifyGroupMembership];
  return v3;
}

void MRAVEndpointMigrate(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)MEMORY[0x199718E70]();
  v11[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MRAVEndpointMigrate_block_invoke;
  v11[3] = &unk_1E57D0FE8;
  id v10 = v8;
  id v12 = v10;
  [a1 migrateToEndpoint:a2 request:0 queue:v7 completion:v11];
}

uint64_t __MRAVEndpointMigrate_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t MRAVEndpointGetClass()
{
  return objc_opt_class();
}

void MRAVEndpointGetMyGroupLeaderWithTimeout(void *a1, void *a2, double a3)
{
  id v5 = a2;
  id v6 = a1;
  id v7 = [[MRRequestDetails alloc] initWithName:@"MRAVEndpointGetMyGroupLeaderWithTimeout" requestID:0 reason:@"LegacyAPI"];
  v9[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MRAVEndpointGetMyGroupLeaderWithTimeout_block_invoke;
  v9[3] = &unk_1E57D6250;
  id v10 = v5;
  id v8 = v5;
  +[MRAVEndpoint findMyGroupLeaderWithTimeout:v7 details:v6 queue:v9 completion:a3];
}

uint64_t __MRAVEndpointGetMyGroupLeaderWithTimeout_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

Class initAVAudioSession_1()
{
  if (AVFoundationLibrary_sOnce_6 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_6, &__block_literal_global_66);
  }
  Class result = objc_getClass("AVAudioSession");
  classAVAudioSession_1 = (uint64_t)result;
  getAVAudioSessionClass_1[[NSString stringWithFormat:@"com.apple.%@", 0] = (uint64_t (*)())AVAudioSessionFunction_1;
  return result;
}

id AVAudioSessionFunction_1()
{
  return (id)classAVAudioSession_1;
}

id initValAVAudioSessionCategoryPlayback_0()
{
  if (AVFoundationLibrary_sOnce_6 != -1) {
    dispatch_once(&AVFoundationLibrary_sOnce_6, &__block_literal_global_66);
  }
  id v0 = (id *)dlsym((void *)AVFoundationLibrary_sLib_6, "AVAudioSessionCategoryPlayback");
  if (v0) {
    objc_storeStrong((id *)&constantValAVAudioSessionCategoryPlayback_0, *v0);
  }
  getAVAudioSessionCategoryPlayback_0 = (uint64_t (*)())AVAudioSessionCategoryPlaybackFunction_0;
  id v1 = (void *)constantValAVAudioSessionCategoryPlayback_0;

  return v1;
}

id AVAudioSessionCategoryPlaybackFunction_0()
{
  return (id)constantValAVAudioSessionCategoryPlayback_0;
}

BOOL _MRGroupSessionIdentityShareReplyMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2)
      {
        uint32_t v17 = objc_alloc_init(_MRGroupSessionParticipantProtobuf);
        uint64_t v18 = 8;
      }
      else
      {
        if ((v10 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
          continue;
        }
        uint32_t v17 = objc_alloc_init(_MRGroupSessionParticipantProtobuf);
        uint64_t v18 = 16;
      }
      objc_storeStrong((id *)(a1 + v18), v17);
      if (!PBReaderPlaceMark() || (_MRGroupSessionParticipantProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRPresentRouteAuthorizationStatusMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_35:
        *(_DWORD *)(a1 + 16) = v20;
      }
      else if ((v10 >> 3) == 1)
      {
        uint32_t v17 = objc_alloc_init(_MRAVOutputDeviceDescriptorProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark()
          || (_MRAVOutputDeviceDescriptorProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id MRMusicHandoffSessionGetQueue()
{
  if (MRMusicHandoffSessionGetQueue_onceToken != -1) {
    dispatch_once(&MRMusicHandoffSessionGetQueue_onceToken, &__block_literal_global_67);
  }
  id v0 = (void *)MRMusicHandoffSessionGetQueue___queue;

  return v0;
}

void __MRMusicHandoffSessionGetQueue_block_invoke()
{
  uint64_t v2 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.MediaRemote.MRMusicHandoffSession", v2);
  id v1 = (void *)MRMusicHandoffSessionGetQueue___queue;
  MRMusicHandoffSessionGetQueue___queue = (uint64_t)v0;
}

uint64_t _MRGroupSessionErrorReplyMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        char v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_1950F1004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _MRTextInputMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        *(unsigned char *)(a1 + 32) |= 2u;
        while (1)
        {
          uint64_t v25 = *v3;
          uint64_t v26 = *(void *)(a2 + v25);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + *v4)) {
            break;
          }
          char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
          *(void *)(a2 + v25) = v27;
          v24 |= (unint64_t)(v28 & 0x7F) << v22;
          if ((v28 & 0x80) == 0) {
            goto LABEL_35;
          }
          v22 += 7;
          BOOL v15 = v23++ >= 9;
          if (v15)
          {
            LODWORD(v24) = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v24) = 0;
        }
LABEL_37:
        *(_DWORD *)(a1 + 16) = v24;
      }
      else if (v18 == 2)
      {
        uint64_t v29 = PBReaderReadString();
        uint64_t v30 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v29;
      }
      else if (v18 == 1)
      {
        *(unsigned char *)(a1 + 32) |= 1u;
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v21 = 0;
        }
        *(void *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void MRTelevisionServiceDeletePairingIdentity(void *a1, void *a2)
{
  id v3 = a2;
  id v5 = a1;
  uint64_t v4 = (void *)MRGetSharedService();
  MRMediaRemoteServiceTelevisionServerDeletePairingIdentity(v4, v5, v3);
}

void MRTelevisionServiceGetPairedDevices(void *a1, void *a2)
{
  id v3 = a2;
  id v5 = a1;
  uint64_t v4 = (void *)MRGetSharedService();
  MRMediaRemoteServiceTelevisionGetPairedDevices(v4, v5, v3);
}

void MRTelevisionServiceDeletePairedDevice(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v7 = a2;
  id v6 = (void *)MRGetSharedService();
  MRMediaRemoteServiceTelevisionDeletePairedDevice(v6, a1, v7, v5);
}

void MRTelevisionServiceSetMessageLogging(BOOL a1)
{
  uint64_t v2 = (void *)MRGetSharedService();

  MRMediaRemoteServiceTelevisionSetMessageLogging(v2, a1);
}

void MRTelevisionServiceSetEndpoint(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = (void *)MRGetSharedService();
  MRMediaRemoteServiceSetTelevisionEndpoint(v3, a1, v4);
}

void *MRTelevisionServiceGetEndpoint()
{
  if (MRTelevisionServiceGetEndpoint___once != -1) {
    dispatch_once(&MRTelevisionServiceGetEndpoint___once, &__block_literal_global_70);
  }
  return &MRTelevisionServiceGetEndpoint___endpoint;
}

void __MRTelevisionServiceGetEndpoint_block_invoke()
{
  dispatch_queue_t v0 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.mediaremote.televisionService", v0);
  uint64_t v2 = (void *)MRTelevisionServiceGetEndpoint___queue;
  MRTelevisionServiceGetEndpoint___queue = (uint64_t)v1;

  id v3 = (void *)MRTelevisionServiceGetEndpoint___queue;

  MRTelevisionServiceSetEndpoint((uint64_t)&MRTelevisionServiceGetEndpoint___endpoint, v3);
}

void MRTelevisionServiceSetCustomDataCallback(void *a1, void *a2)
{
  id v4 = a1;
  id v3 = a2;
  if (MRTelevisionServiceGetEndpoint___once != -1) {
    dispatch_once(&MRTelevisionServiceGetEndpoint___once, &__block_literal_global_70);
  }
  if (qword_1E935F180) {
    CFRelease((CFTypeRef)qword_1E935F180);
  }
  qword_1E935F180 = [v3 copy];
}

void MRTelevisionServiceSendCustomData(uint64_t a1, uint64_t a2)
{
  id v4 = (void *)MRGetSharedService();

  MRMediaRemoteServiceTelevisionSendCustomData(v4, a1, a2);
}

void sub_1950F2278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950F22E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1950F24FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

uint64_t _MRPlayerClientPropertiesMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v21 = 0;
        }
        *(void *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        objc_storeStrong((id *)(a1 + 16), v18);
        if (!PBReaderPlaceMark()
          || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v18->super.super.isa, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRMusicHandoffEventProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 16) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        unint64_t v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MRPairedDeviceCreateSkeletonFrom(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPairedDeviceCopyName(void *a1)
{
  dispatch_queue_t v1 = [a1 name];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceCopyLocalizedModelName(void *a1)
{
  dispatch_queue_t v1 = [a1 localizedModelName];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceCopyBuildVersion(void *a1)
{
  dispatch_queue_t v1 = [a1 buildVersion];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceCopySystemMediaApplication(void *a1)
{
  dispatch_queue_t v1 = [a1 systemMediaApplication];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceEqualToPairedDevice(void *a1, void *a2)
{
  if (a1 == a2) {
    return 1;
  }
  else {
    return objc_msgSend(a1, "isEqual:", a2, v2, v3);
  }
}

uint64_t MRPairedDeviceSetSystemMediaApplication(void *a1, const char *a2)
{
  return [a1 setSystemMediaApplication:a2];
}

uint64_t MRPairedDeviceSetSystemPodcastApplication(void *a1, const char *a2)
{
  return [a1 setSystemPodcastApplication:a2];
}

uint64_t MRPairedDeviceSetDeviceUID(void *a1, const char *a2)
{
  return [a1 setDeviceUID:a2];
}

uint64_t MRPairedDeviceCopyDeviceUID(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPairedDeviceCopyLocalReceiverPairingIdentity(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPairedDeviceCopyGroupUID(void *a1)
{
  dispatch_queue_t v1 = [a1 groupUID];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceCopyGroupName(void *a1)
{
  dispatch_queue_t v1 = [a1 groupName];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceCopySenderDefaultGroupUID(void *a1)
{
  dispatch_queue_t v1 = [a1 senderDefaultGroupUID];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceSetManagedConfigDeviceID(void *a1, const char *a2)
{
  return [a1 setManagedConfigurationDeviceIdentifier:a2];
}

uint64_t MRPairedDeviceIsTightlySyncedGroup(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 tightSyncUID];
  if (v2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = [v1 isTightSyncGroup];
  }

  return v3;
}

uint64_t MRPairedDeviceCopyTightSyncUID(void *a1)
{
  id v1 = [a1 tightSyncUID];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceSetSharedQueueVersion(void *a1, const char *a2)
{
  return [a1 setSharedQueueVersion:a2];
}

uint64_t MRPairedDeviceGetSharedQueueVersion(void *a1)
{
  id v1 = a1;
  if ([v1 hasSharedQueueVersion]) {
    uint64_t v2 = [v1 sharedQueueVersion];
  }
  else {
    uint64_t v2 = [v1 supportsSharedQueue];
  }

  return v2;
}

uint64_t MRPairedDeviceSetIsProxyGroupPlayer(void *a1, const char *a2)
{
  return [a1 setProxyGroupPlayer:a2];
}

uint64_t MRPairedDeviceSetSupportsExtendedMotion(void *a1, const char *a2)
{
  return [a1 setSupportsExtendedMotion:a2];
}

MRDeviceInfo *MRPairedDeviceCreate()
{
  return objc_alloc_init(MRDeviceInfo);
}

uint64_t MRPairedDeviceSetName(void *a1, const char *a2)
{
  return [a1 setName:a2];
}

uint64_t MRPairedDeviceSetIdentifier(void *a1, const char *a2)
{
  return [a1 setIdentifier:a2];
}

uint64_t MRPairedDeviceSetLocalizedModelName(void *a1, const char *a2)
{
  return [a1 setLocalizedModelName:a2];
}

uint64_t MRPairedDeviceSetBuildVersion(void *a1, const char *a2)
{
  return [a1 setBuildVersion:a2];
}

uint64_t MRPairedDeviceSetBundleIdentifier(void *a1, const char *a2)
{
  return [a1 setBundleIdentifier:a2];
}

uint64_t MRPairedDeviceSetBundleVersion(void *a1, const char *a2)
{
  return [a1 setBundleVersion:a2];
}

uint64_t MRPairedDeviceSetProtocolVersion(void *a1, const char *a2)
{
  return [a1 setProtocolVersion:a2];
}

uint64_t MRPairedDeviceSetDeviceClass(void *a1, const char *a2)
{
  return [a1 setDeviceClass:a2];
}

void MRPairedDeviceSetTightSyncUID(void *a1, uint64_t a2)
{
  id v3 = a1;
  [v3 setTightSyncUID:a2];
  if (a2) {
    [v3 setTightSyncGroup:1];
  }
}

uint64_t MRPairedDeviceSetGroupUID(void *a1, const char *a2)
{
  return [a1 setGroupUID:a2];
}

uint64_t MRPairedDeviceSetGroupName(void *a1, const char *a2)
{
  return [a1 setGroupName:a2];
}

uint64_t MRPairedDeviceSetSenderDefaultGroupUID(void *a1, const char *a2)
{
  return [a1 setSenderDefaultGroupUID:a2];
}

uint64_t MRPairedDeviceSetIsPairingAllowed(void *a1, const char *a2)
{
  return [a1 setPairingAllowed:a2];
}

uint64_t MRPairedDeviceSetSupportsSystemPairing(void *a1, const char *a2)
{
  return [a1 setSupportsSystemPairing:a2];
}

uint64_t MRPairedDeviceSetSupportsACL(void *a1, const char *a2)
{
  return [a1 setSupportsACL:a2];
}

uint64_t MRPairedDeviceSetSupportsSharedQueue(void *a1, const char *a2)
{
  return [a1 setSupportsSharedQueue:a2];
}

uint64_t MRPairedDeviceSetIsConnected(void *a1, const char *a2)
{
  return [a1 setConnected:a2];
}

uint64_t MRPairedDeviceCopyBluetoothAddress(void *a1)
{
  id v1 = [a1 bluetoothAddress];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceSetBluetoothAddress(void *a1, const char *a2)
{
  return [a1 setBluetoothAddress:a2];
}

uint64_t MRPairedDeviceGetGroupLogicalDeviceCount(void *a1)
{
  return [a1 groupLogicalDeviceCount];
}

uint64_t MRPairedDeviceSetGroupLogicalDeviceCount(void *a1, const char *a2)
{
  return [a1 setGroupLogicalDeviceCount:a2];
}

void MRPairedDeviceSetGroupedDevices(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = (id)[a2 mutableCopy];
  [v3 setGroupedDevices:v4];
}

uint64_t MRPairedDeviceCopyGroupedDevices(void *a1)
{
  id v1 = [a1 groupedDevices];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPairedDeviceSetIsGroupLeader(void *a1, const char *a2)
{
  return [a1 setGroupLeader:a2];
}

uint64_t MRPairedDeviceSetIsAirPlayActive(void *a1, const char *a2)
{
  return [a1 setAirPlayActive:a2];
}

uint64_t MRPairedDeviceCopyLinkAgent(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

void MRPairedDeviceMerge(uint64_t a1, uint64_t a2)
{
  if (a1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v4 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRPairedDeviceMerge(MRPairedDeviceRef, MRPairedDeviceRef)");
    uint64_t v5 = objc_opt_class();
    [v3 handleFailureInFunction:v4, @"MRPairedDevice.m", 438, @"Type mismatch, expecting %@ found %@", v5, objc_opt_class() file lineNumber description];

    if (!a2) {
      return;
    }
  }
  else if (!a2)
  {
    return;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v6 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRPairedDeviceMerge(MRPairedDeviceRef, MRPairedDeviceRef)");
    uint64_t v7 = objc_opt_class();
    [v8 handleFailureInFunction:v6, @"MRPairedDevice.m", 439, @"Type mismatch, expecting %@ found %@", v7, objc_opt_class() file lineNumber description];
  }
}

uint64_t MRPairedDeviceCreateExternalRepresentation(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPairedDeviceCreateFromExternalRepresentation(uint64_t a1)
{
  uint64_t v2 = [MRDeviceInfo alloc];

  return (uint64_t)[(MRDeviceInfo *)v2 initWithData:a1];
}

uint64_t MRPairedDevicesCreateExternalRepresentation(uint64_t a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPairedDevicesCreateFromExternalRepresentation(uint64_t a1)
{
  return objc_claimAutoreleasedReturnValue();
}

void MRMediaRemoteGetDeviceInfo(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (v5)
  {
    v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = __MRMediaRemoteGetDeviceInfo_block_invoke;
    v7[3] = &unk_1E57D6528;
    id v8 = v5;
    +[MRDeviceInfoRequest deviceInfoForOrigin:a1 queue:a2 completion:v7];
  }
}

uint64_t __MRMediaRemoteGetDeviceInfo_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t MRMediaRemoteCopyCachedDeviceInfo(uint64_t a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRMediaRemoteCopyDeviceInfo(uint64_t a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPairedDeviceCopyDescription(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPairedDeviceCopyMinimalDescription(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

id MRPairedDevicesCopyDescription(const __CFArray *a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  CFIndex Count = CFArrayGetCount(a1);
  if (Count >= 1)
  {
    CFIndex v4 = Count;
    for (CFIndex i = 0; i != v4; ++i)
    {
      id v6 = objc_msgSend((id)CFArrayGetValueAtIndex(a1, i), "description");
      [v2 appendString:v6];
    }
  }
  return v2;
}

id MRPairedDevicesCopyMinimalDescription(const __CFArray *a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  CFIndex Count = CFArrayGetCount(a1);
  if (Count >= 1)
  {
    CFIndex v4 = Count;
    for (CFIndex i = 0; i != v4; ++i)
    {
      id v6 = objc_msgSend((id)CFArrayGetValueAtIndex(a1, i), "minimalDescription");
      [v2 appendString:v6];
    }
  }
  return v2;
}

uint64_t MRPairedDeviceCopyDeltaDescription(void *a1, uint64_t a2)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPairedDeviceCopyDeltaMinimalDescription(void *a1, uint64_t a2)
{
  return objc_claimAutoreleasedReturnValue();
}

BOOL _MRGameControllerMotionProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  CFIndex v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(_MRGameControllerAccelerationProtobuf);
        uint64_t v18 = 16;
        goto LABEL_25;
      case 2u:
        uint64_t v17 = objc_alloc_init(_MRGameControllerAccelerationProtobuf);
        uint64_t v18 = 32;
        goto LABEL_25;
      case 3u:
        uint64_t v17 = objc_alloc_init(_MRGameControllerAccelerationProtobuf);
        uint64_t v18 = 8;
        goto LABEL_25;
      case 4u:
        uint64_t v17 = objc_alloc_init(_MRGameControllerAccelerationProtobuf);
        uint64_t v18 = 24;
LABEL_25:
        objc_storeStrong((id *)(a1 + v18), v17);
        if (PBReaderPlaceMark()
          && (_MRGameControllerAccelerationProtobufReadFrom((uint64_t)v17, a2) & 1) != 0)
        {
          PBReaderRecallMark();

LABEL_28:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_28;
    }
  }
}

uint64_t _MRSystemPlaybackQueueProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  CFIndex v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_53;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_55;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_55:
        uint64_t v39 = 48;
        goto LABEL_60;
      case 2u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v25 = *v3;
          unint64_t v26 = *(void *)(a2 + v25);
          if (v26 == -1 || v26 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
            *(void *)(a2 + v25) = v26 + 1;
            v19 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              BOOL v14 = v24++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_59:
        uint64_t v39 = 32;
LABEL_60:
        *(_DWORD *)(a1 + v39) = v19;
        goto LABEL_65;
      case 3u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v31 = *v3;
          unint64_t v32 = *(void *)(a2 + v31);
          if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if (v33 < 0)
            {
              v28 += 7;
              BOOL v14 = v29++ >= 9;
              if (v14)
              {
                uint64_t v30 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_64:
        *(unsigned char *)(a1 + 64) = v30 != 0;
        goto LABEL_65;
      case 4u:
        uint64_t v34 = PBReaderReadString();
        uint64_t v35 = 16;
        goto LABEL_51;
      case 6u:
        uint64_t v37 = objc_alloc_init(_MRSystemPlaybackCustomDataQueueProtobuf);
        objc_storeStrong((id *)(a1 + 8), v37);
        if (!PBReaderPlaceMark() || !_MRSystemPlaybackCustomDataQueueProtobufReadFrom((uint64_t)v37, a2)) {
          goto LABEL_67;
        }
        goto LABEL_48;
      case 7u:
        uint64_t v37 = objc_alloc_init(_MRSystemPlaybackGenericTracklistQueueProtobuf);
        objc_storeStrong((id *)(a1 + 40), v37);
        if (PBReaderPlaceMark()
          && (_MRSystemPlaybackGenericTracklistQueueProtobufReadFrom((uint64_t)v37, a2) & 1) != 0)
        {
LABEL_48:
          PBReaderRecallMark();

LABEL_65:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_67:

        return 0;
      case 8u:
        uint64_t v34 = PBReaderReadData();
        uint64_t v35 = 56;
        goto LABEL_51;
      case 9u:
        uint64_t v34 = PBReaderReadData();
        uint64_t v35 = 24;
LABEL_51:
        uint64_t v38 = *(void **)(a1 + v35);
        *(void *)(a1 + v35) = v34;

        goto LABEL_65;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_65;
    }
  }
}

uint64_t MRPlaybackSessionRequestCreate(uint64_t a1, uint64_t a2)
{
  CFIndex v4 = [MRPlaybackSessionRequest alloc];

  return (uint64_t)[(MRPlaybackSessionRequest *)v4 initWithIdentifier:a1 type:a2];
}

uint64_t MRPlaybackSessionRequestCopyRequestID(void *a1)
{
  id v1 = [a1 requestIdentifier];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPlaybackSessionRequestCopyIdentifier(void *a1)
{
  id v1 = [a1 identifier];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPlaybackSessionRequestCopyType(void *a1)
{
  id v1 = [a1 type];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPlaybackSessionRequestCopyDescription(void *a1)
{
  id v1 = [a1 description];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRPlaybackSessionRequestCreateExternalRepresentation(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRPlaybackSessionRequestCreateFromExternalRepresentation(uint64_t a1)
{
  uint64_t v2 = [MRPlaybackSessionRequest alloc];

  return (uint64_t)[(MRPlaybackSessionRequest *)v2 initWithData:a1];
}

BOOL _MRGroupSessionJoinRequestProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  CFIndex v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        PBReaderReadString();
        unsigned int v18 = (_MRUserIdentityProtobuf *)objc_claimAutoreleasedReturnValue();
        if (v18) {
          [(id)a1 addOobKeys:v18];
        }
        goto LABEL_27;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(_MRUserIdentityProtobuf);
        objc_storeStrong((id *)(a1 + 16), v18);
        if (!PBReaderPlaceMark() || (_MRUserIdentityProtobufReadFrom((uint64_t)v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v19 = PBReaderReadString();
    unsigned int v18 = *(_MRUserIdentityProtobuf **)(a1 + 8);
    *(void *)(a1 + 8) = v19;
LABEL_27:

    goto LABEL_29;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRLanguageOptionProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  CFIndex v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              *(unsigned char *)(a1 + 44) |= 1u;
              break;
            case 2u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 32;
              goto LABEL_34;
            case 3u:
              unint64_t v26 = PBReaderReadString();
              if (v26) {
                [(id)a1 addCharacteristics:v26];
              }

              goto LABEL_39;
            case 4u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 16;
              goto LABEL_34;
            case 5u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 24;
LABEL_34:
              char v27 = *(void **)(a1 + v25);
              *(void *)(a1 + v25) = v24;

              goto LABEL_39;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_39:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_36;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_38;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_36:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 40) = v19;
          goto LABEL_39;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_1950F89FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

_MRAVRouteQueryProtobuf *MRAVRouteQueryCreate()
{
  return objc_alloc_init(_MRAVRouteQueryProtobuf);
}

uint64_t MRAVRouteQueryCreateFromExternalRepresentation(uint64_t a1)
{
  uint64_t v2 = [_MRAVRouteQueryProtobuf alloc];

  return (uint64_t)[(_MRAVRouteQueryProtobuf *)v2 initWithData:a1];
}

uint64_t MRAVRouteQueryCreateExternalRepresentation(void *a1)
{
  id v1 = [a1 data];
  uint64_t v2 = [v1 copy];

  return v2;
}

uint64_t MRAVRouteQuerySetRouteUID(void *a1, const char *a2)
{
  return [a1 setRouteUID:a2];
}

void _onQueue_MRMediaRemoteSendShortCircutedContentItemArtworkUpdatedNotification(void *a1, void *a2)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if ([v4 isLocal])
  {
    id v5 = +[MRNowPlayingOriginClientManager sharedManager];
    id v6 = [v5 existingPlayerClientRequestsForPlayerPath:v4];

    id v7 = [[MRPlaybackQueueRequest alloc] initFromTransactionName:7];
    char v8 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v3, "count"));
    unsigned int v9 = [v6 subscriptionController];
    v22[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v22[1] = 3221225472;
    v22[2] = ___onQueue_MRMediaRemoteSendShortCircutedContentItemArtworkUpdatedNotification_block_invoke;
    void v22[3] = &unk_1E57D6608;
    id v10 = v7;
    id v23 = v10;
    id v11 = v8;
    id v24 = v11;
    [v9 enumerateFilteredContentItemsBySubscriptionsForContentItems:v3 block:v22];

    if ([v11 count])
    {
      id v12 = [[MRPlaybackQueueRequest alloc] initFromTransactionName:0];
      char v13 = (char *)MRContentItemsCreateFromRequest(v11, v12);
      if ([v13 count])
      {
        id v21 = v12;
        BOOL v14 = (void *)[objc_alloc(MEMORY[0x1E4F1CA60]) initWithCapacity:2];
        MRAddContentItemsToUserInfo(v14, v13);
        int v15 = [v6 playerPath];
        MRAddPlayerPathToUserInfo(v14, v15);

        BOOL v16 = _MRLogForCategory(1uLL);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v20 = [v6 playerPath];
          *(_DWORD *)long long buf = 138412802;
          unint64_t v26 = @"kMRPlayerPlaybackQueueContentItemArtworkChangedNotification";
          __int16 v27 = 2114;
          char v28 = v20;
          __int16 v29 = 2112;
          uint64_t v30 = v13;
          _os_log_debug_impl(&dword_194F3C000, v16, OS_LOG_TYPE_DEBUG, "Sending short circuted notification %@ for %{public}@ %@", buf, 0x20u);
        }
        char v17 = +[MRMediaRemoteServiceClient sharedServiceClient];
        unsigned int v18 = [v17 notificationClient];
        uint64_t v19 = MRCreateDecodedUserInfo(v14);
        [v18 dispatchNotification:@"kMRPlayerPlaybackQueueContentItemArtworkChangedNotification" userInfo:v19 object:0];

        id v12 = v21;
      }
    }
  }
}

void MRMediaRemotePlaybackQueueDataSourceContentItemChanged(uint64_t a1, uint64_t a2)
{
  v2[1] = *MEMORY[0x1E4F143B8];
  v2[[NSString stringWithFormat:@"com.apple.%@", 0] = a1;
  MRMediaRemotePlaybackQueueDataSourceContentItemsChanged([MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:1], a2);
}

void MRMediaRemotePlaybackQueueDataSourceContentItemsChanged(uint64_t a1, uint64_t a2)
{
  id v3 = [[MRPlayerPath alloc] initWithOrigin:a2 client:0 player:0];
  MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer(a1, v3);
}

void MRMediaRemotePlaybackQueueDataSourceContentItemChangedForPlayer(uint64_t a1, void *a2)
{
  v2[1] = *MEMORY[0x1E4F143B8];
  v2[[NSString stringWithFormat:@"com.apple.%@", 0] = a1;
  MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer([MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:1], a2);
}

void MRMediaRemotePlaybackQueueDataSourceContentItemChangedWithRequest(uint64_t a1, void *a2, uint64_t a3)
{
  v3[1] = *MEMORY[0x1E4F143B8];
  v3[[NSString stringWithFormat:@"com.apple.%@", 0] = a1;
  MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequest([MEMORY[0x1E4F1C978] arrayWithObjects:v3 count:1], a2, a3);
}

void MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequest(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = [[MRPlayerPath alloc] initWithOrigin:a3 client:0 player:0];
  MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequestForPlayer(a1, a2, (uint64_t)v5);
}

void MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequestForPlayer(uint64_t a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    id v5 = (void *)[a2 copy];
    id v6 = (void *)[objc_alloc(MEMORY[0x1E4F1C978]) initWithArray:a1 copyItems:1];
    id v7 = +[MRNowPlayingOriginClientManager sharedManager];
    char v8 = [v7 playerClientForPlayerPath:a3];

    unsigned int v9 = [v8 playerPath];
    if (v5)
    {
      id v10 = +[MRMediaRemoteServiceClient sharedServiceClient];
      id v11 = [v10 playbackQueueDispatchQueue];
      v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
      v13[1] = 3221225472;
      _OWORD v13[2] = __MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequestForPlayer_block_invoke;
      v13[3] = &unk_1E57D1B18;
      id v14 = v6;
      id v15 = v5;
      id v16 = v8;
      id v12 = MRCreateDonatedQosBlock(v13);
      dispatch_sync(v11, v12);
    }
    else
    {
      MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer((uint64_t)v6, v9);
    }
  }
}

void MRMediaRemotePlaybackQueueDataSourceContentItemChangedWithRequestForPlayer(uint64_t a1, void *a2, uint64_t a3)
{
  v3[1] = *MEMORY[0x1E4F143B8];
  v3[[NSString stringWithFormat:@"com.apple.%@", 0] = a1;
  MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequestForPlayer([MEMORY[0x1E4F1C978] arrayWithObjects:v3 count:1], a2, a3);
}

void _onQueue_MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequestForPlayer(void *a1, void *a2, void *a3)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v25 = MRContentItemsCreateFromRequest(a1, v5);
  id v7 = +[MRContentItem mergeContentItems:](MRContentItem, "mergeContentItems:");
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v29 objects:v34 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v30;
    obuint64_t j = v7;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v30 != v10) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v29 + 1) + 8 * v11);
        char v13 = [v6 subscriptionController];
        id v14 = [v12 identifier];
        id v15 = [v13 requestForSubscribedContentItemIdentifier:v14];

        id v16 = [MRPlaybackQueueRequest alloc];
        char v17 = [v12 identifier];
        char v33 = v17;
        unsigned int v18 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v33 count:1];
        uint64_t v19 = [(MRPlaybackQueueRequest *)v16 initWithIdentifiers:v18];

        if ([v5 includeArtwork])
        {
          MRContentItemSetArtworkData(v12, 0);
          [v12 setArtworks:0];
          [v12 setRemoteArtworks:0];
        }
        if (MRContentItemGetCurrentLanguageOptions(v12)) {
          BOOL v20 = MRContentItemGetAvailableLanguageOptions(v12) != 0;
        }
        else {
          BOOL v20 = 0;
        }
        if ([v15 includeLanguageOptions]
          && (([v5 includeLanguageOptions] ^ 1 | v20) & 1) == 0)
        {
          [(MRPlaybackQueueRequest *)v19 setIncludeLanguageOptions:1];
        }
        if ([v15 includeLyrics]
          && [v5 includeLyrics]
          && !MRContentItemGetLyrics())
        {
          [(MRPlaybackQueueRequest *)v19 setIncludeLyrics:1];
        }
        if ([v15 includeInfo]
          && [v5 includeInfo]
          && !MRContentItemGetInfo(v12))
        {
          [(MRPlaybackQueueRequest *)v19 setIncludeInfo:1];
        }
        if ([v15 includeSections]
          && [v5 includeSections]
          && !MRContentItemGetSections(v12))
        {
          [(MRPlaybackQueueRequest *)v19 setIncludeSections:1];
          [(MRPlaybackQueueRequest *)v19 setIncludeMetadata:1];
        }
        if ([v15 includeAlignments]
          && [v5 includeAlignments]
          && !MRContentItemGetTranscriptAlignments(v12))
        {
          [(MRPlaybackQueueRequest *)v19 setIncludeAlignments:1];
        }
        if ([(MRPlaybackQueueRequest *)v19 shouldRequestItem])
        {
          id v21 = [v6 playerPath];
          char v22 = +[MRMediaRemoteServiceClient sharedServiceClient];
          id v23 = [v22 playbackQueueDispatchQueue];
          v27[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
          v27[1] = 3221225472;
          v27[2] = ___onQueue_MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequestForPlayer_block_invoke;
          v27[3] = &unk_1E57D2738;
          id v28 = v6;
          MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync(v19, v21, v23, v27);
        }
        ++v11;
      }
      while (v9 != v11);
      id v7 = obj;
      uint64_t v9 = [obj countByEnumeratingWithState:&v29 objects:v34 count:16];
    }
    while (v9);
  }
  id v24 = [v6 playerPath];
  _onQueue_MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer(v7, v24);

  if ([v5 includeArtwork]) {
    _onQueue_MRMediaRemoteSendContentItemArtworkUpdatedNotification(v7, v6);
  }
}

void __MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequestForPlayer_block_invoke(void **a1)
{
}

uint64_t _MRCommandInfoProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    uint64_t v16 = *v5;
    int v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(unsigned char *)(a2 + v16)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v18 = v10 & 7;
    if (v17 || v18 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 8u;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_244;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            LODWORD(v22) = 0;
            goto LABEL_246;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_244:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_246:
        uint64_t v180 = 148;
        goto LABEL_312;
      case 2u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        *(_DWORD *)(a1 + 320) |= 0x200000u;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_250;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_250:
        BOOL v181 = v29 != 0;
        uint64_t v182 = 313;
        goto LABEL_299;
      case 3u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        *(_DWORD *)(a1 + 320) |= 0x100000u;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_254;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_254:
        BOOL v181 = v36 != 0;
        uint64_t v182 = 312;
        goto LABEL_299;
      case 4u:
        if (v18 != 2)
        {
          uint64_t v199 = *v3;
          unint64_t v200 = *(void *)(a2 + v199);
          if (v200 <= 0xFFFFFFFFFFFFFFF7 && v200 + 8 <= *(void *)(a2 + *v4)) {
            *(void *)(a2 + v199) = v200 + 8;
          }
          else {
            *(unsigned char *)(a2 + v16) = 1;
          }
          PBRepeatedDoubleAdd();
          goto LABEL_364;
        }
        uint64_t result = PBReaderPlaceMark();
        if (!result) {
          return result;
        }
        while (1)
        {
          uint64_t v144 = (unint64_t *)(a2 + *v3);
          unint64_t v145 = *v144;
          unint64_t v146 = *(void *)(a2 + *v4);
          if (*v144 >= v146) {
            break;
          }
          uint64_t v147 = *v5;
          if (*(unsigned char *)(a2 + v147)) {
            break;
          }
          if (v145 > 0xFFFFFFFFFFFFFFF7 || v145 + 8 > v146) {
            *(unsigned char *)(a2 + v147) = 1;
          }
          else {
            *uint64_t v144 = v145 + 8;
          }
          PBRepeatedDoubleAdd();
        }
        goto LABEL_208;
      case 5u:
        uint64_t v101 = PBReaderReadString();
        uint64_t v102 = 200;
        goto LABEL_187;
      case 6u:
        *(_DWORD *)(a1 + 320) |= 0x80u;
        uint64_t v41 = *v3;
        unint64_t v42 = *(void *)(a2 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFFBLL && v42 + 4 <= *(void *)(a2 + *v4))
        {
          int v43 = *(_DWORD *)(*(void *)(a2 + *v7) + v42);
          *(void *)(a2 + v41) = v42 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v43 = 0;
        }
        uint64_t v208 = 212;
        goto LABEL_356;
      case 7u:
        *(_DWORD *)(a1 + 320) |= 0x40u;
        uint64_t v44 = *v3;
        unint64_t v45 = *(void *)(a2 + v44);
        if (v45 <= 0xFFFFFFFFFFFFFFFBLL && v45 + 4 <= *(void *)(a2 + *v4))
        {
          int v43 = *(_DWORD *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v45 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v43 = 0;
        }
        uint64_t v208 = 208;
        goto LABEL_356;
      case 8u:
        if (v18 != 2)
        {
          uint64_t v183 = *v3;
          unint64_t v184 = *(void *)(a2 + v183);
          if (v184 <= 0xFFFFFFFFFFFFFFFBLL && v184 + 4 <= *(void *)(a2 + *v4)) {
            *(void *)(a2 + v183) = v184 + 4;
          }
          else {
            *(unsigned char *)(a2 + v16) = 1;
          }
          PBRepeatedFloatAdd();
          goto LABEL_364;
        }
        uint64_t result = PBReaderPlaceMark();
        if (!result) {
          return result;
        }
        while (1)
        {
          uint64_t v47 = (unint64_t *)(a2 + *v3);
          unint64_t v48 = *v47;
          unint64_t v49 = *(void *)(a2 + *v4);
          if (*v47 >= v49) {
            break;
          }
          uint64_t v50 = *v5;
          if (*(unsigned char *)(a2 + v50)) {
            break;
          }
          if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > v49) {
            *(unsigned char *)(a2 + v50) = 1;
          }
          else {
            unint64_t *v47 = v48 + 4;
          }
          PBRepeatedFloatAdd();
        }
        goto LABEL_208;
      case 9u:
        uint64_t v101 = PBReaderReadString();
        uint64_t v102 = 192;
        goto LABEL_187;
      case 0xAu:
        char v149 = 0;
        unsigned int v150 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 0x800u;
        while (2)
        {
          uint64_t v151 = *v3;
          uint64_t v152 = *(void *)(a2 + v151);
          unint64_t v153 = v152 + 1;
          if (v152 == -1 || v153 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v154 = *(unsigned char *)(*(void *)(a2 + *v7) + v152);
            *(void *)(a2 + v151) = v153;
            v22 |= (unint64_t)(v154 & 0x7F) << v149;
            if (v154 < 0)
            {
              v149 += 7;
              BOOL v15 = v150++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_303;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_303:
        uint64_t v180 = 248;
        goto LABEL_312;
      case 0xBu:
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 0x1000u;
        while (2)
        {
          uint64_t v53 = *v3;
          uint64_t v54 = *(void *)(a2 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v54);
            *(void *)(a2 + v53) = v55;
            v22 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v15 = v52++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_258;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_258:
        uint64_t v180 = 252;
        goto LABEL_312;
      case 0xCu:
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 0x400u;
        while (2)
        {
          uint64_t v59 = *v3;
          uint64_t v60 = *(void *)(a2 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v61;
            v22 |= (unint64_t)(v62 & 0x7F) << v57;
            if (v62 < 0)
            {
              v57 += 7;
              BOOL v15 = v58++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_262;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_262:
        uint64_t v180 = 236;
        goto LABEL_312;
      case 0xDu:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 0x4000u;
        while (2)
        {
          uint64_t v65 = *v3;
          uint64_t v66 = *(void *)(a2 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
            *(void *)(a2 + v65) = v67;
            v22 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              BOOL v15 = v64++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_266;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_266:
        uint64_t v180 = 260;
        goto LABEL_312;
      case 0xEu:
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 0x100u;
        while (2)
        {
          uint64_t v71 = *v3;
          uint64_t v72 = *(void *)(a2 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(a2 + *v7) + v72);
            *(void *)(a2 + v71) = v73;
            v22 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              BOOL v15 = v70++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_270;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_270:
        uint64_t v180 = 216;
        goto LABEL_312;
      case 0xFu:
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 0x2000u;
        while (2)
        {
          uint64_t v77 = *v3;
          uint64_t v78 = *(void *)(a2 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
            *(void *)(a2 + v77) = v79;
            v22 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              BOOL v15 = v76++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_274;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_274:
        uint64_t v180 = 256;
        goto LABEL_312;
      case 0x10u:
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 4u;
        while (2)
        {
          uint64_t v83 = *v3;
          uint64_t v84 = *(void *)(a2 + v83);
          unint64_t v85 = v84 + 1;
          if (v84 == -1 || v85 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
            *(void *)(a2 + v83) = v85;
            v22 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              BOOL v15 = v82++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_278;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_278:
        uint64_t v180 = 144;
        goto LABEL_312;
      case 0x11u:
        if (v18 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v155 = 0;
            unsigned int v156 = 0;
            uint64_t v157 = 0;
            while (1)
            {
              uint64_t v158 = *v3;
              uint64_t v159 = *(void *)(a2 + v158);
              unint64_t v160 = v159 + 1;
              if (v159 == -1 || v160 > *(void *)(a2 + *v4)) {
                break;
              }
              char v161 = *(unsigned char *)(*(void *)(a2 + *v7) + v159);
              *(void *)(a2 + v158) = v160;
              v157 |= (unint64_t)(v161 & 0x7F) << v155;
              if (v161 < 0)
              {
                v155 += 7;
                BOOL v15 = v156++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_207;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_207:
            PBRepeatedInt32Add();
          }
LABEL_208:
          PBReaderRecallMark();
        }
        else
        {
          char v201 = 0;
          unsigned int v202 = 0;
          uint64_t v203 = 0;
          while (1)
          {
            uint64_t v204 = *v3;
            uint64_t v205 = *(void *)(a2 + v204);
            unint64_t v206 = v205 + 1;
            if (v205 == -1 || v206 > *(void *)(a2 + *v4)) {
              break;
            }
            char v207 = *(unsigned char *)(*(void *)(a2 + *v7) + v205);
            *(void *)(a2 + v204) = v206;
            v203 |= (unint64_t)(v207 & 0x7F) << v201;
            if (v207 < 0)
            {
              v201 += 7;
              BOOL v15 = v202++ >= 9;
              if (!v15) {
                continue;
              }
            }
            goto LABEL_341;
          }
LABEL_340:
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_341:
          PBRepeatedInt32Add();
        }
        goto LABEL_364;
      case 0x12u:
        PBReaderReadString();
        id v100 = (_MRPreloadedPlaybackSessionInfo *)objc_claimAutoreleasedReturnValue();
        if (v100) {
          [(id)a1 addSupportedCustomQueueIdentifier:v100];
        }
        goto LABEL_242;
      case 0x13u:
        if (v18 != 2)
        {
          char v185 = 0;
          unsigned int v186 = 0;
          uint64_t v187 = 0;
          while (1)
          {
            uint64_t v188 = *v3;
            uint64_t v189 = *(void *)(a2 + v188);
            unint64_t v190 = v189 + 1;
            if (v189 == -1 || v190 > *(void *)(a2 + *v4)) {
              goto LABEL_340;
            }
            char v191 = *(unsigned char *)(*(void *)(a2 + *v7) + v189);
            *(void *)(a2 + v188) = v190;
            v187 |= (unint64_t)(v191 & 0x7F) << v185;
            if (v191 < 0)
            {
              v185 += 7;
              BOOL v15 = v186++ >= 9;
              if (!v15) {
                continue;
              }
            }
            goto LABEL_341;
          }
        }
        uint64_t result = PBReaderPlaceMark();
        if (!result) {
          return result;
        }
        while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
        {
          char v87 = 0;
          unsigned int v88 = 0;
          uint64_t v89 = 0;
          while (1)
          {
            uint64_t v90 = *v3;
            uint64_t v91 = *(void *)(a2 + v90);
            unint64_t v92 = v91 + 1;
            if (v91 == -1 || v92 > *(void *)(a2 + *v4)) {
              break;
            }
            char v93 = *(unsigned char *)(*(void *)(a2 + *v7) + v91);
            *(void *)(a2 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              BOOL v15 = v88++ >= 9;
              if (!v15) {
                continue;
              }
            }
            goto LABEL_109;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_109:
          PBRepeatedInt32Add();
        }
        goto LABEL_208;
      case 0x15u:
        char v94 = 0;
        unsigned int v95 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 0x10000u;
        while (2)
        {
          uint64_t v96 = *v3;
          uint64_t v97 = *(void *)(a2 + v96);
          unint64_t v98 = v97 + 1;
          if (v97 == -1 || v98 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v99 = *(unsigned char *)(*(void *)(a2 + *v7) + v97);
            *(void *)(a2 + v96) = v98;
            v22 |= (unint64_t)(v99 & 0x7F) << v94;
            if (v99 < 0)
            {
              v94 += 7;
              BOOL v15 = v95++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_282;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_282:
        uint64_t v180 = 296;
        goto LABEL_312;
      case 0x16u:
        *(_DWORD *)(a1 + 320) |= 0x200u;
        uint64_t v162 = *v3;
        unint64_t v163 = *(void *)(a2 + v162);
        if (v163 <= 0xFFFFFFFFFFFFFFFBLL && v163 + 4 <= *(void *)(a2 + *v4))
        {
          int v43 = *(_DWORD *)(*(void *)(a2 + *v7) + v163);
          *(void *)(a2 + v162) = v163 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v43 = 0;
        }
        uint64_t v208 = 232;
        goto LABEL_356;
      case 0x17u:
        PBReaderReadString();
        id v100 = (_MRPreloadedPlaybackSessionInfo *)objc_claimAutoreleasedReturnValue();
        if (v100) {
          [(id)a1 addSupportedPlaybackSessionTypes:v100];
        }
        goto LABEL_242;
      case 0x18u:
        PBReaderReadString();
        id v100 = (_MRPreloadedPlaybackSessionInfo *)objc_claimAutoreleasedReturnValue();
        if (v100) {
          [(id)a1 addCurrentPlaybackSessionTypes:v100];
        }
        goto LABEL_242;
      case 0x19u:
        uint64_t v101 = PBReaderReadString();
        uint64_t v102 = 224;
        goto LABEL_187;
      case 0x1Au:
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 0x10u;
        while (2)
        {
          uint64_t v105 = *v3;
          uint64_t v106 = *(void *)(a2 + v105);
          unint64_t v107 = v106 + 1;
          if (v106 == -1 || v107 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v108 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
            *(void *)(a2 + v105) = v107;
            v22 |= (unint64_t)(v108 & 0x7F) << v103;
            if (v108 < 0)
            {
              v103 += 7;
              BOOL v15 = v104++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_286;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_286:
        uint64_t v180 = 160;
        goto LABEL_312;
      case 0x1Bu:
        if (v18 != 2)
        {
          char v192 = 0;
          unsigned int v193 = 0;
          uint64_t v194 = 0;
          while (1)
          {
            uint64_t v195 = *v3;
            uint64_t v196 = *(void *)(a2 + v195);
            unint64_t v197 = v196 + 1;
            if (v196 == -1 || v197 > *(void *)(a2 + *v4)) {
              goto LABEL_340;
            }
            char v198 = *(unsigned char *)(*(void *)(a2 + *v7) + v196);
            *(void *)(a2 + v195) = v197;
            v194 |= (unint64_t)(v198 & 0x7F) << v192;
            if (v198 < 0)
            {
              v192 += 7;
              BOOL v15 = v193++ >= 9;
              if (!v15) {
                continue;
              }
            }
            goto LABEL_341;
          }
        }
        uint64_t result = PBReaderPlaceMark();
        if (!result) {
          return result;
        }
        while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
        {
          char v109 = 0;
          unsigned int v110 = 0;
          uint64_t v111 = 0;
          while (1)
          {
            uint64_t v112 = *v3;
            uint64_t v113 = *(void *)(a2 + v112);
            unint64_t v114 = v113 + 1;
            if (v113 == -1 || v114 > *(void *)(a2 + *v4)) {
              break;
            }
            char v115 = *(unsigned char *)(*(void *)(a2 + *v7) + v113);
            *(void *)(a2 + v112) = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              BOOL v15 = v110++ >= 9;
              if (!v15) {
                continue;
              }
            }
            goto LABEL_141;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_141:
          PBRepeatedInt32Add();
        }
        goto LABEL_208;
      case 0x1Cu:
        char v164 = 0;
        unsigned int v165 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 0x20u;
        while (2)
        {
          uint64_t v166 = *v3;
          uint64_t v167 = *(void *)(a2 + v166);
          unint64_t v168 = v167 + 1;
          if (v167 == -1 || v168 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v169 = *(unsigned char *)(*(void *)(a2 + *v7) + v167);
            *(void *)(a2 + v166) = v168;
            v22 |= (unint64_t)(v169 & 0x7F) << v164;
            if (v169 < 0)
            {
              v164 += 7;
              BOOL v15 = v165++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_307;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_307:
        uint64_t v180 = 176;
        goto LABEL_312;
      case 0x1Du:
        id v100 = objc_alloc_init(_MRPreloadedPlaybackSessionInfo);
        [(id)a1 addSupportedPlaybackSessionIdentifiers:v100];
        if (!PBReaderPlaceMark() || (_MRPreloadedPlaybackSessionInfoReadFrom((uint64_t)v100, a2) & 1) == 0) {
          goto LABEL_367;
        }
        goto LABEL_241;
      case 0x1Eu:
        id v100 = objc_alloc_init(_MRCommandOptionsProtobuf);
        objc_storeStrong((id *)(a1 + 240), v100);
        if (!PBReaderPlaceMark() || (_MRCommandOptionsProtobufReadFrom((uint64_t)v100, a2) & 1) == 0) {
          goto LABEL_367;
        }
        goto LABEL_241;
      case 0x1Fu:
        char v116 = 0;
        unsigned int v117 = 0;
        uint64_t v118 = 0;
        *(_DWORD *)(a1 + 320) |= 0x800000u;
        while (2)
        {
          uint64_t v119 = *v3;
          uint64_t v120 = *(void *)(a2 + v119);
          unint64_t v121 = v120 + 1;
          if (v120 == -1 || v121 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v122 = *(unsigned char *)(*(void *)(a2 + *v7) + v120);
            *(void *)(a2 + v119) = v121;
            v118 |= (unint64_t)(v122 & 0x7F) << v116;
            if (v122 < 0)
            {
              v116 += 7;
              BOOL v15 = v117++ >= 9;
              if (v15)
              {
                uint64_t v118 = 0;
                goto LABEL_290;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v118 = 0;
        }
LABEL_290:
        BOOL v181 = v118 != 0;
        uint64_t v182 = 315;
        goto LABEL_299;
      case 0x20u:
        *(_DWORD *)(a1 + 320) |= 0x20000u;
        uint64_t v123 = *v3;
        unint64_t v124 = *(void *)(a2 + v123);
        if (v124 <= 0xFFFFFFFFFFFFFFFBLL && v124 + 4 <= *(void *)(a2 + *v4))
        {
          int v43 = *(_DWORD *)(*(void *)(a2 + *v7) + v124);
          *(void *)(a2 + v123) = v124 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v43 = 0;
        }
        uint64_t v208 = 300;
        goto LABEL_356;
      case 0x21u:
        *(_DWORD *)(a1 + 320) |= 0x40000u;
        uint64_t v125 = *v3;
        unint64_t v126 = *(void *)(a2 + v125);
        if (v126 <= 0xFFFFFFFFFFFFFFFBLL && v126 + 4 <= *(void *)(a2 + *v4))
        {
          int v43 = *(_DWORD *)(*(void *)(a2 + *v7) + v126);
          *(void *)(a2 + v125) = v126 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v43 = 0;
        }
        uint64_t v208 = 304;
        goto LABEL_356;
      case 0x22u:
        *(_DWORD *)(a1 + 320) |= 0x80000u;
        uint64_t v170 = *v3;
        unint64_t v171 = *(void *)(a2 + v170);
        if (v171 <= 0xFFFFFFFFFFFFFFFBLL && v171 + 4 <= *(void *)(a2 + *v4))
        {
          int v43 = *(_DWORD *)(*(void *)(a2 + *v7) + v171);
          *(void *)(a2 + v170) = v171 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v43 = 0;
        }
        uint64_t v208 = 308;
LABEL_356:
        *(_DWORD *)(a1 + v208) = v43;
        goto LABEL_364;
      case 0x23u:
        char v127 = 0;
        unsigned int v128 = 0;
        uint64_t v129 = 0;
        *(_DWORD *)(a1 + 320) |= 0x1000000u;
        while (2)
        {
          uint64_t v130 = *v3;
          uint64_t v131 = *(void *)(a2 + v130);
          unint64_t v132 = v131 + 1;
          if (v131 == -1 || v132 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v133 = *(unsigned char *)(*(void *)(a2 + *v7) + v131);
            *(void *)(a2 + v130) = v132;
            v129 |= (unint64_t)(v133 & 0x7F) << v127;
            if (v133 < 0)
            {
              v127 += 7;
              BOOL v15 = v128++ >= 9;
              if (v15)
              {
                uint64_t v129 = 0;
                goto LABEL_294;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v129 = 0;
        }
LABEL_294:
        BOOL v181 = v129 != 0;
        uint64_t v182 = 316;
        goto LABEL_299;
      case 0x24u:
        *(_DWORD *)(a1 + 320) |= 2u;
        uint64_t v172 = *v3;
        unint64_t v173 = *(void *)(a2 + v172);
        if (v173 <= 0xFFFFFFFFFFFFFFF7 && v173 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v136 = *(void *)(*(void *)(a2 + *v7) + v173);
          *(void *)(a2 + v172) = v173 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v136 = 0;
        }
        uint64_t v209 = 136;
        goto LABEL_359;
      case 0x26u:
        char v174 = 0;
        unsigned int v175 = 0;
        uint64_t v22 = 0;
        *(_DWORD *)(a1 + 320) |= 0x8000u;
        while (2)
        {
          uint64_t v176 = *v3;
          uint64_t v177 = *(void *)(a2 + v176);
          unint64_t v178 = v177 + 1;
          if (v177 == -1 || v178 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v179 = *(unsigned char *)(*(void *)(a2 + *v7) + v177);
            *(void *)(a2 + v176) = v178;
            v22 |= (unint64_t)(v179 & 0x7F) << v174;
            if (v179 < 0)
            {
              v174 += 7;
              BOOL v15 = v175++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_311;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_311:
        uint64_t v180 = 264;
LABEL_312:
        *(_DWORD *)(a1 + v180) = v22;
        goto LABEL_364;
      case 0x27u:
        *(_DWORD *)(a1 + 320) |= 1u;
        uint64_t v134 = *v3;
        unint64_t v135 = *(void *)(a2 + v134);
        if (v135 <= 0xFFFFFFFFFFFFFFF7 && v135 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v136 = *(void *)(*(void *)(a2 + *v7) + v135);
          *(void *)(a2 + v134) = v135 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v136 = 0;
        }
        uint64_t v209 = 128;
LABEL_359:
        *(void *)(a1 + v209) = v136;
        goto LABEL_364;
      case 0x29u:
        id v100 = objc_alloc_init(_MRDictionaryProtobuf);
        objc_storeStrong((id *)(a1 + 168), v100);
        if PBReaderPlaceMark() && (_MRDictionaryProtobufReadFrom(v100, a2))
        {
LABEL_241:
          PBReaderRecallMark();
LABEL_242:

LABEL_364:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_367:

        return 0;
      case 0x2Au:
        uint64_t v101 = PBReaderReadString();
        uint64_t v102 = 184;
LABEL_187:
        char v148 = *(void **)(a1 + v102);
        *(void *)(a1 + v102) = v101;

        goto LABEL_364;
      case 0x2Bu:
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v139 = 0;
        *(_DWORD *)(a1 + 320) |= 0x400000u;
        while (2)
        {
          uint64_t v140 = *v3;
          uint64_t v141 = *(void *)(a2 + v140);
          unint64_t v142 = v141 + 1;
          if (v141 == -1 || v142 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v143 = *(unsigned char *)(*(void *)(a2 + *v7) + v141);
            *(void *)(a2 + v140) = v142;
            v139 |= (unint64_t)(v143 & 0x7F) << v137;
            if (v143 < 0)
            {
              v137 += 7;
              BOOL v15 = v138++ >= 9;
              if (v15)
              {
                uint64_t v139 = 0;
                goto LABEL_298;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v139 = 0;
        }
LABEL_298:
        BOOL v181 = v139 != 0;
        uint64_t v182 = 314;
LABEL_299:
        *(unsigned char *)(a1 + v182) = v181;
        goto LABEL_364;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_364;
    }
  }
}

BOOL _MRGetKeyboardSessionProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

double MRTimeUtilitiesGetProcessorTimeScale()
{
  if (MRTimeUtilitiesGetProcessorTimeScale_sOnceToken != -1) {
    dispatch_once(&MRTimeUtilitiesGetProcessorTimeScale_sOnceToken, &__block_literal_global_74);
  }
  return *(double *)&MRTimeUtilitiesGetProcessorTimeScale_timeScale;
}

double __MRTimeUtilitiesGetProcessorTimeScale_block_invoke()
{
  mach_timebase_info info = 0;
  if (!mach_timebase_info(&info))
  {
    LODWORD(result) = info.numer;
    LODWORD(v1) = info.denom;
    double result = (double)*(unint64_t *)&result / (double)v1;
    MRTimeUtilitiesGetProcessorTimeScale_timeScale = *(void *)&result;
  }
  return result;
}

unint64_t MRTimeUtilsGetCurrentNanoseconds()
{
  uint64_t v0 = mach_absolute_time();
  if (MRTimeUtilitiesGetProcessorTimeScale_sOnceToken != -1) {
    dispatch_once(&MRTimeUtilitiesGetProcessorTimeScale_sOnceToken, &__block_literal_global_74);
  }
  return (unint64_t)(*(double *)&MRTimeUtilitiesGetProcessorTimeScale_timeScale * (double)v0);
}

unint64_t MRTimeUtilsGetCurrentMilliseconds()
{
  return (unint64_t)((double)MRTimeUtilsGetCurrentNanoseconds() * 0.000001);
}

unint64_t MRTimeUtilsGetCurrentSeconds()
{
  return (unint64_t)((double)(unint64_t)((double)MRTimeUtilsGetCurrentNanoseconds() * 0.000001) * 0.001);
}

uint64_t _MRCreateHostedEndpointResponseProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        int v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MRMediaRemoteCommandInfoSetCommand(void *a1, const char *a2)
{
  return [a1 setCommand:a2];
}

uint64_t MRMediaRemoteCommandInfoSetEnabled(void *a1, const char *a2)
{
  return [a1 setEnabled:a2 != 0];
}

uint64_t MRMediaRemoteCommandInfoCopyOptions(void *a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRMediaRemoteCommandInfoSetOptions(void *a1, const char *a2)
{
  return [a1 setOptions:a2];
}

BOOL MRMediaRemoteCommandInfoGetBooleanValueForKey(void *a1, uint64_t a2)
{
  return MRMediaRemoteCommandInfoGetIntegerValueForKey(a1, a2) != 0;
}

void MRMediaRemoteCommandInfoEnumerateSupportedCommandsWithHandler(void *a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v4 = a1;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        v3[2](v3, objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * v8), "command", (void)v9), *(void *)(*((void *)&v9 + 1) + 8 * v8));
        ++v8;
      }
      while (v6 != v8);
      uint64_t v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v6);
  }
}

id MRMediaRemoteCommandInfoCopySupportedCommandsWithPredicate(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  _OWORD v10[2] = __MRMediaRemoteCommandInfoCopySupportedCommandsWithPredicate_block_invoke;
  v10[3] = &unk_1E57D6A38;
  id v12 = v3;
  id v5 = v4;
  id v11 = v5;
  id v6 = v3;
  MRMediaRemoteCommandInfoEnumerateSupportedCommandsWithHandler(a1, v10);
  uint64_t v7 = v11;
  id v8 = v5;

  return v8;
}

uint64_t __MRMediaRemoteCommandInfoCopySupportedCommandsWithPredicate_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  if (result)
  {
    id v6 = *(void **)(a1 + 32);
    return [v6 addObject:a3];
  }
  return result;
}

uint64_t MRMediaRemoteCommandInfoSupportedCommandIsEnabled(void *a1, int a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = a1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    while (2)
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if objc_msgSend(v8, "command", (void)v11) == a2 && (objc_msgSend(v8, "isEnabled"))
        {
          uint64_t v9 = 1;
          goto LABEL_12;
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  uint64_t v9 = 0;
LABEL_12:

  return v9;
}

MRCommandInfo *MRMediaRemoteCommandInfoCreate()
{
  return objc_alloc_init(MRCommandInfo);
}

uint64_t MRMediaRemoteCommandInfoCreateFromExternalRepresentation(uint64_t a1, uint64_t a2)
{
  id v3 = [MRCommandInfo alloc];

  return (uint64_t)[(MRCommandInfo *)v3 initWithPropertyListData:a2];
}

uint64_t MRMediaRemoteCommandInfoCreateExternalRepresentation(uint64_t a1, void *a2)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRMediaRemoteSupportedCommandsCreateFromExternalRepresentation(uint64_t a1)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRMediaRemoteSupportedCommandsCreateExternalRepresentation(uint64_t a1)
{
  return objc_claimAutoreleasedReturnValue();
}

void MRMediaRemotePostClientNotification(void *a1, void *a2)
{
  uint64_t v4 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v5 = [v4 service];

  MRMediaRemoteServicePostNotification(v5, a1, a2);
}

void MRMediaRemotePostDelayedNotification(void *a1, double a2)
{
  uint64_t v4 = +[MRMediaRemoteServiceClient sharedServiceClient];
  id v5 = [v4 service];

  MRMediaRemoteServicePostDelayedNotification(v5, a1, a2);
}

void MRMediaRemotePostOriginClientNotification(void *a1, uint64_t a2, void *a3)
{
  id v5 = [[MRPlayerPath alloc] initWithOrigin:a2 client:0 player:0];
  MRMediaRemotePostPlayerClientNotification(a1, v5, a3);
}

void MRMediaRemotePostPlayerClientNotification(void *a1, void *a2, void *a3)
{
  if (a3)
  {
    id v5 = (void *)[a3 mutableCopy];
  }
  else
  {
    id v5 = [MEMORY[0x1E4F1CA60] dictionary];
  }
  id v6 = v5;
  MRAddPlayerPathToUserInfo(v5, a2);
  MRMediaRemotePostClientNotification(a1, v6);
}

CFDataRef MRMediaRemoteCreateErrorExternalRepresentation(__CFError *a1)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v3 = [NSNumber numberWithUnsignedInteger:CFErrorGetCode(a1)];
  [v2 setObject:v3 forKey:@"_kMRErrorRepErrorCodeKey"];

  uint64_t v4 = CFErrorGetDomain(a1);
  if (v4) {
    [v2 setObject:v4 forKey:@"_kMRErrorRepErrorDomainKey"];
  }
  CFDictionaryRef v5 = CFErrorCopyUserInfo(a1);
  if (v5)
  {
    uint64_t v19 = v4;
    char v20 = v2;
    id v6 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", -[__CFDictionary count](v5, "count"));
    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    CFDictionaryRef v7 = v5;
    uint64_t v8 = [(__CFDictionary *)v7 countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (!v8) {
      goto LABEL_20;
    }
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    uint64_t v11 = *MEMORY[0x1E4F28A50];
    while (1)
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        long long v13 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        if (CFPropertyListIsValid(v13, kCFPropertyListBinaryFormat_v1_0))
        {
          long long v14 = [(__CFDictionary *)v7 objectForKey:v13];
          if ([v13 isEqualToString:v11])
          {
            id ErrorExternalRepresentation = (id)MRMediaRemoteCreateErrorExternalRepresentation(v14);
LABEL_15:
            uint64_t v16 = ErrorExternalRepresentation;
            if (ErrorExternalRepresentation)
            {
              [v6 setObject:ErrorExternalRepresentation forKey:v13];
            }
          }
          else if (CFPropertyListIsValid(v14, kCFPropertyListBinaryFormat_v1_0))
          {
            id ErrorExternalRepresentation = v14;
            goto LABEL_15;
          }

          continue;
        }
      }
      uint64_t v9 = [(__CFDictionary *)v7 countByEnumeratingWithState:&v21 objects:v25 count:16];
      if (!v9)
      {
LABEL_20:

        id v2 = v20;
        if ([v6 count]) {
          [v20 setObject:v6 forKey:@"_kMRErrorRepErrorUserInfoKey"];
        }

        uint64_t v4 = v19;
        break;
      }
    }
  }
  CFDataRef Data = CFPropertyListCreateData((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v2, kCFPropertyListBinaryFormat_v1_0, 0, 0);

  return Data;
}

CFDataRef MRMediaRemoteCreateErrorFromExternalRepresentation(const __CFData *result)
{
  if (result)
  {
    CFAllocatorRef v1 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    id v2 = (void *)CFPropertyListCreateWithData((CFAllocatorRef)*MEMORY[0x1E4F1CF80], result, 0, 0, 0);
    id v3 = [v2 objectForKey:@"_kMRErrorRepErrorCodeKey"];
    CFIndex v4 = [v3 unsignedIntegerValue];

    CFDictionaryRef v5 = [v2 objectForKey:@"_kMRErrorRepErrorDomainKey"];
    id v6 = [v2 objectForKey:@"_kMRErrorRepErrorUserInfoKey"];
    CFDictionaryRef v7 = (void *)[v6 mutableCopy];

    uint64_t v8 = *MEMORY[0x1E4F28A50];
    uint64_t v9 = [v7 objectForKey:*MEMORY[0x1E4F28A50]];
    uint64_t v10 = (void *)v9;
    if (v9)
    {
      CFDataRef ErrorFromExternalRepresentation = (void *)MRMediaRemoteCreateErrorFromExternalRepresentation(v9);
      if (ErrorFromExternalRepresentation) {
        [v7 setObject:ErrorFromExternalRepresentation forKey:v8];
      }
      else {
        [v7 removeObjectForKey:v8];
      }
    }
    CFErrorRef v12 = CFErrorCreate(v1, v5, v4, (CFDictionaryRef)v7);

    return v12;
  }
  return result;
}

uint64_t MRMediaRemoteNowPlayingInfoIsEqual(void *a1, void *a2)
{
  if (a1 == a2) {
    return 1;
  }
  id v3 = (void *)[a1 mutableCopy];
  CFIndex v4 = (void *)[a2 mutableCopy];
  if (v3) {
    [v3 removeObjectForKey:@"kMRMediaRemoteNowPlayingInfoContentItemIdentifier"];
  }
  if (v4) {
    [v4 removeObjectForKey:@"kMRMediaRemoteNowPlayingInfoContentItemIdentifier"];
  }
  uint64_t v5 = objc_msgSend(v3, "MR_isEqualToNowPlayingInfo:", v4);

  return v5;
}

uint64_t MRMediaRemoteNowPlayingInfoIsEmpty(void *a1)
{
  if (!a1) {
    return 1;
  }
  CFAllocatorRef v1 = (void *)[a1 mutableCopy];
  [v1 removeObjectForKey:@"kMRMediaRemoteNowPlayingInfoContentItemIdentifier"];
  [v1 removeObjectForKey:@"kMRMediaRemoteNowPlayingInfoTimestamp"];
  BOOL v2 = [v1 count] == 0;

  return v2;
}

BOOL MRShouldUseLegacyMusicApplicationAsSystemMediaApp()
{
  return CFPreferencesGetAppBooleanValue(@"SiriShouldRouteCommandsToLegacyMusicApplication", @"com.apple.mobileipod", 0) != 0;
}

uint64_t MRProcessIsMediaServerDaemon()
{
  if (MRProcessIsMediaServerDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaServerDaemon_onceToken, &__block_literal_global_22);
  }
  return MRProcessIsMediaServerDaemon_isMediaServer;
}

void __MRProcessIsMediaServerDaemon_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  id v1 = [v0 processName];

  MRProcessIsMediaServerDaemon_isMediaServer = [v1 isEqualToString:@"mediaserverd"];
}

uint64_t MRProcessIsAirPlayDaemon()
{
  if (MRProcessIsAirPlayDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsAirPlayDaemon_onceToken, &__block_literal_global_27_0);
  }
  return MRProcessIsAirPlayDaemon_isDaemon;
}

void __MRProcessIsAirPlayDaemon_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  id v2 = [v0 processName];

  id v1 = (void *)MRMediaRemoteCopyLocalDeviceAirPlayReceiverDisplayID();
  MRProcessIsAirPlayDaemon_isDaemon = [v2 isEqualToString:v1];
}

uint64_t MRProcessIsUIService()
{
  if (MRProcessIsUIService_onceToken != -1) {
    dispatch_once(&MRProcessIsUIService_onceToken, &__block_literal_global_29_1);
  }
  return MRProcessIsUIService_isService;
}

void __MRProcessIsUIService_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  id v1 = [v0 processName];

  MRProcessIsUIService_isService = [v1 isEqualToString:@"com.apple.MediaRemoteUIService"];
}

uint64_t MRProcessIsHomePodCannedDemo()
{
  if (MRProcessIsHomePodCannedDemo_onceToken != -1) {
    dispatch_once(&MRProcessIsHomePodCannedDemo_onceToken, &__block_literal_global_34_0);
  }
  return MRProcessIsHomePodCannedDemo_isChannelDemo;
}

void __MRProcessIsHomePodCannedDemo_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  id v1 = [(id)v0 processName];

  LOBYTE(v0) = [v1 containsString:@"HomePodCannedDemo"];
  MRProcessIsHomePodCannedDemo_isChannelDemo = v0 | [v1 containsString:@"ChannelDemoCap"];
}

CFStringRef MRErrorCopyDescription(__CFError *Code)
{
  if (Code)
  {
    Code = (__CFError *)CFErrorGetCode(Code);
    uint64_t v1 = vars8;
  }
  return MRMediaRemoteErrorCopyDescription((unint64_t)Code);
}

__CFString *MRArrayCopySingleLineDescription(void *a1)
{
  if (!a1) {
    return @"<null>";
  }
  id v1 = a1;
  id v2 = [MEMORY[0x1E4F28E78] string];
  [v2 appendString:@"{"];
  uint64_t v7 = MEMORY[0x1E4F143A8];
  uint64_t v8 = 3221225472;
  uint64_t v9 = __MRArrayCopySingleLineDescription_block_invoke;
  uint64_t v10 = &unk_1E57D6A60;
  id v11 = v2;
  id v12 = v1;
  id v3 = v1;
  id v4 = v2;
  [v3 enumerateObjectsUsingBlock:&v7];
  objc_msgSend(v4, "appendString:", @"}", v7, v8, v9, v10);
  uint64_t v5 = [v4 copy];

  return (__CFString *)v5;
}

uint64_t __MRArrayCopySingleLineDescription_block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = [a2 description];
  [v5 appendString:v6];

  uint64_t result = [*(id *)(a1 + 40) count];
  if (result - 1 != a3)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    return [v8 appendString:@", "];
  }
  return result;
}

uint64_t MRMediaRemoteCreateErrorWithDescription(uint64_t a1, uint64_t a2)
{
  return [objc_alloc(MEMORY[0x1E4F28C58]) initWithMRError:a1, @"%@", a2 format];
}

uint64_t MRMediaRemoteCreateErrorWithUserInfo(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(MEMORY[0x1E4F28C58]);

  return [v4 initWithMRError:a1 userInfo:a2];
}

BOOL MRMediaRemoteErrorIsInformational(void *a1)
{
  id v1 = a1;
  id v2 = [v1 domain];
  int v3 = [v2 isEqualToString:@"kMRMediaRemoteFrameworkErrorDomain"];

  BOOL v4 = v3 && [v1 code] >= 200 && objc_msgSend(v1, "code") < 300;
  return v4;
}

BOOL MRMediaRemoteErrorCodeIsInformational(uint64_t a1)
{
  return (unint64_t)(a1 - 200) < 0x64;
}

uint64_t MRMediaRemoteCopyApplicationEntitlements(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  int v3 = [MEMORY[0x1E4F1CAD0] setWithArray:a2];
  if ([v3 count])
  {
    BOOL v4 = objc_msgSend(MEMORY[0x1E4F1CA60], "dictionaryWithCapacity:", objc_msgSend(v3, "count"));
    uint64_t v5 = [MEMORY[0x1E4F223B8] applicationProxyForIdentifier:a1];
    id v6 = [v5 entitlementValuesForKeys:v3];
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v7 = v3;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v17;
      do
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v17 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = *(void *)(*((void *)&v16 + 1) + 8 * i);
          long long v13 = objc_msgSend(v6, "objectForKey:", v12, (void)v16);
          if (v13) {
            [v4 setObject:v13 forKeyedSubscript:v12];
          }
        }
        uint64_t v9 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }
      while (v9);
    }
  }
  else
  {
    BOOL v4 = 0;
  }
  uint64_t v14 = objc_msgSend(v4, "copy", (void)v16);

  return v14;
}

__SecTask *MRMediaRemoteCopyEntitlements(const __CFArray *a1)
{
  uint64_t result = SecTaskCreateFromSelf((CFAllocatorRef)*MEMORY[0x1E4F1CF80]);
  if (result)
  {
    int v3 = result;
    CFDictionaryRef v4 = SecTaskCopyValuesForEntitlements(result, a1, 0);
    CFRelease(v3);
    return v4;
  }
  return result;
}

void MRMediaRemoteRequestDeviceUID(void *a1, void *a2)
{
  int v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  if (v3)
  {
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    id v11 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v12 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteRequestDeviceUID(__strong dispatch_queue_t, void (^__strong)(CFStringRef))");
    [v11 handleFailureInFunction:v12, @"MRUtility.m", 726, @"Invalid parameter not satisfying: %@", @"queue" file lineNumber description];

    if (v5) {
      goto LABEL_3;
    }
  }
  long long v13 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v14 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteRequestDeviceUID(__strong dispatch_queue_t, void (^__strong)(CFStringRef))");
  [v13 handleFailureInFunction:v14, @"MRUtility.m", 727, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

LABEL_3:
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  if (MRProcessIsMediaRemoteDaemon_isDaemon)
  {
    id v6 = (void *)MRMediaRemoteCopyDeviceUID();
    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __MRMediaRemoteRequestDeviceUID_block_invoke;
    block[3] = &unk_1E57D0DB8;
    id v18 = v6;
    id v19 = v5;
    id v7 = v6;
    id v8 = v5;
    dispatch_async(v3, block);
  }
  else
  {
    uint64_t v9 = +[MROrigin localOrigin];
    v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = __MRMediaRemoteRequestDeviceUID_block_invoke_2;
    v15[3] = &unk_1E57D6528;
    long long v16 = v5;
    id v10 = v5;
    +[MRDeviceInfoRequest deviceInfoForOrigin:v9 queue:v3 completion:v15];

    id v7 = v16;
  }
}

uint64_t MRMediaRemoteCopyDeviceUID()
{
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  int v0 = MRProcessIsMediaRemoteDaemon_isDaemon;
  id v1 = +[MROrigin localOrigin];
  if (!v0)
  {
    id v2 = +[MRDeviceInfoRequest deviceInfoForOrigin:v1];

    goto LABEL_7;
  }
  id v2 = +[MRDeviceInfoRequest cachedDeviceInfoForOrigin:v1];

  if (v2)
  {
LABEL_7:
    uint64_t v3 = [v2 deviceUID];
    goto LABEL_8;
  }
  uint64_t v3 = 0;
LABEL_8:

  return v3;
}

uint64_t __MRMediaRemoteRequestDeviceUID_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void __MRMediaRemoteRequestDeviceUID_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 deviceUID];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

uint64_t MRMediaRemoteAirPlayReceiverCopyPairingIdentity()
{
  return 0;
}

void _MRMediaRemoteGetDeviceUIDWithRetryIntervals(void *a1, unint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  if (_MRMediaRemoteGetDeviceUIDWithRetryIntervals_onceToken != -1) {
    dispatch_once(&_MRMediaRemoteGetDeviceUIDWithRetryIntervals_onceToken, &__block_literal_global_403);
  }
  if ([v7 count] >= a2)
  {
    v24[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v24[1] = 3221225472;
    v24[2] = ___MRMediaRemoteGetDeviceUIDWithRetryIntervals_block_invoke_2;
    v24[3] = &unk_1E57D6A88;
    id v11 = (id *)&v25;
    unint64_t v25 = v8;
    id v27 = v9;
    unint64_t v28 = a2;
    id v12 = v7;
    id v26 = v12;
    uint64_t v13 = MEMORY[0x1997190F0](v24);
    uint64_t v14 = (void *)v13;
    if (a2)
    {
      int v15 = [v12 objectAtIndexedSubscript:a2 - 1];
      [v15 doubleValue];
      double v17 = v16;

      dispatch_time_t v18 = dispatch_time(0, (uint64_t)(v17 * 1000000000.0));
      id v19 = _MRMediaRemoteGetDeviceUIDWithRetryIntervals_workerQueue;
      v20[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
      v20[1] = 3221225472;
      v20[2] = ___MRMediaRemoteGetDeviceUIDWithRetryIntervals_block_invoke_406;
      v20[3] = &unk_1E57D6AB0;
      unint64_t v22 = a2;
      double v23 = v17;
      id v21 = v14;
      dispatch_after(v18, v19, v20);
    }
    else
    {
      (*(void (**)(uint64_t))(v13 + 16))(v13);
    }
  }
  else
  {
    id v10 = _MRLogForCategory(0);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      _MRMediaRemoteGetDeviceUIDWithRetryIntervals_cold_1(v7, v10);
    }

    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = ___MRMediaRemoteGetDeviceUIDWithRetryIntervals_block_invoke_405;
    block[3] = &unk_1E57D0FC0;
    id v11 = &v30;
    id v30 = v9;
    dispatch_async(v8, block);
  }
}

void MRMediaRemoteGetDeviceUIDWithRetryIntervals(void *a1, void *a2, void *a3)
{
}

uint64_t MRSupportsMediaControlReceiver()
{
  return 0;
}

void MRMediaRemoteRequestGroupUID(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  if (MRProcessIsMediaRemoteDaemon_isDaemon)
  {
    uint64_t v5 = (void *)MRMediaRemoteCopyGroupUID();
    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __MRMediaRemoteRequestGroupUID_block_invoke;
    block[3] = &unk_1E57D0DB8;
    id v13 = v5;
    id v14 = v4;
    id v6 = v5;
    id v7 = v4;
    dispatch_async(v3, block);
  }
  else
  {
    id v8 = +[MROrigin localOrigin];
    v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    _OWORD v10[2] = __MRMediaRemoteRequestGroupUID_block_invoke_2;
    v10[3] = &unk_1E57D6528;
    id v11 = v4;
    id v9 = v4;
    +[MRDeviceInfoRequest deviceInfoForOrigin:v8 queue:v3 completion:v10];

    id v6 = v11;
  }
}

uint64_t MRMediaRemoteCopyGroupUID()
{
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  int v0 = MRProcessIsMediaRemoteDaemon_isDaemon;
  id v1 = +[MROrigin localOrigin];
  if (!v0)
  {
    uint64_t v2 = +[MRDeviceInfoRequest deviceInfoForOrigin:v1];

    goto LABEL_7;
  }
  uint64_t v2 = +[MRDeviceInfoRequest cachedDeviceInfoForOrigin:v1];

  if (v2)
  {
LABEL_7:
    uint64_t v3 = [v2 groupUID];
    goto LABEL_8;
  }
  MRMediaRemoteAirPlayReceiverCopyGroupIdentity();
  uint64_t v3 = 0;
LABEL_8:

  return v3;
}

uint64_t __MRMediaRemoteRequestGroupUID_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void __MRMediaRemoteRequestGroupUID_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 groupUID];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void MRMediaRemoteRequestAirPlayGroupUID(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  if (MRProcessIsMediaRemoteDaemon_isDaemon)
  {
    uint64_t v5 = (void *)MRMediaRemoteCopyAirPlayGroupUID();
    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __MRMediaRemoteRequestAirPlayGroupUID_block_invoke;
    block[3] = &unk_1E57D0DB8;
    id v13 = v5;
    id v14 = v4;
    id v6 = v5;
    id v7 = v4;
    dispatch_async(v3, block);
  }
  else
  {
    id v8 = +[MROrigin localOrigin];
    v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    _OWORD v10[2] = __MRMediaRemoteRequestAirPlayGroupUID_block_invoke_2;
    v10[3] = &unk_1E57D6528;
    id v11 = v4;
    id v9 = v4;
    +[MRDeviceInfoRequest deviceInfoForOrigin:v8 queue:v3 completion:v10];

    id v6 = v11;
  }
}

uint64_t MRMediaRemoteCopyAirPlayGroupUID()
{
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  int v0 = MRProcessIsMediaRemoteDaemon_isDaemon;
  id v1 = +[MROrigin localOrigin];
  if (!v0)
  {
    uint64_t v2 = +[MRDeviceInfoRequest deviceInfoForOrigin:v1];

    goto LABEL_7;
  }
  uint64_t v2 = +[MRDeviceInfoRequest cachedDeviceInfoForOrigin:v1];

  if (v2)
  {
LABEL_7:
    uint64_t v3 = [v2 airPlayGroupUID];
    goto LABEL_8;
  }
  uint64_t v3 = 0;
LABEL_8:

  return v3;
}

uint64_t __MRMediaRemoteRequestAirPlayGroupUID_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void __MRMediaRemoteRequestAirPlayGroupUID_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 airPlayGroupUID];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

uint64_t MRMediaRemoteAirPlayReceiverCopyGroupIdentity()
{
  int v0 = +[MRUserSettings currentSettings];
  int v1 = [v0 supportMultiplayerHost];

  if (v1) {
    [0 length];
  }
  return 0;
}

uint64_t MRMediaRemoteAirPlayReceiverCopyAirPlayGroupIdentity()
{
  return 0;
}

uint64_t MRMediaRemoteAirPlayReceiverCopyAirPlayLeaderInfoData()
{
  return 0;
}

void MRMediaRemoteRequestIsGroupLeader(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  if (v3)
  {
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    id v11 = [MEMORY[0x1E4F28B00] currentHandler];
    id v12 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteRequestIsGroupLeader(__strong dispatch_queue_t, void (^__strong)(_Bool))");
    [v11 handleFailureInFunction:v12, @"MRUtility.m", 933, @"Invalid parameter not satisfying: %@", @"queue" file lineNumber description];

    if (v5) {
      goto LABEL_3;
    }
  }
  id v13 = [MEMORY[0x1E4F28B00] currentHandler];
  id v14 = objc_msgSend(NSString, "stringWithUTF8String:", "void MRMediaRemoteRequestIsGroupLeader(__strong dispatch_queue_t, void (^__strong)(_Bool))");
  [v13 handleFailureInFunction:v14, @"MRUtility.m", 934, @"Invalid parameter not satisfying: %@", @"completion" file lineNumber description];

LABEL_3:
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  if (MRProcessIsMediaRemoteDaemon_isDaemon)
  {
    char IsGroupLeader = MRMediaRemoteGetIsGroupLeader();
    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __MRMediaRemoteRequestIsGroupLeader_block_invoke;
    block[3] = &unk_1E57D0E08;
    id v7 = &v18;
    dispatch_time_t v18 = v5;
    char v19 = IsGroupLeader;
    id v8 = v5;
    dispatch_async(v3, block);
  }
  else
  {
    id v9 = +[MROrigin localOrigin];
    v15[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = __MRMediaRemoteRequestIsGroupLeader_block_invoke_2;
    v15[3] = &unk_1E57D6528;
    id v7 = &v16;
    double v16 = v5;
    id v10 = v5;
    +[MRDeviceInfoRequest deviceInfoForOrigin:v9 queue:v3 completion:v15];
  }
}

uint64_t MRMediaRemoteGetIsGroupLeader()
{
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  int v0 = MRProcessIsMediaRemoteDaemon_isDaemon;
  int v1 = +[MROrigin localOrigin];
  if (!v0)
  {
    uint64_t v2 = +[MRDeviceInfoRequest deviceInfoForOrigin:v1];

    goto LABEL_7;
  }
  uint64_t v2 = +[MRDeviceInfoRequest cachedDeviceInfoForOrigin:v1];

  if (v2)
  {
LABEL_7:
    uint64_t v3 = [v2 isGroupLeader];
    goto LABEL_8;
  }
  uint64_t v3 = 1;
LABEL_8:

  return v3;
}

uint64_t __MRMediaRemoteRequestIsGroupLeader_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

uint64_t __MRMediaRemoteRequestIsGroupLeader_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = [a2 isGroupLeader];
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);

  return v4(v2, v3);
}

uint64_t MRMediaRemoteAirPlayReceiverGetIsGroupLeader()
{
  return 1;
}

void MRMediaRemoteRequestSenderDefaultGroupUID(void *a1, void *a2)
{
  uint64_t v3 = a1;
  id v4 = a2;
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  if (MRProcessIsMediaRemoteDaemon_isDaemon)
  {
    uint64_t v5 = (void *)MRMediaRemoteCopySenderDefaultGroupUID();
    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __MRMediaRemoteRequestSenderDefaultGroupUID_block_invoke;
    block[3] = &unk_1E57D0DB8;
    id v13 = v5;
    id v14 = v4;
    id v6 = v5;
    id v7 = v4;
    dispatch_async(v3, block);
  }
  else
  {
    id v8 = +[MROrigin localOrigin];
    v10[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    _OWORD v10[2] = __MRMediaRemoteRequestSenderDefaultGroupUID_block_invoke_2;
    v10[3] = &unk_1E57D6528;
    id v11 = v4;
    id v9 = v4;
    +[MRDeviceInfoRequest deviceInfoForOrigin:v8 queue:v3 completion:v10];

    id v6 = v11;
  }
}

uint64_t MRMediaRemoteCopySenderDefaultGroupUID()
{
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  int v0 = MRProcessIsMediaRemoteDaemon_isDaemon;
  int v1 = +[MROrigin localOrigin];
  if (!v0)
  {
    uint64_t v2 = +[MRDeviceInfoRequest deviceInfoForOrigin:v1];

    goto LABEL_7;
  }
  uint64_t v2 = +[MRDeviceInfoRequest cachedDeviceInfoForOrigin:v1];

  if (v2)
  {
LABEL_7:
    uint64_t v3 = [v2 senderDefaultGroupUID];
    goto LABEL_8;
  }
  uint64_t v3 = (uint64_t)MRMediaRemoteCopyLocalAirPlaySenderDefaultGroupIdentity();
LABEL_8:
  uint64_t v4 = v3;

  return v4;
}

uint64_t __MRMediaRemoteRequestSenderDefaultGroupUID_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void __MRMediaRemoteRequestSenderDefaultGroupUID_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 senderDefaultGroupUID];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void *MRMediaRemoteCopyLocalAirPlaySenderDefaultGroupIdentity()
{
  uint64_t v1 = 0;
  if (AirPlaySupportLibrary_sOnce != -1) {
    dispatch_once(&AirPlaySupportLibrary_sOnce, &__block_literal_global_580);
  }
  if (!AirPlaySupportLibrary_sLib) {
    return 0;
  }
  uint64_t result = dlsym((void *)AirPlaySupportLibrary_sLib, "APSCopyDefaultGroupUUID");
  if (result)
  {
    ((void (*)(uint64_t))softLinkAPSCopyDefaultGroupUUID[0])((uint64_t)&v1);
    return (void *)v1;
  }
  return result;
}

uint64_t MRMediaRemoteCopyLocalAirPlayReceiverTightSyncIdentity()
{
  return 0;
}

uint64_t MRMediaRemoteCopyLocalClusterID()
{
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  if (MRProcessIsMediaRemoteDaemon_isDaemon) {
    return 0;
  }
  uint64_t v1 = +[MROrigin localOrigin];
  uint64_t v2 = +[MRDeviceInfoRequest deviceInfoForOrigin:v1];

  uint64_t v0 = [v2 clusterID];

  return v0;
}

uint64_t MRMediaRemoteCopyLocalClusterLeaderIdentity()
{
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  if (MRProcessIsMediaRemoteDaemon_isDaemon) {
    return 0;
  }
  uint64_t v1 = +[MROrigin localOrigin];
  uint64_t v2 = +[MRDeviceInfoRequest deviceInfoForOrigin:v1];

  uint64_t v0 = [v2 clusterLeaderID];

  return v0;
}

uint64_t MRMediaRemoteCopyLocalAirPlayReceiverClusterType()
{
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  if (MRProcessIsMediaRemoteDaemon_isDaemon) {
    return 0;
  }
  uint64_t v1 = +[MROrigin localOrigin];
  uint64_t v2 = +[MRDeviceInfoRequest deviceInfoForOrigin:v1];

  uint64_t v3 = [v2 clusterType];
  return v3;
}

uint64_t MRMediaRemoteGetLocalClusterSize()
{
  return 0;
}

uint64_t MRMediaRemoteIsClusterLeader()
{
  return 1;
}

uint64_t MRMediaRemoteSetClusterLeader()
{
  return 0;
}

uint64_t MRMediaRemoteGetLocalIsProxyGroupPlayer()
{
  return 1;
}

uint64_t MRMediaRemoteGetLocalGroupContainsDiscoverableGroupLeader()
{
  return 1;
}

uint64_t MRMediaRemoteGetParentGroupContainsDiscoverableGroupLeader()
{
  return 1;
}

uint64_t MRMediaRemoteCopyLocalAirPlayGroupName()
{
  return 0;
}

uint64_t MRMediaRemoteGetIsAirPlayActive()
{
  return 0;
}

BOOL MRMediaRemoteAVOutputDeviceIsLocalForAirPlay(void *a1)
{
  uint64_t v1 = [a1 airPlayProperties];
  uint64_t v2 = [v1 objectForKeyedSubscript:@"IsLocalDevice"];
  BOOL v3 = v2 != 0;

  return v3;
}

id MRMediaRemoteAddVirtualOutputDevice(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)MRGetSharedService();
  id v5 = MRMediaRemoteServiceAddVirtualOutputDevice(v4, a1, v3);

  return v5;
}

uint64_t MRMediaRemoteCopyVirtualOutputDevices()
{
  if (MRProcessIsMediaRemoteDaemon_onceToken != -1) {
    dispatch_once(&MRProcessIsMediaRemoteDaemon_onceToken, &__block_literal_global_76);
  }
  if (MRProcessIsMediaRemoteDaemon_isDaemon || !_os_feature_enabled_impl()) {
    return 0;
  }
  uint64_t v0 = (void *)MRGetSharedService();
  MRMediaRemoteServiceCopyVirtualOutputDevices(v0);
  return objc_claimAutoreleasedReturnValue();
}

__CFString *MRMediaRemoteCopyReadableDictionaryDescription(void *a1)
{
  if (!a1) {
    return @"NULL";
  }
  uint64_t v1 = (void *)MEMORY[0x1E4F28E78];
  id v2 = a1;
  id v3 = [v1 string];
  objc_msgSend(v3, "appendFormat:", @"<NSCFDictionary %p {", v2);
  v7[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __MRMediaRemoteCopyReadableDictionaryDescription_block_invoke;
  v7[3] = &unk_1E57D48B0;
  id v8 = v3;
  id v4 = v3;
  [v2 enumerateKeysAndObjectsUsingBlock:v7];

  [v4 appendString:@"\n}>"];
  uint64_t v5 = [v4 copy];

  return (__CFString *)v5;
}

void __MRMediaRemoteCopyReadableDictionaryDescription_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t StringRepresentation = MRDataCreateStringRepresentation(v5);

    id v5 = (id)StringRepresentation;
  }
  [*(id *)(a1 + 32) appendFormat:@"\n\t%@ = %@", v7, v5];
}

uint64_t MRDataCreateStringRepresentation(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1;
  if ((unint64_t)[v1 length] < 5)
  {
    uint64_t v8 = [v1 description];
  }
  else
  {
    id v2 = (void *)MEMORY[0x1E4F1C9B8];
    id v3 = v1;
    id v4 = objc_msgSend(v2, "dataWithBytesNoCopy:length:freeWhenDone:", objc_msgSend(v3, "bytes"), 4, 0);
    id v5 = (void *)MEMORY[0x1E4F1C9B8];
    id v6 = v3;
    id v7 = objc_msgSend(v5, "dataWithBytesNoCopy:length:freeWhenDone:", objc_msgSend(v6, "bytes") + objc_msgSend(v6, "length") - 4, 4, 0);
    uint64_t v8 = [NSString stringWithFormat:@"%@...%@:%lu bytes", v4, v7, objc_msgSend(v6, "length")];
  }
  return v8;
}

uint64_t MRCopyMediaRemoteLibraryDirectory()
{
  v8[3] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = MSVMobileHomeDirectory();
  if (v0) {
    id v1 = (__CFString *)v0;
  }
  else {
    id v1 = @"~";
  }
  id v2 = NSString;
  v8[[NSString stringWithFormat:@"com.apple.%@", 0] = v1;
  v8[1] = @"Library";
  void v8[2] = @"MediaRemote";
  id v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:3];
  id v4 = [v2 pathWithComponents:v3];

  id v5 = [MEMORY[0x1E4F28CB8] defaultManager];
  [v5 createDirectoryAtPath:v4 withIntermediateDirectories:1 attributes:0 error:0];

  uint64_t v6 = [v4 copy];
  return v6;
}

uint64_t MRCopyDeviceInfoPath()
{
  uint64_t v0 = (void *)MRCopyMediaRemoteLibraryDirectory();
  uint64_t v1 = [v0 stringByAppendingPathComponent:@"MediaRemoteTelevisionDeviceInfoIdentifier.plist"];

  return v1;
}

CFStringRef MRCreateASCIIRepresentationFromImageData(const __CFData *a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v1 = CGImageSourceCreateWithData(a1, 0);
  ImageAtIndex = CGImageSourceCreateImageAtIndex(v1, 0, 0);
  if (v1) {
    CFRelease(v1);
  }
  double Width = (double)CGImageGetWidth(ImageAtIndex);
  size_t Height = CGImageGetHeight(ImageAtIndex);
  double v5 = 350.0 / Width;
  if (350.0 / Width >= 650.0 / (double)Height) {
    double v5 = 650.0 / (double)Height;
  }
  double v6 = ceil(v5 * Width / 7.0);
  if (v6 == 0.0 || (double v7 = ceil(v5 * (double)Height / 13.0), v7 == 0.0))
  {
    CGImageRelease(ImageAtIndex);
    return 0;
  }
  DeviceGray = CGColorSpaceCreateDeviceGray();
  id v10 = CGBitmapContextCreate(0, (unint64_t)v6, (unint64_t)v7, 8uLL, 0, DeviceGray, 0);
  CGColorSpaceRelease(DeviceGray);
  CGContextSaveGState(v10);
  v24.origin.x = 0.0;
  v24.origin.y = 0.0;
  v24.size.width = v6;
  v24.size.height = v7;
  CGContextDrawImage(v10, v24, ImageAtIndex);
  CGContextRestoreGState(v10);
  CFDataRef Data = (unsigned __int8 *)CGBitmapContextGetData(v10);
  size_t BytesPerRow = CGBitmapContextGetBytesPerRow(v10);
  double v13 = v6 + 1.0;
  unint64_t v14 = vcvtd_n_u64_f64(v7 * (double)(unint64_t)(v6 + 1.0), 2uLL);
  int v15 = (const UInt8 *)malloc_type_malloc(v14, 0xE5565067uLL);
  double v16 = v15;
  if (v7 > 0.0)
  {
    uint64_t v17 = 0;
    dispatch_time_t v18 = v15;
    do
    {
      if (v6 > 0.0)
      {
        uint64_t v19 = 0;
        do
        {
          unsigned int v20 = Data[v19] / 0x19u;
          if (v20 >= 9) {
            unsigned int v20 = 9;
          }
          *(_DWORD *)&v18[4 * v19++] = _MRCharacterForBrightness_chars[v20];
        }
        while (v6 > (double)(int)v19);
      }
      *(_DWORD *)&v15[4 * ++v17 * (unint64_t)v13 - 4] = 10;
      v18 += 4 * (unint64_t)v13;
      Data += BytesPerRow;
    }
    while (v7 > (double)(int)v17);
  }
  CGContextRelease(v10);
  CGImageRelease(ImageAtIndex);
  CFAllocatorRef v21 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFAllocatorRef v22 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];

  return CFStringCreateWithBytesNoCopy(v21, v16, v14, 0x1C000100u, 0, v22);
}

id MRCreateIndentedDebugDescriptionFromDictionary(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    v8[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    void v8[2] = __MRCreateIndentedDebugDescriptionFromDictionary_block_invoke;
    v8[3] = &unk_1E57D48B0;
    id v3 = v2;
    id v9 = v3;
    [v1 enumerateKeysAndObjectsUsingBlock:v8];
    [v3 addObject:@"}"];
  }
  else
  {
    id v3 = 0;
  }
  id v4 = [v3 componentsJoinedByString:@"\n"];
  double v5 = MRCreateFormattedDebugDescriptionFromClass(v1, v4);
  double v6 = MRCreateIndentedDebugDescriptionFromObject(v5);

  return v6;
}

void __MRCreateIndentedDebugDescriptionFromDictionary_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  double v5 = (objc_class *)NSString;
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 alloc];
  _MRCreateIndentedDebugDescriptionFrom(v6);
  id v10 = (id)objc_claimAutoreleasedReturnValue();

  id v9 = (void *)[v8 initWithFormat:@"%@ = %@,", v7, v10];
  [v4 addObject:v9];
}

BOOL MRGetDiscoveryDebugEnabled()
{
  return CFPreferencesGetAppBooleanValue(@"DiscoveryDebugEnabled", @"com.apple.mobileipod", 0) != 0;
}

void MRInvalidateTransactions()
{
  if (_MRRegisteredTransactionsInitialize_onceToken != -1) {
    dispatch_once(&_MRRegisteredTransactionsInitialize_onceToken, &__block_literal_global_583);
  }
  uint64_t v0 = __registeredTransactionsQueue;

  dispatch_async(v0, &__block_literal_global_535);
}

void __MRInvalidateTransactions_block_invoke()
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  __transactionShutdownTriggered = 1;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v0 = (id)__registeredTransactions;
  uint64_t v1 = [v0 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)v6;
    do
    {
      uint64_t v4 = 0;
      do
      {
        if (*(void *)v6 != v3) {
          objc_enumerationMutation(v0);
        }
        objc_msgSend(*(id *)(*((void *)&v5 + 1) + 8 * v4++), "invalidateTransaction", (void)v5);
      }
      while (v2 != v4);
      uint64_t v2 = [v0 countByEnumeratingWithState:&v5 objects:v9 count:16];
    }
    while (v2);
  }
}

id MRCopyRegisteredTransactionDescriptions()
{
  if (_MRRegisteredTransactionsInitialize_onceToken != -1) {
    dispatch_once(&_MRRegisteredTransactionsInitialize_onceToken, &__block_literal_global_583);
  }
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x3032000000;
  long long v6 = __Block_byref_object_copy__30;
  long long v7 = __Block_byref_object_dispose__30;
  id v8 = 0;
  block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __MRCopyRegisteredTransactionDescriptions_block_invoke;
  block[3] = &unk_1E57D66F8;
  void block[4] = &v3;
  dispatch_sync((dispatch_queue_t)__registeredTransactionsQueue, block);
  id v0 = (void *)[(id)v4[5] copy];
  _Block_object_dispose(&v3, 8);

  return v0;
}

void sub_195107DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __MRCopyRegisteredTransactionDescriptions_block_invoke(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = [(id)__registeredTransactions allObjects];
  uint64_t v3 = [v2 sortedArrayUsingComparator:&__block_literal_global_538];

  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v3, "count"));
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  long long v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v7 = v3;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
        double v13 = objc_msgSend(*(id *)(*((void *)&v14 + 1) + 8 * v11), "description", (void)v14);
        [v12 addObject:v13];

        ++v11;
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v9);
  }
}

uint64_t __MRCopyRegisteredTransactionDescriptions_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [a2 transactionName];
  long long v6 = [v4 transactionName];

  uint64_t v7 = [v5 compare:v6];
  return v7;
}

void __MRDictionaryCalculateDeltas_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (objc_class *)MEMORY[0x1E4F779D8];
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 alloc];
  id v10 = [MEMORY[0x1E4F1CA98] null];
  uint64_t v9 = (void *)[v8 initWithFirst:v10 second:v6];

  [*(id *)(a1 + 32) setObject:v9 forKeyedSubscript:v7];
}

void __MRDictionaryCalculateDeltas_block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (objc_class *)MEMORY[0x1E4F779D8];
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 alloc];
  id v10 = [MEMORY[0x1E4F1CA98] null];
  uint64_t v9 = (void *)[v8 initWithFirst:v6 second:v10];

  [*(id *)(a1 + 32) setObject:v9 forKeyedSubscript:v7];
}

uint64_t __MRDictionaryCalculateDeltas_block_invoke_4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setObject:a3 forKeyedSubscript:a2];
}

uint64_t MRIsObjectOfClass(void *a1, uint64_t a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (MSVDeviceOSIsInternalInstall())
  {
    if (v3 && (objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v5 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL MRIsObjectOfClass(NSObject *__strong, __unsafe_unretained Class)");
      [v4 handleFailureInFunction:v5, @"MRUtility.m", 1656, @"Type mismatch, expecting %@ found %@", a2, objc_opt_class() file lineNumber description];
    }
    goto LABEL_7;
  }
  if (!v3 || (objc_opt_isKindOfClass() & 1) != 0)
  {
LABEL_7:
    uint64_t v6 = 1;
    goto LABEL_8;
  }
  id v8 = _MRLogForCategory(0);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138412546;
    id v10 = v3;
    __int16 v11 = 2112;
    uint64_t v12 = a2;
    _os_log_impl(&dword_194F3C000, v8, OS_LOG_TYPE_DEFAULT, "Type mismatch, expecting %@ found %@", buf, 0x16u);
  }

  uint64_t v6 = 0;
LABEL_8:

  return v6;
}

void MRPerformAsyncOperationsUntilError(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v3 firstObject];
  if (v5)
  {
    v6[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    void v6[2] = __MRPerformAsyncOperationsUntilError_block_invoke;
    v6[3] = &unk_1E57D1DA0;
    id v7 = v3;
    id v8 = v4;
    ((void (**)(void, void *))v5)[2](v5, v6);
  }
  else
  {
    (*((void (**)(id, void))v4 + 2))(v4, 0);
  }
}

void __MRPerformAsyncOperationsUntilError_block_invoke(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v3();
  }
  else
  {
    id v4 = (id)[*(id *)(a1 + 32) mutableCopy];
    [v4 removeObjectAtIndex:0];
    MRPerformAsyncOperationsUntilError(v4, *(void *)(a1 + 40));
  }
}

id MRComputeBaseGroupID(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    uint64_t v5 = 0;
    softLinkAPSParseGroupID((uint64_t)v1, 0, 0, 0, (uint64_t)&v5);
    id v3 = v5;
    if (!v5) {
      id v3 = v2;
    }
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id MRComputeGroupContextID(id a1)
{
  if (a1)
  {
    var8[[NSString stringWithFormat:@"com.apple.%@", 0] = 0;
    softLinkAPSParseGroupID((uint64_t)a1, 0, 0, (uint64_t)var8, 0);
    a1 = var8[0];
    unint64_t v1 = (unint64_t)var8[2];
  }
  return a1;
}

__CFString *MRCopyDeviceName()
{
  if ([MEMORY[0x1E4F77990] hasBoolEntitlement:@"com.apple.developer.device-information.user-assigned-device-name"])id v0 = (__CFString *)MGCopyAnswer(); {
  else
  }
    id v0 = (__CFString *)MSVCopyLocalizedModelName();
  if (!v0) {
    id v0 = @"Unknown";
  }

  return v0;
}

void MRProcessIDForApplication(void *a1, void *a2, void *a3)
{
  v19[1] = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  uint64_t v6 = a2;
  id v7 = a3;
  if (v7)
  {
    if (v6)
    {
      if (v5)
      {
LABEL_4:
        id v8 = objc_alloc(MEMORY[0x1E4F4E278]);
        v19[[NSString stringWithFormat:@"com.apple.%@", 0] = v5;
        uint64_t v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v19 count:1];
        id v10 = (void *)[v8 initWithBundleIDs:v9 states:*MEMORY[0x1E4F4E220]];

        v13[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
        v13[1] = 3221225472;
        _OWORD v13[2] = __MRProcessIDForApplication_block_invoke_2;
        v13[3] = &unk_1E57D6B70;
        long long v14 = v6;
        id v15 = v10;
        id v16 = v7;
        id v11 = v10;
        [v11 applicationInfoForApplication:v5 completion:v13];

LABEL_7:
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v6 = MEMORY[0x1E4F14428];
      id v12 = MEMORY[0x1E4F14428];
      if (v5) {
        goto LABEL_4;
      }
    }
    block[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __MRProcessIDForApplication_block_invoke;
    block[3] = &unk_1E57D0FC0;
    id v18 = v7;
    dispatch_async(v6, block);
    id v11 = v18;
    goto LABEL_7;
  }
LABEL_8:
}

uint64_t __MRProcessIDForApplication_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __MRProcessIDForApplication_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = [a2 objectForKey:*MEMORY[0x1E4F4E258]];
  int v4 = [v3 intValue];

  id v5 = *(NSObject **)(a1 + 32);
  uint64_t v6 = MEMORY[0x1E4F143A8];
  uint64_t v7 = 3221225472;
  id v8 = __MRProcessIDForApplication_block_invoke_3;
  uint64_t v9 = &unk_1E57D0F20;
  id v10 = *(id *)(a1 + 48);
  int v11 = v4;
  dispatch_async(v5, &v6);
  objc_msgSend(*(id *)(a1 + 40), "invalidate", v6, v7, v8, v9);
}

uint64_t __MRProcessIDForApplication_block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned int *)(a1 + 40));
}

void *__AirPlaySupportLibrary_block_invoke()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/AirPlaySupport.framework/AirPlaySupport", 2);
  AirPlaySupportLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t initAPSCopyDefaultGroupUUID(uint64_t a1)
{
  if (AirPlaySupportLibrary_sOnce != -1) {
    dispatch_once(&AirPlaySupportLibrary_sOnce, &__block_literal_global_580);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)AirPlaySupportLibrary_sLib, "APSCopyDefaultGroupUUID");
  softLinkAPSCopyDefaultGroupUUID[[NSString stringWithFormat:@"com.apple.%@", 0] = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t initAPSParseGroupID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (AirPlaySupportLibrary_sOnce != -1) {
    dispatch_once(&AirPlaySupportLibrary_sOnce, &__block_literal_global_580);
  }
  id v10 = (uint64_t (*)())dlsym((void *)AirPlaySupportLibrary_sLib, "APSParseGroupID");
  softLinkAPSParseGroupID = v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v10)(a1, a2, a3, a4, a5);
}

id MRTransactionPacketsGetShallowCopy(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = objc_msgSend(*(id *)(*((void *)&v10 + 1) + 8 * i), "copy", (void)v10);
        [v2 addObject:v8];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

void sub_19510AEDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_19510B098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id MRTransactionNameGetDescription(unint64_t a1)
{
  if (a1 > 0xB)
  {
    id v3 = 0;
  }
  else
  {
    id v3 = [(__CFString *)off_1E57D7280[a1] stringByAppendingString:@"Transaction", v1];
  }
  return v3;
}

void sub_19510B598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id MRTransactionPacketsCreateExternalRepresentation(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1 && [v1 count])
  {
    id v3 = objc_alloc_init(_MRTransactionPacketsProtobuf);
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v4 = v2;
    uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v13;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v13 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * i), "protobuf", (void)v12);
          [(_MRTransactionPacketsProtobuf *)v3 addPackets:v9];
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v6);
    }

    long long v10 = [(_MRTransactionPacketsProtobuf *)v3 data];
  }
  else
  {
    long long v10 = 0;
  }

  return v10;
}

id MRTransactionPacketsGetKeys(void *a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        uint64_t v9 = objc_msgSend(v8, "key", (void)v16);
        if (v9)
        {
          long long v10 = (void *)v9;
          long long v11 = [v8 key];
          long long v12 = [v11 identifier];

          if (v12)
          {
            long long v13 = [v8 key];
            long long v14 = [v13 identifier];
            [v2 addObject:v14];
          }
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v5);
  }

  return v2;
}

id MRTransactionPacketsCreateFromExternalRepresentation(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v3 = [[_MRTransactionPacketsProtobuf alloc] initWithData:v1];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v4 = [(_MRTransactionPacketsProtobuf *)v3 packets];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = [[MRTransactionPacket alloc] initWithProtobuf:*(void *)(*((void *)&v11 + 1) + 8 * i)];
        [v2 addObject:v9];
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }

  return v2;
}

void OUTLINED_FUNCTION_0_14(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_3_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

__CFString *NSStringFromMRClientVisibility(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Undefined";
  }
  else {
    return off_1E57D72E0[a1 - 1];
  }
}

uint64_t MRMediaRemoteCommandToProtobuf(uint64_t a1)
{
  int v2 = a1;
  uint64_t result = 1;
  switch(v2)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 2;
      break;
    case 2:
      uint64_t result = 3;
      break;
    case 3:
      uint64_t result = 4;
      break;
    case 4:
      uint64_t result = 5;
      break;
    case 5:
      uint64_t result = 6;
      break;
    case 6:
      uint64_t result = 7;
      break;
    case 7:
      uint64_t result = 8;
      break;
    case 8:
      uint64_t result = 9;
      break;
    case 9:
      uint64_t result = 10;
      break;
    case 10:
      uint64_t result = 11;
      break;
    case 11:
      uint64_t result = 12;
      break;
    case 12:
      uint64_t result = 13;
      break;
    case 13:
      uint64_t result = 14;
      break;
    case 14:
      uint64_t result = 15;
      break;
    case 15:
      uint64_t result = 16;
      break;
    case 17:
      uint64_t result = 18;
      break;
    case 18:
      uint64_t result = 19;
      break;
    case 19:
      uint64_t result = 20;
      break;
    case 20:
      uint64_t result = 21;
      break;
    case 21:
      uint64_t result = 22;
      break;
    case 22:
      uint64_t result = 23;
      break;
    case 23:
      uint64_t result = 24;
      break;
    case 24:
      uint64_t result = 45;
      break;
    case 25:
      uint64_t result = 46;
      break;
    case 26:
      uint64_t result = 47;
      break;
    case 27:
      uint64_t result = 53;
      break;
    case 28:
      uint64_t result = 54;
      break;
    case 100:
      uint64_t result = 25;
      break;
    case 101:
      uint64_t result = 26;
      break;
    case 102:
      uint64_t result = 27;
      break;
    case 103:
      uint64_t result = 28;
      break;
    case 104:
      uint64_t result = 29;
      break;
    case 105:
      uint64_t result = 30;
      break;
    case 106:
      uint64_t result = 31;
      break;
    case 107:
      uint64_t result = 32;
      break;
    case 108:
      uint64_t result = 33;
      break;
    case 109:
      uint64_t result = 34;
      break;
    case 110:
      uint64_t result = 35;
      break;
    case 116:
      uint64_t result = 41;
      break;
    case 121:
      uint64_t result = 50;
      break;
    case 122:
      uint64_t result = 48;
      break;
    case 124:
    case 135:
    case 142:
    case 143:
    case 144:
    case 145:
      uint64_t result = a1;
      break;
    case 125:
      uint64_t result = 52;
      break;
    case 127:
      uint64_t result = 49;
      break;
    case 128:
      uint64_t result = 51;
      break;
    case 129:
      uint64_t result = 56;
      break;
    case 130:
      uint64_t result = 55;
      break;
    case 131:
      uint64_t result = 57;
      break;
    case 132:
      uint64_t result = 58;
      break;
    case 133:
      uint64_t result = 59;
      break;
    case 134:
      uint64_t result = 63;
      break;
    case 136:
      uint64_t result = 60;
      break;
    case 137:
      uint64_t result = 61;
      break;
    case 138:
      uint64_t result = 62;
      break;
    case 139:
      uint64_t result = 64;
      break;
    case 140:
      uint64_t result = 65;
      break;
    default:
      if ((a1 - 25000) >= 0x124F8) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = a1;
      }
      break;
  }
  return result;
}

uint64_t MRMediaRemoteCommandFromProtobuf(uint64_t a1)
{
  int v2 = a1;
  uint64_t result = 0;
  switch(v2)
  {
    case 0:
      uint64_t result = 0xFFFFFFFFLL;
      break;
    case 1:
      return result;
    case 2:
      uint64_t result = 1;
      break;
    case 3:
      uint64_t result = 2;
      break;
    case 4:
      uint64_t result = 3;
      break;
    case 5:
      uint64_t result = 4;
      break;
    case 6:
      uint64_t result = 5;
      break;
    case 7:
      uint64_t result = 6;
      break;
    case 8:
      uint64_t result = 7;
      break;
    case 9:
      uint64_t result = 8;
      break;
    case 10:
      uint64_t result = 9;
      break;
    case 11:
      uint64_t result = 10;
      break;
    case 12:
      uint64_t result = 11;
      break;
    case 13:
      uint64_t result = 12;
      break;
    case 14:
      uint64_t result = 13;
      break;
    case 15:
      uint64_t result = 14;
      break;
    case 16:
      uint64_t result = 15;
      break;
    case 18:
      uint64_t result = 17;
      break;
    case 19:
      uint64_t result = 18;
      break;
    case 20:
      uint64_t result = 19;
      break;
    case 21:
      uint64_t result = 20;
      break;
    case 22:
      uint64_t result = 21;
      break;
    case 23:
      uint64_t result = 22;
      break;
    case 24:
      uint64_t result = 23;
      break;
    case 25:
      uint64_t result = 100;
      break;
    case 26:
      uint64_t result = 101;
      break;
    case 27:
      uint64_t result = 102;
      break;
    case 28:
      uint64_t result = 103;
      break;
    case 29:
      uint64_t result = 104;
      break;
    case 30:
      uint64_t result = 105;
      break;
    case 31:
      uint64_t result = 106;
      break;
    case 32:
      uint64_t result = 107;
      break;
    case 33:
      uint64_t result = 108;
      break;
    case 34:
      uint64_t result = 109;
      break;
    case 35:
      uint64_t result = 110;
      break;
    case 41:
      uint64_t result = 116;
      break;
    case 45:
      uint64_t result = 24;
      break;
    case 46:
      uint64_t result = 25;
      break;
    case 47:
      uint64_t result = 26;
      break;
    case 48:
      uint64_t result = 122;
      break;
    case 49:
      uint64_t result = 127;
      break;
    case 50:
      uint64_t result = 121;
      break;
    case 51:
      uint64_t result = 128;
      break;
    case 52:
      uint64_t result = 125;
      break;
    case 53:
      uint64_t result = 27;
      break;
    case 54:
      uint64_t result = 28;
      break;
    case 55:
      uint64_t result = 130;
      break;
    case 56:
      uint64_t result = 129;
      break;
    case 57:
      uint64_t result = 131;
      break;
    case 58:
      uint64_t result = 132;
      break;
    case 59:
      uint64_t result = 133;
      break;
    case 60:
      uint64_t result = 136;
      break;
    case 61:
      uint64_t result = 137;
      break;
    case 62:
      uint64_t result = 138;
      break;
    case 63:
      uint64_t result = 134;
      break;
    case 64:
      uint64_t result = 139;
      break;
    case 65:
      uint64_t result = 140;
      break;
    case 124:
    case 135:
    case 142:
    case 143:
    case 144:
    case 145:
      uint64_t result = a1;
      break;
    default:
      if ((a1 - 25000) >= 0x124F8) {
        uint64_t result = 0xFFFFFFFFLL;
      }
      else {
        uint64_t result = a1;
      }
      break;
  }
  return result;
}

id MRMediaRemoteCommandOptionsToProtobuf(void *a1)
{
  id v1 = a1;
  int v2 = _MRMediaRemoteCommandOptionsSerialization();
  id v3 = [v2 createProtobufFromDictionary:v1];

  return v3;
}

id _MRMediaRemoteCommandOptionsSerialization()
{
  if (_MRMediaRemoteCommandOptionsSerialization___onceToken != -1) {
    dispatch_once(&_MRMediaRemoteCommandOptionsSerialization___onceToken, &__block_literal_global_77);
  }
  id v0 = (void *)_MRMediaRemoteCommandOptionsSerialization___serialization;

  return v0;
}

id MRMediaRemoteCommandOptionsFromProtobuf(void *a1)
{
  id v1 = a1;
  int v2 = _MRMediaRemoteCommandOptionsSerialization();
  id v3 = [v2 createDictionaryFromProtobuf:v1];

  return v3;
}

uint64_t MRMediaRemoteRepeatModeToProtobuf(uint64_t result)
{
  if ((result - 1) >= 3) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t MRMediaRemoteRepeatModeFromProtobuf(uint64_t result)
{
  if ((result - 1) >= 3) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t MRMediaRemoteShuffleModeToProtobuf(uint64_t result)
{
  if ((result - 1) >= 3) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t MRMediaRemoteShuffleModeFromProtobuf(uint64_t result)
{
  if ((result - 1) >= 3) {
    return 0;
  }
  else {
    return result;
  }
}

_MRSupportedCommandsProtobuf *MRCreateProtobufFromSupportedCommands(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1;
  int v2 = objc_alloc_init(_MRSupportedCommandsProtobuf);
  id v3 = objc_msgSend(v1, "mr_map:", &__block_literal_global_188);

  uint64_t v4 = (void *)[v3 mutableCopy];
  [(_MRSupportedCommandsProtobuf *)v2 setSupportedCommands:v4];

  return v2;
}

uint64_t __MRCreateProtobufFromSupportedCommands_block_invoke(uint64_t a1, void *a2)
{
  return [a2 protobuf];
}

uint64_t MRCreateSupportedCommandsFromProtobuf(void *a1)
{
  id v1 = [a1 supportedCommands];
  int v2 = objc_msgSend(v1, "mr_map:", &__block_literal_global_191);
  uint64_t v3 = [v2 mutableCopy];

  return v3;
}

MRCommandInfo *__MRCreateSupportedCommandsFromProtobuf_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [[MRCommandInfo alloc] initWithProtobuf:v2];

  return v3;
}

id _MRNowPlayingInfoDictionaryKeyToProtobufKeyMapping()
{
  if (_MRNowPlayingInfoDictionaryKeyToProtobufKeyMapping_onceToken != -1) {
    dispatch_once(&_MRNowPlayingInfoDictionaryKeyToProtobufKeyMapping_onceToken, &__block_literal_global_194);
  }
  id v0 = (void *)_MRNowPlayingInfoDictionaryKeyToProtobufKeyMapping___mapping;

  return v0;
}

id _MRNowPlayingInfoSerialization()
{
  if (_MRNowPlayingInfoSerialization___onceToken != -1) {
    dispatch_once(&_MRNowPlayingInfoSerialization___onceToken, &__block_literal_global_224);
  }
  id v0 = (void *)_MRNowPlayingInfoSerialization___serialization;

  return v0;
}

uint64_t MRCreateProtobufFromNowPlayingInfo(void *a1)
{
  id v1 = a1;
  id v2 = _MRNowPlayingInfoSerialization();
  uint64_t v3 = [v2 createProtobufFromDictionary:v1];

  return v3;
}

uint64_t MRCreateNowPlayingInfoFromProtobuf(void *a1)
{
  id v1 = a1;
  id v2 = _MRNowPlayingInfoSerialization();
  uint64_t v3 = [v2 createDictionaryFromProtobuf:v1];

  return v3;
}

uint64_t MRProtobufFromGameControllerInputMode(char a1)
{
  return a1 & 7;
}

uint64_t MRGameControllerInputModeFromProtobuf(char a1)
{
  return a1 & 7;
}

uint64_t MRProtobufFromGameControllerProfile(int a1)
{
  if (a1 == 2) {
    return 2;
  }
  else {
    return a1 == 1;
  }
}

uint64_t MRGameControllerProfileFromProtobuf(int a1)
{
  if (a1 == 1) {
    return 1;
  }
  else {
    return 2 * (a1 == 2);
  }
}

uint64_t MRProtobufFromConnectionState(uint64_t result)
{
  if ((result - 1) >= 3) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t MRConnectionStateFromProtobuf(uint64_t result)
{
  if ((result - 1) >= 3) {
    return 0;
  }
  else {
    return result;
  }
}

_MRReceivedCommandAppOptionsProtobuf *MRProtobufFromSendCommandAppOptions(char a1)
{
  id v2 = objc_alloc_init(_MRReceivedCommandAppOptionsProtobuf);
  [(_MRReceivedCommandAppOptionsProtobuf *)v2 setLaunchApplication:a1 & 1];

  return v2;
}

uint64_t MRSendCommandAppOptionsFromProtobuf(void *a1)
{
  return [a1 launchApplication];
}

uint64_t MRMediaRemoteReplaceIntentToProtobuf(unsigned int a1)
{
  if (a1 <= 3) {
    return a1 + 1;
  }
  else {
    return 3;
  }
}

uint64_t MRMediaRemoteReplaceIntentFromProtobuf(int a1)
{
  if ((a1 - 1) >= 4) {
    return 2;
  }
  else {
    return (a1 - 1);
  }
}

uint64_t MRMediaRemotePlaybackQueueTypeToProtobuf(int a1)
{
  if ((a1 - 5) > 3) {
    return 1;
  }
  else {
    return dword_195224540[a1 - 5];
  }
}

uint64_t MRMediaRemotePlaybackQueueTypeFromProtobuf(int a1)
{
  if ((a1 - 2) > 2) {
    return 0;
  }
  else {
    return dword_195224550[a1 - 2];
  }
}

id MRCreateAllowedNowPlayingInfo(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    uint64_t v3 = _MRNowPlayingInfoDictionaryKeyToProtobufKeyMapping();
    v6[[NSString stringWithFormat:@"com.apple.%@", 0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    void v6[2] = __MRCreateAllowedNowPlayingInfo_block_invoke;
    v6[3] = &unk_1E57D6B48;
    id v7 = v1;
    id v4 = v2;
    id v8 = v4;
    [v3 enumerateKeysAndObjectsUsingBlock:v6];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

void __MRCreateAllowedNowPlayingInfo_block_invoke(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v3 = objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:");
  if (v3) {
    [*(id *)(a1 + 40) setObject:v3 forKeyedSubscript:v4];
  }
}

uint64_t _MRGroupTopologyModificationRequestProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          long long v17 = objc_alloc_init(_MRRequestDetailsProtobuf);
          objc_storeStrong((id *)(a1 + 8), v17);
          if PBReaderPlaceMark() && (_MRRequestDetailsProtobufReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();
            goto LABEL_33;
          }

          return 0;
        case 2u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 44) |= 1u;
          while (1)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_78;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_80;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_78:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v21) = 0;
          }
LABEL_80:
          *(_DWORD *)(a1 + 32) = v21;
          continue;
        case 3u:
          PBReaderReadString();
          long long v17 = (_MRRequestDetailsProtobuf *)objc_claimAutoreleasedReturnValue();
          if (v17) {
            [(id)a1 addOutputDeviceUIDs:v17];
          }
LABEL_33:

          continue;
        case 4u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 44) |= 2u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v27 = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v27 = 0;
          }
LABEL_84:
          BOOL v63 = v27 != 0;
          uint64_t v64 = 36;
          goto LABEL_105;
        case 5u:
          uint64_t v31 = PBReaderReadString();
          unint64_t v32 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v31;

          continue;
        case 6u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          *(unsigned char *)(a1 + 44) |= 0x40u;
          while (2)
          {
            uint64_t v36 = *v3;
            unint64_t v37 = *(void *)(a2 + v36);
            if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
              *(void *)(a2 + v36) = v37 + 1;
              v35 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v14 = v34++ >= 9;
                if (v14)
                {
                  uint64_t v35 = 0;
                  goto LABEL_88;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_88:
          BOOL v63 = v35 != 0;
          uint64_t v64 = 41;
          goto LABEL_105;
        case 7u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          *(unsigned char *)(a1 + 44) |= 0x20u;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v41 = 0;
                  goto LABEL_92;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v41 = 0;
          }
LABEL_92:
          BOOL v63 = v41 != 0;
          uint64_t v64 = 40;
          goto LABEL_105;
        case 8u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          *(unsigned char *)(a1 + 44) |= 4u;
          while (2)
          {
            uint64_t v48 = *v3;
            unint64_t v49 = *(void *)(a2 + v48);
            if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
              *(void *)(a2 + v48) = v49 + 1;
              v47 |= (unint64_t)(v50 & 0x7F) << v45;
              if (v50 < 0)
              {
                v45 += 7;
                BOOL v14 = v46++ >= 9;
                if (v14)
                {
                  uint64_t v47 = 0;
                  goto LABEL_96;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_96:
          BOOL v63 = v47 != 0;
          uint64_t v64 = 37;
          goto LABEL_105;
        case 9u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          *(unsigned char *)(a1 + 44) |= 0x10u;
          while (2)
          {
            uint64_t v54 = *v3;
            unint64_t v55 = *(void *)(a2 + v54);
            if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v55 + 1;
              v53 |= (unint64_t)(v56 & 0x7F) << v51;
              if (v56 < 0)
              {
                v51 += 7;
                BOOL v14 = v52++ >= 9;
                if (v14)
                {
                  uint64_t v53 = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v53 = 0;
          }
LABEL_100:
          BOOL v63 = v53 != 0;
          uint64_t v64 = 39;
          goto LABEL_105;
        case 0xAu:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          *(unsigned char *)(a1 + 44) |= 8u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v60 = *v3;
        unint64_t v61 = *(void *)(a2 + v60);
        if (v61 == -1 || v61 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
        *(void *)(a2 + v60) = v61 + 1;
        v59 |= (unint64_t)(v62 & 0x7F) << v57;
        if ((v62 & 0x80) == 0) {
          goto LABEL_102;
        }
        v57 += 7;
        BOOL v14 = v58++ >= 9;
        if (v14)
        {
          uint64_t v59 = 0;
          goto LABEL_104;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_102:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v59 = 0;
      }
LABEL_104:
      BOOL v63 = v59 != 0;
      uint64_t v64 = 38;
LABEL_105:
      *(unsigned char *)(a1 + v64) = v63;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRVoiceInputDeviceDescriptorProtobufReadFrom(id *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2)
      {
        long long v17 = objc_alloc_init(_MRAudioFormatSettingsProtobuf);
        objc_storeStrong(a1 + 1, v17);
      }
      else
      {
        if ((v10 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
          continue;
        }
        long long v17 = objc_alloc_init(_MRAudioFormatSettingsProtobuf);
        [a1 addSupportedFormats:v17];
      }
      if (!PBReaderPlaceMark() || (_MRAudioFormatSettingsProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRSendCommandResultStatusProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_45;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_47:
        uint64_t v33 = 40;
        goto LABEL_52;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 48) |= 2u;
        while (2)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
            *(void *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_51:
        uint64_t v33 = 44;
LABEL_52:
        *(_DWORD *)(a1 + v33) = v19;
        goto LABEL_53;
      case 3u:
        unint64_t v29 = objc_alloc_init(_MRSendCommandResultHandlerDialogProtobuf);
        objc_storeStrong((id *)(a1 + 24), v29);
        if (!PBReaderPlaceMark() || !_MRSendCommandResultHandlerDialogProtobufReadFrom((char *)v29, a2)) {
          goto LABEL_55;
        }
        goto LABEL_40;
      case 4u:
        unint64_t v29 = objc_alloc_init(_MRErrorProtobuf);
        objc_storeStrong((id *)(a1 + 32), v29);
        if PBReaderPlaceMark() && (_MRErrorProtobufReadFrom((uint64_t)v29, a2))
        {
LABEL_40:
          PBReaderRecallMark();

LABEL_53:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_55:

        return 0;
      case 5u:
        uint64_t v30 = PBReaderReadData();
        uint64_t v31 = 8;
        goto LABEL_43;
      case 6u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 16;
LABEL_43:
        unint64_t v32 = *(void **)(a1 + v31);
        *(void *)(a1 + v31) = v30;

        goto LABEL_53;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_53;
    }
  }
}

id MRAVOutputContextGetUniqueIdentifier(void *a1)
{
  id v1 = (void *)MRAVOutputContextCopyUniqueIdentifier(a1);

  return v1;
}

id MRContentItemGetAppMetrics(void *a1)
{
  id v1 = (void *)MRContentItemCopyAppMetrics(a1);

  return v1;
}

id MRContentItemGetNowPlayingInfo(void *a1)
{
  id v1 = (void *)MRContentItemCopyNowPlayingInfo(a1);

  return v1;
}

id MRContentItemGetUserInfo(void *a1)
{
  id v1 = (void *)MRContentItemCopyUserInfo(a1);

  return v1;
}

id MRContentItemGetDeviceSpecificUserInfo(void *a1)
{
  id v1 = (void *)MRContentItemCopyDeviceSpecificUserInfo(a1);

  return v1;
}

id MRContentItemGetCollectionInfo(void *a1)
{
  id v1 = (void *)MRContentItemCopyCollectionInfo(a1);

  return v1;
}

id MRAVOutputDeviceSubstituteLocalDevice()
{
  id v0 = (void *)MRAVCopyOutputDevicesSubstitutingLocalDevice();

  return v0;
}

uint64_t MRLyricsEventGetStartDate(void *a1)
{
  id v1 = (void *)MEMORY[0x1E4F1C9C8];
  [a1 startTime];

  return objc_msgSend(v1, "dateWithTimeIntervalSinceReferenceDate:");
}

uint64_t MRLyricsEventGetEndDate(void *a1)
{
  if (![a1 hasEndTime]) {
    return 0;
  }
  id v2 = (void *)MEMORY[0x1E4F1C9C8];
  [a1 endTime];

  return objc_msgSend(v2, "dateWithTimeIntervalSinceReferenceDate:");
}

BOOL _MRDiscoveryUpdateOutputDevicesProtobufMessageReadFrom(id *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_MRAVOutputDeviceDescriptorProtobuf);
        [a1 addOutputDevices:v17];
        if (!PBReaderPlaceMark()
          || (_MRAVOutputDeviceDescriptorProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_30;
        }
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(_MRDiscoverySessionConfigurationProtobuf);
    objc_storeStrong(a1 + 1, v17);
    if (!PBReaderPlaceMark()
      || (_MRDiscoverySessionConfigurationProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRTranscriptAlignmentProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 44) |= 2u;
          uint64_t v18 = *v3;
          unint64_t v19 = *(void *)(a2 + v18);
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v19);
            *(void *)(a2 + v18) = v19 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v20 = 0;
          }
          uint64_t v44 = 16;
          goto LABEL_64;
        case 2u:
          *(unsigned char *)(a1 + 44) |= 1u;
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v20 = 0;
          }
          uint64_t v44 = 8;
          goto LABEL_64;
        case 3u:
          *(unsigned char *)(a1 + 44) |= 8u;
          uint64_t v24 = *v3;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v25 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v20 = 0;
          }
          uint64_t v44 = 32;
          goto LABEL_64;
        case 4u:
          *(unsigned char *)(a1 + 44) |= 4u;
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v27);
            *(void *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v20 = 0;
          }
          uint64_t v44 = 24;
LABEL_64:
          *(void *)(a1 + v44) = v20;
          continue;
        case 5u:
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 44) |= 0x10u;
          while (2)
          {
            uint64_t v31 = *v3;
            uint64_t v32 = *(void *)(a2 + v31);
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v15 = v29++ >= 9;
                if (v15)
                {
                  uint64_t v30 = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v30 = 0;
          }
LABEL_50:
          BOOL v42 = v30 != 0;
          uint64_t v43 = 40;
          goto LABEL_55;
        case 6u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          *(unsigned char *)(a1 + 44) |= 0x20u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v38 = *v3;
        uint64_t v39 = *(void *)(a2 + v38);
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)(a2 + *v4)) {
          break;
        }
        char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
        *(void *)(a2 + v38) = v40;
        v37 |= (unint64_t)(v41 & 0x7F) << v35;
        if ((v41 & 0x80) == 0) {
          goto LABEL_52;
        }
        v35 += 7;
        BOOL v15 = v36++ >= 9;
        if (v15)
        {
          uint64_t v37 = 0;
          goto LABEL_54;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_52:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v37 = 0;
      }
LABEL_54:
      BOOL v42 = v37 != 0;
      uint64_t v43 = 41;
LABEL_55:
      *(unsigned char *)(a1 + v43) = v42;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _MRSetNowPlayingClientMessageProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_MRNowPlayingClientProtobuf);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark() || (_MRNowPlayingClientProtobufReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _MRUpdateContentItemArtworkMessageProtobufReadFrom(id *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_MRContentItemProtobuf);
        [a1 addContentItems:v17];
        if (!PBReaderPlaceMark() || (_MRContentItemProtobufReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_30;
        }
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
    objc_storeStrong(a1 + 2, v17);
    if (!PBReaderPlaceMark() || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v17->super.super.isa, a2))
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void MRMediaRemotePlaybackQueueDataSourceInvalidate(uint64_t a1)
{
  id v1 = [[MRPlayerPath alloc] initWithOrigin:a1 client:0 player:0];
  MRMediaRemotePlaybackQueueDataSourceInvalidateForPlayer((uint64_t)v1);
}

void MRMediaRemotePlaybackQueueDataSourceInvalidateForPlayer(uint64_t a1)
{
  id v2 = +[MRNowPlayingOriginClientManager sharedManager];
  id v3 = [v2 playerClientForPlayerPath:a1];

  [v3 invalidatePlaybackQueue];
}

void MRMediaRemotePlaybackQueueDataSourceInvalidateWithNowPlayingContentItemForPlayer(uint64_t a1, uint64_t a2)
{
  v7[1] = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v3 = MRContentItemCopy(a1);
    id v4 = (void *)v3;
    if (v3)
    {
      v7[[NSString stringWithFormat:@"com.apple.%@", 0] = v3;
      uint64_t v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v7 count:1];
    }
    else
    {
      uint64_t v5 = (void *)MEMORY[0x1E4F1CBF0];
    }
    uint64_t v6 = [[MRPlaybackQueue alloc] initWithContentItems:v5 location:0];
  }
  else
  {
    uint64_t v6 = 0;
  }
  MRMediaRemotePlaybackQueueDataSourceInvalidateWithPlaybackQueueForPlayer((uint64_t)v6, a2);
}

BOOL _MRMusicHandoffSessionProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        unint64_t v19 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        uint64_t v20 = 24;
LABEL_24:
        objc_storeStrong((id *)(a1 + v20), v19);
        if (!PBReaderPlaceMark()
          || !_MRNowPlayingPlayerPathProtobufReadFrom((id *)&v19->super.super.isa, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        goto LABEL_27;
      }
      if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        unint64_t v19 = *(_MRNowPlayingPlayerPathProtobuf **)(a1 + 16);
        *(void *)(a1 + 16) = v18;
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v19 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
    uint64_t v20 = 8;
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_195119344(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _MRDataArtworkProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 16;
LABEL_22:
        unint64_t v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadData();
    uint64_t v18 = 8;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MRMediaRemoteApplicationIsSystemClassicalRoomApplication(uint64_t a1)
{
  if (MRMediaRemoteApplicationIsSystemClassicalRoomApplication___once != -1) {
    dispatch_once(&MRMediaRemoteApplicationIsSystemClassicalRoomApplication___once, &__block_literal_global_27_1);
  }
  id v2 = (void *)MRMediaRemoteApplicationIsSystemClassicalRoomApplication___allKnownSystemClassicalRoomApplications;

  return [v2 containsObject:a1];
}

uint64_t __MRMediaRemoteApplicationIsSystemClassicalRoomApplication_block_invoke()
{
  MRMediaRemoteApplicationIsSystemClassicalRoomApplication___allKnownSystemClassicalRoomApplications = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CAD0]), "initWithObjects:", @"com.apple.music.classical", @"(System Classical Room Application)", 0);

  return MEMORY[0x1F41817F8]();
}

uint64_t MRMediaRemoteApplicationIsSystemAppleTVApplication(uint64_t a1)
{
  if (MRMediaRemoteApplicationIsSystemAppleTVApplication___once != -1) {
    dispatch_once(&MRMediaRemoteApplicationIsSystemAppleTVApplication___once, &__block_literal_global_40);
  }
  id v2 = (void *)MRMediaRemoteApplicationIsSystemAppleTVApplication___allKnownSystemAppleTVApplications;

  return [v2 containsObject:a1];
}

uint64_t __MRMediaRemoteApplicationIsSystemAppleTVApplication_block_invoke()
{
  MRMediaRemoteApplicationIsSystemAppleTVApplication___allKnownSystemAppleTVApplications = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CAD0]), "initWithObjects:", @"com.apple.AppleTV", @"com.apple.TVWatchList", @"com.apple.TV", @"com.apple.tv", 0);

  return MEMORY[0x1F41817F8]();
}

uint64_t MRMediaRemoteApplicationIsSystemBooksApplication(uint64_t a1)
{
  if (MRMediaRemoteApplicationIsSystemBooksApplication___once != -1) {
    dispatch_once(&MRMediaRemoteApplicationIsSystemBooksApplication___once, &__block_literal_global_54);
  }
  id v2 = (void *)MRMediaRemoteApplicationIsSystemBooksApplication___allKnownSystemBooksApplications;

  return [v2 containsObject:a1];
}

uint64_t __MRMediaRemoteApplicationIsSystemBooksApplication_block_invoke()
{
  MRMediaRemoteApplicationIsSystemBooksApplication___allKnownSystemBooksApplications = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CAD0]), "initWithObjects:", @"com.apple.NanoBooks", @"com.apple.TVBooks", @"com.apple.iBooksX", @"com.apple.iBooks", @"(System Books Application)", 0);

  return MEMORY[0x1F41817F8]();
}

CFStringRef MRMediaRemoteCopyLocalDeviceSystemClassicalRoomApplicationDisplayID()
{
  return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], @"com.apple.music.classical");
}

CFStringRef MRMediaRemoteCopyLocalDeviceSystemAppleTVApplicationDisplayID()
{
  return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], @"com.apple.tv");
}

CFStringRef MRMediaRemoteCopyLocalDeviceSystemBooksApplicationDisplayID()
{
  return CFStringCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], @"com.apple.iBooks");
}

uint64_t MRMediaRemoteCopyLocalDeviceAirPlayReceiverDisplayID()
{
  return 0;
}

uint64_t MRMediaRemoteApplicationIsAirPlayReceiver(uint64_t a1)
{
  if (MRMediaRemoteApplicationIsAirPlayReceiver___once != -1) {
    dispatch_once(&MRMediaRemoteApplicationIsAirPlayReceiver___once, &__block_literal_global_73_1);
  }
  id v2 = (void *)MRMediaRemoteApplicationIsAirPlayReceiver___receivers;

  return [v2 containsObject:a1];
}

uint64_t __MRMediaRemoteApplicationIsAirPlayReceiver_block_invoke()
{
  MRMediaRemoteApplicationIsAirPlayReceiver___receivers = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CAD0]), "initWithObjects:", @"TVAirPlay", @"airtunesd", @"tvairplayd", 0);

  return MEMORY[0x1F41817F8]();
}

uint64_t MRMediaRemoteCurrentApplicationIsAirPlayReceiver()
{
  if (MRMediaRemoteCurrentApplicationIsAirPlayReceiver___once != -1) {
    dispatch_once(&MRMediaRemoteCurrentApplicationIsAirPlayReceiver___once, &__block_literal_global_84);
  }
  return MRMediaRemoteCurrentApplicationIsAirPlayReceiver_isAirPlayReceiver;
}

void __MRMediaRemoteCurrentApplicationIsAirPlayReceiver_block_invoke()
{
  id v2 = [MEMORY[0x1E4F28B50] mainBundle];
  id v0 = [v2 bundleIdentifier];
  id v1 = [v0 lastPathComponent];
  MRMediaRemoteCurrentApplicationIsAirPlayReceiver_isAirPlayReceiver = MRMediaRemoteApplicationIsAirPlayReceiver((uint64_t)v1);
}

BOOL MRMediaRemoteSystemMediaApplicationWake()
{
  id v0 = (void *)MRGetSharedService();

  return MRMediaRemoteServiceSystemMediaAppWake(v0);
}

BOOL MRMediaRemoteSystemMediaApplicationIsRunning()
{
  CFStringRef v0 = MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID();
  id v1 = (const void *)MRNowPlayingClientCreate(0, (uint64_t)v0);
  LocalOrigin = MRMediaRemoteGetLocalOrigin();
  uint64_t v3 = (void *)MRNowPlayingPlayerPathCreate((uint64_t)LocalOrigin, (uint64_t)v1, 0);
  id v4 = (void *)MRMediaRemoteNowPlayingCopyResolvedPlayerPath(v3, 0);
  CFRelease(v0);
  CFRelease(v1);
  CFRelease(v3);
  BOOL result = 0;
  if (v4)
  {
    Client = MRNowPlayingPlayerPathGetClient(v4);
    int ProcessIdentifier = MRNowPlayingClientGetProcessIdentifier(Client);
    CFRelease(v4);
    if (ProcessIdentifier > 0) {
      return 1;
    }
  }
  return result;
}

uint64_t MRMediaRemoteCopySystemMediaApplicationDefaultSetPlaybackQueueCommandOptions()
{
  void v2[2] = *MEMORY[0x1E4F143B8];
  v1[[NSString stringWithFormat:@"com.apple.%@", 0] = @"kMRMediaRemoteCommandInfoSupportedPlaybackQueueTypes";
  v1[1] = @"kMRMediaRemoteCommandInfoSupportedCustomPlaybackQueueIdentifiers";
  v2[[NSString stringWithFormat:@"com.apple.%@", 0] = &unk_1EE66F3C0;
  v2[1] = &unk_1EE66F3D8;
  [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v2 forKeys:v1 count:2];
  return objc_claimAutoreleasedReturnValue();
}

uint64_t MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands()
{
  if (MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands___once != -1) {
    dispatch_once(&MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands___once, &__block_literal_global_113);
  }
  CFStringRef v0 = (void *)MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands___supportedCommands;

  return [v0 copy];
}

void __MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands_block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:3];
  id v1 = (void *)MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands___supportedCommands;
  MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands___supportedCommands = v0;

  id v2 = (void *)MRMediaRemoteCopySystemMediaApplicationDefaultSetPlaybackQueueCommandOptions();
  uint64_t v3 = objc_alloc_init(MRCommandInfo);
  [(MRCommandInfo *)v3 setCommand:122];
  [(MRCommandInfo *)v3 setEnabled:1];
  [(MRCommandInfo *)v3 setOptions:v2];
  [(id)MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands___supportedCommands addObject:v3];

  id v4 = (void *)MRMediaRemoteCopySystemMediaApplicationDefaultSetPlaybackQueueCommandOptions();
  uint64_t v5 = (void *)[v4 mutableCopy];
  [v5 setObject:&unk_1EE66F3F0 forKeyedSubscript:@"kMRMediaRemoteCommandInfoSupportedInsertionPositions"];
  uint64_t v6 = objc_alloc_init(MRCommandInfo);
  [(MRCommandInfo *)v6 setCommand:125];
  [(MRCommandInfo *)v6 setEnabled:1];
  [(MRCommandInfo *)v6 setOptions:v5];
  [(id)MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands___supportedCommands addObject:v6];

  id v7 = objc_alloc_init(MRCommandInfo);
  [(MRCommandInfo *)v7 setCommand:0];
  [(MRCommandInfo *)v7 setEnabled:1];
  [(id)MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands___supportedCommands addObject:v7];
}

CFStringRef MRMediaRemoteCopyLocalizedDisplayID(CFStringRef result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t)result;
    if (MRMediaRemoteApplicationIsSystemMediaApplication((uint64_t)result))
    {
      return MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID();
    }
    else if (MRMediaRemoteApplicationIsSystemPodcastApplication(v1))
    {
      return MRMediaRemoteCopyLocalDeviceSystemPodcastApplicationDisplayID();
    }
    else
    {
      if (MRMediaRemoteApplicationIsSystemBooksApplication(v1))
      {
        CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        CFStringRef v3 = @"com.apple.iBooks";
      }
      else if (MRMediaRemoteApplicationIsSystemAppleTVApplication(v1))
      {
        CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        CFStringRef v3 = @"com.apple.tv";
      }
      else
      {
        int IsSystemClassicalRoomApplication = MRMediaRemoteApplicationIsSystemClassicalRoomApplication(v1);
        CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        if (IsSystemClassicalRoomApplication) {
          CFStringRef v3 = @"com.apple.music.classical";
        }
        else {
          CFStringRef v3 = (const __CFString *)v1;
        }
      }
      return CFStringCreateCopy(v2, v3);
    }
  }
  return result;
}

uint64_t _MRPlaybackSessionMigrateRequestProtobufReadFrom(uint64_t a1, uint64_t a2)
{
  CFStringRef v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 88;
        goto LABEL_81;
      case 2u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 108) |= 0x40u;
        while (2)
        {
          uint64_t v24 = *v3;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_89:
        uint64_t v67 = 76;
        goto LABEL_110;
      case 3u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 108) |= 8u;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v23 |= (unint64_t)(v33 & 0x7F) << v28;
            if (v33 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_93:
        uint64_t v67 = 36;
        goto LABEL_110;
      case 4u:
        char v34 = objc_alloc_init(_MRPlaybackSessionMigrateRequestEventProtobuf);
        [(id)a1 addEvents:v34];
        if (!PBReaderPlaceMark()
          || (_MRPlaybackSessionMigrateRequestEventProtobufReadFrom((uint64_t)v34, a2) & 1) == 0)
        {
          goto LABEL_118;
        }
        goto LABEL_85;
      case 5u:
        *(unsigned char *)(a1 + 108) |= 1u;
        uint64_t v35 = *v3;
        unint64_t v36 = *(void *)(a2 + v35);
        if (v36 <= 0xFFFFFFFFFFFFFFF7 && v36 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v37 = *(void *)(*(void *)(a2 + *v7) + v36);
          *(void *)(a2 + v35) = v36 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v37 = 0;
        }
        uint64_t v68 = 8;
        goto LABEL_115;
      case 6u:
        char v34 = objc_alloc_init(_MRContentItemProtobuf);
        objc_storeStrong((id *)(a1 + 24), v34);
        if (!PBReaderPlaceMark() || (_MRContentItemProtobufReadFrom((uint64_t)v34, a2) & 1) == 0) {
          goto LABEL_118;
        }
        goto LABEL_85;
      case 7u:
        char v34 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        uint64_t v38 = 80;
        goto LABEL_83;
      case 8u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 108) |= 0x20u;
        while (2)
        {
          uint64_t v41 = *v3;
          uint64_t v42 = *(void *)(a2 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
            *(void *)(a2 + v41) = v43;
            v23 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v15 = v40++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_97:
        uint64_t v67 = 72;
        goto LABEL_110;
      case 9u:
        *(unsigned char *)(a1 + 108) |= 2u;
        uint64_t v45 = *v3;
        unint64_t v46 = *(void *)(a2 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v37 = *(void *)(*(void *)(a2 + *v7) + v46);
          *(void *)(a2 + v45) = v46 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v37 = 0;
        }
        uint64_t v68 = 16;
LABEL_115:
        *(void *)(a1 + v68) = v37;
        goto LABEL_116;
      case 0xAu:
        char v34 = objc_alloc_init(_MRPlaybackSessionRequestProtobuf);
        objc_storeStrong((id *)(a1 + 64), v34);
        if (!PBReaderPlaceMark()
          || (_MRPlaybackSessionRequestProtobufReadFrom((uint64_t)v34, a2) & 1) == 0)
        {
          goto LABEL_118;
        }
        goto LABEL_85;
      case 0xBu:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(unsigned char *)(a1 + 108) |= 0x80u;
        while (2)
        {
          uint64_t v50 = *v3;
          uint64_t v51 = *(void *)(a2 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v15 = v48++ >= 9;
              if (v15)
              {
                uint64_t v49 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v49 = 0;
        }
LABEL_101:
        *(unsigned char *)(a1 + 104) = v49 != 0;
        goto LABEL_116;
      case 0xCu:
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 108) |= 0x10u;
        while (2)
        {
          uint64_t v56 = *v3;
          uint64_t v57 = *(void *)(a2 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v58;
            v23 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v15 = v55++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_105:
        uint64_t v67 = 56;
        goto LABEL_110;
      case 0xDu:
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 108) |= 4u;
        while (2)
        {
          uint64_t v62 = *v3;
          uint64_t v63 = *(void *)(a2 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
            *(void *)(a2 + v62) = v64;
            v23 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v15 = v61++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_109:
        uint64_t v67 = 32;
LABEL_110:
        *(_DWORD *)(a1 + v67) = v23;
        goto LABEL_116;
      case 0xEu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 48;
LABEL_81:
        uint64_t v66 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_116;
      case 0xFu:
        char v34 = objc_alloc_init(_MRNowPlayingPlayerPathProtobuf);
        uint64_t v38 = 96;
LABEL_83:
        objc_storeStrong((id *)(a1 + v38), v34);
        if (PBReaderPlaceMark()
          && _MRNowPlayingPlayerPathProtobufReadFrom((id *)&v34->super.super.isa, a2))
        {
LABEL_85:
          PBReaderRecallMark();

LABEL_116:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_118:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_116;
    }
  }
}