void sub_100174DE4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  id v18;
  __int16 v19;
  void *v20;

  v3 = a2;
  v4 = *(id *)(a1 + 32);
  objc_sync_enter(v4);
  if (v3)
  {
    v5 = _MRLogForCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(void *)(a1 + 40);
      v6 = *(void *)(a1 + 48);
      v8 = [*(id *)(a1 + 32) activeSystemEndpoint];
      v13 = 138413058;
      v14 = v7;
      v15 = 2112;
      v16 = v6;
      v17 = 2112;
      v18 = v3;
      v19 = 2112;
      v20 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[MRDRRC] Failed to connect to active system endpoint %@<%@> with error %@. Reset to %@.", (uint8_t *)&v13, 0x2Au);
    }
  }
  else
  {
    v9 = _MRLogForCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v11 = *(void *)(a1 + 40);
      v10 = *(void *)(a1 + 48);
      v12 = [*(id *)(a1 + 32) activeSystemEndpoint];
      v13 = 138412802;
      v14 = v11;
      v15 = 2112;
      v16 = v10;
      v17 = 2112;
      v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[MRDRRC] Setting active system endpoint to %@<%@> (old value: %@)", (uint8_t *)&v13, 0x20u);
    }
    [*(id *)(a1 + 32) setActiveSystemEndpoint:*(void *)(a1 + 40)];
  }
  objc_sync_exit(v4);
}

void sub_100174F90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1001751BC(id a1, MRRouteRecommendation *a2)
{
  return +[MRDIRInteractiveRouteRecommendation interactiveRecommendationWithRouteRecommendation:a2];
}

void sub_1001751CC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v7 && [v8 count])
  {
    [*(id *)(a1 + 32) signpostEndWillShowBanner:1];
    switch((unint64_t)[v7 recommendationType])
    {
      case 0uLL:
        v10 = [*(id *)(a1 + 32) mediaActivityManager];
        v11 = [v7 route];
        v67[0] = _NSConcreteStackBlock;
        v67[1] = 3221225472;
        v67[2] = sub_100175D3C;
        v67[3] = &unk_10041FCC0;
        id v12 = v7;
        uint64_t v13 = *(void *)(a1 + 32);
        id v68 = v12;
        uint64_t v69 = v13;
        id v70 = v8;
        id v71 = v9;
        id v72 = *(id *)(a1 + 40);
        char v73 = *(unsigned char *)(a1 + 48);
        [v10 postOneTapSuggestionBannerRequestForRoute:v11 devices:v70 endpoint:v71 completion:v67];

        break;
      case 1uLL:
        v45 = dispatch_group_create();
        dispatch_group_enter(v45);
        v14 = +[NSUUID UUID];
        v15 = _MRLogForCategory();
        v16 = (char *)[v14 hash];
        if ((unint64_t)(v16 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
        {
          os_signpost_id_t v17 = (os_signpost_id_t)v16;
          if (os_signpost_enabled(v15))
          {
            *(_WORD *)buf = 0;
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, OS_SIGNPOST_INTERVAL_BEGIN, v17, "ApplyRouteRecommendation", "", buf, 2u);
          }
        }

        v18 = *(void **)(a1 + 32);
        v19 = [v7 route];
        v63[0] = _NSConcreteStackBlock;
        v63[1] = 3221225472;
        v63[2] = sub_100175E88;
        v63[3] = &unk_10041FCE8;
        id v20 = v7;
        id v64 = v20;
        v21 = v45;
        v65 = v21;
        id v46 = v14;
        id v66 = v46;
        [v18 performTopologyModificationToRoute:v19 devices:v8 endpoint:v9 requestName:@"AutoRoute" completion:v63];

        *(void *)buf = 0;
        *(void *)&buf[8] = buf;
        *(void *)&buf[16] = 0x2020000000;
        v81 = 0;
        dispatch_group_enter(v21);
        v22 = [*(id *)(a1 + 32) mediaActivityManager];
        v23 = [v20 route];
        v57[0] = _NSConcreteStackBlock;
        v57[1] = 3221225472;
        v57[2] = sub_100176018;
        v57[3] = &unk_10041FD10;
        id v24 = v20;
        v62 = buf;
        uint64_t v25 = *(void *)(a1 + 32);
        id v58 = v24;
        uint64_t v59 = v25;
        id v60 = v8;
        v26 = v21;
        v61 = v26;
        [v22 postAutoRouteBannerRequestForRoute:v23 devices:v60 endpoint:v9 completion:v57];

        v27 = [*(id *)(a1 + 32) queue];
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100176184;
        block[3] = &unk_10041FD38;
        id v28 = v24;
        v55 = buf;
        uint64_t v29 = *(void *)(a1 + 32);
        v30 = *(void **)(a1 + 40);
        id v52 = v28;
        uint64_t v53 = v29;
        id v54 = v30;
        char v56 = *(unsigned char *)(a1 + 48);
        dispatch_group_notify(v26, v27, block);

        _Block_object_dispose(buf, 8);
        break;
      case 2uLL:
        v31 = +[MRDMediaBundleManager shared];
        v32 = [v31 cachedEligibilityOf:*(void *)(a1 + 40)];

        if ([v32 isEligibleForCallToAction])
        {
          id v33 = [*(id *)(a1 + 32) shouldUseVideoSymbolForDevices:v8 bundleIdentifier:*(void *)(a1 + 40)];
          v34 = _MRLogForCategory();
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
          {
            CFStringRef v35 = @"audio";
            if (v33) {
              CFStringRef v35 = @"video";
            }
            *(_DWORD *)buf = 138412546;
            *(void *)&buf[4] = v7;
            *(_WORD *)&buf[12] = 2112;
            *(void *)&buf[14] = v35;
            _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "[MRDRRC] call to action request for: %@ - %@", buf, 0x16u);
          }

          v36 = [*(id *)(a1 + 32) mediaActivityManager];
          v47[0] = _NSConcreteStackBlock;
          v47[1] = 3221225472;
          v47[2] = sub_100176304;
          v47[3] = &unk_10041FD60;
          v47[4] = *(void *)(a1 + 32);
          id v48 = v7;
          id v49 = *(id *)(a1 + 40);
          char v50 = *(unsigned char *)(a1 + 48);
          [v36 presentControlCenterCallToActionVideo:v33 completion:v47];
        }
        else
        {
          v43 = _MRLogForCategory();
          if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v44 = *(void *)(a1 + 40);
            *(_DWORD *)buf = 138412802;
            *(void *)&buf[4] = v7;
            *(_WORD *)&buf[12] = 2112;
            *(void *)&buf[14] = v44;
            *(_WORD *)&buf[22] = 2112;
            v81 = v32;
            _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "[MRDRRC] dropping call to action request for: %@ - %@ is not eligible: %@", buf, 0x20u);
          }
        }
        break;
      case 3uLL:
        v37 = _MRLogForCategory();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          *(void *)&buf[4] = v7;
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "[MRDRRC] 𝝙: %@ ", buf, 0xCu);
        }

        v38 = [*(id *)(a1 + 32) mediaActivityManager];
        v39 = [v7 route];
        v40 = [*(id *)(a1 + 32) activeSystemEndpoint];
        v74[0] = _NSConcreteStackBlock;
        v74[1] = 3221225472;
        v74[2] = sub_100175A04;
        v74[3] = &unk_10041FC98;
        id v75 = v7;
        id v41 = v8;
        uint64_t v42 = *(void *)(a1 + 32);
        id v76 = v41;
        uint64_t v77 = v42;
        id v78 = *(id *)(a1 + 40);
        char v79 = *(unsigned char *)(a1 + 48);
        [v38 postDeltaBannerRequestForRoute:v39 devices:v41 endpoint:v9 activeSystemEndpoint:v40 completion:v74];

        break;
      default:
        break;
    }
  }
  else
  {
    [*(id *)(a1 + 32) signpostEndWillShowBanner:0];
  }
}

void sub_1001759D4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_100175A04(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  v6 = _MRLogForCategory();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    uint64_t v30 = v7;
    __int16 v31 = 2048;
    v32 = a2;
    __int16 v33 = 2112;
    id v34 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[MRDRRC] recommendation𝝙: %@ got result: %lu error %@", buf, 0x20u);
  }
  v26 = a2;
  v27 = v5;

  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  v28[2] = sub_100175CCC;
  v28[3] = &unk_100417940;
  id v8 = *(void **)(a1 + 40);
  v28[4] = *(void *)(a1 + 48);
  id v9 = objc_msgSend(v8, "msv_filter:", v28);
  v10 = _MRLogForCategory();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    uint64_t v30 = v11;
    __int16 v31 = 2112;
    v32 = v9;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "[MRDRRC] recommendation𝝙: %@ d2a: %@", buf, 0x16u);
  }

  id v12 = +[NSSet setWithArray:*(void *)(a1 + 40)];
  uint64_t v13 = [*(id *)(a1 + 48) activeSystemEndpoint];
  uint64_t v14 = [v13 outputDevices];
  v15 = (void *)v14;
  if (v14) {
    v16 = (void *)v14;
  }
  else {
    v16 = &__NSArray0__struct;
  }
  os_signpost_id_t v17 = +[NSSet setWithArray:v16];

  v18 = [v12 setByAddingObjectsFromSet:v17];
  v19 = [v18 allObjects];
  id v20 = +[MRIRRoute routeWithOutputDevices:v19];

  v21 = *(void **)(a1 + 48);
  v22 = [v21 activeSystemEndpoint];
  uint64_t v23 = *(void *)(a1 + 56);
  uint64_t v24 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v25 = [*(id *)(a1 + 32) contextIdentifier];
  [v21 handleDeltaResult:v26 forRoute:v20 devicesToAdd:v9 sourceEndpoint:v22 primaryBundleIdentifier:v23 isOutsideApp:v24 contextIdentifier:v25];
}

uint64_t sub_100175CCC(uint64_t a1, void *a2)
{
  v2 = *(void **)(a1 + 32);
  id v3 = a2;
  v4 = [v2 activeSystemEndpoint];
  id v5 = [v3 uid];

  uint64_t v6 = [v4 containsOutputDeviceWithUID:v5] ^ 1;
  return v6;
}

void sub_100175D3C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = _MRLogForCategory();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    uint64_t v16 = v7;
    __int16 v17 = 2048;
    uint64_t v18 = a2;
    __int16 v19 = 2112;
    id v20 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[MRDRRC] recommendation: %@ got result: %lu error %@", buf, 0x20u);
  }

  id v8 = *(void **)(a1 + 40);
  id v9 = [*(id *)(a1 + 32) route];
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v14 = [*(id *)(a1 + 32) contextIdentifier];
  [v8 handleResult:a2 forRoute:v9 devices:v10 endpoint:v11 primaryBundleIdentifier:v12 isOutsideApp:v13 contextIdentifier:v14];
}

void sub_100175E88(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = _MRLogForCategory();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v17 = 138412546;
      uint64_t v18 = v9;
      __int16 v19 = 2112;
      id v20 = v6;
      uint64_t v10 = "[MRDRRC] auto route topology modification: error setting ASE to %@ - %@";
      uint64_t v11 = v7;
      uint32_t v12 = 22;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v17, v12);
    }
  }
  else if (v8)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    int v17 = 138412290;
    uint64_t v18 = v13;
    uint64_t v10 = "[MRDRRC] auto route topology modification: successfully set ASE to %@";
    uint64_t v11 = v7;
    uint32_t v12 = 12;
    goto LABEL_6;
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  uint64_t v14 = _MRLogForCategory();
  v15 = (char *)[*(id *)(a1 + 48) hash];
  if ((unint64_t)(v15 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v16 = (os_signpost_id_t)v15;
    if (os_signpost_enabled(v14))
    {
      LOWORD(v17) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, OS_SIGNPOST_INTERVAL_END, v16, "ApplyRouteRecommendation", "Type = AutoRoute", (uint8_t *)&v17, 2u);
    }
  }
}

void sub_100176018(uint64_t a1, unint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = _MRLogForCategory();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    if (a2 > 4) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = (uint64_t)*(&off_10041FF68 + a2);
    }
    CFStringRef v9 = @"nil";
    int v14 = 138412802;
    if (v5) {
      CFStringRef v9 = v5;
    }
    uint64_t v15 = v7;
    __int16 v16 = 2112;
    uint64_t v17 = v8;
    __int16 v18 = 2112;
    CFStringRef v19 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[MRDRRC] auto route banner: %@ got result:%@ error:%@", (uint8_t *)&v14, 0x20u);
  }

  *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = a2;
  if (a2 != 1)
  {
    uint64_t v10 = *(void *)(a1 + 48);
    uint64_t v11 = [*(id *)(a1 + 40) routedBackgroundActivityManager];
    [v11 setOptimisticDevices:v10];

    uint32_t v12 = [*(id *)(a1 + 32) route];
    uint64_t v13 = [*(id *)(a1 + 40) routedBackgroundActivityManager];
    [v13 setOptimisticRoute:v12];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_100176184(uint64_t a1)
{
  v2 = _MRLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
    if (v4 > 4) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = (uint64_t)*(&off_10041FF68 + v4);
    }
    int v14 = 138412546;
    uint64_t v15 = v3;
    __int16 v16 = 2112;
    uint64_t v17 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[MRDRRC] auto route b+tm: %@ will handle result:%@", (uint8_t *)&v14, 0x16u);
  }

  id v6 = [*(id *)(a1 + 40) routedBackgroundActivityManager];
  [v6 setOptimisticDevices:0];

  uint64_t v7 = [*(id *)(a1 + 40) routedBackgroundActivityManager];
  [v7 setOptimisticRoute:0];

  uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  CFStringRef v9 = *(void **)(a1 + 40);
  uint64_t v10 = [*(id *)(a1 + 32) route];
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v13 = [*(id *)(a1 + 32) contextIdentifier];
  [v9 handleAutoRouteResult:v8 forRoute:v10 primaryBundleIdentifier:v11 isOutsideApp:v12 contextIdentifier:v13];
}

void sub_100176304(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v7 = [*(id *)(a1 + 40) route];
    uint64_t v4 = *(unsigned __int8 *)(a1 + 56);
    uint64_t v5 = *(void *)(a1 + 48);
    id v6 = [*(id *)(a1 + 40) contextIdentifier];
    [v3 sendEventForCallToActionForRouteCandidate:v7 bundleIdentifier:v5 isOutsideApp:v4 contextIdentifier:v6];
  }
}

void sub_100176664(id a1, MRUpdateActiveSystemEndpointResponse *a2)
{
  v2 = a2;
  uint64_t v3 = _MRLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[MRDRRC] SetASEToLocal result: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1001767A0(id a1, MRUpdateActiveSystemEndpointResponse *a2)
{
  v2 = a2;
  uint64_t v3 = _MRLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    CFStringRef v9 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[MRDRRC] ASE Clear result: %@", (uint8_t *)&v8, 0xCu);
  }

  int v4 = [(MRUpdateActiveSystemEndpointResponse *)v2 error];

  if (!v4)
  {
    uint64_t v5 = +[MRAVLocalEndpoint sharedLocalEndpoint];
    id v6 = [v5 outputDevices];
    id v7 = objc_msgSend(v6, "msv_filter:", &stru_10041FE08);

    [v5 removeOutputDevices:v7 initiator:@"RRCSAPRC" withReplyQueue:0 completion:&stru_10041FE28];
  }
}

BOOL sub_1001768D0(id a1, MRAVOutputDevice *a2)
{
  return [(MRAVOutputDevice *)a2 deviceType] == 1;
}

void sub_1001768F4(id a1, NSError *a2)
{
  v2 = a2;
  uint64_t v3 = _MRLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[MRDRRC] Remove devices error: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100177030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100177070(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    uint64_t v3 = (id *)(a1 + 40);
    id v4 = a2;
    id WeakRetained = objc_loadWeakRetained(v3);
    (*(void (**)(uint64_t, id, id))(v2 + 16))(v2, WeakRetained, v4);
  }
}

uint64_t sub_1001773F4(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, *(void *)(a1 + 32), a2);
  }
  return result;
}

void sub_100177554(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = _MRLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[MRDRRC] ASE Change result: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(a1 + 40);
  if (v5)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = [v3 error];
    (*(void (**)(uint64_t, uint64_t, void *))(v5 + 16))(v5, v6, v7);
  }
}

void sub_1001787BC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = a1[4];
  int v8 = _MRLogForCategory();
  id v9 = v8;
  if (!v6)
  {
    BOOL v16 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (!v16) {
        goto LABEL_14;
      }
      uint64_t v18 = a1[5];
      uint64_t v17 = a1[6];
      CFStringRef v19 = (void *)a1[4];
      int v14 = +[NSDate date];
      [v14 timeIntervalSinceDate:a1[7]];
      int v28 = 138544130;
      uint64_t v29 = v18;
      __int16 v30 = 2114;
      uint64_t v31 = v17;
      __int16 v32 = 2114;
      id v33 = v19;
      __int16 v34 = 2048;
      uint64_t v35 = v20;
      v21 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      v22 = v9;
      uint32_t v23 = 42;
    }
    else
    {
      if (!v16) {
        goto LABEL_14;
      }
      uint64_t v24 = a1[5];
      uint64_t v25 = a1[6];
      int v14 = +[NSDate date];
      [v14 timeIntervalSinceDate:a1[7]];
      int v28 = 138543874;
      uint64_t v29 = v24;
      __int16 v30 = 2114;
      uint64_t v31 = v25;
      __int16 v32 = 2048;
      id v33 = v26;
      v21 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      v22 = v9;
      uint32_t v23 = 32;
    }
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, v21, (uint8_t *)&v28, v23);
    goto LABEL_13;
  }
  BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
  if (v7)
  {
    if (!v10) {
      goto LABEL_14;
    }
    uint64_t v12 = a1[5];
    uint64_t v11 = a1[6];
    uint64_t v13 = a1[4];
    int v14 = +[NSDate date];
    [v14 timeIntervalSinceDate:a1[7]];
    int v28 = 138544386;
    uint64_t v29 = v12;
    __int16 v30 = 2114;
    uint64_t v31 = v11;
    __int16 v32 = 2114;
    id v33 = v6;
    __int16 v34 = 2114;
    uint64_t v35 = v13;
    __int16 v36 = 2048;
    uint64_t v37 = v15;
    _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", (uint8_t *)&v28, 0x34u);
LABEL_13:

    goto LABEL_14;
  }
  if (v10) {
    sub_100331F6C((uint64_t)a1);
  }
LABEL_14:

  uint64_t v27 = a1[8];
  if (v27) {
    (*(void (**)(uint64_t, id, id))(v27 + 16))(v27, v5, v6);
  }
}

BOOL sub_100178A24(id a1, MRAVOutputDevice *a2)
{
  return [(MRAVOutputDevice *)a2 isRemoteControllable];
}

BOOL sub_100178A2C(id a1, NSString *a2)
{
  return +[MRDMediaAppInFocusMonitor isRemoteControllableApp:a2];
}

void sub_100178A3C(void *a1)
{
  uint64_t v2 = MRMediaRemoteErrorFromCommandStatuses();
  id v3 = _MRLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = a1[4];
    uint64_t v5 = a1[5];
    uint64_t v6 = a1[6];
    int v7 = 138413058;
    uint64_t v8 = v4;
    __int16 v9 = 2112;
    BOOL v10 = v2;
    __int16 v11 = 2112;
    uint64_t v12 = v5;
    __int16 v13 = 2112;
    uint64_t v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[MRDRRC] Pause for %@ completed, error: %@ request: %@ - %@", (uint8_t *)&v7, 0x2Au);
  }
}

void sub_100178F6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_100178F90(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = _MRLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
    uint64_t v6 = *(void *)(a1 + 32);
    int v30 = 138412802;
    id v31 = WeakRetained;
    __int16 v32 = 2112;
    uint64_t v33 = v6;
    __int16 v34 = 2112;
    id v35 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[MRDRRC] delta add to %@ of %@ finished: %@", (uint8_t *)&v30, 0x20u);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = _MRLogForCategory();
  __int16 v9 = v8;
  if (!v3)
  {
    BOOL v16 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (!v16) {
        goto LABEL_16;
      }
      uint64_t v18 = *(void **)(a1 + 48);
      uint64_t v17 = *(void *)(a1 + 56);
      CFStringRef v19 = *(void **)(a1 + 40);
      uint64_t v14 = +[NSDate date];
      [v14 timeIntervalSinceDate:*(void *)(a1 + 64)];
      int v30 = 138544130;
      id v31 = v18;
      __int16 v32 = 2114;
      uint64_t v33 = v17;
      __int16 v34 = 2114;
      id v35 = v19;
      __int16 v36 = 2048;
      uint64_t v37 = v20;
      v21 = "Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds";
      v22 = v9;
      uint32_t v23 = 42;
    }
    else
    {
      if (!v16) {
        goto LABEL_16;
      }
      uint64_t v24 = *(void **)(a1 + 48);
      uint64_t v25 = *(void *)(a1 + 56);
      uint64_t v14 = +[NSDate date];
      [v14 timeIntervalSinceDate:*(void *)(a1 + 64)];
      int v30 = 138543874;
      id v31 = v24;
      __int16 v32 = 2114;
      uint64_t v33 = v25;
      __int16 v34 = 2048;
      id v35 = v26;
      v21 = "Response: %{public}@<%{public}@> returned in %.4lf seconds";
      v22 = v9;
      uint32_t v23 = 32;
    }
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, v21, (uint8_t *)&v30, v23);
    goto LABEL_15;
  }
  BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
  if (v7)
  {
    if (v10)
    {
      uint64_t v12 = *(void **)(a1 + 48);
      uint64_t v11 = *(void *)(a1 + 56);
      uint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = +[NSDate date];
      [v14 timeIntervalSinceDate:*(void *)(a1 + 64)];
      int v30 = 138544386;
      id v31 = v12;
      __int16 v32 = 2114;
      uint64_t v33 = v11;
      __int16 v34 = 2114;
      id v35 = v3;
      __int16 v36 = 2114;
      uint64_t v37 = v13;
      __int16 v38 = 2048;
      uint64_t v39 = v15;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", (uint8_t *)&v30, 0x34u);
LABEL_15:
    }
  }
  else if (v10)
  {
    sub_10033201C(a1);
  }
LABEL_16:

  uint64_t v27 = _MRLogForCategory();
  int v28 = (char *)[*(id *)(a1 + 72) hash];
  if ((unint64_t)(v28 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v29 = (os_signpost_id_t)v28;
    if (os_signpost_enabled(v27))
    {
      LOWORD(v30) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v27, OS_SIGNPOST_INTERVAL_END, v29, "ApplyRouteRecommendation", "Type = DeltaBanner", (uint8_t *)&v30, 2u);
    }
  }
}

void sub_100179534(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [*(id *)(a1 + 32) routedBackgroundActivityManager];
  [v7 setOptimisticDevices:0];

  uint64_t v8 = [*(id *)(a1 + 32) routedBackgroundActivityManager];
  [v8 setOptimisticRoute:0];

  __int16 v9 = _MRLogForCategory();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 40);
    int v14 = 138412802;
    id v15 = v5;
    __int16 v16 = 2112;
    uint64_t v17 = v10;
    __int16 v18 = 2112;
    id v19 = v6;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[MRDRRC] topology modification to %@ (%@) finished: %@", (uint8_t *)&v14, 0x20u);
  }

  uint64_t v11 = _MRLogForCategory();
  uint64_t v12 = (char *)[*(id *)(a1 + 48) hash];
  if ((unint64_t)(v12 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v13 = (os_signpost_id_t)v12;
    if (os_signpost_enabled(v11))
    {
      LOWORD(v14) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, v13, "ApplyRouteRecommendation", "Type = OneTapSuggestion", (uint8_t *)&v14, 2u);
    }
  }
}

void sub_100179AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100179B0C(uint64_t a1)
{
  uint64_t v2 = +[MRDDisplayMonitor sharedMonitor];
  if ([v2 displayOn])
  {
    id v3 = +[MRDDisplayMonitor sharedMonitor];
    uint64_t v4 = [v3 presentedBundleIdentifiers];
    unsigned int v5 = [v4 containsObject:*(void *)(a1 + 32)];
  }
  else
  {
    unsigned int v5 = 0;
  }

  unsigned int v6 = [*(id *)(a1 + 40) isRoutePlaying:*(void *)(a1 + 48)];
  uint64_t v7 = _MRLogForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    if (v5) {
      CFStringRef v9 = @"is";
    }
    else {
      CFStringRef v9 = @"is not";
    }
    uint64_t v10 = [*(id *)(a1 + 48) routeIdentifier];
    uint64_t v11 = (void *)v10;
    int v15 = 138413058;
    if (v6) {
      CFStringRef v12 = @"is";
    }
    else {
      CFStringRef v12 = @"is not";
    }
    uint64_t v16 = v8;
    __int16 v17 = 2112;
    CFStringRef v18 = v9;
    __int16 v19 = 2112;
    uint64_t v20 = v10;
    __int16 v21 = 2112;
    CFStringRef v22 = v12;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[MRDRRC] Timer fired %@ %@ visible, %@ %@ playing", (uint8_t *)&v15, 0x2Au);
  }
  if (((v5 | v6) & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained stopAirPlayingAndRemoteControlling];
  }
  id v14 = objc_loadWeakRetained((id *)(a1 + 56));
  [v14 clearUnusedAutoRoute];
}

void sub_10017A0F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location, char a15)
{
}

id sub_10017A144()
{
  uint64_t v4 = 0;
  unsigned int v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_10047E528;
  uint64_t v7 = qword_10047E528;
  if (!qword_10047E528)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10017ADE8;
    v3[3] = &unk_100415FF8;
    v3[4] = &v4;
    sub_10017ADE8((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_10017A210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10017A228(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setMediaControls:0];
}

void sub_10017ADE8(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("MPMediaControlsConfiguration");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10047E528 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_10032B37C();
    sub_10017AE40();
  }
}

void sub_10017AE40()
{
  v1[0] = 0;
  if (!qword_10047E530)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_10017AF3C;
    v1[4] = &unk_1004171F0;
    v1[5] = v1;
    long long v2 = off_10041FF50;
    uint64_t v3 = 0;
    qword_10047E530 = _sl_dlopen();
  }
  v0 = (void *)v1[0];
  if (!qword_10047E530)
  {
    v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_10017AF3C()
{
  uint64_t result = _sl_dlopen();
  qword_10047E530 = result;
  return result;
}

Class sub_10017AFB0(uint64_t a1)
{
  sub_10017AE40();
  Class result = objc_getClass("MPMediaControls");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10047E538 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    unint64_t v3 = sub_10032B3A4();
    return (Class)sub_10017B008(v3);
  }
  return result;
}

id sub_10017B008(unint64_t a1)
{
  if (a1 >= 5)
  {
    id v1 = +[NSString stringWithFormat:@"InvalidState-%ld", a1];
  }
  else
  {
    id v1 = *(&off_10041FFF0 + a1);
  }

  return v1;
}

id sub_10017BDC4(id a1, MRDGroupSessionParticipant *a2)
{
  return [(MRDGroupSessionParticipant *)a2 identifier];
}

void sub_10017BDCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = _MRLogForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1003320CC(a1, (uint64_t)v3, v4);
    }
  }
}

void sub_10017C1BC(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          objc_msgSend(v7, "session:didUpdatePendingParticipants:", *(void *)(a1 + 40), *(void *)(a1 + 48), (void)v8);
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

id sub_10017C758(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_10017C79C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          objc_msgSend(v7, "session:didUpdatePendingParticipants:", *(void *)(a1 + 40), *(void *)(a1 + 48), (void)v8);
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

id sub_10017CBDC(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_10017CC20(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          objc_msgSend(v7, "session:didUpdatePendingParticipants:", *(void *)(a1 + 40), *(void *)(a1 + 48), (void)v8);
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void sub_10017CFFC(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          objc_msgSend(v7, "sessionDidRemoveAllParticipants:", *(void *)(a1 + 40), (void)v8);
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

id sub_10017D290(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_10017D754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
}

void sub_10017D780(uint64_t a1)
{
  id WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [(os_unfair_lock_s *)WeakRetained setLowPowerDeferralTimer:0];
    os_unfair_lock_lock(v2 + 3);
    [(os_unfair_lock_s *)v2 reevaluateLowPowerMode];
    os_unfair_lock_unlock(v2 + 3);
    id WeakRetained = v2;
  }
}

void sub_10017D7F0(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          objc_msgSend(v7, "session:didChangeState:", *(void *)(a1 + 40), *(void *)(a1 + 48), (void)v8);
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void sub_10017DB20(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          objc_msgSend(v7, "session:didUpdateParticipants:", *(void *)(a1 + 40), *(void *)(a1 + 48), (void)v8);
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

uint64_t sub_10017DCE4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 localParticipant];
  unsigned int v5 = [v3 isEqual:v4];

  return v5 ^ 1;
}

void sub_10017DEA4(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          objc_msgSend(v7, "session:didUpdateMembers:", *(void *)(a1 + 40), *(void *)(a1 + 48), (void)v8);
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void sub_10017E0E0(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          objc_msgSend(v7, "session:didUpdatePendingParticipants:", *(void *)(a1 + 40), *(void *)(a1 + 48), (void)v8);
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void sub_10017E554(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = *(os_unfair_lock_s **)(a1 + 32);
  id v4 = (id *)(a1 + 32);
  os_unfair_lock_lock(v5 + 3);
  if (v3)
  {
    uint64_t v6 = _MRLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100332238();
    }

    [*v4 setLowPowerError:v3];
    uint64_t v7 = [*v4 fastSyncSession];
    [v7 end];
  }
  else
  {
    [*v4 setIsLowPowerMode:0];
  }
  [*v4 setIsUpdatingLowPowerMode:0];
  [*v4 reevaluateLowPowerMode];
  os_unfair_lock_unlock((os_unfair_lock_t)*v4 + 3);
}

void sub_10017E620(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = *(os_unfair_lock_s **)(a1 + 32);
  id v4 = (id *)(a1 + 32);
  os_unfair_lock_lock(v5 + 3);
  if (v3)
  {
    uint64_t v6 = _MRLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1003322A4();
    }

    [*v4 setLowPowerError:v3];
  }
  else
  {
    [*v4 setIsLowPowerMode:1];
  }
  [*v4 setIsUpdatingLowPowerMode:0];
  [*v4 reevaluateLowPowerMode];
  os_unfair_lock_unlock((os_unfair_lock_t)*v4 + 3);
}

void sub_10017E7A0(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5) + 16))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5));
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_10017EBF8(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      long long v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        long long v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          objc_msgSend(v7, "session:didReceiveMessageData:fromParticipant:", *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), (void)v8);
        }
        long long v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

id sub_10017EF10(uint64_t a1)
{
  v6[0] = kMREventGroupSessionJoinResponseSentByHostKey;
  id v2 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [*(id *)(a1 + 32) isHosted]);
  v7[0] = v2;
  v6[1] = kMREventGroupSessionJoinResponseApprovedKey;
  id v3 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 40)];
  v7[1] = v3;
  id v4 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:2];

  return v4;
}

Class sub_10017FF8C()
{
  if (qword_10047E548 != -1) {
    dispatch_once(&qword_10047E548, &stru_100420018);
  }
  Class result = objc_getClass("AVOutputContext");
  qword_10047E540 = (uint64_t)result;
  off_100477F80 = (uint64_t (*)())sub_10017FFF0;
  return result;
}

id sub_10017FFF0()
{
  return (id)qword_10047E540;
}

void sub_10017FFFC(id a1)
{
  qword_10047E550 = (uint64_t)dlopen("/System/Library/Frameworks/AVFoundation.framework/AVFoundation", 2);
}

Class sub_100180028()
{
  if (qword_10047E548 != -1) {
    dispatch_once(&qword_10047E548, &stru_100420018);
  }
  Class result = objc_getClass("AVOutputDevice");
  qword_10047E558 = (uint64_t)result;
  off_100477F88 = (uint64_t (*)())sub_10018008C;
  return result;
}

id sub_10018008C()
{
  return (id)qword_10047E558;
}

id sub_100180158(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100180218;
  v5[3] = &unk_100418568;
  v5[4] = *(void *)(a1 + 32);
  id v3 = [v2 addObserverForName:kMRDeviceInfoDidChangeNotification object:0 queue:0 usingBlock:v5];

  return [*(id *)(a1 + 32) _reevaluateWithReason:@"Startup"];
}

void sub_100180218(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 name];
  [v2 _reevaluateWithReason:v3];
}

void sub_1001802F8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) operations];
  [v2 enumerateKeysAndObjectsUsingBlock:&stru_1004200B8];

  id v3 = [*(id *)(a1 + 32) operations];
  [v3 removeAllObjects];

  id v4 = [*(id *)(a1 + 32) relayConnectionsToSecondaries];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_1001803E0;
  v6[3] = &unk_1004200E0;
  v6[4] = *(void *)(a1 + 32);
  [v4 enumerateKeysAndObjectsUsingBlock:v6];

  uint64_t v5 = [*(id *)(a1 + 32) relayConnectionsToSecondaries];
  [v5 removeAllObjects];
}

void sub_1001803D8(id a1, NSString *a2, NSOperationQueue *a3, BOOL *a4)
{
}

void sub_1001803E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v7 = [objc_alloc((Class)NSError) initWithMRError:128];
  uint64_t v5 = [v4 connection];
  [v5 removeObserver:*(void *)(a1 + 32)];

  long long v6 = [v4 connection];

  [v6 closeWithError:v7];
}

void sub_100180578(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) operations];
  id v3 = [v2 count];

  if (v3)
  {
    id v4 = objc_alloc_init((Class)NSMutableDictionary);
    uint64_t v5 = [*(id *)(a1 + 32) operations];
    long long v11 = _NSConcreteStackBlock;
    uint64_t v12 = 3221225472;
    os_signpost_id_t v13 = sub_1001806B8;
    id v14 = &unk_100420108;
    id v15 = v4;
    id v6 = v4;
    [v5 enumerateKeysAndObjectsUsingBlock:&v11];

    [*(id *)(a1 + 40) appendFormat:@" operations=%@\n", v6, v11, v12, v13, v14];
  }
  id v7 = [*(id *)(a1 + 32) relayConnectionsToSecondaries];

  if (v7)
  {
    long long v8 = *(void **)(a1 + 40);
    long long v9 = [*(id *)(a1 + 32) relayConnectionsToSecondaries];
    long long v10 = objc_msgSend(v9, "mr_formattedDebugDescription");
    [v8 appendFormat:@" relayConnectionsToSecondaries=%@", v10];
  }
}

void sub_1001806B8(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if ([v5 operationCount]) {
    [*(id *)(a1 + 32) setObject:v5 forKeyedSubscript:v6];
  }
}

void sub_1001807FC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) relayConnectionsToSecondaries];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1001809CC;
  v11[3] = &unk_100418518;
  id v12 = *(id *)(a1 + 40);
  id v3 = objc_msgSend(v2, "msv_firstWhere:", v11);

  if (v3)
  {
    id v4 = _MRLogForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      uint64_t v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[MRDMRRelayRemoteControlService] Removing disconnected relayConnection=%@", buf, 0xCu);
    }

    id v6 = [*(id *)(a1 + 32) relayConnectionsToSecondaries];
    id v7 = [v3 first];
    [v6 removeObjectForKey:v7];

    long long v8 = [v3 second];
    long long v9 = [v8 connection];
    [v9 removeObserver:*(void *)(a1 + 32)];

    id v10 = [objc_alloc((Class)NSString) initWithFormat:@"relayConnection did close with error=%@, connection=%@", *(void *)(a1 + 48), *(void *)(a1 + 40)];
    [*(id *)(a1 + 32) _reevaluateWithReason:v10];
  }
}

BOOL sub_1001809CC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [a3 connection];
  BOOL v5 = v4 == *(void **)(a1 + 32);

  return v5;
}

void sub_100180A94(uint64_t a1)
{
  id v2 = +[MRDMediaRemoteServer server];
  id v3 = [v2 deviceInfo];

  [*(id *)(a1 + 32) _reevaluateSecondaryConnectionWithDeviceInfo:v3];
}

void sub_100180E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id a23)
{
}

id sub_100180E50(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) operations];

  if (!v2)
  {
    id v3 = objc_alloc_init((Class)NSMutableDictionary);
    [*(id *)(a1 + 32) setOperations:v3];
  }
  id v4 = [*(id *)(a1 + 32) operations];
  BOOL v5 = [v4 objectForKeyedSubscript:*(void *)(a1 + 40)];

  if ([v5 operationCount])
  {
    id v6 = [objc_alloc((Class)MRResultReason) initWithResult:0 format:@"operationInProgress"];
  }
  else
  {
    id v7 = [*(id *)(a1 + 32) relayConnectionsToSecondaries];
    long long v8 = [v7 objectForKeyedSubscript:*(void *)(a1 + 40)];

    if (v8)
    {
      id v9 = [objc_alloc((Class)MRResultReason) initWithResult:0 format:@"exisitingConnection"];
    }
    else
    {
      unsigned __int8 v10 = [*(id *)(a1 + 48) isRemoteControllable];
      id v11 = objc_alloc((Class)MRResultReason);
      if (v10)
      {
        CFStringRef v12 = @"No exisiting connection";
        uint64_t v13 = 1;
      }
      else
      {
        CFStringRef v12 = @"Not remoteControllable";
        uint64_t v13 = 0;
      }
      id v9 = [v11 initWithResult:v13 reason:v12];
    }
    id v6 = v9;
  }

  return v6;
}

void sub_100180FA8(id *a1)
{
  id v2 = [a1[4] queue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100181070;
  block[3] = &unk_100420158;
  void block[4] = a1[4];
  objc_copyWeak(&v5, a1 + 6);
  id v4 = a1[5];
  dispatch_sync(v2, block);

  objc_destroyWeak(&v5);
}

void sub_100181070(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [v2 _handleCompletedOperation:WeakRetained forOutputDeviceUID:*(void *)(a1 + 40)];
}

void sub_1001813EC(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) delegate];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) handle];
  id v4 = [v3 connection];
  [v5 mrRelayRemoteControlService:v2 didAcceptConnection:v4];
}

id sub_1001815F8(id a1, MRAVOutputDevice *a2)
{
  return [(MRAVOutputDevice *)a2 uid];
}

void sub_100181600(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (([*(id *)(a1 + 32) containsObject:v5] & 1) == 0)
  {
    if ([v6 operationCount])
    {
      id v7 = _MRLogForCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        long long v8 = [v6 operations];
        int v10 = 138412290;
        id v11 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[MRDMRRelayRemoteControlService] Removing operations: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    [v6 cancelAllOperations];
    id v9 = [*(id *)(a1 + 40) operations];
    [v9 removeObjectForKey:v5];
  }
}

void sub_100181728(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (([*(id *)(a1 + 32) containsObject:v5] & 1) == 0)
  {
    id v7 = _MRLogForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 138412290;
      id v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[MRDMRRelayRemoteControlService] Removing relayConnection: %@", (uint8_t *)&v12, 0xCu);
    }

    id v8 = [objc_alloc((Class)NSError) initWithMRError:128];
    id v9 = [v6 connection];
    [v9 removeObserver:*(void *)(a1 + 40)];

    int v10 = [v6 connection];
    [v10 closeWithError:v8];

    id v11 = [*(id *)(a1 + 40) relayConnectionsToSecondaries];
    [v11 removeObjectForKey:v5];
  }
}

void sub_100182AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100182B48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100182B58(uint64_t a1)
{
}

intptr_t sub_100182B60(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MRProtocolMessageLogger sharedLogger];
  [v4 logMessage:@"Message Received:" label:@"MRRelay" deviceInfo:a1[4] protocolMessage:v3];

  uint64_t v5 = [v3 error];

  uint64_t v6 = *(void *)(a1[6] + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  id v8 = a1[5];

  return dispatch_semaphore_signal(v8);
}

void sub_100183408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

NSArray *__cdecl sub_10018350C(id a1, MRAVOutputDevice *a2)
{
  uint64_t v2 = a2;
  if ([(MRAVOutputDevice *)v2 deviceType] == 1)
  {
    id v3 = [(MRAVOutputDevice *)v2 clusterComposition];
    id v4 = [v3 count];

    if (v4)
    {
      uint64_t v5 = [(MRAVOutputDevice *)v2 clusterCompositionOutputDevices];
    }
    else
    {
      id v8 = v2;
      uint64_t v5 = +[NSArray arrayWithObjects:&v8 count:1];
    }
    uint64_t v6 = (void *)v5;
  }
  else
  {
    uint64_t v6 = 0;
  }

  return (NSArray *)v6;
}

uint64_t sub_100183650(uint64_t a1)
{
  qword_10047E560 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

NSString *__cdecl sub_100183B80(id a1, MRAVOutputDevice *a2)
{
  return (NSString *)[(MRAVOutputDevice *)a2 name];
}

void sub_100183F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100184034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_100184320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

NSString *__cdecl sub_100184708(id a1, MRAVOutputDevice *a2)
{
  return (NSString *)[(MRAVOutputDevice *)a2 name];
}

uint64_t sub_10018522C(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsStatusItemActive:0];
  uint64_t v2 = _MRLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 138412546;
    uint64_t v7 = v3;
    __int16 v8 = 2112;
    uint64_t v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[MRDRRC].MAM Asked %@ to deactivate - %@", (uint8_t *)&v6, 0x16u);
  }

  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

uint64_t sub_100185438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = v8;
  v9[5] = a1;
  v9[6] = a2;
  swift_retain_n();
  swift_retain();
  uint64_t v10 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  *(void *)(v8 + 16) = v10;
  swift_release();
  return swift_release();
}

uint64_t sub_100185558()
{
  swift_release();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100185590()
{
  swift_beginAccess();
  if (*(void *)(v0 + 16))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  swift_beginAccess();
  *(void *)(v0 + 16) = 0;
  return swift_release();
}

uint64_t sub_100185608()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100185648(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 40);
  uint64_t v4 = (void *)(*(void *)(v1 + 32) + 16);
  swift_beginAccess();
  if (*v4)
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  swift_beginAccess();
  void *v4 = 0;
  swift_release();
  return v3(a1);
}

uint64_t sub_1001856EC(uint64_t a1, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
    case 2:
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000015;
      goto LABEL_5;
    case 3:
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000012;
      goto LABEL_5;
    case 4:
      if (a1 | a2) {
        return 0x416C65636E61632ELL;
      }
      else {
        return 0x656E6F6E2ELL;
      }
    default:
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000018;
LABEL_5:
      unint64_t v9 = v5;
      v6._countAndFlagsBits = a1;
      v6._object = (void *)a2;
      String.append(_:)(v6);
      v7._countAndFlagsBits = 41;
      v7._object = (void *)0xE100000000000000;
      String.append(_:)(v7);
      return v9;
  }
}

uint64_t sub_100185888()
{
  return sub_1001856EC(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_100185894(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001858AC(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  _StringGuts.grow(_:)(24);
  v7._countAndFlagsBits = 0x28726F727245;
  v7._object = (void *)0xE600000000000000;
  String.append(_:)(v7);
  sub_100013A80(&qword_100478740);
  _print_unlocked<A, B>(_:_:)();
  v8._countAndFlagsBits = 0x756C6F736572202CLL;
  v8._object = (void *)0xED00003A6E6F6974;
  String.append(_:)(v8);
  sub_100185894(a2, a3, a4);
  v9._countAndFlagsBits = sub_1001856EC(a2, a3, a4);
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  sub_1001859D4(a2, a3, a4);
  v10._countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return 0;
}

uint64_t sub_1001859D4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100185A00()
{
  return sub_1001858AC(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t type metadata accessor for RoutingEvent()
{
  uint64_t result = qword_10047E870;
  if (!qword_10047E870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100185A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for RoutingInteraction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for RoutingEvent();
  uint64_t v10 = a4 + *(int *)(v9 + 20);
  uint64_t v11 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  *(void *)(a4 + *(int *)(v9 + 24)) = a3;
  return result;
}

unint64_t sub_100185B34()
{
  uint64_t v0 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  unint64_t v11 = 0xD00000000000001CLL;
  unint64_t v12 = 0x80000001003B3AB0;
  v4._countAndFlagsBits = RoutingInteraction.identifier.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x6E6F69746361202CLL;
  v5._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v5);
  RoutingInteraction.action.getter();
  sub_100185F54(&qword_100477FF0, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7._countAndFlagsBits = 0x626972747461202CLL;
  v7._object = (void *)0xEF203A6E6F697475;
  String.append(_:)(v7);
  type metadata accessor for RoutingEvent();
  type metadata accessor for RoutingSessionConfiguration.Attribution();
  sub_100185F54(&qword_100477FF8, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.Attribution);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 62;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  return v11;
}

Swift::Int sub_100185D7C()
{
  return Hasher._finalize()();
}

uint64_t sub_100185E04()
{
  type metadata accessor for RoutingInteraction();
  sub_100185F54(&qword_100478000, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);

  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100185E88()
{
  return Hasher._finalize()();
}

uint64_t sub_100185F0C()
{
  return sub_100185F54(&qword_100478008, (void (*)(uint64_t))type metadata accessor for RoutingEvent);
}

uint64_t sub_100185F54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100185F9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for RoutingInteraction();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    Swift::String v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for RoutingSessionConfiguration.Attribution();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1001860B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoutingInteraction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_release();
}

uint64_t sub_100186174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RoutingInteraction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

uint64_t sub_100186244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RoutingInteraction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100186320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RoutingInteraction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1001863EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RoutingInteraction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1001864C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001864D4);
}

uint64_t sub_1001864D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RoutingInteraction();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1001865E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001865FC);
}

uint64_t sub_1001865FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for RoutingInteraction();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for RoutingSessionConfiguration.Attribution();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_10018670C()
{
  uint64_t result = type metadata accessor for RoutingInteraction();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for RoutingSessionConfiguration.Attribution();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for RoutingEvent.Error(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for RoutingEvent.Error(uint64_t a1)
{
  swift_errorRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 24);

  return sub_1001859D4(v2, v3, v4);
}

uint64_t initializeWithCopy for RoutingEvent.Error(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  swift_errorRetain();
  *(void *)a1 = v4;
  uint64_t v5 = v2[1];
  uint64_t v6 = v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  sub_100185894(v5, v6, v2);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  return a1;
}

uint64_t assignWithCopy for RoutingEvent.Error(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  swift_errorRetain();
  *(void *)a1 = v4;
  swift_errorRelease();
  uint64_t v5 = v2[1];
  uint64_t v6 = v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  sub_100185894(v5, v6, v2);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  sub_1001859D4(v7, v8, v9);
  return a1;
}

__n128 initializeWithTake for RoutingEvent.Error(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RoutingEvent.Error(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_errorRelease();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1001859D4(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingEvent.Error(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingEvent.Error(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoutingEvent.Error()
{
  return &type metadata for RoutingEvent.Error;
}

uint64_t destroy for RoutingEvent.Error.ResolutionPolicy(uint64_t a1)
{
  return sub_1001859D4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12mediaremoted12RoutingEventV5ErrorV16ResolutionPolicyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100185894(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RoutingEvent.Error.ResolutionPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100185894(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1001859D4(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for RoutingEvent.Error.ResolutionPolicy(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for RoutingEvent.Error.ResolutionPolicy(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1001859D4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingEvent.Error.ResolutionPolicy(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingEvent.Error.ResolutionPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100186BCC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_100186BE4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RoutingEvent.Error.ResolutionPolicy()
{
  return &type metadata for RoutingEvent.Error.ResolutionPolicy;
}

uint64_t sub_100186C0C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10019001C(v0, qword_10047E888);
  sub_10018A9A8(v0, (uint64_t)qword_10047E888);
  id v1 = (id)*sub_1001A6778();
  return Logger.init(_:)();
}

uint64_t sub_100186C68()
{
  id v1 = v0;
  if (v0[3])
  {
    uint64_t v2 = v0[3];
  }
  else
  {
    uint64_t v3 = *v0;
    sub_100013A80(&qword_100478228);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    uint64_t v2 = sub_100326CE4(&unk_100478238, v4);
    v1[3] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100186D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100186D5C, 0, 0);
}

uint64_t sub_100186D5C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  long long v8 = *(_OWORD *)(v0 + 24);
  id v2 = [objc_allocWithZone((Class)RPCompanionLinkClient) init];
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = sub_10018FE08(0, &qword_100478240);
  void *v4 = v0;
  v4[1] = sub_100186EA8;
  uint64_t v6 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0x706172576B6E696CLL, 0xEB00000000726570, sub_10018F358, v3, v5);
}

uint64_t sub_100186EA8()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_100187028;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_100186FC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100186FC4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100187028()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100187094(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t a1), uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a3;
  uint64_t v9 = sub_100013A80(&qword_100478248);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v13, v12, v9);
  *(void *)(v15 + v14) = a2;
  *(void *)(v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8)) = a5;
  uint64_t v25 = sub_10018F414;
  uint64_t v26 = v15;
  aBlock = _NSConcreteStackBlock;
  uint64_t v22 = 1107296256;
  uint32_t v23 = sub_1001872F8;
  uint64_t v24 = &unk_100420740;
  uint64_t v16 = _Block_copy(&aBlock);
  id v17 = a2;
  swift_release();
  [v17 activateWithCompletion:v16];
  _Block_release(v16);
  uint64_t v25 = v20;
  uint64_t v26 = a4;
  aBlock = _NSConcreteStackBlock;
  uint64_t v22 = 1107296256;
  uint32_t v23 = sub_100006760;
  uint64_t v24 = &unk_100420768;
  CFStringRef v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v17 setInvalidationHandler:v18];
  _Block_release(v18);
}

void sub_1001872F8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_100187364(void *a1, id a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047E880 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10018A9A8(v7, (uint64_t)qword_10047E888);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  id v12 = a1;
  swift_unknownObjectRetain_n();
  id v13 = v12;
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  int v16 = v15;
  BOOL v17 = os_log_type_enabled(v14, v15);
  uint64_t v54 = v6;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    v51 = v3;
    uint64_t v19 = v18;
    id v52 = (void *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    v56[0] = v49;
    *(_DWORD *)uint64_t v19 = 136315906;
    uint64_t v50 = v11;
    uint64_t v20 = _typeName(_:qualified:)();
    id v53 = a2;
    uint64_t v55 = sub_10018A9E0(v20, v21, v56);
    int v48 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v47 = v14;
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v55 = sub_10018A9E0(0x663A5F28646E6573, 0xEC000000293A726FLL, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 22) = 2112;
    uint64_t v55 = (uint64_t)v13;
    id v22 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v52 = v13;

    *(_WORD *)(v19 + 32) = 2080;
    id v23 = [v53 identifier];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    a2 = v53;
    uint64_t v55 = sub_10018A9E0(v24, v26, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    os_log_t v27 = v47;
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v48, "[%s] %s %@ session=%s", (uint8_t *)v19, 0x2Au);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v51;
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_10018DD50(v13, a2, 0);
  uint64_t v29 = v28;
  __chkstk_darwin(v28);
  *(&v46 - 2) = (uint64_t)v3;
  *(&v46 - 1) = (uint64_t)v13;
  sub_100289944((void (*)(void))sub_10018E0DC);
  if (LOBYTE(v56[0]) == 1)
  {
    uint64_t v30 = swift_allocObject();
    *(unsigned char *)(v30 + 16) = 0;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = &_swiftEmptySetSingleton;
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = v32;
    v33[3] = v30;
    v33[4] = v13;
    v33[5] = v31;
    uint64_t v34 = v54;
    v33[6] = v29;
    v33[7] = v34;
    id v35 = (void *)swift_allocObject();
    v35[2] = v31;
    v35[3] = v13;
    v35[4] = v34;
    id v36 = v13;
    swift_retain_n();
    swift_retain_n();
    id v37 = v36;
    swift_retain();
    sub_100189038((uint64_t)sub_10018E264, (uint64_t)v33, (uint64_t)sub_10018E274, v30, (uint64_t)sub_10018E2E8, (uint64_t)v35, 30.0);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v38 = v13;
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      v56[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315394;
      uint64_t v43 = _typeName(_:qualified:)();
      uint64_t v55 = sub_10018A9E0(v43, v44, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2112;
      uint64_t v55 = (uint64_t)v38;
      id v45 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v42 = v38;

      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[%s] Attempted to send proxy join request while already in progress: %@", (uint8_t *)v41, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_100187AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v66 = a5;
    __chkstk_darwin(result);
    swift_retain();
    sub_100289944((void (*)(void))sub_10018FAE8);
    swift_release();
    swift_beginAccess();
    if (*(unsigned char *)(a3 + 16)) {
      return swift_release();
    }
    if (qword_10047E880 != -1) {
      goto LABEL_62;
    }
LABEL_4:
    uint64_t v10 = type metadata accessor for Logger();
    sub_10018A9A8(v10, (uint64_t)qword_10047E888);
    swift_bridgeObjectRetain_n();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.info.getter();
    uint64_t v69 = a1;
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      v73[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v14 = _typeName(_:qualified:)();
      sub_10018A9E0(v14, v15, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      sub_10018FE08(0, (unint64_t *)&qword_100478250);
      sub_10018F8EC(&qword_100478258, (unint64_t *)&qword_100478250);
      swift_bridgeObjectRetain();
      uint64_t v16 = Set.description.getter();
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      sub_10018A9E0(v16, v18, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%s] Rapport devices updated: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v69;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    unint64_t v68 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0) {
      uint64_t v19 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v19 = *(void *)(a1 + 16);
    }
    uint64_t v20 = _swiftEmptyArrayStorage;
    if (!v19) {
      goto LABEL_27;
    }
    v74 = _swiftEmptyArrayStorage;
    sub_10018D244(0, v19 & ~(v19 >> 63), 0);
    if (v68)
    {
      uint64_t v21 = __CocoaSet.startIndex.getter();
      char v23 = 1;
    }
    else
    {
      uint64_t v21 = sub_10018DCC8(a1);
      char v23 = v24 & 1;
    }
    uint64_t v70 = v21;
    uint64_t v71 = v22;
    char v72 = v23;
    if ((v19 & 0x8000000000000000) == 0)
    {
      do
      {
        while (1)
        {
          sub_10018DA50(v70, v71, v72, a1);
          uint64_t v31 = v30;
          id v32 = [v30 effectiveIdentifier];
          uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v35 = v34;

          id v36 = v74;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10018D244(0, v36[2] + 1, 1);
            id v36 = v74;
          }
          unint64_t v38 = v36[2];
          unint64_t v37 = v36[3];
          if (v38 >= v37 >> 1)
          {
            sub_10018D244(v37 > 1, v38 + 1, 1);
            id v36 = v74;
          }
          v36[2] = v38 + 1;
          uint64_t v39 = &v36[3 * v38];
          v39[4] = v33;
          v39[5] = v35;
          v39[6] = v31;
          if (v68) {
            break;
          }
          a1 = v69;
          int64_t v25 = sub_100013AC4(v70, v71, v72, v69);
          uint64_t v27 = v26;
          char v29 = v28;
          sub_100015510(v70, v71, v72);
          uint64_t v70 = v25;
          uint64_t v71 = v27;
          char v72 = v29 & 1;
          if (!--v19) {
            goto LABEL_26;
          }
        }
        a1 = v69;
        if ((v72 & 1) == 0) {
          goto LABEL_64;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100013A80(&qword_100478268);
        os_log_type_t v40 = (void (*)(uint64_t *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v40(v73, 0);
        --v19;
      }
      while (v19);
LABEL_26:
      sub_100015510(v70, v71, v72);
      uint64_t v20 = v74;
LABEL_27:
      if (v20[2])
      {
        sub_100013A80(&qword_1004782A8);
        uint64_t v41 = (void *)static _DictionaryStorage.allocate(capacity:)();
      }
      else
      {
        uint64_t v41 = &_swiftEmptyDictionarySingleton;
      }
      v73[0] = (uint64_t)v41;
      uint64_t v42 = (void *)swift_bridgeObjectRetain();
      sub_10018BA1C(v42, 1, v73);
      swift_bridgeObjectRelease();
      uint64_t v43 = v73[0];
      uint64_t v44 = swift_retain();
      uint64_t v45 = sub_10018871C(v44);
      swift_beginAccess();
      if (*(void *)(*(void *)(v66 + 16) + 16) <= *(void *)(v45 + 16) >> 3)
      {
        uint64_t v48 = swift_bridgeObjectRetain();
        sub_10018BDAC(v48);
        swift_bridgeObjectRelease();
        os_log_t v47 = (unint64_t *)v45;
      }
      else
      {
        uint64_t v46 = swift_bridgeObjectRetain();
        os_log_t v47 = sub_10018BF54(v46, v45);
        swift_bridgeObjectRelease();
      }
      uint64_t v49 = v47 + 7;
      uint64_t v50 = 1 << *((unsigned char *)v47 + 32);
      uint64_t v51 = -1;
      if (v50 < 64) {
        uint64_t v51 = ~(-1 << v50);
      }
      a1 = v51 & v47[7];
      int64_t v52 = (unint64_t)(v50 + 63) >> 6;
      swift_bridgeObjectRetain();
      int64_t v53 = 0;
      while (1)
      {
        while (a1)
        {
          unint64_t v54 = __clz(__rbit64(a1));
          a1 &= a1 - 1;
          unint64_t v55 = v54 | (v53 << 6);
          if (*(void *)(v43 + 16)) {
            goto LABEL_51;
          }
        }
        if (__OFADD__(v53++, 1))
        {
          __break(1u);
          goto LABEL_61;
        }
        if (v53 >= v52) {
          goto LABEL_57;
        }
        unint64_t v57 = v49[v53];
        if (!v57)
        {
          int64_t v58 = v53 + 1;
          if (v53 + 1 >= v52) {
            goto LABEL_57;
          }
          unint64_t v57 = v49[v58];
          if (!v57)
          {
            int64_t v58 = v53 + 2;
            if (v53 + 2 >= v52) {
              goto LABEL_57;
            }
            unint64_t v57 = v49[v58];
            if (!v57)
            {
              int64_t v58 = v53 + 3;
              if (v53 + 3 >= v52)
              {
LABEL_57:
                swift_release();
                swift_release();
                swift_beginAccess();
                sub_1001888B4((uint64_t)v47);
                swift_endAccess();
                return swift_release();
              }
              unint64_t v57 = v49[v58];
              if (!v57)
              {
                while (1)
                {
                  int64_t v53 = v58 + 1;
                  if (__OFADD__(v58, 1)) {
                    break;
                  }
                  if (v53 >= v52) {
                    goto LABEL_57;
                  }
                  unint64_t v57 = v49[v53];
                  ++v58;
                  if (v57) {
                    goto LABEL_50;
                  }
                }
LABEL_61:
                __break(1u);
LABEL_62:
                swift_once();
                goto LABEL_4;
              }
            }
          }
          int64_t v53 = v58;
        }
LABEL_50:
        a1 = (v57 - 1) & v57;
        unint64_t v55 = __clz(__rbit64(v57)) + (v53 << 6);
        if (*(void *)(v43 + 16))
        {
LABEL_51:
          uint64_t v59 = (uint64_t *)(v47[6] + 16 * v55);
          uint64_t v61 = *v59;
          uint64_t v60 = v59[1];
          swift_bridgeObjectRetain();
          unint64_t v62 = sub_100013660(v61, v60);
          if (v63)
          {
            id v64 = *(id *)(*(void *)(v43 + 56) + 8 * v62);
            swift_bridgeObjectRelease();
            uint64_t v65 = sub_100189690(0, a6, v64);
            __chkstk_darwin(v65);
            sub_100289944((void (*)(void))sub_10018FBBC);
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
      }
    }
    __break(1u);
LABEL_64:
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_10018835C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100188494(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v27 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v2 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  if (v2)
  {
    id v32 = _swiftEmptyArrayStorage;
    sub_100014688(0, v2 & ~(v2 >> 63), 0);
    if (v27)
    {
      uint64_t result = __CocoaSet.startIndex.getter();
      char v5 = 1;
    }
    else
    {
      uint64_t result = sub_10018DCC8(v1);
      char v5 = v6 & 1;
    }
    uint64_t v29 = result;
    uint64_t v30 = v4;
    char v31 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      uint64_t v26 = v1;
      do
      {
        while (1)
        {
          int64_t v13 = v29;
          uint64_t v12 = v30;
          char v14 = v31;
          sub_10018DA50(v29, v30, v31, v1);
          uint64_t v16 = v15;
          id v17 = [v15 effectiveIdentifier];
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v20 = v19;

          uint64_t v21 = v32;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = sub_100014688(0, v21[2] + 1, 1);
            uint64_t v21 = v32;
          }
          unint64_t v23 = v21[2];
          unint64_t v22 = v21[3];
          if (v23 >= v22 >> 1)
          {
            uint64_t result = sub_100014688(v22 > 1, v23 + 1, 1);
            uint64_t v21 = v32;
          }
          v21[2] = v23 + 1;
          char v24 = &v21[2 * v23];
          v24[4] = v18;
          v24[5] = v20;
          if (v27) {
            break;
          }
          uint64_t v1 = v26;
          int64_t v7 = sub_100013AC4(v13, v12, v14, v26);
          uint64_t v9 = v8;
          char v11 = v10;
          sub_100015510(v13, v12, v14);
          uint64_t v29 = v7;
          uint64_t v30 = v9;
          char v31 = v11 & 1;
          if (!--v2) {
            goto LABEL_20;
          }
        }
        uint64_t v1 = v26;
        if ((v14 & 1) == 0) {
          goto LABEL_23;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100013A80(&qword_100478268);
        int64_t v25 = (void (*)(char *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v25(v28, 0);
        --v2;
      }
      while (v2);
LABEL_20:
      sub_100015510(v29, v30, v31);
      return (uint64_t)v32;
    }
  }
  return result;
}

uint64_t sub_10018871C(uint64_t a1)
{
  uint64_t result = Set.init(minimumCapacity:)();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    char v11 = (Swift::Int *)(*(void *)(a1 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_10000DDD8(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1001888B4(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    unint64_t v10 = (Swift::Int *)(*(void *)(v1 + 48) + 16 * v9);
    Swift::Int v11 = *v10;
    Swift::Int v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_10000DDD8(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_100188A34(void *a1, id a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10047E880 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10018A9A8(v7, (uint64_t)qword_10047E888);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  id v12 = a1;
  swift_unknownObjectRetain_n();
  id v13 = v12;
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  int v16 = v15;
  BOOL v17 = os_log_type_enabled(v14, v15);
  uint64_t v44 = v6;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v41 = v3;
    uint64_t v19 = v18;
    uint64_t v42 = (void *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v46 = v40;
    *(_DWORD *)uint64_t v19 = 136315906;
    os_log_t v39 = v14;
    uint64_t v20 = _typeName(_:qualified:)();
    uint64_t v45 = sub_10018A9E0(v20, v21, &v46);
    int v38 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v43 = a2;
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v45 = sub_10018A9E0(0x5F286C65636E6163, 0xEE00293A726F663ALL, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 22) = 2112;
    uint64_t v45 = (uint64_t)v13;
    id v22 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v42 = v13;

    *(_WORD *)(v19 + 32) = 2080;
    id v23 = [v43 identifier];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    uint64_t v45 = sub_10018A9E0(v24, v26, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a2 = v43;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    os_log_t v27 = v39;
    _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v38, "[%s] %s %@ session=%s", (uint8_t *)v19, 0x2Au);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v41;
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  sub_10018DD50(v13, a2, 1);
  uint64_t v29 = v28;
  __chkstk_darwin(v28);
  *(void *)&v37[-16] = v3;
  *(void *)&v37[-8] = v13;
  sub_100013A80(&qword_1004780A0);
  sub_100289944((void (*)(void))sub_10018E790);
  swift_bridgeObjectRelease();
  uint64_t v30 = swift_allocObject();
  __chkstk_darwin(v30);
  *(void *)&v37[-16] = v3;
  *(void *)&v37[-8] = v13;
  sub_100013A80(qword_100479ED0);
  sub_100289944((void (*)(void))sub_10018E834);
  uint64_t v31 = v46;
  *(void *)(v30 + 16) = v46;
  if (*(void *)(v31 + 16))
  {
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = v32;
    v33[3] = v30;
    v33[4] = v29;
    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = v13;
    v34[3] = v30;
    v34[4] = v44;
    swift_retain_n();
    id v35 = v13;
    swift_retain();
    sub_100189038((uint64_t)sub_10018E950, (uint64_t)v33, (uint64_t)sub_10018ECEC, v30, (uint64_t)sub_10018ED6C, (uint64_t)v34, 30.0);
    swift_release();
    swift_release_n();
    swift_release();
    return swift_release();
  }
  else
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100189038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v9 = sub_100013A80(&qword_100478278);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100013A80(&qword_100478280);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100013A80(&qword_100478288);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v37 = v16;
  uint64_t v38 = v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  uint64_t v36 = v20;
  *(void *)(v20 + 16) = 0;
  id v43 = (void **)(v20 + 16);
  uint64_t v21 = *(void *)(v7 + 16);
  (*(void (**)(void))(*(void *)v21 + 184))();
  aBlock[0] = (id)MRGroupSessionSubsystemGetNotificationQueue();
  uint64_t v22 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
  sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
  sub_1000155BC(&qword_100478290, &qword_100478280);
  sub_10018F8EC((unint64_t *)&qword_100478298, (unint64_t *)&qword_100479FC0);
  Publisher.receive<A>(on:options:)();
  sub_100009A08((uint64_t)v11, &qword_100478278);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  id v23 = (void *)swift_allocObject();
  uint64_t v24 = v40;
  v23[2] = v39;
  v23[3] = v24;
  uint64_t v25 = v42;
  v23[4] = v41;
  v23[5] = v25;
  v23[6] = v36;
  v23[7] = v21;
  sub_1000155BC(&qword_1004782A0, &qword_100478288);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v26 = v37;
  uint64_t v27 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v26);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v21;
  v28[3] = v27;
  uint64_t v29 = v45;
  v28[4] = v44;
  void v28[5] = v29;
  id v30 = objc_allocWithZone((Class)MSVBlockGuard);
  aBlock[4] = sub_10018FA80;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10018A878;
  aBlock[3] = &unk_100420808;
  uint64_t v31 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  id v32 = [v30 initWithTimeout:v31 interruptionHandler:a7];
  _Block_release(v31);
  swift_release();
  uint64_t v33 = v43;
  swift_beginAccess();
  uint64_t v34 = *v33;
  *uint64_t v33 = v32;

  (*(void (**)(void))(*(void *)v21 + 208))();
  swift_release();
  return swift_release();
}

unint64_t sub_100189560(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100013A80(&qword_100479F70);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10018FEF4(v6, (uint64_t)v15);
    unint64_t result = sub_10018C3C4((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_10018FF5C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100189690(char a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v8 - 8);
  long long v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047E880 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10018A9A8(v11, (uint64_t)qword_10047E888);
  id v12 = a3;
  swift_bridgeObjectRetain_n();
  id v13 = v12;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = v10;
    uint64_t v18 = v17;
    uint64_t v19 = (void *)swift_slowAlloc();
    v31[1] = v19;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v37 = v33;
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v35 = v4;
    uint64_t v20 = _typeName(_:qualified:)();
    uint64_t v36 = sub_10018A9E0(v20, v21, &v37);
    int v32 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2112;
    uint64_t v36 = (uint64_t)v13;
    id v22 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v19 = v13;

    *(_WORD *)(v18 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v23 = Dictionary.description.getter();
    LOBYTE(v19) = a1;
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_10018A9E0(v23, v25, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = (char)v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v32, "[%s] Sending Rapport message to: %@\n%s", (uint8_t *)v18, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v35;
    swift_arrayDestroy();
    swift_slowDealloc();
    long long v10 = v34;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  char v26 = a1 & 1;
  uint64_t v27 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 1, 1, v27);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 0;
  *(void *)(v28 + 24) = 0;
  *(void *)(v28 + 32) = v4;
  *(unsigned char *)(v28 + 40) = v26;
  *(void *)(v28 + 48) = a2;
  *(void *)(v28 + 56) = v13;
  id v29 = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10018A588((uint64_t)v10, (uint64_t)&unk_100478218, v28);
  return swift_release();
}

uint64_t sub_100189A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 168) = a6;
  *(void *)(v7 + 176) = a7;
  *(unsigned char *)(v7 + 240) = a5;
  *(void *)(v7 + 160) = a4;
  return _swift_task_switch(sub_100189AB0, 0, 0);
}

uint64_t sub_100189AB0()
{
  uint64_t v1 = sub_100186C68();
  *(void *)(v0 + 184) = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 192) + **(int **)(*(void *)v1 + 192));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v2;
  void *v2 = v0;
  v2[1] = sub_100189BC4;
  return v4(v0 + 120);
}

uint64_t sub_100189BC4()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100189CDC, 0, 0);
}

uint64_t sub_100189CDC()
{
  uint64_t v1 = *(void **)(v0 + 120);
  *(void *)(v0 + 200) = v1;
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 176);
    sub_10023A540(*(unsigned char *)(v0 + 240) & 1);
    NSString v3 = String._bridgeToObjectiveC()();
    *(void *)(v0 + 208) = v3;
    swift_bridgeObjectRelease();
    v4.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(NSDictionary *)(v0 + 216) = v4;
    NSString v5 = [v2 effectiveIdentifier];
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    *(void *)(v0 + 224) = v5;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100189F70;
    uint64_t v6 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_10018A4F0;
    *(void *)(v0 + 104) = &unk_1004206D8;
    *(void *)(v0 + 112) = v6;
    [v1 sendEventID:v3 event:v4.super.isa destinationID:v5 options:0 completion:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
  else
  {
    if (qword_10047E880 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10018A9A8(v7, (uint64_t)qword_10047E888);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      long long v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unable to activate Rapport link", v10, 2u);
      swift_slowDealloc();
    }

    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_100189F70()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 232) = v1;
  if (v1) {
    uint64_t v2 = sub_10018A0F8;
  }
  else {
    uint64_t v2 = sub_10018A080;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10018A080()
{
  uint64_t v1 = *(void **)(v0 + 216);
  NSString v3 = *(void **)(v0 + 200);
  uint64_t v2 = *(void **)(v0 + 208);

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10018A0F8()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void **)(v0 + 224);
  NSString v3 = *(void **)(v0 + 208);
  uint64_t v2 = *(void **)(v0 + 216);
  swift_willThrow();

  if (qword_10047E880 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(v0 + 176);
  uint64_t v5 = type metadata accessor for Logger();
  sub_10018A9A8(v5, (uint64_t)qword_10047E888);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  id v6 = v4;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  id v7 = v6;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = *(void **)(v0 + 176);
  if (v10)
  {
    uint64_t v28 = *(void **)(v0 + 200);
    char v25 = *(unsigned char *)(v0 + 240) & 1;
    os_log_type_t type = v9;
    uint64_t v12 = swift_slowAlloc();
    char v26 = (void *)swift_slowAlloc();
    v29[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315906;
    swift_bridgeObjectRetain();
    uint64_t v13 = Dictionary.description.getter();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 128) = sub_10018A9E0(v13, v15, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    unint64_t v16 = sub_10023A540(v25);
    *(void *)(v0 + 136) = sub_10018A9E0(v16, v17, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2080;
    id v18 = [v11 effectiveIdentifier];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    *(void *)(v0 + 144) = sub_10018A9E0(v19, v21, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 32) = 2112;
    swift_errorRetain();
    uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 152) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v26 = v22;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, type, "Failed to send message: %s, for event: %s to: %s\n%@", (uint8_t *)v12, 0x2Au);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_bridgeObjectRelease_n();

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_10018A4F0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_100013A80(&qword_100478740);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return _swift_continuation_throwingResume(v7);
  }
}

uint64_t sub_10018A588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100009A08(a1, &qword_100478720);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10018A734()
{
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_10018A784()
{
  sub_10018A734();

  return swift_deallocClassInstance();
}

uint64_t sub_10018A7B8()
{
  uint64_t v0 = swift_allocObject();
  sub_10018A7F0();
  return v0;
}

void *sub_10018A7F0()
{
  type metadata accessor for GroupSessionRapportUserDiscovery();
  v0[2] = sub_1001F0C28();
  v0[3] = 0;
  uint64_t v1 = sub_1002FB72C();
  uint64_t v2 = (void *)*v1;
  v0[4] = *v1;
  v0[5] = 0;
  sub_100013A80(&qword_100478098);
  id v3 = v2;
  v0[6] = sub_1001A5408(10);
  v0[7] = &_swiftEmptySetSingleton;
  type metadata accessor for Lock();
  v0[8] = sub_1002898BC();
  return v0;
}

uint64_t sub_10018A878(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_10018A8CC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_10001457C;
  return v6(a1);
}

uint64_t sub_10018A9A8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10018A9E0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10018AAB4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10018FDAC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10018FDAC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10018FD5C((uint64_t)v12);
  return v7;
}

uint64_t sub_10018AAB4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10018AC70(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10018AC70(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10018AD08(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10018AEE8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10018AEE8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10018AD08(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10018AE80(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10018AE80(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_100013A80(&qword_100479810);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10018AEE8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100013A80(&qword_100479810);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018B038()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013A80(&qword_100478260);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10018B318()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013A80(&qword_100478270);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

void *sub_10018B5B8()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_100478260);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10018B76C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013A80(&qword_100478260);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10018BA1C(void *a1, char a2, void *a3)
{
  if (!a1[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v44 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  unint64_t v8 = (void *)a1[6];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  id v10 = v8;
  unint64_t v12 = sub_100013660(v7, v6);
  uint64_t v13 = v9[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (v9[3] >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_10018CD80();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    uint64_t v21 = (uint64_t *)(v20[6] + 16 * v12);
    uint64_t *v21 = v7;
    v21[1] = v6;
    *(void *)(v20[7] + 8 * v12) = v10;
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    uint64_t v25 = v44 - 1;
    if (v44 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (i = (void **)(a1 + 9); ; i += 3)
    {
      uint64_t v28 = (uint64_t)*(i - 2);
      uint64_t v27 = (uint64_t)*(i - 1);
      int64_t v29 = *i;
      uint64_t v30 = (void *)*a3;
      swift_bridgeObjectRetain();
      id v10 = v29;
      unint64_t v31 = sub_100013660(v28, v27);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v23 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v23) {
        break;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_10018CF34(v35, 1);
        unint64_t v31 = sub_100013660(v28, v27);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      uint64_t v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = (uint64_t *)(v38[6] + 16 * v31);
      uint64_t *v39 = v28;
      v39[1] = v27;
      *(void *)(v38[7] + 8 * v31) = v10;
      uint64_t v40 = v38[2];
      BOOL v23 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v38[2] = v41;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_10018CF34(v15, a2 & 1);
  unint64_t v17 = sub_100013660(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_100013A80(&qword_100478740);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_26:
  _StringGuts.grow(_:)(30);
  v42._object = (void *)0x80000001003B3C80;
  v42._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v42);
  _print_unlocked<A, B>(_:_:)();
  v43._countAndFlagsBits = 39;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018BDAC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    char v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_10018C4D0(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

unint64_t *sub_10018BF54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_10018F864();
                  return (unint64_t *)v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v19 = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    BOOL v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        unint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      char v32 = sub_10018C660((unint64_t *)((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0)), v30, v2, v21, &v38);
      swift_release();
      sub_10018F864();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      char v32 = sub_10018C660((unint64_t *)v33, v30, v2, v21, &v38);
      swift_release();
      sub_10018F864();
      swift_slowDealloc();
    }
    return v32;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

unint64_t sub_10018C3C4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10018C408(a1, v4);
}

unint64_t sub_10018C408(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10018FF6C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10018FFC8((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10018C4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10018B5B8();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_10018CBB8(v8);
  uint64_t *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t *sub_10018C660(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return (unint64_t *)sub_100014844(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v22 = Hasher._finalize()();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          BOOL v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_10018C958(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    int64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100013A80(&qword_100478270);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  int64_t v9 = (void *)result;
  BOOL v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_10018CBB8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          unint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *unint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

id sub_10018CD80()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_1004782A8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10018CF34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100013A80(&qword_1004782A8);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10018D244(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018D264(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10018D264(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100013A80(&qword_1004782B0);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_100013A80(&qword_1004782B8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_10018D40C(uint64_t a1, uint64_t *a2)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_10018D688(a1, a2);
  }
  __CocoaSet.makeIterator()();
  swift_beginAccess();
  if (__CocoaSet.Iterator.next()())
  {
    sub_10018FE08(0, (unint64_t *)&qword_100478250);
    do
    {
      swift_dynamicCast();
      uint64_t v3 = *a2;
      swift_bridgeObjectRetain();
      id v4 = [v18 effectiveIdentifier];
      uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v7 = v6;

      LOBYTE(v5) = sub_10018835C(v5, v7, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v5)
      {
        if (*((void *)&_swiftEmptySetSingleton + 3) <= *((void *)&_swiftEmptySetSingleton + 2)) {
          sub_10018B318();
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*((void *)&_swiftEmptySetSingleton + 5));
        uint64_t v9 = (char *)&_swiftEmptySetSingleton + 56;
        uint64_t v10 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
        unint64_t v11 = result & ~v10;
        unint64_t v12 = v11 >> 6;
        if (((-1 << v11) & ~*((void *)&_swiftEmptySetSingleton + (v11 >> 6) + 7)) != 0)
        {
          unint64_t v13 = __clz(__rbit64((-1 << v11) & ~*((void *)&_swiftEmptySetSingleton + (v11 >> 6) + 7))) | v11 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v10) >> 6;
          do
          {
            if (++v12 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v12 == v15;
            if (v12 == v15) {
              unint64_t v12 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)&v9[8 * v12];
          }
          while (v17 == -1);
          unint64_t v13 = __clz(__rbit64(~v17)) + (v12 << 6);
        }
        *(void *)&v9[(v13 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v13;
        *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v13) = v18;
        ++*((void *)&_swiftEmptySetSingleton + 2);
      }
      else
      {
      }
    }
    while (__CocoaSet.Iterator.next()());
  }
  swift_release();
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_10018D688(uint64_t isStackAllocationSafe, uint64_t *a2)
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_10018D800((unint64_t *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = sub_10018D800((unint64_t *)v9, v6, v4, a2);
    swift_release();
    swift_slowDealloc();
  }
  return v8;
}

uint64_t sub_10018D800(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = a3 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a3 + 56);
  uint64_t result = swift_beginAccess();
  uint64_t v24 = 0;
  int64_t v9 = 0;
  int64_t v26 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v26) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v26) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v26) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v19 - 1) & v19;
    unint64_t v11 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = *a4;
    id v13 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
    swift_bridgeObjectRetain();
    id v14 = [v13 effectiveIdentifier];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    LOBYTE(v15) = sub_10018835C(v15, v17, v12);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v15)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_10018C958(a1, a2, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v26) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v26) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_10018DA50(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_10018FE08(0, (unint64_t *)&qword_100478250);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_10018FE08(0, (unint64_t *)&qword_100478250);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = static NSObject.== infix(_:_:)();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  id v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_10018DCC8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_10018DD50(void *a1, id a2, char a3)
{
  id v6 = [a2 joinToken];
  id v7 = [v6 protobuf];

  if (v7 && (id v8 = [v7 data], v7, v8))
  {
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v28 = v10;
    uint64_t v29 = v9;

    id v30 = a1;
    id v11 = [a1 protobuf];
    [v11 copyWithZone:0];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10018FE08(0, (unint64_t *)&unk_1004782C0);
    swift_dynamicCast();

    [v31 setOobKeys:0];
    sub_100013A80((uint64_t *)&unk_100479B10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1003C5780;
    sub_10023AE74(0);
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    unint64_t v13 = sub_10023B004(a3 & 1);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 72) = v13;
    *(void *)(inited + 80) = v14;
    sub_10023AE74(2);
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    id v15 = [a2 identifier];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    *(void *)(inited + 168) = &type metadata for String;
    *(void *)(inited + 144) = v16;
    *(void *)(inited + 152) = v18;
    sub_10023AE74(1);
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    id v19 = [v30 identifier];
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    *(void *)(inited + 240) = &type metadata for String;
    *(void *)(inited + 216) = v20;
    *(void *)(inited + 224) = v22;
    sub_10023AE74(3);
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    id v23 = [v31 data];
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *(void *)(inited + 312) = &type metadata for Data;
      *(void *)(inited + 288) = v25;
      *(void *)(inited + 296) = v27;
      sub_10023AE74(4);
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 384) = &type metadata for Data;
      *(void *)(inited + 360) = v29;
      *(void *)(inited + 368) = v28;
      sub_10018FE44(v29, v28);
      sub_100189560(inited);

      sub_10018FE9C(v29, v28);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10018E0DC@<X0>(unsigned char *a1@<X8>)
{
  id v3 = [*(id *)(v1 + 24) identifier];
  Swift::Int v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::Int v6 = v5;

  swift_beginAccess();
  LOBYTE(v3) = sub_10000DDD8(&v8, v4, v6);
  swift_endAccess();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3 & 1;
  return result;
}

uint64_t sub_10018E18C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10018E19C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018E1D4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018E20C()
{
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10018E264(uint64_t a1)
{
  return sub_100187AC4(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10018E274()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_10018E2A8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10018E2E8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 16) + 16))
  {
    if (qword_10047E880 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10018A9A8(v3, (uint64_t)qword_10047E888);
    id v4 = v2;
    swift_retain_n();
    id v5 = v4;
    Swift::Int v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t type = v7;
      uint64_t v8 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315650;
      uint64_t v9 = _typeName(_:qualified:)();
      sub_10018A9E0(v9, v10, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      id v11 = [v5 identifier];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v14 = v13;

      v30[0] = sub_10018A9E0(v12, v14, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v8 + 22) = 2080;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v15 = Set.description.getter();
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      sub_10018A9E0(v15, v17, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v6, type, "[%s] %s - Messaged devices: %s", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_10047E880 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10018A9A8(v18, (uint64_t)qword_10047E888);
    id v19 = v2;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      v30[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v23 = _typeName(_:qualified:)();
      uint64_t v31 = sub_10018A9E0(v23, v24, v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      id v25 = [v19 identifier];
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;

      uint64_t v31 = sub_10018A9E0(v26, v28, v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%s] %s - No devices found to message within timeout", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_10018E790@<X0>(uint64_t *a1@<X8>)
{
  id v3 = [*(id *)(v1 + 24) identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  swift_beginAccess();
  *a1 = sub_10018C4D0(v4, v6);
  a1[1] = v7;
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018E834@<X0>(void *a1@<X8>)
{
  id v3 = *(void **)(v1 + 24);
  uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 48);
  swift_retain();
  id v5 = [v3 identifier];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v11[0] = v6;
  v11[1] = v8;
  (*(void (**)(void **__return_ptr, void *))(*(void *)v4 + 208))(&v12, v11);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v10 = v12;
  if (!v12) {
    unint64_t v10 = &_swiftEmptySetSingleton;
  }
  *a1 = v10;
  return result;
}

uint64_t sub_10018E908()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10018E950()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return;
  }
  uint64_t v3 = swift_bridgeObjectRetain();
  Swift::Int v4 = sub_10018D40C(v3, (uint64_t *)(v1 + 16));
  uint64_t v23 = sub_100188494(v4);
  uint64_t v24 = v1 + 16;
  if ((v4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10018FE08(0, (unint64_t *)&qword_100478250);
    sub_10018F8EC(&qword_100478258, (unint64_t *)&qword_100478250);
    Set.Iterator.init(_cocoa:)();
    Swift::Int v4 = v27;
    Swift::Int v25 = v28;
    uint64_t v5 = v29;
    uint64_t v6 = v30;
    unint64_t v7 = v31;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
    Swift::Int v25 = v4 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v4 + 56);
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if (v4 < 0) {
    goto LABEL_11;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_28;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      return;
    }
    if (v16 >= v11) {
      goto LABEL_31;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v16);
    uint64_t v14 = v6 + 1;
    if (!v17)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_31;
      }
      unint64_t v17 = *(void *)(v25 + 8 * v14);
      if (!v17)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_31;
        }
        unint64_t v17 = *(void *)(v25 + 8 * v14);
        if (!v17)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_31;
          }
          unint64_t v17 = *(void *)(v25 + 8 * v14);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v12 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
LABEL_28:
    id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    if (!v15) {
      goto LABEL_31;
    }
    while (1)
    {
      sub_100189690(1, v2, v15);

      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((v4 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_11:
      if (__CocoaSet.Iterator.next()())
      {
        sub_10018FE08(0, (unint64_t *)&qword_100478250);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v15 = v26;
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v26) {
          continue;
        }
      }
      goto LABEL_31;
    }
  }
  uint64_t v18 = v6 + 5;
  while (v11 != v18)
  {
    unint64_t v17 = *(void *)(v25 + 8 * v18++);
    if (v17)
    {
      uint64_t v14 = v18 - 1;
      goto LABEL_27;
    }
  }
LABEL_31:
  sub_10018F864();
  swift_beginAccess();
  if (*(void *)(*(void *)v24 + 16))
  {
    uint64_t v19 = *(void *)(v23 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = (uint64_t *)(v23 + 40);
      do
      {
        uint64_t v22 = *(v20 - 1);
        uint64_t v21 = *v20;
        swift_bridgeObjectRetain();
        sub_10018C4D0(v22, v21);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 += 2;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
    }
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
}

BOOL sub_10018ECEC()
{
  swift_beginAccess();
  return *(void *)(*(void *)(v0 + 16) + 16) == 0;
}

uint64_t sub_10018ED2C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10018ED6C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (qword_10047E880 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10018A9A8(v2, (uint64_t)qword_10047E888);
  id v3 = v1;
  swift_retain_n();
  id v4 = v3;
  oslog = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315650;
    uint64_t v7 = _typeName(_:qualified:)();
    sub_10018A9E0(v7, v8, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    id v9 = [v4 identifier];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    sub_10018A9E0(v10, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v6 + 22) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v13 = Set.description.getter();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_10018A9E0(v13, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "[%s] %s - Not all messaged devices found to notify of cancelled request. Missing devices: %s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t type metadata accessor for GroupSessionProxyAuthorizationSender()
{
  return self;
}

uint64_t sub_10018F080()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10018F0D0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_10000D170;
  *(_OWORD *)(v4 + 168) = v5;
  *(unsigned char *)(v4 + 240) = v3;
  *(void *)(v4 + 160) = v2;
  return _swift_task_switch(sub_100189AB0, 0, 0);
}

uint64_t sub_10018F194()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018F1CC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[1] = sub_100013F84;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10047A0A0 + dword_10047A0A0);
  return v6(a1, v4);
}

uint64_t sub_10018F284()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018F294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  id v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *id v9 = v4;
  v9[4] = a3;
  v9[5] = v8;
  v9[2] = a1;
  v9[3] = a2;
  v9[1] = sub_10000D170;
  return _swift_task_switch(sub_100186D5C, 0, 0);
}

void sub_10018F358(uint64_t a1)
{
  sub_100187094(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10018F364()
{
  uint64_t v1 = sub_100013A80(&qword_100478248);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_10018F414(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100013A80(&qword_100478248) - 8);
  uint64_t v4 = *(void **)(v1
                + ((*(void *)(v3 + 64)
                  + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                  + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v5 = &qword_10047E000;
  if (a1)
  {
    swift_errorRetain();
    if (qword_10047E880 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10018A9A8(v6, (uint64_t)qword_10047E888);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v11 = _typeName(_:qualified:)();
      sub_10018A9E0(v11, v12, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2112;
      swift_errorRetain();
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v5 = &qword_10047E000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v10 = v21;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%s] Failed to activate rapport link: %@", (uint8_t *)v9, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v22 = a1;
    sub_100013A80(&qword_100478248);
    CheckedContinuation.resume(throwing:)();
  }
  if (v5[272] != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10018A9A8(v13, (uint64_t)qword_10047E888);
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    int64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)int64_t v16 = 136315138;
    uint64_t v17 = _typeName(_:qualified:)();
    sub_10018A9E0(v17, v18, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%s] Activated rapport link", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v22 = (uint64_t)v4;
  id v19 = v4;
  sub_100013A80(&qword_100478248);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10018F864()
{
  return swift_release();
}

uint64_t sub_10018F86C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018F8A4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10018F8EC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018FE08(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10018F930()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10018F980(void *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 16))(*a1);
  uint64_t result = v2(v5);
  if (result)
  {
    swift_beginAccess();
    uint64_t result = *(void *)(v4 + 16);
    if (result)
    {
      uint64_t result = (uint64_t)[(id)result disarm];
      if (result) {
        return (*(uint64_t (**)(void))(*(void *)v3 + 216))();
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10018FA38()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10018FA80()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 32);
  (*(void (**)(void))(**(void **)(v0 + 16) + 216))();
  AnyCancellable.cancel()();
  return v1();
}

uint64_t sub_10018FAE8()
{
  uint64_t v1 = (BOOL *)v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (void *)v0[4];
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 56);
  swift_bridgeObjectRetain();
  id v5 = [v3 identifier];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  LOBYTE(v5) = sub_10018835C(v6, v8, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_beginAccess();
  BOOL *v1 = (v5 & 1) == 0;
  return result;
}

uint64_t sub_10018FBBC()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = (void *)v0[3];
  uint64_t v3 = (void *)v0[4];
  uint64_t v4 = *(void *)(v2 + 48);
  swift_retain();
  id v5 = [v1 identifier];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  Swift::Int v20 = v6;
  uint64_t v21 = v8;
  (*(void (**)(void **__return_ptr, Swift::Int *))(*(void *)v4 + 208))(&v22, &v20);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v9 = &_swiftEmptySetSingleton;
  if (v22) {
    uint64_t v9 = v22;
  }
  uint64_t v23 = v9;
  id v10 = [v3 effectiveIdentifier];
  Swift::Int v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::Int v13 = v12;

  sub_10000DDD8(&v20, v11, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v2 + 48);
  swift_retain();
  id v15 = [v1 identifier];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  uint64_t v21 = v18;
  uint64_t v22 = v23;
  Swift::Int v20 = v16;
  (*(void (**)(void **, Swift::Int *))(*(void *)v14 + 216))(&v22, &v20);
  return swift_release();
}

uint64_t sub_10018FD5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10018FDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10018FE08(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10018FE44(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_10018FE9C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_10018FEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80(&qword_10047A180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_10018FF5C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10018FF6C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10018FFC8(uint64_t a1)
{
  return a1;
}

uint64_t *sub_10019001C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100190090()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10019001C(v0, qword_10047E8A8);
  sub_10018A9A8(v0, (uint64_t)qword_10047E8A8);
  id v1 = (id)*sub_1001A6778();
  return Logger.init(_:)();
}

unint64_t sub_1001900EC(uint64_t a1)
{
  uint64_t v2 = sub_100013A80((uint64_t *)&unk_1004784A0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100013A80(&qword_100478488);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100194A58(v12, (uint64_t)v5);
    unint64_t result = sub_1001929C0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(_OWORD *)(v7[7] + 16 * v16) = *(_OWORD *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10019038C()
{
  sub_100013A80(&qword_1004782D8);
  sub_100289944((void (*)(void))sub_100190404);
  return v1;
}

uint64_t sub_100190404@<X0>(void *a1@<X8>)
{
  return sub_100194884(a1);
}

uint64_t sub_1001904AC()
{
  sub_100013A80(&qword_100478340);
  sub_100289944((void (*)(void))sub_100190524);
  return v1;
}

uint64_t sub_100190524@<X0>(void *a1@<X8>)
{
  return sub_100194858(a1);
}

id sub_10019053C()
{
  uint64_t v1 = OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession_lock;
  type metadata accessor for Lock();
  uint64_t v2 = v0;
  *(void *)&v0[v1] = sub_1002898BC();
  uint64_t v3 = OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession_callbacks;
  *(void *)&v2[v3] = sub_1001900EC((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v2[OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession__session] = 0;
  *(void *)&v2[OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession__outputDevices] = _swiftEmptyArrayStorage;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for MRDGroupSessionDiscoverySession();
  id v4 = objc_msgSendSuper2(&v10, "init");
  id v5 = self;
  id v6 = v4;
  id v7 = [v5 defaultCenter];
  [v7 addObserver:v6 selector:"handleGroupSessionServerStart:" name:@"MRDGroupSessionServerDidStartNotification" object:0];

  id v8 = [v5 defaultCenter];
  [v8 addObserver:v6 selector:"handleGroupSessionServerStop:" name:@"MRDGroupSessionServerDidStopNotification" object:0];

  sub_100191E34();
  return v6;
}

uint64_t type metadata accessor for MRDGroupSessionDiscoverySession()
{
  return self;
}

uint64_t sub_1001906D8@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  objc_super v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  UUID.init()();
  uint64_t v14 = v3;
  char v15 = v10;
  unint64_t v16 = a1;
  uint64_t v17 = a2;
  sub_100289944((void (*)(void))sub_10019229C);
  (*(void (**)(void))((swift_isaMask & *v3) + 0x88))();
  a1();
  swift_bridgeObjectRelease();
  a3[3] = v7;
  unint64_t v11 = sub_1001922CC(a3);
  return (*(uint64_t (**)(uint64_t *, unsigned char *, uint64_t))(v8 + 32))(v11, v10, v7);
}

uint64_t sub_100190860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v13 = (uint64_t *)(a1 + OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession_callbacks);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v13;
  *uint64_t v13 = 0x8000000000000000;
  sub_1001932EC((uint64_t)sub_100194A2C, v12, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
  *uint64_t v13 = v16;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_endAccess();
}

void sub_100190C70(uint64_t a1, uint64_t a2)
{
  sub_1001924DC();
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

uint64_t sub_100190CDC(uint64_t a1)
{
  uint64_t v3 = sub_100013A80(&qword_100478360);
  __chkstk_darwin(v3 - 8);
  id v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10018FDAC(a1, (uint64_t)&v15);
  int v10 = swift_dynamicCast();
  unint64_t v11 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (!v10)
  {
    v11(v5, 1, 1, v6);
    return sub_100192330((uint64_t)v5);
  }
  v11(v5, 0, 1, v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_100192330((uint64_t)v5);
  }
  uint64_t v12 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v9, v5, v6);
  __chkstk_darwin(v12);
  *(void *)&v14[-16] = v1;
  *(void *)&v14[-8] = v9;
  sub_100013A80(&qword_100478368);
  sub_100289944((void (*)(void))sub_100192390);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = v15;
  if (v15) {
    return sub_1001924CC(v15);
  }
  return result;
}

uint64_t sub_100191004()
{
  swift_getObjectType();
  _StringGuts.grow(_:)(42);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._object = (void *)0x80000001003B3EA0;
  v2._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v2);
  uint64_t v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x90))();
  if (v3)
  {
    id v4 = [v3 description];
    swift_unknownObjectRelease();
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = (void *)0xE400000000000000;
    uint64_t v5 = 1162760014;
  }
  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x4474757074756F20;
  v9._object = (void *)0xEF3A736563697665;
  String.append(_:)(v9);
  (*(void (**)(void))((swift_isaMask & *v0) + 0x88))();
  sub_1001924DC();
  v10._countAndFlagsBits = Array.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 62;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  return 60;
}

uint64_t sub_1001911EC(uint64_t a1, void *a2)
{
  return sub_100193AF4(a2, 0xD000000000000026, 0x80000001003B4140);
}

uint64_t sub_10019123C(uint64_t a1, void *a2)
{
  return sub_100193AF4(a2, 0xD000000000000024, 0x80000001003B4110);
}

void sub_10019128C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, unint64_t a6)
{
  id v10 = a3;
  swift_unknownObjectRetain();
  id v11 = a1;
  sub_100193AF4(a4, a5, a6);

  swift_unknownObjectRelease();
}

uint64_t sub_100191320(uint64_t a1, void *a2)
{
  return sub_100193D98(a2);
}

void sub_100191340(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v8 = a3;
  swift_unknownObjectRetain();
  id v9 = a1;
  a5(a4);

  swift_unknownObjectRelease();
}

uint64_t sub_1001913C4(uint64_t a1, void *a2)
{
  return sub_1001940C4(a2);
}

uint64_t sub_1001913E4(void *a1)
{
  Swift::String v2 = v1;
  swift_getObjectType();
  if (qword_10047E8A0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10018A9A8(v4, (uint64_t)qword_10047E8A8);
  swift_unknownObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315906;
    uint64_t v8 = _typeName(_:qualified:)();
    sub_10018A9E0(v8, v9, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_10018A9E0(0xD000000000000015, 0x80000001003B3EC0, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 22) = 2080;
    id v10 = [a1 identifier];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    sub_10018A9E0(v11, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%s] %s %s %ld", (uint8_t *)v7, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v14 = swift_unknownObjectRelease_n();
  }
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x118))(v14);
}

uint64_t sub_100191734(void *a1)
{
  Swift::String v2 = v1;
  swift_getObjectType();
  if (qword_10047E8A0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10018A9A8(v4, (uint64_t)qword_10047E8A8);
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t type = v6;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315906;
    uint64_t v8 = _typeName(_:qualified:)();
    sub_10018A9E0(v8, v9, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_10018A9E0(0xD000000000000015, 0x80000001003B3EE0, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 22) = 2080;
    id v10 = [a1 identifier];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    sub_10018A9E0(v11, v13, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 32) = 2080;
    swift_bridgeObjectRetain();
    sub_100013A80(&qword_10047A1C0);
    uint64_t v14 = Array.description.getter();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    sub_10018A9E0(v14, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, type, "[%s] %s %s %s", (uint8_t *)v7, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v17 = swift_unknownObjectRelease_n();
  }
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x118))(v17);
}

uint64_t sub_100191B04(void *a1)
{
  return sub_100193AF4(a1, 0xD00000000000001FLL, 0x80000001003B3F00);
}

uint64_t sub_100191B20(void *a1)
{
  return sub_100193AF4(a1, 0xD00000000000001ELL, 0x80000001003B3F20);
}

uint64_t sub_100191B3C()
{
  id v0 = [self server];
  id v1 = [v0 groupSessionServer];

  if (v1)
  {
    id v3 = [v1 sessionManager];

    if (v3)
    {
      id v4 = [v3 session];

      if (v4)
      {
        if (([v4 isHosted] & 1) != 0 || objc_msgSend(v4, "state") != (id)3)
        {
          uint64_t v2 = swift_unknownObjectRelease();
        }
        else
        {
          sub_100013A80(&qword_100478380);
          uint64_t v5 = swift_allocObject();
          *(_OWORD *)(v5 + 16) = xmmword_1003C5800;
          *(void *)(v5 + 32) = [objc_allocWithZone((Class)MRAVDistantOutputDevice) initWithGroupSession:v4];
          specialized Array._endMutation()();
          uint64_t v2 = swift_unknownObjectRelease();
        }
      }
    }
  }
  __chkstk_darwin(v2);
  sub_100289944((void (*)(void))sub_1001943F0);
  sub_100191D14();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100191D14()
{
  uint64_t v2 = 0;
  sub_100289944((void (*)(void))sub_1001948B0);
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x88))();
  __break(1u);
  return result;
}

void sub_100191E34()
{
  id v1 = v0;
  swift_getObjectType();
  id v2 = [self server];
  id v3 = [v2 groupSessionServer];

  if (v3 && (id v4 = [v3 sessionManager], v3, v4))
  {
    [v4 addObserver:v1];
    if (qword_10047E8A0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10018A9A8(v5, (uint64_t)qword_10047E8A8);
    id v6 = v4;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v10 = _typeName(_:qualified:)();
      sub_10018A9E0(v10, v11, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2112;
      id v12 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v18 = v4;

      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%s] Began observing %@", (uint8_t *)v9, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(void))((swift_isaMask & *v1) + 0x118))();
  }
  else
  {
    if (qword_10047E8A0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10018A9A8(v13, (uint64_t)qword_10047E8A8);
    oslog = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v14))
    {
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)unint64_t v15 = 136315138;
      uint64_t v16 = _typeName(_:qualified:)();
      sub_10018A9E0(v16, v17, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v14, "[%s] No session manager to call addObserver. Ignoring", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_10019229C()
{
  return sub_100190860(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t *sub_1001922CC(uint64_t *a1)
{
  id v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100192330(uint64_t a1)
{
  uint64_t v2 = sub_100013A80(&qword_100478360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 sub_100192390@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession_callbacks);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001929C0(v4);
  LOBYTE(v4) = v7;
  swift_bridgeObjectRelease();
  __n128 v13 = 0u;
  if (v4)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v5;
    uint64_t v14 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100193564();
      uint64_t v9 = v14;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    __n128 v13 = *(__n128 *)(*(void *)(v14 + 56) + 16 * v6);
    sub_100193008(v6, v14);
    *uint64_t v5 = v14;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  __n128 result = v13;
  *a1 = v13;
  return result;
}

uint64_t sub_1001924CC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1001924DC()
{
  unint64_t result = qword_100478370;
  if (!qword_100478370)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100478370);
  }
  return result;
}

id sub_1001925E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MRDGroupSessionDiscoverySession();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100192684(void *a1)
{
  uint64_t result = (uint64_t)[objc_allocWithZone((Class)_MRAVOutputDeviceDescriptorProtobuf) init];
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v4 = (void *)result;
  NSString v5 = [a1 localizedSessionName];
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v4 setName:v5];

  id v6 = [a1 joinToken];
  id v7 = [v6 equivalentMediaIdentifier];

  if (!v7) {
    id v7 = [a1 identifier];
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setUniqueIdentifier:v8];

  [v4 setIsRemoteControllable:1];
  [v4 setTransportType:6];
  NSString v9 = [a1 identifier];
  if (!v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v4 setGroupID:v9];

  [v4 setGroupContainsGroupLeader:1];
  [v4 setIsGroupable:1];
  [v4 setIsDeviceGroupable:1];
  [a1 routeType];
  uint64_t result = MROutputDeviceTypeFromGroupSessionRoute();
  if ((result & 0x80000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  [v4 setDeviceType:result];
  [a1 routeType];
  uint64_t result = MROutputDeviceSubtypeFromGroupSessionRoute();
  if ((result & 0x80000000) != 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  [v4 setDeviceSubType:result];
  [a1 routeType];
  id v10 = (id)MRGroupSessionRouteTypeToModelIdentifier();
  if (v10)
  {
    uint64_t v11 = v10;
    [v4 setModelID:v10];
  }
  id v12 = [objc_allocWithZone((Class)MRGroupSessionInfo) initWithGroupSession:a1];
  id v13 = [v12 protobuf];

  [v4 setGroupSessionInfo:v13];
  id v14 = [v1 initWithDescriptor:v4];

  swift_unknownObjectRelease();
  return (uint64_t)v14;
}

unint64_t sub_1001929C0(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_1001949B0(&qword_100478480);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();

  return sub_100192A44(a1, v2);
}

unint64_t sub_100192A44(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    id v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1001949B0((unint64_t *)&unk_100478490);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_100192BF0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  id v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100013A80(&qword_100478488);
  int v45 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    char v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    int64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    Swift::String v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      Swift::Int v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        long long v47 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v20);
      }
      else
      {
        (*v41)(v43, v26, v44);
        long long v47 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v20);
        swift_retain();
      }
      sub_1001949B0(&qword_100478480);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v46)(*(void *)(v10 + 48) + v25 * v18, v27, v28);
      *(_OWORD *)(*(void *)(v10 + 56) + 16 * v18) = v47;
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

unint64_t sub_100193008(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      char v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1001949B0(&qword_100478480);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            int64_t v23 = (_OWORD *)(v22 + 16 * a1);
            uint64_t v24 = (_OWORD *)(v22 + 16 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              _OWORD *v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1001932EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v28 = a2;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v4;
  unint64_t v15 = sub_1001929C0(a3);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = *v5;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = (uint64_t *)(v21[7] + 16 * v15);
      uint64_t result = swift_release();
      uint64_t v24 = v28;
      uint64_t *v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_100193564();
    goto LABEL_7;
  }
  sub_100192BF0(v18, a4 & 1);
  unint64_t v25 = sub_1001929C0(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v15 = v25;
  uint64_t v21 = *v5;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_1001934A4(v15, (uint64_t)v12, a1, v28, v21);
}

uint64_t sub_1001934A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v13 = (void *)(a5[7] + 16 * a1);
  *uint64_t v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

void *sub_100193564()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100013A80(&qword_100478488);
  uint64_t v6 = *v0;
  uint64_t v7 = static _DictionaryStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v24 = v1;
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v25 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 16 * v16;
    unint64_t v19 = *(void *)(v8 + 48) + v17;
    uint64_t v20 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    long long v28 = *(_OWORD *)(*(void *)(v6 + 56) + v18);
    v20(v19, v5, v2);
    *(_OWORD *)(*(void *)(v8 + 56) + v18) = v28;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10019380C(uint64_t result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    _OWORD *v11 = *(_OWORD *)(*(void *)(a4 + 56) + 16 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_100193A0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100013A80((uint64_t *)&unk_100478470);
  uint64_t v3 = swift_allocObject();
  int64_t v4 = j__malloc_size((const void *)v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * (v5 >> 4);
  uint64_t v6 = sub_10019380C((uint64_t)&v8, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_10018F864();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

uint64_t sub_100193AF4(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = v3;
  swift_getObjectType();
  if (qword_10047E8A0 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10018A9A8(v8, (uint64_t)qword_10047E8A8);
  swift_unknownObjectRetain_n();
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315650;
    uint64_t v12 = _typeName(_:qualified:)();
    sub_10018A9E0(v12, v13, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    sub_10018A9E0(a2, a3, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 22) = 2080;
    id v14 = [a1 identifier];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    sub_10018A9E0(v15, v17, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%s] %s %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v18 = swift_unknownObjectRelease_n();
  }
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v6) + 0x118))(v18);
}

uint64_t sub_100193D98(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  if (qword_10047E8A0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10018A9A8(v4, (uint64_t)qword_10047E8A8);
  swift_unknownObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    v19[0] = v17;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v8 = _typeName(_:qualified:)();
    sub_10018A9E0(v8, v9, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v18 = sub_10018A9E0(0xD000000000000025, 0x80000001003B40E0, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 22) = 2080;
    id v10 = objc_msgSend(a1, "identifier", v17, v18, v19[0]);
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    sub_10018A9E0(v11, v13, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%s] %s %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v14 = swift_unknownObjectRelease_n();
  }
  __chkstk_darwin(v14);
  sub_100289944((void (*)(void))sub_10019496C);
  id v15 = [a1 addObserver:v2];
  return (*(uint64_t (**)(id))((swift_isaMask & *v2) + 0x118))(v15);
}

uint64_t sub_1001940C4(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  if (qword_10047E8A0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10018A9A8(v4, (uint64_t)qword_10047E8A8);
  swift_unknownObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v17[0] = v15;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v8 = _typeName(_:qualified:)();
    sub_10018A9E0(v8, v9, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v16 = sub_10018A9E0(0xD000000000000026, 0x80000001003B40B0, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 22) = 2080;
    id v10 = objc_msgSend(a1, "identifier", v15, v16, v17[0]);
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    sub_10018A9E0(v11, v13, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%s] %s %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  __chkstk_darwin([a1 removeObserver:v2]);
  sub_100289944((void (*)(void))sub_100194930);
  return (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x118))();
}

uint64_t sub_1001943F0()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession__outputDevices) = **(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_100194438()
{
  swift_getObjectType();
  if (qword_10047E8A0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10018A9A8(v0, (uint64_t)qword_10047E8A8);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v4 = _typeName(_:qualified:)();
    sub_10018A9E0(v4, v5, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    sub_10018A9E0(0xD000000000000021, 0x80000001003B4080, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%s] %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100191E34();
}

uint64_t sub_10019460C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  if (qword_10047E8A0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10018A9A8(v2, (uint64_t)qword_10047E8A8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = _typeName(_:qualified:)();
    sub_10018A9E0(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_10018A9E0(0xD000000000000020, 0x80000001003B4050, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%s] %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v1) + 0x118))(v8, v9);
}

uint64_t sub_100194818()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100194850(uint64_t a1)
{
  sub_100190C70(a1, *(void *)(v1 + 16));
}

uint64_t sub_100194858@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession__session);
  return swift_unknownObjectRetain();
}

uint64_t sub_100194884@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession__outputDevices);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001948B0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_100193A0C(v2);
  swift_bridgeObjectRelease();
  void *v1 = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100194930()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession__session) = 0;
  return swift_unknownObjectRelease();
}

uint64_t sub_10019496C()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC12mediaremoted31MRDGroupSessionDiscoverySession__session) = *(void *)(v0 + 24);
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1001949B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UUID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001949F4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100194A2C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100194A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80((uint64_t *)&unk_1004784A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100194AC0()
{
  return sub_10019229C();
}

uint64_t sub_100194AD8()
{
  return sub_100194C94(30821, 0xE200000000000000);
}

uint64_t sub_100194AE4(uint64_t a1)
{
  uint64_t v2 = sub_100013A80(&qword_100479F50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100194B44()
{
  uint64_t v1 = v0;
  id v2 = [v0 userInfo];
  if (!v2)
  {
    long long v9 = 0u;
    long long v10 = 0u;
LABEL_10:
    sub_100194AE4((uint64_t)&v9);
    return [v1 duration];
  }
  uint64_t v3 = v2;
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10018C3C4((uint64_t)v8), (v6 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_10018FFC8((uint64_t)v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1)) {
    goto LABEL_10;
  }
  id result = (id)swift_dynamicCast();
  if (!result) {
    return [v1 duration];
  }
  return result;
}

uint64_t sub_100194C78()
{
  return sub_100194C94(0x624C727474416172, 0xE90000000000006CLL);
}

uint64_t sub_100194C94(uint64_t a1, uint64_t a2)
{
  id v5 = [v2 userInfo];
  if (!v5)
  {
    long long v12 = 0u;
    long long v13 = 0u;
LABEL_12:
    sub_100194AE4((uint64_t)&v12);
    return 0;
  }
  char v6 = v5;
  uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v12 = a1;
  *((void *)&v12 + 1) = a2;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_10018C3C4((uint64_t)&v11), (v9 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_10018FFC8((uint64_t)&v11);
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1)) {
    goto LABEL_12;
  }
  if (swift_dynamicCast()) {
    return v11;
  }
  else {
    return 0;
  }
}

uint64_t sub_100194DC8()
{
  uint64_t v1 = v0;
  id v2 = [v0 localizedTitle];
  if (!v2)
  {
LABEL_6:
    id v8 = [v1 collectionInfo];
    if (!v8)
    {
LABEL_21:
      long long v21 = 0u;
      long long v22 = 0u;
LABEL_22:
      sub_100194AE4((uint64_t)&v21);
      return 0;
    }
    char v9 = v8;
    uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    AnyHashable.init<A>(_:)();
    if (*(void *)(v10 + 16) && (unint64_t v11 = sub_10018C3C4((uint64_t)v20), (v12 & 1) != 0))
    {
      sub_10018FDAC(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v21);
    }
    else
    {
      long long v21 = 0u;
      long long v22 = 0u;
    }
    sub_10018FFC8((uint64_t)v20);
    swift_bridgeObjectRelease();
    if (!*((void *)&v22 + 1)) {
      goto LABEL_22;
    }
    if (swift_dynamicCast())
    {
      if (v20[0] == 0xD00000000000002ELL && v20[1] == 0x80000001003B41D0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v13)
      {
LABEL_17:
        id v14 = [v1 collectionInfo];
        if (v14)
        {
          uint64_t v15 = v14;
          uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          AnyHashable.init<A>(_:)();
          if (*(void *)(v16 + 16) && (unint64_t v17 = sub_10018C3C4((uint64_t)v20), (v18 & 1) != 0))
          {
            sub_10018FDAC(*(void *)(v16 + 56) + 32 * v17, (uint64_t)&v21);
          }
          else
          {
            long long v21 = 0u;
            long long v22 = 0u;
          }
          sub_10018FFC8((uint64_t)v20);
          swift_bridgeObjectRelease();
          if (*((void *)&v22 + 1))
          {
            if (swift_dynamicCast()) {
              return v20[0];
            }
            return 0;
          }
          goto LABEL_22;
        }
        goto LABEL_21;
      }
    }
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  return v4;
}

ValueMetadata *type metadata accessor for ContentItemUserInfoKey()
{
  return &type metadata for ContentItemUserInfoKey;
}

ValueMetadata *type metadata accessor for ContentItemCollectionInfoKey()
{
  return &type metadata for ContentItemCollectionInfoKey;
}

uint64_t sub_1001950B4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10019001C(v0, qword_10047E8C8);
  sub_10018A9A8(v0, (uint64_t)qword_10047E8C8);
  id v1 = (id)*sub_1001A6778();
  return Logger.init(_:)();
}

uint64_t type metadata accessor for NearbySessionsListenerImplementation()
{
  return self;
}

id sub_100195318()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NearbySessionsListener();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1001953C8()
{
  uint64_t v1 = OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation____lazy_storage___homeObserver;
  objc_super v2 = *(void **)(v0
                + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation____lazy_storage___homeObserver);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation____lazy_storage___homeObserver);
  }
  else
  {
    uint64_t v4 = sub_1002FB72C();
    unint64_t v5 = (void *)*v4;
    unint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = *v4;
    id v3 = v5;

    objc_super v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_100195430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v5 - 8);
  int64_t v52 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100013A80(&qword_1004787C0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100013A80(&qword_1004787C8);
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  uint64_t v51 = *(void *)(v57 + 64);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v50 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v16 = OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_delegate;
  *(void *)&v3[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_delegate] = 0;
  *(void *)&v3[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_pendingInvitationRequest] = 0;
  *(void *)&v3[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation____lazy_storage___homeObserver] = 0;
  uint64_t v17 = OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_lock;
  type metadata accessor for Lock();
  char v18 = v3;
  *(void *)&v3[v17] = sub_1002898BC();
  uint64_t v19 = OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_discoveredAdvertisements;
  sub_100013A80(&qword_1004787D0);
  *(void *)&v18[v19] = sub_1001A5408(10);
  uint64_t v20 = OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_notifiedSessions;
  sub_100013A80(&qword_1004787D8);
  *(void *)&v18[v20] = sub_1001A5408(10);
  uint64_t v21 = v55;
  *(void *)&v18[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_scanner] = v56;
  *(void *)&v18[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] = v21;
  *(void *)&v3[v16] = a3;
  swift_retain();
  uint64_t v55 = a3;
  swift_unknownObjectRetain();

  swift_unknownObjectRelease();
  long long v22 = (objc_class *)type metadata accessor for NearbySessionsListenerImplementation();
  v61.receiver = v18;
  v61.super_class = v22;
  id v47 = objc_msgSendSuper2(&v61, "init");
  dispatch thunk of NearbyInvitationScanner.$advertisements.getter();
  sub_1000155BC(&qword_1004787E0, &qword_1004787C0);
  Publisher<>.values.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v23 = type metadata accessor for TaskPriority();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v49 = v24 + 56;
  uint64_t v25 = (uint64_t)v52;
  v48(v52, 1, 1, v23);
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = v57;
  uint64_t v27 = v58;
  BOOL v29 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  uint64_t v30 = v50;
  unint64_t v54 = v15;
  v29(v50, v15, v58);
  unint64_t v31 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v32 = (v51 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = 0;
  *(void *)(v33 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v33 + v31, v30, v27);
  *(void *)(v33 + v32) = v26;
  uint64_t v34 = ObjectType;
  *(void *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  uint64_t v35 = v34;
  sub_100196EE0(v25, (uint64_t)&unk_1004787F0, v33);
  swift_release();
  v48((char *)v25, 1, 1, v23);
  uint64_t v36 = v56;
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = 0;
  v37[3] = 0;
  char v38 = v47;
  v37[4] = v47;
  v37[5] = v36;
  v37[6] = v35;
  swift_retain();
  id v39 = v38;
  sub_10018A588(v25, (uint64_t)&unk_100478800, (uint64_t)v37);
  swift_release();
  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  sub_10018A9A8(v40, (uint64_t)qword_10047E8C8);
  int64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    Swift::String v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    *(_DWORD *)Swift::String v43 = 136315138;
    uint64_t v44 = _typeName(_:qualified:)();
    uint64_t v59 = sub_10018A9E0(v44, v45, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "[%s] Initialize", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_release();
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v58);
  return v39;
}

uint64_t type metadata accessor for NearbySessionsListener()
{
  return self;
}

uint64_t sub_100195A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[36] = a5;
  v6[37] = a6;
  v6[35] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[38] = v7;
  v6[39] = *(void *)(v7 - 8);
  v6[40] = swift_task_alloc();
  uint64_t v8 = sub_100013A80(&qword_100478808);
  v6[41] = v8;
  v6[42] = *(void *)(v8 - 8);
  v6[43] = swift_task_alloc();
  return _swift_task_switch(sub_100195BAC, 0, 0);
}

uint64_t sub_100195BAC()
{
  type metadata accessor for Lock();
  v0[44] = sub_1002898BC();
  v0[33] = &_swiftEmptySetSingleton;
  sub_100013A80(&qword_1004787C8);
  AsyncPublisher.makeAsyncIterator()();
  swift_beginAccess();
  id v3 = (char *)&dword_100478810 + dword_100478810;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[45] = v1;
  void *v1 = v0;
  v1[1] = sub_100195CD0;
  return ((uint64_t (*)(void, void, void *))v3)(0, 0, v0 + 32);
}

uint64_t sub_100195CD0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 368) = a1;
  *(void *)(v3 + 376) = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100195DD0, 0, 0);
}

uint64_t sub_100195DD0()
{
  uint64_t v1 = *(void *)(v0 + 368);
  if (!v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 344), *(void *)(v0 + 328));
    swift_release();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_6;
  }
  uint64_t v2 = *(void *)(v0 + 376);
  static Task<>.checkCancellation()();
  if (v2)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 344), *(void *)(v0 + 328));
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
    return v3();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 344), *(void *)(v0 + 328));
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  uint64_t v6 = Strong;
  if (qword_10047E8C0 != -1) {
    goto LABEL_107;
  }
  while (1)
  {
    uint64_t v8 = *(void *)(v0 + 312);
    uint64_t v7 = *(void *)(v0 + 320);
    uint64_t v9 = *(void *)(v0 + 304);
    uint64_t v10 = sub_10018A9A8(v9, (uint64_t)qword_10047E8C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
    id v11 = (id)v6;
    swift_bridgeObjectRetain_n();
    uint64_t v12 = (char *)v11;
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    v93 = v12;
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v81 = v14;
      log = v13;
      uint64_t v86 = *(void *)(v0 + 368);
      uint64_t v15 = swift_slowAlloc();
      *(void *)(v0 + 224) = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315650;
      uint64_t v16 = _typeName(_:qualified:)();
      *(void *)(v0 + 232) = sub_10018A9E0(v16, v17, (uint64_t *)(v0 + 224));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      if (*(void *)&v12[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        uint64_t v18 = 0x646F50656D6F48;
      }
      else {
        uint64_t v18 = 7496003;
      }
      if (*(void *)&v12[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        unint64_t v19 = 0xE700000000000000;
      }
      else {
        unint64_t v19 = 0xE300000000000000;
      }
      *(void *)(v0 + 240) = sub_10018A9E0(v18, v19, (uint64_t *)(v0 + 224));
      v85 = (uint64_t *)(v0 + 248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      v82 = (uint8_t *)v15;
      *(_WORD *)(v15 + 22) = 2082;
      unint64_t v87 = v86 & 0xC000000000000001;
      if (v87) {
        uint64_t v20 = __CocoaSet.count.getter();
      }
      else {
        uint64_t v20 = *(void *)(v1 + 16);
      }
      uint64_t v90 = v1;
      if (v20)
      {
        uint64_t *v85 = (uint64_t)_swiftEmptyArrayStorage;
        sub_100014688(0, v20 & ~(v20 >> 63), 0);
        if (v87)
        {
          uint64_t v24 = __CocoaSet.startIndex.getter();
          char v26 = 1;
        }
        else
        {
          uint64_t v24 = sub_10018DCC8(v1);
          char v26 = v27 & 1;
        }
        *(void *)(v0 + 152) = v24;
        *(void *)(v0 + 160) = v25;
        *(unsigned char *)(v0 + 168) = v26;
        if (v20 < 0)
        {
          __break(1u);
LABEL_109:
          uint64_t result = swift_bridgeObjectRelease();
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
          return result;
        }
        do
        {
          uint64_t v33 = *(void *)(v0 + 152);
          uint64_t v34 = *(void *)(v0 + 160);
          char v35 = *(unsigned char *)(v0 + 168);
          sub_1001A3078(v33, v34, v35, v1);
          uint64_t v37 = v36;
          uint64_t v38 = NearbyAdvertisement.identifier.getter();
          uint64_t v40 = v39;

          uint64_t v41 = *(void *)(v0 + 248);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100014688(0, *(void *)(v41 + 16) + 1, 1);
            uint64_t v41 = *v85;
          }
          unint64_t v43 = *(void *)(v41 + 16);
          unint64_t v42 = *(void *)(v41 + 24);
          if (v43 >= v42 >> 1)
          {
            sub_100014688(v42 > 1, v43 + 1, 1);
            uint64_t v41 = *v85;
          }
          *(void *)(v41 + 16) = v43 + 1;
          uint64_t v44 = v41 + 16 * v43;
          *(void *)(v44 + 32) = v38;
          *(void *)(v44 + 40) = v40;
          if (v87)
          {
            uint64_t v1 = v90;
            if ((v35 & 1) == 0) {
              goto LABEL_109;
            }
            if (__CocoaSet.Index.handleBitPattern.getter()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            sub_100013A80(&qword_100478820);
            unint64_t v45 = (void (*)(uint64_t, void))Set.Index._asCocoa.modify();
            __CocoaSet.formIndex(after:isUnique:)();
            v45(v0 + 96, 0);
          }
          else
          {
            uint64_t v1 = v90;
            int64_t v28 = sub_100013AC4(v33, v34, v35, v90);
            uint64_t v30 = v29;
            char v32 = v31;
            sub_100015510(v33, v34, v35);
            *(void *)(v0 + 152) = v28;
            *(void *)(v0 + 160) = v30;
            *(unsigned char *)(v0 + 168) = v32 & 1;
          }
          --v20;
        }
        while (v20);
        sub_100015510(*(void *)(v0 + 152), *(void *)(v0 + 160), *(unsigned char *)(v0 + 168));
      }
      uint64_t v46 = *(void *)(v0 + 312);
      uint64_t v88 = *(void *)(v0 + 320);
      uint64_t v47 = *(void *)(v0 + 304);
      uint64_t v48 = Array.description.getter();
      unint64_t v50 = v49;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 272) = sub_10018A9E0(v48, v50, (uint64_t *)(v0 + 224));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v1 = v90;
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, v81, "[%s(%s)] Advertisements updated: %{public}s", v82, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v88, v47);
    }
    else
    {
      uint64_t v22 = *(void *)(v0 + 312);
      uint64_t v21 = *(void *)(v0 + 320);
      uint64_t v23 = *(void *)(v0 + 304);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    *(void *)(v0 + 176) = 0;
    *(void *)(v0 + 184) = 0;
    uint64_t v51 = (void *)swift_task_alloc();
    v51[2] = v0 + 176;
    v51[3] = v1;
    v51[4] = v0 + 264;
    v51[5] = v0 + 184;
    sub_100289944((void (*)(void))sub_1001A49AC);
    swift_bridgeObjectRelease();
    uint64_t result = swift_task_dealloc();
    uint64_t v52 = *(void *)(v0 + 184);
    if (!v52) {
      goto LABEL_110;
    }
    os_log_t loga = (os_log_t)(v0 + 176);
    if ((v52 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      type metadata accessor for NearbyAdvertisement();
      sub_1001A3F88(&qword_100478818, (void (*)(uint64_t))&type metadata accessor for NearbyAdvertisement);
      Set.Iterator.init(_cocoa:)();
      uint64_t v52 = *(void *)(v0 + 56);
      uint64_t v91 = *(void *)(v0 + 64);
      uint64_t v6 = *(void *)(v0 + 72);
      uint64_t v53 = *(void *)(v0 + 80);
      unint64_t v54 = *(void *)(v0 + 88);
    }
    else
    {
      uint64_t v55 = -1 << *(unsigned char *)(v52 + 32);
      uint64_t v91 = v52 + 56;
      uint64_t v6 = ~v55;
      uint64_t v56 = -v55;
      uint64_t v57 = v56 < 64 ? ~(-1 << v56) : -1;
      unint64_t v54 = v57 & *(void *)(v52 + 56);
      swift_bridgeObjectRetain();
      uint64_t v53 = 0;
    }
    uint64_t v1 = v0 + 208;
    int64_t v89 = (unint64_t)(v6 + 64) >> 6;
    if (v52 < 0)
    {
      while (1)
      {
        uint64_t v61 = __CocoaSet.Iterator.next()();
        if (!v61) {
          break;
        }
        *(void *)(v0 + 216) = v61;
        type metadata accessor for NearbyAdvertisement();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v62 = *(id *)v1;
        swift_unknownObjectRelease();
        uint64_t v60 = v53;
        uint64_t v58 = v54;
        if (!v62) {
          break;
        }
LABEL_70:
        uint64_t v6 = (uint64_t)v93;
        sub_1001A044C(v62);

        uint64_t v53 = v60;
        unint64_t v54 = v58;
        if ((v52 & 0x8000000000000000) == 0) {
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_50:
      if (v54)
      {
        uint64_t v58 = (v54 - 1) & v54;
        unint64_t v59 = __clz(__rbit64(v54)) | (v53 << 6);
        uint64_t v60 = v53;
        goto LABEL_69;
      }
      int64_t v63 = v53 + 1;
      if (__OFADD__(v53, 1))
      {
        __break(1u);
        goto LABEL_106;
      }
      if (v63 < v89)
      {
        unint64_t v64 = *(void *)(v91 + 8 * v63);
        uint64_t v60 = v53 + 1;
        if (v64) {
          goto LABEL_68;
        }
        uint64_t v60 = v53 + 2;
        if (v53 + 2 >= v89) {
          goto LABEL_72;
        }
        unint64_t v64 = *(void *)(v91 + 8 * v60);
        if (v64) {
          goto LABEL_68;
        }
        uint64_t v60 = v53 + 3;
        if (v53 + 3 >= v89) {
          goto LABEL_72;
        }
        unint64_t v64 = *(void *)(v91 + 8 * v60);
        if (v64) {
          goto LABEL_68;
        }
        uint64_t v60 = v53 + 4;
        if (v53 + 4 >= v89) {
          goto LABEL_72;
        }
        unint64_t v64 = *(void *)(v91 + 8 * v60);
        if (v64)
        {
LABEL_68:
          uint64_t v58 = (v64 - 1) & v64;
          unint64_t v59 = __clz(__rbit64(v64)) + (v60 << 6);
LABEL_69:
          id v62 = *(id *)(*(void *)(v52 + 48) + 8 * v59);
          if (!v62) {
            goto LABEL_72;
          }
          goto LABEL_70;
        }
        uint64_t v65 = v53 + 5;
        while (v89 != v65)
        {
          unint64_t v64 = *(void *)(v91 + 8 * v65++);
          if (v64)
          {
            uint64_t v60 = v65 - 1;
            goto LABEL_68;
          }
        }
      }
    }
LABEL_72:
    uint64_t result = sub_10018F864();
    Class isa = loga->isa;
    if (!loga->isa) {
      goto LABEL_111;
    }
    if (((unint64_t)isa & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      type metadata accessor for NearbyAdvertisement();
      sub_1001A3F88(&qword_100478818, (void (*)(uint64_t))&type metadata accessor for NearbyAdvertisement);
      Set.Iterator.init(_cocoa:)();
      Class isa = *(Class *)(v0 + 16);
      v92 = *(char **)(v0 + 24);
      uint64_t v6 = *(void *)(v0 + 32);
      uint64_t v1 = *(void *)(v0 + 40);
      unint64_t v67 = *(void *)(v0 + 48);
    }
    else
    {
      uint64_t v68 = -1 << *((unsigned char *)isa + 32);
      v92 = (char *)isa + 56;
      uint64_t v6 = ~v68;
      uint64_t v69 = -v68;
      uint64_t v70 = v69 < 64 ? ~(-1 << v69) : -1;
      unint64_t v67 = v70 & *((void *)isa + 7);
      swift_bridgeObjectRetain();
      uint64_t v1 = 0;
    }
    int64_t v71 = (unint64_t)(v6 + 64) >> 6;
    if (((unint64_t)isa & 0x8000000000000000) != 0) {
      break;
    }
LABEL_80:
    if (v67)
    {
      uint64_t v72 = (v67 - 1) & v67;
      unint64_t v73 = __clz(__rbit64(v67)) | (v1 << 6);
      uint64_t v74 = v1;
      goto LABEL_99;
    }
    int64_t v77 = v1 + 1;
    if (!__OFADD__(v1, 1))
    {
      if (v77 >= v71) {
        goto LABEL_102;
      }
      unint64_t v78 = *(void *)&v92[8 * v77];
      uint64_t v74 = v1 + 1;
      if (!v78)
      {
        uint64_t v74 = v1 + 2;
        if (v1 + 2 >= v71) {
          goto LABEL_102;
        }
        unint64_t v78 = *(void *)&v92[8 * v74];
        if (!v78)
        {
          uint64_t v74 = v1 + 3;
          if (v1 + 3 >= v71) {
            goto LABEL_102;
          }
          unint64_t v78 = *(void *)&v92[8 * v74];
          if (!v78)
          {
            uint64_t v74 = v1 + 4;
            if (v1 + 4 >= v71) {
              goto LABEL_102;
            }
            unint64_t v78 = *(void *)&v92[8 * v74];
            if (!v78)
            {
              uint64_t v79 = v1 + 5;
              while (v71 != v79)
              {
                unint64_t v78 = *(void *)&v92[8 * v79++];
                if (v78)
                {
                  uint64_t v74 = v79 - 1;
                  goto LABEL_98;
                }
              }
              goto LABEL_102;
            }
          }
        }
      }
LABEL_98:
      uint64_t v72 = (v78 - 1) & v78;
      unint64_t v73 = __clz(__rbit64(v78)) + (v74 << 6);
LABEL_99:
      id v76 = *(id *)(*((void *)isa + 6) + 8 * v73);
      if (v76) {
        goto LABEL_100;
      }
      goto LABEL_102;
    }
LABEL_106:
    __break(1u);
LABEL_107:
    swift_once();
  }
  while (1)
  {
    uint64_t v75 = __CocoaSet.Iterator.next()();
    if (!v75) {
      break;
    }
    *(void *)(v0 + 200) = v75;
    type metadata accessor for NearbyAdvertisement();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v76 = *(id *)(v0 + 192);
    swift_unknownObjectRelease();
    uint64_t v74 = v1;
    uint64_t v72 = v67;
    if (!v76) {
      break;
    }
LABEL_100:
    uint64_t v6 = (uint64_t)v93;
    sub_10019F424(v76);

    uint64_t v1 = v74;
    unint64_t v67 = v72;
    if (((unint64_t)isa & 0x8000000000000000) == 0) {
      goto LABEL_80;
    }
  }
LABEL_102:
  sub_10018F864();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v94 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100478810 + dword_100478810);
  v80 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v80;
  void *v80 = v0;
  v80[1] = sub_100195CD0;
  return v94(0, 0);
}

uint64_t sub_100196AA0(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_100013A80(&qword_100478808);
  uint64_t v4 = sub_1000155BC((unint64_t *)&unk_100478830, &qword_100478808);
  uint64_t v5 = (void *)swift_task_alloc();
  v2[6] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100196B8C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v2 + 2, v3, v4);
}

uint64_t sub_100196B8C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v2)
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v6 = sub_100196D38;
  }
  else
  {
    if (v2)
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v7;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v6 = sub_100196D1C;
  }
  return _swift_task_switch(v6, v3, v5);
}

uint64_t sub_100196D1C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_100196D38()
{
  v0[3] = v0[7];
  sub_100013A80(&qword_100478740);
  swift_dynamicCast();
  swift_willThrowTypedImpl();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void *sub_100196DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.count.getter();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_1001A158C(a1);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= __CocoaSet.count.getter() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = __CocoaSet.count.getter();
  Swift::Int v7 = sub_1001A1880(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_1001A1A68(a1, v2);
}

uint64_t sub_100196EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_100009A08(a1, &qword_100478720);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_100197068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100009A08(a1, &qword_100478720);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_10018FE08(0, &qword_100478738);
  return swift_task_create();
}

uint64_t sub_1001971FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[12] = v7;
  v6[13] = *(void *)(v7 - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  return _swift_task_switch(sub_1001972DC, 0, 0);
}

uint64_t sub_1001972DC()
{
  int64_t v28 = v0;
  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  uint64_t v2 = (id *)(v0 + 9);
  uint64_t v1 = (void *)v0[9];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[13];
  uint64_t v6 = sub_10018A9A8(v4, (uint64_t)qword_10047E8C8);
  v0[17] = v6;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[18] = v7;
  v0[19] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v3, v6, v4);
  id v8 = v1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = v0[16];
  uint64_t v13 = v0[12];
  uint64_t v14 = v0[13];
  if (v11)
  {
    uint64_t v15 = (char *)v0[9];
    uint64_t v25 = v0[12];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = _typeName(_:qualified:)();
    v0[7] = sub_10018A9E0(v17, v18, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    if (*(void *)&v15[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v19 = 0x646F50656D6F48;
    }
    else {
      uint64_t v19 = 7496003;
    }
    if (*(void *)&v15[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v20 = 0xE700000000000000;
    }
    else {
      unint64_t v20 = 0xE300000000000000;
    }
    v0[8] = sub_10018A9E0(v19, v20, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%s(%s)] Starting to listen for nearby invitations", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v21(v12, v25);
  }
  else
  {
    id v22 = *v2;

    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v21(v12, v13);
  }
  v0[20] = v21;
  char v26 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of NearbyInvitationScanner.start()
                          + async function pointer to dispatch thunk of NearbyInvitationScanner.start());
  uint64_t v23 = (void *)swift_task_alloc();
  v0[21] = v23;
  void *v23 = v0;
  v23[1] = sub_1001975E8;
  return v26();
}

uint64_t sub_1001975E8()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100197988;
  }
  else {
    uint64_t v2 = sub_1001976FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001976FC()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void **)(v0 + 72);
  (*(void (**)(void, void, void))(v0 + 144))(*(void *)(v0 + 120), *(void *)(v0 + 136), *(void *)(v0 + 96));
  id v2 = v1;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v18 = *(void *)(v0 + 120);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v5 = *(char **)(v0 + 72);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v7 = _typeName(_:qualified:)();
    *(void *)(v0 + 40) = sub_10018A9E0(v7, v8, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    if (*(void *)&v5[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v9 = 0x646F50656D6F48;
    }
    else {
      uint64_t v9 = 7496003;
    }
    if (*(void *)&v5[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v10 = 0xE700000000000000;
    }
    else {
      unint64_t v10 = 0xE300000000000000;
    }
    *(void *)(v0 + 48) = sub_10018A9E0(v9, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%s(%s)] Started listening for nearby invitations", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v19(v18, v17);
  }
  else
  {
    BOOL v11 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v14 = *(void **)(v0 + 72);

    v11(v12, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100197988()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void **)(v0 + 72);
  (*(void (**)(void, void, void))(v0 + 144))(*(void *)(v0 + 112), *(void *)(v0 + 136), *(void *)(v0 + 96));
  id v2 = v1;
  swift_errorRetain();
  id v3 = v2;
  swift_errorRetain();
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v22 = *(void *)(v0 + 112);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 96);
    uint64_t v6 = *(char **)(v0 + 72);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v8 = _typeName(_:qualified:)();
    *(void *)(v0 + 16) = sub_10018A9E0(v8, v9, &v24);
    log = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    if (*(void *)&v6[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v10 = 0x646F50656D6F48;
    }
    else {
      uint64_t v10 = 7496003;
    }
    if (*(void *)&v6[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v11 = 0xE700000000000000;
    }
    else {
      unint64_t v11 = 0xE300000000000000;
    }
    *(void *)(v0 + 24) = sub_10018A9E0(v10, v11, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v7 + 22) = 2114;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v20 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v5, "[%s(%s)] Failed to start listening for nearby invitations: %{public}@", (uint8_t *)v7, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v23(v22, v21);
  }
  else
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 96);
    uint64_t v16 = *(void **)(v0 + 72);
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();

    v13(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

id sub_100197CF4()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10018A9A8(v2, (uint64_t)qword_10047E8C8);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 136315138;
    uint64_t v6 = _typeName(_:qualified:)();
    sub_10018A9E0(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%s] Deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v8 = (objc_class *)type metadata accessor for NearbySessionsListenerImplementation();
  v11.receiver = v1;
  v11.super_class = v8;
  return objc_msgSendSuper2(&v11, "dealloc");
}

BOOL sub_100197F5C(uint64_t a1, uint64_t a2)
{
  void (*v4)(id *__return_ptr, void *);
  id v5;
  void v7[2];
  id v8;

  uint64_t v3 = *(void *)(v2
                 + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_notifiedSessions);
  v7[0] = a1;
  v7[1] = a2;
  os_log_type_t v4 = *(void (**)(id *__return_ptr, void *))(*(void *)v3 + 208);
  swift_retain();
  swift_bridgeObjectRetain();
  v4(&v8, v7);
  swift_bridgeObjectRelease();
  swift_release();
  os_log_type_t v5 = v8;
  if (v8) {

  }
  return v5 != 0;
}

uint64_t sub_100198060(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  v3[24] = swift_getObjectType();
  sub_100013A80(&qword_100478720);
  v3[25] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return _swift_task_switch(sub_1001981A8, 0, 0);
}

uint64_t sub_1001981A8()
{
  uint64_t v125 = v0;
  long long v121 = *(_OWORD *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v121;
  *(void *)(v3 + 40) = v1;
  type metadata accessor for NearbyAdvertisement();
  sub_100289944((void (*)(void))sub_1001A42C0);
  swift_task_dealloc();
  uint64_t v4 = *(void **)(v0 + 16);
  *(void *)(v0 + 248) = v4;
  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 216);
  unint64_t v7 = *(void **)(v0 + 184);
  uint64_t v117 = sub_10018A9A8(*(void *)(v0 + 208), (uint64_t)qword_10047E8C8);
  v119 = *(void (**)(uint64_t))(v6 + 16);
  v119(v5);
  id v8 = v4;
  id v9 = v7;
  id v10 = v8;
  id v11 = v9;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = *(void *)(v0 + 240);
  uint64_t v16 = *(void *)(v0 + 208);
  uint64_t v17 = *(void *)(v0 + 216);
  if (v14)
  {
    uint64_t v116 = *(void *)(v0 + 240);
    uint64_t v18 = v10;
    os_log_type_t type = v13;
    uint64_t v19 = *(char **)(v0 + 184);
    uint64_t v20 = swift_slowAlloc();
    v108 = (void *)swift_slowAlloc();
    v124[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136316162;
    uint64_t v113 = v16;
    uint64_t v21 = _typeName(_:qualified:)();
    *(void *)(v0 + 128) = sub_10018A9E0(v21, v22, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    if (*(void *)&v19[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v23 = 0x646F50656D6F48;
    }
    else {
      uint64_t v23 = 7496003;
    }
    if (*(void *)&v19[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v24 = 0xE700000000000000;
    }
    else {
      unint64_t v24 = 0xE300000000000000;
    }
    *(void *)(v0 + 136) = sub_10018A9E0(v23, v24, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2080;
    *(void *)(v0 + 144) = sub_10018A9E0(0xD000000000000021, 0x80000001003B4570, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 32) = 2082;
    uint64_t v25 = NearbyAdvertisement.identifier.getter();
    *(void *)(v0 + 152) = sub_10018A9E0(v25, v26, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 42) = 2112;
    *(void *)(v0 + 160) = v18;
    id v27 = v18;
    id v10 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v108 = v18;

    _os_log_impl((void *)&_mh_execute_header, v12, type, "[%s(%s)] %s <%{public}s> - %@", (uint8_t *)v20, 0x34u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    int64_t v28 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v28(v116, v113);
  }
  else
  {
    uint64_t v29 = *(void **)(v0 + 184);

    int64_t v28 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v28(v15, v16);
  }
  uint64_t v30 = self;
  id v31 = [v30 sharedCenter];
  id v32 = [v31 localActiveIdentity];
  *(void *)(v0 + 256) = v32;

  if (v32)
  {
    id v33 = [v32 displayName];
    if (v33)
    {
      uint64_t v34 = v33;
      uint64_t v35 = *(void *)(v0 + 184);
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v109 = v37;
      *(void *)typea = v36;

      uint64_t v112 = OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_pendingInvitationRequest;
      uint64_t v114 = v35;
      if (*(void *)(v35
                     + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_pendingInvitationRequest))
      {
        uint64_t v38 = *(void **)(v0 + 184);
        ((void (*)(void, uint64_t, void))v119)(*(void *)(v0 + 232), v117, *(void *)(v0 + 208));
        id v122 = v10;
        id v39 = v10;
        id v40 = v38;
        id v41 = v39;
        id v42 = v40;
        swift_retain();
        unint64_t v43 = Logger.logObject.getter();
        os_log_type_t v44 = static os_log_type_t.error.getter();
        BOOL v45 = os_log_type_enabled(v43, v44);
        uint64_t v46 = *(void *)(v0 + 232);
        uint64_t v47 = *(void *)(v0 + 208);
        if (v45)
        {
          uint64_t v120 = *(void *)(v0 + 232);
          os_log_type_t v107 = v44;
          uint64_t v48 = *(char **)(v0 + 184);
          uint64_t v49 = swift_slowAlloc();
          v124[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v49 = 136315906;
          uint64_t v50 = _typeName(_:qualified:)();
          *(void *)(v0 + 96) = sub_10018A9E0(v50, v51, v124);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v49 + 12) = 2080;
          if (*(void *)&v48[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
            uint64_t v52 = 0x646F50656D6F48;
          }
          else {
            uint64_t v52 = 7496003;
          }
          if (*(void *)&v48[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
            unint64_t v53 = 0xE700000000000000;
          }
          else {
            unint64_t v53 = 0xE300000000000000;
          }
          *(void *)(v0 + 104) = sub_10018A9E0(v52, v53, v124);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v49 + 22) = 2080;
          *(void *)(v0 + 112) = sub_10018A9E0(0xD000000000000021, 0x80000001003B4570, v124);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v49 + 32) = 2080;
          uint64_t v54 = NearbyAdvertisement.identifier.getter();
          *(void *)(v0 + 120) = sub_10018A9E0(v54, v55, v124);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v43, v107, "[%s(%s)] %s <%s> Cancelling pending invitation request", (uint8_t *)v49, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v56 = v120;
          uint64_t v57 = v47;
        }
        else
        {
          unint64_t v78 = *(void **)(v0 + 184);

          uint64_t v56 = v46;
          uint64_t v57 = v47;
        }
        v28(v56, v57);
        sub_10018FE08(0, &qword_100478738);
        sub_100013A80(&qword_100478740);
        Task.cancel()();
        swift_release();
        id v10 = v122;
      }
      uint64_t v79 = v10;
      id v80 = [objc_allocWithZone((Class)_MRGroupSessionJoinRequestProtobuf) init];
      *(void *)(v0 + 264) = v80;
      if (v80)
      {
        v85 = v80;
        uint64_t v87 = *(void *)(v0 + 192);
        uint64_t v86 = *(void *)(v0 + 200);
        uint64_t v88 = *(char **)(v0 + 184);
        id v89 = [v32 protobuf];
        [v85 setIdentity:v89];

        uint64_t v90 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v86, 1, 1, v90);
        uint64_t v91 = *(void *)&v88[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_scanner];
        v92 = (void *)swift_allocObject();
        v92[2] = 0;
        v92[3] = 0;
        v92[4] = v88;
        v92[5] = v79;
        v92[6] = *(void *)typea;
        v92[7] = v109;
        v92[8] = v91;
        v92[9] = v85;
        v92[10] = v87;
        id v93 = v79;
        v94 = v88;
        swift_retain();
        id v95 = v85;
        uint64_t v96 = sub_100197068(v86, (uint64_t)&unk_100478730, (uint64_t)v92);
        *(void *)(v0 + 272) = v96;
        *(void *)(v114 + v112) = v96;
        swift_retain();
        swift_release();
        v97 = (void *)swift_task_alloc();
        *(void *)(v0 + 280) = v97;
        uint64_t v98 = sub_10018FE08(0, &qword_100478738);
        uint64_t v99 = sub_100013A80(&qword_100478740);
        void *v97 = v0;
        v97[1] = sub_100199080;
        uint64_t v83 = v99;
        id v80 = (id)(v0 + 88);
        v84 = &protocol self-conformance witness table for Error;
        uint64_t v81 = v96;
        uint64_t v82 = v98;
      }
      else
      {
        __break(1u);
      }
      return Task.value.getter(v80, v81, v82, v83, v84);
    }
  }
  v115 = (void *)(v0 + 32);
  uint64_t v58 = *(void **)(v0 + 184);
  ((void (*)(void, uint64_t, void))v119)(*(void *)(v0 + 224), v117, *(void *)(v0 + 208));
  id v59 = v10;
  id v60 = v58;
  id v61 = v59;
  id v62 = v60;
  int64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v63, v64))
  {
    os_log_type_t v123 = v64;
    uint64_t v65 = *(char **)(v0 + 184);
    uint64_t v66 = swift_slowAlloc();
    v118 = (void *)swift_slowAlloc();
    v124[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v66 = 136316162;
    uint64_t v67 = _typeName(_:qualified:)();
    *(void *)(v0 + 40) = sub_10018A9E0(v67, v68, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 2080;
    if (*(void *)&v65[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v69 = 0x646F50656D6F48;
    }
    else {
      uint64_t v69 = 7496003;
    }
    if (*(void *)&v65[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v70 = 0xE700000000000000;
    }
    else {
      unint64_t v70 = 0xE300000000000000;
    }
    *(void *)(v0 + 48) = sub_10018A9E0(v69, v70, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 22) = 2080;
    *(void *)(v0 + 56) = sub_10018A9E0(0xD000000000000021, 0x80000001003B4570, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v66 + 32) = 2080;
    uint64_t v71 = NearbyAdvertisement.identifier.getter();
    *(void *)(v0 + 64) = sub_10018A9E0(v71, v72, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 42) = 2112;
    id v73 = [v30 sharedCenter];
    id v74 = [v73 localActiveIdentity];

    if (v74) {
      *(void *)(v0 + 80) = v74;
    }
    else {
      *(void *)(v0 + 72) = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v100 = *(void *)(v0 + 224);
    uint64_t v101 = *(void *)(v0 + 208);
    void *v118 = v74;
    _os_log_impl((void *)&_mh_execute_header, v63, v123, "[%s(%s)] %s <%s> No display name for identity: %@", (uint8_t *)v66, 0x34u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v28(v100, v101);
  }
  else
  {
    uint64_t v75 = *(void *)(v0 + 224);
    uint64_t v76 = *(void *)(v0 + 208);
    int64_t v77 = *(void **)(v0 + 184);

    v28(v75, v76);
  }
  type metadata accessor for MRGroupSessionError(0);
  uint64_t v103 = v102;
  void *v115 = 4;
  uint64_t v104 = sub_1001A3F88(&qword_1004786A0, type metadata accessor for MRGroupSessionError);
  sub_1002483C4((uint64_t)v115, 0xD000000000000022, 0x80000001003B44D0, 0, v103, v104);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v105 = *(uint64_t (**)(void))(v0 + 8);
  return v105();
}

uint64_t sub_100199080()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001992B0;
  }
  else {
    uint64_t v2 = sub_1001991C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001991C0()
{
  uint64_t v1 = *(void **)(v0 + 264);
  uint64_t v2 = *(void **)(v0 + 256);

  swift_release();
  uint64_t v3 = *(void *)(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_1001992B0()
{
  uint64_t v1 = *(void **)(v0 + 264);
  uint64_t v2 = *(void **)(v0 + 256);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10019938C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  void (*v13)(uint64_t *__return_ptr, uint64_t *);
  uint64_t result;
  uint64_t v15;
  Swift::String v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  id v40 = a4;
  uint64_t v9 = type metadata accessor for Logger();
  id v41 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)&a1[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_discoveredAdvertisements];
  id v42 = a2;
  unint64_t v43 = (unint64_t)a3;
  os_log_type_t v13 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(*(void *)v12 + 208);
  swift_retain();
  swift_bridgeObjectRetain();
  v13(&v44, &v42);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v44)
  {
    *a5 = v44;
  }
  else
  {
    uint64_t v15 = v41;
    id v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    _StringGuts.grow(_:)(40);
    swift_bridgeObjectRelease();
    id v42 = 0xD000000000000026;
    unint64_t v43 = 0x80000001003B45A0;
    v16._countAndFlagsBits = a2;
    v16._object = a3;
    String.append(_:)(v16);
    uint64_t v18 = v42;
    uint64_t v17 = v43;
    if (qword_10047E8C0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10018A9A8(v9, (uint64_t)qword_10047E8C8);
    uint64_t v20 = v15;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    id v39 = v9;
    v21(v11, v19, v9);
    unint64_t v22 = a1;
    swift_bridgeObjectRetain_n();
    uint64_t v23 = v22;
    unint64_t v24 = Logger.logObject.getter();
    uint64_t v25 = static os_log_type_t.error.getter();
    unint64_t v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      id v27 = swift_slowAlloc();
      uint64_t v38 = v18;
      int64_t v28 = v27;
      uint64_t v37 = swift_slowAlloc();
      id v42 = v37;
      *(_DWORD *)int64_t v28 = 136315906;
      uint64_t v29 = _typeName(_:qualified:)();
      LODWORD(v40) = v26;
      os_log_type_t v44 = sub_10018A9E0(v29, v30, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      if (*(void *)&v23[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        id v31 = 0x646F50656D6F48;
      }
      else {
        id v31 = 7496003;
      }
      if (*(void *)&v23[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        id v32 = 0xE700000000000000;
      }
      else {
        id v32 = 0xE300000000000000;
      }
      os_log_type_t v44 = sub_10018A9E0(v31, v32, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 22) = 2080;
      os_log_type_t v44 = sub_10018A9E0(0xD000000000000021, 0x80000001003B4570, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 32) = 2082;
      swift_bridgeObjectRetain();
      os_log_type_t v44 = sub_10018A9E0(v38, v17, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v40, "[%s(%s)] %s %{public}s", (uint8_t *)v28, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v18 = v38;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v39);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v39);
    }
    type metadata accessor for MRGroupSessionError(0);
    uint64_t v34 = v33;
    os_log_type_t v44 = 2;
    uint64_t v35 = sub_1001A3F88(&qword_1004786A0, type metadata accessor for MRGroupSessionError);
    sub_1002483C4((uint64_t)&v44, v18, v17, 0, v34, v35);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10019987C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[24] = v13;
  v8[25] = v14;
  v8[22] = a7;
  v8[23] = a8;
  v8[20] = a5;
  v8[21] = a6;
  v8[18] = a1;
  v8[19] = a4;
  sub_1001A441C();
  v8[26] = v9;
  v8[27] = *(void *)(v9 - 8);
  v8[28] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Logger();
  v8[29] = v10;
  v8[30] = *(void *)(v10 - 8);
  v8[31] = swift_task_alloc();
  v8[32] = swift_task_alloc();
  return _swift_task_switch(sub_1001999BC, 0, 0);
}

uint64_t sub_1001999BC()
{
  uint64_t v52 = v0;
  uint64_t v1 = v0 + 2;
  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[30];
  uint64_t v6 = (void *)v0[19];
  uint64_t v5 = (void *)v0[20];
  uint64_t v7 = sub_10018A9A8(v3, (uint64_t)qword_10047E8C8);
  v0[33] = v7;
  id v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[34] = v8;
  v0[35] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v2, v7, v3);
  id v9 = v6;
  id v10 = v5;
  swift_bridgeObjectRetain_n();
  id v11 = v9;
  id v12 = v10;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v16 = v0[32];
  uint64_t v17 = v0[29];
  uint64_t v18 = v0[30];
  if (v15)
  {
    uint64_t v50 = v0[29];
    uint64_t v19 = (void *)v0[20];
    unint64_t v46 = v0[22];
    uint64_t v47 = v0[21];
    os_log_type_t type = v14;
    uint64_t v20 = (char *)v0[19];
    uint64_t v49 = v0[32];
    uint64_t v21 = swift_slowAlloc();
    BOOL v45 = (void *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136316162;
    uint64_t v22 = _typeName(_:qualified:)();
    v0[13] = sub_10018A9E0(v22, v23, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    if (*(void *)&v20[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v24 = 0x646F50656D6F48;
    }
    else {
      uint64_t v24 = 7496003;
    }
    if (*(void *)&v20[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v25 = 0xE700000000000000;
    }
    else {
      unint64_t v25 = 0xE300000000000000;
    }
    v0[14] = sub_10018A9E0(v24, v25, &v51);
    uint64_t v1 = v0 + 2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v21 + 22) = 2080;
    v0[15] = sub_10018A9E0(0xD000000000000021, 0x80000001003B4570, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 32) = 2112;
    v0[16] = v19;
    id v26 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v45 = v19;

    *(_WORD *)(v21 + 42) = 2080;
    swift_bridgeObjectRetain();
    v0[17] = sub_10018A9E0(v47, v46, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, type, "[%s(%s)] %s Requesting to join advertisement: %@ as %s", (uint8_t *)v21, 0x34u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v27 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v27(v49, v50);
  }
  else
  {
    uint64_t v29 = (void *)v0[19];
    int64_t v28 = (void *)v0[20];

    swift_bridgeObjectRelease_n();
    id v27 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v27(v16, v17);
  }
  v0[36] = v27;
  uint64_t v30 = (void *)v0[24];
  id v31 = (void *)kMREventGroupSessionJoinRequestSent;
  v0[6] = sub_10019A660;
  v0[7] = 0;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10019A7F4;
  v0[5] = &unk_1004209D0;
  id v32 = _Block_copy(v1);
  id v33 = v31;
  MRAnalyticsSendEvent();
  _Block_release(v32);

  id v34 = [v30 data];
  if (v34)
  {
    uint64_t v35 = v34;
    uint64_t v36 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v38 = v37;
  }
  else
  {
    uint64_t v36 = 0;
    unint64_t v38 = 0xF000000000000000;
  }
  v0[37] = v36;
  v0[38] = v38;
  id v39 = (void *)swift_task_alloc();
  v0[39] = v39;
  void *v39 = v0;
  v39[1] = sub_100199F14;
  uint64_t v40 = v0[28];
  uint64_t v41 = v0[22];
  uint64_t v42 = v0[20];
  uint64_t v43 = v0[21];
  return NearbyInvitationScanner<>.request(_:displayName:userInfo:)(v40, v42, v43, v41, v36, v38);
}

uint64_t sub_100199F14(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[40] = a1;
  v3[41] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10019A5C4;
  }
  else
  {
    sub_1001A3954(v3[37], v3[38]);
    uint64_t v4 = sub_10019A030;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10019A030()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 328);
  static Task<>.checkCancellation()();
  if (v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 208));
    swift_release();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_20;
  }
  uint64_t v3 = InvitationRequest<>.Context.userInfo.getter();
  if (v4 >> 60 == 15) {
    goto LABEL_9;
  }
  uint64_t v5 = v3;
  unint64_t v6 = v4;
  id v7 = objc_allocWithZone((Class)_MRGroupSessionJoinResponseProtobuf);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v9 = [v7 initWithData:isa];

  if (!v9)
  {
LABEL_8:
    sub_1001A3954(v5, v6);
LABEL_9:
    id v41 = 0;
    goto LABEL_10;
  }
  id v10 = [v9 joinURL];
  if (!v10)
  {

    goto LABEL_8;
  }
  id v11 = v10;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v41 = [self tokenForJoinURLString:v12];

  sub_1001A3954(v5, v6);
LABEL_10:
  uint64_t v13 = *(void **)(v0 + 152);
  (*(void (**)(void, void, void))(v0 + 272))(*(void *)(v0 + 248), *(void *)(v0 + 264), *(void *)(v0 + 232));
  id v14 = v13;
  swift_retain_n();
  id v15 = v14;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v19 = *(void *)(v0 + 320);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
  uint64_t v21 = *(void *)(v0 + 248);
  uint64_t v22 = *(void *)(v0 + 232);
  if (v18)
  {
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    uint64_t v40 = *(void *)(v0 + 248);
    unint64_t v23 = *(char **)(v0 + 152);
    uint64_t v24 = swift_slowAlloc();
    v43[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315906;
    uint64_t v25 = _typeName(_:qualified:)();
    *(void *)(v0 + 64) = sub_10018A9E0(v25, v26, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    if (*(void *)&v23[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v27 = 0x646F50656D6F48;
    }
    else {
      uint64_t v27 = 7496003;
    }
    if (*(void *)&v23[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v28 = 0xE700000000000000;
    }
    else {
      unint64_t v28 = 0xE300000000000000;
    }
    *(void *)(v0 + 72) = sub_10018A9E0(v27, v28, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v24 + 22) = 2080;
    *(void *)(v0 + 80) = sub_10018A9E0(0xD000000000000021, 0x80000001003B4570, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 32) = 2082;
    *(void *)(v0 + 88) = v19;
    type metadata accessor for NearbyGroup();
    sub_1001A3F88((unint64_t *)&unk_1004786C0, (void (*)(uint64_t))&type metadata accessor for NearbyGroup);
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 96) = sub_10018A9E0(v29, v30, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%s(%s)] %s Successfully joined NearbyGroup: %{public}s", (uint8_t *)v24, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v42(v40, v22);
  }
  else
  {
    id v31 = *(void **)(v0 + 152);

    swift_release_n();
    v20(v21, v22);
  }
  uint64_t v33 = *(void *)(v0 + 216);
  uint64_t v32 = *(void *)(v0 + 224);
  uint64_t v34 = *(void *)(v0 + 208);
  uint64_t v35 = *(void **)(v0 + 144);
  type metadata accessor for MRDNearbyGroup();
  uint64_t v36 = swift_retain();
  id v37 = sub_1001BBA90(v36);
  id v38 = [objc_allocWithZone((Class)MRDGroupSessionJoinResponse) initWithNearbyGroup:v37 publicSigningKeyData:0 joinToken:v41];

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  *uint64_t v35 = v38;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
LABEL_20:
  return v2();
}

uint64_t sub_10019A5C4()
{
  sub_1001A3954(v0[37], v0[38]);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_10019A660()
{
  sub_100013A80(&qword_100478708);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v1;
  uint64_t v2 = (void *)kMREventJoinSessionModeProximity;
  *(void *)(inited + 48) = kMREventJoinSessionModeProximity;
  id v3 = v2;
  return sub_10019A6D8(inited);
}

unint64_t sub_10019A6D8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100013A80((uint64_t *)&unk_100478710);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_100013660(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

Class sub_10019A7F4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  sub_10018FE08(0, &qword_100479FA0);
  v3.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v3.super.isa;
}

uint64_t sub_10019AA00(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  v3[4] = v6;
  a3;
  id v8 = (void *)swift_task_alloc();
  void v3[5] = v8;
  *id v8 = v3;
  v8[1] = sub_10019AAD4;
  return sub_100198060(v5, v7);
}

uint64_t sub_10019AAD4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  id v8 = *(void (***)(void, void, void))(v5 + 24);
  if (v3)
  {
    id v9 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    ((void (**)(void, void, void *))v8)[2](v8, 0, v9);

    _Block_release(v8);
  }
  else
  {
    ((void (**)(void, void *, void))v8)[2](v8, a1, 0);
    _Block_release(v8);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_10019AC90(uint64_t a1)
{
  v2[32] = a1;
  v2[33] = v1;
  v2[34] = swift_getObjectType();
  uint64_t v3 = type metadata accessor for Logger();
  v2[35] = v3;
  v2[36] = *(void *)(v3 - 8);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  return _swift_task_switch(sub_10019ADBC, 0, 0);
}

id sub_10019ADBC()
{
  uint64_t v156 = v0;
  id v1 = [*(id *)(v0 + 256) invitationData];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    unint64_t v146 = v5;
    uint64_t v148 = v3;
    *(void *)(v0 + 336) = v3;
    *(void *)(v0 + 344) = v5;
    if (qword_10047E8C0 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v7 = *(void *)(v0 + 288);
    id v9 = *(void **)(v0 + 256);
    id v8 = *(void **)(v0 + 264);
    uint64_t v10 = sub_10018A9A8(*(void *)(v0 + 280), (uint64_t)qword_10047E8C8);
    *(void *)(v0 + 352) = v10;
    id v11 = *(void (**)(void))(v7 + 16);
    *(void *)(v0 + 360) = v11;
    *(void *)(v0 + 368) = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v141 = (void (*)(void, uint64_t, void))v11;
    uint64_t v143 = v10;
    v11(v6);
    id v12 = v8;
    id v13 = v9;
    id v14 = v12;
    id v15 = v13;
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 328);
    uint64_t v20 = *(void *)(v0 + 288);
    uint64_t v151 = *(void *)(v0 + 280);
    if (v18)
    {
      os_log_type_t type = v17;
      uint64_t v136 = *(void *)(v0 + 328);
      uint64_t v21 = *(char **)(v0 + 264);
      v134 = *(void **)(v0 + 256);
      uint64_t v22 = swift_slowAlloc();
      v133 = (void *)swift_slowAlloc();
      v155[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315906;
      uint64_t v23 = _typeName(_:qualified:)();
      *(void *)(v0 + 224) = sub_10018A9E0(v23, v24, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      if (*(void *)&v21[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        uint64_t v25 = 0x646F50656D6F48;
      }
      else {
        uint64_t v25 = 7496003;
      }
      if (*(void *)&v21[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        unint64_t v26 = 0xE700000000000000;
      }
      else {
        unint64_t v26 = 0xE300000000000000;
      }
      *(void *)(v0 + 232) = sub_10018A9E0(v25, v26, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2080;
      *(void *)(v0 + 240) = sub_10018A9E0(0xD000000000000017, 0x80000001003B44B0, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 32) = 2112;
      *(void *)(v0 + 248) = v134;
      id v27 = v134;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v133 = v134;

      _os_log_impl((void *)&_mh_execute_header, v16, type, "[%s(%s)] %s with payload: %@", (uint8_t *)v22, 0x2Au);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v28 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v28(v136, v151);
    }
    else
    {
      uint64_t v52 = *(void **)(v0 + 264);
      uint64_t v53 = *(void **)(v0 + 256);

      unint64_t v28 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v28(v19, v151);
    }
    *(void *)(v0 + 376) = v28;
    uint64_t v54 = self;
    id v55 = [v54 sharedCenter];
    id v56 = [v55 localActiveIdentity];
    *(void *)(v0 + 384) = v56;

    if (v56)
    {
      id v57 = [v56 displayName];
      if (v57)
      {
        uint64_t v58 = v57;
        uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v61 = v60;

        *(void *)(v0 + 392) = v59;
        *(void *)(v0 + 400) = v61;
        id result = [objc_allocWithZone((Class)_MRGroupSessionJoinRequestProtobuf) init];
        *(void *)(v0 + 408) = result;
        if (result)
        {
          int64_t v63 = result;
          id v64 = [v56 protobuf];
          [v63 setIdentity:v64];

          id v65 = [self currentSettings];
          LOBYTE(v63) = [v65 supportGroupSessionHome];

          if (v63)
          {
            *(void *)(v0 + 416) = sub_1001953C8();
            uint64_t v66 = (void *)swift_task_alloc();
            *(void *)(v0 + 424) = v66;
            *uint64_t v66 = v0;
            v66[1] = sub_10019C070;
            return (id)sub_1002FD1C0();
          }
          else
          {
            uint64_t v89 = *(void *)(v0 + 392);
            long long v153 = *(_OWORD *)(v0 + 336);
            type metadata accessor for MRGroupSessionError(0);
            uint64_t v91 = v90;
            *(void *)(v0 + 128) = 12;
            uint64_t v92 = swift_task_alloc();
            long long v93 = *(_OWORD *)(v0 + 400);
            *(_OWORD *)(v92 + 16) = v153;
            *(void *)(v92 + 32) = v89;
            *(_OWORD *)(v92 + 40) = v93;
            uint64_t v94 = sub_100013A80(&qword_1004786A8);
            uint64_t v95 = sub_1001A3F88(&qword_1004786A0, type metadata accessor for MRGroupSessionError);
            sub_100248514(v0 + 128, 0xD000000000000022, 0x80000001003B4500, (uint64_t)sub_1001A3DF0, v92, v91, v94, v95);
            uint64_t v96 = *(void **)(v0 + 408);
            uint64_t v150 = v95;
            uint64_t v152 = v91;
            uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
            uint64_t v104 = *(void *)(v0 + 352);
            uint64_t v105 = *(void *)(v0 + 320);
            uint64_t v106 = *(void *)(v0 + 280);
            os_log_type_t v107 = *(void **)(v0 + 264);
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            uint64_t v154 = *(void *)(v0 + 120);
            *(void *)(v0 + 440) = v154;
            v103(v105, v104, v106);
            id v108 = v107;
            id v109 = v96;
            id v110 = v108;
            id v111 = v109;
            uint64_t v112 = Logger.logObject.getter();
            os_log_type_t v113 = static os_log_type_t.info.getter();
            BOOL v114 = os_log_type_enabled(v112, v113);
            v115 = *(void **)(v0 + 408);
            uint64_t v116 = *(void (**)(uint64_t, uint64_t))(v0 + 376);
            uint64_t v117 = *(void *)(v0 + 320);
            uint64_t v118 = *(void *)(v0 + 280);
            if (v114)
            {
              v119 = *(char **)(v0 + 264);
              uint64_t v142 = *(void *)(v0 + 280);
              uint64_t v120 = swift_slowAlloc();
              v138 = (void *)swift_slowAlloc();
              v155[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v120 = 136315650;
              uint64_t v121 = _typeName(_:qualified:)();
              *(void *)(v0 + 192) = sub_10018A9E0(v121, v122, v155);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v120 + 12) = 2080;
              if (*(void *)&v119[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
                uint64_t v123 = 0x646F50656D6F48;
              }
              else {
                uint64_t v123 = 7496003;
              }
              if (*(void *)&v119[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
                unint64_t v124 = 0xE700000000000000;
              }
              else {
                unint64_t v124 = 0xE300000000000000;
              }
              *(void *)(v0 + 200) = sub_10018A9E0(v123, v124, v155);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              *(_WORD *)(v120 + 22) = 2112;
              *(void *)(v0 + 208) = v115;
              id v125 = v115;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              void *v138 = v115;

              _os_log_impl((void *)&_mh_execute_header, v112, v113, "[%s(%s)] Requesting to join session with inner request: %@", (uint8_t *)v120, 0x20u);
              sub_100013A80((uint64_t *)&unk_10047B850);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              v116(v117, v142);
              uint64_t v126 = (long long *)(v0 + 264);
            }
            else
            {
              uint64_t v126 = (long long *)(v0 + 264);
              v127 = *(void **)(v0 + 264);

              v116(v117, v118);
            }
            uint64_t v128 = *(void *)(v0 + 256);
            *(void *)(v0 + 144) = 6;
            uint64_t v129 = swift_task_alloc();
            *(void *)(v0 + 448) = v129;
            long long v130 = *v126;
            *(void *)(v129 + 16) = v128;
            *(void *)(v129 + 24) = v154;
            *(_OWORD *)(v129 + 32) = v130;
            v131 = (void *)swift_task_alloc();
            *(void *)(v0 + 456) = v131;
            uint64_t v132 = type metadata accessor for NearbyGroup();
            *(void *)(v0 + 464) = v132;
            void *v131 = v0;
            v131[1] = sub_10019C8A0;
            uint64_t v158 = v150;
            return (id)sub_100248640(v0 + 136, v0 + 144, 0xD000000000000013, 0x80000001003B4530, (uint64_t)&unk_1004786B8, v129, v152, v132);
          }
        }
        else
        {
          __break(1u);
        }
        return result;
      }
    }
    unint64_t v72 = (void *)(v0 + 72);
    id v73 = *(void **)(v0 + 264);
    v141(*(void *)(v0 + 304), v143, *(void *)(v0 + 280));
    id v74 = v73;
    uint64_t v75 = Logger.logObject.getter();
    os_log_type_t v76 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v75, v76))
    {
      os_log_type_t v145 = v76;
      int64_t v77 = *(char **)(v0 + 264);
      uint64_t v78 = swift_slowAlloc();
      v139 = (void *)swift_slowAlloc();
      v155[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v78 = 136315906;
      uint64_t v79 = _typeName(_:qualified:)();
      *(void *)(v0 + 80) = sub_10018A9E0(v79, v80, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 12) = 2080;
      if (*(void *)&v77[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        uint64_t v81 = 0x646F50656D6F48;
      }
      else {
        uint64_t v81 = 7496003;
      }
      if (*(void *)&v77[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        unint64_t v82 = 0xE700000000000000;
      }
      else {
        unint64_t v82 = 0xE300000000000000;
      }
      *(void *)(v0 + 88) = sub_10018A9E0(v81, v82, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 22) = 2080;
      *(void *)(v0 + 96) = sub_10018A9E0(0xD000000000000017, 0x80000001003B44B0, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v78 + 32) = 2112;
      id v83 = [v54 sharedCenter];
      id v84 = [v83 localActiveIdentity];

      if (v84) {
        *(void *)(v0 + 112) = v84;
      }
      else {
        *(void *)(v0 + 104) = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v88 = v148;
      uint64_t v97 = *(void *)(v0 + 304);
      uint64_t v98 = *(void *)(v0 + 280);
      void *v139 = v84;
      _os_log_impl((void *)&_mh_execute_header, v75, v145, "[%s(%s)] %s Can't request to join with no display name. Current identity: %@", (uint8_t *)v78, 0x2Au);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v28(v97, v98);
      unint64_t v72 = (void *)(v0 + 72);
    }
    else
    {
      uint64_t v85 = *(void *)(v0 + 304);
      uint64_t v86 = *(void *)(v0 + 280);
      uint64_t v87 = *(void **)(v0 + 264);

      v28(v85, v86);
      uint64_t v88 = v148;
    }
    type metadata accessor for MRGroupSessionError(0);
    uint64_t v100 = v99;
    *unint64_t v72 = 4;
    uint64_t v101 = sub_1001A3F88(&qword_1004786A0, type metadata accessor for MRGroupSessionError);
    sub_1002483C4((uint64_t)v72, 0xD000000000000022, 0x80000001003B44D0, 0, v100, v101);
    swift_willThrow();
    sub_10018FE9C(v88, v146);
  }
  else
  {
    if (qword_10047E8C0 != -1) {
      swift_once();
    }
    v149 = (void *)(v0 + 24);
    uint64_t v30 = *(void *)(v0 + 288);
    uint64_t v29 = *(void *)(v0 + 296);
    uint64_t v31 = *(void *)(v0 + 280);
    uint64_t v33 = *(void **)(v0 + 256);
    uint64_t v32 = *(void **)(v0 + 264);
    uint64_t v34 = sub_10018A9A8(v31, (uint64_t)qword_10047E8C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v29, v34, v31);
    id v35 = v32;
    id v36 = v33;
    id v37 = v35;
    id v38 = v36;
    id v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    BOOL v41 = os_log_type_enabled(v39, v40);
    uint64_t v43 = *(void *)(v0 + 288);
    uint64_t v42 = *(void *)(v0 + 296);
    uint64_t v44 = *(void *)(v0 + 280);
    if (v41)
    {
      uint64_t v144 = *(void *)(v0 + 296);
      uint64_t v147 = *(void *)(v0 + 280);
      uint64_t v45 = *(char **)(v0 + 264);
      v140 = *(void **)(v0 + 256);
      uint64_t v46 = swift_slowAlloc();
      v137 = (void *)swift_slowAlloc();
      v155[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315906;
      uint64_t v47 = _typeName(_:qualified:)();
      *(void *)(v0 + 32) = sub_10018A9E0(v47, v48, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      if (*(void *)&v45[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        uint64_t v49 = 0x646F50656D6F48;
      }
      else {
        uint64_t v49 = 7496003;
      }
      if (*(void *)&v45[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        unint64_t v50 = 0xE700000000000000;
      }
      else {
        unint64_t v50 = 0xE300000000000000;
      }
      *(void *)(v0 + 40) = sub_10018A9E0(v49, v50, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 22) = 2080;
      *(void *)(v0 + 48) = sub_10018A9E0(0xD000000000000017, 0x80000001003B44B0, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 32) = 2114;
      *(void *)(v0 + 56) = v140;
      id v51 = v140;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v137 = v140;

      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[%s(%s)] %s Token does not contain invitation: %{public}@", (uint8_t *)v46, 0x2Au);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v144, v147);
    }
    else
    {
      uint64_t v67 = *(void **)(v0 + 256);
      unint64_t v68 = *(void **)(v0 + 264);

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
    }
    type metadata accessor for MRGroupSessionError(0);
    uint64_t v70 = v69;
    void *v149 = 12;
    uint64_t v71 = sub_1001A3F88(&qword_1004786A0, type metadata accessor for MRGroupSessionError);
    sub_1002483C4((uint64_t)v149, 0xD000000000000021, 0x80000001003B4480, 0, v70, v71);
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v102 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v102();
}

uint64_t sub_10019C070(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 416);
  *(void *)(*(void *)v1 + 432) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_10019C1B8, 0, 0);
}

uint64_t sub_10019C1B8()
{
  uint64_t v61 = v0;
  *(void *)(v0 + 216) = *(void *)(v0 + 432);
  id v1 = [*(id *)(v0 + 256) sharedSecret];
  if (v1)
  {
    uint64_t v2 = v1;
    Swift::Int v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::Int v5 = v4;

    sub_10000DDD8(v60, v3, v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = (uint64_t *)(v0 + 216);
  }
  else
  {
    uint64_t v6 = (uint64_t *)(v0 + 432);
  }
  uint64_t v7 = *(void **)(v0 + 408);
  id v8 = sub_1001A2EA8(*v6);
  swift_bridgeObjectRelease();
  sub_10019CF6C((uint64_t)v8);
  swift_release();
  id v9 = objc_allocWithZone((Class)NSMutableArray);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithArray:isa];

  [v7 setOobKeys:v11];
  uint64_t v12 = *(void *)(v0 + 392);
  long long v58 = *(_OWORD *)(v0 + 336);
  type metadata accessor for MRGroupSessionError(0);
  uint64_t v14 = v13;
  *(void *)(v0 + 128) = 12;
  uint64_t v15 = swift_task_alloc();
  long long v16 = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v15 + 16) = v58;
  *(void *)(v15 + 32) = v12;
  *(_OWORD *)(v15 + 40) = v16;
  uint64_t v17 = sub_100013A80(&qword_1004786A8);
  uint64_t v18 = sub_1001A3F88(&qword_1004786A0, type metadata accessor for MRGroupSessionError);
  sub_100248514(v0 + 128, 0xD000000000000022, 0x80000001003B4500, (uint64_t)sub_1001A3DF0, v15, v14, v17, v18);
  uint64_t v19 = *(void **)(v0 + 408);
  uint64_t v56 = v14;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
  uint64_t v59 = v18;
  uint64_t v21 = *(void *)(v0 + 352);
  uint64_t v22 = *(void *)(v0 + 320);
  uint64_t v23 = *(void *)(v0 + 280);
  unint64_t v24 = *(void **)(v0 + 264);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = *(void *)(v0 + 120);
  *(void *)(v0 + 440) = v25;
  v20(v22, v21, v23);
  id v26 = v24;
  id v27 = v19;
  id v28 = v26;
  id v29 = v27;
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.info.getter();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v33 = *(void **)(v0 + 408);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v0 + 376);
  uint64_t v35 = *(void *)(v0 + 320);
  uint64_t v36 = *(void *)(v0 + 280);
  if (v32)
  {
    uint64_t v57 = *(void *)(v0 + 280);
    id v37 = *(char **)(v0 + 264);
    uint64_t v54 = v25;
    uint64_t v55 = *(void *)(v0 + 320);
    uint64_t v38 = swift_slowAlloc();
    id v39 = (void *)swift_slowAlloc();
    v60[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315650;
    os_log_type_t type = v31;
    uint64_t v40 = _typeName(_:qualified:)();
    *(void *)(v0 + 192) = sub_10018A9E0(v40, v41, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    if (*(void *)&v37[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v42 = 0x646F50656D6F48;
    }
    else {
      uint64_t v42 = 7496003;
    }
    if (*(void *)&v37[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v43 = 0xE700000000000000;
    }
    else {
      unint64_t v43 = 0xE300000000000000;
    }
    *(void *)(v0 + 200) = sub_10018A9E0(v42, v43, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 22) = 2112;
    *(void *)(v0 + 208) = v33;
    id v44 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v39 = v33;

    _os_log_impl((void *)&_mh_execute_header, v30, type, "[%s(%s)] Requesting to join session with inner request: %@", (uint8_t *)v38, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v25 = v54;
    swift_slowDealloc();

    v34(v55, v57);
    uint64_t v45 = (long long *)(v0 + 264);
  }
  else
  {
    uint64_t v45 = (long long *)(v0 + 264);
    uint64_t v46 = *(void **)(v0 + 264);

    v34(v35, v36);
  }
  uint64_t v47 = *(void *)(v0 + 256);
  *(void *)(v0 + 144) = 6;
  uint64_t v48 = swift_task_alloc();
  *(void *)(v0 + 448) = v48;
  long long v49 = *v45;
  *(void *)(v48 + 16) = v47;
  *(void *)(v48 + 24) = v25;
  *(_OWORD *)(v48 + 32) = v49;
  unint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v50;
  uint64_t v51 = type metadata accessor for NearbyGroup();
  *(void *)(v0 + 464) = v51;
  *unint64_t v50 = v0;
  v50[1] = sub_10019C8A0;
  uint64_t v63 = v59;
  return sub_100248640(v0 + 136, v0 + 144, 0xD000000000000013, 0x80000001003B4530, (uint64_t)&unk_1004786B8, v48, v56, v51);
}

uint64_t sub_10019C8A0()
{
  *(void *)(*(void *)v1 + 472) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10019CE70;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10019C9F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10019C9F0()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void **)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 136);
  (*(void (**)(void, void, void))(v0 + 360))(*(void *)(v0 + 312), *(void *)(v0 + 352), *(void *)(v0 + 280));
  id v3 = v1;
  swift_retain_n();
  id v4 = v3;
  Swift::Int v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v30 = *(void *)(v0 + 312);
    os_log_type_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 376);
    uint64_t v29 = *(void *)(v0 + 280);
    uint64_t v7 = *(char **)(v0 + 264);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315906;
    uint64_t v9 = _typeName(_:qualified:)();
    *(void *)(v0 + 152) = sub_10018A9E0(v9, v10, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    if (*(void *)&v7[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v11 = 0x646F50656D6F48;
    }
    else {
      uint64_t v11 = 7496003;
    }
    if (*(void *)&v7[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v12 = 0xE700000000000000;
    }
    else {
      unint64_t v12 = 0xE300000000000000;
    }
    *(void *)(v0 + 160) = sub_10018A9E0(v11, v12, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 22) = 2080;
    *(void *)(v0 + 168) = sub_10018A9E0(0xD000000000000017, 0x80000001003B44B0, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 32) = 2080;
    *(void *)(v0 + 176) = v2;
    sub_1001A3F88((unint64_t *)&unk_1004786C0, (void (*)(uint64_t))&type metadata accessor for NearbyGroup);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 184) = sub_10018A9E0(v13, v14, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%s(%s)] %s Successfully joined NearbyGroup: %s", (uint8_t *)v8, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v31(v30, v29);
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 376);
    uint64_t v16 = *(void *)(v0 + 312);
    uint64_t v17 = *(void *)(v0 + 280);
    uint64_t v18 = *(void **)(v0 + 264);

    swift_release_n();
    v15(v16, v17);
  }
  uint64_t v19 = *(void **)(v0 + 408);
  uint64_t v20 = *(void **)(v0 + 384);
  uint64_t v22 = *(void *)(v0 + 336);
  unint64_t v21 = *(void *)(v0 + 344);
  uint64_t v23 = *(void *)(v0 + 256);
  type metadata accessor for MRDNearbyGroup();
  uint64_t v24 = swift_retain();
  id v25 = sub_1001BBA90(v24);
  id v26 = [objc_allocWithZone((Class)MRDGroupSessionJoinResponse) initWithNearbyGroup:v25 publicSigningKeyData:0 joinToken:v23];

  swift_release();
  swift_release();

  sub_10018FE9C(v22, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v27 = *(uint64_t (**)(id))(v0 + 8);
  return v27(v26);
}

uint64_t sub_10019CE70()
{
  uint64_t v1 = *(void **)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 336);
  unint64_t v2 = *(void *)(v0 + 344);

  sub_10018FE9C(v3, v2);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void *sub_10019CF6C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_1001A13FC(0, v1, 0);
    unint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001A13FC(0, v2[2] + 1, 1);
        unint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_1001A13FC(v5 > 1, v6 + 1, 1);
        unint64_t v2 = v9;
      }
      v4 += 16;
      v2[2] = v6 + 1;
      sub_10018FF5C(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_10019D094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = a4;
  v5[24] = a5;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  sub_100013A80(&qword_100478360);
  v5[25] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v5[26] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[27] = v7;
  v5[28] = *(void *)(v7 + 64);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v5[31] = v8;
  v5[32] = *(void *)(v8 - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  return _swift_task_switch(sub_10019D210, 0, 0);
}

uint64_t sub_10019D210()
{
  id v1 = [*(id *)(v0 + 168) sharedSecret];
  if (v1)
  {

    unint64_t v2 = (void **)&kMREventJoinSessionModeWHAAutoJoin;
  }
  else
  {
    unint64_t v2 = (void **)&kMREventJoinSessionModeQRCode;
  }
  uint64_t v3 = *v2;
  *(void *)(v0 + 280) = *v2;
  uint64_t v4 = (void *)kMREventGroupSessionJoinRequestSent;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v0 + 48) = sub_1001A4008;
  *(void *)(v0 + 56) = v5;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_10019A7F4;
  *(void *)(v0 + 40) = &unk_100420908;
  uint64_t v6 = _Block_copy((const void *)(v0 + 16));
  id v7 = v3;
  id v8 = v4;
  swift_release();
  MRAnalyticsSendEvent();
  _Block_release(v6);

  uint64_t v11 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of InvitationRequest.requestApproval()
                          + async function pointer to dispatch thunk of InvitationRequest.requestApproval());
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_10019D3BC;
  return v11();
}

uint64_t sub_10019D3BC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 296) = a1;
  *(void *)(v3 + 304) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_10019E03C;
  }
  else {
    uint64_t v4 = sub_10019D4D0;
  }
  return _swift_task_switch(v4, 0, 0);
}

id sub_10019D4D0()
{
  id v83 = v0;
  uint64_t v1 = &qword_10047E000;
  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  unint64_t v2 = (void *)v0[37];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[32];
  uint64_t v6 = (void *)v0[23];
  uint64_t v7 = sub_10018A9A8(v4, (uint64_t)qword_10047E8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v7, v4);
  id v8 = v6;
  id v9 = v2;
  id v10 = v8;
  id v11 = v9;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = (void *)v0[37];
  uint64_t v16 = v0[34];
  uint64_t v17 = v0[31];
  uint64_t v18 = v0[32];
  if (v14)
  {
    uint64_t v79 = v0[34];
    uint64_t v19 = (char *)v0[23];
    uint64_t v20 = swift_slowAlloc();
    os_log_type_t v76 = (void *)swift_slowAlloc();
    v82[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315650;
    uint64_t v78 = v17;
    uint64_t v21 = _typeName(_:qualified:)();
    v0[17] = sub_10018A9E0(v21, v22, v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    if (*(void *)&v19[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v23 = 0x646F50656D6F48;
    }
    else {
      uint64_t v23 = 7496003;
    }
    if (*(void *)&v19[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v24 = 0xE700000000000000;
    }
    else {
      unint64_t v24 = 0xE300000000000000;
    }
    v0[18] = sub_10018A9E0(v23, v24, v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2112;
    v0[19] = v15;
    id v25 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v76 = v15;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%s(%s)] Got join response: %@", (uint8_t *)v20, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = &qword_10047E000;
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v79, v78);
  }
  else
  {
    id v26 = (void *)v0[23];

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  id v27 = (void *)v0[37];
  id v28 = (void *)kMREventGroupSessionJoinResponseReceived;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v27;
  v0[12] = sub_1001A4078;
  v0[13] = v29;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_10019A7F4;
  v0[11] = &unk_100420958;
  uint64_t v30 = _Block_copy(v0 + 8);
  v27;
  id v31 = v28;
  swift_release();
  MRAnalyticsSendEvent();
  _Block_release(v30);

  InvitationJoinResponse.sessionIdentifier.getter();
  if (!v32) {
    goto LABEL_15;
  }
  uint64_t v33 = v0[26];
  uint64_t v34 = v0[27];
  uint64_t v35 = v0[25];
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v35, 1, v33) == 1)
  {
    sub_100009A08(v0[25], &qword_100478360);
LABEL_15:
    uint64_t v36 = (void *)v0[37];
    id v37 = (void *)v0[35];
    sub_1001A4104();
    swift_allocError();
    unsigned char *v38 = 1;
    swift_willThrow();

    if (v1[280] != -1) {
      swift_once();
    }
    uint64_t v40 = v0[32];
    uint64_t v39 = v0[33];
    uint64_t v41 = v0[31];
    uint64_t v42 = (void *)v0[23];
    uint64_t v43 = sub_10018A9A8(v41, (uint64_t)qword_10047E8C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v43, v41);
    id v44 = v42;
    swift_errorRetain();
    id v45 = v44;
    swift_errorRetain();
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    BOOL v48 = os_log_type_enabled(v46, v47);
    uint64_t v49 = v0[32];
    uint64_t v50 = v0[33];
    uint64_t v51 = v0[31];
    if (v48)
    {
      aBlock = (void *)v0[33];
      uint64_t v52 = (char *)v0[23];
      uint64_t v80 = v0[31];
      uint64_t v53 = swift_slowAlloc();
      os_log_type_t type = (void *)swift_slowAlloc();
      v82[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315650;
      uint64_t v54 = _typeName(_:qualified:)();
      v0[16] = sub_10018A9E0(v54, v55, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2080;
      if (*(void *)&v52[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        uint64_t v56 = 0x646F50656D6F48;
      }
      else {
        uint64_t v56 = 7496003;
      }
      if (*(void *)&v52[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
        unint64_t v57 = 0xE700000000000000;
      }
      else {
        unint64_t v57 = 0xE300000000000000;
      }
      v0[14] = sub_10018A9E0(v56, v57, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 22) = 2112;
      swift_errorRetain();
      uint64_t v58 = _swift_stdlib_bridgeErrorToNSError();
      v0[15] = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t type = v58;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "[%s(%s)] failed to request access, reason: %@", (uint8_t *)v53, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(void *, uint64_t))(v49 + 8))(aBlock, v80);
    }
    else
    {
      uint64_t v59 = (void *)v0[23];

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v51);
    }
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v60 = (uint64_t (*)(void))v0[1];
    return (id)v60();
  }
  uint64_t v62 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0[27] + 32);
  v62(v0[30], v0[25], v0[26]);
  id result = [self currentSettings];
  if (result)
  {
    uint64_t v63 = result;
    uint64_t v65 = v0[29];
    uint64_t v64 = v0[30];
    uint64_t v66 = v0[27];
    uint64_t v67 = v0[26];
    [result groupSessionNearbyGroupJoinTimeout];

    uint64_t v68 = static Duration.seconds(_:)();
    uint64_t v70 = v69;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v65, v64, v67);
    unint64_t v71 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    uint64_t v72 = swift_allocObject();
    v0[39] = v72;
    v62(v72 + v71, v65, v67);
    id v73 = (void *)swift_task_alloc();
    v0[40] = v73;
    uint64_t v74 = type metadata accessor for NearbyGroup();
    *id v73 = v0;
    v73[1] = sub_10019DE34;
    uint64_t v75 = v0[20];
    return (id)withTimeout<A>(duration:_:)(v75, v68, v70, (uint64_t)&unk_1004786E8, v72, v74);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10019DE34()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    unint64_t v2 = sub_10019E3E8;
  }
  else {
    unint64_t v2 = sub_10019DF68;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10019DF68()
{
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10019E03C()
{
  uint64_t v28 = v0;

  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v4 = *(void **)(v0 + 184);
  uint64_t v5 = sub_10018A9A8(v3, (uint64_t)qword_10047E8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  id v6 = v4;
  swift_errorRetain();
  id v7 = v6;
  swift_errorRetain();
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v12 = *(void *)(v0 + 256);
  uint64_t v11 = *(void *)(v0 + 264);
  uint64_t v13 = *(void *)(v0 + 248);
  if (v10)
  {
    uint64_t v26 = *(void *)(v0 + 264);
    BOOL v14 = *(char **)(v0 + 184);
    uint64_t v25 = *(void *)(v0 + 248);
    uint64_t v15 = swift_slowAlloc();
    unint64_t v24 = (void *)swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315650;
    uint64_t v16 = _typeName(_:qualified:)();
    *(void *)(v0 + 128) = sub_10018A9E0(v16, v17, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    if (*(void *)&v14[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v18 = 0x646F50656D6F48;
    }
    else {
      uint64_t v18 = 7496003;
    }
    if (*(void *)&v14[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v19 = 0xE700000000000000;
    }
    else {
      unint64_t v19 = 0xE300000000000000;
    }
    *(void *)(v0 + 112) = sub_10018A9E0(v18, v19, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v15 + 22) = 2112;
    swift_errorRetain();
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 120) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v24 = v20;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[%s(%s)] failed to request access, reason: %@", (uint8_t *)v15, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v26, v25);
  }
  else
  {
    uint64_t v21 = *(void **)(v0 + 184);

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_10019E3E8()
{
  uint64_t v32 = v0;
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  uint64_t v6 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 248);
  id v8 = *(void **)(v0 + 184);
  uint64_t v9 = sub_10018A9A8(v7, (uint64_t)qword_10047E8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9, v7);
  id v10 = v8;
  swift_errorRetain();
  id v11 = v10;
  swift_errorRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v16 = *(void *)(v0 + 256);
  uint64_t v15 = *(void *)(v0 + 264);
  uint64_t v17 = *(void *)(v0 + 248);
  if (v14)
  {
    uint64_t v30 = *(void *)(v0 + 264);
    uint64_t v18 = *(char **)(v0 + 184);
    uint64_t v29 = *(void *)(v0 + 248);
    uint64_t v19 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315650;
    uint64_t v20 = _typeName(_:qualified:)();
    *(void *)(v0 + 128) = sub_10018A9E0(v20, v21, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (*(void *)&v18[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v22 = 0x646F50656D6F48;
    }
    else {
      uint64_t v22 = 7496003;
    }
    if (*(void *)&v18[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v23 = 0xE700000000000000;
    }
    else {
      unint64_t v23 = 0xE300000000000000;
    }
    *(void *)(v0 + 112) = sub_10018A9E0(v22, v23, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v19 + 22) = 2112;
    swift_errorRetain();
    uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 120) = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v28 = v24;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%s(%s)] failed to request access, reason: %@", (uint8_t *)v19, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v30, v29);
  }
  else
  {
    uint64_t v25 = *(void **)(v0 + 184);

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_10019E7BC(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  sub_100013A80(&qword_100478360);
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_100013A80(&qword_1004786F0);
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v5 = sub_100013A80(&qword_1004786F8);
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  return _swift_task_switch(sub_10019E97C, 0, 0);
}

uint64_t sub_10019E97C()
{
  uint64_t v1 = v0;
  os_log_type_t v13 = v0 + 2;
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v6 = v0[8];
  uint64_t v8 = v1[6];
  uint64_t v7 = v1[7];
  type metadata accessor for NearbyGroup();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v1[18] = v9;
  v1[19] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v5, v8, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v5, 0, 1, v7);
  static NearbyGroup.groups(service:identifier:)();
  sub_100009A08(v5, &qword_100478360);
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  id v10 = (void *)swift_task_alloc();
  v1[20] = v10;
  void *v10 = v1;
  v10[1] = sub_10019EB08;
  uint64_t v11 = v1[15];
  return AsyncStream.Iterator.next(isolation:)(v13, 0, 0, v11);
}

uint64_t sub_10019EB08()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10019EC04, 0, 0);
}

uint64_t sub_10019EC04()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    if (qword_10047E8C0 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v6 = type metadata accessor for Logger();
    sub_10018A9A8(v6, (uint64_t)qword_10047E8C8);
    v2(v3, v5, v4);
    swift_retain_n();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.info.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v11 = *(void *)(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v13 = *(void *)(v0 + 80);
    if (v9)
    {
      uint64_t v33 = *(void *)(v0 + 120);
      uint64_t v34 = *(void *)(v0 + 136);
      uint64_t v15 = *(void *)(v0 + 64);
      uint64_t v14 = *(void *)(v0 + 72);
      uint64_t v16 = *(void *)(v0 + 56);
      uint64_t v31 = *(void *)(v0 + 80);
      uint64_t v17 = swift_slowAlloc();
      v35[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      os_log_type_t type = v8;
      NearbyGroup.id.getter();
      sub_1001A3F88(&qword_100478700, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
      log = v7;
      unint64_t v20 = v19;
      uint64_t v29 = v11;
      unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v21(v14, v16);
      *(void *)(v0 + 24) = sub_10018A9E0(v18, v20, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 32) = sub_10018A9E0(v22, v23, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v21(v31, v16);
      _os_log_impl((void *)&_mh_execute_header, log, type, "Observed group: %s, waiting for %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v33);
    }
    else
    {
      uint64_t v26 = *(void *)(v0 + 56);
      uint64_t v27 = *(void *)(v0 + 64);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v13, v26);
      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    **(void **)(v0 + 40) = v1;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
    sub_1001A4104();
    swift_allocError();
    *uint64_t v24 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v25();
}

uint64_t sub_10019F1A8(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  a3;
  uint64_t v7 = (void *)swift_task_alloc();
  void v3[5] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10019F26C;
  return sub_10019AC90((uint64_t)v6);
}

uint64_t sub_10019F26C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  id v6 = *(void **)(*v2 + 24);
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  uint64_t v9 = *(void (***)(void, void, void))(v5 + 32);
  if (v3)
  {
    uint64_t v10 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    ((void (**)(void, void, void *))v9)[2](v9, 0, v10);

    _Block_release(v9);
  }
  else
  {
    ((void (**)(void, void *, void))v9)[2](v9, a1, 0);
    _Block_release(v9);
  }
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

void sub_10019F424(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v82 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v78 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v78 - v11;
  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_10018A9A8(v4, (uint64_t)qword_10047E8C8);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v87 = v13;
  uint64_t v84 = v14;
  uint64_t v85 = (void *)(v5 + 16);
  ((void (*)(char *))v14)(v12);
  id v15 = v2;
  id v16 = a1;
  uint64_t v17 = (char *)v15;
  id v18 = v16;
  unint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v22 = &qword_100478000;
  uint64_t v88 = v5;
  uint64_t v81 = v10;
  if (v21)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v79 = (void *)swift_slowAlloc();
    uint64_t v80 = (void (*)(char *, uint64_t))swift_slowAlloc();
    uint64_t v90 = (uint64_t)v80;
    *(_DWORD *)uint64_t v23 = 136315906;
    uint64_t v83 = v4;
    uint64_t v24 = _typeName(_:qualified:)();
    uint64_t v89 = sub_10018A9E0(v24, v25, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    if (*(void *)&v17[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v26 = 0x646F50656D6F48;
    }
    else {
      uint64_t v26 = 7496003;
    }
    if (*(void *)&v17[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v27 = 0xE700000000000000;
    }
    else {
      unint64_t v27 = 0xE300000000000000;
    }
    uint64_t v89 = sub_10018A9E0(v26, v27, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    uint64_t v89 = sub_10018A9E0(0xD000000000000033, 0x80000001003B4440, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 32) = 2114;
    uint64_t v89 = (uint64_t)v18;
    id v28 = v18;
    uint64_t v22 = &qword_100478000;
    uint64_t v4 = v83;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v79 = v18;

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%s(%s)] %s - %{public}@", (uint8_t *)v23, 0x2Au);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v88;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
  v29(v12, v4);
  sub_10018FE08(0, &qword_100478698);
  uint64_t v30 = *(void *)&v17[v22[170]];
  id v31 = v18;
  id v32 = sub_10019FFFC(v31, v30);
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = __chkstk_darwin(v32);
    *(&v78 - 2) = (uint64_t)v17;
    *(&v78 - 1) = v34;
    sub_100289944((void (*)(void))sub_1001A3BF8);
    if (v90 == 1)
    {
      uint64_t v80 = v29;
      id v35 = [v33 identifier];
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v38 = v37;

      __chkstk_darwin(v39);
      *(&v78 - 6) = (uint64_t)v17;
      *(&v78 - 5) = v36;
      *(&v78 - 4) = v38;
      *(&v78 - 3) = (uint64_t)v31;
      *(&v78 - 2) = (uint64_t)v33;
      sub_100289944((void (*)(void))sub_1001A3CD4);
      swift_bridgeObjectRelease();
      uint64_t v40 = v81;
      v84(v81, v87, v4);
      uint64_t v41 = v17;
      id v42 = v33;
      uint64_t v43 = v41;
      uint64_t v44 = v4;
      id v45 = v43;
      id v46 = v42;
      os_log_type_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v85 = (void *)swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        uint64_t v90 = v87;
        *(_DWORD *)uint64_t v49 = 136315650;
        uint64_t v50 = _typeName(_:qualified:)();
        uint64_t v89 = sub_10018A9E0(v50, v51, &v90);
        uint64_t v83 = v44;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 12) = 2080;
        if (v30 == 1) {
          uint64_t v52 = 0x646F50656D6F48;
        }
        else {
          uint64_t v52 = 7496003;
        }
        if (v30 == 1) {
          unint64_t v53 = 0xE700000000000000;
        }
        else {
          unint64_t v53 = 0xE300000000000000;
        }
        uint64_t v89 = sub_10018A9E0(v52, v53, &v90);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 22) = 2114;
        uint64_t v89 = (uint64_t)v46;
        id v54 = v46;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v85 = v33;

        _os_log_impl((void *)&_mh_execute_header, v47, v48, "[%s(%s)] Notifying of discovered session - %{public}@", (uint8_t *)v49, 0x20u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v55 = v81;
        uint64_t v56 = v83;
      }
      else
      {

        unint64_t v55 = v40;
        uint64_t v56 = v44;
      }
      v80(v55, v56);
      if (*(void *)&v45[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_delegate])
      {
        [(id)swift_unknownObjectRetain() listener:v45 didDiscoverSession:v46];
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v46 = v33;
      id v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v76 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v75 = 138543362;
        uint64_t v90 = (uint64_t)v46;
        id v77 = v46;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *os_log_type_t v76 = v33;

        _os_log_impl((void *)&_mh_execute_header, v73, v74, "Already notified for session: %{public}@. Ignoring.", v75, 0xCu);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }
    }
  }
  else
  {
    unint64_t v57 = v82;
    v84(v82, v87, v4);
    uint64_t v58 = v17;
    id v59 = v31;
    uint64_t v60 = v58;
    id v61 = v59;
    uint64_t v62 = Logger.logObject.getter();
    uint64_t v63 = v4;
    os_log_type_t v64 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v62, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v80 = v29;
      uint64_t v66 = v65;
      uint64_t v67 = (void *)swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      uint64_t v90 = v87;
      *(_DWORD *)uint64_t v66 = 136315906;
      uint64_t v68 = _typeName(_:qualified:)();
      uint64_t v89 = sub_10018A9E0(v68, v69, &v90);
      uint64_t v83 = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2080;
      if (v30 == 1) {
        uint64_t v70 = 0x646F50656D6F48;
      }
      else {
        uint64_t v70 = 7496003;
      }
      if (v30 == 1) {
        unint64_t v71 = 0xE700000000000000;
      }
      else {
        unint64_t v71 = 0xE300000000000000;
      }
      uint64_t v89 = sub_10018A9E0(v70, v71, &v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 22) = 2080;
      uint64_t v89 = sub_10018A9E0(0xD000000000000033, 0x80000001003B4440, &v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v66 + 32) = 2114;
      uint64_t v89 = (uint64_t)v61;
      id v72 = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v67 = v61;

      _os_log_impl((void *)&_mh_execute_header, v62, v64, "[%s(%s)] %s Failed to parse advertisement: %{public}@", (uint8_t *)v66, 0x2Au);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v80(v82, v83);
    }
    else
    {

      v29(v57, v63);
    }
  }
}

id sub_10019FFFC(void *a1, uint64_t a2)
{
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v5 = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v6 = NearbyAdvertisement.contactID.getter();
  if (v7)
  {
    uint64_t v8 = sub_1001F2904(v6, v7);
    if (v9 == 1) {
      goto LABEL_4;
    }
    uint64_t v12 = v8;
    uint64_t v13 = v9;
    uint64_t v14 = v10;
    unint64_t v15 = v11;
    swift_bridgeObjectRetain();
    sub_1001A3968(v12, v13, v14, v15);
    if (!v13) {
      goto LABEL_4;
    }
LABEL_9:
    dispatch thunk of NearbyAdvertisement.deviceColor.getter();
    uint64_t v49 = v5;
    if (v26)
    {
      uint64_t v30 = 0;
    }
    else
    {
      Class isa = Int._bridgeToObjectiveC()().super.super.isa;
      id v28 = [(objc_class *)isa stringValue];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;
    }
    uint64_t v32 = NearbyAdvertisement.userInfo.getter();
    if (v33 >> 60 == 15)
    {
      uint64_t v34 = dispatch thunk of NearbyAdvertisement.deviceModel.getter();
      if (v35) {
        unsigned __int8 v36 = sub_1001A37D4(v34, v35);
      }
      else {
        unsigned __int8 v36 = 0;
      }
    }
    else
    {
      uint64_t v37 = v32;
      unint64_t v38 = v33;
      unsigned __int8 v39 = sub_1001A36D0(v32, v33);
      unsigned __int8 v36 = sub_100279918(v39);
      sub_1001A3954(v37, v38);
    }
    dispatch thunk of NearbyAdvertisement.deviceModel.getter();
    uint64_t v41 = v40;
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (v41)
    {
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      if (v30)
      {
LABEL_21:
        NSString v44 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
LABEL_24:
        id v45 = [objc_allocWithZone((Class)MRGroupSessionHostInfo) initWithRouteType:v36 displayName:v42 modelIdentifier:v43 color:v44];

        id v46 = objc_allocWithZone(ObjCClassFromMetadata);
        NearbyAdvertisement.identifier.getter();
        NSString v47 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v31 = [v46 initWithIdentifier:v47 hostInfo:v45 source:a2];

        return v31;
      }
    }
    else
    {
      NSString v43 = 0;
      if (v30) {
        goto LABEL_21;
      }
    }
    NSString v44 = 0;
    goto LABEL_24;
  }
  NearbyAdvertisement.displayName.getter();
  if (v25) {
    goto LABEL_9;
  }
LABEL_4:
  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10018A9A8(v16, (uint64_t)qword_10047E8C8);
  id v17 = a1;
  id v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    BOOL v21 = (void *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v22 = _typeName(_:qualified:)();
    sub_10018A9E0(v22, v23, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2112;
    id v24 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v21 = v17;

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%s] Failed to resolve contact information for advertisement: %@", (uint8_t *)v20, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

void sub_1001A044C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v59 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v51 - v9;
  if (qword_10047E8C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10018A9A8(v5, (uint64_t)qword_10047E8C8);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v56 = v11;
  uint64_t v57 = v6 + 16;
  unint64_t v55 = v12;
  ((void (*)(char *))v12)(v10);
  id v13 = v2;
  id v14 = a1;
  unint64_t v15 = (char *)v13;
  id v16 = v14;
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.info.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v58 = v5;
  uint64_t v60 = v6;
  uint64_t v53 = ObjectType;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v52 = (void *)swift_slowAlloc();
    id v54 = (void *)swift_slowAlloc();
    id v63 = v54;
    *(_DWORD *)uint64_t v20 = 136315906;
    uint64_t v21 = _typeName(_:qualified:)();
    v62[0] = sub_10018A9E0(v21, v22, (uint64_t *)&v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    if (*(void *)&v15[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v23 = 0x646F50656D6F48;
    }
    else {
      uint64_t v23 = 7496003;
    }
    if (*(void *)&v15[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v24 = 0xE700000000000000;
    }
    else {
      unint64_t v24 = 0xE300000000000000;
    }
    v62[0] = sub_10018A9E0(v23, v24, (uint64_t *)&v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2080;
    v62[0] = sub_10018A9E0(0xD00000000000002DLL, 0x80000001003B4410, (uint64_t *)&v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 32) = 2114;
    v62[0] = (uint64_t)v16;
    id v25 = v16;
    uint64_t v5 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v52 = v16;

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%s(%s)] %s - %{public}@", (uint8_t *)v20, 0x2Au);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    char v26 = *(void (**)(char *, uint64_t))(v60 + 8);
    v26(v10, v5);
  }
  else
  {

    char v26 = *(void (**)(char *, uint64_t))(v6 + 8);
    v26(v10, v5);
  }
  uint64_t v27 = NearbyAdvertisement.identifier.getter();
  unint64_t v29 = v28;
  id v63 = 0;
  uint64_t v30 = (void *)__chkstk_darwin(v27);
  *(&v51 - 4) = (uint64_t)v15;
  *(&v51 - 3) = (uint64_t)v30;
  uint64_t v52 = v30;
  *(&v51 - 2) = v29;
  *(&v51 - 1) = (uint64_t)&v63;
  sub_100289944((void (*)(void))sub_1001A3A98);
  id v31 = v63;
  if (v63)
  {
    id v32 = v63;
    unint64_t v33 = v59;
    v55(v59, v56, v5);
  }
  else
  {
    id v54 = v26;
    uint64_t v34 = v5;
    sub_10018FE08(0, &qword_100478698);
    uint64_t v35 = *(void *)&v15[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source];
    id v36 = sub_10019FFFC(v16, v35);
    if (v36)
    {
      id v32 = v36;
    }
    else
    {
      NearbyAdvertisement.identifier.getter();
      id v37 = [objc_allocWithZone((Class)MRGroupSessionHostInfo) init];
      id v38 = objc_allocWithZone((Class)MRDiscoveredGroupSession);
      NSString v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v32 = [v38 initWithIdentifier:v39 hostInfo:v37 source:v35];
    }
    uint64_t v5 = v34;
    unint64_t v33 = v59;
    char v26 = (void (*)(char *, uint64_t))v54;
    v55(v59, v56, v34);
  }
  id v40 = v31;
  swift_bridgeObjectRetain();
  uint64_t v41 = v15;
  NSString v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    id v54 = v26;
    uint64_t v45 = v44;
    v62[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 136315650;
    uint64_t v46 = _typeName(_:qualified:)();
    uint64_t v61 = sub_10018A9E0(v46, v47, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2080;
    if (*(void *)&v41[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      uint64_t v48 = 0x646F50656D6F48;
    }
    else {
      uint64_t v48 = 7496003;
    }
    if (*(void *)&v41[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_source] == 1) {
      unint64_t v49 = 0xE700000000000000;
    }
    else {
      unint64_t v49 = 0xE300000000000000;
    }
    uint64_t v61 = sub_10018A9E0(v48, v49, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_10018A9E0((uint64_t)v52, v29, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "[%s(%s)] Notifying of lost session - %{public}s", (uint8_t *)v45, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(char *, uint64_t))v54)(v59, v58);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v26(v33, v5);
  }
  uint64_t v50 = *(void **)&v41[OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_delegate];
  if (v50) {
    [v50 listener:v41 didLoseSession:v32];
  }
}

void sub_1001A0C34(void *a1)
{
  sub_100013A80(&qword_100478688);
  sub_100289944((void (*)(void))sub_1001A39CC);
  if (a1)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    sub_1001A2F90(v2);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release();
    [a1 setDiscoveredGroupSessions:isa];

    uint64_t v4 = swift_bridgeObjectRetain();
    sub_1001A2F90(v4);
    swift_bridgeObjectRelease();
    Class v5 = Array._bridgeToObjectiveC()().super.isa;
    swift_release();
    [a1 setNotifiedGroupSessions:v5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001A0E04(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1001A36D0(a1, a2);
  sub_10018FE9C(a1, a2);
  return v4;
}

uint64_t sub_1001A0E48(uint64_t result)
{
  return result;
}

BOOL sub_1001A0E98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_1001A0EB0()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1001A0EF8()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1001A0F24()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_1001A0F68(uint64_t a1)
{
  uint64_t v2 = sub_1001A3F88((unint64_t *)&unk_100478850, type metadata accessor for MRGroupSessionError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1001A0FD4(uint64_t a1)
{
  uint64_t v2 = sub_1001A3F88((unint64_t *)&unk_100478850, type metadata accessor for MRGroupSessionError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1001A1040(uint64_t a1)
{
  uint64_t v2 = sub_1001A3F88(&qword_10047A370, type metadata accessor for MRGroupSessionError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

id sub_1001A10AC()
{
  return *v0;
}

uint64_t sub_1001A10B4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1001A10BC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001A10CC(uint64_t a1)
{
  uint64_t v2 = sub_1001A3F88(&qword_10047A370, type metadata accessor for MRGroupSessionError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_1001A1138(uint64_t a1)
{
  uint64_t v2 = sub_1001A3F88(&qword_10047A370, type metadata accessor for MRGroupSessionError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1001A11A4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1001A3F88(&qword_10047A370, type metadata accessor for MRGroupSessionError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_1001A1234()
{
  id v1 = *v0;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_1001A126C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001A3F88(&qword_10047A370, type metadata accessor for MRGroupSessionError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_1001A12E8()
{
  return Hasher._finalize()();
}

void *sub_1001A1348@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1001A1358(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1001A1364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001A3F88(&qword_10047A370, type metadata accessor for MRGroupSessionError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

BOOL sub_1001A13E8(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1001A13FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001A141C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001A141C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100013A80((uint64_t *)&unk_1004786D0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1001A158C(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!__CocoaSet.count.getter()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      type metadata accessor for NearbyAdvertisement();
      sub_1001A3F88(&qword_100478818, (void (*)(uint64_t))&type metadata accessor for NearbyAdvertisement);
      Set.Iterator.init(_cocoa:)();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v10 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v12 = v4;
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v12 = v4 + 1;
        if (!v15)
        {
          uint64_t v12 = v4 + 2;
          if (v4 + 2 >= v9) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 3;
            if (v4 + 3 >= v9) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v9) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v18 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v4 + 5;
                if (v4 + 5 >= v9) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v18 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_10018F864();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_36;
      }
      while (1)
      {
        id v17 = (void *)sub_1001A1FA8(v13);

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (__CocoaSet.Iterator.next()())
        {
          type metadata accessor for NearbyAdvertisement();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v19;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

Swift::Int sub_1001A1880(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100013A80(&qword_100478828);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for NearbyAdvertisement();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1001A2170();
          uint64_t v2 = v14;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

void *sub_1001A1A68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NearbyAdvertisement();
    sub_1001A3F88(&qword_100478818, (void (*)(uint64_t))&type metadata accessor for NearbyAdvertisement);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v46;
    uint64_t v4 = v47;
    uint64_t v6 = v48;
    int64_t v5 = v49;
    unint64_t v7 = v50;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v43 = v6;
  int64_t v44 = v5;
  unint64_t v45 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        uint64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        uint64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v44 = v5;
          unint64_t v45 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v42 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v42 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v42 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      uint64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = __CocoaSet.Iterator.next()();
    if (!v16
      || (uint64_t v39 = v16,
          type metadata accessor for NearbyAdvertisement(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          uint64_t v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_10018F864();
      return (void *)v2;
    }
LABEL_19:
    Swift::Int v17 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    type metadata accessor for NearbyAdvertisement();
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = static NSObject.== infix(_:_:)();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = static NSObject.== infix(_:_:)();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v41;
    uint64_t v6 = v43;
    int64_t v5 = v44;
    unint64_t v7 = v45;
  }
LABEL_47:

  char v31 = *(unsigned char *)(v2 + 32);
  unint64_t v32 = (unint64_t)((1 << v31) + 63) >> 6;
  size_t v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_1001A2410((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    uint64_t v35 = v34;
    swift_release();
    sub_10018F864();
  }
  else
  {
    id v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_1001A2410((unint64_t *)v36, v32, v2, v19, &v41);
    uint64_t v35 = v37;
    swift_release();
    sub_10018F864();
    swift_slowDealloc();
  }
  return (void *)v35;
}

uint64_t sub_1001A1FA8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_1001A29CC();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for NearbyAdvertisement();
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001A2B58();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_1001A2D04(v11);
  uint64_t *v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1001A2170()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013A80(&qword_100478828);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    int64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

void sub_1001A2410(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a5;
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v38 = a3 + 56;
  while (2)
  {
    uint64_t v35 = v8;
    do
    {
      while (1)
      {
        if ((*v5 & 0x8000000000000000) == 0)
        {
          int64_t v10 = v5[3];
          unint64_t v9 = v5[4];
          if (v9)
          {
            uint64_t v11 = (v9 - 1) & v9;
            unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_7:
            unint64_t v13 = *(void **)(*(void *)(*v5 + 48) + 8 * v12);
            id v14 = v13;
            goto LABEL_8;
          }
          int64_t v27 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_47;
          }
          int64_t v28 = (unint64_t)(v5[2] + 64) >> 6;
          if (v27 >= v28)
          {
            unint64_t v13 = 0;
            uint64_t v11 = 0;
            goto LABEL_8;
          }
          uint64_t v29 = v5[1];
          unint64_t v30 = *(void *)(v29 + 8 * v27);
          if (v30)
          {
LABEL_22:
            uint64_t v11 = (v30 - 1) & v30;
            unint64_t v12 = __clz(__rbit64(v30)) + (v27 << 6);
            int64_t v10 = v27;
            goto LABEL_7;
          }
          if (v10 + 2 < v28)
          {
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 2));
            if (v30)
            {
              int64_t v27 = v10 + 2;
              goto LABEL_22;
            }
            if (v10 + 3 >= v28)
            {
              unint64_t v13 = 0;
              uint64_t v11 = 0;
              v10 += 2;
              goto LABEL_8;
            }
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 3));
            if (v30)
            {
              int64_t v27 = v10 + 3;
              goto LABEL_22;
            }
            int64_t v27 = v10 + 4;
            if (v10 + 4 >= v28)
            {
              unint64_t v13 = 0;
              uint64_t v11 = 0;
              v10 += 3;
LABEL_8:
              v5[3] = v10;
              v5[4] = v11;
              if (!v13) {
                goto LABEL_45;
              }
              goto LABEL_12;
            }
            unint64_t v30 = *(void *)(v29 + 8 * v27);
            if (v30) {
              goto LABEL_22;
            }
            int64_t v27 = v28 - 1;
            int64_t v33 = v10 + 5;
            while (v28 != v33)
            {
              unint64_t v30 = *(void *)(v29 + 8 * v33++);
              if (v30)
              {
                int64_t v27 = v33 - 1;
                goto LABEL_22;
              }
            }
          }
          unint64_t v13 = 0;
          uint64_t v11 = 0;
          int64_t v10 = v27;
          goto LABEL_8;
        }
        if (!__CocoaSet.Iterator.next()()
          || (type metadata accessor for NearbyAdvertisement(),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              unint64_t v13 = v39,
              swift_unknownObjectRelease(),
              !v39))
        {
LABEL_45:
          swift_retain();
          sub_1001A276C(a1, a2, v35, a3);
          return;
        }
LABEL_12:
        Swift::Int v15 = NSObject._rawHashValue(seed:)(*(void *)(a3 + 40));
        uint64_t v16 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v17 = v15 & ~v16;
        unint64_t v18 = v17 >> 6;
        uint64_t v19 = 1 << v17;
        if (((1 << v17) & *(void *)(v38 + 8 * (v17 >> 6))) == 0) {
          goto LABEL_3;
        }
        type metadata accessor for NearbyAdvertisement();
        id v20 = *(id *)(*(void *)(a3 + 48) + 8 * v17);
        char v21 = static NSObject.== infix(_:_:)();

        if (v21) {
          break;
        }
        uint64_t v22 = ~v16;
        for (unint64_t i = v17 + 1; ; unint64_t i = v24 + 1)
        {
          unint64_t v24 = i & v22;
          if (((*(void *)(v38 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0) {
            break;
          }
          id v25 = *(id *)(*(void *)(a3 + 48) + 8 * v24);
          char v26 = static NSObject.== infix(_:_:)();

          if (v26)
          {

            unint64_t v18 = v24 >> 6;
            uint64_t v19 = 1 << v24;
            goto LABEL_25;
          }
        }
LABEL_3:

        uint64_t v5 = a5;
      }

LABEL_25:
      unint64_t v31 = a1[v18];
      a1[v18] = v31 & ~v19;
      BOOL v32 = (v19 & v31) == 0;
      uint64_t v5 = a5;
    }
    while (v32);
    uint64_t v8 = v35 - 1;
    if (__OFSUB__(v35, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v35 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_1001A276C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100013A80(&qword_100478828);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  unint64_t v9 = (void *)result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1001A29CC()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_1001A1880(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    type metadata accessor for NearbyAdvertisement();
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_1001A2D04(v8);
      if (static NSObject.== infix(_:_:)())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

id sub_1001A2B58()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_100478828);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_1001A2D04(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            int64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *uint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    id result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void *sub_1001A2EA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100013A80(&qword_100478690);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1001A32D0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10018F864();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1001A2F90(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100013A80(&qword_100478690);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1001A34D0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10018F864();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void sub_1001A3078(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      type metadata accessor for NearbyAdvertisement();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  type metadata accessor for NearbyAdvertisement();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  int64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = static NSObject.== infix(_:_:)();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  unint64_t v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_1001A32D0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    BOOL v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    id result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001A34D0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    BOOL v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    id result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001A36D0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v3 = (int)a1;
      if ((int)a1 > a1 >> 32)
      {
        __break(1u);
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
      uint64_t v4 = __DataStorage._bytes.getter();
      if (!v4)
      {
LABEL_14:
        __DataStorage._length.getter();
        __break(1u);
LABEL_15:
        __DataStorage._length.getter();
        __break(1u);
        JUMPOUT(0x1001A37C4);
      }
      uint64_t v5 = v4;
      uint64_t v6 = __DataStorage._offset.getter();
      BOOL v7 = __OFSUB__(v3, v6);
      uint64_t v8 = v3 - v6;
      if (v7)
      {
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      __DataStorage._length.getter();
      return *(unsigned __int8 *)(v5 + v8);
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      swift_retain();
      swift_retain();
      uint64_t v10 = __DataStorage._bytes.getter();
      if (!v10) {
        goto LABEL_15;
      }
      uint64_t v11 = v10;
      uint64_t v12 = __DataStorage._offset.getter();
      BOOL v7 = __OFSUB__(v9, v12);
      uint64_t v13 = v9 - v12;
      if (v7) {
        goto LABEL_12;
      }
      __DataStorage._length.getter();
      uint64_t v2 = *(unsigned __int8 *)(v11 + v13);
      swift_release();
      swift_release();
      return v2;
    case 3uLL:
      return v2;
    default:
      return a1;
  }
}

uint64_t sub_1001A37D4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001003B4610
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001003B4630 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
  }
         || a1 == 0xD000000000000011 && a2 == 0x80000001003B4650
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    sub_1001A4624();
    char v5 = StringProtocol.contains<A>(_:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 11;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1001A3954(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10018FE9C(a1, a2);
  }
  return a1;
}

void sub_1001A3968(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1001A3954(a3, a4);
  }
}

void type metadata accessor for MRGroupSessionDiscoverySource(uint64_t a1)
{
}

uint64_t sub_1001A39CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(**(void **)(v3
                                                       + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_discoveredAdvertisements)
                                         + 192);
  uint64_t v5 = swift_retain();
  uint64_t v6 = v4(v5);
  swift_release();
  *a1 = v6;
  BOOL v7 = *(uint64_t (**)(uint64_t))(**(void **)(v3
                                                       + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_notifiedSessions)
                                         + 192);
  uint64_t v8 = swift_retain();
  uint64_t v9 = v7(v8);
  uint64_t result = swift_release();
  a1[1] = v9;
  return result;
}

uint64_t sub_1001A3A98()
{
  void (*v9)(void **__return_ptr, uint64_t *);
  void *v10;
  uint64_t v11;
  void (*v12)(void **, uint64_t *);
  uint64_t v14;
  uint64_t v15;
  void *v16;

  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void **)v0[5];
  uint64_t v5 = *(void *)(v2
                 + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_discoveredAdvertisements);
  unint64_t v15 = v3;
  unint64_t v16 = 0;
  int64_t v14 = v1;
  uint64_t v6 = *(void (**)(void **, uint64_t *))(*(void *)v5 + 216);
  swift_retain();
  swift_bridgeObjectRetain();
  v6(&v16, &v14);
  swift_release();
  uint64_t v7 = OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_notifiedSessions;
  uint64_t v8 = *(void *)(v2
                 + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_notifiedSessions);
  int64_t v14 = v1;
  unint64_t v15 = v3;
  uint64_t v9 = *(void (**)(void **__return_ptr, uint64_t *))(*(void *)v8 + 208);
  swift_bridgeObjectRetain();
  swift_retain();
  v9(&v16, &v14);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v10 = *v4;
  void *v4 = v16;

  uint64_t v11 = *(void *)(v2 + v7);
  unint64_t v15 = v3;
  unint64_t v16 = 0;
  int64_t v14 = v1;
  uint64_t v12 = *(void (**)(void **, uint64_t *))(*(void *)v11 + 216);
  swift_bridgeObjectRetain();
  swift_retain();
  v12(&v16, &v14);
  return swift_release();
}

void sub_1001A3BF8(BOOL *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 24);
  uint64_t v4 = *(void *)(*(void *)(v1 + 16)
                 + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_notifiedSessions);
  swift_retain();
  id v5 = [v3 identifier];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v10[0] = v6;
  v10[1] = v8;
  (*(void (**)(id *__return_ptr, void *))(*(void *)v4 + 208))(&v11, v10);
  swift_release();
  swift_bridgeObjectRelease();
  id v9 = v11;
  if (v11) {

  }
  *a1 = v9 == 0;
}

uint64_t sub_1001A3CD4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v3 = (void *)v0[5];
  id v5 = (void *)v0[6];
  uint64_t v6 = *(void *)(v1
                 + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_discoveredAdvertisements);
  uint64_t v14 = v4;
  unint64_t v15 = v3;
  uint64_t v13 = v2;
  uint64_t v7 = *(void (**)(void **, uint64_t *))(*(void *)v6 + 216);
  swift_retain();
  swift_bridgeObjectRetain();
  id v8 = v3;
  v7(&v15, &v13);
  swift_release();
  uint64_t v9 = *(void *)(v1
                 + OBJC_IVAR____TtC12mediaremotedP33_A89A4181BFB0A82ECB9159988E1E4AC136NearbySessionsListenerImplementation_notifiedSessions);
  uint64_t v14 = v4;
  unint64_t v15 = v5;
  uint64_t v13 = v2;
  uint64_t v10 = *(void (**)(void **, uint64_t *))(*(void *)v9 + 216);
  swift_bridgeObjectRetain();
  swift_retain();
  id v11 = v5;
  v10(&v15, &v13);
  return swift_release();
}

void type metadata accessor for MRGroupSessionError(uint64_t a1)
{
}

uint64_t sub_1001A3DF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v4 = *(void *)(v1 + 24);
  id v5 = [*(id *)(v1 + 48) data];
  if (v5)
  {
    uint64_t v6 = v5;
    static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_100013A80(&qword_1004786A8);
  swift_bridgeObjectRetain();
  sub_10018FE44(v3, v4);
  uint64_t result = InvitationRequest.__allocating_init(invitationData:displayName:userInfo:)();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1001A3EC8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_100013F84;
  return sub_10019D094(a1, v4, v5, v7, v6);
}

uint64_t sub_1001A3F88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A3FD0()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1001A4008()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_100013A80(&qword_100478708);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = v1;
  id v4 = v1;
  return sub_10019A6D8(inited);
}

unint64_t sub_1001A4078()
{
  sub_100013A80(&qword_100478708);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v1;
  InvitationJoinResponse.sessionIdentifier.getter();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  *(NSNumber *)(inited + 48) = Bool._bridgeToObjectiveC()();
  return sub_10019A6D8(inited);
}

unint64_t sub_1001A4104()
{
  unint64_t result = qword_10047E8E0;
  if (!qword_10047E8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047E8E0);
  }
  return result;
}

uint64_t sub_1001A4158()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001A41E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_10000D170;
  return sub_10019E7BC(a1, v5);
}

uint64_t sub_1001A42C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_10019938C(*(char **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1001A42E0()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001A4340(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  id v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_100013F84;
  return sub_10019987C(a1, v9, v10, v4, v5, v6, v7, v8);
}

void sub_1001A441C()
{
  if (!qword_100478748)
  {
    unint64_t v0 = type metadata accessor for InvitationRequest<>.Context();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100478748);
    }
  }
}

uint64_t sub_1001A4470()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10000D170;
  uint64_t v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_100478750 + dword_100478750);
  return v6(v2, v3, v4);
}

uint64_t sub_1001A452C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A4568()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100013F84;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_100478790 + dword_100478790);
  return v6(v2, v3, v4);
}

unint64_t sub_1001A4624()
{
  unint64_t result = qword_1004787B0;
  if (!qword_1004787B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004787B0);
  }
  return result;
}

uint64_t sub_1001A4678()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001A46B0()
{
  uint64_t v1 = sub_100013A80(&qword_1004787C8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001A47A4()
{
  uint64_t v2 = *(void *)(sub_100013A80(&qword_1004787C8) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_100013F84;
  return sub_100195A88((uint64_t)v8, v9, v10, v5, v6, v7);
}

uint64_t sub_1001A48BC()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001A4904()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100013F84;
  return sub_1001971FC((uint64_t)v5, v6, v7, v2, v3, v4);
}

uint64_t sub_1001A49AC()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = (uint64_t *)v0[4];
  uint64_t v4 = (void **)v0[5];
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_100196DD8(v5, v1);
  swift_bridgeObjectRelease();
  void *v2 = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *v3;
  swift_bridgeObjectRetain();
  void *v4 = sub_100196DD8(v1, v7);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

unsigned char *initializeBufferWithCopyOfBuffer for NearbySessionsListenerImplementation.Errors(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for NearbySessionsListenerImplementation.Errors(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NearbySessionsListenerImplementation.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A4BD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1001A4BF8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1001A4C00(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NearbySessionsListenerImplementation.Errors()
{
  return &type metadata for NearbySessionsListenerImplementation.Errors;
}

uint64_t sub_1001A4C1C()
{
  return sub_1001A3F88((unint64_t *)&unk_100478840, type metadata accessor for MRGroupSessionError);
}

uint64_t sub_1001A4C64()
{
  return sub_1001A3F88((unint64_t *)&unk_10047A340, type metadata accessor for MRGroupSessionError);
}

uint64_t sub_1001A4CAC()
{
  return sub_1001A3F88((unint64_t *)&unk_100478850, type metadata accessor for MRGroupSessionError);
}

uint64_t sub_1001A4CF4()
{
  return sub_1001A3F88((unint64_t *)&unk_10047A350, type metadata accessor for MRGroupSessionError);
}

uint64_t sub_1001A4D3C()
{
  return sub_1001A3F88((unint64_t *)&unk_100478860, type metadata accessor for MRGroupSessionError);
}

uint64_t sub_1001A4D84()
{
  return sub_1001A3F88((unint64_t *)&unk_10047A360, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

void sub_1001A4DE0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1001A4E28()
{
  return sub_1001A3F88((unint64_t *)&unk_100478870, type metadata accessor for Code);
}

unint64_t sub_1001A4E74()
{
  unint64_t result = qword_100479B50;
  if (!qword_100479B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100479B50);
  }
  return result;
}

uint64_t sub_1001A4EC8()
{
  return sub_1001A3F88((unint64_t *)&unk_100478880, type metadata accessor for Code);
}

uint64_t sub_1001A4F10()
{
  return sub_1001A3F88(&qword_10047A370, type metadata accessor for MRGroupSessionError);
}

unint64_t sub_1001A4F5C()
{
  unint64_t result = qword_10047E8F0[0];
  if (!qword_10047E8F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10047E8F0);
  }
  return result;
}

uint64_t sub_1001A4FC4(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1001A4FF8();

  return v2;
}

uint64_t sub_1001A4FF8()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t sub_1001A5070(uint64_t a1)
{
  sub_1001A6540(a1, (uint64_t)v4);
  if (!v5)
  {
    sub_100194AE4((uint64_t)v4);
    goto LABEL_5;
  }
  type metadata accessor for LRUDictionary.Wrapper();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v1 = 0;
    return v1 & 1;
  }
  char v1 = dispatch thunk of static Equatable.== infix(_:_:)();

  return v1 & 1;
}

uint64_t sub_1001A5194(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    id v5 = a1;
  }
  char v6 = sub_1001A5070((uint64_t)v8);

  sub_100194AE4((uint64_t)v8);
  return v6 & 1;
}

void sub_1001A520C()
{
}

id sub_1001A521C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LRUDictionary.Wrapper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001A52A4(char *a1)
{
  return (*(uint64_t (**)(char *))(*(void *)(*(void *)((swift_isaMask & *(void *)a1) + 0x50) - 8)
                                           + 8))(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x68)]);
}

uint64_t sub_1001A530C()
{
  return sub_1001A5364((void (*)(void, void, void, void))&type metadata accessor for Dictionary.Values, (void (*)(void))sub_1001A62DC);
}

uint64_t sub_1001A5338()
{
  return sub_1001A5364((void (*)(void, void, void, void))&type metadata accessor for Dictionary.Keys, (void (*)(void))sub_1001A62DC);
}

uint64_t sub_1001A5364(void (*a1)(void, void, void, void), void (*a2)(void))
{
  a1(0, *(void *)(*(void *)v2 + 80), *(void *)(*(void *)v2 + 88), *(void *)(*(void *)v2 + 96));
  sub_100289944(a2);
  return v5;
}

uint64_t sub_1001A5408(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1001A5448(a1);
  return v2;
}

void *sub_1001A5448(uint64_t a1)
{
  swift_getTupleTypeMetadata2();
  static Array._allocateUninitialized(_:)();
  v1[3] = Dictionary.init(dictionaryLiteral:)();
  v1[4] = [objc_allocWithZone((Class)NSMutableOrderedSet) init];
  type metadata accessor for Lock();
  v1[5] = sub_1002898BC();
  v1[2] = a1;
  return v1;
}

void sub_1001A5528()
{
}

uint64_t sub_1001A55A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 88);
  uint64_t v4 = type metadata accessor for Optional();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v11 - v6;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  Dictionary.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v7, v3);
    sub_1001A5DC8();
    uint64_t v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v3);
}

uint64_t sub_1001A57B0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1001A63A0();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 8))(a2);
  uint64_t v6 = type metadata accessor for Optional();
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(a1, v6);
}

uint64_t sub_1001A587C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = *a1;
  uint64_t v6 = type metadata accessor for Optional();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void *)(v16 + 80);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v8);
  uint64_t v14 = (char *)&v16 - v13;
  if ((uint64_t)objc_msgSend((id)a1[4], "count", v16) >= a1[2]) {
    sub_1001A5EA4();
  }
  sub_1001A5DC8();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a3, v6);
  swift_beginAccess();
  type metadata accessor for Dictionary();
  Dictionary.subscript.setter();
  return swift_endAccess();
}

void (*sub_1001A5AA8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x90uLL);
  *a1 = v3;
  void v3[5] = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for Optional();
  v3[11] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[12] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[13] = malloc(v7);
  v3[14] = malloc(v7);
  uint64_t v8 = *(void *)(v4 + 80);
  v3[15] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  v3[16] = v9;
  v3[17] = malloc(*(void *)(v9 + 64));
  (*(void (**)(void))(v10 + 16))();
  sub_1001A5528();
  return sub_1001A5C20;
}

void sub_1001A5C20(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 128);
  uint64_t v3 = *(void **)(*(void *)a1 + 136);
  uint64_t v5 = *(void **)(*(void *)a1 + 112);
  uint64_t v6 = *(void *)(*(void *)a1 + 120);
  uint64_t v8 = *(void *)(*(void *)a1 + 96);
  size_t v7 = *(void **)(*(void *)a1 + 104);
  uint64_t v9 = *(void *)(*(void *)a1 + 88);
  if (a2)
  {
    uint64_t v10 = v2[5];
    (*(void (**)(void, void, void))(v2[12] + 16))(v2[13], v2[14], v2[11]);
    v2[2] = v10;
    v2[3] = v3;
    v2[4] = v7;
    sub_100289944((void (*)(void))sub_1001A65A8);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    uint64_t v11 = *(void (**)(void *, uint64_t))(v8 + 8);
    v11(v7, v9);
    v11(v5, v9);
  }
  else
  {
    v2[8] = v2[5];
    v2[9] = v3;
    v2[10] = v5;
    sub_100289944((void (*)(void))sub_1001A65A8);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v9);
  }
  free(v3);
  free(v5);
  free(v7);

  free(v2);
}

uint64_t sub_1001A5DC8()
{
  sub_1002899AC();
  id v1 = *(id *)(v0 + 32);
  [v1 removeObject:_bridgeAnythingToObjectiveC<A>(_:)()];

  swift_unknownObjectRelease();
  id v2 = *(id *)(v0 + 32);
  [v2 insertObject:_bridgeAnythingToObjectiveC<A>(_:)() atIndex:0];

  return swift_unknownObjectRelease();
}

uint64_t sub_1001A5EA4()
{
  uint64_t v21 = *v0;
  uint64_t v1 = *(void *)(v21 + 88);
  uint64_t v2 = type metadata accessor for Optional();
  __chkstk_darwin(v2 - 8);
  BOOL v20 = (char *)&v20 - v3;
  uint64_t v4 = *(void *)(v21 + 80);
  uint64_t v5 = type metadata accessor for Optional();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  uint64_t v11 = __chkstk_darwin(v7);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v20 - v14;
  sub_1002899AC();
  if ([(id)v0[4] lastObject])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10018FF5C(&v22, v23);
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  sub_100013A80(&qword_100479F50);
  int v16 = swift_dynamicCast();
  int64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v16)
  {
    v17(v9, 0, 1, v4);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v9, v4);
    id v18 = (id)v0[4];
    [v18 removeObject:_bridgeAnythingToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(v20, 1, 1, v1);
    swift_beginAccess();
    type metadata accessor for Dictionary();
    Dictionary.subscript.setter();
    swift_endAccess();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v4);
  }
  else
  {
    v17(v9, 1, 1, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

uint64_t sub_1001A6278()
{
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t sub_1001A62A8()
{
  sub_1001A6278();

  return swift_deallocClassInstance();
}

uint64_t sub_1001A62DC@<X0>(void *a1@<X8>)
{
  return sub_1001A62F4(a1);
}

uint64_t sub_1001A62F4@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A6344@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A55A8(*(void *)(v1 + 16), a1);
}

void sub_1001A6370()
{
}

void sub_1001A63A0()
{
}

uint64_t sub_1001A640C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LRUDictionary()
{
  return sub_1001A65D8();
}

uint64_t sub_1001A6494()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for LRUDictionary.Wrapper()
{
  return sub_1001A65D8();
}

uint64_t sub_1001A6540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80(&qword_100479F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A65A8()
{
  return sub_1001A587C(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001A65D8()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1001A6608()
{
  sub_1001A6E68();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100486160 = result;
  return result;
}

uint64_t *sub_1001A665C()
{
  if (qword_10047EB80 != -1) {
    swift_once();
  }
  return &qword_100486160;
}

uint64_t sub_1001A66A8()
{
  sub_1001A6E68();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100486168 = result;
  return result;
}

uint64_t sub_1001A6710()
{
  sub_1001A6E68();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100486170 = result;
  return result;
}

uint64_t *sub_1001A6778()
{
  if (qword_10047EB90 != -1) {
    swift_once();
  }
  return &qword_100486170;
}

uint64_t sub_1001A67C4()
{
  sub_1001A6E68();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100486178 = result;
  return result;
}

uint64_t *sub_1001A682C()
{
  if (qword_10047EB98 != -1) {
    swift_once();
  }
  return &qword_100486178;
}

uint64_t sub_1001A6878()
{
  sub_1001A6E68();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100486180 = result;
  return result;
}

uint64_t sub_1001A68D8()
{
  sub_1001A6E68();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100486188 = result;
  return result;
}

uint64_t sub_1001A6940()
{
  sub_1001A6E68();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100486190 = result;
  return result;
}

uint64_t sub_1001A6998(uint64_t a1)
{
  return sub_1001A6A64(a1, qword_100486198, &qword_10047EBA0, (id *)&qword_100486180);
}

uint64_t sub_1001A69C4()
{
  return sub_1001A6B14(&qword_10047EBB8, (uint64_t)qword_100486198);
}

uint64_t sub_1001A69E8(uint64_t a1)
{
  return sub_1001A6A64(a1, qword_1004861B0, &qword_10047EBA8, (id *)&qword_100486188);
}

uint64_t sub_1001A6A14()
{
  return sub_1001A6B14(&qword_10047EBC0, (uint64_t)qword_1004861B0);
}

uint64_t sub_1001A6A38(uint64_t a1)
{
  return sub_1001A6A64(a1, qword_1004861C8, &qword_10047EBB0, (id *)&qword_100486190);
}

uint64_t sub_1001A6A64(uint64_t a1, uint64_t *a2, void *a3, id *a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  sub_10019001C(v7, a2);
  sub_10018A9A8(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  id v8 = *a4;
  return Logger.init(_:)();
}

uint64_t sub_1001A6AF0()
{
  return sub_1001A6B14(&qword_10047EBC8, (uint64_t)qword_1004861C8);
}

uint64_t sub_1001A6B14(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();

  return sub_10018A9A8(v3, a2);
}

uint64_t sub_1001A6B68(uint64_t a1)
{
  return sub_1001A6C4C(a1, qword_1004861E0, &qword_10047EBB8, (uint64_t)qword_100486198);
}

uint64_t sub_1001A6B94()
{
  return sub_1001A6E10(&qword_10047EBD0, (uint64_t)qword_1004861E0);
}

uint64_t sub_1001A6BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80((uint64_t *)&unk_10047BC50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A6C20(uint64_t a1)
{
  return sub_1001A6C4C(a1, qword_1004861F8, &qword_10047EBC0, (uint64_t)qword_1004861B0);
}

uint64_t sub_1001A6C4C(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_100013A80((uint64_t *)&unk_10047BC50);
  sub_10019001C(v7, a2);
  uint64_t v8 = sub_10018A9A8(v7, (uint64_t)a2);
  id v9 = [self currentSettings];
  unsigned int v10 = [v9 verboseMediaControlLogging];

  if (v10)
  {
    if (*a3 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    uint64_t v12 = sub_10018A9A8(v11, a4);
    uint64_t v19 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v8, v12, v11);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    uint64_t v14 = v8;
    uint64_t v15 = 0;
    uint64_t v16 = v11;
  }
  else
  {
    uint64_t v17 = type metadata accessor for Logger();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v16 = v17;
    uint64_t v14 = v8;
    uint64_t v15 = 1;
  }

  return v13(v14, v15, 1, v16);
}

uint64_t sub_1001A6DEC()
{
  return sub_1001A6E10(&qword_10047EBD8, (uint64_t)qword_1004861F8);
}

uint64_t sub_1001A6E10(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_100013A80((uint64_t *)&unk_10047BC50);

  return sub_10018A9A8(v3, a2);
}

unint64_t sub_1001A6E68()
{
  unint64_t result = qword_100478900;
  if (!qword_100478900)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100478900);
  }
  return result;
}

id sub_1001A725C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CryptoUtils();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001A7290(void **a1, void **a2)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v2 = sub_100013A80(&qword_100478940);
  uint64_t v3 = v2 - 8;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - v7;
  id v9 = (char *)&v28 + *(int *)(v3 + 56) - v7;
  Curve25519.Signing.PrivateKey.init()();
  unint64_t v31 = v9;
  unsigned int v10 = v8;
  id v36 = v8;
  Curve25519.Signing.PrivateKey.publicKey.getter();
  uint64_t v29 = &v6[*(int *)(v3 + 56)];
  uint64_t v11 = v29;
  uint64_t v12 = type metadata accessor for Curve25519.Signing.PrivateKey();
  uint64_t v37 = *(void *)(v12 - 8);
  BOOL v32 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v32(v6, v10, v12);
  uint64_t v13 = type metadata accessor for Curve25519.Signing.PublicKey();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v30 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v30(v11, v9, v13);
  uint64_t v15 = Curve25519.Signing.PrivateKey.rawRepresentation.getter();
  unint64_t v17 = v16;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_10018FE9C(v15, v17);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
  v37 += 8;
  int64_t v33 = v19;
  v19(v6, v12);
  BOOL v20 = *v34;
  void *v34 = isa;

  uint64_t v34 = *(void ***)(v14 + 8);
  ((void (*)(char *, uint64_t))v34)(v29, v13);
  uint64_t v21 = &v6[*(int *)(v3 + 56)];
  v32(v6, v36, v12);
  v30(v21, v31, v13);
  uint64_t v22 = Curve25519.Signing.PublicKey.rawRepresentation.getter();
  unint64_t v24 = v23;
  Class v25 = Data._bridgeToObjectiveC()().super.isa;
  sub_10018FE9C(v22, v24);
  ((void (*)(char *, uint64_t))v34)(v21, v13);
  BOOL v26 = *v35;
  *uint64_t v35 = v25;

  sub_1001A7784((uint64_t)v36);
  return v33(v6, v12);
}

unint64_t sub_1001A7548()
{
  unint64_t result = qword_100478908;
  if (!qword_100478908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100478908);
  }
  return result;
}

Class sub_1001A759C(uint64_t a1, unint64_t a2, Class isa, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v21 = a4;
  uint64_t v12 = type metadata accessor for Curve25519.Signing.PublicKey();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a5;
  unint64_t v20 = a6;
  sub_10018FE44(a5, a6);
  Curve25519.Signing.PublicKey.init<A>(rawRepresentation:)();
  if (!v6)
  {
    sub_1001A7744();
    uint64_t v19 = a1;
    unint64_t v20 = a2;
    v18[0] = isa;
    v18[1] = v21;
    sub_1001A7548();
    char v16 = Curve25519.Signing.PublicKey.isValidSignature<A, B>(_:for:)();
    Class isa = NSNumber.init(BOOLeanLiteral:)(v16 & 1).super.super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return isa;
}

uint64_t type metadata accessor for CryptoUtils()
{
  return self;
}

unint64_t sub_1001A7744()
{
  unint64_t result = qword_100478938;
  if (!qword_100478938)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100478938);
  }
  return result;
}

uint64_t sub_1001A7784(uint64_t a1)
{
  uint64_t v2 = sub_100013A80(&qword_100478940);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1001A780C()
{
  return [*v0 routePickerVisible];
}

id sub_1001A7830(void *a1)
{
  id v2 = [a1 origin];
  id v3 = [v1 originClientForOrigin:v2];

  if (!v3) {
    return 0;
  }
  id v4 = [v3 activeNowPlayingClient];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v4 activePlayerClient];
    if (v6)
    {
      id v7 = v6;
      id v8 = [v6 isPlaying];

      id v3 = v5;
      id v5 = v7;
    }
    else
    {
      id v8 = 0;
    }

    id v3 = v5;
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

unint64_t sub_1001A7914(void *a1)
{
  return (unint64_t)sub_1001A7830(a1) & 1;
}

uint64_t sub_1001A793C()
{
  type metadata accessor for RouteRecommendationSuppressionController();
  id v0 = [self sharedMonitor];
  v5[3] = sub_10018FE08(0, &qword_100478948);
  v5[4] = &off_100420DD0;
  v5[0] = v0;
  id v1 = [self server];
  id v2 = [v1 nowPlayingServer];

  v4[3] = sub_10018FE08(0, &qword_100478950);
  v4[4] = &off_100420DE0;
  v4[0] = v2;
  return sub_100266720((uint64_t)v5, (uint64_t)v4);
}

id sub_1001A7A34()
{
  swift_beginAccess();
  id v1 = *(void **)(v0 + 16);

  return v1;
}

void sub_1001A7A78(uint64_t a1)
{
  swift_beginAccess();
  id v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
}

uint64_t (*sub_1001A7AC0())()
{
  return j__swift_endAccess;
}

uint64_t sub_1001A7B18@<X0>(uint64_t a1@<X8>)
{
  return sub_1001ABA58(&OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_itemType, (uint64_t (*)(void))&type metadata accessor for RoutingSessionConfiguration.ItemType, a1);
}

uint64_t sub_1001A7B38(uint64_t a1)
{
  return sub_1001AB2B8(a1, &OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_itemType);
}

uint64_t (*sub_1001A7B44())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1001A7BA0()
{
  uint64_t v1 = v0;
  uint64_t v41 = *v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoutingMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v10 = (char *)v0 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_routingMode;
  swift_beginAccess();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v43 = v10;
  v42(v9, v10, v6);
  sub_1001B97B0(&qword_100478DA8, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
  char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = v12(v9, v6);
  if ((v11 & 1) == 0)
  {
    uint64_t v14 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
    swift_retain_n();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    int v40 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v39 = v5;
      uint64_t v18 = v17;
      uint64_t v38 = swift_slowAlloc();
      uint64_t v45 = v38;
      *(_DWORD *)uint64_t v18 = 136315650;
      uint64_t v36 = v18 + 4;
      os_log_t v37 = v15;
      uint64_t v19 = _typeName(_:qualified:)();
      uint64_t v41 = v3;
      uint64_t v44 = sub_10018A9E0(v19, v20, &v45);
      uint64_t v35 = &v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v34 = v18 + 14;
      uint64_t v36 = v2;
      uint64_t v22 = *(void *)((char *)v1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier);
      unint64_t v21 = *(void *)((char *)v1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier + 8);
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_10018A9E0(v22, v21, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2080;
      int64_t v33 = (void (*)(char *, uint64_t))v12;
      uint64_t v34 = v18 + 24;
      unint64_t v23 = v42;
      unint64_t v24 = v43;
      v42(v9, v43, v6);
      sub_1001B97B0(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v27 = v26;
      v33(v9, v6);
      uint64_t v44 = sub_10018A9E0(v25, v27, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      uint64_t v28 = v23;
      swift_bridgeObjectRelease();
      os_log_t v29 = v37;
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v40, "[%s]<%s> setRoutingMode - value: %s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v36);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v28 = v42;
      unint64_t v24 = v43;
    }
    sub_1001A8704();
    uint64_t v31 = v30;
    uint64_t ObjectType = swift_getObjectType();
    v28(v9, v24, v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 40))(v9, ObjectType, v31);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1001A80D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001ABA58(&OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_routingMode, (uint64_t (*)(void))&type metadata accessor for RoutingMode, a1);
}

uint64_t sub_1001A80F0(uint64_t a1)
{
  return sub_1001ABB08(a1, &OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_routingMode, (void (*)(unsigned char *))sub_1001A7BA0);
}

void (*sub_1001A8110(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x90uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = type metadata accessor for RoutingMode();
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[11] = v5;
  size_t v7 = *(void *)(v5 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_routingMode;
  v3[14] = v8;
  v3[15] = v9;
  uint64_t v10 = v1 + v9;
  swift_beginAccess();
  char v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
  v3[16] = v11;
  v3[17] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v8, v10, v4);
  return sub_1001A8238;
}

void sub_1001A8238(uint64_t a1, char a2)
{
}

uint64_t sub_1001A8250(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  size_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_routingItems);
  swift_beginAccess();
  uint64_t v9 = *v8;
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1001B5938(a1, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    uint64_t v11 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
    swift_retain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.info.getter();
    int v14 = v13;
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v15 = swift_slowAlloc();
      int v33 = v14;
      uint64_t v16 = v15;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v36 = v34;
      *(_DWORD *)uint64_t v16 = 136315650;
      uint64_t v17 = _typeName(_:qualified:)();
      uint64_t v35 = sub_10018A9E0(v17, v18, &v36);
      uint64_t v31 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_t v32 = v12;
      *(_WORD *)(v16 + 12) = 2080;
      uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier);
      unint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier + 8);
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_10018A9E0(v20, v19, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2080;
      type metadata accessor for HostedRoutingItem(0);
      swift_bridgeObjectRetain();
      uint64_t v21 = Array.description.getter();
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      uint64_t v35 = sub_10018A9E0(v21, v23, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v24 = v32;
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v33, "[%s]<%s> setRoutingItems - value: %s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v31);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    uint64_t v25 = v2 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v26 = *(void *)(v25 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v28 = *v8;
      os_log_t v29 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v26 + 8);
      swift_bridgeObjectRetain();
      v29(v2, &off_100420F58, v28, ObjectType, v26);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001A8638()
{
  return sub_100013F30();
}

uint64_t sub_1001A8644(uint64_t a1)
{
  return sub_1001AC4C4(a1, &OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_routingItems, (void (*)(uint64_t))sub_1001A8250);
}

void (*sub_1001A8664(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_routingItems;
  v3[4] = v1;
  void v3[5] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  swift_bridgeObjectRetain();
  return sub_1001A86EC;
}

void sub_1001A86EC(uint64_t a1, char a2)
{
}

uint64_t sub_1001A8704()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource____lazy_storage___subDataSource);
  if (*(void *)(v0 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource____lazy_storage___subDataSource))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource____lazy_storage___subDataSource);
  }
  else
  {
    uint64_t v2 = sub_1001A87BC(v0);
    uint64_t *v1 = v2;
    v1[1] = v3;
    v1[2] = (uint64_t)&off_100420FC8;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v2;
}

uint64_t sub_1001A87BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = *(void (**)(void))(*(void *)a1 + 176);
  ((void (*)(uint64_t))v10)(v7);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v9, v2);
  if (v11 == enum case for RoutingSessionConfiguration.ItemType.appSpecific(_:))
  {
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    _StringGuts.grow(_:)(75);
    v18._countAndFlagsBits = 91;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    v19._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    v20._countAndFlagsBits = 15453;
    v20._object = (void *)0xE200000000000000;
    String.append(_:)(v20);
    uint64_t v21 = a1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier;
    uint64_t v22 = *(void *)(a1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier);
    unint64_t v23 = *(void **)(v21 + 8);
    swift_bridgeObjectRetain();
    v24._countAndFlagsBits = v22;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    v25._object = (void *)0x80000001003B4C40;
    v25._countAndFlagsBits = 0xD000000000000044;
    String.append(_:)(v25);
  }
  else
  {
    if (v11 == enum case for RoutingSessionConfiguration.ItemType.standard(_:))
    {
      uint64_t v12 = (void *)*sub_100266CC0();
      type metadata accessor for AVDiscoveryRoutingItemDataSource(0);
      os_log_type_t v13 = (void *)swift_allocObject();
      id v14 = v12;
      uint64_t v15 = swift_retain();
      uint64_t v16 = sub_1001B7CC4(v15, v14, v13);
      sub_1001B97B0(&qword_100478DC0, (void (*)(uint64_t))type metadata accessor for AVDiscoveryRoutingItemDataSource);
      return (uint64_t)v16;
    }
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    _StringGuts.grow(_:)(84);
    v26._countAndFlagsBits = 91;
    v26._object = (void *)0xE100000000000000;
    String.append(_:)(v26);
    v27._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = 15453;
    v28._object = (void *)0xE200000000000000;
    String.append(_:)(v28);
    uint64_t v29 = *(void *)(a1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier);
    uint64_t v30 = *(void **)(a1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier + 8);
    swift_bridgeObjectRetain();
    v31._countAndFlagsBits = v29;
    v31._object = v30;
    String.append(_:)(v31);
    swift_bridgeObjectRelease();
    v32._countAndFlagsBits = 0xD00000000000004ALL;
    v32._object = (void *)0x80000001003B4BF0;
    String.append(_:)(v32);
    v10();
    sub_1001B97B0(&qword_100478958, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
    v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v34._countAndFlagsBits = 46;
    v34._object = (void *)0xE100000000000000;
    String.append(_:)(v34);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1001A8BA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();

  return sub_1001B8A34(a1, a3, v6, ObjectType, a2);
}

id sub_1001A8C14()
{
  uint64_t v0 = (void *)*sub_100266CC0();

  return v0;
}

uint64_t sub_1001A8C40(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  sub_1001A8CB0(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1001A8CB0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v47 = a4;
  uint64_t v50 = a3;
  id v54 = a1;
  uint64_t v45 = *(void *)v6;
  uint64_t v9 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v53 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v48 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  __chkstk_darwin(v11);
  int64_t v49 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = &v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_routingMode];
  uint64_t v18 = enum case for RoutingMode.disabled(_:);
  uint64_t v19 = type metadata accessor for RoutingMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
  *(void *)&v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_routingItems] = _swiftEmptyArrayStorage;
  *(void *)&v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_pendingInteractions] = &_swiftEmptyDictionarySingleton;
  Swift::String v20 = &v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource____lazy_storage___subDataSource];
  *((void *)v20 + 1) = 0;
  *((void *)v20 + 2) = 0;
  *(void *)Swift::String v20 = 0;
  uint64_t v21 = (uint64_t *)&v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier];
  uint64_t *v21 = sub_1001E78B8();
  v21[1] = v22;
  void *v16 = a5;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v23 = a5;
  LOBYTE(v21) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v21)
  {
    *((void *)v6 + 2) = v23;
    Swift::String v25 = v54;
    Swift::String v26 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
    v26(&v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_itemType], (uint64_t)v54, v9);
    *(void *)&v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_timeline] = a2;
    id v46 = v23;
    swift_retain();
    sub_1001A8704();
    uint64_t v28 = v27;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 56))(ObjectType, v28);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t))(*(void *)v6 + 232))(v30);
    Swift::String v31 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)a2 + 200);
    uint64_t v32 = swift_retain();
    v31(v32, &off_100420FA8);
    swift_release();
    *(void *)&v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_delegate + 8] = v47;
    swift_unknownObjectWeakAssign();
    uint64_t v33 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v49, v33, v52);
    v26(v48, (uint64_t)v25, v9);
    swift_retain_n();
    Swift::String v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v56 = v47;
      *(_DWORD *)uint64_t v36 = 136315650;
      uint64_t v37 = _typeName(_:qualified:)();
      uint64_t v55 = sub_10018A9E0(v37, v38, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v40 = *(void *)&v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier];
      unint64_t v39 = *(void *)&v6[OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_10018A9E0(v40, v39, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 22) = 2080;
      sub_1001B97B0(&qword_100478958, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
      uint64_t v41 = v48;
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v55 = sub_10018A9E0(v42, v43, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v44 = *(void (**)(char *, uint64_t))(v53 + 8);
      v44(v41, v9);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%s]<%s> Initialized for item type: %s", (uint8_t *)v36, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_release();
      swift_unknownObjectRelease();

      uint64_t v44 = *(void (**)(char *, uint64_t))(v53 + 8);
      v44(v48, v9);
      swift_release_n();
    }
    v44(v54, v9);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v52);
    return (uint64_t)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001A93A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  swift_retain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  int v32 = v11;
  uint64_t v12 = &qword_100485DC8[71];
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v13 = swift_slowAlloc();
    os_log_t v29 = v10;
    uint64_t v14 = v13;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v36 = v30;
    *(_DWORD *)uint64_t v14 = 136315650;
    uint64_t v15 = _typeName(_:qualified:)();
    uint64_t v35 = sub_10018A9E0(v15, v16, &v36);
    uint64_t v31 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier);
    unint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier + 8);
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_10018A9E0(v18, v17, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2080;
    uint64_t v19 = v1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_itemType;
    swift_beginAccess();
    Swift::String v20 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v33, v19, v2);
    sub_1001B97B0(&qword_100478958, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v20, v2);
    uint64_t v24 = v21;
    uint64_t v12 = qword_100485DC8 + 568;
    uint64_t v34 = sub_10018A9E0(v24, v23, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v25 = v29;
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v32, "[%s]<%s> Destroyed for item type: %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v31);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v12[66], v2);
  uint64_t v26 = v1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_routingMode;
  uint64_t v27 = type metadata accessor for RoutingMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  swift_bridgeObjectRelease();
  sub_1001B9788(v1 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_delegate);
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1001A98B4()
{
  return sub_1001AE2D0((void (*)(void))sub_1001A93A0);
}

uint64_t sub_1001A98CC()
{
  uint64_t v1 = type metadata accessor for RoutingMode();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  uint64_t v19 = 60;
  unint64_t v20 = 0xE100000000000000;
  v9._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 60;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier);
  uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier + 8);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v11;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x65707974202D203ELL;
  v14._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v14);
  (*(void (**)(void))(*(void *)v0 + 176))();
  sub_1001B97B0(&qword_100478958, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16._countAndFlagsBits = 0x6E6974756F72202CLL;
  v16._object = (void *)0xEF203A65646F4D67;
  String.append(_:)(v16);
  (*(void (**)(void))(*(void *)v0 + 200))();
  sub_1001B97B0(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
  v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v19;
}

uint64_t sub_1001A9C24()
{
  sub_1001A8704();
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(ObjectType, v2);
  swift_unknownObjectRelease();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 232);

  return v5(v4);
}

uint64_t sub_1001A9CB4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v162 = type metadata accessor for RoutingControl.RoutingControlType();
  uint64_t v165 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  v166 = (char *)v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoutingControl();
  uint64_t v163 = *(void *)(v6 - 8);
  uint64_t v164 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  v159 = (char *)v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)v148 - v9;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v161 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v160 = (char *)v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v167 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Swift::String v15 = (void *)((char *)v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for RoutingInteraction();
  uint64_t v169 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v158 = (char *)v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v148 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)v148 - v23;
  unint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 112))(v22);
  unint64_t v29 = v25;
  if (v25 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_38:
    return swift_bridgeObjectRelease();
  }
  if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_38;
  }
LABEL_3:
  uint64_t v157 = v21;
  uint64_t v150 = v4;
  uint64_t v151 = v11;
  uint64_t v152 = v10;
  if ((v29 & 0xC000000000000001) != 0)
  {
    uint64_t v30 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_43:
      if (v16 == 1)
      {
        sub_1001924CC((uint64_t)v154);
        __break(1u);
      }
      uint64_t v127 = v26;
      id v59 = v27;
      uint64_t v57 = v28;
      sub_1001924CC((uint64_t)v154);
      swift_errorRelease();
      sub_1001859D4(v127, (uint64_t)v59, v57);
      __break(1u);
      goto LABEL_46;
    }
    uint64_t v30 = *(void *)(v29 + 32);
    swift_retain();
  }
  uint64_t v31 = swift_bridgeObjectRelease();
  int v32 = *(void (**)(void))(*(void *)v30 + 176);
  ((void (*)(uint64_t))v32)(v31);
  swift_beginAccess();
  uint64_t v33 = sub_1001B5BF8((uint64_t)v24);
  uint64_t v35 = v34;
  uint64_t v36 = v169 + 8;
  uint64_t v37 = v24;
  unint64_t v38 = (void (*)(void))v33;
  uint64_t v156 = *(void (**)(char *, uint64_t))(v169 + 8);
  v156(v37, v16);
  swift_endAccess();
  if (!v38) {
    return swift_release();
  }
  v148[2] = v36;
  v168 = v2;
  uint64_t v149 = v16;
  uint64_t v39 = swift_allocObject();
  uint64_t v154 = v38;
  *(void *)(v39 + 16) = v38;
  *(void *)(v39 + 24) = v35;
  uint64_t v153 = v39;
  uint64_t v40 = *(uint64_t (**)(uint64_t))(*(void *)v30 + 128);
  uint64_t v155 = v35;
  uint64_t v41 = swift_retain();
  uint64_t v42 = v40(v41);
  if (v42)
  {
    uint64_t v16 = v42;
    if (v42 == 2)
    {
      uint64_t v43 = type metadata accessor for InternalRoutingError();
      sub_1001B97B0(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v44 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, enum case for InternalRoutingError.cancelled(_:), v43);
      uint64_t v46 = MRDFastSyncGroupSessionState.rawValue.getter(v44, 0, 0, 4);
      uint64_t v48 = v47;
      uint64_t v50 = v49;
      unsigned __int8 v52 = v51;
      uint64_t v171 = v46;
      unint64_t v172 = v47;
      uint64_t v173 = v49;
      unsigned __int8 v174 = v51;
      uint64_t v53 = v154;
      v154(&v171);
      swift_errorRelease();
      sub_1001859D4(v48, v50, v52);
      swift_release();
      sub_1001924CC((uint64_t)v53);
      return swift_release();
    }
    goto LABEL_43;
  }
  uint64_t v55 = v157;
  v148[1] = v30;
  v32();
  uint64_t v56 = v55;
  uint64_t v57 = RoutingInteraction.identifier.getter();
  id v59 = v58;
  RoutingInteraction.action.getter();
  uint64_t v60 = v167;
  int v61 = (*(uint64_t (**)(uint64_t *, uint64_t))(v167 + 88))(v15, v13);
  if (v61 != enum case for RoutingInteraction.Action.add(_:))
  {
    int v62 = v61;
    if (v61 != enum case for RoutingInteraction.Action.remove(_:)
      && v61 != enum case for RoutingInteraction.Action.set(_:))
    {
      int v63 = enum case for RoutingInteraction.Action.control(_:);
      sub_1001924CC((uint64_t)v154);
      if (v62 != v63)
      {
LABEL_46:
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v158, v157, v149);
        uint64_t v171 = 0;
        unint64_t v172 = 0xE000000000000000;
        _StringGuts.grow(_:)(62);
        v128._countAndFlagsBits = 91;
        v128._object = (void *)0xE100000000000000;
        String.append(_:)(v128);
        v129._countAndFlagsBits = _typeName(_:qualified:)();
        String.append(_:)(v129);
        swift_bridgeObjectRelease();
        v130._countAndFlagsBits = 15453;
        v130._object = (void *)0xE200000000000000;
        String.append(_:)(v130);
        uint64_t v131 = *(void *)((char *)v168 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier);
        uint64_t v132 = *(void **)((char *)v168 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier + 8);
        swift_bridgeObjectRetain();
        v133._countAndFlagsBits = v131;
        v133._object = v132;
        String.append(_:)(v133);
        swift_bridgeObjectRelease();
        v134._object = (void *)0x80000001003B4850;
        v134._countAndFlagsBits = 0xD000000000000014;
        String.append(_:)(v134);
        v135._countAndFlagsBits = v57;
        v135._object = v59;
        String.append(_:)(v135);
        v136._countAndFlagsBits = 0xD00000000000001FLL;
        v136._object = (void *)0x80000001003B4870;
        String.append(_:)(v136);
        sub_1001B97B0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        v137._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v137);
        swift_bridgeObjectRelease();
LABEL_48:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      (*(void (**)(uint64_t *, uint64_t))(v60 + 96))(v15, v13);
      uint64_t v64 = swift_projectBox();
      uint64_t v66 = v163;
      uint64_t v65 = v164;
      uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v163 + 16);
      uint64_t v68 = v152;
      v67(v152, v64, v164);
      unint64_t v69 = v166;
      RoutingControl.type.getter();
      uint64_t v70 = v162;
      int v71 = (*(uint64_t (**)(char *, uint64_t))(v165 + 88))(v69, v162);
      if (v71 != enum case for RoutingControl.RoutingControlType.absoluteVolume(_:))
      {
        if (v71 == enum case for RoutingControl.RoutingControlType.relativeVolume(_:))
        {
          swift_bridgeObjectRelease();
          id v72 = v166;
          (*(void (**)(char *, uint64_t))(v165 + 96))(v166, v70);
          uint64_t v73 = type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType();
          (*(void (**)(char *, uint64_t))(*(void *)(v73 - 8) + 8))(v72, v73);
LABEL_30:
          uint64_t v103 = sub_1001A8704();
          uint64_t v105 = v104;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v171 = v103;
          os_log_type_t v107 = v157;
          (*(void (**)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t, char), uint64_t, uint64_t))(*(void *)(v105 + 16) + 8))(v157, sub_1001B9830, v153, ObjectType);
          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v65);
          v156(v107, v149);
          return swift_release();
        }
        if (v71 != enum case for RoutingControl.RoutingControlType.mute(_:))
        {
          v67(v159, (uint64_t)v68, v65);
          uint64_t v171 = 0;
          unint64_t v172 = 0xE000000000000000;
          _StringGuts.grow(_:)(58);
          v138._countAndFlagsBits = 91;
          v138._object = (void *)0xE100000000000000;
          String.append(_:)(v138);
          v139._countAndFlagsBits = _typeName(_:qualified:)();
          String.append(_:)(v139);
          swift_bridgeObjectRelease();
          v140._countAndFlagsBits = 15453;
          v140._object = (void *)0xE200000000000000;
          String.append(_:)(v140);
          uint64_t v141 = *(void *)((char *)v168 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier);
          uint64_t v142 = *(void **)((char *)v168 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier + 8);
          swift_bridgeObjectRetain();
          v143._countAndFlagsBits = v141;
          v143._object = v142;
          String.append(_:)(v143);
          swift_bridgeObjectRelease();
          v144._object = (void *)0x80000001003B4850;
          v144._countAndFlagsBits = 0xD000000000000014;
          String.append(_:)(v144);
          v145._countAndFlagsBits = v57;
          v145._object = v59;
          String.append(_:)(v145);
          v146._countAndFlagsBits = 0xD00000000000001BLL;
          v146._object = (void *)0x80000001003B4890;
          String.append(_:)(v146);
          sub_1001B97B0(&qword_100478970, (void (*)(uint64_t))&type metadata accessor for RoutingControl);
          v147._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v147);
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
  uint64_t v169 = v57;
  unint64_t v74 = (unint64_t)v59;
  (*(void (**)(uint64_t *, uint64_t))(v60 + 96))(v15, v13);
  uint64_t v76 = *v15;
  uint64_t v75 = v15[1];
  swift_bridgeObjectRelease();
  id v77 = v168;
  uint64_t v78 = sub_1001A8704();
  uint64_t v80 = v79;
  uint64_t v82 = v81;
  uint64_t v83 = swift_getObjectType();
  uint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t))(v82 + 56);
  uint64_t v167 = v83;
  uint64_t v85 = v84(v83, v82);
  uint64_t v86 = *(void *)(v85 + 16);
  if (v86)
  {
    v166 = v80;
    uint64_t v87 = *(void *)(type metadata accessor for HostedRoutingItem(0) - 8);
    unint64_t v88 = v85 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
    uint64_t v89 = *(void *)(v87 + 72);
    while (1)
    {
      if (sub_10029F540() == v76 && v90 == v75)
      {
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      char v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v91) {
        break;
      }
      v88 += v89;
      --v86;
      id v77 = v168;
      if (!v86)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v56 = v157;
        goto LABEL_27;
      }
    }
    id v77 = v168;
LABEL_33:
    swift_bridgeObjectRelease();
    sub_1001924CC((uint64_t)v154);
    swift_bridgeObjectRelease();
    uint64_t v108 = sub_1001A69C4();
    id v109 = v160;
    uint64_t v110 = v161;
    uint64_t v111 = v151;
    (*(void (**)(char *, uint64_t, uint64_t))(v161 + 16))(v160, v108, v151);
    swift_retain_n();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v112 = Logger.logObject.getter();
    os_log_type_t v113 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v112, v113))
    {
      uint64_t v114 = swift_slowAlloc();
      uint64_t v165 = swift_slowAlloc();
      uint64_t v171 = v165;
      *(_DWORD *)uint64_t v114 = 136315906;
      uint64_t v115 = _typeName(_:qualified:)();
      uint64_t v170 = sub_10018A9E0(v115, v116, &v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v114 + 12) = 2080;
      uint64_t v118 = *(void *)((char *)v77 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier);
      unint64_t v117 = *(void *)((char *)v77 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier + 8);
      swift_bridgeObjectRetain();
      uint64_t v170 = sub_10018A9E0(v118, v117, &v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v114 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v170 = sub_10018A9E0(v169, v74, &v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v114 + 32) = 2080;
      uint64_t v170 = v78;
      uint64_t v119 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v170 = sub_10018A9E0(v119, v120, &v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v112, v113, "[%s]<%s> timelineDidUpdate<%s> - delegating to data source: %s", (uint8_t *)v114, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v161 + 8))(v160, v151);
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v109, v111);
    }
    unint64_t v122 = (uint64_t (*)(char *, uint64_t))v156;
    uint64_t v121 = v157;
    uint64_t v123 = sub_1001A8704();
    uint64_t v125 = v124;
    uint64_t v126 = swift_getObjectType();
    uint64_t v171 = v123;
    (*(void (**)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t, char), uint64_t, uint64_t))(*(void *)(v125 + 16) + 8))(v121, sub_1001B9830, v153, v126);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    return v122(v121, v149);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_27:
    uint64_t v92 = type metadata accessor for InternalRoutingError();
    sub_1001B97B0(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v93 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v92 - 8) + 104))(v94, enum case for InternalRoutingError.itemNotFound(_:), v92);
    uint64_t v95 = MRDFastSyncGroupSessionState.rawValue.getter(v93, v76, v75, 3);
    uint64_t v97 = v96;
    uint64_t v99 = v98;
    unsigned __int8 v101 = v100;
    uint64_t v171 = v95;
    unint64_t v172 = v96;
    uint64_t v173 = v98;
    unsigned __int8 v174 = v100;
    uint64_t v102 = v154;
    v154(&v171);
    swift_release();
    swift_release();
    swift_errorRelease();
    sub_1001859D4(v97, v99, v101);
    swift_unknownObjectRelease();
    sub_1001924CC((uint64_t)v102);
    return ((uint64_t (*)(char *, uint64_t))v156)(v56, v149);
  }
}

uint64_t sub_1001AAEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for RoutingInteraction();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_pendingInteractions);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v12;
  *uint64_t v12 = 0x8000000000000000;
  sub_1001B782C((uint64_t)sub_1001B9920, v11, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v12 = v15;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_endAccess();
}

uint64_t sub_1001AB03C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_1001AB060()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_1001AB084()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t (*sub_1001AB0A8(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 216))();
  return sub_1001AB120;
}

uint64_t sub_1001AB124()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_1001AB148()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t sub_1001AB174()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t sub_1001AB1A0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 352))();
}

uint64_t sub_1001AB1EC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 376))();
}

uint64_t (*sub_1001AB238())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1001AB28C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001ABA58(&OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_itemType, (uint64_t (*)(void))&type metadata accessor for RoutingSessionConfiguration.ItemType, a1);
}

uint64_t sub_1001AB2AC(uint64_t a1)
{
  return sub_1001AB2B8(a1, &OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_itemType);
}

uint64_t sub_1001AB2B8(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(v4, a1, v5);
  return swift_endAccess();
}

uint64_t (*sub_1001AB340())()
{
  return j_j__swift_endAccess;
}

void sub_1001AB39C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v42 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v41 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RoutingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v39 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v31 - v8;
  Swift::String v10 = (char *)v0 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingMode;
  swift_beginAccess();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v40(v9, v10, v4);
  sub_1001B97B0(&qword_100478DA8, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
  char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
  unint64_t v38 = *(void (**)(char *, uint64_t))(v5 + 8);
  v38(v9, v4);
  if ((v11 & 1) == 0)
  {
    uint64_t v12 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v12, v2);
    swift_retain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    int v36 = v14;
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v35 = v1;
    if (v15)
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v37 = v10;
      uint64_t v17 = v16;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v44 = v34;
      *(_DWORD *)uint64_t v17 = 136315394;
      os_log_t v33 = v13;
      uint64_t v18 = _typeName(_:qualified:)();
      uint64_t v43 = sub_10018A9E0(v18, v19, &v44);
      v31[1] = &v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      v31[0] = v17 + 14;
      uint64_t v32 = v2;
      uint64_t v20 = v40;
      v40(v9, v37, v4);
      sub_1001B97B0(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v23 = v22;
      v38(v9, v4);
      uint64_t v43 = sub_10018A9E0(v21, v23, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v24 = v33;
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v36, "[%s] setRoutingMode - value: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      Swift::String v10 = v37;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v32);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v2);
      uint64_t v20 = v40;
    }
    unint64_t v25 = v39;
    v20(v39, v10, v4);
    int v26 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v25, v4);
    if (v26 == enum case for RoutingMode.disabled(_:) || v26 == enum case for RoutingMode.prewarm(_:))
    {
      uint64_t v27 = (void *)sub_1001AC72C();
      [v27 setDiscoveryMode:0];
    }
    else if (v26 == enum case for RoutingMode.localNetwork(_:))
    {
      uint64_t v27 = (void *)sub_1001AC72C();
      [v27 setDiscoveryMode:2];
    }
    else
    {
      if (v26 != enum case for RoutingMode.detailed(_:))
      {
        uint64_t v44 = 0;
        unint64_t v45 = 0xE000000000000000;
        _StringGuts.grow(_:)(38);
        swift_bridgeObjectRelease();
        uint64_t v44 = 91;
        unint64_t v45 = 0xE100000000000000;
        v28._countAndFlagsBits = _typeName(_:qualified:)();
        String.append(_:)(v28);
        swift_bridgeObjectRelease();
        v29._object = (void *)0x80000001003B4BC0;
        v29._countAndFlagsBits = 0xD000000000000021;
        String.append(_:)(v29);
        v20(v9, v10, v4);
        sub_1001B97B0(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
        v30._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v30);
        swift_bridgeObjectRelease();
        v38(v9, v4);
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return;
      }
      uint64_t v27 = (void *)sub_1001AC72C();
      [v27 setDiscoveryMode:3];
    }
  }
}

uint64_t sub_1001ABA38@<X0>(uint64_t a1@<X8>)
{
  return sub_1001ABA58(&OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingMode, (uint64_t (*)(void))&type metadata accessor for RoutingMode, a1);
}

uint64_t sub_1001ABA58@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  uint64_t v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_1001ABAE8(uint64_t a1)
{
  return sub_1001ABB08(a1, &OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingMode, (void (*)(unsigned char *))sub_1001AB39C);
}

uint64_t sub_1001ABB08(uint64_t a1, void *a2, void (*a3)(unsigned char *))
{
  uint64_t v7 = type metadata accessor for RoutingMode();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = v3 + *a2;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, a1, v7);
  swift_endAccess();
  a3(v10);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(a1, v7);
  return ((uint64_t (*)(unsigned char *, uint64_t))v12)(v10, v7);
}

void (*sub_1001ABC78(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x90uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = type metadata accessor for RoutingMode();
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[11] = v5;
  size_t v7 = *(void *)(v5 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingMode;
  v3[14] = v8;
  v3[15] = v9;
  uint64_t v10 = v1 + v9;
  swift_beginAccess();
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
  v3[16] = v11;
  v3[17] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v8, v10, v4);
  return sub_1001ABDA0;
}

void sub_1001ABDA0(uint64_t a1, char a2)
{
}

void sub_1001ABDB8(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void *, void *, uint64_t))(*(void *)a1 + 128);
  uint64_t v6 = *(void **)(*(void *)a1 + 112);
  uint64_t v5 = *(void *)(*(void *)a1 + 120);
  size_t v7 = *(void **)(*(void *)a1 + 104);
  BOOL v15 = *(void **)(*(void *)a1 + 96);
  uint64_t v8 = *(void *)(*(void *)a1 + 80);
  uint64_t v9 = *(void *)(*(void *)a1 + 88);
  uint64_t v10 = (void *)(*(void *)(*(void *)a1 + 72) + v5);
  if (a2)
  {
    v4(v7, v6, v8);
    uint64_t v11 = v15;
    v4(v15, v10, v8);
    swift_beginAccess();
    (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v10, v7, v8);
    swift_endAccess();
    a3(v15);
    uint64_t v12 = *(void (**)(void *, uint64_t))(v9 + 8);
    v12(v7, v8);
    v12(v15, v8);
    v12(v6, v8);
  }
  else
  {
    v4(v7, (void *)(v3[9] + v5), v3[10]);
    swift_beginAccess();
    (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v10, v6, v8);
    swift_endAccess();
    a3(v7);
    uint64_t v13 = *(void (**)(void *, uint64_t))(v9 + 8);
    v13(v6, v8);
    v13(v7, v8);
    uint64_t v11 = v15;
  }
  free(v6);
  free(v7);
  free(v11);

  free(v3);
}

uint64_t sub_1001ABF9C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  size_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingItems);
  swift_beginAccess();
  uint64_t v9 = swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1001B5938(v9, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (a1) {
    return result;
  }
  uint64_t v11 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  swift_retain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    int v47 = v14;
    uint64_t v16 = v15;
    uint64_t v46 = swift_slowAlloc();
    v49[0] = v46;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = _typeName(_:qualified:)();
    uint64_t v48 = sub_10018A9E0(v17, v18, v49);
    os_log_t v45 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    v44[1] = v16 + 14;
    type metadata accessor for HostedRoutingItem(0);
    swift_bridgeObjectRetain();
    uint64_t v19 = Array.description.getter();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_10018A9E0(v19, v21, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v22 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v47, "[%s] setRoutingItems - value: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((*(uint64_t (**)(uint64_t))(*(void *)v2 + 272))(v23))
  {
    uint64_t v25 = v24;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v27 = *v8;
    Swift::String v28 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v25 + 8);
    swift_bridgeObjectRetain();
    v28(v2, &off_100420FC8, v27, ObjectType, v25);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  Swift::String v29 = (uint64_t *)(v2 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_internalItemObservers);
  swift_beginAccess();
  uint64_t v30 = *v29;
  uint64_t v31 = v30 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(v30 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  unint64_t v34 = v33 & *(void *)(v30 + 64);
  int64_t v35 = (unint64_t)(v32 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v36 = 0;
  while (1)
  {
    if (v34)
    {
      unint64_t v37 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      unint64_t v38 = v37 | (v36 << 6);
      goto LABEL_11;
    }
    int64_t v41 = v36 + 1;
    if (__OFADD__(v36, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v41 >= v35) {
      goto LABEL_29;
    }
    unint64_t v42 = *(void *)(v31 + 8 * v41);
    ++v36;
    if (!v42)
    {
      int64_t v36 = v41 + 1;
      if (v41 + 1 >= v35) {
        goto LABEL_29;
      }
      unint64_t v42 = *(void *)(v31 + 8 * v36);
      if (!v42)
      {
        int64_t v36 = v41 + 2;
        if (v41 + 2 >= v35) {
          goto LABEL_29;
        }
        unint64_t v42 = *(void *)(v31 + 8 * v36);
        if (!v42)
        {
          int64_t v36 = v41 + 3;
          if (v41 + 3 >= v35) {
            goto LABEL_29;
          }
          unint64_t v42 = *(void *)(v31 + 8 * v36);
          if (!v42) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v34 = (v42 - 1) & v42;
    unint64_t v38 = __clz(__rbit64(v42)) + (v36 << 6);
LABEL_11:
    uint64_t v39 = *(void (**)(uint64_t))(*(void *)(v30 + 56) + 16 * v38);
    uint64_t v40 = swift_retain();
    v39(v40);
    uint64_t result = swift_release();
  }
  int64_t v43 = v41 + 4;
  if (v43 >= v35)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  unint64_t v42 = *(void *)(v31 + 8 * v43);
  if (v42)
  {
    int64_t v36 = v43;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v36 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v36 >= v35) {
      goto LABEL_29;
    }
    unint64_t v42 = *(void *)(v31 + 8 * v36);
    ++v43;
    if (v42) {
      goto LABEL_28;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1001AC498()
{
  return sub_100013F30();
}

uint64_t sub_1001AC4A4(uint64_t a1)
{
  return sub_1001AC4C4(a1, &OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingItems, (void (*)(uint64_t))sub_1001ABF9C);
}

uint64_t sub_1001AC4C4(uint64_t a1, void *a2, void (*a3)(uint64_t))
{
  uint64_t v6 = (uint64_t *)(v3 + *a2);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t *v6 = a1;
  a3(v7);
  return swift_bridgeObjectRelease();
}

void (*sub_1001AC538(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingItems;
  v3[4] = v1;
  void v3[5] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  swift_bridgeObjectRetain();
  return sub_1001AC5C0;
}

void sub_1001AC5C0(uint64_t a1, char a2)
{
}

void sub_1001AC5D8(uint64_t a1, char a2, void (*a3)(uint64_t))
{
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  uint64_t v7 = *(void *)(v6 + v5);
  *(void *)(v6 + v5) = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    swift_bridgeObjectRetain();
    a3(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    a3(v7);
  }
  swift_bridgeObjectRelease();

  free(v4);
}

uint64_t sub_1001AC670()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1001AC6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_1001AC72C()
{
  uint64_t v1 = OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource____lazy_storage___discoverySession;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource____lazy_storage___discoverySession);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource____lazy_storage___discoverySession);
LABEL_8:
    id v10 = v2;
    return (uint64_t)v3;
  }
  id v4 = [self discoverySessionWithEndpointFeatures:1];
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 setAlwaysAllowUpdates:1];
    uint64_t v6 = swift_allocObject();
    swift_weakInit();
    int v14 = sub_1001BB430;
    uint64_t v15 = v6;
    *(void *)&long long v12 = _NSConcreteStackBlock;
    *((void *)&v12 + 1) = 1107296256;
    *(void *)&long long v13 = sub_1001ACBEC;
    *((void *)&v13 + 1) = &unk_1004212B8;
    uint64_t v7 = _Block_copy(&v12);
    swift_release();
    id v8 = [v5 addOutputDevicesChangedCallback:v7];
    _Block_release(v7);
    if (v8)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    sub_1001BB438((uint64_t)&v12, (uint64_t)v16);
    sub_100009A08((uint64_t)v16, &qword_100479F50);
    uint64_t v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
    goto LABEL_8;
  }
  memset(v16, 0, sizeof(v16));
  uint64_t result = sub_100009A08((uint64_t)v16, &qword_100479F50);
  __break(1u);
  return result;
}

uint64_t sub_1001AC8E8()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v13 = (*(uint64_t (**)(void))(*(void *)result + 152))();
    uint64_t v14 = v4;
    aBlock[4] = sub_1001BB4A0;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100006760;
    aBlock[3] = &unk_1004212E0;
    uint64_t v10 = v5;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v15 = _swiftEmptyArrayStorage;
    sub_1001B97B0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    long long v12 = (void *)v13;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v11);
    swift_release();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001ACBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_10018FE08(0, (unint64_t *)&qword_100478370);
    uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  v3(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1001ACC74()
{
  sub_100013A80(&qword_100478DC8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003C5BA0;
  uint64_t v1 = (void *)MRAVEndpointVolumeDidChangeNotification;
  uint64_t v2 = MRAVEndpointVolumeControlCapabilitiesDidChangeNotification;
  id v5 = (id)MRAVEndpointVolumeControlCapabilitiesDidChangeNotification;
  *(void *)(v0 + 32) = MRAVEndpointVolumeDidChangeNotification;
  *(void *)(v0 + 40) = v2;
  qword_10047EBE8 = v0;
  id v3 = v1;

  return v5;
}

uint64_t sub_1001ACCF4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 360))(result);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001ACD74()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v6 = 0u;
    long long v7 = 0u;
    return sub_100009A08((uint64_t)&v6, &qword_100479F50);
  }
  uint64_t v1 = v0;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10018C3C4((uint64_t)v5), (v3 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10018FFC8((uint64_t)v5);
  if (!*((void *)&v7 + 1)) {
    return sub_100009A08((uint64_t)&v6, &qword_100479F50);
  }
  sub_100009A08((uint64_t)&v6, &qword_100479F50);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 360))(result);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001ACEAC()
{
  uint64_t v1 = type metadata accessor for RoutingMode();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  uint64_t v19 = 60;
  unint64_t v20 = 0xE100000000000000;
  v9._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 60;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
  long long v12 = *(void **)(v0 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v11;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x65707974202D203ELL;
  v14._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v14);
  (*(void (**)(void))(*(void *)v0 + 176))();
  sub_1001B97B0(&qword_100478958, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16._countAndFlagsBits = 0x6E6974756F72202CLL;
  v16._object = (void *)0xEF203A65646F4D67;
  String.append(_:)(v16);
  (*(void (**)(void))(*(void *)v0 + 200))();
  sub_1001B97B0(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
  v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v19;
}

uint64_t sub_1001AD204()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 368))();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 232);

  return v2(v1);
}

void sub_1001AD274()
{
  uint64_t v145 = sub_100013A80(&qword_100478980);
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  Swift::String v143 = (char *)&v142 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_100013A80(&qword_100478988);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v155 = (char *)&v142 - v5;
  uint64_t v6 = sub_100013A80(&qword_100478990);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v160 = (uint64_t)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v161 = (uint64_t)&v142 - v10;
  __chkstk_darwin(v9);
  long long v12 = (char *)&v142 - v11;
  uint64_t v167 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v150 = *(void *)(v167 - 8);
  uint64_t v13 = __chkstk_darwin(v167);
  uint64_t v148 = (uint64_t *)((char *)&v142 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v149 = (uint64_t *)((char *)&v142 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v162 = (uint64_t)&v142 - v18;
  __chkstk_darwin(v17);
  unint64_t v20 = (uint64_t *)((char *)&v142 - v19);
  sub_10018FE08(0, &qword_100478998);
  id v163 = sub_10031CA84();
  unint64_t v21 = self;
  id v153 = [v21 sharedLocalEndpoint];
  id v22 = [v153 outputDevices];
  if (!v22)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v23 = v22;
  sub_10018FE08(0, (unint64_t *)&qword_100478370);
  uint64_t v154 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v24 = (void *)sub_1001AC72C();
  id v25 = [v24 availableOutputDevices];

  if (v25)
  {
    unint64_t v152 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v26 = [v21 sharedLocalEndpoint];
    id v27 = [v26 predictedOutputDevice];

    uint64_t v151 = v4;
    if (v27)
    {
      id v28 = [v27 uid];
      if (v28)
      {
        Swift::String v29 = v28;
        uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v32 = v31;
        id v33 = [v27 name];
        if (v33)
        {
          unint64_t v34 = v33;
          uint64_t v169 = (void *)v30;
          uint64_t v168 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v166 = v35;

          uint64_t v36 = sub_100269208();
          uint64_t v164 = v37;
          uint64_t v165 = v36;
          LODWORD(v159) = v38;
          uint64_t v39 = type metadata accessor for RoutingItem.SelectionIndicator();
          int v40 = 1;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v12, 1, 1, v39);
          char v41 = sub_100267A04();
          LOBYTE(v34) = [v163 matchesUID:v29];

          BOOL v42 = 1;
          if ((v34 & 1) == 0)
          {
            uint64_t v43 = sub_100269208();
            uint64_t v45 = v44;
            unsigned int v47 = v46;
            BOOL v42 = sub_10029B21C(v43, v44, v46);
            sub_1001B9958(v43, v45, v47);
          }
          char v48 = variable initialization expression of MRDFastSyncGroupSession.hasEncounteredLowPowerError();
          char v49 = variable initialization expression of MRDFastSyncGroupSession.hasEncounteredLowPowerError();
          char v50 = variable initialization expression of MRDFastSyncGroupSession.hasEncounteredLowPowerError();
          swift_bridgeObjectRetain();
          LOBYTE(v170) = 1;
          char v139 = v49 & 1;
          uint64_t v51 = (uint64_t)v169;
          sub_10029F110((uint64_t)v169, v32, 0, 0, v168, v166, v165, v164, v20, v159, 1, v48 & 1, (uint64_t)v12, v41, v139, v42, v140, 0, 1,
            0,
            v50);
          uint64_t v52 = v162;
          sub_1001B9A38((uint64_t)v20, v162);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v170 = &_swiftEmptyDictionarySingleton;
          sub_1001B76C8(v52, v51, v32, isUniquelyReferenced_nonNull_native);
          id v54 = v170;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
        Swift::String v29 = v27;
      }
    }
    int v40 = 0;
    id v54 = &_swiftEmptyDictionarySingleton;
LABEL_13:
    uint64_t v55 = v154;
    if (v154 < 0) {
      goto LABEL_37;
    }
    uint64_t v56 = &selRef_snapshotWithDomain_type_subType_context_triggerThresholdValues_events_completion_;
    uint64_t v57 = (uint64_t)v155;
    if ((v154 & 0x4000000000000000) != 0) {
      goto LABEL_38;
    }
    uint64_t v58 = *(void *)((v154 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v58)
    {
      while (v58 < 1)
      {
        __break(1u);
LABEL_37:
        uint64_t v56 = &selRef_snapshotWithDomain_type_subType_context_triggerThresholdValues_events_completion_;
        uint64_t v57 = (uint64_t)v155;
LABEL_38:
        swift_bridgeObjectRetain();
        uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v58) {
          goto LABEL_39;
        }
      }
      uint64_t v59 = 0;
      uint64_t v168 = v55 & 0xC000000000000001;
      uint64_t v156 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v150 + 56);
      Swift::String v146 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48);
      int v147 = v40 ^ 1;
      uint64_t v164 = v58;
      do
      {
        if (v168) {
          id v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v60 = *(id *)(v55 + 8 * v59 + 32);
        }
        int v61 = v60;
        id v62 = [v60 v56[209]];
        if (v62)
        {
          int v63 = v62;
          uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v66 = v65;
          id v67 = [v61 name];
          if (v67)
          {
            uint64_t v68 = v67;
            uint64_t v165 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v166 = v69;

            if (!v54[2])
            {
              (*v156)(v57, 1, 1, v167);
LABEL_32:
              uint64_t v169 = v54;
              sub_100009A08(v57, &qword_100478988);
              id v74 = v153;
              char v75 = [v153 volumeControlCapabilitiesForOutputDeviceUID:v63];
              [v74 volumeForOutputDeviceUID:v63];
              unsigned int v77 = v76;
              uint64_t v78 = sub_100269208();
              uint64_t v158 = v79;
              uint64_t v159 = v78;
              LODWORD(v157) = v80;
              uint64_t v81 = type metadata accessor for RoutingItem.SelectionIndicator();
              BOOL v82 = 1;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v161, 1, 1, v81);
              char v83 = sub_100267A04();
              LOBYTE(v74) = [v163 matchesUID:v63];

              if ((v74 & 1) == 0)
              {
                uint64_t v84 = sub_100269208();
                uint64_t v86 = v85;
                char v87 = v75;
                unsigned int v89 = v88;
                BOOL v82 = sub_10029B21C(v84, v85, v88);
                unsigned int v90 = v89;
                char v75 = v87;
                sub_1001B9958(v84, v86, v90);
              }
              char v91 = sub_10029E94C(v75);
              char v92 = variable initialization expression of MRDFastSyncGroupSession.hasEncounteredLowPowerError();
              char v93 = variable initialization expression of MRDFastSyncGroupSession.hasEncounteredLowPowerError();
              swift_bridgeObjectRetain();
              LOBYTE(v170) = 0;
              char v141 = v91;
              uint64_t v94 = v149;
              sub_10029F110(v64, v66, 0, 0, v165, v166, v159, (uint64_t)v158, v149, v157, v147, v92 & 1, v161, v83, v93 & 1, v82, v140, v77, 0,
                (unint64_t)v77 >> 48,
                v141);
              uint64_t v95 = v162;
              sub_1001B9A38((uint64_t)v94, v162);
              uint64_t v96 = (uint64_t)v169;
              char v97 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v170 = (void *)v96;
              sub_1001B76C8(v95, v64, v66, v97);
              id v54 = v170;

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v56 = &selRef_snapshotWithDomain_type_subType_context_triggerThresholdValues_events_completion_;
              uint64_t v55 = v154;
              uint64_t v57 = (uint64_t)v155;
              uint64_t v58 = v164;
              goto LABEL_19;
            }
            swift_bridgeObjectRetain();
            unint64_t v70 = sub_100013660(v64, v66);
            if (v71)
            {
              sub_1001B9A9C(v54[7] + *(void *)(v150 + 72) * v70, v57);
              uint64_t v72 = 0;
            }
            else
            {
              uint64_t v72 = 1;
            }
            uint64_t v73 = v167;
            (*v156)(v57, v72, 1, v167);
            swift_bridgeObjectRelease();
            if ((*v146)(v57, 1, v73) == 1) {
              goto LABEL_32;
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            sub_100009A08(v57, &qword_100478988);
            uint64_t v58 = v164;
          }
          else
          {
            swift_bridgeObjectRelease();

            uint64_t v58 = v164;
          }
        }
        else
        {
        }
LABEL_19:
        ++v59;
      }
      while (v58 != v59);
    }
LABEL_39:
    uint64_t v169 = v54;
    swift_bridgeObjectRelease();
    unint64_t v98 = v152;
    if (v152 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v99 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v99 = *(void *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v100 = (uint64_t)v151;
    if (!v99)
    {
LABEL_62:
      swift_bridgeObjectRelease();
      uint64_t v170 = v169;
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      Swift::String v136 = v143;
      KeyPathComparator.init<A>(_:order:)();
      sub_100013A80(&qword_1004789A0);
      sub_1000155BC(&qword_1004789A8, &qword_1004789A0);
      sub_1000155BC(&qword_1004789B0, &qword_100478980);
      uint64_t v137 = v145;
      Sequence.sorted<A>(using:)();

      (*(void (**)(char *, uint64_t))(v144 + 8))(v136, v137);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    if (v99 >= 1)
    {
      uint64_t v101 = 0;
      uint64_t v168 = v98 & 0xC000000000000001;
      uint64_t v157 = v99;
      uint64_t v158 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v150 + 56);
      uint64_t v156 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v150 + 48);
      while (1)
      {
        if (v168) {
          id v102 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v102 = *(id *)(v98 + 8 * v101 + 32);
        }
        uint64_t v103 = v102;
        id v104 = [v102 v56[209]];
        if (v104)
        {
          uint64_t v105 = v104;
          uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v108 = v107;
          id v109 = [v103 name];
          if (v109)
          {
            uint64_t v110 = v109;
            uint64_t v165 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v166 = v111;

            uint64_t v112 = (uint64_t)v169;
            if (!v169[2])
            {
              (*v158)(v100, 1, 1, v167);
LABEL_58:
              sub_100009A08(v100, &qword_100478988);
              uint64_t v164 = sub_100269208();
              uint64_t v161 = v117;
              LODWORD(v159) = v118;
              uint64_t v119 = type metadata accessor for RoutingItem.SelectionIndicator();
              BOOL v120 = 1;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v160, 1, 1, v119);
              char v121 = sub_100267A04();
              unsigned __int8 v122 = [v163 matchesUID:v105];

              if ((v122 & 1) == 0)
              {
                uint64_t v123 = sub_100269208();
                uint64_t v125 = v124;
                unsigned int v127 = v126;
                BOOL v120 = sub_10029B21C(v123, v124, v126);
                sub_1001B9958(v123, v125, v127);
              }
              char v128 = variable initialization expression of MRDFastSyncGroupSession.hasEncounteredLowPowerError();
              char v129 = variable initialization expression of MRDFastSyncGroupSession.hasEncounteredLowPowerError();
              char v130 = variable initialization expression of MRDFastSyncGroupSession.hasEncounteredLowPowerError();
              char v131 = variable initialization expression of MRDFastSyncGroupSession.hasEncounteredLowPowerError();
              swift_bridgeObjectRetain();
              LOBYTE(v170) = 1;
              char v138 = v128 & 1;
              uint64_t v132 = v148;
              sub_10029F110(v106, v108, 0, 0, v165, v166, v164, v161, v148, v159, v138, v129 & 1, v160, v121, v130 & 1, v120, v140, 0, 1,
                0,
                v131);
              uint64_t v133 = v162;
              sub_1001B9A38((uint64_t)v132, v162);
              uint64_t v134 = (uint64_t)v169;
              char v135 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v170 = (void *)v134;
              sub_1001B76C8(v133, v106, v108, v135);
              uint64_t v169 = v170;

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v100 = (uint64_t)v151;
              unint64_t v98 = v152;
              uint64_t v56 = &selRef_snapshotWithDomain_type_subType_context_triggerThresholdValues_events_completion_;
              uint64_t v99 = v157;
              goto LABEL_45;
            }
            swift_bridgeObjectRetain();
            unint64_t v113 = sub_100013660(v106, v108);
            if (v114)
            {
              sub_1001B9A9C(*(void *)(v112 + 56) + *(void *)(v150 + 72) * v113, v100);
              uint64_t v115 = 0;
            }
            else
            {
              uint64_t v115 = 1;
            }
            uint64_t v116 = v167;
            (*v158)(v100, v115, 1, v167);
            swift_bridgeObjectRelease();
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v156)(v100, 1, v116) == 1) {
              goto LABEL_58;
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            sub_100009A08(v100, &qword_100478988);
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        else
        {
        }
LABEL_45:
        if (v99 == ++v101) {
          goto LABEL_62;
        }
      }
    }
    __break(1u);
    goto LABEL_65;
  }
LABEL_66:
  __break(1u);
}

uint64_t sub_1001AE1A4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_itemType;
  uint64_t v2 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingMode;
  uint64_t v4 = type metadata accessor for RoutingMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001B9788(v0 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_delegate);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource____lazy_storage___discoverySession));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1001AE2B8()
{
  return sub_1001AE2D0((void (*)(void))sub_1001AE1A4);
}

uint64_t sub_1001AE2D0(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t sub_1001AE32C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_1001AE350()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_1001AE374()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t (*sub_1001AE398(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 216))();
  return sub_1001AB120;
}

void sub_1001AE410(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_1001AE458()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_1001AE47C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 352))();
}

uint64_t sub_1001AE4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v227 = a3;
  uint64_t v238 = a2;
  v248 = (void **)a1;
  uint64_t v236 = *v3;
  uint64_t v216 = type metadata accessor for RoutingControl.RoutingControlType();
  uint64_t v215 = *(void *)(v216 - 8);
  __chkstk_darwin(v216);
  v217 = &v204[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v220 = type metadata accessor for RoutingControl();
  uint64_t v219 = *(void *)(v220 - 8);
  __chkstk_darwin(v220);
  v218 = &v204[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100013A80(&qword_100478988);
  __chkstk_darwin(v6 - 8);
  v223 = &v204[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v222 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v221 = *(void *)(v222 - 8);
  uint64_t v8 = __chkstk_darwin(v222);
  v213 = &v204[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v214 = &v204[-v10];
  uint64_t v229 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v228 = *(void *)(v229 - 8);
  __chkstk_darwin(v229);
  v230 = &v204[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for RoutingInteraction();
  uint64_t v246 = *(void *)(v12 - 8);
  uint64_t v247 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  v207 = &v204[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v13);
  v208 = &v204[-v16];
  uint64_t v17 = __chkstk_darwin(v15);
  v225 = &v204[-v18];
  uint64_t v224 = v19;
  __chkstk_darwin(v17);
  v240 = &v204[-v20];
  uint64_t v239 = type metadata accessor for Logger();
  v244 = *(unsigned char **)(v239 - 8);
  uint64_t v21 = __chkstk_darwin(v239);
  v212 = &v204[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v241 = &v204[-v23];
  uint64_t v24 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v242 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = __chkstk_darwin(v24);
  v226 = &v204[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  Swift::String v29 = &v204[-v28];
  uint64_t v30 = type metadata accessor for ContinuousClock();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void *)(v31 + 64);
  uint64_t v33 = __chkstk_darwin(v30);
  unint64_t v34 = &v204[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v33);
  uint64_t v36 = &v204[-v35];
  uint64_t v235 = RoutingInteraction.identifier.getter();
  unint64_t v237 = v37;
  ContinuousClock.init()();
  ContinuousClock.now.getter();
  int v38 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v31 + 16);
  v232 = v36;
  v38(v34, v36, v30);
  uint64_t v39 = v25;
  uint64_t v243 = v25;
  int v40 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 16);
  char v41 = v226;
  v231 = v29;
  v40(v226, v29, v24);
  unint64_t v42 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v43 = (v32 + *(unsigned __int8 *)(v39 + 80) + v42) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v44 = (v26 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v45 = (v44 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v47 = swift_allocObject();
  unint64_t v48 = v47 + v42;
  uint64_t v234 = v31;
  char v49 = *(void (**)(unint64_t, unsigned char *, uint64_t))(v31 + 32);
  uint64_t v233 = v30;
  uint64_t v50 = v239;
  uint64_t v51 = (uint64_t)v248;
  v49(v48, v34, v30);
  uint64_t v52 = v235;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v243 + 32))(v47 + v43, v41, v242);
  uint64_t v53 = (uint64_t *)(v47 + v44);
  id v54 = (void *)v237;
  *uint64_t v53 = v52;
  v53[1] = (uint64_t)v54;
  uint64_t v55 = (void *)(v47 + v45);
  uint64_t v56 = v54;
  uint64_t v57 = v227;
  void *v55 = v238;
  v55[1] = v57;
  uint64_t v238 = v47;
  *(void *)(v47 + v46) = v236;
  uint64_t v58 = v50;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v59 = sub_1001A69C4();
  id v60 = (void (*)(void))*((void *)v244 + 2);
  uint64_t v210 = v59;
  v211 = v244 + 16;
  v209 = (void (*)(unsigned char *, uint64_t, uint64_t))v60;
  v60(v241);
  int v61 = *(unsigned char **)(v246 + 16);
  uint64_t v227 = v246 + 16;
  v226 = v61;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v61)(v240, v51, v247);
  swift_bridgeObjectRetain_n();
  uint64_t v62 = v245;
  swift_retain_n();
  int v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.default.getter();
  int v65 = v64;
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v66 = swift_slowAlloc();
    v206 = (void **)swift_slowAlloc();
    aBlock = v206;
    *(_DWORD *)uint64_t v66 = 136315906;
    int v205 = v65;
    uint64_t v67 = _typeName(_:qualified:)();
    unint64_t v68 = (unint64_t)v56;
    uint64_t v249 = sub_10018A9E0(v67, v69, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 2080;
    uint64_t v71 = *(void *)(v62 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
    unint64_t v70 = *(void *)(v62 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
    swift_bridgeObjectRetain();
    uint64_t v72 = v71;
    uint64_t v56 = (void *)v68;
    uint64_t v249 = sub_10018A9E0(v72, v70, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v249 = sub_10018A9E0(v52, v68, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v66 + 32) = 2080;
    uint64_t v73 = v247;
    sub_1001B97B0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    id v74 = v240;
    uint64_t v75 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v249 = sub_10018A9E0(v75, v76, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v77 = v246;
    uint64_t v78 = v74;
    uint64_t v58 = v239;
    (*(void (**)(unsigned char *, uint64_t))(v246 + 8))(v78, v73);
    _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v205, "[%s]<%s> interact<%s> - interaction: %s", (uint8_t *)v66, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
    uint64_t v77 = v246;
    (*(void (**)(unsigned char *, uint64_t))(v246 + 8))(v240, v247);
  }

  (*((void (**)(unsigned char *, uint64_t))v244 + 1))(v241, v58);
  uint64_t v79 = v230;
  RoutingInteraction.action.getter();
  uint64_t v80 = v228;
  uint64_t v81 = v229;
  int v82 = (*(uint64_t (**)(void *, uint64_t))(v228 + 88))(v79, v229);
  if (v82 != enum case for RoutingInteraction.Action.add(_:))
  {
    if (v82 == enum case for RoutingInteraction.Action.remove(_:))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v80 + 96))(v79, v81);
      uint64_t v107 = (unsigned char *)v79[1];
      v244 = (unsigned char *)*v79;
      uint64_t v106 = v244;
      swift_bridgeObjectRelease();
      uint64_t v108 = v77;
      id v109 = MRRequestDetailsInitiatorRoutePicker;
      RoutingInteraction.identifier.getter();
      sub_1001B97B0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      uint64_t v110 = v247;
      dispatch thunk of CustomStringConvertible.description.getter();
      id v111 = objc_allocWithZone((Class)MRRequestDetails);
      NSString v112 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v113 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v114 = [v111 initWithInitiator:v109 requestID:v112 reason:v113 userInitiated:1];

      sub_100013A80(&qword_100478690);
      uint64_t v115 = swift_allocObject();
      *(_OWORD *)(v115 + 16) = xmmword_1003C58B0;
      *(void *)(v115 + 32) = v106;
      *(void *)(v115 + 40) = v107;
      v241 = v107;
      id v116 = objc_allocWithZone((Class)MRGroupTopologyModificationRequest);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v118 = [v116 initWithRequestDetails:v114 type:2 outputDeviceUIDs:isa];

      id v119 = [self sharedLocalEndpoint];
      uint64_t v120 = v245;
      char v121 = (void *)(*(uint64_t (**)(void))(*(void *)v245 + 152))();
      unsigned __int8 v122 = v225;
      ((void (*)(unsigned char *, void **, uint64_t))v226)(v225, v248, v110);
      unint64_t v123 = (*(unsigned __int8 *)(v108 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
      uint64_t v124 = (char *)swift_allocObject();
      uint64_t v125 = v238;
      *((void *)v124 + 2) = sub_1001B9C90;
      *((void *)v124 + 3) = v125;
      unsigned int v126 = v241;
      *((void *)v124 + 4) = v244;
      *((void *)v124 + 5) = v126;
      *((void *)v124 + 6) = v120;
      (*(void (**)(char *, unsigned char *, uint64_t))(v108 + 32))(&v124[v123], v122, v110);
      v254 = sub_1001B9F40;
      v255 = v124;
      aBlock = _NSConcreteStackBlock;
      unint64_t v251 = 1107296256;
      v252 = sub_1001872F8;
      v253 = &unk_100420EE0;
      unsigned int v127 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      [v119 modifyTopologyWithRequest:v118 withReplyQueue:v121 completion:v127];
      _Block_release(v127);
      swift_release();

      goto LABEL_8;
    }
    if (v82 == enum case for RoutingInteraction.Action.set(_:))
    {
      (*(void (**)(void *, uint64_t))(v80 + 96))(v79, v81);
      char v130 = (unsigned char *)*v79;
      uint64_t v129 = v79[1];
      swift_bridgeObjectRelease();
      id v131 = MRRequestDetailsInitiatorRoutePicker;
      RoutingInteraction.identifier.getter();
      sub_1001B97B0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      dispatch thunk of CustomStringConvertible.description.getter();
      id v132 = objc_allocWithZone((Class)MRRequestDetails);
      NSString v133 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v134 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v135 = [v132 initWithInitiator:v131 requestID:v133 reason:v134 userInitiated:1];

      sub_100013A80(&qword_100478690);
      uint64_t v136 = swift_allocObject();
      *(_OWORD *)(v136 + 16) = xmmword_1003C58B0;
      *(void *)(v136 + 32) = v130;
      *(void *)(v136 + 40) = v129;
      id v137 = objc_allocWithZone((Class)MRGroupTopologyModificationRequest);
      swift_bridgeObjectRetain();
      Class v138 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      v241 = [v137 initWithRequestDetails:v135 type:3 outputDeviceUIDs:v138];

      v230 = (unsigned char *)self;
      v240 = [v230 sharedLocalEndpoint];
      uint64_t v139 = v245;
      int v140 = (void *)(*(uint64_t (**)(void))(*(void *)v245 + 152))();
      char v141 = v225;
      uint64_t v142 = v247;
      ((void (*)(unsigned char *, void **, uint64_t))v226)(v225, v248, v247);
      uint64_t v143 = v246;
      unint64_t v144 = (*(unsigned __int8 *)(v246 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v246 + 80);
      uint64_t v145 = (char *)swift_allocObject();
      uint64_t v146 = v238;
      *((void *)v145 + 2) = sub_1001B9C90;
      *((void *)v145 + 3) = v146;
      *((void *)v145 + 4) = v130;
      *((void *)v145 + 5) = v129;
      *((void *)v145 + 6) = v139;
      (*(void (**)(char *, unsigned char *, uint64_t))(v143 + 32))(&v145[v144], v141, v142);
      v254 = sub_1001B9DE0;
      v255 = v145;
      aBlock = _NSConcreteStackBlock;
      unint64_t v251 = 1107296256;
      v252 = sub_1001872F8;
      v253 = &unk_100420E90;
      int v147 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_release();
      id v148 = v240;
      [v240 modifyTopologyWithRequest:v241 withReplyQueue:v140 completion:v147];
      _Block_release(v147);

      uint64_t v149 = (*(uint64_t (**)(void))(*(void *)v139 + 224))();
      uint64_t v150 = *(void *)(v149 + 16);
      if (v150)
      {
        uint64_t v151 = v221;
        uint64_t v152 = v149 + ((*(unsigned __int8 *)(v221 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v221 + 80));
        uint64_t v153 = *(void *)(v221 + 72);
        unint64_t v154 = v237;
        uint64_t v155 = v213;
        while (1)
        {
          sub_1001B9A9C(v152, (uint64_t)v155);
          BOOL v156 = (unsigned char *)*v155 == v130 && v155[1] == v129;
          if (v156 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          sub_1001B9E00((uint64_t)v155);
          v152 += v153;
          if (!--v150)
          {
            uint64_t v157 = 1;
            uint64_t v158 = v223;
            goto LABEL_26;
          }
        }
        uint64_t v158 = v223;
        sub_1001B9A38((uint64_t)v155, (uint64_t)v223);
        uint64_t v157 = 0;
      }
      else
      {
        unint64_t v154 = v237;
        uint64_t v158 = v223;
        uint64_t v151 = v221;
        uint64_t v157 = 1;
      }
LABEL_26:
      uint64_t v168 = v222;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v151 + 56))(v158, v157, 1, v222);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v151 + 48))(v158, 1, v168) == 1)
      {
        swift_bridgeObjectRelease();
        swift_release();

        (*(void (**)(unsigned char *, uint64_t))(v243 + 8))(v231, v242);
        (*(void (**)(unsigned char *, uint64_t))(v234 + 8))(v232, v233);
        return sub_100009A08((uint64_t)v158, &qword_100478988);
      }
      uint64_t v169 = v214;
      sub_1001B9A38((uint64_t)v158, (uint64_t)v214);
      uint64_t v170 = &v169[*(int *)(v168 + 56)];
      unsigned int v171 = *((unsigned __int16 *)v170 + 8);
      if (((v171 >> 8) & 6 | (v171 >> 7) & 1) == 5)
      {
        unint64_t v172 = v212;
        uint64_t v173 = v239;
        v209(v212, v210, v239);
        swift_retain_n();
        swift_bridgeObjectRetain();
        unsigned __int8 v174 = Logger.logObject.getter();
        os_log_type_t v175 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v174, v175))
        {
          uint64_t v176 = swift_slowAlloc();
          v248 = (void **)swift_slowAlloc();
          aBlock = v248;
          *(_DWORD *)uint64_t v176 = 136315650;
          uint64_t v177 = _typeName(_:qualified:)();
          uint64_t v249 = sub_10018A9E0(v177, v178, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v176 + 12) = 2080;
          uint64_t v179 = *(void *)(v245 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
          unint64_t v180 = *(void *)(v245 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
          swift_bridgeObjectRetain();
          uint64_t v249 = sub_10018A9E0(v179, v180, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v176 + 22) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v249 = sub_10018A9E0(v235, v154, (uint64_t *)&aBlock);
          uint64_t v169 = v214;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v174, v175, "[%s]<%s> interact<%s> - reset predicted item", (uint8_t *)v176, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*((void (**)(unsigned char *, uint64_t))v244 + 1))(v212, v239);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release_n();
          (*((void (**)(unsigned char *, uint64_t))v244 + 1))(v172, v173);
        }
        id v183 = [v230 sharedLocalEndpoint];
        [v183 resetPredictedOutputDevice];
        swift_release();
      }
      else
      {
        uint64_t v182 = *(void *)v170;
        uint64_t v181 = *((void *)v170 + 1);
        sub_1001B9E5C(*(void *)v170, v181, *((unsigned __int16 *)v170 + 8));
        swift_bridgeObjectRelease();
        swift_release();

        sub_1001B9958(v182, v181, v171);
      }
      sub_1001B9E00((uint64_t)v169);
      goto LABEL_8;
    }
    if (v82 == enum case for RoutingInteraction.Action.control(_:))
    {
      (*(void (**)(void *, uint64_t))(v80 + 96))(v79, v81);
      uint64_t v159 = swift_projectBox();
      uint64_t v160 = v219;
      uint64_t v161 = (uint64_t)v218;
      uint64_t v162 = v220;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v219 + 16))(v218, v159, v220);
      id v163 = v217;
      RoutingControl.type.getter();
      uint64_t v164 = v215;
      uint64_t v165 = v216;
      int v166 = (*(uint64_t (**)(unsigned char *, uint64_t))(v215 + 88))(v163, v216);
      if (v166 == enum case for RoutingControl.RoutingControlType.absoluteVolume(_:)) {
        goto LABEL_33;
      }
      if (v166 == enum case for RoutingControl.RoutingControlType.relativeVolume(_:))
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v164 + 96))(v163, v165);
        uint64_t v167 = type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType();
        (*(void (**)(unsigned char *, uint64_t))(*(void *)(v167 - 8) + 8))(v163, v167);
LABEL_34:
        sub_1001B20B4(v161, (uint64_t)v248, v238);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v161, v162);
        (*(void (**)(unsigned char *, uint64_t))(v243 + 8))(v231, v242);
        (*(void (**)(unsigned char *, uint64_t))(v234 + 8))(v232, v233);
        return swift_release();
      }
      if (v166 == enum case for RoutingControl.RoutingControlType.mute(_:))
      {
LABEL_33:
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
      ((void (*)(unsigned char *, void **, uint64_t))v226)(v208, v248, v247);
      aBlock = 0;
      unint64_t v251 = 0xE000000000000000;
      _StringGuts.grow(_:)(53);
      v194._countAndFlagsBits = 91;
      v194._object = (void *)0xE100000000000000;
      String.append(_:)(v194);
      v195._countAndFlagsBits = _typeName(_:qualified:)();
      String.append(_:)(v195);
      swift_bridgeObjectRelease();
      v196._countAndFlagsBits = 15453;
      v196._object = (void *)0xE200000000000000;
      String.append(_:)(v196);
      uint64_t v197 = *(void *)(v245 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
      v198 = *(void **)(v245 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
      swift_bridgeObjectRetain();
      v199._countAndFlagsBits = v197;
      v199._object = v198;
      String.append(_:)(v199);
      swift_bridgeObjectRelease();
      v200._countAndFlagsBits = 0x617265746E69203ELL;
      v200._object = (void *)0xEB000000003C7463;
      String.append(_:)(v200);
      v201._countAndFlagsBits = v235;
      v201._object = v56;
      String.append(_:)(v201);
      v202._object = (void *)0x80000001003B4870;
      v202._countAndFlagsBits = 0xD00000000000001FLL;
      String.append(_:)(v202);
      sub_1001B97B0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      v203._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v203);
      swift_bridgeObjectRelease();
    }
    else
    {
      ((void (*)(unsigned char *, void **, uint64_t))v226)(v207, v248, v247);
      aBlock = 0;
      unint64_t v251 = 0xE000000000000000;
      _StringGuts.grow(_:)(53);
      v184._countAndFlagsBits = 91;
      v184._object = (void *)0xE100000000000000;
      String.append(_:)(v184);
      v185._countAndFlagsBits = _typeName(_:qualified:)();
      String.append(_:)(v185);
      swift_bridgeObjectRelease();
      v186._countAndFlagsBits = 15453;
      v186._object = (void *)0xE200000000000000;
      String.append(_:)(v186);
      uint64_t v187 = *(void *)(v245 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
      v188 = *(void **)(v245 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
      swift_bridgeObjectRetain();
      v189._countAndFlagsBits = v187;
      v189._object = v188;
      String.append(_:)(v189);
      swift_bridgeObjectRelease();
      v190._countAndFlagsBits = 0x617265746E69203ELL;
      v190._object = (void *)0xEB000000003C7463;
      String.append(_:)(v190);
      v191._countAndFlagsBits = v235;
      v191._object = v56;
      String.append(_:)(v191);
      v192._object = (void *)0x80000001003B4870;
      v192._countAndFlagsBits = 0xD00000000000001FLL;
      String.append(_:)(v192);
      sub_1001B97B0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      v193._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v193);
      swift_bridgeObjectRelease();
    }
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v80 + 96))(v79, v81);
  uint64_t v83 = v245;
  uint64_t v84 = (unsigned char *)v79[1];
  v241 = (unsigned char *)*v79;
  uint64_t v85 = v241;
  v244 = v84;
  swift_bridgeObjectRelease();
  uint64_t v86 = v77;
  id v87 = MRRequestDetailsInitiatorRoutePicker;
  RoutingInteraction.identifier.getter();
  sub_1001B97B0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
  uint64_t v88 = v247;
  dispatch thunk of CustomStringConvertible.description.getter();
  id v89 = objc_allocWithZone((Class)MRRequestDetails);
  NSString v90 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v91 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v92 = [v89 initWithInitiator:v87 requestID:v90 reason:v91 userInitiated:1];

  sub_100013A80(&qword_100478690);
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_1003C58B0;
  uint64_t v94 = v244;
  *(void *)(v93 + 32) = v85;
  *(void *)(v93 + 40) = v94;
  id v95 = objc_allocWithZone((Class)MRGroupTopologyModificationRequest);
  swift_bridgeObjectRetain();
  Class v96 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v97 = [v95 initWithRequestDetails:v92 type:1 outputDeviceUIDs:v96];

  id v98 = [self sharedLocalEndpoint];
  uint64_t v99 = (void *)(*(uint64_t (**)(void))(*(void *)v83 + 152))();
  uint64_t v100 = v225;
  ((void (*)(unsigned char *, void **, uint64_t))v226)(v225, v248, v88);
  unint64_t v101 = (*(unsigned __int8 *)(v86 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  id v102 = (char *)swift_allocObject();
  uint64_t v103 = v238;
  *((void *)v102 + 2) = sub_1001B9C90;
  *((void *)v102 + 3) = v103;
  id v104 = v244;
  *((void *)v102 + 4) = v241;
  *((void *)v102 + 5) = v104;
  *((void *)v102 + 6) = v83;
  (*(void (**)(char *, unsigned char *, uint64_t))(v86 + 32))(&v102[v101], v100, v88);
  v254 = sub_1001BA040;
  v255 = v102;
  aBlock = _NSConcreteStackBlock;
  unint64_t v251 = 1107296256;
  v252 = sub_1001872F8;
  v253 = &unk_100420F30;
  uint64_t v105 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v98 modifyTopologyWithRequest:v97 withReplyQueue:v99 completion:v105];
  _Block_release(v105);
  swift_release();

LABEL_8:
  (*(void (**)(unsigned char *, uint64_t))(v243 + 8))(v231, v242);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v234 + 8))(v232, v233);
}

uint64_t sub_1001B0388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10)
{
  uint64_t v54 = a7;
  uint64_t v68 = a6;
  uint64_t v72 = a9;
  uint64_t v73 = a10;
  uint64_t v15 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  __chkstk_darwin(v15);
  os_log_type_t v64 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v59 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v56 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v61 = *(void *)(v19 - 8);
  uint64_t v62 = v19;
  __chkstk_darwin(v19);
  uint64_t v57 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v70 = *(void *)(v25 - 8);
  uint64_t v71 = v25;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  ContinuousClock.now.getter();
  unint64_t v69 = v27;
  uint64_t v28 = ContinuousClock.Instant.duration(to:)();
  uint64_t v55 = v29;
  uint64_t v30 = sub_1001A69C4();
  uint64_t v68 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v30, v21);
  swift_bridgeObjectRetain();
  sub_1001BB2C8(a1, a2, a3, a4);
  swift_bridgeObjectRetain();
  sub_1001BB2C8(a1, a2, a3, a4);
  uint64_t v31 = Logger.logObject.getter();
  int v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, (os_log_type_t)v32))
  {
    uint64_t v50 = v28;
    os_log_t v51 = v31;
    uint64_t v52 = v24;
    uint64_t v53 = v21;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v79 = v48;
    *(_DWORD *)uint64_t v33 = 136315906;
    uint64_t v34 = _typeName(_:qualified:)();
    uint64_t v74 = sub_10018A9E0(v34, v35, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_10018A9E0(v54, a8, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 22) = 2080;
    int v49 = v32;
    if (a1)
    {
      uint64_t v74 = 0;
      unint64_t v75 = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      strcpy((char *)v78, " with error: ");
      HIWORD(v78[1]) = -4864;
      uint64_t v74 = a1;
      unint64_t v75 = a2;
      uint64_t v76 = a3;
      char v77 = a4;
      swift_errorRetain();
      sub_100185894(a2, a3, a4);
      sub_1001BB378();
      v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      sub_1001859D4(a2, a3, a4);
      v37._countAndFlagsBits = 32;
      v37._object = (void *)0xE100000000000000;
      String.append(_:)(v37);
      uint64_t v38 = v78[0];
      unint64_t v39 = v78[1];
    }
    else
    {
      unint64_t v39 = 0xE100000000000000;
      uint64_t v38 = 32;
    }
    uint64_t v74 = sub_10018A9E0(v38, v39, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001BB320(a1, a2, a3, a4);
    sub_1001BB320(a1, a2, a3, a4);
    *(_WORD *)(v33 + 32) = 2080;
    uint64_t v54 = v33 + 34;
    sub_100013A80(&qword_100478D50);
    type metadata accessor for Duration.UnitsFormatStyle.Unit();
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1003C5BA0;
    static Duration.UnitsFormatStyle.Unit.seconds.getter();
    static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
    sub_1001BAA1C(v40);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    char v41 = v56;
    static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter();
    unint64_t v42 = v59;
    static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
    unint64_t v43 = v64;
    static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
    unint64_t v44 = v57;
    static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v67);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v65);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v60);
    sub_1001B97B0(&qword_100478D58, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
    uint64_t v45 = v62;
    Duration.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v45);
    uint64_t v74 = sub_10018A9E0(v74, v75, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v46 = v51;
    _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v49, "[%s] interact<%s> - finished%sin: %s", (uint8_t *)v33, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v68 + 8))(v52, v53);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1001BB320(a1, a2, a3, a4);
    sub_1001BB320(a1, a2, a3, a4);

    (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v21);
  }
  v72(a1, a2, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v69, v71);
}

uint64_t sub_1001B0CFC(uint64_t a1, void (*a2)(void, void, void, void), uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v138 = a5;
  unsigned int v126 = a4;
  uint64_t v141 = a3;
  uint64_t v125 = a2;
  uint64_t v128 = *v5;
  uint64_t v124 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  unsigned __int8 v122 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for DispatchQoS();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  id v119 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for DispatchTime();
  uint64_t v118 = *(void *)(v133 - 8);
  uint64_t v9 = __chkstk_darwin(v133);
  id v116 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v117 = (char *)&v107 - v11;
  uint64_t v12 = type metadata accessor for RoutingInteraction();
  uint64_t v129 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v143 = *(void *)(v137 - 8);
  uint64_t v19 = __chkstk_darwin(v137);
  int v140 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  id v132 = (char *)&v107 - v22;
  uint64_t v115 = v23;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v107 - v24;
  uint64_t v26 = type metadata accessor for ContinuousClock();
  uint64_t v135 = *(void *)(v26 - 8);
  uint64_t v136 = v26;
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v139 = (uint64_t)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v131 = (uint64_t)&v107 - v30;
  uint64_t v114 = v31;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v107 - v32;
  ContinuousClock.init()();
  uint64_t v127 = RoutingInteraction.identifier.getter();
  unint64_t v35 = v34;
  char v130 = v25;
  NSString v134 = v33;
  ContinuousClock.now.getter();
  uint64_t v36 = sub_1001A69C4();
  uint64_t v112 = v16;
  Swift::String v37 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  NSString v113 = (void (*)(char *, uint64_t))v15;
  v37(v18, v36, v15);
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 16);
  id v109 = v14;
  uint64_t v39 = v144;
  uint64_t v110 = v12;
  v38(v14, a1, v12);
  swift_retain_n();
  unint64_t v142 = v35;
  swift_bridgeObjectRetain_n();
  id v111 = v18;
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v108 = swift_slowAlloc();
    aBlock[0] = v108;
    *(_DWORD *)uint64_t v42 = 136315906;
    os_log_t v107 = v40;
    uint64_t v43 = _typeName(_:qualified:)();
    uint64_t v145 = (void *)sub_10018A9E0(v43, v44, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    uint64_t v46 = *(void *)(v39 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
    unint64_t v45 = *(void *)(v39 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
    swift_bridgeObjectRetain();
    uint64_t v47 = v130;
    uint64_t v145 = (void *)sub_10018A9E0(v46, v45, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 22) = 2080;
    unint64_t v48 = v142;
    swift_bridgeObjectRetain();
    uint64_t v145 = (void *)sub_10018A9E0(v127, v48, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 32) = 2080;
    sub_1001B97B0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    os_log_type_t v49 = v41;
    uint64_t v50 = v109;
    uint64_t v51 = v110;
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v145 = (void *)sub_10018A9E0(v52, v53, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v50, v51);
    os_log_t v54 = v107;
    _os_log_impl((void *)&_mh_execute_header, v107, v49, "[%s]<%s> waitForItemStability<%s> - interaction: %s", (uint8_t *)v42, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, void))(v112 + 8))(v111, v113);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v109, v110);

    (*(void (**)(char *, void))(v112 + 8))(v111, v113);
    uint64_t v47 = v130;
  }
  uint64_t v55 = v135;
  uint64_t v56 = *(void (**)(uint64_t, char *, uint64_t))(v135 + 16);
  uint64_t v57 = v131;
  uint64_t v58 = v136;
  v56(v131, v134, v136);
  uint64_t v59 = v143;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v143 + 16);
  uint64_t v61 = v132;
  uint64_t v62 = v47;
  uint64_t v63 = v137;
  v60(v132, v62, v137);
  v56(v139, (char *)v57, v58);
  v60(v140, v61, v63);
  unint64_t v64 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  unint64_t v65 = (v114 + *(unsigned __int8 *)(v59 + 80) + v64) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v66 = (v115 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v66 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v68 = (v67 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v55 + 32))(v69 + v64, v131, v58);
  (*(void (**)(unint64_t, char *, uint64_t))(v143 + 32))(v69 + v65, v132, v63);
  uint64_t v70 = v144;
  *(void *)(v69 + v66) = v144;
  uint64_t v71 = (void *)(v69 + v67);
  uint64_t v72 = v141;
  unint64_t v73 = v142;
  *uint64_t v71 = v127;
  v71[1] = v73;
  uint64_t v74 = (void *)(v69 + v68);
  void *v74 = v125;
  v74[1] = v72;
  *(void *)(v69 + ((v68 + 23) & 0xFFFFFFFFFFFFFFF8)) = v128;
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v75 = sub_1001E78B8();
  uint64_t v131 = v75;
  uint64_t v77 = v76;
  uint64_t v78 = swift_allocObject();
  uint64_t v114 = v78 + 16;
  swift_weakInit();
  uint64_t v79 = (void *)swift_allocObject();
  uint64_t v80 = v126;
  v79[2] = v78;
  v79[3] = v80;
  v79[4] = v138;
  v79[5] = v75;
  v79[6] = v77;
  v79[7] = sub_1001BA5D0;
  v79[8] = v69;
  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + 16) = sub_1001BA5D0;
  *(void *)(v81 + 24) = v69;
  uint64_t v82 = swift_allocObject();
  *(void *)(v82 + 16) = sub_1001BA784;
  *(void *)(v82 + 24) = v79;
  uint64_t v83 = (void **)(v70 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_internalItemObservers);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  uint64_t v129 = v69;
  swift_retain_n();
  uint64_t v115 = v78;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v145 = *v83;
  *uint64_t v83 = (void *)0x8000000000000000;
  uint64_t v85 = v131;
  sub_1001B79E4((uint64_t)sub_1001BA8E4, v82, v131, v77, isUniquelyReferenced_nonNull_native);
  *uint64_t v83 = v145;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v86 = swift_endAccess();
  uint64_t v112 = (*(uint64_t (**)(uint64_t))(*(void *)v70 + 152))(v86);
  id v87 = v116;
  static DispatchTime.now()();
  uint64_t v88 = v117;
  + infix(_:_:)();
  NSString v113 = *(void (**)(char *, uint64_t))(v118 + 8);
  v113(v87, v133);
  uint64_t v89 = swift_allocObject();
  swift_weakInit();
  NSString v90 = (void *)swift_allocObject();
  v90[2] = v89;
  v90[3] = v85;
  v90[4] = v77;
  v90[5] = sub_1001BA8B8;
  v90[6] = v81;
  aBlock[4] = (uint64_t)sub_1001BA954;
  aBlock[5] = (uint64_t)v90;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100006760;
  aBlock[3] = (uint64_t)&unk_100421150;
  NSString v91 = _Block_copy(aBlock);
  id v132 = (char *)v77;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v118 = v81;
  swift_retain();
  id v92 = v119;
  static DispatchQoS.unspecified.getter();
  uint64_t v145 = _swiftEmptyArrayStorage;
  sub_1001B97B0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  uint64_t v93 = v122;
  uint64_t v94 = v124;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v95 = (void *)v112;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v91);

  (*(void (**)(char *, uint64_t))(v123 + 8))(v93, v94);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v92, v121);
  v113(v88, v133);
  swift_release();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(void))(*(void *)Strong + 224))();
    char v97 = v126();
    swift_bridgeObjectRelease();
    uint64_t v98 = v144;
    unint64_t v99 = v142;
    if (v97)
    {
      swift_beginAccess();
      uint64_t v100 = (uint64_t)v132;
      swift_bridgeObjectRetain();
      uint64_t v101 = sub_1001B5D04(v131, v100);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1001924CC(v101);
      sub_1001B343C(0, v139, (uint64_t)v140, v98, v127, v99, v125, v141, v128);
    }
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v102 = v136;
  uint64_t v103 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
  v103(v139, v136);
  id v104 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
  uint64_t v105 = v137;
  v104((uint64_t)v140, v137);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v104((uint64_t)v130, v105);
  v103((uint64_t)v134, v102);
  return swift_release();
}

uint64_t sub_1001B1DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HostedRoutingItem(0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = (void *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
  uint64_t v12 = *(void *)(v7 + 72);
  swift_bridgeObjectRetain();
  do
  {
    if (*v11 == a2 && v11[1] == a3)
    {
      sub_1001B9A9C((uint64_t)v11, (uint64_t)v9);
    }
    else
    {
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1001B9A9C((uint64_t)v11, (uint64_t)v9);
      if ((v14 & 1) == 0)
      {
        sub_1001B9E00((uint64_t)v9);
        goto LABEL_4;
      }
    }
    char v15 = v9[*(int *)(v6 + 36)];
    sub_1001B9E00((uint64_t)v9);
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = 1;
      goto LABEL_16;
    }
LABEL_4:
    uint64_t v11 = (void *)((char *)v11 + v12);
    --v10;
  }
  while (v10);
  uint64_t v16 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1001B1F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HostedRoutingItem(0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = (void *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
  uint64_t v12 = *(void *)(v7 + 72);
  swift_bridgeObjectRetain();
  do
  {
    if (*v11 == a2 && v11[1] == a3)
    {
      sub_1001B9A9C((uint64_t)v11, (uint64_t)v9);
    }
    else
    {
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1001B9A9C((uint64_t)v11, (uint64_t)v9);
      if ((v14 & 1) == 0)
      {
        sub_1001B9E00((uint64_t)v9);
        goto LABEL_4;
      }
    }
    char v15 = v9[*(int *)(v6 + 36)];
    sub_1001B9E00((uint64_t)v9);
    if (v15)
    {
      uint64_t v16 = 1;
      goto LABEL_16;
    }
LABEL_4:
    uint64_t v11 = (void *)((char *)v11 + v12);
    --v10;
  }
  while (v10);
  uint64_t v16 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  return v16;
}

void sub_1001B20B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v94 = a3;
  id v85 = *(id *)v4;
  uint64_t v86 = (void *)type metadata accessor for RoutingControl();
  uint64_t v81 = *(v86 - 1);
  uint64_t v7 = __chkstk_darwin(v86);
  uint64_t v82 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v84 = (char *)&v80 - v9;
  uint64_t v10 = type metadata accessor for RoutingInteraction();
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v92 = v10;
  __chkstk_darwin(v10);
  uint64_t v88 = v11;
  NSString v90 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RoutingControl.Target();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v83 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v80 - v16;
  uint64_t v18 = type metadata accessor for RoutingControl.RoutingControlType();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (int *)((char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = a2;
  id v87 = (id)RoutingInteraction.identifier.getter();
  uint64_t v23 = v22;
  uint64_t v93 = (*(uint64_t (**)(void))(*(void *)v4 + 152))();
  RoutingControl.type.getter();
  if ((*(unsigned int (**)(int *, uint64_t))(v19 + 88))(v21, v18) == enum case for RoutingControl.RoutingControlType.absoluteVolume(_:))
  {
    (*(void (**)(int *, uint64_t))(v19 + 96))(v21, v18);
    int v24 = *v21;
    RoutingControl.target.getter();
    int v25 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v17, v12);
    if (v25 == enum case for RoutingControl.Target.session(_:))
    {
      (*(void (**)(char *, uint64_t))(v13 + 96))(v17, v12);
      swift_bridgeObjectRelease();
      uint64_t v86 = [self sharedLocalEndpoint];
      aBlock = 0;
      unint64_t v96 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(23);
      swift_bridgeObjectRelease();
      aBlock = (void **)0xD000000000000014;
      unint64_t v96 = 0x80000001003B4B40;
      v26._countAndFlagsBits = (uint64_t)v87;
      v26._object = v23;
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
      v27._countAndFlagsBits = 62;
      v27._object = (void *)0xE100000000000000;
      String.append(_:)(v27);
      id v28 = objc_allocWithZone((Class)MRRequestDetails);
      NSString v29 = String._bridgeToObjectiveC()();
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v32 = [v28 initWithName:v29 requestID:v30 reason:v31];

      unint64_t v34 = v90;
      uint64_t v33 = v91;
      uint64_t v35 = v92;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v90, v89, v92);
      unint64_t v36 = (*(unsigned __int8 *)(v33 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      unint64_t v37 = (v88 + v36 + 3) & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v38 = (char *)swift_allocObject();
      uint64_t v40 = (void *)v93;
      uint64_t v39 = v94;
      *((void *)v38 + 2) = v93;
      *((void *)v38 + 3) = sub_1001B9C90;
      *((void *)v38 + 4) = v39;
      *((void *)v38 + 5) = v4;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v38[v36], v34, v35);
      *(_DWORD *)&v38[v37] = v24;
      unint64_t v99 = sub_1001BB0DC;
      uint64_t v100 = v38;
      aBlock = _NSConcreteStackBlock;
      unint64_t v96 = 1107296256;
      char v97 = sub_1001872F8;
      uint64_t v98 = &unk_100421240;
      os_log_type_t v41 = _Block_copy(&aBlock);
      id v42 = v40;
      swift_retain();
      swift_retain();
      uint64_t v43 = v86;
      swift_release();
      LODWORD(v44) = v24;
      unint64_t v45 = v32;
      [v43 setVolume:v32 details:v42 queue:v41 completion:v44];

      _Block_release(v41);
LABEL_6:

      return;
    }
    if (v25 == enum case for RoutingControl.Target.item(_:))
    {
      (*(void (**)(char *, uint64_t))(v13 + 96))(v17, v12);
      uint64_t v46 = sub_10029F468();
      uint64_t v83 = v47;
      uint64_t v84 = (char *)v46;
      swift_bridgeObjectRelease();
      id v85 = [self sharedLocalEndpoint];
      uint64_t v86 = String._bridgeToObjectiveC()();
      aBlock = 0;
      unint64_t v96 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(23);
      swift_bridgeObjectRelease();
      aBlock = (void **)0xD000000000000014;
      unint64_t v96 = 0x80000001003B4B40;
      v48._countAndFlagsBits = (uint64_t)v87;
      v48._object = v23;
      String.append(_:)(v48);
      swift_bridgeObjectRelease();
      v49._countAndFlagsBits = 62;
      v49._object = (void *)0xE100000000000000;
      String.append(_:)(v49);
      id v50 = objc_allocWithZone((Class)MRRequestDetails);
      NSString v51 = String._bridgeToObjectiveC()();
      NSString v52 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v53 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v87 = [v50 initWithName:v51 requestID:v52 reason:v53];

      os_log_t v54 = v90;
      uint64_t v55 = v91;
      uint64_t v56 = v92;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v90, v89, v92);
      unint64_t v57 = (*(unsigned __int8 *)(v55 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      unint64_t v58 = (v88 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v59 = (char *)swift_allocObject();
      uint64_t v40 = (void *)v93;
      uint64_t v60 = v94;
      *((void *)v59 + 2) = v93;
      *((void *)v59 + 3) = sub_1001B9C90;
      *((void *)v59 + 4) = v60;
      *((void *)v59 + 5) = v4;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v59[v57], v54, v56);
      uint64_t v61 = (char **)&v59[v58];
      uint64_t v62 = v83;
      char *v61 = v84;
      v61[1] = v62;
      *(_DWORD *)&v59[(v58 + 19) & 0xFFFFFFFFFFFFFFF8] = v24;
      unint64_t v99 = sub_1001BAF40;
      uint64_t v100 = v59;
      aBlock = _NSConcreteStackBlock;
      unint64_t v96 = 1107296256;
      char v97 = sub_1001872F8;
      uint64_t v98 = &unk_1004211F0;
      uint64_t v63 = _Block_copy(&aBlock);
      id v64 = v40;
      swift_retain();
      swift_retain();
      uint64_t v43 = v86;
      swift_release();
      id v65 = v85;
      LODWORD(v66) = v24;
      unint64_t v45 = v87;
      objc_msgSend(v85, "setOutputDeviceVolume:outputDevice:details:queue:completion:", v43, v66);

      _Block_release(v63);
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t, void *))(v81 + 16))(v84, a1, v86);
    aBlock = 0;
    unint64_t v96 = 0xE000000000000000;
    _StringGuts.grow(_:)(57);
    v73._countAndFlagsBits = 91;
    v73._object = (void *)0xE100000000000000;
    String.append(_:)(v73);
    v74._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v74);
    swift_bridgeObjectRelease();
    v75._countAndFlagsBits = 0xD000000000000016;
    v75._object = (void *)0x80000001003B4AE0;
    String.append(_:)(v75);
    v76._countAndFlagsBits = (uint64_t)v87;
    v76._object = v23;
    String.append(_:)(v76);
    v77._countAndFlagsBits = 0xD00000000000001CLL;
    v77._object = (void *)0x80000001003B4B20;
    String.append(_:)(v77);
    uint64_t v78 = v83;
    RoutingControl.target.getter();
    sub_1001B97B0(&qword_100478D80, (void (*)(uint64_t))&type metadata accessor for RoutingControl.Target);
    v79._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v79);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v78, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t, void *))(v81 + 16))(v82, a1, v86);
    aBlock = 0;
    unint64_t v96 = 0xE000000000000000;
    _StringGuts.grow(_:)(58);
    v67._countAndFlagsBits = 91;
    v67._object = (void *)0xE100000000000000;
    String.append(_:)(v67);
    v68._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v68);
    swift_bridgeObjectRelease();
    v69._countAndFlagsBits = 0xD000000000000016;
    v69._object = (void *)0x80000001003B4AE0;
    String.append(_:)(v69);
    v70._countAndFlagsBits = (uint64_t)v87;
    v70._object = v23;
    String.append(_:)(v70);
    v71._countAndFlagsBits = 0xD00000000000001DLL;
    v71._object = (void *)0x80000001003B4B00;
    String.append(_:)(v71);
    sub_1001B97B0(&qword_100478970, (void (*)(uint64_t))&type metadata accessor for RoutingControl);
    v72._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v72);
    swift_bridgeObjectRelease();
  }
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001B2C54(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4, float a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void *)((char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v16 = a2;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v17 = a2;
  LOBYTE(a2) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (a2)
  {
    if (!a1)
    {
LABEL_5:
      uint64_t v20 = swift_allocObject();
      *(float *)(v20 + 16) = a5;
      sub_1001B0CFC(a7, (void (*)(void, void, void, void))a3, a4, (uint64_t (*)(void))sub_1001BB190, v20);
      return swift_release();
    }
    swift_getErrorValue();
    uint64_t v19 = v27[1];
    swift_errorRetain();
    if (sub_10024FC34(v19))
    {
      swift_errorRelease();
      goto LABEL_5;
    }
    swift_errorRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(a1, 0, 0, 4);
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    unsigned __int8 v26 = v25;
    a3();
    swift_errorRelease();
    sub_1001859D4(v22, v24, v26);
    return swift_errorRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1001B2E78(uint64_t a1, float a2)
{
  uint64_t v4 = type metadata accessor for HostedRoutingItem(0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v10 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    uint64_t v11 = _swiftEmptyArrayStorage;
    do
    {
      sub_1001B9A9C(v9, (uint64_t)v7);
      uint64_t v12 = &v7[*(int *)(v4 + 48)];
      int v13 = *(_DWORD *)v12;
      char v14 = v12[4];
      sub_1001B9E00((uint64_t)v7);
      if ((v14 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_1001B5AE8(0, v11[2] + 1, 1, v11);
        }
        unint64_t v16 = v11[2];
        unint64_t v15 = v11[3];
        if (v16 >= v15 >> 1) {
          uint64_t v11 = sub_1001B5AE8((void *)(v15 > 1), v16 + 1, 1, v11);
        }
        void v11[2] = v16 + 1;
        *((_DWORD *)v11 + v16 + 8) = v13;
      }
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v17 = v11[2];
    if (v17) {
      goto LABEL_11;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v17 = _swiftEmptyArrayStorage[2];
  if (!v17) {
    goto LABEL_18;
  }
LABEL_11:
  float v18 = *((float *)v11 + 8);
  uint64_t v19 = v17 - 1;
  if (v19)
  {
    uint64_t v20 = (float *)v11 + 9;
    do
    {
      float v21 = *v20++;
      float v22 = v21;
      if (v18 < v21) {
        float v18 = v22;
      }
      --v19;
    }
    while (v19);
  }
  swift_bridgeObjectRelease();
  return v18 == a2;
}

uint64_t sub_1001B3070(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9)
{
  v31[1] = a5;
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (void *)((char *)v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v20 = a2;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  id v21 = a2;
  LOBYTE(a2) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if (a2)
  {
    if (!a1)
    {
LABEL_5:
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = a7;
      *(void *)(v24 + 24) = a8;
      *(float *)(v24 + 32) = a9;
      swift_bridgeObjectRetain();
      sub_1001B0CFC(a6, (void (*)(void, void, void, void))a3, a4, (uint64_t (*)(void))sub_1001BB2BC, v24);
      return swift_release();
    }
    swift_getErrorValue();
    uint64_t v23 = v31[3];
    swift_errorRetain();
    if (sub_10024FC34(v23))
    {
      swift_errorRelease();
      goto LABEL_5;
    }
    swift_errorRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(a1, 0, 0, 4);
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    unsigned __int8 v30 = v29;
    a3();
    swift_errorRelease();
    sub_1001859D4(v26, v28, v30);
    return swift_errorRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B32A8(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v8 = type metadata accessor for HostedRoutingItem(0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return 0;
  }
  int v13 = (void *)(a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)));
  uint64_t v14 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  do
  {
    if (*v13 == a2 && v13[1] == a3)
    {
      sub_1001B9A9C((uint64_t)v13, (uint64_t)v11);
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1001B9A9C((uint64_t)v13, (uint64_t)v11);
      if ((v16 & 1) == 0)
      {
        sub_1001B9E00((uint64_t)v11);
        goto LABEL_4;
      }
    }
    uint64_t v17 = &v11[*(int *)(v8 + 48)];
    float v18 = *(float *)v17;
    char v19 = v17[4];
    sub_1001B9E00((uint64_t)v11);
    if ((v19 & 1) == 0 && v18 == a4)
    {
      uint64_t v20 = 1;
      goto LABEL_17;
    }
LABEL_4:
    int v13 = (void *)((char *)v13 + v14);
    --v12;
  }
  while (v12);
  uint64_t v20 = 0;
LABEL_17:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1001B343C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(void, void, void, void), uint64_t a8, uint64_t a9)
{
  uint64_t v90 = a8;
  uint64_t v93 = a7;
  uint64_t v76 = a9;
  uint64_t v77 = a5;
  uint64_t v12 = sub_100013A80((uint64_t *)&unk_10047BC50);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v70[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  uint64_t v86 = *(void *)(v15 - 8);
  uint64_t v87 = v15;
  __chkstk_darwin(v15);
  uint64_t v82 = &v70[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  uint64_t v83 = *(void *)(v17 - 8);
  uint64_t v84 = v17;
  __chkstk_darwin(v17);
  Swift::String v79 = &v70[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  uint64_t v80 = *(void *)(v19 - 8);
  uint64_t v81 = v19;
  __chkstk_darwin(v19);
  uint64_t v78 = &v70[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v88 = *(void *)(v21 - 8);
  uint64_t v89 = v21;
  __chkstk_darwin(v21);
  id v85 = &v70[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = type metadata accessor for Logger();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = &v70[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v91 = *(void *)(v27 - 8);
  uint64_t v92 = v27;
  __chkstk_darwin(v27);
  unsigned __int8 v29 = &v70[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ContinuousClock.now.getter();
  uint64_t v30 = ContinuousClock.Instant.duration(to:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  if (a1)
  {
    uint64_t v75 = v30;
    uint64_t v34 = sub_1001A69C4();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v24 + 16))(v26, v34, v23);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      int v71 = v37;
      uint64_t v39 = v38;
      uint64_t v72 = swift_slowAlloc();
      v96[0] = v72;
      *(_DWORD *)uint64_t v39 = 136315906;
      uint64_t v74 = v24;
      uint64_t v40 = _typeName(_:qualified:)();
      uint64_t v94 = sub_10018A9E0(v40, v41, v96);
      uint64_t v76 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      uint64_t v73 = v33;
      uint64_t v42 = *(void *)(a4 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
      unint64_t v43 = *(void *)(a4 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_10018A9E0(v42, v43, v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_10018A9E0(v77, a6, v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 32) = 2080;
      sub_100013A80(&qword_100478D50);
      type metadata accessor for Duration.UnitsFormatStyle.Unit();
      double v44 = v35;
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_1003C5BA0;
      static Duration.UnitsFormatStyle.Unit.seconds.getter();
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
      sub_1001BAA1C(v45);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v46 = v78;
      static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter();
      uint64_t v47 = v79;
      static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
      Swift::String v48 = v82;
      static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
      Swift::String v49 = v85;
      static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v48, v87);
      (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v47, v84);
      (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v46, v81);
      sub_1001B97B0(&qword_100478D58, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
      uint64_t v50 = v89;
      Duration.formatted<A>(_:)();
      (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v49, v50);
      uint64_t v94 = sub_10018A9E0(v94, v95, v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v71, "[%s]<%s> waitForItemStability<%s> - timed out after: %s", (uint8_t *)v39, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v26, v76);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v26, v23);
    }
  }
  else
  {
    uint64_t v51 = sub_1001A6B94();
    sub_1001A6BB8(v51, (uint64_t)v14);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23) == 1)
    {
      sub_100009A08((uint64_t)v14, (uint64_t *)&unk_10047BC50);
    }
    else
    {
      uint64_t v52 = v24;
      uint64_t v75 = v31;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      NSString v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.default.getter();
      int v55 = v54;
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v56 = swift_slowAlloc();
        int v71 = v55;
        uint64_t v57 = v56;
        uint64_t v72 = swift_slowAlloc();
        v96[0] = v72;
        *(_DWORD *)uint64_t v57 = 136315906;
        uint64_t v58 = _typeName(_:qualified:)();
        uint64_t v74 = v24;
        uint64_t v94 = sub_10018A9E0(v58, v59, v96);
        uint64_t v76 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 12) = 2080;
        uint64_t v73 = v33;
        uint64_t v60 = *(void *)(a4 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
        unint64_t v61 = *(void *)(a4 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
        swift_bridgeObjectRetain();
        uint64_t v94 = sub_10018A9E0(v60, v61, v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v94 = sub_10018A9E0(v77, a6, v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v57 + 32) = 2080;
        sub_100013A80(&qword_100478D50);
        type metadata accessor for Duration.UnitsFormatStyle.Unit();
        uint64_t v62 = v53;
        uint64_t v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = xmmword_1003C5BA0;
        static Duration.UnitsFormatStyle.Unit.seconds.getter();
        static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
        sub_1001BAA1C(v63);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        id v64 = v78;
        static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter();
        id v65 = v79;
        static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
        double v66 = v82;
        static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
        Swift::String v67 = v85;
        static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
        uint64_t v52 = v74;
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v66, v87);
        (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v65, v84);
        (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v64, v81);
        sub_1001B97B0(&qword_100478D58, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
        uint64_t v68 = v89;
        Duration.formatted<A>(_:)();
        (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v67, v68);
        uint64_t v94 = sub_10018A9E0(v94, v95, v96);
        uint64_t v23 = v76;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v71, "[%s]<%s> waitForItemStability<%s> - stable after: %s", (uint8_t *)v57, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v14, v23);
    }
  }
  v93(0, 0, 0, 0);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v91 + 8))(v29, v92);
}

uint64_t sub_1001B4150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AE4C8(a1, a2, a3);
}

uint64_t sub_1001B4174()
{
  uint64_t v59 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v2 = (char *)&v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for RoutingMode();
  uint64_t v3 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60._uint64_t countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = 0xD000000000000018;
  v60._object = (void *)0x80000001003B48B0;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier);
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC12mediaremoted21RoutingItemDataSource_identifier + 8);
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = v11;
  v12._object = v10;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 2622;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  Swift::String v63 = v60;
  strcpy((char *)&v60, "Item Type: ");
  HIDWORD(v60._object) = -352321536;
  (*(void (**)(void))(*(void *)v0 + 176))();
  sub_1001B97B0(&qword_100478958, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
  v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15._uint64_t countAndFlagsBits = 10;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  String.append(_:)(v60);
  swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  uint64_t v16 = swift_bridgeObjectRelease();
  strcpy((char *)&v60, "Routing Mode: ");
  HIBYTE(v60._object) = -18;
  (*(void (**)(uint64_t))(*(void *)v0 + 200))(v16);
  sub_1001B97B0(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
  uint64_t v17 = v58;
  v18._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  v19._uint64_t countAndFlagsBits = 10;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  String.append(_:)(v60);
  swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(19);
  uint64_t v20 = swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = 0xD000000000000010;
  v60._object = (void *)0x80000001003B48D0;
  uint64_t v21 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 224);
  uint64_t v58 = v0;
  uint64_t v22 = v21(v20);
  int64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v62 = _swiftEmptyArrayStorage;
    sub_100014688(0, v23, 0);
    uint64_t v24 = *(unsigned __int8 *)(v57 + 80);
    uint64_t v56 = v22;
    uint64_t v25 = v22 + ((v24 + 32) & ~v24);
    uint64_t v26 = *(void *)(v57 + 72);
    do
    {
      sub_1001B9A9C(v25, (uint64_t)v2);
      v61._uint64_t countAndFlagsBits = 538976288;
      v61._object = (void *)0xE400000000000000;
      sub_1001B97B0(&qword_1004789B8, (void (*)(uint64_t))type metadata accessor for HostedRoutingItem);
      v27._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = v61._countAndFlagsBits;
      object = v61._object;
      sub_1001B9E00((uint64_t)v2);
      uint64_t v30 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100014688(0, v30[2] + 1, 1);
        uint64_t v30 = v62;
      }
      unint64_t v32 = v30[2];
      unint64_t v31 = v30[3];
      if (v32 >= v31 >> 1)
      {
        sub_100014688(v31 > 1, v32 + 1, 1);
        uint64_t v30 = v62;
      }
      v30[2] = v32 + 1;
      uint64_t v33 = &v30[2 * v32];
      v33[4] = countAndFlagsBits;
      v33[5] = object;
      v25 += v26;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = _swiftEmptyArrayStorage;
  }
  v61._uint64_t countAndFlagsBits = (uint64_t)v30;
  sub_100013A80(&qword_10047A080);
  sub_1000155BC((unint64_t *)&qword_1004789C0, &qword_10047A080);
  uint64_t v34 = BidirectionalCollection<>.joined(separator:)();
  os_log_type_t v36 = v35;
  swift_bridgeObjectRelease();
  v37._uint64_t countAndFlagsBits = v34;
  v37._object = v36;
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  v38._uint64_t countAndFlagsBits = 10;
  v38._object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  String.append(_:)(v60);
  swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  v61._uint64_t countAndFlagsBits = 0xD000000000000017;
  v61._object = (void *)0x80000001003B48F0;
  swift_beginAccess();
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v40 = sub_1001B4984(v39);
  swift_bridgeObjectRelease();
  uint64_t v62 = (void *)v40;
  uint64_t v41 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v43 = v42;
  swift_bridgeObjectRelease();
  v44._uint64_t countAndFlagsBits = v41;
  v44._object = v43;
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = 10;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  String.append(_:)(v61);
  swift_bridgeObjectRelease();
  v61._uint64_t countAndFlagsBits = 0;
  v61._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v61._uint64_t countAndFlagsBits = 0xD000000000000012;
  v61._object = (void *)0x80000001003B4910;
  uint64_t v46 = sub_1001A8704();
  uint64_t v48 = v47;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v62 = (void *)v46;
  uint64_t v50 = (*(uint64_t (**)(uint64_t))(*(void *)(v48 + 8) + 8))(ObjectType);
  uint64_t v52 = v51;
  swift_unknownObjectRelease();
  v53._uint64_t countAndFlagsBits = v50;
  v53._object = v52;
  String.append(_:)(v53);
  swift_bridgeObjectRelease();
  v54._uint64_t countAndFlagsBits = 10;
  v54._object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  String.append(_:)(v61);
  swift_bridgeObjectRelease();
  return v63._countAndFlagsBits;
}

uint64_t sub_1001B4984(uint64_t a1)
{
  uint64_t v44 = type metadata accessor for RoutingInteraction();
  uint64_t v3 = *(void *)(v44 - 8);
  uint64_t v4 = __chkstk_darwin(v44);
  unint64_t v43 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)v32 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (!v7) {
    return (uint64_t)v8;
  }
  v32[1] = v1;
  Swift::String v49 = _swiftEmptyArrayStorage;
  sub_100014688(0, v7, 0);
  uint64_t result = sub_1001B9870(a1);
  uint64_t v11 = result;
  uint64_t v12 = 0;
  uint64_t v13 = a1 + 64;
  uint64_t v38 = v3 + 32;
  uint64_t v39 = v3 + 16;
  uint64_t v40 = v3;
  uint64_t v41 = a1;
  uint64_t v36 = a1 + 64;
  uint64_t v37 = v3 + 8;
  uint64_t v33 = a1 + 80;
  int64_t v34 = v7;
  uint64_t v35 = v10;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v16 = (unint64_t)v11 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_26;
    }
    uint64_t v17 = v40;
    uint64_t v18 = *(void *)(a1 + 48) + *(void *)(v40 + 72) * v11;
    Swift::String v19 = v42;
    uint64_t v20 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v42, v18, v44);
    uint64_t v21 = v43;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v43, v19, v20);
    uint64_t v47 = 538976288;
    unint64_t v48 = 0xE400000000000000;
    sub_1001B97B0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    v22._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    unint64_t v45 = v48;
    uint64_t v46 = v47;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v20);
    uint64_t v8 = v49;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_100014688(0, v8[2] + 1, 1);
      uint64_t v8 = v49;
    }
    unint64_t v24 = v8[2];
    unint64_t v23 = v8[3];
    if (v24 >= v23 >> 1)
    {
      uint64_t result = sub_100014688(v23 > 1, v24 + 1, 1);
      uint64_t v8 = v49;
    }
    _OWORD v8[2] = v24 + 1;
    uint64_t v25 = &v8[2 * v24];
    unint64_t v26 = v45;
    v25[4] = v46;
    v25[5] = v26;
    a1 = v41;
    int64_t v14 = 1 << *(unsigned char *)(v41 + 32);
    if (v11 >= v14) {
      goto LABEL_27;
    }
    uint64_t v13 = v36;
    uint64_t v27 = *(void *)(v36 + 8 * v16);
    if ((v27 & (1 << v11)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v10) = v35;
    if (*(_DWORD *)(v41 + 36) != v35) {
      goto LABEL_29;
    }
    unint64_t v28 = v27 & (-2 << (v11 & 0x3F));
    if (v28)
    {
      int64_t v14 = __clz(__rbit64(v28)) | v11 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v34;
    }
    else
    {
      unint64_t v29 = v16 + 1;
      unint64_t v30 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v34;
      if (v16 + 1 < v30)
      {
        unint64_t v31 = *(void *)(v36 + 8 * v29);
        if (v31)
        {
LABEL_22:
          int64_t v14 = __clz(__rbit64(v31)) + (v29 << 6);
        }
        else
        {
          while (v30 - 2 != v16)
          {
            unint64_t v31 = *(void *)(v33 + 8 * v16++);
            if (v31)
            {
              unint64_t v29 = v16 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v12;
    uint64_t v11 = v14;
    if (v12 == v15) {
      return (uint64_t)v8;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1001B4D4C()
{
  return sub_1001B4174();
}

void sub_1001B4D70()
{
  uint64_t v1 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v59 = *(void *)(v1 - 8);
  uint64_t v60 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RoutingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v65 = 0;
  unint64_t v66 = 0xE000000000000000;
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  unint64_t v65 = 0xD000000000000023;
  unint64_t v66 = 0x80000001003B4930;
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 2622;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v64._uint64_t countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  uint64_t v12 = swift_bridgeObjectRelease();
  strcpy((char *)&v64, "Routing Mode: ");
  HIBYTE(v64._object) = -18;
  (*(void (**)(uint64_t))(*(void *)v0 + 200))(v12);
  sub_1001B97B0(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
  v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14._uint64_t countAndFlagsBits = 10;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  String.append(_:)(v64);
  swift_bridgeObjectRelease();
  v64._uint64_t countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(19);
  uint64_t v15 = swift_bridgeObjectRelease();
  v64._uint64_t countAndFlagsBits = 0xD000000000000010;
  v64._object = (void *)0x80000001003B48D0;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 224))(v15);
  int64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    v58[2] = v0;
    Swift::String v63 = _swiftEmptyArrayStorage;
    sub_100014688(0, v17, 0);
    uint64_t v18 = *(unsigned __int8 *)(v59 + 80);
    v58[1] = v16;
    uint64_t v19 = v16 + ((v18 + 32) & ~v18);
    uint64_t v20 = *(void *)(v59 + 72);
    do
    {
      sub_1001B9A9C(v19, (uint64_t)v3);
      uint64_t v61 = 538976288;
      unint64_t v62 = 0xE400000000000000;
      sub_1001B97B0(&qword_1004789B8, (void (*)(uint64_t))type metadata accessor for HostedRoutingItem);
      v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      uint64_t v22 = v61;
      unint64_t v23 = v62;
      sub_1001B9E00((uint64_t)v3);
      unint64_t v24 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100014688(0, v24[2] + 1, 1);
        unint64_t v24 = v63;
      }
      unint64_t v26 = v24[2];
      unint64_t v25 = v24[3];
      if (v26 >= v25 >> 1)
      {
        sub_100014688(v25 > 1, v26 + 1, 1);
        unint64_t v24 = v63;
      }
      v24[2] = v26 + 1;
      uint64_t v27 = &v24[2 * v26];
      v27[4] = v22;
      v27[5] = v23;
      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v24 = _swiftEmptyArrayStorage;
  }
  uint64_t v61 = (uint64_t)v24;
  uint64_t v28 = sub_100013A80(&qword_10047A080);
  uint64_t v29 = sub_1000155BC((unint64_t *)&qword_1004789C0, &qword_10047A080);
  uint64_t v30 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v32 = v31;
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v34._uint64_t countAndFlagsBits = 10;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  String.append(_:)(v64);
  swift_bridgeObjectRelease();
  v64._uint64_t countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v64._uint64_t countAndFlagsBits = 0xD000000000000012;
  v64._object = (void *)0x80000001003B4960;
  uint64_t v35 = (void *)sub_1001AC72C();
  id v36 = [v35 availableOutputDevices];

  if (!v36) {
    goto LABEL_26;
  }
  sub_10018FE08(0, (unint64_t *)&qword_100478370);
  unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_13;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v40 = _swiftEmptyArrayStorage;
LABEL_24:
    uint64_t v61 = (uint64_t)v40;
    uint64_t v53 = BidirectionalCollection<>.joined(separator:)();
    int v55 = v54;
    swift_bridgeObjectRelease();
    v56._uint64_t countAndFlagsBits = v53;
    v56._object = v55;
    String.append(_:)(v56);
    swift_bridgeObjectRelease();
    v57._uint64_t countAndFlagsBits = 10;
    v57._object = (void *)0xE100000000000000;
    String.append(_:)(v57);
    String.append(_:)(v64);
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v38) {
    goto LABEL_23;
  }
LABEL_13:
  Swift::String v63 = _swiftEmptyArrayStorage;
  sub_100014688(0, v38 & ~(v38 >> 63), 0);
  if ((v38 & 0x8000000000000000) == 0)
  {
    uint64_t v59 = v29;
    uint64_t v60 = v28;
    uint64_t v39 = 0;
    uint64_t v40 = v63;
    do
    {
      if ((v37 & 0xC000000000000001) != 0) {
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v41 = *(id *)(v37 + 8 * v39 + 32);
      }
      uint64_t v42 = v41;
      uint64_t v61 = 538976288;
      unint64_t v62 = 0xE400000000000000;
      id v43 = [v41 description];
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v46 = v45;

      v47._uint64_t countAndFlagsBits = v44;
      v47._object = v46;
      String.append(_:)(v47);

      swift_bridgeObjectRelease();
      uint64_t v48 = v61;
      unint64_t v49 = v62;
      Swift::String v63 = v40;
      unint64_t v51 = v40[2];
      unint64_t v50 = v40[3];
      if (v51 >= v50 >> 1)
      {
        sub_100014688(v50 > 1, v51 + 1, 1);
        uint64_t v40 = v63;
      }
      ++v39;
      v40[2] = v51 + 1;
      uint64_t v52 = &v40[2 * v51];
      v52[4] = v48;
      v52[5] = v49;
    }
    while (v38 != v39);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_1001B54E0()
{
}

uint64_t sub_1001B5504(uint64_t a1, uint64_t a2)
{
  return sub_1001B57A0(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_1001B551C(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_1001B5594(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1001B5614@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1001B5658@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1001B56A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001B56CC(uint64_t a1)
{
  uint64_t v2 = sub_1001B97B0(&qword_100478DF0, (void (*)(uint64_t))type metadata accessor for Name);
  uint64_t v3 = sub_1001B97B0(&qword_100478DF8, (void (*)(uint64_t))type metadata accessor for Name);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001B5788(uint64_t a1, uint64_t a2)
{
  return sub_1001B57A0(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1001B57A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001B57E4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001B5838()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1001B58AC()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1001B5938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v5 = __chkstk_darwin(v4);
  int64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Swift::String v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1001B9A9C(a1 + v12, (uint64_t)v10);
        sub_1001B9A9C(a2 + v12, (uint64_t)v7);
        sub_1001B97B0(&qword_100478DA0, (void (*)(uint64_t))type metadata accessor for HostedRoutingItem);
        char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_1001B9E00((uint64_t)v7);
        sub_1001B9E00((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

void *sub_1001B5AE8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100013A80(&qword_100478D88);
      Swift::String v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      Swift::String v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= (void *)((char *)a4 + 4 * v8 + 32)) {
          memmove(v13, a4 + 4, 4 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001BB198(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B5BF8(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1001B5DEC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001B725C();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for RoutingInteraction();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_1001B6960(v4, v7);
  uint64_t *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001B5D04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100013660(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001B7504();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_1001B6C58(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1001B5DEC(uint64_t a1)
{
  type metadata accessor for RoutingInteraction();
  sub_1001B97B0(&qword_100478000, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();

  return sub_1001B6E30(a1, v2);
}

uint64_t sub_1001B5E84(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v42 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100013A80(&qword_100478D98);
  int v43 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  id v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    unint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1001B9A38(v30, (uint64_t)v7);
    }
    else
    {
      sub_1001B9A9C(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    void *v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1001B9A38((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1001B6228(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = type metadata accessor for RoutingInteraction();
  uint64_t v5 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  char v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100013A80(&qword_100478DB0);
  int v45 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    int64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    id v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    int v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      uint64_t v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        long long v47 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v20);
      }
      else
      {
        (*v41)(v43, v26, v44);
        long long v47 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v20);
        swift_retain();
      }
      sub_1001B97B0(&qword_100478000, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v46)(*(void *)(v10 + 48) + v25 * v18, v27, v28);
      *(_OWORD *)(*(void *)(v10 + 56) + 16 * v18) = v47;
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1001B6654(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100013A80(&qword_100478D48);
  char v6 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      unint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

unint64_t sub_1001B6960(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoutingInteraction();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1001B97B0(&qword_100478000, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            int64_t v23 = (_OWORD *)(v22 + 16 * a1);
            unint64_t v24 = (_OWORD *)(v22 + 16 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              _OWORD *v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *int64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001B6C58(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          int64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            _OWORD *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001B6E30(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = type metadata accessor for RoutingInteraction();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1001B97B0(&qword_100478DB8, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

void *sub_1001B6FF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100013A80(&qword_100478D98);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  unint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1001B9A9C(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    void *v22 = v19;
    v22[1] = v20;
    sub_1001B9A38((uint64_t)v4, *(void *)(v7 + 56) + v21);
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1001B725C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RoutingInteraction();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100013A80(&qword_100478DB0);
  uint64_t v6 = *v0;
  uint64_t v7 = static _DictionaryStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  unint64_t v24 = v1;
  unint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    unint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v25 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 16 * v16;
    unint64_t v19 = *(void *)(v8 + 48) + v17;
    uint64_t v20 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    long long v28 = *(_OWORD *)(*(void *)(v6 + 56) + v18);
    v20(v19, v5, v2);
    *(_OWORD *)(*(void *)(v8 + 56) + v18) = v28;
    unint64_t result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1001B7504()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_100478D48);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1001B76C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100013660(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1001B6FF0();
      goto LABEL_7;
    }
    sub_1001B5E84(v15, a4 & 1);
    unint64_t v22 = sub_100013660(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for HostedRoutingItem(0) - 8) + 72) * v12;
    return sub_1001BB3CC(a1, v20);
  }
LABEL_13:
  sub_1001B7B6C(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001B782C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v28 = a2;
  uint64_t v9 = type metadata accessor for RoutingInteraction();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v4;
  unint64_t v15 = sub_1001B5DEC(a3);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    int64_t v21 = *v5;
    if (v19)
    {
LABEL_8:
      unint64_t v22 = (uint64_t *)(v21[7] + 16 * v15);
      uint64_t result = swift_release();
      uint64_t v24 = v28;
      uint64_t *v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1001B725C();
    goto LABEL_7;
  }
  sub_1001B6228(v18, a4 & 1);
  unint64_t v25 = sub_1001B5DEC(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v15 = v25;
  int64_t v21 = *v5;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_1001B7C04(v15, (uint64_t)v12, a1, v28, v21);
}

uint64_t sub_1001B79E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_100013660(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1001B7504();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      int64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_release();
      void *v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1001B6654(v17, a5 & 1);
  unint64_t v23 = sub_100013660(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  unint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *unint64_t v25 = a3;
  v25[1] = a4;
  char v26 = (void *)(v20[7] + 16 * v14);
  void *v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001B7B6C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for HostedRoutingItem(0);
  uint64_t result = sub_1001B9A38(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1001B7C04(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = type metadata accessor for RoutingInteraction();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  BOOL v13 = (void *)(a5[7] + 16 * a1);
  *BOOL v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

void *sub_1001B7CC4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v77 = a1;
  v74[1] = *a3;
  uint64_t v79 = type metadata accessor for Logger();
  uint64_t v80 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v78 = (char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100013A80(&qword_100478278);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v98 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v82 = (char *)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100013A80((uint64_t *)&unk_10047BF40);
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v76 = (char *)v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  BOOL v15 = (void *)((char *)v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = (char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_itemType;
  uint64_t v17 = enum case for RoutingSessionConfiguration.ItemType.standard(_:);
  uint64_t v18 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  uint64_t v19 = (char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingMode;
  uint64_t v20 = enum case for RoutingMode.disabled(_:);
  uint64_t v21 = type metadata accessor for RoutingMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  *(void *)((char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingItems) = _swiftEmptyArrayStorage;
  *(void *)((char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_internalItemObservers) = &_swiftEmptyDictionarySingleton;
  *(void *)((char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)((char *)a3
            + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource____lazy_storage___discoverySession) = 0;
  *(void *)((char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_notificationObservers) = &_swiftEmptySetSingleton;
  unint64_t v22 = (void *)((char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
  uint64_t *v22 = sub_1001E78B8();
  v22[1] = v23;
  void *v15 = a2;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v24 = a2;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v22)
  {
    a3[2] = v24;
    unint64_t v25 = self;
    uint64_t v26 = v9;
    id v27 = v24;
    id v81 = v27;
    id v28 = [v25 defaultCenter];
    uint64_t v29 = self;
    id v30 = [v29 sharedLocalEndpoint];
    unint64_t v31 = v82;
    NSNotificationCenter.publisher(for:object:)();

    id v102 = v27;
    uint64_t v95 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v32 = *(void *)(v95 - 8);
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    uint64_t v93 = v32 + 56;
    uint64_t v94 = v33;
    uint64_t v75 = v8;
    v33(v8, 1, 1, v95);
    uint64_t v92 = sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
    uint64_t v91 = sub_1001B97B0((unint64_t *)&unk_10047BF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
    unint64_t v90 = sub_1001BB4CC();
    uint64_t v9 = (uint64_t)v76;
    uint64_t v34 = v26;
    uint64_t v86 = v26;
    Publisher.receive<A>(on:options:)();
    sub_100009A08((uint64_t)v8, &qword_100478278);
    uint64_t v35 = v98 + 8;
    uint64_t v89 = *(void (**)(char *, uint64_t))(v98 + 8);
    uint64_t v36 = v31;
    v89(v31, v34);
    swift_allocObject();
    swift_weakInit();
    uint64_t v88 = sub_1000155BC((unint64_t *)&qword_10047BF60, (uint64_t *)&unk_10047BF40);
    uint64_t v37 = v99;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
    v87(v9, v37);
    uint64_t v38 = (char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_notificationObservers;
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    id v85 = v25;
    id v39 = [v25 defaultCenter];
    id v84 = v29;
    id v40 = [v29 sharedLocalEndpoint];
    NSNotificationCenter.publisher(for:object:)();

    id v102 = v81;
    id v41 = a3;
    uint64_t v42 = (uint64_t)v75;
    v94(v75, 1, 1, v95);
    uint64_t v43 = v86;
    Publisher.receive<A>(on:options:)();
    sub_100009A08(v42, &qword_100478278);
    uint64_t v98 = v35;
    v89(v36, v43);
    swift_allocObject();
    unint64_t v96 = v41;
    swift_weakInit();
    uint64_t v44 = v99;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    v87(v9, v44);
    swift_beginAccess();
    uint64_t v83 = v38;
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    uint64_t v8 = (char *)v42;
    id v24 = v82;
    if (qword_10047EBE0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v97 = qword_10047EBE8;
  uint64_t v45 = *(void *)(qword_10047EBE8 + 16);
  uint64_t v46 = v80;
  if (v45)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = (uint64_t)v8;
    uint64_t v48 = v9;
    uint64_t v49 = 0;
    do
    {
      unint64_t v50 = *(void **)(v97 + 8 * v49++ + 32);
      uint64_t v51 = v45;
      id v52 = v50;
      id v53 = [v85 defaultCenter];
      id v54 = [v84 sharedLocalEndpoint];
      NSNotificationCenter.publisher(for:object:)();

      int v55 = (void *)*sub_100266CC0();
      id v102 = v55;
      v94((char *)v47, 1, 1, v95);
      id v56 = v55;
      uint64_t v57 = v86;
      Publisher.receive<A>(on:options:)();
      sub_100009A08(v47, &qword_100478278);

      v89((char *)v24, v57);
      swift_allocObject();
      swift_weakInit();
      uint64_t v58 = v99;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      v87(v48, v58);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();

      uint64_t v45 = v51;
      swift_release();
    }
    while (v51 != v49);
    swift_bridgeObjectRelease();
    uint64_t v46 = v80;
  }
  uint64_t v59 = v96;
  uint64_t v60 = (*(uint64_t (**)(void))(*v96 + 368))();
  uint64_t v61 = (void *)((char *)v59 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingItems);
  swift_beginAccess();
  uint64_t *v61 = v60;
  swift_bridgeObjectRelease();
  uint64_t v62 = (uint64_t)v59 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_delegate;
  swift_beginAccess();
  *(void *)(v62 + 8) = &off_100420F98;
  swift_unknownObjectWeakAssign();
  uint64_t v63 = sub_1001A69C4();
  Swift::String v64 = v78;
  uint64_t v65 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v78, v63, v79);
  swift_retain_n();
  unint64_t v66 = Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    uint64_t v101 = swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 136315394;
    uint64_t v69 = _typeName(_:qualified:)();
    uint64_t v100 = sub_10018A9E0(v69, v70, &v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    uint64_t v71 = *(void *)((char *)v59 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
    unint64_t v72 = *(void *)((char *)v59 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
    swift_bridgeObjectRetain();
    uint64_t v100 = sub_10018A9E0(v71, v72, &v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "[%s]<%s> init", (uint8_t *)v68, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v78, v79);
  }
  else
  {

    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v64, v65);
  }
  return v59;
}

void *sub_1001B8A34(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v81 = a5;
  uint64_t v83 = a1;
  v79[1] = *a3;
  uint64_t v82 = type metadata accessor for Logger();
  uint64_t v85 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  id v84 = (char *)v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100013A80(&qword_100478278);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v11 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v13 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100013A80((uint64_t *)&unk_10047BF40);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v101 = v14;
  uint64_t v102 = v15;
  __chkstk_darwin(v14);
  uint64_t v80 = (char *)v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (void *)((char *)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = (char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_itemType;
  uint64_t v22 = enum case for RoutingSessionConfiguration.ItemType.standard(_:);
  uint64_t v23 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  id v24 = (char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingMode;
  uint64_t v25 = enum case for RoutingMode.disabled(_:);
  uint64_t v26 = type metadata accessor for RoutingMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
  *(void *)((char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingItems) = _swiftEmptyArrayStorage;
  *(void *)((char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_internalItemObservers) = &_swiftEmptyDictionarySingleton;
  *(void *)((char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)((char *)a3
            + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource____lazy_storage___discoverySession) = 0;
  id v27 = &qword_10047E000;
  *(void *)((char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_notificationObservers) = &_swiftEmptySetSingleton;
  id v28 = (void *)((char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
  *id v28 = sub_1001E78B8();
  v28[1] = v29;
  *uint64_t v20 = a2;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  id v30 = a2;
  LOBYTE(v28) = _dispatchPreconditionTest(_:)();
  uint64_t v32 = *(void (**)(void *, uint64_t))(v18 + 8);
  unint64_t v31 = (char *)(v18 + 8);
  v32(v20, v17);
  if (v28)
  {
    a3[2] = v30;
    uint64_t v33 = self;
    id v99 = v33;
    id v34 = v30;
    id v86 = v34;
    id v35 = [v33 defaultCenter];
    uint64_t v36 = self;
    id v37 = [v36 sharedLocalEndpoint];
    NSNotificationCenter.publisher(for:object:)();

    id v106 = v34;
    uint64_t v98 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v38 = *(void *)(v98 - 8);
    id v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    uint64_t v96 = v38 + 56;
    uint64_t v97 = v39;
    v39(v10, 1, 1, v98);
    uint64_t v95 = sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
    uint64_t v94 = sub_1001B97B0((unint64_t *)&unk_10047BF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
    unint64_t v93 = sub_1001BB4CC();
    unint64_t v31 = v80;
    uint64_t v40 = v103;
    Publisher.receive<A>(on:options:)();
    sub_100009A08((uint64_t)v10, &qword_100478278);
    id v41 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v89 = v11 + 8;
    uint64_t v92 = v41;
    v41(v13, v40);
    swift_allocObject();
    swift_weakInit();
    uint64_t v91 = sub_1000155BC((unint64_t *)&qword_10047BF60, (uint64_t *)&unk_10047BF40);
    uint64_t v42 = v101;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    uint64_t v43 = (uint64_t *)(v102 + 8);
    unint64_t v90 = *(void (**)(char *, uint64_t))(v102 + 8);
    v90(v31, v42);
    uint64_t v44 = (char *)a3 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_notificationObservers;
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    id v45 = [v99 defaultCenter];
    id v88 = v36;
    id v46 = [v36 sharedLocalEndpoint];
    NSNotificationCenter.publisher(for:object:)();

    id v106 = v86;
    v97(v10, 1, 1, v98);
    uint64_t v47 = v103;
    Publisher.receive<A>(on:options:)();
    sub_100009A08((uint64_t)v10, &qword_100478278);
    v92(v13, v47);
    swift_allocObject();
    uint64_t v100 = a3;
    swift_weakInit();
    Publisher<>.sink(receiveValue:)();
    uint64_t v48 = v90;
    swift_release();
    v48(v31, v42);
    swift_beginAccess();
    v79[2] = v44;
    AnyCancellable.store(in:)();
    swift_endAccess();
    uint64_t v49 = swift_release();
    id v27 = v43;
    if (qword_10047EBE0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v49 = swift_once();
LABEL_3:
  uint64_t v102 = qword_10047EBE8;
  if (*(void *)(qword_10047EBE8 + 16))
  {
    uint64_t v87 = *(void *)(qword_10047EBE8 + 16);
    swift_bridgeObjectRetain();
    unint64_t v50 = v31;
    uint64_t v51 = v13;
    uint64_t v52 = 0;
    uint64_t v53 = (uint64_t)v10;
    do
    {
      id v54 = *(void **)(v102 + 8 * v52++ + 32);
      id v55 = v54;
      id v56 = [v99 defaultCenter];
      uint64_t v57 = v27;
      id v58 = [v88 sharedLocalEndpoint];
      NSNotificationCenter.publisher(for:object:)();

      uint64_t v59 = (void *)*sub_100266CC0();
      id v106 = v59;
      v97((char *)v53, 1, 1, v98);
      id v60 = v59;
      uint64_t v61 = v103;
      Publisher.receive<A>(on:options:)();
      sub_100009A08(v53, &qword_100478278);

      v92(v51, v61);
      swift_allocObject();
      swift_weakInit();
      uint64_t v62 = v101;
      Publisher<>.sink(receiveValue:)();
      id v27 = v57;
      swift_release();
      v90(v50, v62);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();

      swift_release();
    }
    while (v87 != v52);
    uint64_t v49 = swift_bridgeObjectRelease();
  }
  uint64_t v63 = v100;
  uint64_t v64 = (*(uint64_t (**)(uint64_t))(*v100 + 368))(v49);
  uint64_t v65 = (void *)((char *)v63 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_routingItems);
  swift_beginAccess();
  uint64_t *v65 = v64;
  swift_bridgeObjectRelease();
  uint64_t v66 = (uint64_t)v63 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_delegate;
  swift_beginAccess();
  *(void *)(v66 + 8) = v81;
  swift_unknownObjectWeakAssign();
  uint64_t v67 = sub_1001A69C4();
  uint64_t v68 = v85;
  uint64_t v69 = v84;
  uint64_t v70 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v84, v67, v82);
  swift_retain_n();
  uint64_t v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = swift_slowAlloc();
    uint64_t v105 = swift_slowAlloc();
    *(_DWORD *)uint64_t v73 = 136315394;
    uint64_t v74 = _typeName(_:qualified:)();
    uint64_t v104 = sub_10018A9E0(v74, v75, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 12) = 2080;
    uint64_t v76 = *(void *)((char *)v63 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier);
    unint64_t v77 = *(void *)((char *)v63 + OBJC_IVAR____TtC12mediaremoted32AVDiscoveryRoutingItemDataSource_identifier + 8);
    swift_bridgeObjectRetain();
    uint64_t v104 = sub_10018A9E0(v76, v77, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "[%s]<%s> init", (uint8_t *)v73, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v70);
  }
  else
  {

    swift_unknownObjectRelease();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
  }
  return v63;
}

uint64_t sub_1001B9788(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001B97B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B97F8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B9830(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = *(uint64_t (**)(void *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  void v7[2] = a3;
  char v8 = a4;
  return v5(v7);
}

uint64_t sub_1001B9870(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1001B9920(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t sub_1001B9958(uint64_t result, uint64_t a2, unsigned int a3)
{
  switch((a3 >> 8) & 6 | (a3 >> 7) & 1)
  {
    case 0u:
      uint64_t result = swift_release();
      break;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
      uint64_t result = sub_1001B99B8(result, a2, a3 & 0xF97F);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001B99B8(uint64_t a1, uint64_t a2, unsigned __int16 a3)
{
  switch(a3 >> 11)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
    case 7:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 8:
    case 9:
    case 10:
    case 16:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001B9A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HostedRoutingItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B9A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HostedRoutingItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B9B00()
{
  uint64_t v1 = type metadata accessor for ContinuousClock();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = (((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v12);
}

uint64_t sub_1001B9C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for ContinuousClock() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(type metadata accessor for ContinuousClock.Instant() - 8);
  unint64_t v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v14 = (*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001B0388(a1, a2, a3, a4, v4 + v10, v4 + v13, *(void *)(v4 + v14), *(void *)(v4 + v14 + 8), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001B9DE0(uint64_t a1)
{
  return sub_1001BA060(a1, (uint64_t)&unk_1004211B0, sub_1001BB6E0);
}

uint64_t sub_1001B9E00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HostedRoutingItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001B9E5C(uint64_t result, uint64_t a2, unsigned int a3)
{
  switch((a3 >> 8) & 6 | (a3 >> 7) & 1)
  {
    case 0u:
      uint64_t result = swift_retain();
      break;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
      uint64_t result = sub_1001B9EBC(result, a2, a3 & 0xF97F);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001B9EBC(uint64_t a1, uint64_t a2, unsigned __int16 a3)
{
  switch(a3 >> 11)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
    case 7:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 8:
    case 9:
    case 10:
    case 16:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001B9F40(uint64_t a1)
{
  return sub_1001BA060(a1, (uint64_t)&unk_100421188, (uint64_t (*)(void))sub_1001BAE34);
}

uint64_t sub_1001B9F64()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001BA040(uint64_t a1)
{
  return sub_1001BA060(a1, (uint64_t)&unk_100421048, (uint64_t (*)(void))sub_1001BA414);
}

uint64_t sub_1001BA060(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(type metadata accessor for RoutingInteraction() - 8) + 80);
  uint64_t v7 = (void (*)(void))v3[2];
  uint64_t v8 = v4[3];
  uint64_t v9 = v4[4];
  uint64_t v10 = v4[5];
  if (!a1) {
    goto LABEL_4;
  }
  uint64_t v19 = v4[3];
  swift_getErrorValue();
  swift_errorRetain();
  if (sub_10024FC34(v21))
  {
    swift_errorRelease();
    uint64_t v8 = v19;
LABEL_4:
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = v10;
    swift_bridgeObjectRetain();
    sub_1001B0CFC((uint64_t)v4 + ((v6 + 56) & ~v6), (void (*)(void, void, void, void))v7, v8, a3, v11);
    return swift_release();
  }
  swift_errorRetain();
  swift_bridgeObjectRetain();
  MRDFastSyncGroupSessionState.rawValue.getter(a1, v9, v10, 1);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  unsigned __int8 v18 = v17;
  v7();
  swift_errorRelease();
  sub_1001859D4(v14, v16, v18);
  return swift_errorRelease();
}

uint64_t sub_1001BA1E8()
{
  return type metadata accessor for RoutingItemDataSource(0);
}

uint64_t type metadata accessor for RoutingItemDataSource(uint64_t a1)
{
  return sub_1001BA264(a1, (uint64_t *)&unk_10047ED30);
}

uint64_t sub_1001BA210()
{
  return sub_1001BA2C0();
}

uint64_t sub_1001BA23C()
{
  return type metadata accessor for AVDiscoveryRoutingItemDataSource(0);
}

uint64_t type metadata accessor for AVDiscoveryRoutingItemDataSource(uint64_t a1)
{
  return sub_1001BA264(a1, qword_10047ED40);
}

uint64_t sub_1001BA264(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001BA29C()
{
  return sub_1001BA2C0();
}

uint64_t sub_1001BA2C0()
{
  uint64_t result = type metadata accessor for RoutingSessionConfiguration.ItemType();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for RoutingMode();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1001BA3DC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BA414(uint64_t a1)
{
  return sub_1001B1F3C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_1001BA434()
{
  uint64_t v1 = type metadata accessor for ContinuousClock();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  unint64_t v11 = ((((((((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v12 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v11, v12);
}

uint64_t sub_1001BA5D0(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ContinuousClock() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for ContinuousClock.Instant() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001B343C(a1, v1 + v4, v1 + v7, *(void *)(v1 + v8), *(void *)(v1 + v9), *(void *)(v1 + v9 + 8), *(void (**)(void, void, void, void))(v1 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + ((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001BA6FC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BA734()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001BA784()
{
  uint64_t v1 = (uint64_t (*)(void))v0[3];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  unint64_t v4 = (void (*)(void))v0[7];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(void))(*(void *)result + 224))();
    char v6 = v1();
    swift_bridgeObjectRelease();
    if (v6)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1001B5D04(v2, v3);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1001924CC(v7);
      v4(0);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1001BA8B8()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1001BA8E4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1001BA90C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001BA954()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void (*)(uint64_t))v0[5];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t v5 = sub_1001B5D04(v1, v2);
    swift_endAccess();
    if (v5)
    {
      uint64_t v6 = sub_1001924CC(v5);
      v3(v6);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1001BAA1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Duration.UnitsFormatStyle.Unit();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v44 = (char *)v32 - v7;
  uint64_t v8 = sub_100013A80(&qword_100478D60);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    sub_100013A80(&qword_100478D68);
    uint64_t v12 = (unsigned char *)static _SetStorage.allocate(capacity:)();
    uint64_t v13 = 0;
    uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v14 = v3 + 16;
    unint64_t v38 = a1 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
    uint64_t v16 = *(void *)(v14 + 56);
    uint64_t v42 = v15;
    uint64_t v43 = v16;
    uint64_t v36 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 32);
    id v37 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 40);
    uint64_t v40 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    unsigned __int8 v17 = v12 + 56;
    unsigned __int8 v18 = (void (**)(char *, uint64_t))(v14 - 8);
    v32[1] = (v14 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v33 = v10;
    uint64_t v35 = v11;
    v15(v10, v38, v2);
    while (1)
    {
      id v34 = *v37;
      v34(v10, 0, 1, v2);
      if ((*v36)(v10, 1, v2) == 1) {
        break;
      }
      uint64_t v41 = v13;
      id v39 = *v40;
      v39(v44, v10, v2);
      sub_1001B97B0(&qword_100478D70, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit);
      uint64_t v19 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v20 = ~(-1 << v12[32]);
      unint64_t v21 = v19 & v20;
      unint64_t v22 = (v19 & (unint64_t)v20) >> 6;
      uint64_t v23 = *(void *)&v17[8 * v22];
      uint64_t v24 = 1 << (v19 & v20);
      if ((v24 & v23) != 0)
      {
        do
        {
          uint64_t v25 = v14;
          v42(v6, *((void *)v12 + 6) + v21 * v43, v2);
          sub_1001B97B0(&qword_100478D78, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit);
          char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
          id v27 = *v18;
          (*v18)(v6, v2);
          if (v26)
          {
            v27(v44, v2);
            uint64_t v14 = v25;
            uint64_t v10 = v33;
            goto LABEL_4;
          }
          unint64_t v21 = (v21 + 1) & v20;
          unint64_t v22 = v21 >> 6;
          uint64_t v23 = *(void *)&v17[8 * (v21 >> 6)];
          uint64_t v24 = 1 << v21;
          uint64_t v14 = v25;
        }
        while ((v23 & (1 << v21)) != 0);
        uint64_t v10 = v33;
      }
      *(void *)&v17[8 * v22] = v24 | v23;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v39)(*((void *)v12 + 6) + v21 * v43, v44, v2);
      uint64_t v29 = *((void *)v12 + 2);
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30)
      {
        __break(1u);
        return result;
      }
      *((void *)v12 + 2) = v31;
LABEL_4:
      uint64_t v13 = v41 + 1;
      if (v41 + 1 == v35)
      {
        v34(v10, 1, 1, v2);
        return (uint64_t)v12;
      }
      v42(v10, v38 + v43 * v13, v2);
    }
  }
  else
  {
    uint64_t v12 = &_swiftEmptySetSingleton;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v10, 1, 1, v2);
  }
  return (uint64_t)v12;
}

uint64_t sub_1001BAE34(uint64_t a1)
{
  return sub_1001B1DC4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001BAE3C()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, (v6 + 19) & 0xFFFFFFFFFFFFFFF8 | 4, v5);
}

uint64_t sub_1001BAF40(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (void *)v1[2];
  uint64_t v7 = (void (*)(void))v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = *(void *)((char *)v1 + v5);
  uint64_t v11 = *(void *)((char *)v1 + v5 + 8);
  float v12 = *(float *)((char *)v1 + ((v5 + 19) & 0xFFFFFFFFFFFFFFF8));

  return sub_1001B3070(a1, v6, v7, v8, v9, (uint64_t)v1 + v4, v10, v11, v12);
}

uint64_t sub_1001BAFF4()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001BB0DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (void *)v1[2];
  unint64_t v6 = (void (*)(void))v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  float v9 = *(float *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL));

  return sub_1001B2C54(a1, v5, v6, v7, v9, v8, (uint64_t)v1 + v4);
}

uint64_t sub_1001BB180()
{
  return _swift_deallocObject(v0, 20, 7);
}

BOOL sub_1001BB190(uint64_t a1)
{
  return sub_1001B2E78(a1, *(float *)(v1 + 16));
}

char *sub_1001BB198(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BB284()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 36, 7);
}

uint64_t sub_1001BB2BC(uint64_t a1)
{
  return sub_1001B32A8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(float *)(v1 + 32));
}

uint64_t sub_1001BB2C8(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (result)
  {
    swift_errorRetain();
    return sub_100185894(a2, a3, a4);
  }
  return result;
}

uint64_t sub_1001BB320(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (result)
  {
    swift_errorRelease();
    return sub_1001859D4(a2, a3, a4);
  }
  return result;
}

unint64_t sub_1001BB378()
{
  unint64_t result = qword_100478D90;
  if (!qword_100478D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100478D90);
  }
  return result;
}

uint64_t sub_1001BB3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HostedRoutingItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BB430()
{
  return sub_1001AC8E8();
}

uint64_t sub_1001BB438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80(&qword_100479F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BB4A0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

unint64_t sub_1001BB4CC()
{
  unint64_t result = qword_100478298;
  if (!qword_100478298)
  {
    sub_10018FE08(255, (unint64_t *)&qword_100479FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100478298);
  }
  return result;
}

uint64_t sub_1001BB534()
{
  return sub_1001ACCF4();
}

uint64_t sub_1001BB550()
{
  return sub_1001ACD74();
}

void type metadata accessor for Name()
{
  if (!qword_100478DD0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_100478DD0);
    }
  }
}

uint64_t sub_1001BB5B0()
{
  return sub_1001B97B0(&qword_100478DD8, (void (*)(uint64_t))type metadata accessor for Name);
}

uint64_t sub_1001BB5F8()
{
  return sub_1001B97B0(&qword_100478DE0, (void (*)(uint64_t))type metadata accessor for Name);
}

uint64_t sub_1001BB640()
{
  return sub_1001B97B0(&qword_100478DE8, (void (*)(uint64_t))type metadata accessor for Name);
}

uint64_t sub_1001BB704()
{
  return sub_1001BC438((uint64_t)&OBJC_IVAR____TtC12mediaremoted14MRDNearbyGroup_nearbyGroup, (void (*)(uint64_t))&NearbyGroup.id.getter);
}

uint64_t variable initialization expression of MRDNearbyGroup.autoApproveKey()
{
  uint64_t v0 = type metadata accessor for SymmetricKeySize();
  __chkstk_darwin(v0 - 8);
  static SymmetricKeySize.bits256.getter();
  return SymmetricKey.init(size:)();
}

uint64_t sub_1001BB808()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12mediaremoted14MRDNearbyGroup____lazy_storage___sessionSecret);
  if (*(void *)(v0 + OBJC_IVAR____TtC12mediaremoted14MRDNearbyGroup____lazy_storage___sessionSecret + 8))
  {
    uint64_t countAndFlagsBits = *v1;
  }
  else
  {
    SymmetricKey.withUnsafeBytes<A>(_:)();
    Swift::String v3 = Data.base64EncodedString(options:)(0);
    uint64_t countAndFlagsBits = v3._countAndFlagsBits;
    sub_10018FE9C(v5, v6);
    *(Swift::String *)uint64_t v1 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return countAndFlagsBits;
}

uint64_t sub_1001BB934(uint64_t a1, uint64_t a2)
{
  Swift::String v3 = (void *)(v2 + OBJC_IVAR____TtC12mediaremoted14MRDNearbyGroup____lazy_storage___sessionSecret);
  *Swift::String v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BB950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v14[3] = &type metadata for UnsafeRawBufferPointer;
  v14[4] = &protocol witness table for UnsafeRawBufferPointer;
  v14[0] = a1;
  v14[1] = a2;
  uint64_t v4 = sub_1001BDB5C(v14, (uint64_t)&type metadata for UnsafeRawBufferPointer);
  uint64_t v5 = (unsigned char *)*v4;
  if (*v4 && (v6 = (unsigned char *)v4[1], uint64_t v7 = v6 - v5, v6 != v5))
  {
    if (v7 <= 14)
    {
      uint64_t v8 = sub_1001BCED8(v5, v6);
      unint64_t v9 = v12 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((unint64_t)v7 >= 0x7FFFFFFF)
    {
      uint64_t v8 = sub_1001BD020((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v13 | 0x8000000000000000;
    }
    else
    {
      uint64_t v8 = sub_1001BCF9C((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v11 | 0x4000000000000000;
    }
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0xC000000000000000;
  }
  uint64_t result = sub_10018FD5C((uint64_t)v14);
  *a3 = v8;
  a3[1] = v9;
  return result;
}

uint64_t (*sub_1001BBA1C(uint64_t *a1))(void *a1)
{
  a1[2] = v1;
  *a1 = sub_1001BB808();
  a1[1] = v3;
  return sub_1001BBA64;
}

uint64_t sub_1001BBA64(void *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = (void *)(a1[2] + OBJC_IVAR____TtC12mediaremoted14MRDNearbyGroup____lazy_storage___sessionSecret);
  void *v2 = *a1;
  v2[1] = v1;
  return swift_bridgeObjectRelease();
}

uint64_t variable initialization expression of MRDFastSyncGroupSession.leaderParticipantIdentifier()
{
  return 0;
}

id sub_1001BBA90(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SymmetricKeySize();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = (char *)objc_allocWithZone(v1);
  static SymmetricKeySize.bits256.getter();
  SymmetricKey.init(size:)();
  uint64_t v5 = &v4[OBJC_IVAR____TtC12mediaremoted14MRDNearbyGroup____lazy_storage___sessionSecret];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC12mediaremoted14MRDNearbyGroup_nearbyGroup] = a1;
  swift_retain();

  v8.receiver = v4;
  v8.super_class = v1;
  id v6 = objc_msgSendSuper2(&v8, "init");
  swift_release();
  return v6;
}

uint64_t sub_1001BBCE8(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_100478E08 + dword_100478E08);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_1001BBD90;
  return v4();
}

uint64_t sub_1001BBD90(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *v2;
  swift_task_dealloc();
  uint64_t v7 = *(void (***)(void, void, void))(v5 + 16);
  if (v3)
  {
    objc_super v8 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    ((void (**)(void, void, void *))v7)[2](v7, 0, v8);

    _Block_release(v7);
  }
  else
  {
    ((void (**)(void, void *, void))v7)[2](v7, a1, 0);
    _Block_release(v7);
  }
  unint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

uint64_t MRDNearbyGroup.description.getter()
{
  swift_getObjectType();
  v1._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 8250;
  v2._object = (void *)0xE200000000000000;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x68))();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 62;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 60;
}

id MRDFastSyncGroupSession.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void MRDNearbyGroup.init()()
{
}

id MRDNearbyGroup.__deallocating_deinit()
{
  return sub_1001BCE90(0, type metadata accessor for MRDNearbyGroup);
}

uint64_t sub_1001BC2A4()
{
  return dispatch thunk of NearbyInvitation.invitationData.getter();
}

id sub_1001BC2F0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = a1;
  a4();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v11;
}

uint64_t sub_1001BC418()
{
  return sub_1001BC438((uint64_t)&OBJC_IVAR____TtC12mediaremoted19MRDNearbyInvitation_nearbyInvitation, (void (*)(uint64_t))&NearbyInvitation.id.getter);
}

uint64_t sub_1001BC438(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v5);
  uint64_t v8 = UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v8;
}

id sub_1001BC52C(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC12mediaremoted19MRDNearbyInvitation_nearbyInvitation] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t sub_1001BC70C(void *a1, int a2, char a3, void *aBlock)
{
  v4[2] = a1;
  v4[3] = _Block_copy(aBlock);
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;
  v4[4] = v8;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))((char *)&dword_100478E18 + dword_100478E18);
  id v10 = a1;
  NSString v11 = (void *)swift_task_alloc();
  void v4[5] = v11;
  void *v11 = v4;
  v11[1] = sub_10019AAD4;
  return v13((uint64_t)v10, v7, v9, a3);
}

uint64_t MRDNearbyInvitation.description.getter()
{
  swift_getObjectType();
  v1._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0x3D6469203ALL;
  v2._object = (void *)0xE500000000000000;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x60))();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 62;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 60;
}

uint64_t sub_1001BC9F0()
{
  uint64_t v1 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v1 - 8);
  Swift::String v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_1001BD848((uint64_t)v3);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v10;
      swift_unknownObjectRelease();
      if (v11 | v9)
      {
        v13[0] = 0;
        v13[1] = 0;
        v13[2] = v9;
        v13[3] = v11;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1001BCC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1001BCC2C, 0, 0);
}

uint64_t sub_1001BCC2C()
{
  Swift::String v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of NearbyInvitation.markUsed()
                         + async function pointer to dispatch thunk of NearbyInvitation.markUsed());
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_1001BCCDC;
  return v3();
}

uint64_t sub_1001BCCDC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void MRDNearbyInvitation.init()()
{
}

id MRDNearbyInvitation.__deallocating_deinit(uint64_t a1)
{
  return sub_1001BCE90(a1, type metadata accessor for MRDNearbyInvitation);
}

id sub_1001BCE90(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_1001BCED8(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1001BCF9C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1001BD020(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Data.RangeReference();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1001BD09C()
{
  type metadata accessor for SymmetricKeySize();
  *(void *)(v0 + 32) = swift_task_alloc();
  type metadata accessor for NearbyGroup();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_1001BD174;
  return NearbyGroup.__allocating_init(members:service:)(&_swiftEmptySetSingleton, 1);
}

uint64_t sub_1001BD174(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return _swift_task_switch(sub_1001BD2C8, 0, 0);
  }
}

uint64_t sub_1001BD2C8()
{
  id receiver = v0[3].receiver;
  uint64_t v2 = (objc_class *)type metadata accessor for MRDNearbyGroup();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  static SymmetricKeySize.bits256.getter();
  SymmetricKey.init(size:)();
  uint64_t v4 = &v3[OBJC_IVAR____TtC12mediaremoted14MRDNearbyGroup____lazy_storage___sessionSecret];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC12mediaremoted14MRDNearbyGroup_nearbyGroup] = receiver;
  swift_retain();

  v0[1].id receiver = v3;
  v0[1].super_class = v2;
  id v5 = objc_msgSendSuper2(v0 + 1, "init");
  swift_release();
  swift_task_dealloc();
  super_class = (uint64_t (*)(id))v0->super_class;
  return super_class(v5);
}

uint64_t type metadata accessor for MRDNearbyGroup()
{
  uint64_t result = qword_10047EE60;
  if (!qword_10047EE60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001BD418(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 120) = a4;
  *(void *)(v4 + 80) = a2;
  *(void *)(v4 + 88) = a3;
  *(void *)(v4 + 72) = a1;
  return _swift_task_switch(sub_1001BD440, 0, 0);
}

uint64_t sub_1001BD440()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = sub_100279918(*(unsigned char *)(v0 + 120));
  sub_100013A80(&qword_100478EC0);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1001A0E48(v2);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC12mediaremoted14MRDNearbyGroup_nearbyGroup);
  *(void *)(v0 + 40) = type metadata accessor for NearbyGroup();
  *(void *)(v0 + 48) = &protocol witness table for NearbyGroup;
  *(void *)(v0 + 16) = v6;
  swift_retain();
  int v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  *int v7 = v0;
  v7[1] = sub_1001BD568;
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  return NearbyInvitation.__allocating_init(displayName:service:userInfo:invitationSourceProvider:)(v9, v8, 1, v3, v5, v0 + 16);
}

uint64_t sub_1001BD568(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001BD724;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_1001BD690;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001BD690()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = (objc_class *)type metadata accessor for MRDNearbyInvitation();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC12mediaremoted19MRDNearbyInvitation_nearbyInvitation] = v1;
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = v2;
  id v4 = objc_msgSendSuper2((objc_super *)(v0 + 56), "init");
  uint64_t v5 = *(uint64_t (**)(id))(v0 + 8);
  return v5(v4);
}

uint64_t sub_1001BD724()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for MRDNearbyInvitation()
{
  return self;
}

uint64_t sub_1001BD760()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001BD7A0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000D170;
  v3[2] = v2;
  return _swift_task_switch(sub_1001BCC2C, 0, 0);
}

uint64_t sub_1001BD848(uint64_t a1)
{
  uint64_t v2 = sub_100013A80(&qword_100478720);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001BD8A8()
{
  return type metadata accessor for MRDNearbyGroup();
}

uint64_t sub_1001BD8B0()
{
  uint64_t result = type metadata accessor for SymmetricKey();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001BD958()
{
  _Block_release(*(const void **)(v0 + 40));

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001BD9A0()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  id v4 = *(void **)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 32);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_100013F84;
  uint64_t v7 = (uint64_t (*)(void *, int, char, void *))((char *)&dword_100478E80 + dword_100478E80);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1001BDA70()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BDAA8()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000D170;
  id v4 = (uint64_t (*)(const void *))((char *)&dword_100478EA0 + dword_100478EA0);
  return v4(v2);
}

void *sub_1001BDB5C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void type metadata accessor for MRGroupSessionRouteType()
{
  if (!qword_100478EC8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_100478EC8);
    }
  }
}

void sub_1001BDBFC(char a1)
{
  uint64_t v2 = v1;
  int v3 = a1 & 1;
  uint64_t v4 = sub_100013A80(&qword_100478F10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(v2 + 16) != v3)
  {
    uint64_t v11 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
    swift_retain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v35 = v6;
      uint64_t v15 = v14;
      uint64_t v34 = swift_slowAlloc();
      aBlock[0] = v34;
      *(_DWORD *)uint64_t v15 = 136315394;
      uint64_t v17 = *(void *)(v2
                      + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_clientIdentifier);
      unint64_t v16 = *(void *)(v2
                      + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_clientIdentifier
                      + 8);
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_10018A9E0(v17, v16, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 1024;
      LODWORD(v36) = *(unsigned __int8 *)(v2 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Client.Context]<%s> setIsPresentingUI - value: %{BOOL}d", (uint8_t *)v15, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v6 = v35;
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (*(unsigned char *)(v2 + 16) == 1)
    {
      uint64_t v18 = OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_itemSettlingTimer;
      if (*(void *)(v2
                     + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_itemSettlingTimer))
        return;
      type metadata accessor for Preferences();
      static Preferences.sessionItemStabilityInterval.getter();
      double v20 = v19;
      unint64_t v21 = (void *)*sub_100266CC0();
      uint64_t v22 = swift_allocObject();
      swift_weakInit();
      id v23 = objc_allocWithZone((Class)MSVTimer);
      aBlock[4] = (uint64_t)sub_1001E672C;
      aBlock[5] = v22;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100006760;
      aBlock[3] = (uint64_t)&unk_100421948;
      uint64_t v24 = _Block_copy(aBlock);
      id v25 = v21;
      swift_retain();
      swift_release();
      id v26 = [v23 initWithInterval:0 repeats:v25 queue:v24 block:v20];

      _Block_release(v24);
      swift_release();
      id v27 = *(void **)(v2 + v18);
      *(void *)(v2 + v18) = v26;
    }
    else
    {
      uint64_t v28 = type metadata accessor for RoutingInteraction();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v6, 1, 1, v28);
      uint64_t v29 = v2
          + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_mostRecentSourceSessionHidingInteraction;
      swift_beginAccess();
      sub_1001DF8D8((uint64_t)v6, v29);
      swift_endAccess();
      sub_1001BE3A4();
      sub_100009A08((uint64_t)v6, &qword_100478F10);
      BOOL v30 = (void *)(v2
                     + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_visibleSessionIdentifiersForCurrentPresentation);
      swift_beginAccess();
      void *v30 = &_swiftEmptySetSingleton;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v2
               + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_requestsStableItemOrdering) = 0;
      sub_1001BE6E0();
      uint64_t v31 = OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_itemSettlingTimer;
      uint64_t v32 = *(void **)(v2
                     + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_itemSettlingTimer);
      if (!v32) {
        return;
      }
      [v32 invalidate];
      id v27 = *(void **)(v2 + v31);
      *(void *)(v2 + v31) = 0;
    }
  }
}

uint64_t sub_1001BE0D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1001DC3B0(a1, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    uint64_t v10 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
    swift_retain_n();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    int v13 = v12;
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v14 = swift_slowAlloc();
      int v23 = v13;
      uint64_t v15 = v14;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v25 = v22;
      *(_DWORD *)uint64_t v15 = 136315394;
      uint64_t v16 = *(void *)(v2
                      + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_clientIdentifier);
      unint64_t v17 = *(void *)(v2
                      + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_clientIdentifier
                      + 8);
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_10018A9E0(v16, v17, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      v21[1] = v15 + 14;
      swift_bridgeObjectRetain();
      uint64_t v18 = Set.description.getter();
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_10018A9E0(v18, v20, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v23, "[Client.Context]<%s> setExpandedSessionIdentifiers - value: %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_1001BE3A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)&v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100013A80(&qword_100478F10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for RoutingInteraction();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  os_log_type_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = v1
      + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_mostRecentSourceSessionHidingInteraction;
  swift_beginAccess();
  sub_1001E71E8(v13, (uint64_t)v8, &qword_100478F10);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100009A08((uint64_t)v8, &qword_100478F10);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v8, v9);
  RoutingInteraction.action.getter();
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v3 + 88))(v5, v2) == enum case for RoutingInteraction.Action.handoff(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
    uint64_t v15 = *v5;
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v18 = sub_1002A0458();
    BOOL v19 = v16 == *(void *)v18 && v17 == *((void *)v18 + 1);
    if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      swift_beginAccess();
      sub_10018C4D0(v16, v17);
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1001BE6E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = v14;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = *(void *)(v1
                    + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_clientIdentifier);
    unint64_t v11 = *(void *)(v1
                    + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_clientIdentifier
                    + 8);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10018A9E0(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 1024;
    LODWORD(v15) = *(unsigned __int8 *)(v1
                                      + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_requestsStableItemOrdering);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[Client.Context]<%s> setRequestsStableItemOrdering - value: %{BOOL}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1001BE92C()
{
  uint64_t v1 = sub_100013A80(&qword_100478F10);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v34 - v4;
  unint64_t v6 = 0xE000000000000000;
  uint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  _StringGuts.grow(_:)(51);
  uint64_t v40 = v38;
  unint64_t v41 = v39;
  v7._uint64_t countAndFlagsBits = 60;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x203A6975202D20;
  v9._object = (void *)0xE700000000000000;
  String.append(_:)(v9);
  if (*(unsigned char *)(v0 + 16)) {
    uint64_t v10 = 1702195828;
  }
  else {
    uint64_t v10 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 16)) {
    unint64_t v11 = 0xE400000000000000;
  }
  else {
    unint64_t v11 = 0xE500000000000000;
  }
  unint64_t v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0x646E61707865202CLL;
  v13._object = (void *)0xEC000000203A6465;
  String.append(_:)(v13);
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0x656C62617473202CLL;
  v15._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v15);
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_requestsStableItemOrdering))
    uint64_t v16 = 1702195828;
  else {
    uint64_t v16 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_requestsStableItemOrdering))
    unint64_t v17 = 0xE400000000000000;
  else {
    unint64_t v17 = 0xE500000000000000;
  }
  unint64_t v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease();
  v19._uint64_t countAndFlagsBits = 8236;
  v19._object = (void *)0xE200000000000000;
  String.append(_:)(v19);
  uint64_t v20 = v0
      + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_mostRecentSourceSessionHidingInteraction;
  swift_beginAccess();
  sub_1001E71E8(v20, (uint64_t)v5, &qword_100478F10);
  uint64_t v21 = type metadata accessor for RoutingInteraction();
  uint64_t v22 = *(void *)(v21 - 8);
  int v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v5, 1, v21);
  sub_100009A08((uint64_t)v5, &qword_100478F10);
  if (v24 == 1)
  {
    uint64_t v25 = 0;
LABEL_17:
    unint64_t v30 = v6;
    String.append(_:)(*(Swift::String *)&v25);
    swift_bridgeObjectRelease();
    v31._uint64_t countAndFlagsBits = 0x203A776F6873;
    v31._object = (void *)0xE600000000000000;
    String.append(_:)(v31);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v32._uint64_t countAndFlagsBits = Set.description.getter();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33._uint64_t countAndFlagsBits = 62;
    v33._object = (void *)0xE100000000000000;
    String.append(_:)(v33);
    return v40;
  }
  uint64_t v36 = 0x203A65646968;
  unint64_t v37 = 0xE600000000000000;
  uint64_t v26 = v35;
  sub_1001E71E8(v20, v35, &qword_100478F10);
  uint64_t result = v23((char *)v26, 1, v21);
  if (result != 1)
  {
    sub_100015AE0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v26, v21);
    v29._uint64_t countAndFlagsBits = 8236;
    v29._object = (void *)0xE200000000000000;
    String.append(_:)(v29);
    uint64_t v25 = v36;
    unint64_t v6 = v37;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001BED5C()
{
  swift_bridgeObjectRelease();
  sub_100009A08(v0+ OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_mostRecentSourceSessionHidingInteraction, &qword_100478F10);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_itemSettlingTimer));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1001BEE04()
{
  return sub_1001BE92C();
}

uint64_t sub_1001BEE28()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoutingMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  _StringGuts.grow(_:)(68);
  uint64_t v32 = v30;
  unint64_t v33 = v31;
  v10._uint64_t countAndFlagsBits = 60;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v11._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x746E656469202D20;
  v12._object = (void *)0xEF203A7265696669;
  String.append(_:)(v12);
  uint64_t v13 = *(void *)(v0
                  + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier);
  Swift::String v14 = *(void **)(v0
                 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier
                 + 8);
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 0x656C646E7562202CLL;
  v16._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v16);
  uint64_t v17 = *(void *)(v0 + 16);
  unint64_t v18 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v19._uint64_t countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 0x203A65646F6D202CLL;
  v20._object = (void *)0xE800000000000000;
  String.append(_:)(v20);
  uint64_t v21 = v0
      + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_routingMode;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v21, v6);
  sub_100015AE0(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
  v22._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v23._uint64_t countAndFlagsBits = 0x6769666E6F63202CLL;
  v23._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v2);
  sub_100015AE0(&qword_100478F30, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration);
  v24._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v25._uint64_t countAndFlagsBits = 0x7865746E6F63202CLL;
  v25._object = (void *)0xEB00000000203A74;
  String.append(_:)(v25);
  swift_retain();
  v26._uint64_t countAndFlagsBits = sub_1001BE92C();
  String.append(_:)(v26);
  swift_release();
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 62;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  return v32;
}

uint64_t sub_1001BF240()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration;
  uint64_t v2 = type metadata accessor for RoutingSessionConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_routingMode;
  uint64_t v4 = type metadata accessor for RoutingMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_queue));
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

Swift::Int sub_1001BF370()
{
  return Hasher._finalize()();
}

uint64_t sub_1001BF3DC()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001BF444()
{
  return Hasher._finalize()();
}

uint64_t sub_1001BF4AC()
{
  return sub_1001BEE28();
}

uint64_t sub_1001BF4D0(void *a1, void *a2)
{
  uint64_t v2 = (void *)(*a1
                + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier);
  if (*v2 == *(void *)(*a2
                        + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier)
    && v2[1] == *(void *)(*a2
                          + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier
                          + 8))
  {
    return 1;
  }
  else
  {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

void *sub_1001BF50C()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void **)(v0 + 16);
  }
  else
  {
    uint64_t v1 = &_swiftEmptySetSingleton;
    *(void *)(v0 + 16) = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001BF554()
{
  sub_100013A80(&qword_100478690);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003C5F00;
  uint64_t result = kMRMediaRemoteOriginNowPlayingApplicationDidChangeNotification;
  if (!kMRMediaRemoteOriginNowPlayingApplicationDidChangeNotification)
  {
    __break(1u);
    goto LABEL_12;
  }
  *(void *)(v0 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 40) = v2;
  uint64_t result = kMRMediaRemoteOriginNowPlayingApplicationClientStateDidChange;
  if (!kMRMediaRemoteOriginNowPlayingApplicationClientStateDidChange)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(void *)(v0 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 56) = v3;
  uint64_t result = kMRMediaRemoteOriginNowPlayingPlayerDidChange;
  if (!kMRMediaRemoteOriginNowPlayingPlayerDidChange)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  *(void *)(v0 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 72) = v4;
  uint64_t result = kMRMediaRemoteOriginNowPlayingApplicationIsPlayingDidChangeNotification;
  if (!kMRMediaRemoteOriginNowPlayingApplicationIsPlayingDidChangeNotification)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(void *)(v0 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 88) = v5;
  uint64_t result = kMROriginNowPlayingPlaybackQueueChangedNotification;
  if (!kMROriginNowPlayingPlaybackQueueChangedNotification)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(void *)(v0 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 104) = v6;
  uint64_t result = kMROriginPlaybackQueueContentItemsChangedNotification;
  if (!kMROriginPlaybackQueueContentItemsChangedNotification)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(void *)(v0 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 120) = v7;
  uint64_t result = kMROriginPlaybackQueueContentItemArtworkChangedNotification;
  if (!kMROriginPlaybackQueueContentItemArtworkChangedNotification)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(void *)(v0 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 136) = v8;
  uint64_t result = kMRMediaRemoteOriginSupportedCommandsDidChangeNotification;
  if (!kMRMediaRemoteOriginSupportedCommandsDidChangeNotification)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(void *)(v0 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 152) = v9;
  uint64_t result = kMRMediaRemoteOriginNowPlayingPlayerStateDidChange;
  if (kMRMediaRemoteOriginNowPlayingPlayerStateDidChange)
  {
    uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v0 + 160) = result;
    *(void *)(v0 + 168) = v10;
    qword_10047EE78 = v0;
    return result;
  }
LABEL_19:
  __break(1u);
  return result;
}

id sub_1001BF69C()
{
  sub_100013A80(&qword_100478DC8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003C5F10;
  uint64_t v1 = (void *)MRAVEndpointVolumeDidChangeNotification;
  uint64_t v2 = (void *)MRAVEndpointVolumeControlCapabilitiesDidChangeNotification;
  *(void *)(v0 + 32) = MRAVEndpointVolumeDidChangeNotification;
  *(void *)(v0 + 40) = v2;
  id v6 = (id)MRAVEndpointDeviceInfoDidChangeNotification;
  *(void *)(v0 + 48) = MRAVEndpointDeviceInfoDidChangeNotification;
  qword_10047EE88 = v0;
  id v3 = v1;
  id v4 = v2;

  return v6;
}

void *sub_1001BF738()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void **)(v0 + 24);
  }
  else
  {
    uint64_t v1 = _swiftEmptyArrayStorage;
    *(void *)(v0 + 24) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1001BF780()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(void **)(v0 + 32);
  }
  else
  {
    uint64_t v1 = &_swiftEmptyDictionarySingleton;
    *(void *)(v0 + 32) = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1001BF7C8()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void **)(v0 + 40);
  }
  else
  {
    uint64_t v1 = &_swiftEmptyDictionarySingleton;
    *(void *)(v0 + 40) = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*sub_1001BF810(void **a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_1001BF7C8();
  return sub_1001BF858;
}

uint64_t sub_1001BF858(void *a1)
{
  *(void *)(a1[1] + 40) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BF868()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 48);
  }
  else
  {
    type metadata accessor for SessionIdentifierStore();
    id v2 = sub_1001A8C14();
    sub_100249704((uint64_t)v2);
    uint64_t v1 = v3;
    *(void *)(v0 + 48) = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

void *sub_1001BF8D4()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void **)(v0 + 56);
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for RoutingTimeline();
    uint64_t v1 = sub_10024578C();
    (*(void (**)(uint64_t, _UNKNOWN **))(*v1 + 200))(v2, &off_100421888);
    *(void *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1001BF970()
{
  if (*(void *)(v0 + 64))
  {
    uint64_t v1 = *(void *)(v0 + 64);
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for HostedRoutingSessionDataSource();
    uint64_t v3 = sub_1001BF8D4();
    uint64_t v4 = sub_1001BF868();
    id v5 = sub_1001A8C14();
    swift_unknownObjectRetain();
    uint64_t v1 = sub_1002BF9E8(v3, v4, v2, (uint64_t)&off_100421898, v5);
    *(void *)(v2 + 64) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1001BFA20()
{
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = *(void *)(v0 + 72);
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for RoutingRecommendationDataSource();
    uint64_t v3 = sub_1001BF8D4();
    id v4 = sub_1001A8C14();
    swift_unknownObjectRetain();
    uint64_t v1 = sub_10028DAA0((uint64_t)v3, v4, v2, (uint64_t)&off_100421878);
    *(void *)(v2 + 72) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

void *sub_1001BFABC()
{
  if (*(void *)(v0 + 80))
  {
    uint64_t v1 = *(void **)(v0 + 80);
  }
  else
  {
    uint64_t v1 = &_swiftEmptyDictionarySingleton;
    *(void *)(v0 + 80) = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001BFB04()
{
  uint64_t v0 = swift_allocObject();
  sub_1001BFB3C();
  return v0;
}

uint64_t sub_1001BFB3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 80) = 0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  uint64_t v6 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    v13[1] = v9 + 4;
    uint64_t v10 = _typeName(_:qualified:)();
    v13[2] = sub_10018A9E0(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%s] init", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1001CD5F8();
  return v1;
}

uint64_t sub_1001BFD78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  os_log_type_t v8 = v7;
  id v110 = a6;
  uint64_t v125 = a1;
  uint64_t v126 = a5;
  uint64_t v121 = a3;
  uint64_t v122 = a4;
  uint64_t v124 = a2;
  uint64_t v109 = *v8;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v127 = *(void *)(v10 - 8);
  uint64_t v128 = v10;
  __chkstk_darwin(v10);
  uint64_t v117 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for DispatchQoS();
  uint64_t v116 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v115 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for RoutingSessionConfiguration.Context();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  id v111 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Logger();
  uint64_t v114 = *(void *)(v120 - 8);
  uint64_t v14 = __chkstk_darwin(v120);
  uint64_t v108 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v119 = (char *)&v107 - v16;
  uint64_t v17 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  Swift::String v20 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchPredicate();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v24 = (unint64_t)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v25 = (void *)*sub_100266CC0();
  if ((a7 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v126, v17);
    unint64_t v70 = (*(unsigned __int8 *)(v18 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v71 = (char *)swift_allocObject();
    uint64_t v72 = v124;
    uint64_t v73 = v125;
    *((void *)v71 + 2) = v8;
    *((void *)v71 + 3) = v73;
    uint64_t v74 = v121;
    uint64_t v75 = v122;
    *((void *)v71 + 4) = v72;
    *((void *)v71 + 5) = v74;
    *((void *)v71 + 6) = v75;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v71[v70], v20, v17);
    NSString v134 = sub_1001DCB94;
    uint64_t v135 = v71;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v131 = 1107296256;
    id v132 = sub_100006760;
    uint64_t v133 = &unk_100421490;
    uint64_t v76 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v77 = v25;
    swift_retain();
    uint64_t v78 = v115;
    static DispatchQoS.unspecified.getter();
    uint64_t v129 = _swiftEmptyArrayStorage;
    sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v79 = v117;
    uint64_t v80 = v128;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v76);

    (*(void (**)(char *, uint64_t))(v127 + 8))(v79, v80);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v78, v118);
    return swift_release();
  }
  uint64_t v118 = v18;
  uint64_t v26 = v125;
  uint64_t v123 = v8;
  *(void *)unint64_t v24 = v25;
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24, enum case for DispatchPredicate.onQueue(_:), v21);
  id v27 = v25;
  char v28 = _dispatchPreconditionTest(_:)();
  (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v24, v21);
  if (v28)
  {
    unint64_t v29 = (unint64_t)sub_1001BF738();
    unint64_t v24 = v29;
    if (!(v29 >> 62))
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v31 = &qword_10047E000;
      if (v30) {
        goto LABEL_5;
      }
LABEL_13:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v127 = *(void *)(v118 + 16);
      uint64_t v128 = v118 + 16;
      ((void (*)(char *, uint64_t, uint64_t))v127)(v20, v126, v17);
      type metadata accessor for RoutingSessionServer.Client(0);
      uint64_t v38 = swift_allocObject();
      uint64_t v39 = v38
          + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_routingMode;
      uint64_t v40 = enum case for RoutingMode.disabled(_:);
      uint64_t v41 = type metadata accessor for RoutingMode();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
      uint64_t v42 = (uint64_t *)(v38
                      + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier);
      swift_unknownObjectRetain();
      uint64_t v43 = v122;
      swift_bridgeObjectRetain();
      uint64_t v117 = (char *)v110;
      uint64_t v44 = sub_1001E78B8();
      uint64_t v46 = v45;
      *uint64_t v42 = v44;
      v42[1] = v45;
      uint64_t v47 = v26;
      type metadata accessor for RoutingSessionServer.Client.Context(0);
      uint64_t v48 = swift_allocObject();
      *(unsigned char *)(v48 + 16) = 0;
      *(void *)(v48 + 24) = &_swiftEmptySetSingleton;
      uint64_t v49 = v48
          + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_mostRecentSourceSessionHidingInteraction;
      uint64_t v50 = type metadata accessor for RoutingInteraction();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1, v50);
      *(unsigned char *)(v48
               + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_requestsStableItemOrdering) = 0;
      *(void *)(v48
                + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_visibleSessionIdentifiersForCurrentPresentation) = &_swiftEmptySetSingleton;
      *(void *)(v48
                + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_itemSettlingTimer) = 0;
      uint64_t v51 = (uint64_t *)(v48
                      + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_clientIdentifier);
      uint64_t *v51 = v44;
      v51[1] = v46;
      *(void *)(v38
                + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context) = v48;
      uint64_t v52 = v118;
      uint64_t v53 = (uint64_t *)(v38
                      + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient);
      uint64_t v54 = v124;
      *uint64_t v53 = v47;
      v53[1] = v54;
      *(void *)(v38 + 16) = v121;
      *(void *)(v38 + 24) = v43;
      (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v38+ OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v20, v17);
      *(void *)(v38
                + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_queue) = v117;
      swift_bridgeObjectRetain();
      swift_retain();
      id v55 = v123;
      uint64_t aBlock = (uint64_t)sub_1001BF738();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v55[3] = aBlock;
      swift_bridgeObjectRelease();
      uint64_t v56 = sub_1001A69C4();
      uint64_t v57 = v114;
      uint64_t v59 = v119;
      uint64_t v58 = v120;
      (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v119, v56, v120);
      swift_unknownObjectRetain_n();
      swift_retain_n();
      id v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.default.getter();
      LODWORD(v122) = v61;
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = swift_slowAlloc();
        uint64_t v121 = (void *)swift_slowAlloc();
        uint64_t v129 = v121;
        *(_DWORD *)uint64_t v62 = 136315650;
        uint64_t v63 = _typeName(_:qualified:)();
        uint64_t aBlock = sub_10018A9E0(v63, v64, (uint64_t *)&v129);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v62 + 12) = 2080;
        uint64_t aBlock = v47;
        uint64_t v131 = v54;
        swift_unknownObjectRetain();
        sub_100013A80(&qword_100478ED0);
        uint64_t v65 = String.init<A>(describing:)();
        uint64_t aBlock = sub_10018A9E0(v65, v66, (uint64_t *)&v129);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v62 + 22) = 2080;
        swift_retain();
        uint64_t v67 = sub_1001BEE28();
        unint64_t v69 = v68;
        swift_release();
        uint64_t aBlock = sub_10018A9E0(v67, v69, (uint64_t *)&v129);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v122, "[%s] registerClient - client: %s - %s", (uint8_t *)v62, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v57 + 8))(v119, v120);
      }
      else
      {

        swift_release_n();
        swift_unknownObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
      }
      uint64_t v81 = v111;
      RoutingSessionConfiguration.context.getter();
      uint64_t v82 = v112;
      uint64_t v83 = v113;
      int v84 = (*(uint64_t (**)(char *, uint64_t))(v112 + 88))(v81, v113);
      if (v84 == enum case for RoutingSessionConfiguration.Context.app(_:))
      {
        (*(void (**)(char *, uint64_t))(v82 + 96))(v81, v83);
        swift_bridgeObjectRelease();
      }
      else if (v84 != enum case for RoutingSessionConfiguration.Context.ui(_:))
      {
        (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v83);
LABEL_26:
        unint64_t v98 = (unint64_t)sub_1001BF738();
        unint64_t v99 = v98;
        uint64_t aBlock = (uint64_t)&_swiftEmptySetSingleton;
        if (v98 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t result = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v100 = result;
          if (result) {
            goto LABEL_28;
          }
        }
        else
        {
          uint64_t v100 = *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t result = swift_bridgeObjectRetain();
          if (v100)
          {
LABEL_28:
            uint64_t v126 = v38;
            if (v100 < 1)
            {
              __break(1u);
              return result;
            }
            uint64_t v101 = 0;
            uint64_t v102 = (void (**)(char *, uint64_t))(v118 + 8);
            do
            {
              if ((v99 & 0xC000000000000001) != 0)
              {
                uint64_t v103 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                uint64_t v103 = *(void *)(v99 + 8 * v101 + 32);
                swift_retain();
              }
              ++v101;
              ((void (*)(char *, uint64_t, uint64_t))v127)(v20, v103+ OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v17);
              uint64_t v104 = RoutingSessionConfiguration.itemTypes.getter();
              (*v102)(v20, v17);
              sub_1001CF388(v104);
              swift_release();
            }
            while (v100 != v101);
            swift_bridgeObjectRelease_n();
            uint64_t v105 = (void *)aBlock;
            uint64_t v38 = v126;
            goto LABEL_42;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v105 = &_swiftEmptySetSingleton;
LABEL_42:
        uint64_t v106 = sub_1001BF970();
        (*(void (**)(void *))(*(void *)v106 + 648))(v105);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1001CF640(v38);
        return swift_release();
      }
      uint64_t v85 = sub_1001BFA20();
      (*(void (**)(uint64_t))(*(void *)v85 + 280))(v85);
      swift_release();
      goto LABEL_26;
    }
  }
  else
  {
LABEL_37:
    __break(1u);
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t v31 = &qword_10047E000;
  if (!v30) {
    goto LABEL_13;
  }
LABEL_5:
  uint64_t v32 = 4;
  while (1)
  {
    uint64_t v33 = v32 - 4;
    if ((v24 & 0xC000000000000001) != 0)
    {
      uint64_t v34 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v35 = __OFADD__(v33, 1);
      uint64_t v36 = v32 - 3;
      if (v35) {
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v34 = swift_retain();
      BOOL v35 = __OFADD__(v33, 1);
      uint64_t v36 = v32 - 3;
      if (v35)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    uint64_t v37 = *(void *)(v34 + v31[466]);
    swift_release();
    if (v37 == v26) {
      break;
    }
    ++v32;
    if (v36 == v30) {
      goto LABEL_13;
    }
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v86 = sub_1001A69C4();
  uint64_t v87 = v114;
  id v88 = v108;
  uint64_t v89 = v120;
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v108, v86, v120);
  swift_unknownObjectRetain_n();
  unint64_t v90 = Logger.logObject.getter();
  os_log_type_t v91 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v92 = swift_slowAlloc();
    uint64_t v129 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v92 = 136315394;
    uint64_t v93 = _typeName(_:qualified:)();
    uint64_t aBlock = sub_10018A9E0(v93, v94, (uint64_t *)&v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v92 + 12) = 2080;
    uint64_t aBlock = v26;
    uint64_t v131 = v124;
    swift_unknownObjectRetain();
    sub_100013A80(&qword_100478ED0);
    uint64_t v95 = String.init<A>(describing:)();
    uint64_t aBlock = sub_10018A9E0(v95, v96, (uint64_t *)&v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "[%s] registerClient - Client already registered: %s", (uint8_t *)v92, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v108, v89);
  }
  else
  {

    swift_unknownObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v88, v89);
  }
}

uint64_t sub_1001C0DC0(unint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v175) = a3;
  uint64_t v173 = a2;
  uint64_t v167 = *v3;
  uint64_t v177 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v161 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v176 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v174 = (void *)type metadata accessor for DispatchWorkItemFlags();
  uint64_t v172 = *(v174 - 1);
  __chkstk_darwin(v174);
  uint64_t v169 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v170 = *(void *)(v7 - 8);
  uint64_t v171 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = type metadata accessor for DispatchTime();
  uint64_t v156 = *(void *)(v160 - 8);
  uint64_t v10 = __chkstk_darwin(v160);
  uint64_t v155 = (char *)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v159 = (char *)&v143 - v12;
  uint64_t v152 = sub_100013A80(&qword_100478ED8);
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v147 = (uint64_t)&v143 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100013A80(&qword_100478EE0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v146 = (uint64_t)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v150 = (uint64_t *)((char *)&v143 - v17);
  uint64_t v157 = sub_100013A80(&qword_100478EE8);
  uint64_t v153 = *(void *)(v157 - 8);
  uint64_t v18 = __chkstk_darwin(v157);
  id v148 = (char *)&v143 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v149 = (uint64_t *)((char *)&v143 - v21);
  uint64_t v154 = v22;
  __chkstk_darwin(v20);
  uint64_t v158 = (uint64_t *)((char *)&v143 - v23);
  uint64_t v24 = sub_100013A80(&qword_10047D120);
  __chkstk_darwin(v24 - 8);
  uint64_t v165 = (uint64_t)&v143 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  uint64_t v163 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v162 = (uint64_t)&v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100013A80(&qword_100478EF0);
  __chkstk_darwin(v27 - 8);
  unint64_t v29 = (char *)&v143 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = (void (*)(char *, long long *))type metadata accessor for Logger();
  uint64_t v31 = *((void *)v30 - 1);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v168 = (char *)&v143 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  int v166 = (char *)&v143 - v34;
  uint64_t v35 = type metadata accessor for DispatchPredicate();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (os_log_t *)((char *)&v143 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = sub_100266CC0();
  uint64_t v40 = (void *)*v39;
  if ((v175 & 1) == 0)
  {
    uint64_t v59 = (void *)swift_allocObject();
    v59[2] = v3;
    v59[3] = a1;
    v59[4] = v173;
    uint64_t v182 = sub_1001DCD14;
    id v183 = v59;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    unint64_t v180 = sub_100006760;
    uint64_t v181 = &unk_1004214E0;
    id v60 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    id v61 = v40;
    swift_retain();
    uint64_t v62 = v9;
    static DispatchQoS.unspecified.getter();
    unint64_t v178 = _swiftEmptyArrayStorage;
    sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v63 = v169;
    unint64_t v64 = v174;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v60);

    (*(void (**)(char *, void *))(v172 + 8))(v63, v64);
    (*(void (**)(char *, uint64_t))(v170 + 8))(v62, v171);
    return swift_release();
  }
  uint64_t v144 = (id *)v39;
  uint64_t v145 = v9;
  os_log_type_t v175 = v3;
  void *v38 = v40;
  (*(void (**)(void *, void, uint64_t))(v36 + 104))(v38, enum case for DispatchPredicate.onQueue(_:), v35);
  id v41 = v40;
  p_long long aBlock = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v36 + 8))(v38, v35);
  if ((p_aBlock & 1) == 0) {
    goto LABEL_62;
  }
  unint64_t v43 = (unint64_t)sub_1001BF738();
  p_long long aBlock = v43;
  if (v43 >> 62)
  {
LABEL_63:
    swift_unknownObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    if (v44) {
      goto LABEL_5;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v49 = sub_1001A69C4();
    uint64_t v50 = v168;
    (*(void (**)(char *, uint64_t, void (*)(char *, long long *)))(v31 + 16))(v168, v49, v30);
    swift_unknownObjectRetain_n();
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      unint64_t v178 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315394;
      uint64_t v54 = _typeName(_:qualified:)();
      *(void *)&long long aBlock = sub_10018A9E0(v54, v55, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2080;
      *(void *)&long long aBlock = a1;
      *((void *)&aBlock + 1) = v173;
      swift_unknownObjectRetain();
      sub_100013A80(&qword_100478ED0);
      uint64_t v56 = String.init<A>(describing:)();
      *(void *)&long long aBlock = sub_10018A9E0(v56, v57, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "[%s] unregisterClient - No internal client found matching client: %s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, void *))(v31 + 8))(v168, v30);
    }
    else
    {

      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(char *, void *))(v31 + 8))(v50, v30);
    }
  }
  uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  if (!v44) {
    goto LABEL_12;
  }
LABEL_5:
  unint64_t v45 = 0;
  while (1)
  {
    uint64_t v46 = (p_aBlock & 0xC000000000000001) != 0 ? specialized _ArrayBuffer._getElementSlowPath(_:)() : swift_retain();
    uint64_t v47 = *(void *)(v46
                    + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient);
    swift_release();
    if (v47 == a1) {
      break;
    }
    unint64_t v48 = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    ++v45;
    if (v48 == v44) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v65 = v175;
  *(void *)&long long aBlock = sub_1001BF738();
  uint64_t v66 = sub_1001C2578(v45);
  v65[3] = aBlock;
  swift_bridgeObjectRelease();
  uint64_t v67 = sub_1001A69C4();
  unint64_t v68 = v166;
  (*(void (**)(char *, uint64_t, void (*)(char *, long long *)))(v31 + 16))(v166, v67, v30);
  swift_retain_n();
  unint64_t v69 = Logger.logObject.getter();
  os_log_type_t v70 = static os_log_type_t.default.getter();
  BOOL v71 = os_log_type_enabled(v69, v70);
  uint64_t v173 = v66;
  if (v71)
  {
    uint64_t v72 = swift_slowAlloc();
    uint64_t v168 = (char *)swift_slowAlloc();
    unint64_t v178 = v168;
    *(_DWORD *)uint64_t v72 = 136315650;
    os_log_t v143 = v69;
    uint64_t v73 = _typeName(_:qualified:)();
    *(void *)&long long aBlock = sub_10018A9E0(v73, v74, (uint64_t *)&v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v72 + 12) = 2080;
    long long aBlock = *(_OWORD *)(v66
                       + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient);
    swift_unknownObjectRetain();
    sub_100013A80(&qword_100478ED0);
    uint64_t v75 = String.init<A>(describing:)();
    *(void *)&long long aBlock = sub_10018A9E0(v75, v76, (uint64_t *)&v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v72 + 22) = 2080;
    swift_retain();
    uint64_t v77 = sub_1001BEE28();
    uint64_t v78 = v31;
    unint64_t v80 = v79;
    swift_release();
    *(void *)&long long aBlock = sub_10018A9E0(v77, v80, (uint64_t *)&v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    uint64_t v66 = v173;
    swift_bridgeObjectRelease();
    os_log_t v81 = v143;
    _os_log_impl((void *)&_mh_execute_header, v143, v70, "[%s] unregisterClient - client: %s - %s", (uint8_t *)v72, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, void *))(v78 + 8))(v166, v30);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, void *))(v31 + 8))(v68, v30);
  }
  uint64_t v83 = v174;
  uint64_t v82 = v175;
  *(void *)&long long aBlock = sub_1001BF7C8();
  p_long long aBlock = (uint64_t)&aBlock;
  uint64_t v31 = sub_1001DDAFC(v66);
  v82[5] = aBlock;
  swift_bridgeObjectRelease();
  if (!v31)
  {
LABEL_43:
    *(void *)&long long aBlock = sub_1001BF780();
    uint64_t v99 = v165;
    uint64_t v100 = v173;
    sub_1001DD7BC(v173, v165);
    v82[4] = aBlock;
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v163 + 48))(v99, 1, v164) == 1)
    {
      sub_100009A08(v99, &qword_10047D120);
    }
    else
    {
      uint64_t v101 = v162;
      sub_1001E6FE8(v99, v162, type metadata accessor for HostedRoutingSessionSnapshot);
      if (MSVDeviceOSIsInternalInstall())
      {
        uint64_t v103 = *(void *)(v100 + 16);
        uint64_t v102 = *(void *)(v100 + 24);
        uint64_t v104 = v157;
        uint64_t v105 = *(int *)(v157 + 48);
        uint64_t v106 = v158;
        uint64_t v107 = (uint64_t)v158 + v105;
        *uint64_t v158 = v100;
        sub_1001E6EAC(v101, (uint64_t)v106 + v105, type metadata accessor for HostedRoutingSessionSnapshot);
        uint64_t v108 = *(int *)(v104 + 48);
        uint64_t v109 = v149;
        uint64_t v110 = (uint64_t)v149 + v108;
        uint64_t *v149 = v100;
        sub_1001E6EAC(v107, (uint64_t)v109 + v108, type metadata accessor for HostedRoutingSessionSnapshot);
        uint64_t v111 = v152;
        uint64_t v112 = v150;
        uint64_t v113 = (uint64_t)v150 + *(int *)(v152 + 48);
        *uint64_t v150 = v100;
        sub_1001E6FE8(v110, v113, type metadata accessor for HostedRoutingSessionSnapshot);
        uint64_t v114 = v151;
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v151 + 56))(v112, 0, 1, v111);
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v115 = (uint64_t)v112;
        uint64_t v116 = sub_1001BFABC();
        *(void *)&long long aBlock = v116;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v115, 1, v111) == 1)
        {
          sub_100009A08(v115, &qword_100478EE0);
          uint64_t v117 = v146;
          sub_1001DD954(v103, v102, v146);
          swift_bridgeObjectRelease();
          sub_100009A08(v117, &qword_100478EE0);
          uint64_t v118 = (void *)aBlock;
        }
        else
        {
          uint64_t v119 = v147;
          sub_1001E62CC(v115, v147, &qword_100478ED8);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v178 = v116;
          sub_1001DF6E4(v119, v103, v102, isUniquelyReferenced_nonNull_native);
          uint64_t v118 = v178;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v121 = v148;
        v82[10] = v118;
        swift_bridgeObjectRelease();
        uint64_t v168 = (char *)*v144;
        uint64_t v122 = v155;
        static DispatchTime.now()();
        + infix(_:_:)();
        unsigned __int8 v174 = *(void **)(v156 + 8);
        ((void (*)(char *, uint64_t))v174)(v122, v160);
        uint64_t v123 = swift_allocObject();
        swift_weakInit();
        uint64_t v124 = (uint64_t)v121 + *(int *)(v157 + 48);
        *uint64_t v121 = v173;
        sub_1001E6EAC(v107, v124, type metadata accessor for HostedRoutingSessionSnapshot);
        unint64_t v125 = (*(unsigned __int8 *)(v153 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
        uint64_t v126 = (void *)swift_allocObject();
        v126[2] = v123;
        v126[3] = v103;
        v126[4] = v102;
        sub_1001E62CC((uint64_t)v121, (uint64_t)v126 + v125, &qword_100478EE8);
        uint64_t v182 = sub_1001DDF58;
        id v183 = v126;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        unint64_t v180 = sub_100006760;
        uint64_t v181 = &unk_100421558;
        uint64_t v127 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        uint64_t v128 = v145;
        static DispatchQoS.unspecified.getter();
        unint64_t v178 = _swiftEmptyArrayStorage;
        sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100013A80((uint64_t *)&unk_100479AE0);
        sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
        uint64_t v129 = v169;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        char v130 = v159;
        uint64_t v131 = v168;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v127);

        (*(void (**)(char *, void *))(v172 + 8))(v129, v83);
        (*(void (**)(char *, uint64_t))(v170 + 8))(v128, v171);
        ((void (*)(char *, uint64_t))v174)(v130, v160);
        sub_100009A08((uint64_t)v158, &qword_100478EE8);
        sub_1001E6F14(v162, type metadata accessor for HostedRoutingSessionSnapshot);
        swift_release();
        swift_release();
      }
      else
      {
        sub_1001E6F14(v101, type metadata accessor for HostedRoutingSessionSnapshot);
      }
    }
    unint64_t v132 = (unint64_t)sub_1001BF738();
    uint64_t v66 = v132;
    *(void *)&long long aBlock = &_swiftEmptySetSingleton;
    if (v132 >> 62) {
      goto LABEL_66;
    }
    uint64_t v133 = *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v133) {
      goto LABEL_53;
    }
LABEL_67:
    swift_bridgeObjectRelease_n();
    uint64_t v141 = &_swiftEmptySetSingleton;
LABEL_68:
    uint64_t v142 = sub_1001BF970();
    (*(void (**)(void *))(*(void *)v142 + 648))(v141);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1001CDF38();
    return swift_release();
  }
  int64_t v84 = 0;
  uint64_t v85 = v31 + 64;
  uint64_t v86 = 1 << *(unsigned char *)(v31 + 32);
  uint64_t v87 = -1;
  if (v86 < 64) {
    uint64_t v87 = ~(-1 << v86);
  }
  a1 = v87 & *(void *)(v31 + 64);
  int64_t v88 = (unint64_t)(v86 + 63) >> 6;
  while (1)
  {
    if (a1)
    {
      unint64_t v89 = __clz(__rbit64(a1));
      a1 &= a1 - 1;
      unint64_t v90 = v89 | (v84 << 6);
      goto LABEL_24;
    }
    int64_t v96 = v84 + 1;
    if (__OFADD__(v84, 1)) {
      goto LABEL_61;
    }
    if (v96 >= v88)
    {
LABEL_42:
      swift_release();
      uint64_t v83 = v174;
      uint64_t v82 = v175;
      goto LABEL_43;
    }
    unint64_t v97 = *(void *)(v85 + 8 * v96);
    ++v84;
    if (!v97)
    {
      int64_t v84 = v96 + 1;
      if (v96 + 1 >= v88) {
        goto LABEL_42;
      }
      unint64_t v97 = *(void *)(v85 + 8 * v84);
      if (!v97)
      {
        int64_t v84 = v96 + 2;
        if (v96 + 2 >= v88) {
          goto LABEL_42;
        }
        unint64_t v97 = *(void *)(v85 + 8 * v84);
        if (!v97)
        {
          int64_t v84 = v96 + 3;
          if (v96 + 3 >= v88) {
            goto LABEL_42;
          }
          unint64_t v97 = *(void *)(v85 + 8 * v84);
          if (!v97) {
            break;
          }
        }
      }
    }
LABEL_41:
    a1 = (v97 - 1) & v97;
    unint64_t v90 = __clz(__rbit64(v97)) + (v84 << 6);
LABEL_24:
    uint64_t v91 = *(void *)(v31 + 56) + 16 * v90;
    uint64_t v30 = *(void (**)(char *, long long *))v91;
    p_long long aBlock = *(void *)(v91 + 8);
    uint64_t v92 = type metadata accessor for RoutingDialog.Action();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v29, 1, 1, v92);
    type metadata accessor for HostedRoutingError(0);
    sub_100015AE0(&qword_100478EF8, (void (*)(uint64_t))type metadata accessor for HostedRoutingError);
    uint64_t v93 = swift_allocError();
    uint64_t v66 = v94;
    uint64_t v95 = sub_100013A80(&qword_100478F00);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v66, 1, 1, v95);
    *(void *)&long long aBlock = v93;
    swift_retain();
    v30(v29, &aBlock);
    swift_errorRelease();
    swift_release();
    sub_100009A08((uint64_t)v29, &qword_100478EF0);
  }
  int64_t v98 = v96 + 4;
  if (v98 >= v88) {
    goto LABEL_42;
  }
  unint64_t v97 = *(void *)(v85 + 8 * v98);
  if (v97)
  {
    int64_t v84 = v98;
    goto LABEL_41;
  }
  while (1)
  {
    int64_t v84 = v98 + 1;
    if (__OFADD__(v98, 1)) {
      break;
    }
    if (v84 >= v88) {
      goto LABEL_42;
    }
    unint64_t v97 = *(void *)(v85 + 8 * v84);
    ++v98;
    if (v97) {
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_66:
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v133 = result;
  if (!result) {
    goto LABEL_67;
  }
LABEL_53:
  if (v133 >= 1)
  {
    uint64_t v134 = 0;
    uint64_t v135 = (void (**)(char *, uint64_t, uint64_t))(v161 + 16);
    uint64_t v136 = (void (**)(char *, uint64_t))(v161 + 8);
    uint64_t v137 = v177;
    do
    {
      if ((v66 & 0xC000000000000001) != 0)
      {
        uint64_t v138 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v138 = *(void *)(v66 + 8 * v134 + 32);
        swift_retain();
      }
      ++v134;
      uint64_t v139 = v176;
      (*v135)(v176, v138+ OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v137);
      uint64_t v140 = RoutingSessionConfiguration.itemTypes.getter();
      (*v136)(v139, v137);
      sub_1001CF388(v140);
      swift_release();
    }
    while (v133 != v134);
    swift_bridgeObjectRelease_n();
    uint64_t v141 = (void *)aBlock;
    goto LABEL_68;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001C2578(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    unint64_t v3 = sub_1001E1378(v3);
    unint64_t *v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      specialized Array._endMutation()();
      return v10;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001C265C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v62 = a4;
  uint64_t v64 = a2;
  uint64_t v61 = sub_100013A80(&qword_100478EE8);
  __chkstk_darwin(v61);
  unint64_t v6 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100013A80(&qword_100478EE0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v54 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v54 - v14);
  uint64_t v16 = sub_100013A80(&qword_100478ED8);
  uint64_t v17 = *(void **)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v63 = (uint64_t *)((char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v54 - v20);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v23 = result;
    uint64_t v59 = v17;
    id v60 = v13;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1001BFABC();
    uint64_t v25 = v24[2];
    unint64_t v57 = v10;
    if (v25 && (unint64_t v26 = sub_100013660(v64, a3), (v27 & 1) != 0))
    {
      sub_1001E71E8(v24[7] + v17[9] * v26, (uint64_t)v15, &qword_100478ED8);
      uint64_t v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v17[7];
      unint64_t v29 = v15;
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v17[7];
      unint64_t v29 = v15;
      uint64_t v30 = 1;
    }
    uint64_t v58 = v28;
    v28((char *)v29, v30, 1, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v17[6];
    if (v31((uint64_t)v15, 1, v16) == 1)
    {
      swift_release();
      uint64_t v32 = &qword_100478EE0;
    }
    else
    {
      uint64_t v55 = a3;
      uint64_t v56 = v21;
      uint64_t v33 = *(int *)(v16 + 48);
      uint64_t v34 = (uint64_t)v21 + v33;
      uint64_t v35 = (uint64_t)v15 + v33;
      uint64_t v36 = *v15;
      uint64_t *v21 = v36;
      sub_1001E6FE8(v35, (uint64_t)v21 + v33, type metadata accessor for HostedRoutingSessionSnapshot);
      uint64_t v37 = *(int *)(v16 + 48);
      uint64_t v38 = v63;
      uint64_t v39 = (uint64_t)v63 + v37;
      *uint64_t v63 = v36;
      sub_1001E6EAC(v34, (uint64_t)v38 + v37, type metadata accessor for HostedRoutingSessionSnapshot);
      uint64_t v40 = *(int *)(v61 + 48);
      uint64_t v41 = (uint64_t)v6 + v40;
      uint64_t v42 = (uint64_t)v62 + v40;
      uint64_t v43 = *v62;
      uint64_t *v6 = *v62;
      sub_1001E6EAC(v42, (uint64_t)v6 + v40, type metadata accessor for HostedRoutingSessionSnapshot);
      swift_retain();
      swift_retain();
      char v44 = sub_1001C2B60(v36, v39, v43, v41);
      swift_release();
      swift_release();
      sub_1001E6F14(v41, type metadata accessor for HostedRoutingSessionSnapshot);
      sub_1001E6F14(v39, type metadata accessor for HostedRoutingSessionSnapshot);
      if ((v44 & 1) == 0)
      {
        sub_100009A08((uint64_t)v56, &qword_100478ED8);
        return swift_release();
      }
      uint64_t v45 = (uint64_t)v60;
      v58(v60, 1, 1, v16);
      uint64_t v46 = v55;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1001BFABC();
      uint64_t v66 = v47;
      int v48 = v31(v45, 1, v16);
      uint64_t v49 = v64;
      uint64_t v15 = v56;
      if (v48 == 1)
      {
        sub_100009A08(v45, &qword_100478EE0);
        uint64_t v50 = (uint64_t)v57;
        sub_1001DD954(v49, v46, (uint64_t)v57);
        swift_bridgeObjectRelease();
        sub_100009A08(v50, &qword_100478EE0);
        uint64_t v51 = v66;
      }
      else
      {
        os_log_type_t v52 = v63;
        sub_1001E62CC(v45, (uint64_t)v63, &qword_100478ED8);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v65 = v47;
        sub_1001DF6E4((uint64_t)v52, v49, v46, isUniquelyReferenced_nonNull_native);
        uint64_t v51 = v65;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      *(void *)(v23 + 80) = v51;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v32 = &qword_100478ED8;
    }
    return sub_100009A08((uint64_t)v15, v32);
  }
  return result;
}

uint64_t sub_1001C2B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100013A80(&qword_100478EE8);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  *(uint64_t *)((char *)&v18 - v13) = a1;
  sub_1001E6EAC(a2, (uint64_t)&v18 + *(int *)(v9 + 56) - v13, type metadata accessor for HostedRoutingSessionSnapshot);
  *uint64_t v12 = a3;
  sub_1001E6EAC(a4, (uint64_t)v12 + *(int *)(v9 + 56), type metadata accessor for HostedRoutingSessionSnapshot);
  BOOL v15 = *(void *)(a1
                  + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier) == *(void *)(a3 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier)
     && *(void *)(a1
                  + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier
                  + 8) == *(void *)(a3
                                    + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier
                                    + 8);
  if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    type metadata accessor for HostedRoutingSessionSnapshot(0);
    sub_100015AE0(&qword_100479508, (void (*)(uint64_t))type metadata accessor for HostedRoutingSessionSnapshot);
    swift_retain();
    swift_retain();
    char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
  }
  else
  {
    swift_retain();
    swift_retain();
    char v16 = 0;
  }
  sub_100009A08((uint64_t)v12, &qword_100478EE8);
  sub_100009A08((uint64_t)v14, &qword_100478EE8);
  return v16 & 1;
}

uint64_t sub_1001C2D44(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, int a5)
{
  unint64_t v6 = v5;
  LODWORD(v284) = a5;
  unint64_t v281 = a4;
  unint64_t v285 = a2;
  uint64_t v283 = a1;
  uint64_t v272 = *v5;
  uint64_t v8 = sub_100013A80(&qword_100478F08);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  v232 = (char *)&v230 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  v231 = (char *)&v230 - v12;
  __chkstk_darwin(v11);
  uint64_t v237 = (uint64_t)&v230 - v13;
  uint64_t v230 = type metadata accessor for HostedRoutingItem(0);
  __chkstk_darwin(v230);
  uint64_t v248 = (uint64_t)&v230 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v257 = (os_log_t)type metadata accessor for HostedRoutingError(0);
  __chkstk_darwin(v257);
  v261 = (char *)&v230 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v260 = type metadata accessor for InternalRoutingError();
  uint64_t v250 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  v259 = (char *)&v230 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t ObjectType = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v230 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  unint64_t v276 = *(void *)(v20 - 8);
  v277 = (void (*)(char *, char *, uint64_t))v20;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v230 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100013A80(&qword_100478F10);
  __chkstk_darwin(v23 - 8);
  v241 = (char *)&v230 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v246 = *(void *)(v247 - 8);
  __chkstk_darwin(v247);
  uint64_t v245 = (char *)&v230 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = type metadata accessor for RoutingDialog();
  uint64_t v242 = *(void *)(v243 - 8);
  __chkstk_darwin(v243);
  uint64_t v240 = (uint64_t)&v230 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v282 = type metadata accessor for Logger();
  uint64_t v280 = *(void *)(v282 - 8);
  uint64_t v27 = __chkstk_darwin(v282);
  v258 = (char *)&v230 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v233 = (char *)&v230 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v234 = (char *)&v230 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v244 = (char *)&v230 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v279 = (char *)&v230 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v267 = (char *)&v230 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v238 = (char *)&v230 - v40;
  __chkstk_darwin(v39);
  v264 = (char *)&v230 - v41;
  uint64_t v256 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  uint64_t v253 = *(void *)(v256 - 8);
  uint64_t v42 = __chkstk_darwin(v256);
  uint64_t v239 = (char *)&v230 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = v43;
  __chkstk_darwin(v42);
  v266 = (uint64_t *)((char *)&v230 - v44);
  uint64_t v265 = type metadata accessor for RoutingInteraction();
  uint64_t v262 = *(void *)(v265 - 8);
  uint64_t v45 = __chkstk_darwin(v265);
  v255 = (char *)&v230 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v45);
  unint64_t v251 = (char *)&v230 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v263 = (char *)&v230 - v50;
  uint64_t v252 = v51;
  __chkstk_darwin(v49);
  uint64_t v268 = (uint64_t)&v230 - v52;
  uint64_t v53 = sub_100013A80(&qword_10047D120);
  __chkstk_darwin(v53 - 8);
  uint64_t v55 = (char *)&v230 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v269 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  uint64_t v271 = *(void *)(v269 - 8);
  uint64_t v56 = __chkstk_darwin(v269);
  v254 = (char *)&v230 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v270 = (uint64_t)&v230 - v58;
  uint64_t v273 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v274 = *(void *)(v273 - 8);
  uint64_t v59 = __chkstk_darwin(v273);
  uint64_t v249 = (char *)&v230 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = v60;
  __chkstk_darwin(v59);
  v275 = (char *)&v230 - v61;
  uint64_t v62 = type metadata accessor for DispatchPredicate();
  uint64_t v63 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v65 = (uint64_t *)((char *)&v230 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = (void *)*sub_100266CC0();
  if ((v284 & 1) == 0)
  {
    unint64_t v90 = (void *)swift_allocObject();
    uint64_t v91 = v283;
    v90[2] = v6;
    v90[3] = v91;
    v90[4] = v285;
    v90[5] = a3;
    v90[6] = v281;
    v291 = sub_1001DF84C;
    v292 = v90;
    long long aBlock = (char *)_NSConcreteStackBlock;
    uint64_t v288 = 1107296256;
    v289 = sub_100006760;
    v290 = &unk_1004215A8;
    uint64_t v92 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v93 = v66;
    static DispatchQoS.unspecified.getter();
    v286 = _swiftEmptyArrayStorage;
    sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v92);

    (*(void (**)(char *, uint64_t))(ObjectType + 8))(v19, v17);
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v276 + 8))(v22, v277);
    return swift_release();
  }
  uint64_t v284 = (uint64_t)v6;
  void *v65 = v66;
  (*(void (**)(void *, void, uint64_t))(v63 + 104))(v65, enum case for DispatchPredicate.onQueue(_:), v62);
  id v67 = v66;
  char v68 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v63 + 8))(v65, v62);
  if ((v68 & 1) == 0)
  {
    __break(1u);
LABEL_49:
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v71 = v280;
    if (v70) {
      goto LABEL_5;
    }
LABEL_13:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v78 = sub_1001A69C4();
    unint64_t v79 = v279;
    unint64_t v80 = v282;
    (*(void (**)(char *, uint64_t, unint64_t))(v71 + 16))(v279, v78, v282);
    swift_unknownObjectRetain_n();
    unint64_t v81 = v285;
    swift_bridgeObjectRetain_n();
    uint64_t v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = swift_slowAlloc();
      uint64_t v284 = swift_slowAlloc();
      v286 = (void *)v284;
      *(_DWORD *)uint64_t v84 = 136315650;
      uint64_t v85 = _typeName(_:qualified:)();
      long long aBlock = (char *)sub_10018A9E0(v85, v86, (uint64_t *)&v286);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v84 + 12) = 2080;
      swift_bridgeObjectRetain();
      long long aBlock = (char *)sub_10018A9E0(v283, v81, (uint64_t *)&v286);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v84 + 22) = 2080;
      long long aBlock = (char *)a3;
      uint64_t v288 = v281;
      swift_unknownObjectRetain();
      sub_100013A80(&qword_100478ED0);
      uint64_t v87 = String.init<A>(describing:)();
      long long aBlock = (char *)sub_10018A9E0(v87, v88, (uint64_t *)&v286);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "[%s] interactWithItem - item: %s, no internal client found matching client: %s", (uint8_t *)v84, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, unint64_t))(v71 + 8))(v279, v282);
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, unint64_t))(v71 + 8))(v79, v80);
    }
  }
  unint64_t v69 = (unint64_t)sub_1001BF738();
  uint64_t v62 = v69;
  if (v69 >> 62) {
    goto LABEL_49;
  }
  uint64_t v70 = *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v71 = v280;
  if (!v70) {
    goto LABEL_13;
  }
LABEL_5:
  unint64_t v72 = v62 & 0xC000000000000001;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v73 = 4;
  while (1)
  {
    uint64_t v74 = v73 - 4;
    if (v72)
    {
      uint64_t v75 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v76 = __OFADD__(v74, 1);
      uint64_t v77 = v73 - 3;
      if (v76) {
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v75 = *(void *)(v62 + 8 * v73);
      swift_retain();
      BOOL v76 = __OFADD__(v74, 1);
      uint64_t v77 = v73 - 3;
      if (v76)
      {
LABEL_46:
        __break(1u);

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(unint64_t, uint64_t))(v73 + 8))(v72, v77);
        uint64_t v216 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v242 + 56);
        v216(v237, 1, 1, v243);
        sub_100013A80(&qword_100478F18);
        uint64_t v217 = *(void *)(type metadata accessor for RoutingDialog.Action() - 8);
        unint64_t v218 = (*(unsigned __int8 *)(v217 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v217 + 80);
        uint64_t v219 = swift_allocObject();
        *(_OWORD *)(v219 + 16) = xmmword_1003C58B0;
        uint64_t v220 = (void *)(v219 + v218);
        *uint64_t v220 = 19279;
        v220[1] = 0xE200000000000000;
        (*(void (**)(void))(v217 + 104))();
        swift_bridgeObjectRetain();
        uint64_t v221 = (uint64_t)v231;
        RoutingDialog.init(identifier:titleText:detailText:actions:)();
        uint64_t v222 = v272;
        uint64_t v223 = (uint64_t)v232;
        uint64_t v224 = v237;
        sub_100009A08(v237, &qword_100478F08);
        uint64_t v225 = v243;
        v216(v221, 0, 1, v243);
        sub_1001E62CC(v221, v224, &qword_100478F08);
        sub_1001E71E8(v224, v223, &qword_100478F08);
        uint64_t v226 = v242;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v242 + 48))(v223, 1, v225);
        if (result == 1)
        {
          __break(1u);
        }
        else
        {
          uint64_t v227 = swift_allocObject();
          swift_weakInit();
          uint64_t v228 = (void *)swift_allocObject();
          unint64_t v229 = v285;
          v228[2] = v227;
          v228[3] = v229;
          v228[4] = v70;
          v228[5] = v222;
          swift_retain();
          sub_1001D1854(v223, v75, (uint64_t)sub_1001DF8C0, (uint64_t)v228);
          swift_release();
          swift_release();
          sub_100009A08(v224, &qword_100478F08);
          sub_1001E6F14(v248, type metadata accessor for HostedRoutingItem);
          sub_1001E6F14(v270, type metadata accessor for HostedRoutingSessionSnapshot);
          ((void (*)(char *, uint64_t))v279)(v275, v273);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v226 + 8))(v223, v225);
          return swift_errorRelease();
        }
        return result;
      }
    }
    if (*(void *)(v75
                   + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient) == a3)
      break;
    swift_release();
    ++v73;
    if (v77 == v70) {
      goto LABEL_13;
    }
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v94 = (char *)(v75
               + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration);
  uint64_t v95 = (uint64_t)v275;
  int64_t v96 = *(void (**)(char *, uint64_t, uint64_t))(v274 + 16);
  v96(v275, v75 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v273);
  swift_retain();
  unint64_t v97 = sub_1001BF780();
  uint64_t v98 = v97[2];
  v279 = v94;
  if (v98)
  {
    unint64_t v99 = sub_1001DE0AC(v75);
    unint64_t v100 = v285;
    uint64_t v101 = v269;
    if (v102)
    {
      sub_1001E6EAC(v97[7] + *(void *)(v271 + 72) * v99, (uint64_t)v55, type metadata accessor for HostedRoutingSessionSnapshot);
      uint64_t v103 = 0;
    }
    else
    {
      uint64_t v103 = 1;
    }
  }
  else
  {
    uint64_t v103 = 1;
    unint64_t v100 = v285;
    uint64_t v101 = v269;
  }
  uint64_t v104 = v271;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v271 + 56))(v55, v103, 1, v101);
  swift_release();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v55, 1, v101) == 1)
  {
    sub_100009A08((uint64_t)v55, &qword_10047D120);
    uint64_t v105 = sub_1001A69C4();
    uint64_t v106 = v280;
    uint64_t v107 = v267;
    unint64_t v108 = v282;
    (*(void (**)(char *, uint64_t, unint64_t))(v280 + 16))(v267, v105, v282);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v109 = Logger.logObject.getter();
    os_log_type_t v110 = static os_log_type_t.error.getter();
    int v111 = v110;
    if (!os_log_type_enabled(v109, v110))
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, unint64_t))(v106 + 8))(v107, v108);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v274 + 8))(v95, v273);
    }
    uint64_t v112 = swift_slowAlloc();
    long long aBlock = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v112 = 136315650;
    LODWORD(v285) = v111;
    uint64_t v113 = _typeName(_:qualified:)();
    v286 = (void *)sub_10018A9E0(v113, v114, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v112 + 12) = 2080;
    swift_bridgeObjectRetain();
    v286 = (void *)sub_10018A9E0(v283, v100, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v112 + 22) = 2080;
    swift_retain();
    uint64_t v115 = sub_1001BEE28();
    unint64_t v117 = v116;
    swift_release();
    v286 = (void *)sub_10018A9E0(v115, v117, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v285, "[%s] interactWithItem - item: %s, No snapshot for client: %s", (uint8_t *)v112, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    (*(void (**)(char *, unint64_t))(v106 + 8))(v267, v282);
    return (*(uint64_t (**)(char *, uint64_t))(v274 + 8))(v275, v273);
  }
  v277 = (void (*)(char *, char *, uint64_t))v96;
  uint64_t v118 = v270;
  sub_1001E6FE8((uint64_t)v55, v270, type metadata accessor for HostedRoutingSessionSnapshot);
  uint64_t v119 = type metadata accessor for RoutingDecisionEngine();
  uint64_t v120 = v268;
  unint64_t v121 = v100;
  sub_1001E7C58(v283, v100, v118, v95, v268);
  uint64_t v269 = v119;
  sub_1002AD0B4(v118, v266);
  uint64_t v122 = RoutingInteraction.identifier.getter();
  unint64_t v124 = v123;
  uint64_t v125 = sub_1001A69C4();
  uint64_t v126 = *(char **)(v280 + 16);
  uint64_t v260 = v125;
  v261 = (char *)(v280 + 16);
  v259 = v126;
  ((void (*)(char *))v126)(v264);
  uint64_t v127 = v262;
  uint64_t v128 = *(void (**)(char *, uint64_t, uint64_t))(v262 + 16);
  uint64_t v129 = v120;
  unint64_t v130 = v124;
  uint64_t v131 = v265;
  unint64_t v281 = v262 + 16;
  uint64_t ObjectType = (uint64_t)v128;
  v128(v263, v129, v265);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v132 = Logger.logObject.getter();
  os_log_type_t v133 = static os_log_type_t.default.getter();
  LODWORD(v267) = v133;
  BOOL v134 = os_log_type_enabled(v132, v133);
  unint64_t v276 = v130;
  uint64_t v271 = v122;
  if (v134)
  {
    uint64_t v135 = swift_slowAlloc();
    v258 = (char *)swift_slowAlloc();
    long long aBlock = v258;
    *(_DWORD *)uint64_t v135 = 136315906;
    os_log_t v257 = v132;
    uint64_t v136 = _typeName(_:qualified:)();
    v286 = (void *)sub_10018A9E0(v136, v137, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v135 + 12) = 2080;
    swift_bridgeObjectRetain();
    v286 = (void *)sub_10018A9E0(v122, v130, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v135 + 22) = 2080;
    swift_bridgeObjectRetain();
    v286 = (void *)sub_10018A9E0(v283, v121, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v135 + 32) = 2080;
    sub_100015AE0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    uint64_t v138 = v263;
    uint64_t v139 = dispatch thunk of CustomStringConvertible.description.getter();
    v286 = (void *)sub_10018A9E0(v139, v140, (uint64_t *)&aBlock);
    uint64_t v131 = v265;
    uint64_t v141 = v270;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v142 = v262;
    v279 = *(char **)(v262 + 8);
    ((void (*)(char *, uint64_t))v279)(v138, v131);
    os_log_t v143 = v257;
    _os_log_impl((void *)&_mh_execute_header, v257, (os_log_type_t)v267, "[%s] interactWithItem<%s> - item: %s produced interaction: %s", (uint8_t *)v135, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v141 = v118;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v279 = *(char **)(v127 + 8);
    ((void (*)(char *, uint64_t))v279)(v263, v131);

    uint64_t v142 = v127;
  }
  uint64_t v144 = *(void (**)(char *, unint64_t))(v280 + 8);
  v144(v264, v282);
  uint64_t v145 = (uint64_t)v251;
  char v146 = RoutingSessionConfiguration.supportsDialogs.getter();
  uint64_t v147 = v268;
  id v148 = (void (*)(char *, uint64_t, uint64_t))ObjectType;
  ((void (*)(uint64_t, uint64_t, uint64_t))ObjectType)(v145, v268, v131);
  uint64_t v149 = v141;
  uint64_t v150 = v254;
  sub_1001E6EAC(v149, (uint64_t)v254, type metadata accessor for HostedRoutingSessionSnapshot);
  if ((v146 & 1) == 0)
  {
    sub_1001E6F14((uint64_t)v150, type metadata accessor for HostedRoutingSessionSnapshot);
    ((void (*)(uint64_t, uint64_t))v279)(v145, v131);
LABEL_36:
    uint64_t v172 = v245;
    RoutingInteraction.action.getter();
    uint64_t v173 = v246;
    uint64_t v174 = v247;
    int v175 = (*(uint64_t (**)(char *, uint64_t))(v246 + 88))(v172, v247);
    if (v175 == enum case for RoutingInteraction.Action.setActiveItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v173 + 96))(v172, v174);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v175 != enum case for RoutingInteraction.Action.handoff(_:))
      {
        (*(void (**)(char *, uint64_t))(v173 + 8))(v172, v174);
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v173 + 96))(v172, v174);
      swift_release();
    }
    uint64_t v176 = *(void *)(v75
                     + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context);
    uint64_t v177 = (uint64_t)v241;
    id v148 = (void (*)(char *, uint64_t, uint64_t))ObjectType;
    ((void (*)(char *, uint64_t, uint64_t))ObjectType)(v241, v147, v131);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v142 + 56))(v177, 0, 1, v131);
    uint64_t v178 = v176
         + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_mostRecentSourceSessionHidingInteraction;
    swift_beginAccess();
    swift_retain();
    sub_1001DF8D8(v177, v178);
    swift_endAccess();
    sub_1001BE3A4();
    sub_100009A08(v177, &qword_100478F10);
    swift_release();
LABEL_42:
    uint64_t v179 = v142;
    uint64_t v180 = sub_1001BF970();
    uint64_t v181 = (*(uint64_t (**)(uint64_t, char *, uint64_t *))(*(void *)v180 + 672))(v147, v275, v266);
    swift_release();
    long long aBlock = (char *)v181;
    uint64_t v182 = swift_allocObject();
    swift_weakInit();
    uint64_t v183 = swift_allocObject();
    swift_weakInit();
    Swift::String v184 = v255;
    v148(v255, v147, v131);
    unint64_t v185 = (*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80);
    unint64_t v186 = (v252 + v185 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v187 = (v186 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v188 = swift_allocObject();
    uint64_t v189 = v131;
    uint64_t v190 = v188;
    *(void *)(v188 + 16) = v182;
    *(void *)(v188 + 24) = v183;
    Swift::String v191 = v184;
    uint64_t v192 = v189;
    (*(void (**)(unint64_t, char *))(v179 + 32))(v188 + v185, v191);
    Swift::String v193 = (void *)(v190 + v186);
    unint64_t v194 = v276;
    *Swift::String v193 = v271;
    v193[1] = v194;
    Swift::String v195 = (void *)(v190 + v187);
    unint64_t v196 = v285;
    *Swift::String v195 = v283;
    v195[1] = v196;
    *(void *)(v190 + ((v187 + 23) & 0xFFFFFFFFFFFFFFF8)) = v272;
    swift_bridgeObjectRetain();
    uint64_t v197 = sub_100013A80(&qword_100478F20);
    uint64_t v198 = sub_1000155BC(&qword_100478F28, &qword_100478F20);
    sub_100185438((uint64_t)sub_1001DF8D4, v190, v197, v198);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t *, uint64_t))(v253 + 8))(v266, v256);
    ((void (*)(uint64_t, uint64_t))v279)(v268, v192);
    sub_1001E6F14(v270, type metadata accessor for HostedRoutingSessionSnapshot);
    return (*(uint64_t (**)(char *, uint64_t))(v274 + 8))(v275, v273);
  }
  char v151 = sub_1001EBC78(v145, v150);
  sub_1001E6F14((uint64_t)v150, type metadata accessor for HostedRoutingSessionSnapshot);
  ((void (*)(uint64_t, uint64_t))v279)(v145, v131);
  if ((v151 & 1) == 0) {
    goto LABEL_36;
  }
  v263 = (char *)v144;
  v264 = (char *)(v142 + 8);
  uint64_t v269 = sub_1001E78B8();
  uint64_t v153 = v152;
  sub_100013A80(&qword_100478F18);
  uint64_t v154 = type metadata accessor for RoutingDialog.Action();
  uint64_t v155 = *(void *)(v154 - 8);
  uint64_t v156 = *(void *)(v155 + 72);
  unint64_t v157 = (*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80);
  uint64_t v158 = swift_allocObject();
  *(_OWORD *)(v158 + 16) = xmmword_1003C5BA0;
  uint64_t v159 = (void *)(v158 + v157);
  void *v159 = 0x776F4E20746F4ELL;
  v159[1] = 0xE700000000000000;
  uint64_t v160 = *(void (**)(void))(v155 + 104);
  ((void (*)(void *, void, uint64_t))v160)(v159, enum case for RoutingDialog.Action.cancel(_:), v154);
  uint64_t v161 = (void *)((char *)v159 + v156);
  *uint64_t v161 = 0x6563616C706552;
  v161[1] = 0xE700000000000000;
  v160();
  swift_bridgeObjectRetain();
  RoutingDialog.init(identifier:titleText:detailText:actions:)();
  uint64_t v162 = v238;
  unint64_t v163 = v282;
  ((void (*)(char *, uint64_t, unint64_t))v259)(v238, v260, v282);
  unint64_t v164 = v276;
  swift_bridgeObjectRetain_n();
  v267 = v153;
  swift_bridgeObjectRetain_n();
  uint64_t v165 = Logger.logObject.getter();
  os_log_type_t v166 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v165, v166))
  {
    uint64_t v167 = swift_slowAlloc();
    v261 = (char *)swift_slowAlloc();
    long long aBlock = v261;
    *(_DWORD *)uint64_t v167 = 136315650;
    uint64_t v168 = _typeName(_:qualified:)();
    v286 = (void *)sub_10018A9E0(v168, v169, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v167 + 12) = 2080;
    swift_bridgeObjectRetain();
    v286 = (void *)sub_10018A9E0(v271, v164, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v167 + 22) = 2080;
    unint64_t v170 = (unint64_t)v267;
    swift_bridgeObjectRetain();
    v286 = (void *)sub_10018A9E0(v269, v170, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v165, v166, "[%s] interactWithItem<%s> - should present dialog: %s.", (uint8_t *)v167, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v171 = v238;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v171 = v162;
  }
  ((void (*)(char *, unint64_t))v263)(v171, v163);
  Swift::String v199 = v275;
  uint64_t v200 = swift_allocObject();
  swift_weakInit();
  ((void (*)(char *, uint64_t, uint64_t))ObjectType)(v255, v268, v265);
  v277(v249, v199, v273);
  uint64_t v201 = v253;
  (*(void (**)(char *, uint64_t *, uint64_t))(v253 + 16))(v239, v266, v256);
  uint64_t v202 = v262;
  unint64_t v203 = (*(unsigned __int8 *)(v262 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80);
  unint64_t v204 = (v252 + v203 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v205 = v274;
  unint64_t v206 = (*(unsigned __int8 *)(v274 + 80) + v204 + 8) & ~(unint64_t)*(unsigned __int8 *)(v274 + 80);
  unint64_t v207 = (v235 + *(unsigned __int8 *)(v201 + 80) + v206) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80);
  unint64_t v281 = (v236 + v207 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v282 = (v281 + 23) & 0xFFFFFFFFFFFFFFF8;
  v208 = (char *)swift_allocObject();
  uint64_t v209 = v271;
  *((void *)v208 + 2) = v200;
  *((void *)v208 + 3) = v209;
  uint64_t v210 = v269;
  *((void *)v208 + 4) = v276;
  *((void *)v208 + 5) = v210;
  *((void *)v208 + 6) = v267;
  (*(void (**)(char *, char *, uint64_t))(v202 + 32))(&v208[v203], v255, v265);
  *(void *)&v208[v204] = v284;
  uint64_t v211 = v273;
  (*(void (**)(char *, char *, uint64_t))(v205 + 32))(&v208[v206], v249, v273);
  uint64_t v212 = v256;
  (*(void (**)(char *, char *, uint64_t))(v201 + 32))(&v208[v207], v239, v256);
  v213 = &v208[v281];
  unint64_t v214 = v285;
  *(void *)v213 = v283;
  *((void *)v213 + 1) = v214;
  *(void *)&v208[v282] = v272;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v215 = v240;
  sub_1001D1854(v240, v75, (uint64_t)sub_1001DFB6C, (uint64_t)v208);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v242 + 8))(v215, v243);
  (*(void (**)(uint64_t *, uint64_t))(v201 + 8))(v266, v212);
  ((void (*)(uint64_t, uint64_t))v279)(v268, v265);
  sub_1001E6F14(v270, type metadata accessor for HostedRoutingSessionSnapshot);
  (*(void (**)(char *, uint64_t))(v274 + 8))(v275, v211);
  return swift_release();
}

uint64_t sub_1001C5FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, NSObject *a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  os_log_t v131 = a8;
  unint64_t v136 = a7;
  unint64_t v137 = a5;
  uint64_t v133 = a6;
  uint64_t v135 = a4;
  uint64_t v16 = type metadata accessor for RoutingDialog.Action();
  uint64_t v134 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v132 = (uint64_t *)((char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for RoutingInteraction();
  uint64_t v129 = *(void *)(v18 - 8);
  uint64_t v130 = v18;
  __chkstk_darwin(v18);
  uint64_t v127 = v19;
  uint64_t v128 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100013A80(&qword_100478F10);
  __chkstk_darwin(v20 - 8);
  unint64_t v123 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  unint64_t v124 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Logger();
  uint64_t v139 = *(void *)(v23 - 8);
  uint64_t v140 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v117 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v117 - v30;
  uint64_t v32 = sub_100013A80(&qword_100478EF0);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v35 = (char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v117 - v37;
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v117 - v39;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v138 = result;
  if (result)
  {
    uint64_t v122 = a14;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v42 = sub_1001A69C4();
      uint64_t v43 = v139;
      uint64_t v44 = v140;
      (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v31, v42, v140);
      swift_errorRetain();
      unint64_t v45 = v137;
      swift_bridgeObjectRetain();
      unint64_t v46 = v136;
      swift_bridgeObjectRetain();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        unint64_t v132 = (void *)swift_slowAlloc();
        uint64_t v134 = swift_slowAlloc();
        v141[0] = v134;
        *(_DWORD *)uint64_t v49 = 136315906;
        uint64_t v50 = _typeName(_:qualified:)();
        uint64_t v142 = sub_10018A9E0(v50, v51, v141);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v142 = sub_10018A9E0(v135, v45, v141);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v49 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v142 = sub_10018A9E0(v133, v46, v141);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v49 + 32) = 2112;
        swift_errorRetain();
        uint64_t v52 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v142 = v52;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v132 = v52;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "[%s] interactWithItem<%s> - dialog: %s returned error: %@ -> drop interaction", (uint8_t *)v49, 0x2Au);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v139 + 8))(v31, v140);
      }
      else
      {
        swift_errorRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_errorRelease();
        swift_errorRelease();

        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v31, v44);
      }
    }
    sub_1001E71E8(a1, (uint64_t)v40, &qword_100478EF0);
    uint64_t v53 = v134;
    uint64_t v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v134 + 48);
    uint64_t v119 = v134 + 48;
    uint64_t v118 = v54;
    int v55 = v54(v40, 1, v16);
    uint64_t v121 = a13;
    uint64_t v120 = a12;
    if (v55 == 1)
    {
      sub_100009A08((uint64_t)v40, &qword_100478EF0);
      goto LABEL_12;
    }
    if ((*(unsigned int (**)(char *, uint64_t))(v53 + 88))(v40, v16) != enum case for RoutingDialog.Action.confirm(_:))
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v16);
LABEL_12:
      uint64_t v66 = sub_1001A69C4();
      uint64_t v68 = v139;
      uint64_t v67 = v140;
      (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v26, v66, v140);
      sub_1001E71E8(a1, (uint64_t)v38, &qword_100478EF0);
      unint64_t v69 = v137;
      swift_bridgeObjectRetain_n();
      unint64_t v70 = v136;
      swift_bridgeObjectRetain_n();
      uint64_t v71 = Logger.logObject.getter();
      int v72 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v71, (os_log_type_t)v72))
      {
        LODWORD(v130) = v72;
        os_log_t v131 = v71;
        unint64_t v73 = v70;
        uint64_t v74 = swift_slowAlloc();
        uint64_t v129 = swift_slowAlloc();
        v141[0] = v129;
        *(_DWORD *)uint64_t v74 = 136315906;
        uint64_t v75 = _typeName(_:qualified:)();
        uint64_t v142 = sub_10018A9E0(v75, v76, v141);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v142 = sub_10018A9E0(v135, v69, v141);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v74 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v142 = sub_10018A9E0(v133, v73, v141);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v74 + 32) = 2080;
        sub_1001E71E8((uint64_t)v38, (uint64_t)v35, &qword_100478EF0);
        uint64_t result = v118(v35, 1, v16);
        if (result == 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v77 = v134;
        uint64_t v78 = v132;
        (*(void (**)(void *, char *, uint64_t))(v134 + 32))(v132, v35, v16);
        sub_100015AE0(&qword_1004794F0, (void (*)(uint64_t))&type metadata accessor for RoutingDialog.Action);
        uint64_t v79 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v81 = v80;
        (*(void (**)(void *, uint64_t))(v77 + 8))(v78, v16);
        uint64_t v142 = sub_10018A9E0(v79, v81, v141);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100009A08((uint64_t)v38, &qword_100478EF0);
        os_log_t v82 = v131;
        _os_log_impl((void *)&_mh_execute_header, v131, (os_log_type_t)v130, "[%s] interactWithItem<%s> - dialog: %s returned action: %s -> drop interaction", (uint8_t *)v74, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v139 + 8))(v26, v140);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_100009A08((uint64_t)v38, &qword_100478EF0);

        (*(void (**)(char *, uint64_t))(v68 + 8))(v26, v67);
      }
      uint64_t v83 = *(void *)(v138
                      + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient
                      + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v85 = type metadata accessor for InternalRoutingError();
      sub_100015AE0(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v86 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v85 - 8) + 104))(v87, enum case for InternalRoutingError.cancelled(_:), v85);
      unint64_t v88 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 24);
      swift_unknownObjectRetain();
      v88(v120, v121, v86, ObjectType, v83);
      swift_release();
      swift_errorRelease();
      return swift_unknownObjectRelease();
    }
    unint64_t v132 = a11;
    uint64_t v119 = a10;
    (*(void (**)(char *, uint64_t))(v53 + 96))(v40, v16);
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_1001A69C4();
    uint64_t v58 = v139;
    uint64_t v57 = v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v29, v56, v140);
    unint64_t v59 = v137;
    swift_bridgeObjectRetain_n();
    unint64_t v60 = v136;
    swift_bridgeObjectRetain_n();
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v118 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      v141[0] = (uint64_t)v118;
      *(_DWORD *)uint64_t v63 = 136315650;
      uint64_t v134 = a9;
      uint64_t v64 = _typeName(_:qualified:)();
      uint64_t v142 = sub_10018A9E0(v64, v65, v141);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v142 = sub_10018A9E0(v135, v59, v141);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v63 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v142 = sub_10018A9E0(v133, v60, v141);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "[%s] interactWithItem<%s> - dialog: %s confirmed -> handle interaction", (uint8_t *)v63, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v140);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v57);
    }
    uint64_t v90 = v130;
    os_log_t v89 = v131;
    uint64_t v91 = v127;
    uint64_t v92 = v126;
    uint64_t v93 = v125;
    uint64_t v94 = v124;
    RoutingInteraction.action.getter();
    int v95 = (*(uint64_t (**)(char *, uint64_t))(v93 + 88))(v94, v92);
    uint64_t v96 = v129;
    if (v95 == enum case for RoutingInteraction.Action.setActiveItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v93 + 96))(v94, v92);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v95 != enum case for RoutingInteraction.Action.handoff(_:))
      {
        (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v92);
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v93 + 96))(v94, v92);
      swift_release();
    }
    uint64_t v97 = *(void *)(v138
                    + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context);
    uint64_t v98 = (uint64_t)v123;
    (*(void (**)(char *, os_log_t, uint64_t))(v96 + 16))(v123, v89, v90);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v98, 0, 1, v90);
    uint64_t v99 = v97
        + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_mostRecentSourceSessionHidingInteraction;
    swift_beginAccess();
    swift_retain();
    sub_1001DF8D8(v98, v99);
    swift_endAccess();
    sub_1001BE3A4();
    sub_100009A08(v98, &qword_100478F10);
    swift_release();
LABEL_24:
    unint64_t v100 = v132;
    uint64_t v101 = v119;
    uint64_t v102 = sub_1001BF970();
    uint64_t v103 = (*(uint64_t (**)(os_log_t, uint64_t, void *))(*(void *)v102 + 672))(v89, v101, v100);
    swift_release();
    v141[0] = v103;
    uint64_t v104 = swift_allocObject();
    swift_weakInit();
    uint64_t v105 = swift_allocObject();
    swift_weakInit();
    uint64_t v106 = v128;
    (*(void (**)(char *, os_log_t, uint64_t))(v96 + 16))(v128, v89, v90);
    unint64_t v107 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
    unint64_t v108 = (v91 + v107 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v109 = (v108 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v110 = swift_allocObject();
    *(void *)(v110 + 16) = v104;
    *(void *)(v110 + 24) = v105;
    (*(void (**)(unint64_t, char *, uint64_t))(v96 + 32))(v110 + v107, v106, v90);
    int v111 = (void *)(v110 + v108);
    unint64_t v112 = v137;
    *int v111 = v135;
    v111[1] = v112;
    uint64_t v113 = (void *)(v110 + v109);
    uint64_t v114 = v121;
    *uint64_t v113 = v120;
    v113[1] = v114;
    *(void *)(v110 + ((v109 + 23) & 0xFFFFFFFFFFFFFFF8)) = v122;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v115 = sub_100013A80(&qword_100478F20);
    uint64_t v116 = sub_1000155BC(&qword_100478F28, &qword_100478F20);
    sub_100185438((uint64_t)sub_1001DF8D4, v110, v115, v116);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001C7188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v88 = a8;
  uint64_t v89 = a7;
  unint64_t v81 = a6;
  uint64_t v80 = a5;
  uint64_t v91 = a4;
  uint64_t v86 = type metadata accessor for Logger();
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v87 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RoutingInteraction();
  uint64_t v94 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  os_log_t v82 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v74 - v13;
  uint64_t v15 = sub_100013A80(&qword_1004794F8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100013A80(&qword_100478F10);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v83 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v74 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v74 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v74 - v27;
  uint64_t v95 = *(void *)a1;
  uint64_t v90 = *(void *)(a1 + 8);
  uint64_t v93 = *(void *)(a1 + 16);
  int v92 = *(unsigned __int8 *)(a1 + 24);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v30 = result;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong) {
      return swift_release();
    }
    uint64_t v79 = v30;
    uint64_t v84 = Strong;
    if (!v95)
    {
      uint64_t v94 = 0;
      uint64_t v39 = *(void *)(Strong
                      + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient
                      + 8);
      uint64_t v40 = v88;
      uint64_t v41 = 0;
      uint64_t v42 = v90;
      uint64_t v37 = v93;
      unsigned __int8 v38 = v92;
LABEL_20:
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 24);
      swift_unknownObjectRetain();
      sub_1001BB2C8(v41, v42, v37, v38);
      v73(v89, v40, v94, ObjectType, v39);
      swift_errorRelease();
      swift_release();
      swift_release();
      return swift_unknownObjectRelease();
    }
    uint64_t v78 = OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context;
    uint64_t v32 = *(void *)(Strong
                    + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context)
        + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_mostRecentSourceSessionHidingInteraction;
    swift_beginAccess();
    sub_1001E71E8(v32, (uint64_t)v28, &qword_100478F10);
    uint64_t v33 = v94;
    uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
    v75(v26, v91, v10);
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
    uint64_t v77 = v33 + 56;
    unint64_t v76 = v34;
    v34(v26, 0, 1, v10);
    uint64_t v35 = (uint64_t)&v17[*(int *)(v15 + 48)];
    sub_1001E71E8((uint64_t)v28, (uint64_t)v17, &qword_100478F10);
    sub_1001E71E8((uint64_t)v26, v35, &qword_100478F10);
    uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    if (v36((uint64_t)v17, 1, v10) == 1)
    {
      sub_100009A08((uint64_t)v26, &qword_100478F10);
      sub_100009A08((uint64_t)v28, &qword_100478F10);
      if (v36(v35, 1, v10) == 1)
      {
        sub_100009A08((uint64_t)v17, &qword_100478F10);
        uint64_t v37 = v93;
        unsigned __int8 v38 = v92;
LABEL_13:
        uint64_t v47 = sub_1001A69C4();
        uint64_t v48 = v85;
        uint64_t v49 = v86;
        (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v87, v47, v86);
        uint64_t v50 = v82;
        v75(v82, v91, v10);
        unint64_t v51 = v81;
        swift_bridgeObjectRetain_n();
        uint64_t v52 = v84;
        swift_retain_n();
        uint64_t v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.default.getter();
        int v55 = v54;
        if (os_log_type_enabled(v53, v54))
        {
          LODWORD(v75) = v55;
          uint64_t v56 = swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          v97[0] = v74;
          *(_DWORD *)uint64_t v56 = 136315906;
          uint64_t v57 = _typeName(_:qualified:)();
          uint64_t v96 = sub_10018A9E0(v57, v58, v97);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v56 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v96 = sub_10018A9E0(v80, v51, v97);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v56 + 22) = 2080;
          sub_100015AE0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
          uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v96 = sub_10018A9E0(v59, v60, v97);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v94 + 8))(v50, v10);
          *(_WORD *)(v56 + 32) = 2080;
          swift_retain();
          uint64_t v61 = sub_1001BEE28();
          unint64_t v63 = v62;
          swift_release();
          uint64_t v96 = sub_10018A9E0(v61, v63, v97);
          unsigned __int8 v38 = v92;
          uint64_t v37 = v93;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v75, "[%s] interactWithItem<%s> - clear failed source hiding interaction: %s for client: %s", (uint8_t *)v56, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v85 + 8))(v87, v86);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v94 + 8))(v50, v10);

          swift_release_n();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v87, v49);
        }
        uint64_t v64 = *(void *)(v52 + v78);
        uint64_t v65 = (uint64_t)v83;
        v76(v83, 1, 1, v10);
        uint64_t v66 = v64
            + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_mostRecentSourceSessionHidingInteraction;
        swift_beginAccess();
        swift_retain();
        sub_1001DF8D8(v65, v66);
        swift_endAccess();
        sub_1001BE3A4();
        sub_100009A08(v65, &qword_100478F10);
        swift_release();
        uint64_t v67 = *(void *)sub_1001BF868();
        uint64_t v68 = (*(uint64_t (**)(uint64_t))(v67 + 264))(v91);
        uint64_t v70 = v69;
        swift_release();
        uint64_t v43 = v90;
        if (v70)
        {
          swift_beginAccess();
          swift_retain();
          sub_10018C4D0(v68, v70);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
        }
        sub_1001CF640(v52);
        uint64_t v41 = v95;
        goto LABEL_19;
      }
    }
    else
    {
      sub_1001E71E8((uint64_t)v17, (uint64_t)v23, &qword_100478F10);
      if (v36(v35, 1, v10) != 1)
      {
        uint64_t v44 = v94;
        (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v14, v35, v10);
        sub_100015AE0(&qword_100478DB8, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        char v45 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v46 = *(void (**)(char *, uint64_t))(v44 + 8);
        v46(v14, v10);
        sub_100009A08((uint64_t)v26, &qword_100478F10);
        sub_100009A08((uint64_t)v28, &qword_100478F10);
        v46(v23, v10);
        sub_100009A08((uint64_t)v17, &qword_100478F10);
        uint64_t v41 = v95;
        uint64_t v43 = v90;
        uint64_t v37 = v93;
        unsigned __int8 v38 = v92;
        if (v45) {
          goto LABEL_13;
        }
LABEL_19:
        uint64_t v39 = *(void *)(v84
                        + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient
                        + 8);
        sub_1001E67A4();
        uint64_t v94 = swift_allocError();
        *(void *)uint64_t v71 = v41;
        *(void *)(v71 + 8) = v43;
        *(void *)(v71 + 16) = v37;
        *(unsigned char *)(v71 + 24) = v38;
        uint64_t v42 = v43;
        uint64_t v40 = v88;
        goto LABEL_20;
      }
      sub_100009A08((uint64_t)v26, &qword_100478F10);
      sub_100009A08((uint64_t)v28, &qword_100478F10);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v23, v10);
    }
    sub_100009A08((uint64_t)v17, &qword_1004794F8);
    uint64_t v41 = v95;
    uint64_t v43 = v90;
    uint64_t v37 = v93;
    unsigned __int8 v38 = v92;
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1001C7D50(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v32 - v12;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    if (a1)
    {
      swift_errorRetain();
      uint64_t v16 = sub_1001A69C4();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v16, v7);
      swift_bridgeObjectRetain_n();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      swift_errorRetain();
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v34 = (void *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        uint64_t v38 = v35;
        *(_DWORD *)uint64_t v19 = 136315906;
        os_log_t v33 = v17;
        uint64_t v20 = _typeName(_:qualified:)();
        uint64_t v36 = v7;
        uint64_t v37 = sub_10018A9E0(v20, v21, &v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_10018A9E0(a3, a4, &v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_10018A9E0(a3, a4, &v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 32) = 2112;
        swift_errorRetain();
        uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v37 = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v34 = v22;
        swift_errorRelease();
        swift_errorRelease();
        os_log_t v23 = v33;
        _os_log_impl((void *)&_mh_execute_header, v33, v18, "[%s] interactWithItem<%s> - dialog: %s returned error: %@", (uint8_t *)v19, 0x2Au);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v36);
      }
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
      uint64_t v31 = v11;
    }
    else
    {
      uint64_t v24 = sub_1001A69C4();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v24, v7);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        uint64_t v38 = v35;
        *(_DWORD *)uint64_t v27 = 136315650;
        uint64_t v36 = v7;
        uint64_t v28 = _typeName(_:qualified:)();
        uint64_t v37 = sub_10018A9E0(v28, v29, &v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_10018A9E0(a3, a4, &v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_10018A9E0(a3, a4, &v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%s] interactWithItem<%s> - dialog: %s acknowledged", (uint8_t *)v27, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v36);
      }

      swift_bridgeObjectRelease_n();
      uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
      uint64_t v31 = v13;
    }
    return v30(v31, v7);
  }
  return result;
}

uint64_t sub_1001C8324(uint64_t a1, void (*a2)(void, void), id a3, NSObject *a4, int a5)
{
  LODWORD(v159) = a5;
  uint64_t v155 = a4;
  uint64_t v157 = a1;
  uint64_t v158 = a2;
  uint64_t v147 = *v5;
  uint64_t v135 = type metadata accessor for InternalRoutingError();
  v128[2] = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v134 = (char *)v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v152 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v150 = *(void *)(v11 - 8);
  uint64_t v151 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v129 = (void *)((char *)v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v154 = type metadata accessor for Logger();
  uint64_t v156 = *(void *)(v154 - 8);
  uint64_t v15 = __chkstk_darwin(v154);
  uint64_t v138 = (char *)v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  v128[1] = (char *)v128 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v153 = (char *)v128 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v139 = (char *)v128 - v22;
  __chkstk_darwin(v21);
  unint64_t v132 = (char *)v128 - v23;
  uint64_t v133 = type metadata accessor for RoutingInteraction();
  uint64_t v137 = *(void *)(v133 - 8);
  uint64_t v24 = __chkstk_darwin(v133);
  unint64_t v136 = (char *)v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)v128 - v27;
  __chkstk_darwin(v26);
  os_log_t v143 = (char *)v128 - v29;
  uint64_t v30 = sub_100013A80(&qword_10047D120);
  __chkstk_darwin(v30 - 8);
  uint64_t v145 = (uint64_t)v128 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  uint64_t v144 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v140 = (uint64_t)v128 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v146 = *(void *)(v148 - 8);
  uint64_t v33 = __chkstk_darwin(v148);
  uint64_t v141 = (char *)v128 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v149 = (char *)v128 - v35;
  uint64_t v36 = type metadata accessor for DispatchPredicate();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v39 = (void *)((char *)v128 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = (void *)*sub_100266CC0();
  if ((v159 & 1) == 0)
  {
    unint64_t v63 = (void *)swift_allocObject();
    uint64_t v64 = v157;
    uint64_t v65 = v158;
    v63[2] = v5;
    v63[3] = v64;
    void v63[4] = v65;
    v63[5] = a3;
    v63[6] = v155;
    uint64_t v165 = sub_1001DFD60;
    os_log_type_t v166 = v63;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v162 = 1107296256;
    unint64_t v163 = sub_100006760;
    unint64_t v164 = &unk_100421698;
    uint64_t v66 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v67 = v40;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v160 = _swiftEmptyArrayStorage;
    sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v66);

    (*(void (**)(char *, uint64_t))(v152 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v13, v151);
    return swift_release();
  }
  uint64_t v159 = v5;
  void *v39 = v40;
  (*(void (**)(void *, void, uint64_t))(v37 + 104))(v39, enum case for DispatchPredicate.onQueue(_:), v36);
  id v41 = v40;
  uint64_t v42 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v37 + 8))(v39, v36);
  if (v42)
  {
    unint64_t v43 = (unint64_t)sub_1001BF738();
    uint64_t v42 = v43;
    if (!(v43 >> 62))
    {
      uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = v156;
      if (v44) {
        goto LABEL_5;
      }
LABEL_13:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v51 = sub_1001A69C4();
      uint64_t v52 = v153;
      uint64_t v53 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v153, v51, v154);
      swift_unknownObjectRetain_n();
      unint64_t v54 = (unint64_t)v158;
      swift_bridgeObjectRetain_n();
      int v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = swift_slowAlloc();
        uint64_t v160 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 136315650;
        uint64_t v58 = _typeName(_:qualified:)();
        uint64_t aBlock = (id)sub_10018A9E0(v58, v59, (uint64_t *)&v160);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t aBlock = (id)sub_10018A9E0(v157, v54, (uint64_t *)&v160);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v57 + 22) = 2080;
        uint64_t aBlock = a3;
        uint64_t v162 = (uint64_t)v155;
        swift_unknownObjectRetain();
        sub_100013A80(&qword_100478ED0);
        uint64_t v60 = String.init<A>(describing:)();
        uint64_t aBlock = (id)sub_10018A9E0(v60, v61, (uint64_t *)&v160);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "[%s] interactWithSession - session: %s, No internal client found matching client: %s", (uint8_t *)v57, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v153, v53);
      }
      else
      {

        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v52, v53);
      }
    }
  }
  else
  {
LABEL_32:
    __break(1u);
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v45 = v156;
  if (!v44) {
    goto LABEL_13;
  }
LABEL_5:
  uint64_t v46 = 4;
  while (1)
  {
    uint64_t v47 = v46 - 4;
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v48 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v49 = __OFADD__(v47, 1);
      uint64_t v50 = v46 - 3;
      if (v49) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v48 = *(void *)(v42 + 8 * v46);
      swift_retain();
      BOOL v49 = __OFADD__(v47, 1);
      uint64_t v50 = v46 - 3;
      if (v49)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    if (*(id *)(v48
               + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient) == a3)
      break;
    swift_release();
    ++v46;
    if (v50 == v44) {
      goto LABEL_13;
    }
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v68 = v146;
  uint64_t v69 = *(void (**)(void, void, void))(v146 + 16);
  v69(v149, v48 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v148);
  swift_retain();
  uint64_t v70 = sub_1001BF780();
  uint64_t v71 = v70[2];
  v128[0] = v28;
  if (v71)
  {
    unint64_t v72 = sub_1001DE0AC(v48);
    uint64_t v73 = (uint64_t)v143;
    if (v74)
    {
      sub_1001E6EAC(v70[7] + *(void *)(v144 + 72) * v72, v145, type metadata accessor for HostedRoutingSessionSnapshot);
      uint64_t v75 = 0;
    }
    else
    {
      uint64_t v75 = 1;
    }
  }
  else
  {
    uint64_t v75 = 1;
    uint64_t v73 = (uint64_t)v143;
  }
  uint64_t v76 = v144;
  uint64_t v77 = v145;
  uint64_t v78 = v142;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v145, v75, 1, v142);
  swift_release();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v77, 1, v78) == 1)
  {
    sub_100009A08(v77, &qword_10047D120);
    uint64_t v79 = sub_1001A69C4();
    uint64_t v80 = v139;
    uint64_t v81 = v154;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v139, v79, v154);
    uint64_t v83 = v148;
    os_log_t v82 = v149;
    v69(v141, v149, v148);
    unint64_t v84 = (unint64_t)v158;
    swift_bridgeObjectRetain_n();
    uint64_t v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.error.getter();
    int v87 = v86;
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v88 = swift_slowAlloc();
      LODWORD(v159) = v87;
      uint64_t v89 = v88;
      uint64_t v155 = swift_slowAlloc();
      uint64_t aBlock = v155;
      *(_DWORD *)uint64_t v89 = 136315650;
      uint64_t v90 = _typeName(_:qualified:)();
      uint64_t v160 = (void *)sub_10018A9E0(v90, v91, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v89 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v160 = (void *)sub_10018A9E0(v157, v84, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v89 + 22) = 2080;
      sub_100015AE0(&qword_100478F30, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration);
      int v92 = v141;
      uint64_t v93 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v160 = (void *)sub_10018A9E0(v93, v94, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v95 = *(void (**)(void, void))(v68 + 8);
      v95(v92, v83);
      _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v159, "[%s] interactWithSession - session: %s, No snapshot for configuration: %s", (uint8_t *)v89, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      (*(void (**)(char *, uint64_t))(v45 + 8))(v139, v154);
      return ((uint64_t (*)(char *, uint64_t))v95)(v149, v83);
    }
    else
    {

      uint64_t v98 = *(void (**)(void, void))(v68 + 8);
      v98(v141, v83);
      swift_release();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v80, v81);
      return ((uint64_t (*)(char *, uint64_t))v98)(v82, v83);
    }
  }
  else
  {
    uint64_t v96 = v140;
    sub_1001E6FE8(v77, v140, type metadata accessor for HostedRoutingSessionSnapshot);
    type metadata accessor for RoutingDecisionEngine();
    unint64_t v97 = (unint64_t)v158;
    sub_1001EB86C(v157, (uint64_t)v158, v96, v73);
    uint64_t v99 = sub_1001A69C4();
    unint64_t v100 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v132, v99, v154);
    uint64_t v101 = v137;
    uint64_t v102 = *(void (**)(void, void, void))(v137 + 16);
    uint64_t v103 = v128[0];
    uint64_t v104 = v133;
    v102(v128[0], v73, v133);
    v102(v136, v73, v104);
    swift_bridgeObjectRetain_n();
    uint64_t v105 = Logger.logObject.getter();
    os_log_type_t v106 = static os_log_type_t.default.getter();
    int v107 = v106;
    uint64_t v155 = v105;
    if (os_log_type_enabled(v105, v106))
    {
      uint64_t v109 = swift_slowAlloc();
      uint64_t v153 = (char *)swift_slowAlloc();
      uint64_t aBlock = v153;
      *(_DWORD *)uint64_t v109 = 136315906;
      uint64_t v110 = _typeName(_:qualified:)();
      LODWORD(v152) = v107;
      uint64_t v160 = (void *)sub_10018A9E0(v110, v111, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v109 + 12) = 2080;
      uint64_t v112 = RoutingInteraction.identifier.getter();
      uint64_t v160 = (void *)sub_10018A9E0(v112, v113, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v114 = *(void (**)(void, void))(v101 + 8);
      uint64_t v137 = v101 + 8;
      uint64_t v115 = v133;
      v114(v103, v133);
      *(_WORD *)(v109 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v160 = (void *)sub_10018A9E0(v157, v97, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v109 + 32) = 2080;
      sub_100015AE0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      uint64_t v116 = v136;
      uint64_t v117 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v160 = (void *)sub_10018A9E0(v117, v118, (uint64_t *)&aBlock);
      uint64_t v119 = v146;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v158 = v114;
      v114(v116, v115);
      uint64_t v120 = v115;
      uint64_t v121 = v155;
      _os_log_impl((void *)&_mh_execute_header, v155, (os_log_type_t)v152, "[%s] interactWithSession<%s> - session: %s produced interaction: %s", (uint8_t *)v109, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v156 + 8))(v132, v154);
    }
    else
    {
      uint64_t v122 = *(void (**)(void, void))(v101 + 8);
      v122(v103, v104);
      swift_bridgeObjectRelease_n();
      uint64_t v158 = v122;
      v122(v136, v104);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v100, v154);
      uint64_t v120 = v104;
      uint64_t v119 = v146;
    }
    unint64_t v123 = v129;
    unint64_t v124 = v149;
    uint64_t v125 = v140;
    uint64_t v126 = v143;
    sub_1002AD0B4(v140, v129);
    uint64_t v127 = *(void *)sub_1001BF970();
    (*(void (**)(char *, char *, uint64_t *))(v127 + 672))(v126, v124, v123);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t *, uint64_t))(v130 + 8))(v123, v131);
    v158(v126, v120);
    sub_1001E6F14(v125, type metadata accessor for HostedRoutingSessionSnapshot);
    return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v124, v148);
  }
}

uint64_t sub_1001C9E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v88 = a3;
  uint64_t v89 = a5;
  uint64_t v92 = a2;
  uint64_t v93 = a4;
  uint64_t v91 = a1;
  uint64_t v79 = *v6;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v85 = *(void *)(v8 - 8);
  uint64_t v86 = v8;
  __chkstk_darwin(v8);
  uint64_t v83 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for DispatchQoS();
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v81 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RoutingDialog.Action();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for Logger();
  uint64_t v90 = *(void *)(v80 - 8);
  uint64_t v15 = __chkstk_darwin(v80);
  int v87 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v78 = (char *)&v77 - v17;
  uint64_t v18 = sub_100013A80(&qword_100478EF0);
  __chkstk_darwin(v18 - 8);
  uint64_t v77 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchPredicate();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  unint64_t v23 = (unint64_t)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (void *)*sub_100266CC0();
  if ((a6 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v88, v11);
    unint64_t v48 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    unint64_t v49 = (v13 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v50 = (char *)swift_allocObject();
    uint64_t v51 = v91;
    uint64_t v52 = v92;
    *((void *)v50 + 2) = v6;
    *((void *)v50 + 3) = v51;
    *((void *)v50 + 4) = v52;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v50[v48], v14, v11);
    uint64_t v53 = (uint64_t *)&v50[v49];
    uint64_t v54 = v89;
    *uint64_t v53 = v93;
    v53[1] = v54;
    uint64_t v99 = sub_1001DFEAC;
    unint64_t v100 = v50;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v96 = 1107296256;
    unint64_t v97 = sub_100006760;
    uint64_t v98 = &unk_1004216E8;
    int v55 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v56 = v24;
    swift_retain();
    uint64_t v57 = v81;
    static DispatchQoS.unspecified.getter();
    v94[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v58 = v83;
    uint64_t v59 = v86;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v55);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v58, v59);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v57, v84);
    return swift_release();
  }
  uint64_t v25 = v93;
  uint64_t v85 = v12;
  uint64_t v86 = v11;
  *(void *)unint64_t v23 = v24;
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v23, enum case for DispatchPredicate.onQueue(_:), v20);
  id v26 = v24;
  char v27 = _dispatchPreconditionTest(_:)();
  (*(void (**)(unint64_t, uint64_t))(v21 + 8))(v23, v20);
  if (v27)
  {
    unint64_t v28 = (unint64_t)sub_1001BF738();
    unint64_t v23 = v28;
    if (!(v28 >> 62))
    {
      uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v30 = (void *)v25;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v31 = v90;
      if (v29) {
        goto LABEL_5;
      }
LABEL_13:
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease();
      uint64_t v36 = sub_1001A69C4();
      uint64_t v37 = v87;
      uint64_t v38 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v87, v36, v80);
      swift_unknownObjectRetain_n();
      unint64_t v39 = v92;
      swift_bridgeObjectRetain_n();
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        v94[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v42 = 136315650;
        uint64_t v43 = _typeName(_:qualified:)();
        uint64_t aBlock = sub_10018A9E0(v43, v44, v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t aBlock = sub_10018A9E0(v91, v39, v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v42 + 22) = 2080;
        uint64_t aBlock = (uint64_t)v30;
        uint64_t v96 = v89;
        swift_unknownObjectRetain();
        sub_100013A80(&qword_100478ED0);
        uint64_t v45 = String.init<A>(describing:)();
        uint64_t aBlock = sub_10018A9E0(v45, v46, v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "[%s] interactWithDialog - dialog: %s, No internal client found matching client: %s", (uint8_t *)v42, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v87, v38);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();

        return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v37, v38);
      }
    }
  }
  else
  {
LABEL_25:
    __break(1u);
  }
  uint64_t v30 = (void *)v25;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v31 = v90;
  if (!v29) {
    goto LABEL_13;
  }
LABEL_5:
  uint64_t v25 = 4;
  while (1)
  {
    uint64_t v32 = v25 - 4;
    if ((v23 & 0xC000000000000001) != 0)
    {
      uint64_t v33 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v34 = __OFADD__(v32, 1);
      uint64_t v35 = v25 - 3;
      if (v34) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v33 = *(void *)(v23 + 8 * v25);
      swift_retain();
      BOOL v34 = __OFADD__(v32, 1);
      uint64_t v35 = v25 - 3;
      if (v34)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    if (*(void **)(v33
                  + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient) == v30)
      break;
    swift_release();
    ++v25;
    if (v35 == v29) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  swift_retain();
  uint64_t v60 = sub_1001BF810((void **)&aBlock);
  unint64_t v61 = sub_1001CAAB8(v94, v33);
  if (*v62)
  {
    unint64_t v63 = v92;
    uint64_t v64 = (void (*)(void, void))sub_1001DDFC4(v91, v92);
    ((void (*)(uint64_t *, void))v61)(v94, 0);
    swift_release();
    ((void (*)(void **, void))v60)((void **)&aBlock, 0);
    uint64_t v65 = v80;
    if (v64)
    {
      uint64_t v67 = v85;
      uint64_t v66 = v86;
      uint64_t v68 = (uint64_t)v77;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v77, v88, v86);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v68, 0, 1, v66);
      uint64_t aBlock = 0;
      v64(v68, (void **)&aBlock);
      sub_1001924CC((uint64_t)v64);
      swift_release();
      return sub_100009A08(v68, &qword_100478EF0);
    }
  }
  else
  {
    ((void (*)(uint64_t *, void))v61)(v94, 0);
    swift_release();
    ((void (*)(void **, void))v60)((void **)&aBlock, 0);
    uint64_t v65 = v80;
    unint64_t v63 = v92;
  }
  uint64_t v69 = sub_1001A69C4();
  uint64_t v70 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v78, v69, v65);
  swift_bridgeObjectRetain_n();
  uint64_t v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    uint64_t aBlock = v93;
    *(_DWORD *)uint64_t v73 = 136315650;
    uint64_t v74 = _typeName(_:qualified:)();
    v94[0] = sub_10018A9E0(v74, v75, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v76 = v91;
    v94[0] = sub_10018A9E0(v91, v63, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v73 + 22) = 2080;
    swift_bridgeObjectRetain();
    v94[0] = sub_10018A9E0(v76, v63, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "[%s] interactWithDialog - dialog: %s, No pending interaction found for identifier: %s", (uint8_t *)v73, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v78, v65);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease_n();

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v70, v65);
  }
}

void (*sub_1001CAAB8(void *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  swift_retain();
  void v4[5] = sub_1001E144C(v4, a2);
  return sub_1001CAB28;
}

void sub_1001CAB28(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_release();

  free(v1);
}

uint64_t sub_1001CAB7C(void *a1, uint64_t a2, void (*a3)(void, void, void), int a4)
{
  uint64_t v5 = v4;
  LODWORD(v150) = a4;
  uint64_t v147 = a3;
  uint64_t v151 = a2;
  uint64_t v152 = a1;
  uint64_t v129 = *v4;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v144 = *(char **)(v6 - 8);
  uint64_t v145 = v6;
  __chkstk_darwin(v6);
  uint64_t v142 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = type metadata accessor for DispatchQoS();
  uint64_t v141 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  os_log_t v140 = (os_log_t)((char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v128 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v126 = (uint64_t)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RoutingControl();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v138 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v121 - v15;
  __chkstk_darwin(v14);
  uint64_t v133 = (char *)&v121 - v17;
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v148 = *(void *)(v18 - 8);
  uint64_t v149 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v146 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v121 - v21;
  uint64_t v124 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v122 = (uint64_t *)((char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v139 = type metadata accessor for RoutingInteraction();
  uint64_t v132 = *(void *)(v139 - 8);
  uint64_t v24 = __chkstk_darwin(v139);
  uint64_t v125 = (char *)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v131 = (char *)&v121 - v27;
  __chkstk_darwin(v26);
  unint64_t v136 = (char *)&v121 - v28;
  uint64_t v137 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v135 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v134 = (char *)&v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DispatchPredicate();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char **)((char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  BOOL v34 = (void *)*sub_100266CC0();
  if ((v150 & 1) == 0)
  {
    (*(void (**)(char *, void *, uint64_t))(v11 + 16))(v16, v152, v10);
    unint64_t v63 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    unint64_t v64 = (v12 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = v5;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v65 + v63, v16, v10);
    uint64_t v66 = (uint64_t *)(v65 + v64);
    uint64_t v67 = v147;
    *uint64_t v66 = v151;
    v66[1] = (uint64_t)v67;
    uint64_t v158 = sub_1001DFF88;
    uint64_t v159 = v65;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v155 = 1107296256;
    uint64_t v156 = sub_100006760;
    uint64_t v157 = &unk_100421738;
    uint64_t v68 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    id v69 = v34;
    swift_retain();
    os_log_t v70 = v140;
    static DispatchQoS.unspecified.getter();
    uint64_t v153 = _swiftEmptyArrayStorage;
    sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v71 = v142;
    uint64_t v72 = v145;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v68);

    (*((void (**)(char *, uint64_t))v144 + 1))(v71, v72);
    (*(void (**)(os_log_t, uint64_t))(v141 + 8))(v70, v143);
    return swift_release();
  }
  uint64_t v121 = v22;
  uint64_t v35 = v151;
  uint64_t v143 = v12;
  uint64_t v144 = v16;
  uint64_t v145 = (uint64_t)v5;
  uint64_t v150 = v11;
  uint64_t v130 = v10;
  *uint64_t v33 = v34;
  (*(void (**)(void *, void, uint64_t))(v31 + 104))(v33, enum case for DispatchPredicate.onQueue(_:), v30);
  id v36 = v34;
  uint64_t v37 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v31 + 8))(v33, v30);
  if (v37)
  {
    unint64_t v38 = (unint64_t)sub_1001BF738();
    uint64_t v37 = v38;
    if (!(v38 >> 62))
    {
      uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v40 = v35;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      if (v39) {
        goto LABEL_5;
      }
LABEL_13:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v46 = sub_1001A69C4();
      uint64_t v48 = v148;
      uint64_t v47 = v149;
      unint64_t v49 = v146;
      (*(void (**)(char *, uint64_t, uint64_t))(v148 + 16))(v146, v46, v149);
      uint64_t v50 = v150;
      uint64_t v51 = v138;
      uint64_t v52 = v130;
      (*(void (**)(char *, void *, uint64_t))(v150 + 16))(v138, v152, v130);
      swift_unknownObjectRetain_n();
      uint64_t v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v152 = (void *)swift_slowAlloc();
        uint64_t v153 = v152;
        *(_DWORD *)uint64_t v55 = 136315650;
        uint64_t v56 = _typeName(_:qualified:)();
        uint64_t aBlock = sub_10018A9E0(v56, v57, (uint64_t *)&v153);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v55 + 12) = 2080;
        sub_100015AE0(&qword_100478970, (void (*)(uint64_t))&type metadata accessor for RoutingControl);
        uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t aBlock = sub_10018A9E0(v58, v59, (uint64_t *)&v153);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
        *(_WORD *)(v55 + 22) = 2080;
        uint64_t aBlock = v40;
        uint64_t v155 = (uint64_t)v147;
        swift_unknownObjectRetain();
        sub_100013A80(&qword_100478ED0);
        uint64_t v60 = String.init<A>(describing:)();
        uint64_t aBlock = sub_10018A9E0(v60, v61, (uint64_t *)&v153);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "[%s] interactWithControl - control: %s, No internal client found matching client: %s", (uint8_t *)v55, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v146, v149);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);

        swift_unknownObjectRelease_n();
        return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v47);
      }
    }
  }
  else
  {
LABEL_22:
    __break(1u);
  }
  uint64_t v40 = v35;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
  if (!v39) {
    goto LABEL_13;
  }
LABEL_5:
  uint64_t v41 = 4;
  while (1)
  {
    uint64_t v42 = v41 - 4;
    if ((v37 & 0xC000000000000001) != 0)
    {
      uint64_t v43 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v44 = __OFADD__(v42, 1);
      uint64_t v45 = v41 - 3;
      if (v44) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v43 = *(void *)(v37 + 8 * v41);
      swift_retain();
      BOOL v44 = __OFADD__(v42, 1);
      uint64_t v45 = v41 - 3;
      if (v44)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    if (*(void *)(v43
                   + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient) == v40)
      break;
    swift_release();
    ++v41;
    if (v45 == v39) {
      goto LABEL_13;
    }
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v134, v43 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v137);
  uint64_t v73 = v130;
  uint64_t v74 = swift_allocBox();
  uint64_t v76 = v150 + 16;
  unint64_t v75 = *(void (**)(uint64_t, void *, uint64_t))(v150 + 16);
  uint64_t v77 = v152;
  v75(v78, v152, v73);
  uint64_t v79 = v122;
  *uint64_t v122 = v74;
  (*(void (**)(uint64_t *, void, uint64_t))(v123 + 104))(v79, enum case for RoutingInteraction.Action.control(_:), v124);
  uint64_t v80 = v136;
  RoutingInteraction.init(action:)();
  uint64_t v81 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v148 + 16))(v121, v81, v149);
  uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
  uint64_t v83 = v139;
  v82(v131, v80, v139);
  uint64_t v151 = v76;
  uint64_t v147 = (void (*)(void, void, void))v75;
  v75((uint64_t)v133, v77, v73);
  uint64_t v84 = v125;
  v82(v125, v80, v83);
  uint64_t v85 = Logger.logObject.getter();
  os_log_type_t v86 = static os_log_type_t.default.getter();
  int v87 = v86;
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v88 = swift_slowAlloc();
    os_log_t v140 = v85;
    uint64_t v89 = v88;
    uint64_t v141 = swift_slowAlloc();
    uint64_t aBlock = v141;
    *(_DWORD *)uint64_t v89 = 136315906;
    uint64_t v90 = _typeName(_:qualified:)();
    uint64_t v91 = v83;
    uint64_t v153 = (void *)sub_10018A9E0(v90, v92, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v89 + 12) = 2080;
    uint64_t v93 = v131;
    uint64_t v94 = RoutingInteraction.identifier.getter();
    uint64_t v153 = (void *)sub_10018A9E0(v94, v95, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    LODWORD(v138) = v87;
    uint64_t v96 = *(void (**)(char *, uint64_t))(v132 + 8);
    uint64_t v142 = (char *)((v132 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    v96(v93, v91);
    *(_WORD *)(v89 + 22) = 2080;
    sub_100015AE0(&qword_100478970, (void (*)(uint64_t))&type metadata accessor for RoutingControl);
    unint64_t v97 = v133;
    uint64_t v98 = v84;
    uint64_t v99 = v130;
    uint64_t v100 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v153 = (void *)sub_10018A9E0(v100, v101, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v150 + 8))(v97, v99);
    *(_WORD *)(v89 + 32) = 2080;
    sub_100015AE0(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    uint64_t v102 = v139;
    uint64_t v103 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v153 = (void *)sub_10018A9E0(v103, v104, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v146 = (char *)v96;
    v96(v98, v102);
    os_log_t v105 = v140;
    _os_log_impl((void *)&_mh_execute_header, v140, (os_log_type_t)v138, "[%s] interactWithControl<%s> - control: %s produced interaction: %s", (uint8_t *)v89, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    os_log_type_t v106 = v152;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v148 + 8))(v121, v149);
    int v107 = v144;
  }
  else
  {
    unint64_t v108 = *(void (**)(char *, uint64_t))(v132 + 8);
    uint64_t v142 = (char *)((v132 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    v108(v131, v83);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v133, v130);
    uint64_t v146 = (char *)v108;
    v108(v84, v83);

    (*(void (**)(char *, uint64_t))(v148 + 8))(v121, v149);
    int v107 = v144;
    os_log_type_t v106 = v152;
  }
  uint64_t v109 = sub_1001BF970();
  uint64_t v110 = v126;
  sub_1002C1D6C(v126);
  unint64_t v111 = v136;
  uint64_t v112 = v134;
  uint64_t v113 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)v109 + 672))(v136, v134, v110);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v110, v128);
  uint64_t aBlock = v113;
  uint64_t v114 = swift_allocObject();
  swift_weakInit();
  uint64_t v115 = v130;
  v147(v107, v106, v130);
  uint64_t v116 = v150;
  unint64_t v117 = (*(unsigned __int8 *)(v150 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
  uint64_t v118 = swift_allocObject();
  *(void *)(v118 + 16) = v114;
  (*(void (**)(unint64_t, char *, uint64_t))(v116 + 32))(v118 + v117, v107, v115);
  uint64_t v119 = sub_100013A80(&qword_100478F20);
  uint64_t v120 = sub_1000155BC(&qword_100478F28, &qword_100478F20);
  sub_100185438((uint64_t)sub_1001E0114, v118, v119, v120);
  swift_release();
  swift_release();
  swift_release();
  ((void (*)(char *, uint64_t))v146)(v111, v139);
  return (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v112, v137);
}

uint64_t sub_1001CBE44(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v66 = a1;
  uint64_t v67 = a3;
  v56[1] = *v4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v64 = v7;
  __chkstk_darwin(v7);
  unint64_t v61 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for DispatchQoS();
  uint64_t v59 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  __chkstk_darwin(v10);
  uint64_t v65 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RoutingMode();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (void *)((char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = (void *)*sub_100266CC0();
  if (a4)
  {
    uint64_t v64 = v13;
    uint64_t v21 = v12;
    void *v19 = v20;
    (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
    id v22 = v20;
    uint64_t v23 = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
    if ((v23 & 1) == 0) {
      goto LABEL_20;
    }
    unint64_t v24 = (unint64_t)sub_1001BF738();
    uint64_t v23 = v24;
    if (v24 >> 62)
    {
LABEL_21:
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v26 = v21;
      if (v25) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v21;
      if (v25)
      {
LABEL_5:
        uint64_t v27 = 4;
        do
        {
          uint64_t v28 = v27 - 4;
          if ((v23 & 0xC000000000000001) != 0)
          {
            uint64_t v29 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v30 = __OFADD__(v28, 1);
            uint64_t v21 = v27 - 3;
            if (v30) {
              goto LABEL_19;
            }
          }
          else
          {
            uint64_t v29 = *(void *)(v23 + 8 * v27);
            swift_retain();
            BOOL v30 = __OFADD__(v28, 1);
            uint64_t v21 = v27 - 3;
            if (v30)
            {
LABEL_19:
              __break(1u);
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
          }
          if (*(void *)(v29
                         + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient) == a2)
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v54 = v64;
            (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v15, v66, v26);
            uint64_t v55 = v29
                + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_routingMode;
            swift_beginAccess();
            (*(void (**)(uint64_t, char *, uint64_t))(v54 + 40))(v55, v15, v26);
            swift_endAccess();
            sub_1001CDF38();
            return swift_release();
          }
          swift_release();
          ++v27;
        }
        while (v21 != v25);
      }
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v31 = sub_1001A69C4();
    uint64_t v33 = v57;
    uint64_t v32 = v58;
    BOOL v34 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v65, v31, v58);
    swift_unknownObjectRetain_n();
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      id v69 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v38 = _typeName(_:qualified:)();
      uint64_t aBlock = sub_10018A9E0(v38, v39, (uint64_t *)&v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t aBlock = a2;
      uint64_t v71 = v67;
      swift_unknownObjectRetain();
      sub_100013A80(&qword_100478ED0);
      uint64_t v40 = String.init<A>(describing:)();
      uint64_t aBlock = sub_10018A9E0(v40, v41, (uint64_t *)&v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[%s] setRoutingMode - No internal client found matching client: %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v65, v32);
    }
    else
    {

      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v66, v12);
    unint64_t v43 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v68;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v44 + v43, v15, v12);
    uint64_t v45 = (uint64_t *)(v44 + ((v14 + v43 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v46 = v67;
    uint64_t *v45 = a2;
    v45[1] = v46;
    uint64_t v74 = sub_1001E0398;
    uint64_t v75 = v44;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v71 = 1107296256;
    uint64_t v72 = sub_100006760;
    uint64_t v73 = &unk_1004217B0;
    uint64_t v47 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    id v48 = v20;
    uint64_t v49 = v59;
    id v50 = v48;
    swift_retain();
    uint64_t v51 = v60;
    static DispatchQoS.unspecified.getter();
    id v69 = _swiftEmptyArrayStorage;
    sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v52 = v61;
    uint64_t v53 = v64;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v52, v53);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v62);
    return swift_release();
  }
}

uint64_t sub_1001CC6E4(int a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v56 = a3;
  int v55 = a1;
  uint64_t v48 = *v4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v53 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v49 = v13;
  uint64_t v50 = v14;
  __chkstk_darwin(v13);
  uint64_t v54 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = (void *)*sub_100266CC0();
  if (a4)
  {
    void *v19 = v20;
    (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
    id v21 = v20;
    uint64_t v22 = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
    if ((v22 & 1) == 0) {
      goto LABEL_20;
    }
    unint64_t v23 = (unint64_t)sub_1001BF738();
    uint64_t v22 = v23;
    if (v23 >> 62)
    {
LABEL_21:
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v25 = v50;
      if (v24) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = v50;
      if (v24)
      {
LABEL_5:
        uint64_t v26 = 4;
        do
        {
          uint64_t v27 = v26 - 4;
          if ((v22 & 0xC000000000000001) != 0)
          {
            uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v29 = __OFADD__(v27, 1);
            uint64_t v30 = v26 - 3;
            if (v29) {
              goto LABEL_19;
            }
          }
          else
          {
            uint64_t v28 = *(void *)(v22 + 8 * v26);
            swift_retain();
            BOOL v29 = __OFADD__(v27, 1);
            uint64_t v30 = v26 - 3;
            if (v29)
            {
LABEL_19:
              __break(1u);
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
          }
          if (*(void *)(v28
                         + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient) == a2)
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v46 = *(void *)(v28
                            + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context);
            char v47 = *(unsigned char *)(v46 + 16);
            *(unsigned char *)(v46 + 16) = v55 & 1;
            swift_retain();
            sub_1001BDBFC(v47);
            swift_release();
            sub_1001CF640(v28);
            return swift_release();
          }
          swift_release();
          ++v26;
        }
        while (v30 != v24);
      }
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v31 = sub_1001A69C4();
    uint64_t v32 = v54;
    uint64_t v33 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v54, v31, v49);
    swift_unknownObjectRetain_n();
    BOOL v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v57 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136315394;
      uint64_t v37 = _typeName(_:qualified:)();
      uint64_t aBlock = sub_10018A9E0(v37, v38, (uint64_t *)&v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t aBlock = a2;
      uint64_t v59 = v56;
      swift_unknownObjectRetain();
      sub_100013A80(&qword_100478ED0);
      uint64_t v39 = String.init<A>(describing:)();
      uint64_t aBlock = sub_10018A9E0(v39, v40, (uint64_t *)&v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%s] setUIPresented - No internal client found matching client: %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v54, v33);
    }
    else
    {

      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v32, v33);
    }
  }
  else
  {
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v4;
    *(unsigned char *)(v42 + 24) = v55 & 1;
    uint64_t v43 = v56;
    *(void *)(v42 + 32) = a2;
    *(void *)(v42 + 40) = v43;
    uint64_t v62 = sub_1001E04C0;
    uint64_t v63 = v42;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v59 = 1107296256;
    uint64_t v60 = sub_100006760;
    unint64_t v61 = &unk_100421800;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    id v45 = v20;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v57 = _swiftEmptyArrayStorage;
    sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v52);
    return swift_release();
  }
}

uint64_t sub_1001CCE6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v56 = a1;
  uint64_t v57 = a3;
  uint64_t v49 = *v4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v54 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  uint64_t v51 = v14;
  __chkstk_darwin(v13);
  int v55 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = (void *)*sub_100266CC0();
  if (a4)
  {
    void *v19 = v20;
    (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
    id v21 = v20;
    uint64_t v22 = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
    if ((v22 & 1) == 0) {
      goto LABEL_20;
    }
    unint64_t v23 = (unint64_t)sub_1001BF738();
    uint64_t v22 = v23;
    if (v23 >> 62)
    {
LABEL_21:
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v25 = v51;
      if (v24) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = v51;
      if (v24)
      {
LABEL_5:
        uint64_t v26 = 4;
        do
        {
          uint64_t v27 = v26 - 4;
          if ((v22 & 0xC000000000000001) != 0)
          {
            uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v29 = __OFADD__(v27, 1);
            uint64_t v30 = v26 - 3;
            if (v29) {
              goto LABEL_19;
            }
          }
          else
          {
            uint64_t v28 = *(void *)(v22 + 8 * v26);
            swift_retain();
            BOOL v29 = __OFADD__(v27, 1);
            uint64_t v30 = v26 - 3;
            if (v29)
            {
LABEL_19:
              __break(1u);
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
          }
          if (*(void *)(v28
                         + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient) == a2)
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v47 = *(void *)(v28
                            + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context);
            uint64_t v48 = *(void *)(v47 + 24);
            *(void *)(v47 + 24) = v56;
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1001BE0D4(v48);
            swift_release();
            swift_bridgeObjectRelease();
            sub_1001CF640(v28);
            return swift_release();
          }
          swift_release();
          ++v26;
        }
        while (v30 != v24);
      }
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v31 = sub_1001A69C4();
    uint64_t v32 = v55;
    uint64_t v33 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v55, v31, v50);
    swift_unknownObjectRetain_n();
    BOOL v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v58 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136315394;
      uint64_t v37 = _typeName(_:qualified:)();
      uint64_t aBlock = sub_10018A9E0(v37, v38, (uint64_t *)&v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t aBlock = a2;
      uint64_t v60 = v57;
      swift_unknownObjectRetain();
      sub_100013A80(&qword_100478ED0);
      uint64_t v39 = String.init<A>(describing:)();
      uint64_t aBlock = sub_10018A9E0(v39, v40, (uint64_t *)&v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%s] setExpandedSessionIdentifiers - No internal client found matching client: %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v55, v33);
    }
    else
    {

      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v32, v33);
    }
  }
  else
  {
    uint64_t v42 = (void *)swift_allocObject();
    uint64_t v44 = v56;
    uint64_t v43 = v57;
    v42[2] = v4;
    v42[3] = v44;
    v42[4] = a2;
    v42[5] = v43;
    uint64_t v63 = sub_1001E0564;
    uint64_t v64 = v42;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v60 = 1107296256;
    unint64_t v61 = sub_100006760;
    uint64_t v62 = &unk_100421850;
    id v45 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v46 = v20;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v58 = _swiftEmptyArrayStorage;
    sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v53);
    return swift_release();
  }
}

uint64_t sub_1001CD5F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100013A80(&qword_100478278);
  __chkstk_darwin(v2 - 8);
  uint64_t v60 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v5 = *(void (***)(char *, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v59 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100013A80((uint64_t *)&unk_10047BF40);
  uint64_t v7 = *(char **)(v63 - 8);
  __chkstk_darwin(v63 - 8);
  uint64_t v58 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void (*)(char *, uint64_t))type metadata accessor for Logger();
  uint64_t v10 = *((void *)v9 - 1);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, void (*)(char *, uint64_t)))(v10 + 16))(v12, v13, v9);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v64 = v4;
  int v55 = v5;
  if (v16)
  {
    uint64_t v62 = v9;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    id v66 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    unint64_t v61 = (void (**)(char *, uint64_t))(v17 + 4);
    uint64_t v18 = _typeName(_:qualified:)();
    uint64_t v65 = sub_10018A9E0(v18, v19, (uint64_t *)&v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%s] installNotificationObservers", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v55;
    swift_slowDealloc();

    uint64_t result = (*(uint64_t (**)(char *, id))(v10 + 8))(v12, v62);
  }
  else
  {

    uint64_t result = (*(uint64_t (**)(char *, void *))(v10 + 8))(v12, v9);
  }
  if (qword_10047EE70 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v21 = qword_10047EE78;
  uint64_t v22 = *(void *)(qword_10047EE78 + 16);
  unint64_t v23 = &selRef_anyObject;
  if (v22)
  {
    uint64_t v24 = (void (*)(char *, uint64_t))self;
    unint64_t v61 = v5 + 1;
    uint64_t v62 = v24;
    uint64_t v56 = v7;
    uint64_t v57 = (void (**)(char *, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v54 = (void (**)(char *, uint64_t))v21;
    uint64_t v25 = v21 + 40;
    uint64_t v27 = v59;
    uint64_t v26 = (uint64_t)v60;
    uint64_t v28 = v58;
    do
    {
      swift_bridgeObjectRetain();
      id v29 = [v62 defaultCenter];
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSNotificationCenter.publisher(for:object:)();

      uint64_t v31 = (void *)*sub_100266CC0();
      id v66 = v31;
      uint64_t v32 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v26, 1, 1, v32);
      sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
      sub_100015AE0((unint64_t *)&unk_10047BF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      sub_1001BB4CC();
      id v33 = v31;
      uint64_t v34 = v64;
      Publisher.receive<A>(on:options:)();
      sub_100009A08(v26, &qword_100478278);

      (*v61)(v27, v34);
      swift_allocObject();
      swift_weakInit();
      sub_1000155BC((unint64_t *)&qword_10047BF60, (uint64_t *)&unk_10047BF40);
      uint64_t v35 = v63;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*v57)(v28, v35);
      id v66 = sub_1001BF50C();
      AnyCancellable.store(in:)();
      unint64_t v23 = &selRef_anyObject;
      swift_release();
      *(void *)(v1 + 16) = v66;
      swift_bridgeObjectRelease();
      v25 += 16;
      --v22;
    }
    while (v22);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v5 = v55;
    uint64_t v7 = v56;
  }
  if (qword_10047EE80 != -1) {
    uint64_t result = swift_once();
  }
  unint64_t v61 = (void (**)(char *, uint64_t))qword_10047EE88;
  uint64_t v36 = *(void *)(qword_10047EE88 + 16);
  if (v36)
  {
    uint64_t v57 = (void (**)(char *, uint64_t))self;
    uint64_t v37 = (char *)self;
    int v55 = v5 + 1;
    uint64_t v56 = v37;
    uint64_t v54 = (void (**)(char *, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v38 = 0;
    unint64_t v40 = v59;
    uint64_t v39 = (uint64_t)v60;
    unint64_t v41 = v58;
    do
    {
      uint64_t v42 = v61[v38++ + 4];
      uint64_t v62 = v42;
      id v43 = [v57 v23[395]];
      id v44 = [v56 sharedLocalEndpoint];
      NSNotificationCenter.publisher(for:object:)();

      uint64_t v45 = v1;
      uint64_t v46 = v36;
      uint64_t v47 = (void *)*sub_100266CC0();
      id v66 = v47;
      uint64_t v48 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v39, 1, 1, v48);
      sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
      sub_100015AE0((unint64_t *)&unk_10047BF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      sub_1001BB4CC();
      id v49 = v47;
      uint64_t v50 = v64;
      Publisher.receive<A>(on:options:)();
      sub_100009A08(v39, &qword_100478278);

      uint64_t v51 = v50;
      uint64_t v36 = v46;
      uint64_t v1 = v45;
      (*v55)(v40, v51);
      swift_allocObject();
      swift_weakInit();
      sub_1000155BC((unint64_t *)&qword_10047BF60, (uint64_t *)&unk_10047BF40);
      uint64_t v52 = v63;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*v54)(v41, v52);
      id v66 = sub_1001BF50C();
      AnyCancellable.store(in:)();
      swift_release();
      *(void *)(v1 + 16) = v66;

      unint64_t v23 = &selRef_anyObject;
      swift_bridgeObjectRelease();
    }
    while (v36 != v38);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001CDF38()
{
  uint64_t v100 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v102 = *(void *)(v100 - 8);
  uint64_t v1 = __chkstk_darwin(v100);
  uint64_t v99 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v98 = (char *)&v75 - v3;
  uint64_t v77 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v4 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  unint64_t v97 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoutingMode();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v75 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  BOOL v16 = (char *)&v75 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v75 - v17;
  uint64_t v78 = sub_1001BF970();
  uint64_t v19 = v7 + 104;
  uint64_t v20 = *(void (**)(char *))(v7 + 104);
  unint64_t v101 = v16;
  unsigned int v80 = enum case for RoutingMode.disabled(_:);
  uint64_t v104 = v6;
  v20(v16);
  uint64_t v103 = v0;
  unint64_t v21 = (unint64_t)sub_1001BF738();
  unint64_t v22 = v21;
  if (v21 >> 62) {
LABEL_34:
  }
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  else {
    uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v88 = v13;
  uint64_t v79 = v7;
  if (v23)
  {
    uint64_t v75 = v18;
    uint64_t v76 = v4;
    unint64_t v86 = v22 & 0xC000000000000001;
    unsigned int v87 = enum case for RoutingMode.detailed(_:);
    uint64_t v89 = (void (**)(char *, uint64_t))(v7 + 8);
    v7 += 16;
    unsigned int v90 = enum case for RoutingMode.localNetwork(_:);
    unsigned int v91 = enum case for RoutingMode.prewarm(_:);
    uint64_t v24 = 4;
    uint64_t v83 = v10;
    unint64_t v85 = v22;
    uint64_t v82 = v23;
    uint64_t v81 = v7;
    uint64_t v84 = v19;
    while (1)
    {
      uint64_t v18 = (char *)(v24 - 4);
      if (v86)
      {
        uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        int64_t v27 = v24 - 3;
        if (__OFADD__(v18, 1)) {
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v26 = swift_retain();
        int64_t v27 = v24 - 3;
        if (__OFADD__(v18, 1))
        {
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
      }
      int64_t v94 = v27;
      uint64_t v95 = v24;
      uint64_t v96 = v26;
      uint64_t v28 = v26
          + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_routingMode;
      swift_beginAccess();
      id v29 = *(void (**)(char *, uint64_t, uint64_t))v7;
      NSString v30 = v13;
      uint64_t v31 = v13;
      uint64_t v32 = v104;
      (*(void (**)(char *, uint64_t, uint64_t))v7)(v30, v28, v104);
      ((void (*)(char *, void, uint64_t))v20)(v10, v87, v32);
      char v33 = static RoutingMode.== infix(_:_:)();
      uint64_t v34 = *v89;
      (*v89)(v10, v32);
      v34(v31, v32);
      if (v33)
      {
        swift_bridgeObjectRelease();
        swift_release();
        id v43 = v101;
        v34((char *)v101, v32);
        ((void (*)(void *, void, uint64_t))v20)(v43, v87, v32);
        uint64_t v7 = v79;
        uint64_t v4 = v76;
        uint64_t v18 = v75;
        goto LABEL_24;
      }
      uint64_t v92 = v28;
      uint64_t v93 = v29;
      v29(v31, v28, v32);
      uint64_t v4 = v84;
      ((void (*)(char *, void, uint64_t))v20)(v10, v90, v32);
      char v35 = static RoutingMode.== infix(_:_:)();
      v34(v10, v32);
      v34(v31, v32);
      if (v35)
      {
        ((void (*)(char *, void, uint64_t))v20)(v31, v91, v32);
        char v36 = static RoutingMode.== infix(_:_:)();
        v34(v31, v32);
        if ((v36 & 1) != 0
          || (((void (*)(char *, void, uint64_t))v20)(v31, v80, v32),
              char v37 = static RoutingMode.== infix(_:_:)(),
              v34(v31, v32),
              (v37 & 1) != 0))
        {
          uint64_t v38 = v101;
          v34((char *)v101, v32);
          ((void (*)(void *, void, uint64_t))v20)(v38, v90, v32);
        }
      }
      uint64_t v7 = v81;
      v93(v31, v92, v32);
      uint64_t v10 = v83;
      ((void (*)(char *, void, uint64_t))v20)(v83, v91, v32);
      char v39 = static RoutingMode.== infix(_:_:)();
      v34(v10, v32);
      v34(v31, v32);
      uint64_t v19 = v4;
      if (v39)
      {
        ((void (*)(char *, void, uint64_t))v20)(v31, v80, v32);
        char v40 = static RoutingMode.== infix(_:_:)();
        swift_release();
        v34(v31, v32);
        uint64_t v25 = v82;
        if (v40)
        {
          unint64_t v41 = v101;
          uint64_t v42 = v104;
          v34((char *)v101, v104);
          ((void (*)(void *, void, uint64_t))v20)(v41, v91, v42);
        }
      }
      else
      {
        swift_release();
        uint64_t v25 = v82;
      }
      uint64_t v24 = v95 + 1;
      unint64_t v22 = v85;
      uint64_t v13 = v88;
      if (v94 == v25)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v79;
        uint64_t v4 = v76;
        uint64_t v18 = v75;
        goto LABEL_23;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_23:
  uint64_t v32 = v104;
LABEL_24:
  (*(void (**)(char *, void *, uint64_t))(v7 + 32))(v18, v101, v32);
  (*(void (**)(char *))(*(void *)v78 + 312))(v18);
  swift_release();
  unint64_t v44 = (unint64_t)sub_1001BF738();
  unint64_t v45 = v44;
  os_log_t v105 = &_swiftEmptySetSingleton;
  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v46 = result;
    if (result) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v46 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v46)
    {
LABEL_26:
      if (v46 < 1) {
        goto LABEL_60;
      }
      uint64_t v48 = 0;
      unint64_t v101 = (void *)v45;
      unint64_t v49 = v45 & 0xC000000000000001;
      uint64_t v50 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v51 = (void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v52 = v77;
      uint64_t v53 = v88;
      do
      {
        if (v49)
        {
          uint64_t v54 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v54 = v101[v48 + 4];
          swift_retain();
        }
        ++v48;
        int v55 = v97;
        (*v50)(v97, v54+ OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v52);
        uint64_t v56 = RoutingSessionConfiguration.itemTypes.getter();
        (*v51)(v55, v52);
        sub_1001CF388(v56);
        swift_release();
      }
      while (v46 != v48);
      uint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v57 = v105;
      uint64_t v7 = v79;
      goto LABEL_37;
    }
  }
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v57 = &_swiftEmptySetSingleton;
  uint64_t v53 = v88;
LABEL_37:
  int64_t v58 = 0;
  unint64_t v101 = v57;
  uint64_t v60 = (void (*)(char *, uint64_t, uint64_t))(v57 + 7);
  uint64_t v59 = v57[7];
  uint64_t v93 = v60;
  uint64_t v61 = 1 << *((unsigned char *)v60 - 24);
  uint64_t v62 = -1;
  if (v61 < 64) {
    uint64_t v62 = ~(-1 << v61);
  }
  unint64_t v63 = v62 & v59;
  uint64_t v96 = v102 + 32;
  unint64_t v97 = (char *)(v102 + 16);
  uint64_t v64 = (void (**)(char *, uint64_t))(v7 + 8);
  int64_t v94 = (unint64_t)(v61 + 63) >> 6;
  uint64_t v95 = v102 + 8;
  uint64_t v65 = v102;
  id v66 = v99;
  for (i = v100; ; uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v66, i))
  {
    if (v63)
    {
      unint64_t v68 = __clz(__rbit64(v63));
      v63 &= v63 - 1;
      unint64_t v69 = v68 | (v58 << 6);
      goto LABEL_41;
    }
    int64_t v72 = v58 + 1;
    if (__OFADD__(v58, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    if (v72 >= v94) {
      return swift_release();
    }
    unint64_t v73 = *((void *)v93 + v72);
    ++v58;
    if (!v73)
    {
      int64_t v58 = v72 + 1;
      if (v72 + 1 >= v94) {
        return swift_release();
      }
      unint64_t v73 = *((void *)v93 + v58);
      if (!v73)
      {
        int64_t v58 = v72 + 2;
        if (v72 + 2 >= v94) {
          return swift_release();
        }
        unint64_t v73 = *((void *)v93 + v58);
        if (!v73) {
          break;
        }
      }
    }
LABEL_56:
    unint64_t v63 = (v73 - 1) & v73;
    unint64_t v69 = __clz(__rbit64(v73)) + (v58 << 6);
LABEL_41:
    os_log_t v70 = v98;
    (*(void (**)(char *, unint64_t, uint64_t))(v65 + 16))(v98, v101[6] + *(void *)(v65 + 72) * v69, i);
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v66, v70, i);
    uint64_t v71 = sub_1001BF970();
    __chkstk_darwin(v71);
    *(&v75 - 2) = v66;
    sub_1001CEDD0((uint64_t)sub_1001E6A30, (void (**)(unsigned char *, uint64_t, uint64_t))&v75 - 4, v53);
    (*(void (**)(char *, char *))(*(void *)v71 + 664))(v53, v66);
    swift_release();
    (*v64)(v53, v104);
  }
  int64_t v74 = v72 + 3;
  if (v74 >= v94) {
    return swift_release();
  }
  unint64_t v73 = *((void *)v93 + v74);
  if (v73)
  {
    int64_t v58 = v74;
    goto LABEL_56;
  }
  while (1)
  {
    int64_t v58 = v74 + 1;
    if (__OFADD__(v74, 1)) {
      break;
    }
    if (v58 >= v94) {
      return swift_release();
    }
    unint64_t v73 = *((void *)v93 + v58);
    ++v74;
    if (v73) {
      goto LABEL_56;
    }
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_1001CEAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v4);
  uint64_t v8 = RoutingSessionConfiguration.itemTypes.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  LOBYTE(a2) = sub_1001CEBBC(a2, v8);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_1001CEBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_100015AE0(&qword_100479510, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType), uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(), v8 = -1 << *(unsigned char *)(a2 + 32), v9 = v7 & ~v8, v10 = a2 + 56, ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_100015AE0(&qword_100479518, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1001CEDD0@<X0>(uint64_t a1@<X0>, void (**a2)(unsigned char *, uint64_t, uint64_t)@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for RoutingMode();
  uint64_t v7 = *(void (***)(void, void))(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v48 = &v42[-v11];
  uint64_t v12 = (void (*)(void))v7[13];
  uint64_t v56 = a3;
  unsigned int v43 = enum case for RoutingMode.disabled(_:);
  uint64_t v49 = v13;
  uint64_t v50 = (uint64_t (*)(uint64_t, void, uint64_t))v12;
  uint64_t v62 = v7 + 13;
  v12(a3);
  unint64_t v14 = (unint64_t)sub_1001BF738();
  unint64_t v15 = v14;
  if (v14 >> 62)
  {
LABEL_24:
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if (v16) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16)
    {
LABEL_3:
      uint64_t v59 = (uint64_t (*)(uint64_t))a1;
      uint64_t v60 = a2;
      int64_t v58 = v10;
      unint64_t v17 = v15 & 0xC000000000000001;
      a2 = (void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 2);
      unsigned int v47 = enum case for RoutingMode.detailed(_:);
      ++v7;
      unsigned int v51 = enum case for RoutingMode.localNetwork(_:);
      unsigned int v52 = enum case for RoutingMode.prewarm(_:);
      a1 = 4;
      unint64_t v63 = a2;
      uint64_t v45 = v16;
      unint64_t v46 = v15;
      unint64_t v44 = v15 & 0xC000000000000001;
      while (1)
      {
        uint64_t v18 = a1 - 4;
        if (v17)
        {
          uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v10 = (unsigned char *)(a1 - 3);
          if (__OFADD__(v18, 1)) {
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v19 = *(void *)(v15 + 8 * a1);
          swift_retain();
          uint64_t v10 = (unsigned char *)(a1 - 3);
          if (__OFADD__(v18, 1))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
        }
        if (v59(v19))
        {
          uint64_t v55 = a1;
          uint64_t v61 = v10;
          uint64_t v57 = v19;
          uint64_t v20 = v19
              + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_routingMode;
          swift_beginAccess();
          unint64_t v21 = *a2;
          unint64_t v22 = v48;
          uint64_t v23 = v49;
          (*a2)(v48, v20, v49);
          uint64_t v24 = (void (**)(unsigned char *, uint64_t))v7;
          uint64_t v25 = v58;
          uint64_t v26 = v50;
          v50((uint64_t)v58, v47, v23);
          char v27 = static RoutingMode.== infix(_:_:)();
          uint64_t v28 = *v24;
          (*v24)(v25, v23);
          v28(v22, v23);
          if (v27)
          {
            swift_bridgeObjectRelease();
            swift_release();
            char v40 = v56;
            v28(v56, v23);
            return v26((uint64_t)v40, v47, v23);
          }
          uint64_t v53 = v21;
          uint64_t v54 = v20;
          v21(v22, v20, v23);
          v26((uint64_t)v25, v51, v23);
          char v29 = static RoutingMode.== infix(_:_:)();
          v28(v25, v23);
          v28(v22, v23);
          if (v29)
          {
            v26((uint64_t)v22, v52, v23);
            char v30 = static RoutingMode.== infix(_:_:)();
            v28(v22, v23);
            if ((v30 & 1) != 0
              || (v26((uint64_t)v22, v43, v23), char v31 = static RoutingMode.== infix(_:_:)(), v28(v22, v23), (v31 & 1) != 0))
            {
              uint64_t v32 = v56;
              v28(v56, v23);
              v26((uint64_t)v32, v51, v23);
            }
          }
          v53(v22, v54, v23);
          char v33 = v58;
          v26((uint64_t)v58, v52, v23);
          char v34 = static RoutingMode.== infix(_:_:)();
          char v35 = v33;
          uint64_t v7 = (void (**)(void, void))v24;
          v28(v35, v23);
          v28(v22, v23);
          if (v34)
          {
            v26((uint64_t)v22, v43, v23);
            char v36 = static RoutingMode.== infix(_:_:)();
            swift_release();
            v28(v22, v23);
            uint64_t v16 = v45;
            unint64_t v15 = v46;
            unint64_t v17 = v44;
            uint64_t v10 = v61;
            a1 = v55;
            if (v36)
            {
              char v37 = v56;
              uint64_t v38 = v49;
              v28(v56, v49);
              uint64_t v39 = v38;
              uint64_t v10 = v61;
              v50((uint64_t)v37, v52, v39);
            }
          }
          else
          {
            swift_release();
            uint64_t v16 = v45;
            unint64_t v15 = v46;
            unint64_t v17 = v44;
            uint64_t v10 = v61;
            a1 = v55;
          }
        }
        else
        {
          swift_release();
        }
        ++a1;
        a2 = v63;
        if (v10 == (unsigned char *)v16) {
          return swift_bridgeObjectRelease();
        }
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001CF388(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v25 - v11;
  int64_t v13 = 0;
  uint64_t v28 = a1;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v15 = a1 + 56;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 24);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v25 = v15;
  int64_t v26 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v27 = v3 + 16;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v26) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v25 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v26) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v25 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v26) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v25 + 8 * v13);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v19 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(void *)(v28 + 48) + *(void *)(v3 + 72) * v21, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_1001E17F8((uint64_t)v9, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1001CF640(uint64_t a1)
{
  uint64_t v173 = *v1;
  uint64_t v3 = type metadata accessor for HostedRoutingSession(0);
  uint64_t v164 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v147 = (uint64_t *)((char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v148 = (uint64_t)&v146 - v6;
  uint64_t v157 = sub_100013A80(&qword_100479528);
  __chkstk_darwin(v157);
  uint64_t v160 = (char *)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100013A80(&qword_100479530);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v152 = (uint64_t)&v146 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v158 = (char *)&v146 - v15;
  __chkstk_darwin(v14);
  uint64_t v159 = (char *)&v146 - v16;
  uint64_t v171 = sub_100013A80(&qword_100479538);
  __chkstk_darwin(v171);
  uint64_t v174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_100013A80(&qword_10047D120);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v149 = (uint64_t)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v162 = (uint64_t)&v146 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v156 = (char *)&v146 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v151 = (uint64_t)&v146 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v155 = (uint64_t)&v146 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v153 = (uint64_t)&v146 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  char v33 = (char *)&v146 - v32;
  __chkstk_darwin(v31);
  uint64_t v181 = (uint64_t)&v146 - v34;
  uint64_t v177 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  uint64_t v180 = *(void *)(v177 - 8);
  uint64_t v35 = __chkstk_darwin(v177);
  uint64_t v161 = (uint64_t)&v146 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v154 = (uint64_t)&v146 - v38;
  __chkstk_darwin(v37);
  char v40 = (char *)&v146 - v39;
  uint64_t v41 = type metadata accessor for Logger();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v165 = (char *)&v146 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v172 = (char *)&v146 - v46;
  __chkstk_darwin(v45);
  uint64_t v48 = (char *)&v146 - v47;
  uint64_t v49 = sub_1001A69C4();
  uint64_t v178 = v42;
  uint64_t v50 = *(void (**)(void))(v42 + 16);
  uint64_t v169 = v49;
  uint64_t v170 = v42 + 16;
  uint64_t v168 = v50;
  ((void (*)(char *))v50)(v48);
  swift_retain_n();
  unsigned int v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.debug.getter();
  BOOL v53 = os_log_type_enabled(v51, v52);
  uint64_t v176 = v40;
  uint64_t v166 = v3;
  uint64_t v150 = v11;
  uint64_t v175 = v41;
  if (v53)
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v167 = (void (*)(char *, uint64_t))swift_slowAlloc();
    uint64_t v182 = (uint64_t)v167;
    *(_DWORD *)uint64_t v54 = 136315394;
    uint64_t v55 = _typeName(_:qualified:)();
    uint64_t v56 = a1;
    unint64_t v163 = v33;
    Swift::Int v183 = sub_10018A9E0(v55, v57, &v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2080;
    swift_retain();
    uint64_t v58 = sub_1001BEE28();
    unint64_t v60 = v59;
    swift_release();
    Swift::Int v183 = sub_10018A9E0(v58, v60, &v182);
    char v33 = v163;
    a1 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    char v40 = v176;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "[%s] reloadSnapshot - Reload for: %s", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v167 = *(void (**)(char *, uint64_t))(v178 + 8);
  v167(v48, v41);
  sub_1001D0D94(a1, (uint64_t)v40);
  swift_retain();
  uint64_t v61 = sub_1001BF780();
  uint64_t v62 = v177;
  unint64_t v63 = (void *)v180;
  uint64_t v64 = v172;
  uint64_t v65 = v174;
  if (v61[2] && (unint64_t v66 = sub_1001DE0AC(a1), (v67 & 1) != 0))
  {
    uint64_t v68 = v181;
    sub_1001E6EAC(v61[7] + v63[9] * v66, v181, type metadata accessor for HostedRoutingSessionSnapshot);
    unint64_t v69 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v63[7];
    uint64_t v70 = v68;
    unint64_t v71 = (unint64_t)(v63 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v69(v70, 0, 1, v62);
  }
  else
  {
    unint64_t v69 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v63[7];
    unint64_t v71 = (unint64_t)(v63 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v69(v181, 1, 1, v62);
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_1001E6EAC((uint64_t)v40, (uint64_t)v33, type metadata accessor for HostedRoutingSessionSnapshot);
  unint64_t v163 = (char *)v71;
  v69((uint64_t)v33, 0, 1, v62);
  uint64_t v72 = (uint64_t)v65 + *(int *)(v171 + 48);
  sub_1001E71E8((uint64_t)v33, (uint64_t)v65, &qword_10047D120);
  sub_1001E71E8(v181, v72, &qword_10047D120);
  uint64_t v75 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v63[6];
  int64_t v74 = v63 + 6;
  unint64_t v73 = v75;
  if (v75((uint64_t)v65, 1, v62) == 1)
  {
    sub_100009A08((uint64_t)v33, &qword_10047D120);
    if (v73(v72, 1, v62) == 1)
    {
      sub_100009A08((uint64_t)v174, &qword_10047D120);
LABEL_35:
      sub_100009A08(v181, &qword_10047D120);
      return sub_1001E6F14((uint64_t)v40, type metadata accessor for HostedRoutingSessionSnapshot);
    }
    goto LABEL_13;
  }
  uint64_t v180 = (uint64_t)v69;
  uint64_t v76 = (uint64_t)v33;
  uint64_t v77 = v153;
  sub_1001E71E8((uint64_t)v65, v153, &qword_10047D120);
  if (v73(v72, 1, v62) == 1)
  {
    sub_100009A08(v76, &qword_10047D120);
    sub_1001E6F14(v77, type metadata accessor for HostedRoutingSessionSnapshot);
    unint64_t v69 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v180;
LABEL_13:
    uint64_t v171 = (uint64_t)v73;
    sub_100009A08((uint64_t)v174, &qword_100479538);
    goto LABEL_15;
  }
  uint64_t v171 = (uint64_t)v73;
  uint64_t v78 = v154;
  sub_1001E6FE8(v72, v154, type metadata accessor for HostedRoutingSessionSnapshot);
  sub_100015AE0(&qword_100479508, (void (*)(uint64_t))type metadata accessor for HostedRoutingSessionSnapshot);
  char v79 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v80 = v78;
  uint64_t v64 = v172;
  sub_1001E6F14(v80, type metadata accessor for HostedRoutingSessionSnapshot);
  sub_100009A08(v76, &qword_10047D120);
  sub_1001E6F14(v77, type metadata accessor for HostedRoutingSessionSnapshot);
  uint64_t v62 = v177;
  sub_100009A08((uint64_t)v65, &qword_10047D120);
  unint64_t v69 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v180;
  if (v79) {
    goto LABEL_35;
  }
LABEL_15:
  uint64_t v180 = (uint64_t)v74;
  uint64_t v81 = v175;
  ((void (*)(char *, uint64_t, uint64_t))v168)(v64, v169, v175);
  swift_retain_n();
  uint64_t v82 = Logger.logObject.getter();
  os_log_type_t v83 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = swift_slowAlloc();
    uint64_t v182 = swift_slowAlloc();
    *(_DWORD *)uint64_t v84 = 136315394;
    uint64_t v85 = _typeName(_:qualified:)();
    Swift::Int v183 = sub_10018A9E0(v85, v86, &v182);
    uint64_t v87 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v84 + 12) = 2080;
    swift_retain();
    uint64_t v88 = sub_1001BEE28();
    unint64_t v90 = v89;
    swift_release();
    Swift::Int v183 = sub_10018A9E0(v88, v90, &v182);
    a1 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    char v40 = v176;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "[%s] reloadSnapshot - Update snapshot for: %s", (uint8_t *)v84, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v62 = v177;
    swift_slowDealloc();

    unsigned int v91 = v172;
    uint64_t v92 = v175;
  }
  else
  {

    swift_release_n();
    unsigned int v91 = v64;
    uint64_t v92 = v81;
  }
  v167(v91, v92);
  uint64_t v93 = (uint64_t)v160;
  uint64_t v94 = (uint64_t)v159;
  uint64_t v95 = (uint64_t)v158;
  uint64_t v96 = v155;
  sub_1001E6EAC((uint64_t)v40, v155, type metadata accessor for HostedRoutingSessionSnapshot);
  v69(v96, 0, 1, v62);
  swift_retain();
  unint64_t v97 = sub_1001BF780();
  uint64_t v182 = (uint64_t)v97;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v171)(v96, 1, v62) == 1)
  {
    sub_100009A08(v96, &qword_10047D120);
    uint64_t v98 = v151;
    sub_1001DD7BC(a1, v151);
    swift_release();
    sub_100009A08(v98, &qword_10047D120);
    uint64_t v99 = v182;
  }
  else
  {
    uint64_t v100 = v96;
    uint64_t v101 = v154;
    sub_1001E6FE8(v100, v154, type metadata accessor for HostedRoutingSessionSnapshot);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v183 = (Swift::Int)v97;
    sub_1001DF590(v101, a1, isUniquelyReferenced_nonNull_native);
    uint64_t v99 = v183;
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v103 = (uint64_t)v156;
  *(void *)(v179 + 32) = v99;
  swift_bridgeObjectRelease();
  sub_1001E71E8((uint64_t)v40, v94, &qword_100479530);
  sub_1001E71E8(v181, v103, &qword_10047D120);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v171)(v103, 1, v62) == 1)
  {
    sub_100009A08(v103, &qword_10047D120);
    uint64_t v104 = v164;
    uint64_t v105 = v166;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v164 + 56))(v95, 1, 1, v166);
    uint64_t v106 = v157;
  }
  else
  {
    sub_1001E71E8(v103, v95, &qword_100479530);
    sub_1001E6F14(v103, type metadata accessor for HostedRoutingSessionSnapshot);
    uint64_t v106 = v157;
    uint64_t v105 = v166;
    uint64_t v104 = v164;
  }
  uint64_t v107 = v93 + *(int *)(v106 + 48);
  sub_1001E71E8(v94, v93, &qword_100479530);
  sub_1001E71E8(v95, v107, &qword_100479530);
  uint64_t v108 = v104 + 48;
  uint64_t v109 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
  unsigned int v110 = v109(v93, 1, v105);
  uint64_t v179 = v108;
  uint64_t v174 = v109;
  if (v110 == 1)
  {
    sub_100009A08(v95, &qword_100479530);
    sub_100009A08(v94, &qword_100479530);
    unsigned int v111 = v109(v107, 1, v105);
    char v40 = v176;
    if (v111 == 1)
    {
      sub_100009A08(v93, &qword_100479530);
      uint64_t v112 = v161;
      sub_1001E6EAC((uint64_t)v40, v161, type metadata accessor for HostedRoutingSessionSnapshot);
      uint64_t v113 = v162;
      sub_1001E71E8(v181, v162, &qword_10047D120);
      goto LABEL_32;
    }
    goto LABEL_29;
  }
  uint64_t v114 = v152;
  sub_1001E71E8(v93, v152, &qword_100479530);
  if (v109(v107, 1, v105) == 1)
  {
    sub_100009A08(v95, &qword_100479530);
    sub_100009A08(v94, &qword_100479530);
    sub_1001E6F14(v114, type metadata accessor for HostedRoutingSession);
    char v40 = v176;
LABEL_29:
    sub_100009A08(v93, &qword_100479528);
    uint64_t v112 = v161;
    sub_1001E6EAC((uint64_t)v40, v161, type metadata accessor for HostedRoutingSessionSnapshot);
    uint64_t v113 = v162;
    sub_1001E71E8(v181, v162, &qword_10047D120);
LABEL_30:
    sub_100009A08(v113, &qword_10047D120);
    sub_1001E6F14(v112, type metadata accessor for HostedRoutingSessionSnapshot);
    goto LABEL_36;
  }
  uint64_t v115 = v148;
  sub_1001E6FE8(v107, v148, type metadata accessor for HostedRoutingSession);
  sub_100015AE0(&qword_100479540, (void (*)(uint64_t))type metadata accessor for HostedRoutingSession);
  LODWORD(v172) = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_1001E6F14(v115, type metadata accessor for HostedRoutingSession);
  sub_100009A08(v95, &qword_100479530);
  sub_100009A08(v94, &qword_100479530);
  sub_1001E6F14(v114, type metadata accessor for HostedRoutingSession);
  uint64_t v62 = v177;
  sub_100009A08(v93, &qword_100479530);
  char v40 = v176;
  uint64_t v112 = v161;
  sub_1001E6EAC((uint64_t)v176, v161, type metadata accessor for HostedRoutingSessionSnapshot);
  uint64_t v113 = v162;
  sub_1001E71E8(v181, v162, &qword_10047D120);
  if ((v172 & 1) == 0) {
    goto LABEL_30;
  }
LABEL_32:
  uint64_t v116 = v149;
  sub_1001E71E8(v113, v149, &qword_10047D120);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v171)(v116, 1, v62) == 1)
  {
    swift_bridgeObjectRetain();
    sub_100009A08(v116, &qword_10047D120);
    swift_bridgeObjectRetain();
    sub_100009A08(v113, &qword_10047D120);
    sub_1001E6F14(v112, type metadata accessor for HostedRoutingSessionSnapshot);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v117 = *(void *)(v116 + *(int *)(v62 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001E6F14(v116, type metadata accessor for HostedRoutingSessionSnapshot);
    uint64_t v118 = swift_bridgeObjectRetain();
    char v119 = sub_1001DC654(v118, v117);
    swift_bridgeObjectRelease();
    sub_100009A08(v113, &qword_10047D120);
    uint64_t v62 = v177;
    sub_1001E6F14(v112, type metadata accessor for HostedRoutingSessionSnapshot);
    swift_bridgeObjectRelease_n();
    if (v119) {
      goto LABEL_35;
    }
  }
LABEL_36:
  uint64_t v121 = v175;
  uint64_t v122 = v165;
  v168();
  swift_retain_n();
  uint64_t v123 = Logger.logObject.getter();
  os_log_type_t v124 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v123, v124))
  {
    uint64_t v125 = swift_slowAlloc();
    uint64_t v182 = swift_slowAlloc();
    *(_DWORD *)uint64_t v125 = 136315394;
    uint64_t v126 = _typeName(_:qualified:)();
    Swift::Int v183 = sub_10018A9E0(v126, v127, &v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v125 + 12) = 2080;
    swift_retain();
    uint64_t v128 = sub_1001BEE28();
    unint64_t v130 = v129;
    swift_release();
    Swift::Int v183 = sub_10018A9E0(v128, v130, &v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    char v40 = v176;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v123, v124, "[%s] reloadSnapshot - Updated filtered snapshot for: %s", (uint8_t *)v125, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v62 = v177;
    swift_slowDealloc();

    uint64_t v131 = v165;
    uint64_t v132 = v175;
  }
  else
  {

    swift_release_n();
    uint64_t v131 = v122;
    uint64_t v132 = v121;
  }
  v167(v131, v132);
  if (*(unsigned char *)(*(void *)(a1
                            + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context)
                + 16) == 1)
  {
    uint64_t v133 = *(void *)(*(void *)&v40[*(int *)(v62 + 20)] + 16);
    uint64_t v134 = v166;
    if (v133)
    {
      unint64_t v135 = (*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80);
      uint64_t v136 = *(void *)(v164 + 72);
      uint64_t v180 = swift_bridgeObjectRetain();
      uint64_t v137 = (Swift::Int *)(v135 + v180 + 8);
      do
      {
        Swift::Int v138 = *(v137 - 1);
        Swift::Int v139 = *v137;
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_10000DDD8(&v183, v138, v139);
        swift_endAccess();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v137 = (Swift::Int *)((char *)v137 + v136);
        --v133;
      }
      while (v133);
      swift_bridgeObjectRelease();
      uint64_t v134 = v166;
    }
    char v40 = v176;
    uint64_t v140 = (uint64_t)v150;
    sub_1001E71E8((uint64_t)v176, (uint64_t)v150, &qword_100479530);
    if (v174(v140, 1, v134) == 1)
    {
      sub_100009A08(v140, &qword_100479530);
    }
    else
    {
      uint64_t v141 = v147;
      sub_1001E6FE8(v140, (uint64_t)v147, type metadata accessor for HostedRoutingSession);
      Swift::Int v142 = *v141;
      Swift::Int v143 = v141[1];
      swift_beginAccess();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_10000DDD8(&v183, v142, v143);
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1001E6F14((uint64_t)v141, type metadata accessor for HostedRoutingSession);
    }
  }
  sub_100013A80(&qword_100478380);
  uint64_t v144 = swift_allocObject();
  *(_OWORD *)(v144 + 16) = xmmword_1003C5800;
  *(void *)(v144 + 32) = a1;
  uint64_t v182 = v144;
  specialized Array._endMutation()();
  uint64_t v145 = v182;
  swift_retain();
  sub_1001E519C((uint64_t)v40, v145);
  sub_100009A08(v181, &qword_10047D120);
  sub_1001E6F14((uint64_t)v40, type metadata accessor for HostedRoutingSessionSnapshot);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001D0D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v75 = a2;
  uint64_t v5 = sub_100013A80(&qword_1004794C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HostedRoutingSourceSession(0);
  unint64_t v82 = *(void *)(v8 - 8);
  uint64_t v83 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v84 = (uint64_t)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v69 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (void *)((char *)v69 - v14);
  uint64_t v16 = type metadata accessor for RoutingSessionConfiguration.Context();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v78 = (char *)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v77 = (void *)((char *)v69 - v20);
  uint64_t v21 = type metadata accessor for RoutingSessionConfiguration();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = a1;
  uint64_t v73 = v25;
  uint64_t v74 = v24;
  (*(void (**)(char *, uint64_t))(v25 + 16))(v23, a1 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration);
  uint64_t v26 = RoutingSessionConfiguration.itemTypes.getter();
  swift_retain();
  uint64_t v27 = sub_1001E3E70(v26, v3);
  uint64_t v72 = 0;
  swift_bridgeObjectRelease();
  uint64_t v81 = v3;
  swift_release();
  uint64_t v85 = _swiftEmptyArrayStorage;
  uint64_t v28 = *(void *)(v27 + 16);
  char v79 = v23;
  uint64_t v80 = v15;
  if (v28)
  {
    uint64_t v70 = v17;
    uint64_t v71 = v16;
    swift_bridgeObjectRetain();
    v69[1] = v27;
    uint64_t v29 = (uint64_t *)(v27 + 40);
    do
    {
      uint64_t v30 = *v29;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 56);
      swift_unknownObjectRetain();
      uint64_t v33 = v32(ObjectType, v30);
      swift_unknownObjectRelease();
      sub_1001E1DBC(v33, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
      v29 += 2;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease_n();
    uint64_t v34 = v85;
    uint64_t v15 = v80;
    unint64_t v35 = v82;
    uint64_t v17 = v70;
    uint64_t v16 = v71;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = _swiftEmptyArrayStorage;
    unint64_t v35 = v82;
  }
  uint64_t v36 = (uint64_t)v77;
  RoutingSessionConfiguration.context.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v17 + 88))(v36, v16) == enum case for RoutingSessionConfiguration.Context.app(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v17 + 96))(v36, v16);
    uint64_t v37 = *(void **)v36;
    uint64_t v38 = *(void **)(v36 + 8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v36, v16);
    uint64_t v37 = 0;
    uint64_t v38 = 0;
  }
  uint64_t v77 = v34;
  sub_1001D1BD0((uint64_t)v34, v37, v38, v15);
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)sub_1001BF970();
  uint64_t v40 = (*(uint64_t (**)(void))(v39 + 328))();
  swift_release();
  uint64_t v41 = *(void *)sub_1001BF970();
  uint64_t v70 = (*(uint64_t (**)(void))(v41 + 544))();
  uint64_t v71 = v42;
  swift_release();
  uint64_t v43 = v78;
  RoutingSessionConfiguration.context.getter();
  char v44 = sub_1002AC7F4();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v43, v16);
  if (v44)
  {
    sub_100013A80(&qword_100478F38);
    uint64_t v45 = *(void *)(v35 + 72);
    uint64_t v46 = *(unsigned __int8 *)(v35 + 80);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1003C58B0;
    sub_1001E6EAC((uint64_t)v15, v47 + ((v46 + 32) & ~v46), type metadata accessor for HostedRoutingSourceSession);
    uint64_t v85 = (void *)v47;
    sub_1001E1DBC(v40, &qword_100478F38, type metadata accessor for HostedRoutingSourceSession, type metadata accessor for HostedRoutingSourceSession, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v48 = (uint64_t)v85;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100013A80(&qword_100478F38);
    uint64_t v45 = *(void *)(v35 + 72);
    uint64_t v46 = *(unsigned __int8 *)(v35 + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1003C58B0;
    sub_1001E6EAC((uint64_t)v15, v48 + ((v46 + 32) & ~v46), type metadata accessor for HostedRoutingSourceSession);
  }
  uint64_t v49 = _swiftEmptyArrayStorage;
  uint64_t v85 = _swiftEmptyArrayStorage;
  uint64_t v50 = *(void *)(v48 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v50)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    swift_retain();
    unint64_t v60 = sub_1001E418C((uint64_t)v77, (uint64_t)v49);
    swift_bridgeObjectRelease();
    swift_release_n();
    type metadata accessor for RoutingOptimisticEngine();
    uint64_t v61 = sub_1001BF8D4();
    uint64_t v62 = sub_1001BF868();
    uint64_t v63 = (uint64_t)v79;
    uint64_t v64 = sub_1002573D8((void *)v48, (uint64_t)v60, v70, v71, (uint64_t)v79, (uint64_t)v61, v62);
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001D309C(v64, v60, v66, v68, v76, v75);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001E6F14((uint64_t)v80, type metadata accessor for HostedRoutingSourceSession);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 8))(v63, v74);
  }
  unint64_t v52 = 0;
  unint64_t v82 = (v46 + 32) & ~(unint64_t)v46;
  uint64_t v53 = v48 + v82;
  uint64_t v54 = v83;
  while (v52 < *(void *)(v48 + 16))
  {
    sub_1001E6EAC(v53, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    sub_1001E71E8((uint64_t)&v13[*(int *)(v54 + 28)], (uint64_t)v7, &qword_1004794C0);
    uint64_t v55 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v7, 1, v55) == 1)
    {
      sub_100009A08((uint64_t)v7, &qword_1004794C0);
    }
    else
    {
      char v56 = sub_1002A047C();
      sub_1001E6F14((uint64_t)v7, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
      if (v56)
      {
        sub_1001E6FE8((uint64_t)v13, v84, type metadata accessor for HostedRoutingSourceSession);
        unint64_t v57 = v85;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001E1FCC(0, v57[2] + 1, 1);
          unint64_t v57 = v85;
        }
        unint64_t v59 = v57[2];
        unint64_t v58 = v57[3];
        if (v59 >= v58 >> 1)
        {
          sub_1001E1FCC(v58 > 1, v59 + 1, 1);
          unint64_t v57 = v85;
        }
        v57[2] = v59 + 1;
        uint64_t result = sub_1001E6FE8(v84, (uint64_t)v57 + v82 + v59 * v45, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v54 = v83;
        goto LABEL_16;
      }
    }
    uint64_t result = sub_1001E6F14((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
LABEL_16:
    ++v52;
    v53 += v45;
    if (v50 == v52)
    {
      uint64_t v49 = v85;
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D170C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80(&qword_10047D120);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1
                 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient
                 + 8);
  uint64_t ObjectType = swift_getObjectType();
  sub_1001E6EAC(a2, (uint64_t)v6, type metadata accessor for HostedRoutingSessionSnapshot);
  uint64_t v9 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 0, 1, v9);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 8);
  swift_unknownObjectRetain();
  v10(v6, ObjectType, v7);
  swift_unknownObjectRelease();
  return sub_100009A08((uint64_t)v6, &qword_10047D120);
}

uint64_t sub_1001D1854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_retain();
  if (*((void *)sub_1001BF7C8() + 2) && (sub_1001DE0AC(a2), (v10 & 1) != 0))
  {
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v11 = sub_1001BF7C8();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v35 = v11;
    sub_1001E0744((uint64_t)&_swiftEmptyDictionarySingleton, a2, isUniquelyReferenced_nonNull_native);
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v5 + 40) = v11;
  }
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v13 = RoutingDialog.identifier.getter();
  uint64_t v15 = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  swift_retain();
  uint64_t v17 = sub_1001BF7C8();
  swift_retain();
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v35 = v17;
  uint64_t v19 = swift_retain();
  unint64_t v21 = sub_1001DE0AC(v19);
  uint64_t v22 = v17[2];
  BOOL v23 = (v20 & 1) == 0;
  uint64_t v24 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
    __break(1u);
    goto LABEL_16;
  }
  LOBYTE(a3) = v20;
  if (v17[3] >= v24)
  {
    if (v18)
    {
      if ((v20 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_12;
    }
LABEL_16:
    sub_1001E1008();
    if ((a3 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  sub_1001DE8FC(v24, v18);
  unint64_t v25 = sub_1001DE0AC(a2);
  if ((a3 & 1) != (v26 & 1))
  {
LABEL_18:
    type metadata accessor for RoutingSessionServer.Client(0);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v21 = v25;
  if ((a3 & 1) == 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_12:
  uint64_t v27 = *(void *)(v35[7] + 8 * v21);
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_1001E05BC((uint64_t)sub_1001E6A04, v16, v13, v15, v28);
  uint64_t v34 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001E1718(&v34, 1, (uint64_t *)&v35, v21, a2);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t)v35;
  swift_release();
  swift_release();
  *(void *)(v5 + 40) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(a2
                  + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  swift_unknownObjectRetain();
  v32(a1, ObjectType, v30);

  return swift_unknownObjectRelease();
}

uint64_t sub_1001D1B3C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1001D1B9C()
{
  sub_1001D1B3C();

  return swift_deallocClassInstance();
}

uint64_t sub_1001D1BD0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  id v76 = a3;
  id v74 = a2;
  uint64_t v83 = a1;
  uint64_t v5 = type metadata accessor for Date();
  __chkstk_darwin(v5 - 8);
  uint64_t v81 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v72 = *(void **)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  char v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v70 - v11;
  uint64_t v13 = sub_100013A80(&qword_1004794B8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v80 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v85 = (uint64_t)&v70 - v16;
  uint64_t v17 = sub_100013A80(&qword_1004794C0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v78 = (uint64_t)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v87 = (char *)&v70 - v20;
  uint64_t v84 = type metadata accessor for RoutingControls();
  uint64_t v79 = *(void *)(v84 - 8);
  uint64_t v21 = __chkstk_darwin(v84);
  uint64_t v77 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v86 = (uint64_t)&v70 - v23;
  id v24 = [self sharedLocalEndpoint];
  unint64_t v25 = self;
  id v26 = [v25 server];
  id v27 = [v26 nowPlayingServer];

  id v28 = [v27 localActivePlayerClient];
  unint64_t v82 = a4;
  if (!v28
    || (id v29 = [v28 supportedRemoteControlCommands],
        v28,
        !v29)
    || (uint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v29,
        uint64_t v31 = sub_1001D2430(v30),
        swift_bridgeObjectRelease(),
        !v31))
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = _swiftEmptyArrayStorage;
  }
  uint64_t v32 = sub_1002A0458();
  uint64_t v33 = *(void *)v32;
  uint64_t v75 = (uint64_t *)v32;
  swift_bridgeObjectRetain();
  id v34 = v24;
  sub_1002A2EBC(v33, (unint64_t)v31, v34, v86);
  id v35 = [v25 server];
  id v36 = [v35 nowPlayingServer];

  id v37 = [v36 localOriginClient];
  id v38 = [v25 server];
  id v39 = [v38 nowPlayingServer];

  id v40 = [v39 localActivePlayerClient];
  if (v76)
  {
    id v40 = v40;
    NSString v41 = String._bridgeToObjectiveC()();
    id v42 = [v37 existingNowPlayingClientForDisplayID:v41];

    id v43 = [v42 activePlayerClient];
    if (v43)
    {

      id v40 = v43;
    }
  }
  id v74 = v37;
  id v73 = v40;
  sub_1002A0D30(v37, v40, v87);
  unsigned int v44 = [v34 canModifyGroupMembership];
  id v45 = [v34 deviceInfo];
  sub_10031C828(v85);

  id v76 = v34;
  [v34 volume];
  int v47 = v46;
  uint64_t v48 = _swiftEmptyArrayStorage;
  uint64_t v88 = _swiftEmptyArrayStorage;
  uint64_t v49 = *(void *)(v83 + 16);
  uint64_t v50 = swift_bridgeObjectRetain();
  if (v49)
  {
    LODWORD(v71) = v44;
    unint64_t v51 = (*((unsigned __int8 *)v72 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v72 + 80);
    uint64_t v52 = v72[9];
    uint64_t v53 = v50 + v51;
    do
    {
      sub_1001E6EAC(v53, (uint64_t)v12, type metadata accessor for HostedRoutingItem);
      if (v12[*(int *)(v7 + 36)] == 1)
      {
        sub_1001E6FE8((uint64_t)v12, (uint64_t)v10, type metadata accessor for HostedRoutingItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001E1F90(0, v48[2] + 1, 1);
        }
        uint64_t v48 = v88;
        unint64_t v55 = v88[2];
        unint64_t v54 = v88[3];
        if (v55 >= v54 >> 1)
        {
          sub_1001E1F90(v54 > 1, v55 + 1, 1);
          uint64_t v48 = v88;
        }
        v48[2] = v55 + 1;
        sub_1001E6FE8((uint64_t)v10, (uint64_t)v48 + v51 + v55 * v52, type metadata accessor for HostedRoutingItem);
      }
      else
      {
        sub_1001E6F14((uint64_t)v12, type metadata accessor for HostedRoutingItem);
      }
      v53 += v52;
      --v49;
    }
    while (v49);
    uint64_t v48 = v88;
    unsigned int v44 = v71;
  }
  uint64_t v56 = swift_bridgeObjectRelease();
  LODWORD(v83) = v44 ^ 1;
  __chkstk_darwin(v56);
  unint64_t v57 = v87;
  void v69[2] = v87;
  uint64_t v72 = sub_1001D2BC8((void (*)(uint64_t))sub_1001E66C8, (uint64_t)v69, (uint64_t)v48);
  swift_release();
  uint64_t v58 = v75[1];
  uint64_t v71 = *v75;
  uint64_t v59 = v78;
  sub_1001E71E8((uint64_t)v57, v78, &qword_1004794C0);
  swift_bridgeObjectRetain();
  uint64_t v60 = (uint64_t)v81;
  uint64_t v61 = v74;
  sub_1002FFC6C();
  uint64_t v62 = v79;
  uint64_t v63 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v77, v86, v84);
  uint64_t v64 = v85;
  uint64_t v65 = v80;
  sub_1001E71E8(v85, v80, &qword_1004794B8);
  uint64_t v66 = variable initialization expression of MRDFastSyncGroupSession.pendingParticipants();
  uint64_t v67 = variable initialization expression of MRDFastSyncGroupSession.pendingParticipants();
  LOBYTE(v88) = 0;
  sub_1002A3E0C(v71, v58, (uint64_t)v72, v59, (uint64_t)v66, (uint64_t)v67, v60, v83, v82, v47, 0, v63, 0, 0, v65);

  sub_100009A08(v64, &qword_1004794B8);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v86, v84);
  return sub_100009A08((uint64_t)v87, &qword_1004794C0);
}

void *sub_1001D2430(uint64_t a1)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_10018FDAC(i, (uint64_t)v5);
    sub_10018FE08(0, &qword_1004794C8);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_1001D254C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = _swiftEmptyArrayStorage;
  unint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = _swiftEmptyArrayStorage;
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void **)(v24 + 72);
      sub_1001E6EAC(a3 + v16 + (void)v13 * v14, (uint64_t)v12, type metadata accessor for HostedRoutingItem);
      char v17 = a1(v12);
      if (v3)
      {
        sub_1001E6F14((uint64_t)v12, type metadata accessor for HostedRoutingItem);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v13;
      }
      if (v17)
      {
        sub_1001E6FE8((uint64_t)v12, v23, type metadata accessor for HostedRoutingItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001E1F90(0, v15[2] + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = v25[2];
        unint64_t v18 = v25[3];
        if (v19 >= v18 >> 1)
        {
          sub_1001E1F90(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        _OWORD v15[2] = v19 + 1;
        uint64_t result = sub_1001E6FE8(v23, (uint64_t)v15 + v16 + v19 * (void)v13, type metadata accessor for HostedRoutingItem);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_1001E6F14((uint64_t)v12, type metadata accessor for HostedRoutingItem);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_1001D27E4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = _swiftEmptyArrayStorage;
  unint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = _swiftEmptyArrayStorage;
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void **)(v24 + 72);
      sub_1001E6EAC(a3 + v16 + (void)v13 * v14, (uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
      char v17 = a1(v12);
      if (v3)
      {
        sub_1001E6F14((uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v13;
      }
      if (v17)
      {
        sub_1001E6FE8((uint64_t)v12, v23, type metadata accessor for HostedRoutingSourceSession);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001E1FCC(0, v15[2] + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = v25[2];
        unint64_t v18 = v25[3];
        if (v19 >= v18 >> 1)
        {
          sub_1001E1FCC(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        _OWORD v15[2] = v19 + 1;
        uint64_t result = sub_1001E6FE8(v23, (uint64_t)v15 + v16 + v19 * (void)v13, type metadata accessor for HostedRoutingSourceSession);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_1001E6F14((uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_1001D2A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100013A80(&qword_1004794C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001E6EAC(a1, a3, type metadata accessor for HostedRoutingItem);
  sub_1001E71E8(a2, (uint64_t)v8, &qword_1004794C0);
  uint64_t v9 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    sub_100009A08((uint64_t)v8, &qword_1004794C0);
    char v10 = 0;
  }
  else
  {
    char v10 = sub_1002A047C();
    sub_1001E6F14((uint64_t)v8, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
  }
  uint64_t result = type metadata accessor for HostedRoutingItem(0);
  *(unsigned char *)(a3 + *(int *)(result + 40)) = v10 & 1;
  return result;
}

void *sub_1001D2BC8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_1001E1F90(0, v10, 0);
    uint64_t v11 = v21;
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = a3 + v18;
    uint64_t v13 = *(void *)(v7 + 72);
    while (1)
    {
      v19(v12);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = v11[2];
      unint64_t v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_1001E1F90(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      void v11[2] = v15 + 1;
      sub_1001E6FE8((uint64_t)v9, (uint64_t)v11 + v18 + v15 * v13, type metadata accessor for HostedRoutingItem);
      v12 += v13;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

void *sub_1001D2D70(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100014688(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for HostedRoutingItem(0) - 8);
    uint64_t v4 = *(void *)(v3 + 72);
    uint64_t v5 = (uint64_t *)(((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + a1 + 8);
    do
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_100014688(v8 > 1, v9 + 1, 1);
      }
      uint64_t v5 = (uint64_t *)((char *)v5 + v4);
      _swiftEmptyArrayStorage[2] = v9 + 1;
      int64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v7;
      v10[5] = v6;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1001D2EA0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for HostedRoutingSession(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_1001E2008(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0) - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = v11[2];
      unint64_t v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_1001E2008(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      void v11[2] = v15 + 1;
      sub_1001E6FE8((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, type metadata accessor for HostedRoutingSession);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1001D309C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v169 = (void *)a3;
  uint64_t v170 = a4;
  uint64_t v168 = a1;
  uint64_t v165 = a6;
  uint64_t v183 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v164 = *(void *)(v183 - 8);
  uint64_t v9 = __chkstk_darwin(v183);
  uint64_t v159 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v152 - v12);
  uint64_t v14 = __chkstk_darwin(v11);
  unint64_t v16 = (char *)&v152 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (uint64_t *)((char *)&v152 - v17);
  uint64_t v19 = type metadata accessor for HostedRoutingSession(0);
  uint64_t v178 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v153 = (char *)&v152 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v154 = (uint64_t *)((char *)&v152 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v160 = (uint64_t)&v152 - v25;
  __chkstk_darwin(v24);
  uint64_t v163 = (uint64_t)&v152 - v26;
  uint64_t v27 = sub_100013A80(&qword_100479530);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v30 = (char *)&v152 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v156 = (uint64_t)&v152 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v158 = (uint64_t)&v152 - v34;
  __chkstk_darwin(v33);
  uint64_t v162 = (uint64_t)&v152 - v35;
  uint64_t v36 = type metadata accessor for RoutingSessionConfiguration.Context();
  uint64_t v171 = *(void *)(v36 - 8);
  uint64_t v172 = v36;
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v157 = (char *)&v152 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v161 = (char *)&v152 - v40;
  __chkstk_darwin(v39);
  uint64_t v167 = (char *)&v152 - v41;
  uint64_t v42 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v43 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v182 = (char *)&v152 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100013A80(&qword_10047D120);
  __chkstk_darwin(v45 - 8);
  uint64_t v181 = (char *)&v152 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v179 = v6;
  int v47 = sub_1001BF780();
  uint64_t v48 = v47[2];
  uint64_t v174 = v19;
  uint64_t v176 = v43;
  uint64_t v155 = v30;
  id v177 = a2;
  if (v48)
  {
    uint64_t v49 = (uint64_t)v181;
    unint64_t v50 = sub_1001DE0AC(a5);
    if (v51)
    {
      unint64_t v52 = v50;
      uint64_t v180 = v47[7];
      uint64_t v53 = type metadata accessor for HostedRoutingSessionSnapshot(0);
      uint64_t v54 = *(void *)(v53 - 8);
      sub_1001E6EAC(v180 + *(void *)(v54 + 72) * v52, v49, type metadata accessor for HostedRoutingSessionSnapshot);
      uint64_t v55 = v53;
      uint64_t v43 = v176;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v49, 0, 1, v55);
    }
    else
    {
      uint64_t v57 = type metadata accessor for HostedRoutingSessionSnapshot(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v49, 1, 1, v57);
    }
  }
  else
  {
    uint64_t v56 = type metadata accessor for HostedRoutingSessionSnapshot(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v181, 1, 1, v56);
  }
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  uint64_t v173 = v42;
  v58(v182, a5 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v42);
  uint64_t v59 = sub_1001BFA20();
  uint64_t v60 = (*(uint64_t (**)(uint64_t))(*(void *)v59 + 128))(v59);
  swift_release();
  sub_10018FE08(0, &qword_100478998);
  id v61 = sub_10031CA84();
  uint64_t v175 = a5;
  uint64_t v62 = v61;
  uint64_t v180 = swift_allocObject();
  *(void *)(v180 + 16) = v60;
  swift_bridgeObjectRetain();
  uint64_t v63 = swift_bridgeObjectRetain();
  uint64_t v64 = sub_1001E45C0(v63, v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v65 = sub_1001D2D70((uint64_t)v64);
  uint64_t v166 = 0;
  swift_bridgeObjectRelease();
  uint64_t v66 = sub_10000B4EC((uint64_t)v65);
  swift_bridgeObjectRelease();
  uint64_t v67 = v168;
  swift_bridgeObjectRetain();
  uint64_t v68 = v170;
  swift_bridgeObjectRetain();
  uint64_t v70 = MRDFastSyncGroupSessionState.rawValue.getter(v67, v169, v68, v69);
  uint64_t v73 = sub_1001D9B90(v70, v71, v72, v62);
  uint64_t v76 = sub_1001D9EAC(v73, v74, v75, v62);
  uint64_t v179 = v77;
  uint64_t v170 = v78;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v79 = swift_bridgeObjectRelease();
  __chkstk_darwin(v79);
  uint64_t v80 = (uint64_t)v181;
  uint64_t v81 = (uint64_t)v177;
  *(&v152 - 8) = (uint64_t)v182;
  *(&v152 - 7) = v81;
  id v177 = v62;
  *(&v152 - 6) = (uint64_t)v62;
  *(&v152 - 5) = v66;
  uint64_t v82 = v175;
  *(&v152 - 4) = v80;
  *(&v152 - 3) = v82;
  uint64_t v83 = v180;
  *(&v152 - 2) = (uint64_t)sub_1001E6FAC;
  *(&v152 - 1) = v83;
  uint64_t v84 = sub_1001D2EA0((void (*)(uint64_t))sub_1001E6FB4, (uint64_t)(&v152 - 10), v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v85 = (uint64_t *)v167;
  RoutingSessionConfiguration.context.getter();
  uint64_t v87 = v171;
  uint64_t v86 = v172;
  uint64_t v88 = *(unsigned int (**)(void *, uint64_t))(v171 + 88);
  if (v88(v85, v172) == enum case for RoutingSessionConfiguration.Context.platterTarget(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v87 + 96))(v85, v86);
    uint64_t v89 = v85[1];
    uint64_t v90 = v84[2];
    if (!v90)
    {
      uint64_t v117 = 1;
LABEL_56:
      uint64_t v116 = v162;
LABEL_57:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v178 + 56))(v116, v117, 1, v174);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1002ABA1C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v116, v165);
      swift_release();

      (*(void (**)(char *, uint64_t))(v176 + 8))(v182, v173);
      return sub_100009A08(v80, &qword_10047D120);
    }
    uint64_t v91 = *v85;
    uint64_t v92 = (char *)v84 + ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80));
    uint64_t v93 = *(void *)(v178 + 72);
    uint64_t v169 = v84;
    swift_bridgeObjectRetain();
    uint64_t v94 = 0;
    uint64_t v95 = v163;
    uint64_t v175 = v90;
    uint64_t v171 = v93;
    uint64_t v172 = (uint64_t)v92;
LABEL_14:
    sub_1001E6EAC((uint64_t)&v92[v93 * v94], v95, type metadata accessor for HostedRoutingSession);
    uint64_t v179 = sub_1002A61EC();
    uint64_t v109 = *(void *)(v179 + 16);
    if (!v109)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    uint64_t v110 = v164;
    uint64_t v111 = v179 + ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80));
    swift_bridgeObjectRetain();
    uint64_t v112 = *(void *)(v110 + 72);
    while (1)
    {
      sub_1001E6EAC(v111, (uint64_t)v18, type metadata accessor for HostedRoutingItem);
      if (*v18 == v91 && v18[1] == v89) {
        break;
      }
      char v114 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1001E6EAC((uint64_t)v18, (uint64_t)v16, type metadata accessor for HostedRoutingItem);
      if (v114) {
        goto LABEL_25;
      }
      sub_1001E6F14((uint64_t)v16, type metadata accessor for HostedRoutingItem);
      sub_1001E6F14((uint64_t)v18, type metadata accessor for HostedRoutingItem);
LABEL_17:
      v111 += v112;
      if (!--v109)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v95 = v163;
        uint64_t v90 = v175;
        uint64_t v93 = v171;
        uint64_t v92 = (char *)v172;
LABEL_13:
        ++v94;
        sub_1001E6F14(v95, type metadata accessor for HostedRoutingSession);
        if (v94 == v90)
        {
          swift_bridgeObjectRelease();
          uint64_t v117 = 1;
          uint64_t v80 = (uint64_t)v181;
          goto LABEL_56;
        }
        goto LABEL_14;
      }
    }
    sub_1001E6EAC((uint64_t)v18, (uint64_t)v16, type metadata accessor for HostedRoutingItem);
LABEL_25:
    char v115 = v16[*(int *)(v183 + 36)];
    sub_1001E6F14((uint64_t)v16, type metadata accessor for HostedRoutingItem);
    sub_1001E6F14((uint64_t)v18, type metadata accessor for HostedRoutingItem);
    if (v115)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v116 = v162;
      sub_1001E6FE8(v163, v162, type metadata accessor for HostedRoutingSession);
      uint64_t v117 = 0;
      uint64_t v80 = (uint64_t)v181;
      goto LABEL_57;
    }
    goto LABEL_17;
  }
  uint64_t v96 = v170;
  uint64_t v169 = v84;
  unint64_t v97 = v85;
  uint64_t v98 = *(void (**)(uint64_t *, uint64_t))(v87 + 8);
  v98(v97, v86);
  uint64_t v99 = (uint64_t *)v161;
  uint64_t v100 = v87;
  uint64_t v101 = v182;
  RoutingSessionConfiguration.context.getter();
  uint64_t v102 = v101;
  if (v88(v99, v86) != enum case for RoutingSessionConfiguration.Context.deviceTarget(_:))
  {
    v98(v99, v86);
    uint64_t v118 = v157;
    char v119 = v101;
    RoutingSessionConfiguration.context.getter();
    char v120 = sub_1002AC7F4();
    uint64_t v121 = v86;
    char v122 = v120;
    v98((uint64_t *)v118, v121);
    uint64_t v123 = v173;
    uint64_t v124 = v178;
    if (v122)
    {
      uint64_t v125 = v169[2];
      uint64_t v126 = v174;
      uint64_t v88 = (unsigned int (*)(void *, uint64_t))v155;
      if (!v125) {
        goto LABEL_38;
      }
      uint64_t v127 = (uint64_t)v169
           + ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80));
      uint64_t v128 = *(void *)(v178 + 72);
      swift_bridgeObjectRetain();
      unint64_t v129 = v153;
      do
      {
        sub_1001E6EAC(v127, (uint64_t)v129, type metadata accessor for HostedRoutingSession);
        BOOL v130 = *v129 == v179 && v129[1] == v96;
        if (v130 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1001E6FE8((uint64_t)v129, (uint64_t)v88, type metadata accessor for HostedRoutingSession);
          uint64_t v131 = *(void (**)(unsigned int (*)(void, void), uint64_t, uint64_t, uint64_t))(v124 + 56);
          v131((unsigned int (*)(void, void))v88, 0, 1, v126);
          goto LABEL_64;
        }
        sub_1001E6F14((uint64_t)v129, type metadata accessor for HostedRoutingSession);
        v127 += v128;
        --v125;
      }
      while (v125);
      swift_bridgeObjectRelease();
LABEL_38:
      uint64_t v131 = *(void (**)(unsigned int (*)(void, void), uint64_t, uint64_t, uint64_t))(v124 + 56);
      v131((unsigned int (*)(void, void))v88, 1, 1, v126);
LABEL_64:
      swift_bridgeObjectRelease();
      int v144 = (*(uint64_t (**)(unsigned int (*)(uint64_t *, uint64_t), uint64_t, uint64_t))(v124 + 48))(v88, 1, v126);
      uint64_t v145 = v175;
      if (v144 != 1)
      {
        uint64_t v146 = v154;
        sub_1001E6FE8((uint64_t)v88, (uint64_t)v154, type metadata accessor for HostedRoutingSession);
        unint64_t v147 = sub_1001E4BD0((uint64_t)v169, v146, v145);
        uint64_t v149 = v148;
        swift_bridgeObjectRelease();
        uint64_t v150 = v156;
        sub_1001E6EAC((uint64_t)v146, v156, type metadata accessor for HostedRoutingSession);
        v131((unsigned int (*)(void, void))v150, 0, 1, v126);
        sub_1002ABA1C(v147, v149, v150, v165);
        swift_release();

        sub_1001E6F14((uint64_t)v146, type metadata accessor for HostedRoutingSession);
        goto LABEL_66;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v142 = v174;
      if (v169[2])
      {
        uint64_t v143 = v156;
        sub_1001E6EAC((uint64_t)v169+ ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80)), v156, type metadata accessor for HostedRoutingSession);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v124 + 56))(v143, 0, 1, v142);
        sub_1002ABA1C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v143, v165);
        swift_release();

LABEL_66:
        (*(void (**)(char *, uint64_t))(v176 + 8))(v119, v123);
        uint64_t v80 = (uint64_t)v181;
        return sub_100009A08(v80, &qword_10047D120);
      }
      __break(1u);
    }
    uint64_t result = sub_100009A08((uint64_t)v88, &qword_100479530);
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, uint64_t))(v100 + 96))(v99, v86);
  uint64_t v103 = v99[1];
  uint64_t v104 = v178;
  uint64_t v171 = v169[2];
  if (!v171)
  {
    uint64_t v141 = 1;
    uint64_t v140 = v158;
    uint64_t v80 = (uint64_t)v181;
    goto LABEL_61;
  }
  uint64_t v105 = v101;
  uint64_t v106 = *v99;
  uint64_t v175 = (uint64_t)v169 + ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80));
  uint64_t v172 = *(void *)(v178 + 72);
  swift_bridgeObjectRetain();
  uint64_t v107 = 0;
  uint64_t v108 = v160;
  while (2)
  {
    sub_1001E6EAC(v175 + v172 * v107, v108, type metadata accessor for HostedRoutingSession);
    uint64_t v179 = sub_1002A61EC();
    uint64_t v132 = *(void *)(v179 + 16);
    if (!v132)
    {
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
    uint64_t v133 = v164;
    uint64_t v134 = v179 + ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80));
    swift_bridgeObjectRetain();
    uint64_t v135 = *(void *)(v133 + 72);
    uint64_t v136 = (uint64_t)v159;
    do
    {
      sub_1001E6EAC(v134, (uint64_t)v13, type metadata accessor for HostedRoutingItem);
      if (*v13 == v106 && v13[1] == v103)
      {
        sub_1001E6EAC((uint64_t)v13, v136, type metadata accessor for HostedRoutingItem);
      }
      else
      {
        char v138 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_1001E6EAC((uint64_t)v13, v136, type metadata accessor for HostedRoutingItem);
        if ((v138 & 1) == 0)
        {
          sub_1001E6F14(v136, type metadata accessor for HostedRoutingItem);
          sub_1001E6F14((uint64_t)v13, type metadata accessor for HostedRoutingItem);
          goto LABEL_44;
        }
      }
      char v139 = *(unsigned char *)(v136 + *(int *)(v183 + 36));
      sub_1001E6F14(v136, type metadata accessor for HostedRoutingItem);
      sub_1001E6F14((uint64_t)v13, type metadata accessor for HostedRoutingItem);
      if (v139)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v140 = v158;
        sub_1001E6FE8(v160, v158, type metadata accessor for HostedRoutingSession);
        uint64_t v141 = 0;
        uint64_t v104 = v178;
        uint64_t v80 = (uint64_t)v181;
        uint64_t v102 = v182;
        goto LABEL_61;
      }
LABEL_44:
      v134 += v135;
      --v132;
    }
    while (v132);
    swift_bridgeObjectRelease_n();
    uint64_t v104 = v178;
    uint64_t v105 = v182;
    uint64_t v108 = v160;
LABEL_40:
    ++v107;
    sub_1001E6F14(v108, type metadata accessor for HostedRoutingSession);
    if (v107 != v171) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v141 = 1;
  uint64_t v80 = (uint64_t)v181;
  uint64_t v140 = v158;
  uint64_t v102 = v105;
LABEL_61:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v140, v141, 1, v174);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1002ABA1C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v140, v165);
  swift_release();

  (*(void (**)(char *, uint64_t))(v176 + 8))(v102, v173);
  return sub_100009A08(v80, &qword_10047D120);
}

uint64_t sub_1001D42E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v76 = a3;
  uint64_t v5 = type metadata accessor for RoutingItem.SelectionIndicator();
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100013A80(&qword_100479598);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v79 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v13 = sub_100013A80(&qword_100478990);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v78 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v77 = (char *)&v69 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v75 = (uint64_t)&v69 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v69 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v69 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v69 - v26;
  BOOL v28 = sub_10029F6A0();
  if (v28 == sub_10029F6A0())
  {
    int v30 = sub_10029F840() & 1;
    if (v30 != (sub_10029F840() & 1))
    {
      char v29 = sub_10029F840();
      return v29 & 1;
    }
    BOOL v31 = sub_10029F718();
    if (v31 != sub_10029F718())
    {
      char v29 = sub_10029F718();
      return v29 & 1;
    }
    uint64_t v32 = type metadata accessor for HostedRoutingItem(0);
    uint64_t v73 = (uint64_t)a1 + *(int *)(v32 + 32);
    sub_1001E71E8(v73, (uint64_t)v27, &qword_100478990);
    uint64_t v72 = (uint64_t)a2 + *(int *)(v32 + 32);
    sub_1001E71E8(v72, (uint64_t)v25, &qword_100478990);
    uint64_t v33 = (uint64_t)&v12[*(int *)(v8 + 48)];
    sub_1001E71E8((uint64_t)v27, (uint64_t)v12, &qword_100478990);
    uint64_t v74 = v33;
    sub_1001E71E8((uint64_t)v25, v33, &qword_100478990);
    uint64_t v35 = v80 + 48;
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
    if (v34((uint64_t)v12, 1, v81) == 1)
    {
      sub_100009A08((uint64_t)v25, &qword_100478990);
      sub_100009A08((uint64_t)v27, &qword_100478990);
      uint64_t v36 = v81;
      uint64_t v37 = v34;
      if (v34(v74, 1, v81) == 1)
      {
        sub_100009A08((uint64_t)v12, &qword_100478990);
        goto LABEL_20;
      }
    }
    else
    {
      sub_1001E71E8((uint64_t)v12, (uint64_t)v22, &qword_100478990);
      uint64_t v70 = v34;
      uint64_t v71 = v35;
      if (v34(v74, 1, v81) != 1)
      {
        uint64_t v48 = v81;
        (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v7, v74, v81);
        sub_100015AE0(&qword_1004795B0, (void (*)(uint64_t))&type metadata accessor for RoutingItem.SelectionIndicator);
        LODWORD(v74) = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v49 = v7;
        unint64_t v50 = *(void (**)(char *, uint64_t))(v80 + 8);
        v50(v49, v48);
        sub_100009A08((uint64_t)v25, &qword_100478990);
        sub_100009A08((uint64_t)v27, &qword_100478990);
        v50(v22, v48);
        sub_100009A08((uint64_t)v12, &qword_100478990);
        uint64_t v36 = v48;
        uint64_t v37 = v70;
        if (v74)
        {
LABEL_20:
          uint64_t v51 = *a1;
          uint64_t v52 = a1[1];
          uint64_t v53 = v76;
          if (*(void *)(v76 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v54 = sub_100013660(v51, v52);
            if (v55)
            {
              uint64_t v56 = *(void *)(*(void *)(v53 + 56) + 8 * v54);
              swift_retain();
              swift_bridgeObjectRelease();
              double v57 = *(double *)(v56 + 16);
              uint64_t v58 = *(void *)(v56 + 24);
              char v59 = *(unsigned char *)(v56 + 32);
              swift_release();
              goto LABEL_29;
            }
            swift_bridgeObjectRelease();
          }
          double v57 = sub_100290330();
          uint64_t v58 = 0;
          char v59 = 0;
LABEL_29:
          uint64_t v60 = *a2;
          uint64_t v61 = a2[1];
          if (*(void *)(v53 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v62 = sub_100013660(v60, v61);
            if (v63)
            {
              uint64_t v64 = *(void *)(*(void *)(v53 + 56) + 8 * v62);
              swift_retain();
              swift_bridgeObjectRelease();
              double v65 = *(double *)(v64 + 16);
              uint64_t v66 = *(void *)(v64 + 24);
              char v67 = *(unsigned char *)(v64 + 32);
              swift_release();
              goto LABEL_34;
            }
            swift_bridgeObjectRelease();
          }
          double v65 = sub_100290330();
          uint64_t v66 = 0;
          char v67 = 0;
LABEL_34:
          double v85 = v57;
          uint64_t v86 = v58;
          char v87 = v59;
          double v82 = v65;
          uint64_t v83 = v66;
          char v84 = v67;
          sub_1001E7280();
          if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
          {
            double v85 = v57;
            uint64_t v86 = v58;
            char v87 = v59;
            double v82 = v65;
            uint64_t v83 = v66;
            char v84 = v67;
            sub_1001E72D4();
            char v29 = dispatch thunk of static Comparable.< infix(_:_:)();
            return v29 & 1;
          }
          if (v60 != v51 || v61 != v52)
          {
            char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
            return v29 & 1;
          }
LABEL_42:
          char v29 = 0;
          return v29 & 1;
        }
LABEL_13:
        uint64_t v39 = v79;
        uint64_t v40 = v79 + *(int *)(v8 + 48);
        sub_1001E71E8(v73, v79, &qword_100478990);
        sub_1001E71E8(v72, v40, &qword_100478990);
        int v41 = v37(v39, 1, v36);
        uint64_t v43 = (uint64_t)v77;
        uint64_t v42 = (uint64_t)v78;
        uint64_t v44 = v80;
        if (v41 != 1)
        {
          uint64_t v45 = v75;
          sub_1001E71E8(v39, v75, &qword_100478990);
          if ((*(unsigned int (**)(uint64_t, uint64_t))(v44 + 88))(v45, v36) == enum case for RoutingItem.SelectionIndicator.pullable(_:))
          {
LABEL_26:
            sub_100009A08(v40, &qword_100478990);
            sub_100009A08(v39, &qword_100478990);
            char v29 = 1;
            return v29 & 1;
          }
          (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v36);
        }
        if (v37(v40, 1, v36) != 1)
        {
          sub_1001E71E8(v40, v43, &qword_100478990);
          if ((*(unsigned int (**)(uint64_t, uint64_t))(v44 + 88))(v43, v36) == enum case for RoutingItem.SelectionIndicator.pullable(_:))
          {
            sub_100009A08(v40, &qword_100478990);
            uint64_t v46 = v39;
            int v47 = &qword_100478990;
LABEL_41:
            sub_100009A08(v46, v47);
            goto LABEL_42;
          }
          (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v36);
        }
        if (v37(v39, 1, v36) != 1)
        {
          sub_1001E71E8(v39, v42, &qword_100478990);
          if ((*(unsigned int (**)(uint64_t, uint64_t))(v44 + 88))(v42, v36) == enum case for RoutingItem.SelectionIndicator.selected(_:)) {
            goto LABEL_26;
          }
          (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v36);
        }
        int v47 = &qword_100479598;
        uint64_t v46 = v39;
        goto LABEL_41;
      }
      sub_100009A08((uint64_t)v25, &qword_100478990);
      sub_100009A08((uint64_t)v27, &qword_100478990);
      uint64_t v38 = v22;
      uint64_t v36 = v81;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v38, v81);
      uint64_t v37 = v70;
    }
    sub_100009A08((uint64_t)v12, &qword_100479598);
    goto LABEL_13;
  }
  char v29 = sub_10029F6A0();
  return v29 & 1;
}

uint64_t sub_1001D4B98@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(uint64_t, uint64_t)@<X7>, void *a9@<X8>, uint64_t a10)
{
  v337 = a8;
  uint64_t v340 = a7;
  v366 = a6;
  uint64_t v346 = a5;
  v370 = a3;
  v360 = a9;
  uint64_t v13 = sub_100013A80(&qword_1004794B8);
  __chkstk_darwin(v13 - 8);
  uint64_t v359 = (uint64_t)&v317 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v356 = type metadata accessor for RoutingControls();
  uint64_t v355 = *(void *)(v356 - 8);
  __chkstk_darwin(v356);
  v358 = (char *)&v317 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v354 = type metadata accessor for Date();
  uint64_t v353 = *(void *)(v354 - 8);
  __chkstk_darwin(v354);
  v357 = (char *)&v317 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo.ExtendedInfo();
  __chkstk_darwin(v17 - 8);
  v333 = (char *)&v317 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v327 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo();
  uint64_t v326 = *(void *)(v327 - 8);
  __chkstk_darwin(v327);
  v325 = (char *)&v317 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v351 = type metadata accessor for RoutingSessionConfiguration.NowPlayingInfoProperties();
  uint64_t v350 = *(void *)(v351 - 8);
  uint64_t v20 = __chkstk_darwin(v351);
  v349 = (char *)&v317 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v348 = (char *)&v317 - v22;
  uint64_t v23 = sub_100013A80(&qword_1004794C0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v352 = (uint64_t)&v317 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v380 = (uint64_t)&v317 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v317 = (char *)&v317 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v324 = (uint64_t)&v317 - v31;
  __chkstk_darwin(v30);
  uint64_t v328 = (uint64_t)&v317 - v32;
  uint64_t v376 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v374 = *(void *)(v376 - 8);
  uint64_t v33 = __chkstk_darwin(v376);
  v369 = (char *)&v317 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  v321 = (char *)&v317 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v320 = (char *)&v317 - v38;
  __chkstk_darwin(v37);
  v362 = (char *)&v317 - v39;
  uint64_t v40 = sub_100013A80(&qword_100479560);
  __chkstk_darwin(v40 - 8);
  uint64_t v335 = (uint64_t)&v317 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100013A80(&qword_100479530);
  __chkstk_darwin(v42 - 8);
  uint64_t v329 = (uint64_t)&v317 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v330 = type metadata accessor for HostedRoutingSession(0);
  uint64_t v331 = *(void *)(v330 - 8);
  uint64_t v44 = __chkstk_darwin(v330);
  v387 = (uint64_t *)((char *)&v317 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v44);
  uint64_t v332 = (uint64_t)&v317 - v46;
  uint64_t v367 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v378 = *(void *)(v367 - 8);
  uint64_t v47 = __chkstk_darwin(v367);
  v368 = (char **)((char *)&v317 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = __chkstk_darwin(v47);
  v371 = (uint64_t *)((char *)&v317 - v50);
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v343 = (uint64_t)&v317 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  v382 = (char **)((char *)&v317 - v54);
  uint64_t v55 = __chkstk_darwin(v53);
  v342 = (Swift::Int *)((char *)&v317 - v56);
  uint64_t v57 = __chkstk_darwin(v55);
  unint64_t v384 = (unint64_t)&v317 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v345 = (uint64_t)&v317 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  unint64_t v383 = (unint64_t)&v317 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v344 = (uint64_t)&v317 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  v385 = (char **)((char *)&v317 - v66);
  uint64_t v67 = __chkstk_darwin(v65);
  v336 = (char *)&v317 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  v341 = (char *)&v317 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  v386 = (char **)((char *)&v317 - v72);
  __chkstk_darwin(v71);
  uint64_t v74 = (char *)&v317 - v73;
  uint64_t v75 = sub_100013A80(&qword_10047D120);
  __chkstk_darwin(v75 - 8);
  v365 = (char *)&v317 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v364 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  uint64_t v363 = *(void *)(v364 - 8);
  __chkstk_darwin(v364);
  uint64_t v361 = (uint64_t)&v317 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for RoutingSessionConfiguration.Context();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = __chkstk_darwin(v78);
  v319 = (char *)&v317 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __chkstk_darwin(v80);
  v318 = (uint64_t **)((char *)&v317 - v83);
  uint64_t v84 = __chkstk_darwin(v82);
  v338 = (char *)&v317 - v85;
  __chkstk_darwin(v84);
  char v87 = (char *)&v317 - v86;
  v377 = (int *)type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v347 = v377[13];
  LODWORD(v88) = *((unsigned __int8 *)a1 + v347);
  uint64_t v89 = (void *)a1[4];
  uint64_t v379 = a2;
  RoutingSessionConfiguration.context.getter();
  uint64_t v90 = v78;
  uint64_t v91 = (void *)v79;
  uint64_t v92 = *(unsigned int (**)(void, void))(v79 + 88);
  uint64_t v323 = v79 + 88;
  v322 = v92;
  unsigned int v93 = v92(v87, v90);
  uint64_t v373 = a4;
  uint64_t v339 = v90;
  if (v93 == enum case for RoutingSessionConfiguration.Context.platterTarget(_:))
  {
    (*(void (**)(char *, uint64_t))(v79 + 96))(v87, v90);
    swift_bridgeObjectRelease();
    unint64_t v97 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v94 = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v87, v90);
    __chkstk_darwin(v94);
    *(void *)&long long v314 = v89;
    *((void *)&v314 + 1) = a1;
    LOBYTE(v315) = (_BYTE)v88;
    uint64_t v316 = a4;
    uint64_t v95 = (uint64_t)v370;
    swift_bridgeObjectRetain();
    uint64_t v96 = v375;
    unint64_t v97 = (void *)sub_1001D254C((uint64_t (*)(char *))sub_1001E7050, (uint64_t)&v313, v95);
    v375 = v96;
  }
  v388 = v89;
  swift_bridgeObjectRetain();
  sub_1001E1DBC((uint64_t)v97, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
  uint64_t v98 = v388;
  int64_t v99 = v388[2];
  v381 = a1;
  int v372 = (int)v88;
  v370 = v91;
  uint64_t v100 = v387;
  if (v99)
  {
    v388 = _swiftEmptyArrayStorage;
    sub_1001E1F90(0, v99, 0);
    unint64_t v101 = (*(unsigned __int8 *)(v378 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v378 + 80);
    v334 = v98;
    uint64_t v102 = (uint64_t)v98 + v101;
    uint64_t v103 = *(void *)(v378 + 72);
    uint64_t v104 = (uint64_t)v388;
    do
    {
      uint64_t v105 = v386;
      sub_1001E6EAC(v102, (uint64_t)v386, type metadata accessor for HostedRoutingItem);
      sub_10029F2FC((uint64_t)v105, (uint64_t)v74);
      sub_1001E6F14((uint64_t)v105, type metadata accessor for HostedRoutingItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001E1F90(0, *(void *)(v104 + 16) + 1, 1);
        uint64_t v104 = (uint64_t)v388;
      }
      unint64_t v107 = *(void *)(v104 + 16);
      unint64_t v106 = *(void *)(v104 + 24);
      if (v107 >= v106 >> 1)
      {
        sub_1001E1F90(v106 > 1, v107 + 1, 1);
        uint64_t v104 = (uint64_t)v388;
      }
      *(void *)(v104 + 16) = v107 + 1;
      sub_1001E6FE8((uint64_t)v74, v104 + v101 + v107 * v103, type metadata accessor for HostedRoutingItem);
      v102 += v103;
      --v99;
      uint64_t v100 = v387;
    }
    while (v99);
    swift_bridgeObjectRelease();
    a1 = v381;
    LOBYTE(v88) = v372;
    uint64_t v91 = v370;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v104 = (uint64_t)_swiftEmptyArrayStorage;
  }
  id v108 = v365;
  uint64_t v109 = v364;
  v395 = _swiftEmptyArrayStorage;
  v394 = _swiftEmptyArrayStorage;
  sub_1001E71E8((uint64_t)v366, (uint64_t)v365, &qword_10047D120);
  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v363 + 48))(v108, 1, v109) == 1)
  {
    sub_100009A08((uint64_t)v108, &qword_10047D120);
    sub_1001D8098(v104, v346, (unint64_t *)&v395, (unint64_t *)&v394);
    swift_bridgeObjectRelease();
LABEL_33:
    LODWORD(v383) = 0;
LABEL_34:
    uint64_t v125 = v379;
    uint64_t v126 = v369;
    goto LABEL_35;
  }
  sub_1001E6FE8((uint64_t)v108, v361, type metadata accessor for HostedRoutingSessionSnapshot);
  uint64_t v110 = sub_1002AB724();
  uint64_t v111 = *(void *)(v340
                   + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context);
  if (*(unsigned char *)(v111
                + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_requestsStableItemOrdering) != 1)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    sub_1001D8098(v104, v346, (unint64_t *)&v395, (unint64_t *)&v394);
    swift_bridgeObjectRelease();
    sub_1001E6F14(v361, type metadata accessor for HostedRoutingSessionSnapshot);
    goto LABEL_33;
  }
  uint64_t v112 = *(void *)(v111 + 24);
  uint64_t v113 = *a1;
  uint64_t v114 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v115 = sub_10018835C(v113, v114, v112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v115 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v91 = v370;
    goto LABEL_32;
  }
  uint64_t v116 = *(void *)(v110 + 16);
  if (v116)
  {
    uint64_t v117 = v110 + ((*(unsigned __int8 *)(v331 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v331 + 80));
    uint64_t v118 = *(void *)(v331 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1001E6EAC(v117, (uint64_t)v100, type metadata accessor for HostedRoutingSession);
      BOOL v119 = *v100 == *a1 && v100[1] == a1[1];
      if (v119 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      sub_1001E6F14((uint64_t)v100, type metadata accessor for HostedRoutingSession);
      v117 += v118;
      if (!--v116)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v121 = v329;
    sub_1001E6FE8((uint64_t)v100, v329, type metadata accessor for HostedRoutingSession);
    uint64_t v120 = 0;
  }
  else
  {
LABEL_26:
    uint64_t v120 = 1;
    uint64_t v121 = v329;
  }
  uint64_t v122 = v331;
  uint64_t v123 = v330;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v331 + 56))(v121, v120, 1, v330);
  swift_bridgeObjectRelease();
  int v124 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v121, 1, v123);
  uint64_t v91 = v370;
  if (v124 == 1)
  {
    sub_100009A08(v121, &qword_100479530);
    goto LABEL_32;
  }
  sub_1001E6FE8(v121, v332, type metadata accessor for HostedRoutingSession);
  uint64_t v184 = sub_1002A61EC();
  uint64_t v185 = *(void *)(v184 + 16);
  if (v185)
  {
    uint64_t v186 = v184 + ((*(unsigned __int8 *)(v378 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v378 + 80));
    uint64_t v187 = *(void *)(v378 + 72);
    uint64_t v188 = (uint64_t)v341;
    do
    {
      sub_1001E6EAC(v186, v188, type metadata accessor for HostedRoutingItem);
      uint64_t v123 = *(unsigned __int8 *)(v188 + *(int *)(v367 + 36));
      sub_1001E6F14(v188, type metadata accessor for HostedRoutingItem);
      if (v123 != 1) {
        goto LABEL_78;
      }
      v186 += v187;
      --v185;
    }
    while (v185);
    swift_bridgeObjectRelease();
    uint64_t v91 = v370;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v210 = *(void *)(v104 + 16);
  if (!v210)
  {
    a1 = v381;
    goto LABEL_80;
  }
  uint64_t v211 = v104 + ((*(unsigned __int8 *)(v378 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v378 + 80));
  uint64_t v212 = *(void *)(v378 + 72);
  swift_bridgeObjectRetain();
  uint64_t v213 = (uint64_t)v336;
  while (1)
  {
    sub_1001E6EAC(v211, v213, type metadata accessor for HostedRoutingItem);
    uint64_t v123 = *(unsigned __int8 *)(v213 + *(int *)(v367 + 36));
    sub_1001E6F14(v213, type metadata accessor for HostedRoutingItem);
    if (v123 != 1) {
      break;
    }
    v211 += v212;
    if (!--v210)
    {
      a1 = v381;
LABEL_78:
      swift_bridgeObjectRelease();
LABEL_80:
      *(void *)&long long v389 = &_swiftEmptySetSingleton;
      uint64_t v214 = *(void *)(v332 + 16);
      v387 = *(uint64_t **)(v214 + 16);
      if (v387)
      {
        uint64_t v88 = a1;
        a1 = *(uint64_t **)(v104 + 16);
        uint64_t v215 = (char *)((*(unsigned __int8 *)(v378 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v378 + 80));
        uint64_t v367 = (uint64_t)&v215[v214];
        v365 = v215;
        v366 = &v215[v104];
        swift_bridgeObjectRetain();
        uint64_t v216 = 0;
        do
        {
          if ((unint64_t)v216 >= *(void *)(v214 + 16))
          {
            __break(1u);
LABEL_184:
            __break(1u);
            goto LABEL_185;
          }
          uint64_t v217 = *(void *)(v378 + 72);
          sub_1001E6EAC(v367 + v217 * (void)v216, (uint64_t)v385, type metadata accessor for HostedRoutingItem);
          if (a1)
          {
            swift_bridgeObjectRetain();
            unint64_t v218 = v366;
            uint64_t v219 = a1;
            uint64_t v123 = v383;
            while (1)
            {
              sub_1001E6EAC((uint64_t)v218, v123, type metadata accessor for HostedRoutingItem);
              BOOL v220 = *(void *)v123 == *v385 && *(void *)(v123 + 8) == v385[1];
              if (v220 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                break;
              }
              uint64_t v123 = v383;
              sub_1001E6F14(v383, type metadata accessor for HostedRoutingItem);
              v218 += v217;
              uint64_t v219 = (uint64_t *)((char *)v219 - 1);
              if (!v219)
              {
                swift_bridgeObjectRelease();
                goto LABEL_83;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v123 = v344;
            sub_1001E6FE8(v383, v344, type metadata accessor for HostedRoutingItem);
            Swift::Int v222 = *(void *)v123;
            Swift::Int v221 = *(void *)(v123 + 8);
            swift_bridgeObjectRetain();
            sub_10000DDD8((Swift::Int *)&v388, v222, v221);
            swift_bridgeObjectRelease();
            sub_1001E6EAC(v123, v345, type metadata accessor for HostedRoutingItem);
            swift_beginAccess();
            unint64_t v223 = (unint64_t)v395;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v223 = sub_1001DC838(0, *(void *)(v223 + 16) + 1, 1, v223, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
            }
            unint64_t v225 = *(void *)(v223 + 16);
            unint64_t v224 = *(void *)(v223 + 24);
            if (v225 >= v224 >> 1) {
              unint64_t v223 = sub_1001DC838(v224 > 1, v225 + 1, 1, v223, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
            }
            *(void *)(v223 + 16) = v225 + 1;
            sub_1001E6FE8(v345, (uint64_t)&v365[v223 + v225 * v217], type metadata accessor for HostedRoutingItem);
            v395 = (void *)v223;
            swift_endAccess();
            sub_1001E6F14(v344, type metadata accessor for HostedRoutingItem);
            uint64_t v88 = v381;
          }
LABEL_83:
          uint64_t v216 = (uint64_t *)((char *)v216 + 1);
          sub_1001E6F14((uint64_t)v385, type metadata accessor for HostedRoutingItem);
        }
        while (v216 != v387);
        swift_bridgeObjectRelease();
        a1 = v88;
        LOBYTE(v88) = v372;
      }
      uint64_t v226 = *(void *)(v332 + 24);
      uint64_t v214 = v373;
      v387 = *(uint64_t **)(v226 + 16);
      if (v387)
      {
        uint64_t v227 = *(void *)(v104 + 16);
        unint64_t v228 = (*(unsigned __int8 *)(v378 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v378 + 80);
        v385 = (void *)(v226 + v228);
        uint64_t v367 = v228;
        unint64_t v383 = v104 + v228;
        swift_bridgeObjectRetain();
        a1 = 0;
        do
        {
          if ((unint64_t)a1 >= *(void *)(v226 + 16)) {
            goto LABEL_184;
          }
          uint64_t v123 = *(void *)(v378 + 72);
          sub_1001E6EAC((uint64_t)v385 + v123 * (void)a1, v384, type metadata accessor for HostedRoutingItem);
          if (v227)
          {
            swift_bridgeObjectRetain();
            uint64_t v229 = v383;
            uint64_t v230 = v227;
            v231 = v382;
            while (1)
            {
              sub_1001E6EAC(v229, (uint64_t)v231, type metadata accessor for HostedRoutingItem);
              BOOL v232 = *v231 == *(void *)v384 && v231[1] == *(void *)(v384 + 8);
              if (v232 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                break;
              }
              v231 = v382;
              sub_1001E6F14((uint64_t)v382, type metadata accessor for HostedRoutingItem);
              v229 += v123;
              if (!--v230)
              {
                swift_bridgeObjectRelease();
                goto LABEL_102;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v233 = v342;
            sub_1001E6FE8((uint64_t)v382, (uint64_t)v342, type metadata accessor for HostedRoutingItem);
            Swift::Int v234 = *v233;
            Swift::Int v235 = v233[1];
            swift_bridgeObjectRetain();
            sub_10000DDD8((Swift::Int *)&v388, v234, v235);
            swift_bridgeObjectRelease();
            sub_1001E6EAC((uint64_t)v233, v343, type metadata accessor for HostedRoutingItem);
            swift_beginAccess();
            unint64_t v236 = (unint64_t)v394;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v236 = sub_1001DC838(0, *(void *)(v236 + 16) + 1, 1, v236, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
            }
            uint64_t v88 = *(uint64_t **)(v236 + 16);
            unint64_t v237 = *(void *)(v236 + 24);
            if ((unint64_t)v88 >= v237 >> 1) {
              unint64_t v236 = sub_1001DC838(v237 > 1, (int64_t)v88 + 1, 1, v236, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
            }
            *(void *)(v236 + 16) = (char *)v88 + 1;
            sub_1001E6FE8(v343, v236 + v367 + (void)v88 * v123, type metadata accessor for HostedRoutingItem);
            v394 = (void *)v236;
            swift_endAccess();
            sub_1001E6F14((uint64_t)v342, type metadata accessor for HostedRoutingItem);
            LOBYTE(v88) = v372;
LABEL_102:
            uint64_t v214 = v373;
          }
          a1 = (uint64_t *)((char *)a1 + 1);
          sub_1001E6F14(v384, type metadata accessor for HostedRoutingItem);
        }
        while (a1 != v387);
        swift_bridgeObjectRelease();
        a1 = v381;
      }
      uint64_t v91 = v370;
      uint64_t v238 = v371;
      v387 = *(uint64_t **)(v104 + 16);
      if (!v387)
      {
        swift_bridgeObjectRelease();
LABEL_148:
        swift_bridgeObjectRelease();
        sub_1001E6F14(v332, type metadata accessor for HostedRoutingSession);
        sub_1001E6F14(v361, type metadata accessor for HostedRoutingSessionSnapshot);
        LODWORD(v383) = 1;
        goto LABEL_34;
      }
      uint64_t v239 = a1;
      uint64_t v240 = 0;
      unint64_t v384 = (*(unsigned __int8 *)(v378 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v378 + 80);
      v385 = (void *)(v104 + v384);
      uint64_t v241 = *(void *)(v378 + 72);
      unint64_t v383 = v241;
      while (2)
      {
        sub_1001E6EAC((uint64_t)v385 + v241 * (void)v240, (uint64_t)v238, type metadata accessor for HostedRoutingItem);
        uint64_t v242 = v389;
        if (!*(void *)(v389 + 16)) {
          goto LABEL_139;
        }
        uint64_t v244 = *v238;
        uint64_t v243 = v238[1];
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v245 = Hasher._finalize()();
        uint64_t v246 = -1 << *(unsigned char *)(v242 + 32);
        unint64_t v247 = v245 & ~v246;
        if (((*(void *)(v242 + 56 + ((v247 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v247) & 1) == 0) {
          goto LABEL_138;
        }
        uint64_t v248 = *(void *)(v242 + 48);
        uint64_t v249 = (void *)(v248 + 16 * v247);
        BOOL v250 = *v249 == v244 && v249[1] == v243;
        if (v250 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_121:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v239 = v381;
          LOBYTE(v88) = v372;
          uint64_t v91 = v370;
          uint64_t v241 = v383;
        }
        else
        {
          uint64_t v251 = ~v246;
          while (1)
          {
            unint64_t v247 = (v247 + 1) & v251;
            if (((*(void *)(v242 + 56 + ((v247 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v247) & 1) == 0) {
              break;
            }
            uint64_t v252 = (void *)(v248 + 16 * v247);
            BOOL v253 = *v252 == v244 && v252[1] == v243;
            if (v253 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_121;
            }
          }
LABEL_138:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v239 = v381;
          LOBYTE(v88) = v372;
          uint64_t v91 = v370;
          uint64_t v238 = v371;
          uint64_t v241 = v383;
LABEL_139:
          if (sub_10029F840())
          {
            swift_beginAccess();
            uint64_t v254 = (uint64_t)v238;
            uint64_t v255 = v335;
            sub_1001E6EAC(v254, v335, type metadata accessor for HostedRoutingItem);
            uint64_t v256 = v255;
            uint64_t v238 = v371;
            sub_1001E2438(0, 0, v256);
            swift_endAccess();
          }
          sub_1001E6EAC((uint64_t)v238, (uint64_t)v368, type metadata accessor for HostedRoutingItem);
          swift_beginAccess();
          unint64_t v257 = (unint64_t)v394;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v257 = sub_1001DC838(0, *(void *)(v257 + 16) + 1, 1, v257, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
          }
          unint64_t v259 = *(void *)(v257 + 16);
          unint64_t v258 = *(void *)(v257 + 24);
          if (v259 >= v258 >> 1) {
            unint64_t v257 = sub_1001DC838(v258 > 1, v259 + 1, 1, v257, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
          }
          *(void *)(v257 + 16) = v259 + 1;
          sub_1001E6FE8((uint64_t)v368, v257 + v384 + v259 * v241, type metadata accessor for HostedRoutingItem);
          v394 = (void *)v257;
          swift_endAccess();
        }
        uint64_t v240 = (uint64_t *)((char *)v240 + 1);
        uint64_t v238 = v371;
        sub_1001E6F14((uint64_t)v371, type metadata accessor for HostedRoutingItem);
        if (v240 == v387)
        {
          swift_bridgeObjectRelease();
          a1 = v239;
          goto LABEL_148;
        }
        continue;
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_1001D8098(v104, v346, (unint64_t *)&v395, (unint64_t *)&v394);
  swift_bridgeObjectRelease();
  sub_1001E6F14(v332, type metadata accessor for HostedRoutingSession);
  sub_1001E6F14(v361, type metadata accessor for HostedRoutingSessionSnapshot);
  LODWORD(v383) = 0;
  uint64_t v125 = v379;
  uint64_t v126 = v369;
  a1 = v381;
LABEL_35:
  BOOL v127 = sub_10031CA3C();
  uint64_t v128 = v374;
  unint64_t v129 = *(void (**)(void, void, void))(v374 + 16);
  BOOL v130 = v362;
  uint64_t v131 = v376;
  v385 = (void *)(v374 + 16);
  unint64_t v384 = (unint64_t)v129;
  v129(v362, v125, v376);
  if (v127)
  {
    v387 = *(uint64_t **)(v128 + 8);
    ((void (*)(char *, uint64_t))v387)(v130, v131);
LABEL_37:
    uint64_t v132 = v375;
    goto LABEL_43;
  }
  uint64_t v133 = v338;
  RoutingSessionConfiguration.context.getter();
  unsigned __int8 v134 = sub_1002ACB84();
  v382 = (void *)v91[1];
  ((void (*)(char *, uint64_t))v382)(v133, v339);
  uint64_t v135 = *(void (**)(void, void))(v128 + 8);
  uint64_t v136 = ((uint64_t (*)(char *, uint64_t))v135)(v130, v131);
  v387 = (uint64_t *)v135;
  if (v134 & 1) == 0 || (sub_1002A0454(v136)) {
    goto LABEL_42;
  }
  uint64_t v137 = (uint64_t)a1 + v377[7];
  uint64_t v138 = v328;
  sub_1001E71E8(v137, v328, &qword_1004794C0);
  uint64_t v139 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
  uint64_t v140 = *(void *)(v139 - 8);
  uint64_t v141 = *(char ***)(v140 + 48);
  uint64_t v142 = v140 + 48;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v141)(v138, 1, v139) == 1)
  {
    sub_100009A08(v138, &qword_1004794C0);
LABEL_42:
    uint64_t v132 = v375;
    uint64_t v126 = v369;
    goto LABEL_43;
  }
  uint64_t v189 = *(unsigned int *)(v138 + 40);
  int v190 = *(unsigned __int8 *)(v138 + 44);
  uint64_t v378 = *(void *)(v138 + 32);
  LODWORD(v373) = v189;
  sub_1001E70B8(v378, v189, v190);
  sub_1001E6F14(v138, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
  uint64_t v367 = v137;
  uint64_t v191 = v137;
  uint64_t v192 = v324;
  sub_1001E71E8(v191, v324, &qword_1004794C0);
  v371 = (uint64_t *)v139;
  v368 = v141;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v141)(v192, 1, v139) == 1)
  {
    sub_100009A08(v192, &qword_1004794C0);
LABEL_69:
    uint64_t v207 = v378;
    uint64_t v208 = v373;
    unsigned __int8 v209 = v190;
LABEL_70:
    sub_1001DDF44(v207, v208, v209);
LABEL_71:
    uint64_t v132 = v375;
    uint64_t v126 = v369;
    LOBYTE(v88) = v372;
    goto LABEL_43;
  }
  uint64_t v193 = *(void *)(v192 + 8);
  sub_1001E6F14(v192, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
  if (!v193) {
    goto LABEL_69;
  }
  if (v190 != 1)
  {
    if (v190) {
      goto LABEL_69;
    }
    id v194 = [self server];
    id v195 = [v194 nowPlayingServer];

    id v196 = [v195 localOriginClient];
    id v197 = [v196 deviceInfo];
    id v198 = [v197 systemMediaApplication];

    Swift::String v199 = v387;
    if (!v198)
    {
      sub_1001DDF44(v378, v373, 0);

      goto LABEL_71;
    }
    v371 = (uint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v201 = v200;

    uint64_t v202 = v320;
    uint64_t v203 = v376;
    ((void (*)(char *, uint64_t, uint64_t))v384)(v320, v340+ OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v376);
    unint64_t v204 = v318;
    RoutingSessionConfiguration.context.getter();
    ((void (*)(char *, uint64_t))v199)(v202, v203);
    uint64_t v205 = v339;
    unint64_t v206 = v196;
    if (v322(v204, v339) == enum case for RoutingSessionConfiguration.Context.app(_:))
    {
      ((void (*)(uint64_t **, uint64_t))v370[12])(v204, v205);
      if (*v204 != v371 || v204[1] != v201)
      {
        char v287 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v273 = v378;
        LOBYTE(v88) = v372;
        if ((v287 & 1) == 0)
        {
          sub_1001DDF44(v378, v373, 0);

          goto LABEL_42;
        }
        goto LABEL_159;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t **, uint64_t))v382)(v204, v205);
    }
    uint64_t v273 = v378;
    LOBYTE(v88) = v372;
LABEL_159:
    uint64_t v274 = v386;
    sub_10029EEAC(*a1, a1[1], v386);
    swift_beginAccess();
    uint64_t v275 = (uint64_t)v274;
    uint64_t v276 = v335;
    sub_1001E6FE8(v275, v335, type metadata accessor for HostedRoutingItem);
    sub_1001E2438(0, 0, v276);
    swift_endAccess();

    sub_1001DDF44(v273, v373, 0);
    goto LABEL_42;
  }
  uint64_t v364 = v142;
  id v260 = [self server];
  id v261 = [v260 nowPlayingServer];

  uint64_t v262 = (char *)[v261 localOriginClient];
  id v263 = [v262 deviceInfo];
  v264 = (char *)[v263 systemPodcastApplication];

  char v265 = v372;
  if (!v264)
  {
    sub_1001DDF44(v378, v373, 1u);

    uint64_t v132 = v375;
    uint64_t v126 = v369;
    LOBYTE(v88) = v265;
    goto LABEL_43;
  }
  v366 = v262;
  v365 = v264;
  uint64_t v266 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v268 = v267;
  uint64_t v269 = v321;
  uint64_t v270 = v376;
  ((void (*)(char *, uint64_t, uint64_t))v384)(v321, v340+ OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration, v376);
  uint64_t v271 = v319;
  RoutingSessionConfiguration.context.getter();
  ((void (*)(char *, uint64_t))v387)(v269, v270);
  uint64_t v272 = v339;
  if (v322(v271, v339) != enum case for RoutingSessionConfiguration.Context.app(_:))
  {
    swift_bridgeObjectRelease();
    ((void (*)(void *, uint64_t))v382)(v271, v272);
    goto LABEL_161;
  }
  ((void (*)(void *, uint64_t))v370[12])(v271, v272);
  if (*v271 == v266 && v271[1] == v268)
  {
    swift_bridgeObjectRelease_n();
LABEL_161:
    uint64_t v126 = v369;
    uint64_t v214 = v378;
    LOBYTE(v88) = v265;
    id v277 = v365;
    goto LABEL_162;
  }
  char v288 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v126 = v369;
  uint64_t v214 = v378;
  LOBYTE(v88) = v265;
  id v277 = v365;
  if ((v288 & 1) == 0)
  {

    sub_1001DDF44(v214, v373, 1u);
    goto LABEL_37;
  }
LABEL_162:
  uint64_t v123 = (uint64_t)v366;
  id v278 = [v366 defaultSupportedCommandsForClient:v277];

  uint64_t v279 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v280 = (unint64_t)sub_1001D2430(v279);
  swift_bridgeObjectRelease();
  if (!v280)
  {
LABEL_173:
    long long v389 = 0u;
    long long v390 = 0u;
    uint64_t v132 = v375;
    uint64_t v286 = v373;
LABEL_174:

    sub_1001DDF44(v214, v286, 1u);
    sub_100009A08((uint64_t)&v389, &qword_100479F50);
LABEL_43:
    uint64_t v143 = swift_beginAccess();
    uint64_t v144 = (uint64_t)v395;
    __chkstk_darwin(v143);
    uint64_t v145 = v132;
    uint64_t v146 = sub_1001D2BC8((void (*)(uint64_t))sub_1001E7088, (uint64_t)&v314, v144);
    swift_bridgeObjectRelease();
    v393 = v146;
    uint64_t v147 = swift_beginAccess();
    uint64_t v148 = (uint64_t)v394;
    __chkstk_darwin(v147);
    v315 = a1;
    LOBYTE(v316) = (_BYTE)v88;
    uint64_t v149 = sub_1001D2BC8((void (*)(uint64_t))sub_1001E7838, (uint64_t)&v314, v148);
    swift_bridgeObjectRelease();
    unint64_t v392 = (unint64_t)v149;
    if ((v383 & 1) == 0)
    {
      uint64_t v150 = v337;
      sub_1001D8C10(v337, a10);
      sub_1001D8C10(v150, a10);
    }
    v386 = v145;
    uint64_t v151 = v351;
    uint64_t v152 = v350;
    uint64_t v153 = v349;
    uint64_t v154 = v348;
    sub_1001E71E8((uint64_t)v381 + v377[7], v380, &qword_1004794C0);
    uint64_t v155 = v379;
    RoutingSessionConfiguration.nowPlayingInfoProperties.getter();
    static RoutingSessionConfiguration.NowPlayingInfoProperties.trackInfo.getter();
    sub_100015AE0(&qword_100479568, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.NowPlayingInfoProperties);
    char v156 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v157 = *(void (**)(void, void))(v152 + 8);
    v157(v153, v151);
    v157(v154, v151);
    uint64_t v158 = v126;
    uint64_t v159 = v155;
    uint64_t v160 = v126;
    uint64_t v161 = v376;
    ((void (*)(char *, uint64_t, uint64_t))v384)(v158, v159, v376);
    if (v156)
    {
      ((void (*)(char *, uint64_t))v387)(v160, v161);
    }
    else
    {
      RoutingSessionConfiguration.nowPlayingInfoProperties.getter();
      static RoutingSessionConfiguration.NowPlayingInfoProperties.extendedTrackInfo.getter();
      char v162 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      v157(v153, v151);
      v157(v154, v151);
      ((void (*)(char *, uint64_t))v387)(v160, v161);
      if ((v162 & 1) == 0)
      {
        uint64_t v166 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
        uint64_t v164 = v380;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 48))(v380, 1, v166))
        {
          uint64_t v167 = (uint64_t *)v333;
          RoutingSession.NowPlayingInfo.TrackInfo.ExtendedInfo.init(storeIdentifier:isrc:)();
          v315 = v167;
          long long v313 = 0u;
          long long v314 = 0u;
          uint64_t v168 = v325;
          RoutingSession.NowPlayingInfo.TrackInfo.init(title:album:artist:composer:station:attribution:extendedInfo:)();
          (*(void (**)(uint64_t, char *, uint64_t))(v326 + 40))(v164 + *(int *)(v166 + 40), v168, v327);
        }
        goto LABEL_53;
      }
    }
    RoutingSessionConfiguration.nowPlayingInfoProperties.getter();
    static RoutingSessionConfiguration.NowPlayingInfoProperties.extendedTrackInfo.getter();
    char v163 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    v157(v153, v151);
    v157(v154, v151);
    uint64_t v164 = v380;
    if ((v163 & 1) == 0)
    {
      uint64_t v165 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v165 - 8) + 48))(v164, 1, v165))
      {
        RoutingSession.NowPlayingInfo.TrackInfo.ExtendedInfo.init(storeIdentifier:isrc:)();
        RoutingSession.NowPlayingInfo.TrackInfo.extendedInfo.setter();
      }
    }
LABEL_53:
    uint64_t v169 = v381;
    uint64_t v170 = v381[1];
    v387 = (uint64_t *)*v381;
    v385 = v393;
    unint64_t v384 = v392;
    uint64_t v171 = v352;
    sub_1001E71E8(v164, v352, &qword_1004794C0);
    uint64_t v172 = v377;
    uint64_t v173 = (uint64_t)v357;
    (*(void (**)(char *, char *, uint64_t))(v353 + 16))(v357, (char *)v169 + v377[15], v354);
    unsigned __int8 v174 = *((unsigned char *)v169 + v347);
    uint64_t v175 = (unsigned int *)((char *)v169 + v172[12]);
    uint64_t v176 = *v175;
    unsigned __int8 v177 = *((unsigned char *)v175 + 4);
    uint64_t v178 = (uint64_t)v358;
    (*(void (**)(char *, char *, uint64_t))(v355 + 16))(v358, (char *)v169 + v172[8], v356);
    uint64_t v179 = (uint64_t)v169 + v172[14];
    uint64_t v180 = v359;
    sub_1001E71E8(v179, v359, &qword_1004794B8);
    swift_bridgeObjectRetain();
    uint64_t v181 = variable initialization expression of MRDFastSyncGroupSession.pendingParticipants();
    uint64_t v182 = variable initialization expression of MRDFastSyncGroupSession.pendingParticipants();
    unsigned __int8 v391 = v177;
    sub_1002A69F0((uint64_t)v387, v170, v385, v384, v171, v173, v181, (uint64_t)v182, v360, v174, SDWORD1(v314), v176, (v176 | ((unint64_t)v177 << 32)) >> 32, v178, v180);
    return sub_100009A08(v380, &qword_1004794C0);
  }
  if (v280 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v281 = _CocoaArrayWrapper.endIndex.getter();
    if (v281) {
      goto LABEL_165;
    }
    goto LABEL_172;
  }
  uint64_t v281 = *(void *)((v280 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v281)
  {
LABEL_172:
    swift_bridgeObjectRelease_n();
    a1 = v381;
    uint64_t v126 = v369;
    LOBYTE(v88) = v372;
    uint64_t v123 = (uint64_t)v366;
    goto LABEL_173;
  }
LABEL_165:
  uint64_t v282 = 4;
  while (1)
  {
    if ((v280 & 0xC000000000000001) != 0) {
      id v283 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v283 = *(id *)(v280 + 8 * v282);
    }
    uint64_t v284 = v283;
    uint64_t v285 = v282 - 3;
    if (__OFADD__(v282 - 4, 1))
    {
      __break(1u);
LABEL_218:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      a1 = v381;
      v310 = v386;
      sub_10029EEAC(*v381, v381[1], v386);
      swift_beginAccess();
      uint64_t v311 = (uint64_t)v310;
      uint64_t v312 = v335;
      sub_1001E6FE8(v311, v335, type metadata accessor for HostedRoutingItem);
      sub_1001E2438(0, 0, v312);
      swift_endAccess();

      uint64_t v207 = v378;
      uint64_t v208 = v373;
      unsigned __int8 v209 = 1;
      goto LABEL_70;
    }
    if ([v283 command] == 133) {
      break;
    }

    ++v282;
    if (v285 == v281) {
      goto LABEL_172;
    }
  }
  swift_bridgeObjectRelease_n();
  id v289 = [v284 options];

  a1 = v381;
  LOBYTE(v88) = v372;
  uint64_t v123 = (uint64_t)v366;
  if (!v289)
  {
    uint64_t v126 = v369;
    goto LABEL_173;
  }
  uint64_t v290 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  v393 = (void *)kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  id v291 = kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  sub_100013A80(&qword_100479570);
  sub_1001E70CC();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v290 + 16))
  {
    unint64_t v292 = sub_10018C3C4((uint64_t)&v388);
    if (v293)
    {
      sub_10018FDAC(*(void *)(v290 + 56) + 32 * v292, (uint64_t)&v389);
      goto LABEL_186;
    }
  }
LABEL_185:
  long long v389 = 0u;
  long long v390 = 0u;
LABEL_186:
  uint64_t v126 = v369;
  uint64_t v286 = v373;
  sub_10018FFC8((uint64_t)&v388);
  swift_bridgeObjectRelease();
  if (!*((void *)&v390 + 1))
  {
    uint64_t v132 = v375;
    goto LABEL_174;
  }
  sub_100013A80(&qword_10047A080);
  if ((swift_dynamicCast() & 1) == 0)
  {

    sub_1001DDF44(v214, v286, 1u);
    goto LABEL_37;
  }
  v294 = v388;
  uint64_t v295 = v388[2];
  if (!v295)
  {

    swift_bridgeObjectRelease();
LABEL_216:
    sub_1001DDF44(v378, v373, 1u);
    a1 = v381;
    goto LABEL_71;
  }
  v296 = (char *)(v388 + 4);
  v370 = v388;
  swift_bridgeObjectRetain();
  uint64_t v297 = 0;
  uint64_t v298 = (uint64_t)v317;
  uint64_t v299 = v367;
  v382 = v294 + 4;
  while (2)
  {
    v300 = &v296[16 * v297];
    uint64_t v302 = *(void *)v300;
    uint64_t v301 = *((void *)v300 + 1);
    sub_1001E71E8(v299, v298, &qword_1004794C0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t *))v368)(v298, 1, v371) == 1)
    {
      sub_100009A08(v298, &qword_1004794C0);
      goto LABEL_191;
    }
    v303 = *(void **)(v298 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001E6F14(v298, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
    if (!v303[2]) {
      goto LABEL_200;
    }
    if (v303[4] == v302 && v303[5] == v301) {
      goto LABEL_218;
    }
    uint64_t v305 = v303[2];
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if (result) {
      goto LABEL_218;
    }
    if (v305 == 1)
    {
LABEL_200:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_201:
      v296 = (char *)v382;
LABEL_191:
      if (++v297 == v295)
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_216;
      }
      continue;
    }
    break;
  }
  v306 = v303 + 7;
  uint64_t v307 = 1;
  while (1)
  {
    uint64_t v308 = v307 + 1;
    if (__OFADD__(v307, 1)) {
      break;
    }
    if (*(v306 - 1) == v302 && *v306 == v301) {
      goto LABEL_218;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if (result) {
      goto LABEL_218;
    }
    v306 += 2;
    ++v307;
    if (v308 == v305)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v298 = (uint64_t)v317;
      uint64_t v299 = v367;
      goto LABEL_201;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D7DAC(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v34 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v33 = (char *)&v32 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v20 = (char *)&v32 - v19;
  uint64_t v21 = *(void *)(a2 + 16);
  uint64_t v32 = v17;
  uint64_t v35 = a5;
  if (v21)
  {
    char v22 = a4;
    uint64_t v24 = *a1;
    uint64_t v23 = a1[1];
    uint64_t v25 = *(void *)(v18 + 72);
    uint64_t v26 = (void *)(((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))
                   + a2
                   + 8);
    while (1)
    {
      uint64_t v17 = *(v26 - 1);
      if (v17 == v24 && *v26 == v23) {
        break;
      }
      uint64_t v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      if (v17) {
        break;
      }
      uint64_t v26 = (void *)((char *)v26 + v25);
      if (!--v21)
      {
        char v28 = 0;
        a4 = v22;
        goto LABEL_12;
      }
    }
    char v28 = 1;
    a4 = v22;
  }
  else
  {
    char v28 = 0;
  }
LABEL_12:
  if (sub_1002A0454(v17))
  {
    if (a4)
    {
      sub_1001E6EAC((uint64_t)a1, (uint64_t)v20, type metadata accessor for HostedRoutingItem);
      if ((v28 & 1) == 0)
      {
        char v29 = !sub_10029F6DC();
LABEL_28:
        sub_1001E6F14((uint64_t)v20, type metadata accessor for HostedRoutingItem);
        return v29 & 1;
      }
LABEL_23:
      char v29 = 0;
      goto LABEL_28;
    }
    char v29 = v28 ^ 1;
  }
  else
  {
    if ((a4 & 1) == 0)
    {
      if (sub_10031CA3C())
      {
        sub_1001E6EAC((uint64_t)a1, (uint64_t)v16, type metadata accessor for HostedRoutingItem);
        if (v28)
        {
          char v29 = 0;
          uint64_t v20 = v16;
        }
        else
        {
          BOOL v30 = sub_10029F6DC();
          uint64_t v20 = v33;
          sub_1001E6FE8((uint64_t)v16, (uint64_t)v33, type metadata accessor for HostedRoutingItem);
          if (v30) {
            char v29 = 1;
          }
          else {
            char v29 = v20[*(int *)(v32 + 60)];
          }
        }
        goto LABEL_28;
      }
      uint64_t v20 = v34;
      sub_1001E6EAC((uint64_t)a1, (uint64_t)v34, type metadata accessor for HostedRoutingItem);
      if ((v28 & 1) == 0)
      {
        char v29 = sub_10029F6DC();
        goto LABEL_28;
      }
      goto LABEL_23;
    }
    char v29 = 0;
  }
  return v29 & 1;
}

uint64_t sub_1001D8098(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v68 = a4;
  uint64_t v75 = a3;
  uint64_t v70 = a2;
  uint64_t v76 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v5 = *(void *)(v76 - 8);
  uint64_t v6 = __chkstk_darwin(v76);
  uint64_t v69 = (uint64_t)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v67 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)v67 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v67 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (void *)((char *)v67 - v17);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)v67 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v67 - v22;
  uint64_t v24 = *(void *)(a1 + 16);
  uint64_t v71 = v5;
  if (v24)
  {
    unint64_t v73 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v25 = a1 + v73;
    uint64_t v26 = *(void *)(v5 + 72);
    v67[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v72 = v10;
    while (1)
    {
      sub_1001E6EAC(v25, (uint64_t)v23, type metadata accessor for HostedRoutingItem);
      BOOL v29 = sub_10029F6A0();
      sub_1001E6EAC((uint64_t)v23, (uint64_t)v21, type metadata accessor for HostedRoutingItem);
      if (v29) {
        break;
      }
      char v30 = v21[*(int *)(v76 + 36)];
      sub_1001E6F14((uint64_t)v21, type metadata accessor for HostedRoutingItem);
      sub_1001E6EAC((uint64_t)v23, (uint64_t)v18, type metadata accessor for HostedRoutingItem);
      if (v30) {
        goto LABEL_8;
      }
      uint64_t v36 = *v18;
      uint64_t v37 = v18[1];
      swift_bridgeObjectRetain();
      LOBYTE(v36) = sub_10018835C(v36, v37, v70);
      swift_bridgeObjectRelease();
      sub_1001E6F14((uint64_t)v18, type metadata accessor for HostedRoutingItem);
      if (v36)
      {
        sub_1001E6EAC((uint64_t)v23, v69, type metadata accessor for HostedRoutingItem);
        uint64_t v38 = v68;
        swift_beginAccess();
        unint64_t v39 = *v38;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t *v38 = v39;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v39 = sub_1001DC838(0, *(void *)(v39 + 16) + 1, 1, v39, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
          *uint64_t v68 = v39;
        }
        unint64_t v42 = *(void *)(v39 + 16);
        unint64_t v41 = *(void *)(v39 + 24);
        unint64_t v43 = v42 + 1;
        if (v42 >= v41 >> 1)
        {
          v67[0] = v42 + 1;
          uint64_t v44 = sub_1001DC838(v41 > 1, v42 + 1, 1, v39, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
          unint64_t v43 = v67[0];
          unint64_t v39 = v44;
          *uint64_t v68 = v44;
        }
        *(void *)(v39 + 16) = v43;
        uint64_t v27 = v39 + v73 + v42 * v26;
        uint64_t v28 = v69;
        goto LABEL_4;
      }
LABEL_9:
      sub_1001E6EAC((uint64_t)v23, (uint64_t)v10, type metadata accessor for HostedRoutingItem);
      uint64_t v31 = v75;
      swift_beginAccess();
      unint64_t v32 = *v31;
      char v33 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t *v31 = v32;
      if ((v33 & 1) == 0)
      {
        unint64_t v32 = sub_1001DC838(0, *(void *)(v32 + 16) + 1, 1, v32, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
        *uint64_t v75 = v32;
      }
      unint64_t v35 = *(void *)(v32 + 16);
      unint64_t v34 = *(void *)(v32 + 24);
      if (v35 >= v34 >> 1)
      {
        unint64_t v32 = sub_1001DC838(v34 > 1, v35 + 1, 1, v32, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
        *uint64_t v75 = v32;
      }
      *(void *)(v32 + 16) = v35 + 1;
      uint64_t v27 = v32 + v73 + v35 * v26;
      uint64_t v10 = v72;
      uint64_t v28 = (uint64_t)v72;
LABEL_4:
      sub_1001E6FE8(v28, v27, type metadata accessor for HostedRoutingItem);
      swift_endAccess();
      sub_1001E6F14((uint64_t)v23, type metadata accessor for HostedRoutingItem);
      v25 += v26;
      if (!--v24)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = v71;
        goto LABEL_20;
      }
    }
    sub_1001E6F14((uint64_t)v21, type metadata accessor for HostedRoutingItem);
    sub_1001E6EAC((uint64_t)v23, (uint64_t)v18, type metadata accessor for HostedRoutingItem);
LABEL_8:
    sub_1001E6F14((uint64_t)v18, type metadata accessor for HostedRoutingItem);
    goto LABEL_9;
  }
LABEL_20:
  uint64_t v45 = v75;
  swift_beginAccess();
  unint64_t v46 = *v45;
  uint64_t v77 = _swiftEmptyArrayStorage;
  uint64_t v47 = *(void *)(v46 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (v47)
  {
    unint64_t v49 = 0;
    uint64_t v50 = _swiftEmptyArrayStorage;
    while (v49 < *(void *)(v46 + 16))
    {
      unint64_t v51 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v52 = *(void *)(v5 + 72);
      sub_1001E6EAC(v46 + v51 + v52 * v49, (uint64_t)v15, type metadata accessor for HostedRoutingItem);
      if (v15[*(int *)(v76 + 36)])
      {
        uint64_t result = sub_1001E6F14((uint64_t)v15, type metadata accessor for HostedRoutingItem);
      }
      else
      {
        sub_1001E6FE8((uint64_t)v15, v74, type metadata accessor for HostedRoutingItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001E1F90(0, v50[2] + 1, 1);
        }
        uint64_t v50 = v77;
        unint64_t v54 = v77[2];
        unint64_t v53 = v77[3];
        if (v54 >= v53 >> 1)
        {
          sub_1001E1F90(v53 > 1, v54 + 1, 1);
          uint64_t v50 = v77;
        }
        v50[2] = v54 + 1;
        uint64_t result = sub_1001E6FE8(v74, (uint64_t)v50 + v51 + v54 * v52, type metadata accessor for HostedRoutingItem);
        uint64_t v5 = v71;
      }
      if (v47 == ++v49)
      {
        uint64_t v55 = v77;
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  uint64_t v55 = _swiftEmptyArrayStorage;
LABEL_33:
  swift_bridgeObjectRelease();
  uint64_t v56 = v55[2];
  swift_release();
  if (!v56)
  {
    uint64_t v57 = (uint64_t *)v68;
    swift_beginAccess();
    uint64_t v58 = *v57;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    sub_1001E1DBC(v58, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *uint64_t v57 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  uint64_t v59 = v75;
  swift_beginAccess();
  uint64_t v60 = *(void *)(*v59 + 16);
  uint64_t v61 = (uint64_t *)v68;
  uint64_t result = swift_beginAccess();
  uint64_t v62 = *v61;
  uint64_t v63 = *(void *)(v62 + 16);
  BOOL v64 = __OFADD__(v60, v63);
  uint64_t v65 = v60 + v63;
  if (v64) {
    goto LABEL_40;
  }
  if (v65 <= 3)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    sub_1001E1DBC(v62, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v66 = v68;
    swift_beginAccess();
    *uint64_t v66 = (unint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001D89F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_100013A80(&qword_100478990);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_1001E6EAC(a1, a4, type metadata accessor for HostedRoutingItem);
  uint64_t v15 = *a2;
  uint64_t v14 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a4 + 16) = v15;
  *(void *)(a4 + 24) = v14;
  uint64_t v16 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v17 = a4 + *(int *)(v16 + 32);
  sub_1001E71E8(v17, (uint64_t)v13, &qword_100478990);
  uint64_t v18 = type metadata accessor for RoutingItem.SelectionIndicator();
  uint64_t v19 = *(void *)(v18 - 8);
  LODWORD(v15) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18);
  uint64_t result = sub_100009A08((uint64_t)v13, &qword_100478990);
  if (v15 == 1)
  {
    if (*(unsigned char *)(a1 + *(int *)(v16 + 36)) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v11, enum case for RoutingItem.SelectionIndicator.selected(_:), v18);
    }
    else
    {
      if (a3) {
        uint64_t v21 = (unsigned int *)&enum case for RoutingItem.SelectionIndicator.none(_:);
      }
      else {
        uint64_t v21 = (unsigned int *)&enum case for RoutingItem.SelectionIndicator.selectable(_:);
      }
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v11, *v21, v18);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v11, 0, 1, v18);
    return sub_1001E7184((uint64_t)v11, v17, &qword_100478990);
  }
  return result;
}

Swift::Int sub_1001D8C10(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2)
{
  type metadata accessor for HostedRoutingItem(0);
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1001E13F4(v5);
  }
  Swift::Int result = sub_1001E2688(a1, a2);
  unint64_t *v2 = v5;
  return result;
}

uint64_t sub_1001D8CD4(uint64_t *a1, void *a2, uint64_t a3, unint64_t *a4, void *a5, uint64_t a6, int a7, double a8)
{
  int v116 = a7;
  uint64_t v117 = a6;
  uint64_t v118 = a5;
  uint64_t v120 = a3;
  uint64_t v121 = a4;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v107 = *(void *)(v11 - 8);
  uint64_t v108 = v11;
  __chkstk_darwin(v11);
  uint64_t v105 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100013A80(&qword_1004794C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v115 = (uint64_t)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
  uint64_t v112 = *(void *)(v15 - 8);
  uint64_t v113 = v15;
  __chkstk_darwin(v15);
  uint64_t v111 = (uint64_t)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for HostedRoutingSession(0);
  uint64_t v119 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v104 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v103 = (char *)&v103 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v106 = (char *)&v103 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v109 = (char *)&v103 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v110 = (uint64_t)&v103 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v114 = (uint64_t)&v103 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  unint64_t v32 = (char *)&v103 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  unint64_t v35 = (char *)&v103 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v103 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  unint64_t v41 = (char *)&v103 - v40;
  uint64_t result = __chkstk_darwin(v39);
  uint64_t v44 = (char *)&v103 - v43;
  uint64_t v46 = *a1;
  uint64_t v45 = a1[1];
  if (*a1 == *a2 && v45 == a2[1]) {
    return result;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return result;
  }
  if (RoutingSessionConfiguration.filterInactiveSessions.getter())
  {
    uint64_t v47 = v118[1];
    if (v47 && (v46 == *v118 && v47 == v45 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      sub_1001E6EAC((uint64_t)a1, (uint64_t)v41, type metadata accessor for HostedRoutingSession);
      uint64_t v48 = v121;
      unint64_t v49 = v121[1];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v48[1] = v49;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v49 = sub_1001DC838(0, *(void *)(v49 + 16) + 1, 1, v49, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
        v48[1] = v49;
      }
      uint64_t v51 = v119;
      unint64_t v53 = *(void *)(v49 + 16);
      unint64_t v52 = *(void *)(v49 + 24);
      if (v53 >= v52 >> 1)
      {
        unint64_t v49 = sub_1001DC838(v52 > 1, v53 + 1, 1, v49, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
        v48[1] = v49;
      }
      *(void *)(v49 + 16) = v53 + 1;
      return sub_1001E6FE8((uint64_t)v41, v49+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v53, type metadata accessor for HostedRoutingSession);
    }
    swift_bridgeObjectRetain();
    char v60 = sub_10018835C(v46, v45, v117);
    swift_bridgeObjectRelease();
    if (v60)
    {
      sub_1001E6EAC((uint64_t)a1, (uint64_t)v38, type metadata accessor for HostedRoutingSession);
      uint64_t v61 = v121;
      unint64_t v62 = *v121;
      char v63 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t *v61 = v62;
      if ((v63 & 1) == 0)
      {
        unint64_t v62 = sub_1001DC838(0, *(void *)(v62 + 16) + 1, 1, v62, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
        unint64_t *v61 = v62;
      }
      uint64_t v64 = v119;
      unint64_t v66 = *(void *)(v62 + 16);
      unint64_t v65 = *(void *)(v62 + 24);
      if (v66 >= v65 >> 1)
      {
        unint64_t v62 = sub_1001DC838(v65 > 1, v66 + 1, 1, v62, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
        unint64_t *v61 = v62;
      }
      *(void *)(v62 + 16) = v66 + 1;
      return sub_1001E6FE8((uint64_t)v38, v62+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v66, type metadata accessor for HostedRoutingSession);
    }
    uint64_t v67 = sub_1001E6EAC((uint64_t)a1, (uint64_t)v35, type metadata accessor for HostedRoutingSession);
    if (v116)
    {
      sub_1001E6F14((uint64_t)v35, type metadata accessor for HostedRoutingSession);
      goto LABEL_33;
    }
    char v68 = sub_1002A0454(v67);
    sub_1001E6F14((uint64_t)v35, type metadata accessor for HostedRoutingSession);
    if ((v68 & 1) == 0)
    {
LABEL_33:
      if (*((unsigned char *)a1 + *(int *)(v17 + 64)) == 1)
      {
        uint64_t v75 = v114;
        sub_1001E6EAC((uint64_t)a1, v114, type metadata accessor for HostedRoutingSession);
        uint64_t v76 = v121;
        unint64_t v77 = *v121;
        char v78 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v76 = v77;
        if ((v78 & 1) == 0)
        {
          unint64_t v77 = sub_1001DC838(0, *(void *)(v77 + 16) + 1, 1, v77, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
          *uint64_t v76 = v77;
        }
        uint64_t v79 = v119;
        unint64_t v81 = *(void *)(v77 + 16);
        unint64_t v80 = *(void *)(v77 + 24);
        unint64_t v82 = v81 + 1;
        if (v81 >= v80 >> 1)
        {
          unint64_t v77 = sub_1001DC838(v80 > 1, v81 + 1, 1, v77, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
          *uint64_t v76 = v77;
        }
LABEL_43:
        *(void *)(v77 + 16) = v82;
        return sub_1001E6FE8(v75, v77+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v81, type metadata accessor for HostedRoutingSession);
      }
      uint64_t v83 = v115;
      sub_1001E71E8((uint64_t)a1 + *(int *)(v17 + 28), v115, &qword_1004794C0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v83, 1, v113) == 1)
      {
        sub_100009A08(v83, &qword_1004794C0);
        uint64_t v75 = v110;
        sub_1001E6EAC((uint64_t)a1, v110, type metadata accessor for HostedRoutingSession);
        uint64_t v84 = v121;
        unint64_t v77 = v121[1];
        char v85 = swift_isUniquelyReferenced_nonNull_native();
        v84[1] = v77;
        if ((v85 & 1) == 0)
        {
          unint64_t v77 = sub_1001DC838(0, *(void *)(v77 + 16) + 1, 1, v77, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
          v84[1] = v77;
        }
        uint64_t v79 = v119;
        unint64_t v81 = *(void *)(v77 + 16);
        unint64_t v86 = *(void *)(v77 + 24);
        unint64_t v82 = v81 + 1;
        if (v81 >= v86 >> 1)
        {
          unint64_t v77 = sub_1001DC838(v86 > 1, v81 + 1, 1, v77, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
          v84[1] = v77;
        }
        goto LABEL_43;
      }
      uint64_t v87 = v111;
      sub_1001E6FE8(v83, v111, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
      uint64_t v88 = v121;
      if (*(void *)(v87 + 8))
      {
        if (sub_1002A047C())
        {
          uint64_t v89 = (uint64_t)a1;
          uint64_t v90 = (uint64_t)v106;
LABEL_50:
          sub_1001E6EAC(v89, v90, type metadata accessor for HostedRoutingSession);
          unint64_t v95 = *v88;
          char v96 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v88 = v95;
          if ((v96 & 1) == 0)
          {
            unint64_t v95 = sub_1001DC838(0, *(void *)(v95 + 16) + 1, 1, v95, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
            *uint64_t v88 = v95;
          }
          uint64_t v97 = v119;
          unint64_t v99 = *(void *)(v95 + 16);
          unint64_t v98 = *(void *)(v95 + 24);
          unint64_t v100 = v99 + 1;
          if (v99 >= v98 >> 1)
          {
            unint64_t v95 = sub_1001DC838(v98 > 1, v99 + 1, 1, v95, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
            *uint64_t v88 = v95;
          }
LABEL_59:
          *(void *)(v95 + 16) = v100;
          sub_1001E6FE8(v90, v95+ ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80))+ *(void *)(v97 + 72) * v99, type metadata accessor for HostedRoutingSession);
          return sub_1001E6F14(v87, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
        }
        uint64_t v92 = v105;
        sub_1002A6764(v105);
        Date.timeIntervalSinceNow.getter();
        double v94 = v93;
        (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v92, v108);
        if (v94 > -a8)
        {
          uint64_t v89 = (uint64_t)a1;
          uint64_t v90 = (uint64_t)v103;
          goto LABEL_50;
        }
        uint64_t v91 = (uint64_t)a1;
        uint64_t v90 = (uint64_t)v104;
      }
      else
      {
        uint64_t v91 = (uint64_t)a1;
        uint64_t v90 = (uint64_t)v109;
      }
      sub_1001E6EAC(v91, v90, type metadata accessor for HostedRoutingSession);
      unint64_t v95 = v88[1];
      char v101 = swift_isUniquelyReferenced_nonNull_native();
      v88[1] = v95;
      if ((v101 & 1) == 0)
      {
        unint64_t v95 = sub_1001DC838(0, *(void *)(v95 + 16) + 1, 1, v95, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
        v88[1] = v95;
      }
      uint64_t v97 = v119;
      unint64_t v99 = *(void *)(v95 + 16);
      unint64_t v102 = *(void *)(v95 + 24);
      unint64_t v100 = v99 + 1;
      if (v99 >= v102 >> 1)
      {
        unint64_t v95 = sub_1001DC838(v102 > 1, v99 + 1, 1, v95, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
        v88[1] = v95;
      }
      goto LABEL_59;
    }
    sub_1001E6EAC((uint64_t)a1, (uint64_t)v32, type metadata accessor for HostedRoutingSession);
    uint64_t v69 = v121;
    unint64_t v70 = *v121;
    char v71 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v69 = v70;
    if ((v71 & 1) == 0)
    {
      unint64_t v70 = sub_1001DC838(0, *(void *)(v70 + 16) + 1, 1, v70, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
      *uint64_t v69 = v70;
    }
    uint64_t v72 = v119;
    unint64_t v74 = *(void *)(v70 + 16);
    unint64_t v73 = *(void *)(v70 + 24);
    if (v74 >= v73 >> 1)
    {
      unint64_t v70 = sub_1001DC838(v73 > 1, v74 + 1, 1, v70, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
      *uint64_t v69 = v70;
    }
    *(void *)(v70 + 16) = v74 + 1;
    return sub_1001E6FE8((uint64_t)v32, v70+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v74, type metadata accessor for HostedRoutingSession);
  }
  else
  {
    sub_1001E6EAC((uint64_t)a1, (uint64_t)v44, type metadata accessor for HostedRoutingSession);
    unint64_t v54 = v121;
    unint64_t v55 = *v121;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v54 = v55;
    if ((v56 & 1) == 0)
    {
      unint64_t v55 = sub_1001DC838(0, *(void *)(v55 + 16) + 1, 1, v55, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
      *unint64_t v54 = v55;
    }
    uint64_t v57 = v119;
    unint64_t v59 = *(void *)(v55 + 16);
    unint64_t v58 = *(void *)(v55 + 24);
    if (v59 >= v58 >> 1)
    {
      unint64_t v55 = sub_1001DC838(v58 > 1, v59 + 1, 1, v55, &qword_100479558, type metadata accessor for HostedRoutingSession, type metadata accessor for HostedRoutingSession);
      *unint64_t v54 = v55;
    }
    *(void *)(v55 + 16) = v59 + 1;
    return sub_1001E6FE8((uint64_t)v44, v55+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(void *)(v57 + 72) * v59, type metadata accessor for HostedRoutingSession);
  }
}

uint64_t sub_1001D9B90(uint64_t a1, unint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v9 = *v4;
  uint64_t v10 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [a4 deviceUID];
  if (!v14 || (v14, [a4 groupContainsDiscoverableGroupLeader]))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  if (*(void *)(a1 + 16))
  {
    uint64_t v15 = sub_1001E6EAC(a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v16 = sub_1002A0454(v15);
    if (v16)
    {
      uint64_t v28 = a2;
      unint64_t v29 = a3;
      __chkstk_darwin(v16);
      *(&v27 - 4) = (uint64_t)a4;
      *(&v27 - 3) = (uint64_t)&v28;
      uint64_t v25 = v13;
      uint64_t v26 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1001D27E4((uint64_t (*)(char *))sub_1001E724C, (uint64_t)(&v27 - 6), a1);
      uint64_t v18 = v28;
      unint64_t v19 = v29;
      swift_bridgeObjectRetain();
      a1 = MRDFastSyncGroupSessionState.rawValue.getter(v17, v18, v19, v20);
      sub_1001E6F14((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1001E6F14((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
  }
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  _StringGuts.grow(_:)(72);
  uint64_t v31 = v28;
  unint64_t v32 = v29;
  v22._uint64_t countAndFlagsBits = 91;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  v23._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._object = (void *)0x80000001003B5530;
  v24._uint64_t countAndFlagsBits = 0xD000000000000043;
  String.append(_:)(v24);
  uint64_t v28 = a1;
  unint64_t v29 = a2;
  unint64_t v30 = a3;
  _print_unlocked<A, B>(_:_:)();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D9EAC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v79 = *v4;
  uint64_t v9 = sub_100013A80((uint64_t *)&unk_10047BC50);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v83 = (uint64_t)&v71 - v13;
  uint64_t v14 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  char v78 = (uint64_t *)((char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v77 = (uint64_t *)((char *)&v71 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v71 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  unint64_t v81 = (os_log_t *)((char *)&v71 - v27);
  __chkstk_darwin(v26);
  unint64_t v29 = (char *)&v71 - v28;
  id v30 = [a4 deviceUID];
  if (!v30)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v31 = v30;
  unint64_t v82 = (uint64_t *)v29;
  uint64_t v76 = v12;
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  uint64_t v80 = a2;
  sub_1002A5294(v32, v34, a1, (uint64_t)v16);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100009A08((uint64_t)v16, &qword_100479588);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  sub_1001E6FE8((uint64_t)v16, (uint64_t)v82, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v89 = a1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v35 = v81;
    sub_1001E6EAC(a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), (uint64_t)v81, type metadata accessor for HostedRoutingSourceSession);
    swift_bridgeObjectRetain();
    uint64_t v36 = swift_bridgeObjectRetain();
    char v37 = sub_1002A0454(v36);
    uint64_t v38 = (uint64_t)v76;
    if ((v37 & 1) == 0)
    {
      sub_1001E6F14((uint64_t)v35, type metadata accessor for HostedRoutingSourceSession);
      goto LABEL_30;
    }
    uint64_t v74 = sub_1001A6B94();
    uint64_t v39 = v83;
    sub_1001E71E8(v74, v83, (uint64_t *)&unk_10047BC50);
    uint64_t v40 = type metadata accessor for Logger();
    uint64_t v75 = *(void *)(v40 - 8);
    unint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
    if (v41(v39, 1, v40) == 1)
    {
      sub_100009A08(v39, (uint64_t *)&unk_10047BC50);
    }
    else
    {
      sub_1001E6EAC((uint64_t)v82, (uint64_t)v25, type metadata accessor for HostedRoutingSourceSession);
      unint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.info.getter();
      int v44 = v43;
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v45 = swift_slowAlloc();
        int v72 = v44;
        uint64_t v46 = v45;
        uint64_t v73 = swift_slowAlloc();
        uint64_t v84 = v73;
        *(_DWORD *)uint64_t v46 = 136315394;
        os_log_t v71 = v42;
        uint64_t v47 = _typeName(_:qualified:)();
        uint64_t v87 = sub_10018A9E0(v47, v48, &v84);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        sub_100015AE0(&qword_100479590, (void (*)(uint64_t))type metadata accessor for HostedRoutingSourceSession);
        uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v87 = sub_10018A9E0(v49, v50, &v84);
        unint64_t v35 = v81;
        uint64_t v38 = (uint64_t)v76;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001E6F14((uint64_t)v25, type metadata accessor for HostedRoutingSourceSession);
        os_log_t v51 = v71;
        _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v72, "[%s] filterRedundantLocalSession - removing local session because local device found in remote session: %s", (uint8_t *)v46, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_1001E6F14((uint64_t)v25, type metadata accessor for HostedRoutingSourceSession);
      }
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v83, v40);
      a1 = v89;
    }
    if (*(void *)(a1 + 16))
    {
      sub_1001E485C(0, 1);
      uint64_t v52 = v80;
      if (*v35 == v80 && v35[1] == a3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1001E71E8(v74, v38, (uint64_t *)&unk_10047BC50);
        if (v41(v38, 1, v40) == 1)
        {
          sub_100009A08(v38, (uint64_t *)&unk_10047BC50);
          unint64_t v54 = v82;
        }
        else
        {
          unint64_t v55 = v77;
          sub_1001E6EAC((uint64_t)v35, (uint64_t)v77, type metadata accessor for HostedRoutingSourceSession);
          unint64_t v54 = v82;
          char v56 = v78;
          sub_1001E6EAC((uint64_t)v82, (uint64_t)v78, type metadata accessor for HostedRoutingSourceSession);
          uint64_t v57 = Logger.logObject.getter();
          os_log_type_t v58 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v59 = swift_slowAlloc();
            uint64_t v80 = swift_slowAlloc();
            uint64_t v84 = v80;
            *(_DWORD *)uint64_t v59 = 136315650;
            uint64_t v60 = _typeName(_:qualified:)();
            uint64_t v83 = v40;
            uint64_t v87 = sub_10018A9E0(v60, v61, &v84);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v59 + 12) = 2080;
            uint64_t v62 = *v55;
            unint64_t v63 = v55[1];
            swift_bridgeObjectRetain();
            uint64_t v87 = sub_10018A9E0(v62, v63, &v84);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_1001E6F14((uint64_t)v55, type metadata accessor for HostedRoutingSourceSession);
            *(_WORD *)(v59 + 22) = 2080;
            unint64_t v54 = v82;
            uint64_t v64 = (uint64_t)v56;
            uint64_t v65 = *v56;
            unint64_t v66 = v56[1];
            swift_bridgeObjectRetain();
            uint64_t v87 = sub_10018A9E0(v65, v66, &v84);
            unint64_t v35 = v81;
            uint64_t v40 = v83;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v38 = (uint64_t)v76;
            sub_1001E6F14(v64, type metadata accessor for HostedRoutingSourceSession);
            _os_log_impl((void *)&_mh_execute_header, v57, v58, "[%s] filterRedundantLocalSession - updating activeSessionIdentifier from: %s to: %s", (uint8_t *)v59, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_1001E6F14((uint64_t)v55, type metadata accessor for HostedRoutingSourceSession);
            sub_1001E6F14((uint64_t)v56, type metadata accessor for HostedRoutingSourceSession);
          }
          (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v38, v40);
        }
        uint64_t v52 = *v54;
        a3 = v54[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v54 = v82;
      }
      a1 = MRDFastSyncGroupSessionState.rawValue.getter(v89, v52, a3, v53);
      sub_1001E6F14((uint64_t)v35, type metadata accessor for HostedRoutingSourceSession);
      sub_1001E6F14((uint64_t)v54, type metadata accessor for HostedRoutingSourceSession);
      return a1;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_30:
  uint64_t v84 = 0;
  unint64_t v85 = 0xE000000000000000;
  _StringGuts.grow(_:)(64);
  uint64_t v87 = v84;
  unint64_t v88 = v85;
  v68._uint64_t countAndFlagsBits = 91;
  v68._object = (void *)0xE100000000000000;
  String.append(_:)(v68);
  v69._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v69);
  swift_bridgeObjectRelease();
  v70._object = (void *)0x80000001003B54F0;
  v70._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
  String.append(_:)(v70);
  uint64_t v84 = a1;
  unint64_t v85 = v80;
  uint64_t v86 = a3;
  _print_unlocked<A, B>(_:_:)();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001DA91C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v76 = a5;
  uint64_t v9 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v75 = (uint64_t *)((char *)&v65 - v14);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v65 - v15;
  uint64_t v17 = sub_100013A80((uint64_t *)&unk_10047BC50);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v65 - v21;
  uint64_t v23 = a1[3];
  if (!v23) {
    return 1;
  }
  uint64_t v73 = (uint64_t *)v12;
  uint64_t v74 = (void *)a4;
  uint64_t v24 = a1[2];
  swift_bridgeObjectRetain();
  id v25 = [a2 groupUID];
  if (!v25)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v26 = v25;
  int v72 = a3;
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  if (v24 == v27 && v23 == v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0) {
    return 1;
  }
LABEL_8:
  uint64_t v32 = sub_1001A6B94();
  sub_1001E71E8(v32, (uint64_t)v22, (uint64_t *)&unk_10047BC50);
  uint64_t v33 = type metadata accessor for Logger();
  uint64_t v34 = *(void *)(v33 - 8);
  unint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  unsigned int v36 = v35(v22, 1, v33);
  os_log_t v71 = (unsigned int (*)(void, void, void))v35;
  if (v36 == 1)
  {
    sub_100009A08((uint64_t)v22, (uint64_t *)&unk_10047BC50);
    char v37 = v72;
  }
  else
  {
    uint64_t v69 = v32;
    sub_1001E6EAC((uint64_t)a1, (uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.info.getter();
    int v67 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v68 = v33;
      uint64_t v41 = v40;
      uint64_t v66 = swift_slowAlloc();
      char v78 = (unsigned int (*)(void, void, void))v66;
      *(_DWORD *)uint64_t v41 = 136315394;
      uint64_t v70 = v34;
      uint64_t v42 = _typeName(_:qualified:)();
      os_log_t v65 = v38;
      uint64_t v77 = sub_10018A9E0(v42, v43, (uint64_t *)&v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      sub_100015AE0(&qword_100479590, (void (*)(uint64_t))type metadata accessor for HostedRoutingSourceSession);
      uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v77 = sub_10018A9E0(v44, v45, (uint64_t *)&v78);
      uint64_t v34 = v70;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6F14((uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
      os_log_t v46 = v65;
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v67, "[%s] filterUndiscoverableSiblingSessions - removing session: %s which matches local group identifier", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v33 = v68;
      swift_slowDealloc();
    }
    else
    {

      sub_1001E6F14((uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
    }
    char v37 = v72;
    uint64_t v32 = v69;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v33);
  }
  if (*a1 == *v37 && a1[1] == v37[1]
    || (v47 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v47 & 1) != 0))
  {
    sub_1001E71E8(v32, (uint64_t)v20, (uint64_t *)&unk_10047BC50);
    if (v71(v20, 1, v33) == 1)
    {
      sub_100009A08((uint64_t)v20, (uint64_t *)&unk_10047BC50);
      unint64_t v48 = v74;
    }
    else
    {
      uint64_t v70 = v34;
      uint64_t v49 = (uint64_t)a1;
      unint64_t v50 = v75;
      sub_1001E6EAC(v49, (uint64_t)v75, type metadata accessor for HostedRoutingSourceSession);
      os_log_t v51 = v73;
      unint64_t v48 = v74;
      sub_1001E6EAC((uint64_t)v74, (uint64_t)v73, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.info.getter();
      int v54 = v53;
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v68 = v33;
        uint64_t v56 = v55;
        os_log_t v71 = (unsigned int (*)(void, void, void))swift_slowAlloc();
        char v78 = v71;
        *(_DWORD *)uint64_t v56 = 136315650;
        LODWORD(v69) = v54;
        uint64_t v57 = _typeName(_:qualified:)();
        uint64_t v77 = sub_10018A9E0(v57, v58, (uint64_t *)&v78);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v56 + 12) = 2080;
        uint64_t v59 = *v50;
        unint64_t v60 = v50[1];
        swift_bridgeObjectRetain();
        uint64_t v77 = sub_10018A9E0(v59, v60, (uint64_t *)&v78);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001E6F14((uint64_t)v50, type metadata accessor for HostedRoutingSourceSession);
        *(_WORD *)(v56 + 22) = 2080;
        uint64_t v61 = *v51;
        unint64_t v62 = v51[1];
        swift_bridgeObjectRetain();
        uint64_t v63 = v61;
        unint64_t v48 = v74;
        uint64_t v77 = sub_10018A9E0(v63, v62, (uint64_t *)&v78);
        char v37 = v72;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001E6F14((uint64_t)v51, type metadata accessor for HostedRoutingSourceSession);
        _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v69, "[%s] filterUndiscoverableSiblingSessions - updating activeSessionIdentifier from %s to %s", (uint8_t *)v56, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v33 = v68;
        swift_slowDealloc();
      }
      else
      {

        sub_1001E6F14((uint64_t)v50, type metadata accessor for HostedRoutingSourceSession);
        sub_1001E6F14((uint64_t)v51, type metadata accessor for HostedRoutingSourceSession);
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v20, v33);
    }
    uint64_t v64 = v48[1];
    void *v37 = *v48;
    v37[1] = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1001DB0C0()
{
  return sub_1001E58F0();
}

uint64_t sub_1001DB0D8(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100266CC0();
  uint64_t v11 = (void *)*v10;
  *uint64_t v9 = *v10;
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  uint64_t v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  unint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 112))(v13);
  a1 = v14;
  if (v14 >> 62) {
    goto LABEL_12;
  }
  uint64_t result = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!result) {
    goto LABEL_13;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v16 = *(void *)(a1 + 32);
    swift_retain();
  }
  uint64_t v17 = swift_bridgeObjectRelease();
  unint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 128))(v17);
  if (v18 == 1)
  {
    sub_100013A80(&qword_100478F38);
    uint64_t v22 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0) - 8);
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1003C58B0;
    uint64_t v25 = sub_1001BF970();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for RoutingSessionConfiguration.ItemType.standard(_:), v2);
    (*(void (**)(char *))(*(void *)v25 + 656))(v5);
    uint64_t v27 = v26;
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(ObjectType, v27);
    swift_unknownObjectRelease();
    sub_1001D1BD0(v29, 0, 0, (void *)(v24 + v23));
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void *)sub_1001BF970();
    uint64_t v31 = (*(uint64_t (**)(void))(v30 + 328))();
    swift_release();
    uint64_t v40 = v24;
    sub_1001E1DBC(v31, &qword_100478F38, type metadata accessor for HostedRoutingSourceSession, type metadata accessor for HostedRoutingSourceSession, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v32 = v40;
    uint64_t v33 = sub_1001BFA20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)v33 + 288))(v16 + OBJC_IVAR____TtCC12mediaremoted15RoutingTimeline5Event_routingEvent, v32);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001E5894(v18, v19, v20, v21);
  }
  swift_release();
LABEL_14:
  unint64_t v34 = (unint64_t)sub_1001BF738();
  unint64_t v35 = v34;
  if (!(v34 >> 62))
  {
    uint64_t v36 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v36) {
      goto LABEL_16;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v36 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_16:
  if (v36 >= 1)
  {
    for (uint64_t i = 0; i != v36; ++i)
    {
      if ((v35 & 0xC000000000000001) != 0)
      {
        uint64_t v38 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v38 = *(void *)(v35 + 8 * i + 32);
        swift_retain();
      }
      sub_1001CF640(v38);
      swift_release();
    }
    return swift_bridgeObjectRelease_n();
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1001DB690()
{
  return sub_1001E58F0();
}

unint64_t sub_1001DB698(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_1001E5AAC(a2, a3, a4, a5);
}

uint64_t sub_1001DB6AC()
{
  uint64_t v104 = sub_100013A80(&qword_100478ED8);
  uint64_t v99 = *(void *)(v104 - 8);
  uint64_t v1 = __chkstk_darwin(v104);
  uint64_t v103 = (uint64_t *)((char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v102 = (uint64_t *)((char *)&v94 - v4);
  __chkstk_darwin(v3);
  char v101 = (char *)&v94 - v5;
  uint64_t v6 = sub_100013A80(&qword_100478F40);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v94 - v10;
  uint64_t v12 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  unint64_t v100 = *(void **)(v12 - 8);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100013A80(&qword_100478F48);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  unint64_t v18 = (uint64_t *)((char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v94 - v19;
  unint64_t v107 = 0xD00000000000002CLL;
  unint64_t v108 = 0x80000001003B4FD0;
  uint64_t v96 = v0;
  uint64_t result = (uint64_t)sub_1001BF780();
  uint64_t v22 = result;
  int64_t v105 = 0;
  uint64_t v23 = *(void *)(result + 64);
  uint64_t v97 = result + 64;
  uint64_t v24 = 1 << *(unsigned char *)(result + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  int64_t v98 = (unint64_t)(v24 + 63) >> 6;
  int64_t v95 = v98 - 1;
  if ((v25 & v23) == 0) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v30 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  unint64_t v31 = v30 | (v105 << 6);
LABEL_7:
  uint64_t v32 = *(void *)(v22 + 56);
  void *v18 = *(void *)(*(void *)(v22 + 48) + 8 * v31);
  uint64_t v33 = v32 + v100[9] * v31;
  uint64_t v34 = sub_100013A80(&qword_100478F50);
  sub_1001E6EAC(v33, (uint64_t)v18 + *(int *)(v34 + 48), type metadata accessor for HostedRoutingSessionSnapshot);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v18, 0, 1, v34);
  swift_retain();
  while (1)
  {
    sub_1001E62CC((uint64_t)v18, (uint64_t)v20, &qword_100478F48);
    uint64_t v39 = sub_100013A80(&qword_100478F50);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v20, 1, v39) == 1) {
      break;
    }
    sub_1001E6FE8((uint64_t)&v20[*(int *)(v39 + 48)], (uint64_t)v14, type metadata accessor for HostedRoutingSessionSnapshot);
    v106._uint64_t countAndFlagsBits = 0x203A746E65696C43;
    v106._object = (void *)0xE800000000000000;
    v27._uint64_t countAndFlagsBits = sub_1001BEE28();
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v28._uint64_t countAndFlagsBits = 10;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    String.append(_:)(v106);
    swift_bridgeObjectRelease();
    v106._uint64_t countAndFlagsBits = 0x746F687370616E53;
    v106._object = (void *)0xEA0000000000203ALL;
    v29._uint64_t countAndFlagsBits = sub_1002ABCEC();
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    String.append(_:)(v106);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1001E6F14((uint64_t)v14, type metadata accessor for HostedRoutingSessionSnapshot);
    if (v26) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v35 = v105 + 1;
    if (__OFADD__(v105, 1))
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    if (v35 < v98)
    {
      unint64_t v36 = *(void *)(v97 + 8 * v35);
      if (v36) {
        goto LABEL_11;
      }
      int64_t v37 = v105 + 2;
      ++v105;
      if (v35 + 1 < v98)
      {
        unint64_t v36 = *(void *)(v97 + 8 * v37);
        if (v36) {
          goto LABEL_14;
        }
        int64_t v105 = v35 + 1;
        if (v35 + 2 < v98)
        {
          unint64_t v36 = *(void *)(v97 + 8 * (v35 + 2));
          if (v36)
          {
            v35 += 2;
            goto LABEL_11;
          }
          int64_t v37 = v35 + 3;
          int64_t v105 = v35 + 2;
          if (v35 + 3 < v98)
          {
            unint64_t v36 = *(void *)(v97 + 8 * v37);
            if (v36)
            {
LABEL_14:
              int64_t v35 = v37;
LABEL_11:
              unint64_t v26 = (v36 - 1) & v36;
              unint64_t v31 = __clz(__rbit64(v36)) + (v35 << 6);
              int64_t v105 = v35;
              goto LABEL_7;
            }
            while (1)
            {
              int64_t v35 = v37 + 1;
              if (__OFADD__(v37, 1)) {
                goto LABEL_56;
              }
              if (v35 >= v98) {
                break;
              }
              unint64_t v36 = *(void *)(v97 + 8 * v35);
              ++v37;
              if (v36) {
                goto LABEL_11;
              }
            }
            int64_t v105 = v95;
          }
        }
      }
    }
    uint64_t v38 = sub_100013A80(&qword_100478F50);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v18, 1, 1, v38);
    unint64_t v26 = 0;
  }
  swift_release();
  v40._object = (void *)0x80000001003B5000;
  v40._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v40);
  uint64_t result = (uint64_t)sub_1001BFABC();
  int64_t v105 = 0;
  uint64_t v41 = *(void *)(result + 64);
  uint64_t v97 = result + 64;
  unint64_t v100 = (void *)result;
  uint64_t v42 = 1 << *(unsigned char *)(result + 32);
  uint64_t v43 = -1;
  if (v42 < 64) {
    uint64_t v43 = ~(-1 << v42);
  }
  unint64_t v44 = v43 & v41;
  int64_t v98 = (unint64_t)(v42 + 63) >> 6;
  int64_t v95 = v98 - 1;
  uint64_t v45 = v104;
  os_log_t v46 = v101;
  if ((v43 & v41) == 0) {
    goto LABEL_34;
  }
LABEL_32:
  unint64_t v63 = __clz(__rbit64(v44));
  v44 &= v44 - 1;
  unint64_t v64 = v63 | (v105 << 6);
  while (2)
  {
    uint64_t v65 = v100[7];
    uint64_t v66 = (void *)(v100[6] + 16 * v64);
    uint64_t v67 = v66[1];
    *uint64_t v9 = *v66;
    v9[1] = v67;
    uint64_t v68 = v65 + *(void *)(v99 + 72) * v64;
    uint64_t v69 = sub_100013A80(&qword_100478F58);
    sub_1001E71E8(v68, (uint64_t)v9 + *(int *)(v69 + 48), &qword_100478ED8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v9, 0, 1, v69);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1001E62CC((uint64_t)v9, (uint64_t)v11, &qword_100478F40);
      uint64_t v74 = sub_100013A80(&qword_100478F58);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 48))(v11, 1, v74) == 1)
      {
        swift_release();
        v75._uint64_t countAndFlagsBits = 10;
        v75._object = (void *)0xE100000000000000;
        String.append(_:)(v75);
        sub_1001BF970();
        sub_1002E67EC();
        uint64_t v77 = v76;
        uint64_t v79 = v78;
        swift_release();
        v80._uint64_t countAndFlagsBits = v77;
        v80._object = v79;
        String.append(_:)(v80);
        swift_bridgeObjectRelease();
        v81._uint64_t countAndFlagsBits = 10;
        v81._object = (void *)0xE100000000000000;
        String.append(_:)(v81);
        sub_1001BF868();
        uint64_t v82 = sub_10024BDD4();
        uint64_t v84 = v83;
        swift_release();
        v85._uint64_t countAndFlagsBits = v82;
        v85._object = v84;
        String.append(_:)(v85);
        swift_bridgeObjectRelease();
        v86._uint64_t countAndFlagsBits = 10;
        v86._object = (void *)0xE100000000000000;
        String.append(_:)(v86);
        type metadata accessor for Preferences();
        v87._uint64_t countAndFlagsBits = static Preferences.diagnosticDescription.getter();
        String.append(_:)(v87);
        swift_bridgeObjectRelease();
        v88._uint64_t countAndFlagsBits = 10;
        v88._object = (void *)0xE100000000000000;
        String.append(_:)(v88);
        sub_1001BFA20();
        uint64_t v89 = sub_10028FE5C();
        uint64_t v91 = v90;
        swift_release();
        v92._uint64_t countAndFlagsBits = v89;
        v92._object = v91;
        String.append(_:)(v92);
        swift_bridgeObjectRelease();
        v93._uint64_t countAndFlagsBits = 10;
        v93._object = (void *)0xE100000000000000;
        String.append(_:)(v93);
        return v107;
      }
      uint64_t v47 = (uint64_t)v46 + *(int *)(v45 + 48);
      swift_bridgeObjectRelease();
      unint64_t v48 = &v11[*(int *)(v74 + 48)];
      uint64_t v49 = *(void *)v48;
      uint64_t v50 = *(int *)(v45 + 48);
      uint64_t v51 = (uint64_t)&v48[v50];
      uint64_t v52 = v102;
      uint64_t v53 = (uint64_t)v102 + v50;
      *unint64_t v102 = v49;
      sub_1001E6FE8(v51, (uint64_t)v52 + v50, type metadata accessor for HostedRoutingSessionSnapshot);
      *os_log_t v46 = v49;
      sub_1001E6FE8(v53, v47, type metadata accessor for HostedRoutingSessionSnapshot);
      v106._uint64_t countAndFlagsBits = 0x203A746E65696C43;
      v106._object = (void *)0xE800000000000000;
      swift_retain();
      v54._uint64_t countAndFlagsBits = sub_1001BEE28();
      String.append(_:)(v54);
      swift_bridgeObjectRelease();
      v55._uint64_t countAndFlagsBits = 10;
      v55._object = (void *)0xE100000000000000;
      String.append(_:)(v55);
      String.append(_:)(v106);
      swift_bridgeObjectRelease();
      v106._uint64_t countAndFlagsBits = 0x746F687370616E53;
      v106._object = (void *)0xEA0000000000203ALL;
      uint64_t v56 = *(int *)(v45 + 48);
      uint64_t v57 = v103;
      uint64_t v58 = (uint64_t)v103 + v56;
      *uint64_t v103 = v49;
      sub_1001E6EAC(v47, (uint64_t)v57 + v56, type metadata accessor for HostedRoutingSessionSnapshot);
      swift_release();
      unint64_t v59 = sub_1002ABCEC();
      uint64_t v61 = v60;
      sub_1001E6F14(v58, type metadata accessor for HostedRoutingSessionSnapshot);
      v62._uint64_t countAndFlagsBits = v59;
      v62._object = v61;
      String.append(_:)(v62);
      swift_bridgeObjectRelease();
      String.append(_:)(v106);
      swift_bridgeObjectRelease();
      uint64_t result = sub_100009A08((uint64_t)v46, &qword_100478ED8);
      if (v44) {
        goto LABEL_32;
      }
LABEL_34:
      int64_t v70 = v105 + 1;
      if (__OFADD__(v105, 1)) {
        goto LABEL_55;
      }
      if (v70 < v98)
      {
        unint64_t v71 = *(void *)(v97 + 8 * v70);
        if (v71) {
          goto LABEL_37;
        }
        int64_t v72 = v105 + 2;
        ++v105;
        if (v70 + 1 < v98)
        {
          unint64_t v71 = *(void *)(v97 + 8 * v72);
          if (v71) {
            goto LABEL_40;
          }
          int64_t v105 = v70 + 1;
          if (v70 + 2 < v98)
          {
            unint64_t v71 = *(void *)(v97 + 8 * (v70 + 2));
            if (v71)
            {
              v70 += 2;
              goto LABEL_37;
            }
            int64_t v72 = v70 + 3;
            int64_t v105 = v70 + 2;
            if (v70 + 3 < v98) {
              break;
            }
          }
        }
      }
LABEL_51:
      uint64_t v73 = sub_100013A80(&qword_100478F58);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v9, 1, 1, v73);
      unint64_t v44 = 0;
    }
    unint64_t v71 = *(void *)(v97 + 8 * v72);
    if (v71)
    {
LABEL_40:
      int64_t v70 = v72;
LABEL_37:
      unint64_t v44 = (v71 - 1) & v71;
      unint64_t v64 = __clz(__rbit64(v71)) + (v70 << 6);
      int64_t v105 = v70;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v70 = v72 + 1;
    if (__OFADD__(v72, 1)) {
      break;
    }
    if (v70 >= v98)
    {
      int64_t v105 = v95;
      goto LABEL_51;
    }
    unint64_t v71 = *(void *)(v97 + 8 * v70);
    ++v72;
    if (v71) {
      goto LABEL_37;
    }
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_1001DC214()
{
  return sub_1001DB6AC();
}

uint64_t sub_1001DC238()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_1001DC284()
{
  return _CFObject.hash(into:)();
}

Swift::Int sub_1001DC2DC()
{
  return Hasher._finalize()();
}

uint64_t sub_1001DC344()
{
  swift_getWitnessTable();

  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_1001DC3B0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        Swift::String v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1001DC654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HostedRoutingSession(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1001E6EAC(a1 + v12, (uint64_t)v10, type metadata accessor for HostedRoutingSession);
        sub_1001E6EAC(a2 + v12, (uint64_t)v7, type metadata accessor for HostedRoutingSession);
        sub_100015AE0(&qword_100479540, (void (*)(uint64_t))type metadata accessor for HostedRoutingSession);
        char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_1001E6F14((uint64_t)v7, type metadata accessor for HostedRoutingSession);
        sub_1001E6F14((uint64_t)v10, type metadata accessor for HostedRoutingSession);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1001DC838(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    Swift::Int v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100013A80(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  Swift::Int v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001E4A74(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1001DCAB8()
{
  uint64_t v1 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1001DCB94()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingSessionConfiguration() - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = (char *)v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v8 = (void *)*sub_100266CC0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, id, uint64_t))(*(void *)v2 + 376);
  id v10 = v8;
  v9(v3, v4, v5, v6, v7, v10, 1);
}

uint64_t type metadata accessor for RoutingSessionServer.Client(uint64_t a1)
{
  return sub_1001BA264(a1, (uint64_t *)&unk_10047EEE8);
}

uint64_t type metadata accessor for RoutingSessionServer.Client.Context(uint64_t a1)
{
  return sub_1001BA264(a1, qword_10047EEF8);
}

uint64_t sub_1001DCCD4()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001DCD14()
{
  return (*(uint64_t (**)(void, void, uint64_t))(**(void **)(v0 + 16) + 384))(*(void *)(v0 + 24), *(void *)(v0 + 32), 1);
}

void *sub_1001DCD6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100013A80(&qword_1004795E0);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v8;
    return result;
  }
  unint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1001DD010()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100013A80(&qword_1004795E0);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100015AE0(&qword_100479510, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001DD3C0()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100013A80(&qword_1004795E0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100015AE0(&qword_100479510, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_1001DD7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001DE0AC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1001E0AFC();
      uint64_t v9 = v19;
    }
    swift_release();
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for HostedRoutingSessionSnapshot(0);
    uint64_t v18 = *(void *)(v11 - 8);
    sub_1001E6FE8(v10 + *(void *)(v18 + 72) * v6, a2, type metadata accessor for HostedRoutingSessionSnapshot);
    sub_1001DEF40(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for HostedRoutingSessionSnapshot(0);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t sub_1001DD954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100013660(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1001E0D80();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_100013A80(&qword_100478ED8);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1001E62CC(v12 + *(void *)(v20 + 72) * v8, a3, &qword_100478ED8);
    sub_1001DF174(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_100013A80(&qword_100478ED8);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_1001DDAFC(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1001DE0AC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001E1008();
    uint64_t v7 = v10;
  }
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1001DF394(v4, v7);
  uint64_t *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001DDBC4()
{
  uint64_t v1 = (int *)(sub_100013A80(&qword_100478EE8) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[14];
  unint64_t v6 = (int *)type metadata accessor for HostedRoutingSession(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + v6[7];
    uint64_t v8 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001DDF44(*(void *)(v7 + 32), *(unsigned int *)(v7 + 40), *(unsigned char *)(v7 + 44));
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v9 = v7 + *(int *)(v8 + 36);
      uint64_t v10 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      uint64_t v11 = v7 + *(int *)(v8 + 40);
      uint64_t v12 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v5 + v6[8];
    uint64_t v14 = type metadata accessor for RoutingControls();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v5 + v6[13];
    uint64_t v16 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v5 + v6[15];
    uint64_t v18 = type metadata accessor for RoutingSession.HostInfo();
    uint64_t v19 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
  }
  type metadata accessor for HostedRoutingSessionSnapshot(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001DDF44(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 4u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001DDF58()
{
  uint64_t v1 = *(void *)(sub_100013A80(&qword_100478EE8) - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)((char *)v0
                + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_1001C265C(v2, v3, v4, v5);
}

uint64_t sub_1001DDFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100013660(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001E11B4();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_1001B6C58(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1001DE0AC(uint64_t a1)
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1001E09FC(a1, v2);
}

uint64_t sub_1001DE13C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100013A80(&qword_100479520);
  int v40 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v36 = v2;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    uint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
    uint64_t v26 = *(void *)(v39 + 72);
    uint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
    if (v40)
    {
      sub_1001E6FE8(v27, (uint64_t)v7, type metadata accessor for HostedRoutingSessionSnapshot);
    }
    else
    {
      sub_1001E6EAC(v27, (uint64_t)v7, type metadata accessor for HostedRoutingSessionSnapshot);
      swift_retain();
    }
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v10 + 48) + 8 * v18) = v25;
    uint64_t result = sub_1001E6FE8((uint64_t)v7, *(void *)(v10 + 56) + v26 * v18, type metadata accessor for HostedRoutingSessionSnapshot);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1001DE534(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_100013A80(&qword_100478ED8);
  uint64_t v42 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100013A80(&qword_100479500);
  int v43 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1001E62CC(v30, (uint64_t)v7, &qword_100478ED8);
    }
    else
    {
      sub_1001E71E8(v30, (uint64_t)v7, &qword_100478ED8);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    void *v19 = v27;
    v19[1] = v28;
    uint64_t result = sub_1001E62CC((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, &qword_100478ED8);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1001DE8FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100013A80(&qword_1004794E8);
  char v35 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v33) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = 8 * v20;
    uint64_t v30 = *(void *)(*(void *)(v5 + 48) + v29);
    uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
    if ((v35 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v30;
    *(void *)(*(void *)(v7 + 56) + v18) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1001DEC34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100013A80(&qword_1004794E0);
  char v6 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

unint64_t sub_1001DEF40(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Hasher.init(_seed:)();
        swift_retain();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v9 = Hasher._finalize()();
        uint64_t result = swift_release();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (void *)(v11 + 8 * v3);
        int64_t v13 = (void *)(v11 + 8 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for HostedRoutingSessionSnapshot(0) - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *unint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001DF174(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        int64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_100013A80(&qword_100478ED8) - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *unint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001DF394(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_retain();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v9 = Hasher._finalize()();
        uint64_t result = swift_release();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (void *)(v11 + 8 * v3);
          int64_t v13 = (void *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1001DF590(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1001DE0AC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1001E0AFC();
      goto LABEL_7;
    }
    sub_1001DE13C(v13, a3 & 1);
    unint64_t v20 = sub_1001DE0AC(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      int64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for RoutingSessionServer.Client(0);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17 + *(void *)(*(void *)(type metadata accessor for HostedRoutingSessionSnapshot(0) - 8) + 72) * v10;
    return sub_1001E6A38(a1, v18);
  }
LABEL_13:
  sub_1001E08A8(v10, a2, a1, v16);

  return swift_retain();
}

uint64_t sub_1001DF6E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100013660(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = sub_100013A80(&qword_100478ED8);
      return sub_1001E7184(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, &qword_100478ED8);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1001E0D80();
    goto LABEL_7;
  }
  sub_1001DE534(v15, a4 & 1);
  unint64_t v22 = sub_100013660(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1001E0950(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001DF84C()
{
  return (*(uint64_t (**)(void, void, void, void, uint64_t))(**(void **)(v0 + 16) + 392))(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), 1);
}

uint64_t sub_1001DF8A8()
{
  return sub_1001E0470((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001DF8C0(uint64_t a1, uint64_t a2)
{
  return sub_1001C7D50(a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1001DF8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80(&qword_100478F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DF940()
{
  uint64_t v17 = type metadata accessor for RoutingInteraction();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  unint64_t v14 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v4 = *(void *)(v16 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v14 + v5 + 8) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v6 + v7 + v10) & ~v10;
  uint64_t v15 = v2 | v5 | v10 | 7;
  unint64_t v12 = ((((*(void *)(v9 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v16);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v11, v8);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v12, v15);
}

uint64_t sub_1001DFB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for RoutingSessionConfiguration() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(type metadata accessor for RoutingSessionConfiguration.Attribution() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001C5FD8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), (v2 + v6), *(void *)(v2 + v7), v2 + v9, (void *)(v2 + v12), *(void *)(v2 + v13), *(void *)(v2 + v13 + 8), *(void *)(v2 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001DFD18()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001DFD60()
{
  return (*(uint64_t (**)(void, void, void, void, uint64_t))(**(void **)(v0 + 16) + 400))(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), 1);
}

uint64_t sub_1001DFDBC()
{
  uint64_t v1 = type metadata accessor for RoutingDialog.Action();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001DFEAC()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingDialog.Action() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return (*(uint64_t (**)(void, void, unint64_t, void, void, uint64_t))(**(void **)(v0 + 16)
                                                                                              + 408))(*(void *)(v0 + 24), *(void *)(v0 + 32), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), 1);
}

uint64_t sub_1001DFF70()
{
  return sub_1001E02A8((uint64_t (*)(void))&type metadata accessor for RoutingControl);
}

uint64_t sub_1001DFF88()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingControl() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return (*(uint64_t (**)(unint64_t, void, void, uint64_t))(**(void **)(v0 + 16) + 416))(v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), 1);
}

uint64_t sub_1001E0048()
{
  uint64_t v1 = type metadata accessor for RoutingControl();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001E0114(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for RoutingControl() - 8) + 80);
  uint64_t v5 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 24);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v16 = v1 + ((v3 + 24) & ~v3);
    uint64_t v9 = *(void *)(result
                   + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient
                   + 8);
    if (v5)
    {
      sub_1001E67A4();
      uint64_t v10 = swift_allocError();
      *(void *)uint64_t v11 = v5;
      *(void *)(v11 + 8) = v4;
      *(void *)(v11 + 16) = v6;
      *(unsigned char *)(v11 + 24) = v7;
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t v12 = v4;
    uint64_t v13 = v5;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32);
    swift_unknownObjectRetain();
    sub_1001BB2C8(v13, v12, v6, v7);
    v15(v16, v10, ObjectType, v9);
    swift_errorRelease();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001E0290()
{
  return sub_1001E02A8((uint64_t (*)(void))&type metadata accessor for RoutingMode);
}

uint64_t sub_1001E02A8(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v1, v7, v6);
}

uint64_t sub_1001E0398()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingMode() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return (*(uint64_t (**)(unint64_t, void, void, uint64_t))(**(void **)(v0 + 16) + 424))(v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), 1);
}

uint64_t sub_1001E0458()
{
  return sub_1001E0470((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_1001E0470(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 48, 7);
}

uint64_t sub_1001E04C0()
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(**(void **)(v0 + 16) + 432))(*(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), 1);
}

uint64_t sub_1001E051C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001E0564()
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(**(void **)(v0 + 16) + 440))(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), 1);
}

uint64_t sub_1001E05BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_100013660(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1001E11B4();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      char v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_release();
      void *v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1001DEC34(v17, a5 & 1);
  unint64_t v23 = sub_100013660(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a3;
  v25[1] = a4;
  char v26 = (void *)(v20[7] + 16 * v14);
  void *v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001E0744(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1001DE0AC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1001E1008();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1001DE8FC(v13, a3 & 1);
  unint64_t v19 = sub_1001DE0AC(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_17:
    type metadata accessor for RoutingSessionServer.Client(0);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  BOOL v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v21 = 8 * v10;
  *(void *)(v16[6] + v21) = a2;
  *(void *)(v16[7] + v21) = a1;
  uint64_t v22 = v16[2];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v16[2] = v24;

  return swift_retain();
}

uint64_t sub_1001E08A8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  uint64_t result = sub_1001E6FE8(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, type metadata accessor for HostedRoutingSessionSnapshot);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_1001E0950(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_100013A80(&qword_100478ED8);
  uint64_t result = sub_1001E62CC(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, &qword_100478ED8);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_1001E09FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    uint64_t v7 = (void *)(*(void *)(v6 + 8 * v5)
                  + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier);
    uint64_t v8 = *(void *)(a1
                   + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier);
    uint64_t v9 = *(void *)(a1
                   + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier
                   + 8);
    BOOL v10 = *v7 == v8 && v7[1] == v9;
    if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v11 = ~v4;
      do
      {
        unint64_t v5 = (v5 + 1) & v11;
        if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          break;
        }
        uint64_t v12 = (void *)(*(void *)(v6 + 8 * v5)
                       + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_identifier);
        BOOL v13 = *v12 == v8 && v12[1] == v9;
      }
      while (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v5;
}

void *sub_1001E0AFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100013A80(&qword_100479520);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_1001E6EAC(*(void *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for HostedRoutingSessionSnapshot);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    sub_1001E6FE8((uint64_t)v4, *(void *)(v7 + 56) + v20, type metadata accessor for HostedRoutingSessionSnapshot);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1001E0D80()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100013A80(&qword_100478ED8);
  uint64_t v28 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100013A80(&qword_100479500);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v26 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v27 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v10;
    if (!v23)
    {
      int64_t v10 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v10);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    unint64_t v20 = *(void *)(v28 + 72) * v15;
    sub_1001E71E8(*(void *)(v5 + 56) + v20, (uint64_t)v4, &qword_100478ED8);
    int64_t v21 = (void *)(*(void *)(v7 + 48) + v16);
    void *v21 = v18;
    v21[1] = v19;
    sub_1001E62CC((uint64_t)v4, *(void *)(v7 + 56) + v20, &qword_100478ED8);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v27)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v10 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v10);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1001E1008()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_1004794E8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001E11B4()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_1004794E0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1001E1378(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1001E13F4(unint64_t a1)
{
  return sub_1001DC838(0, *(void *)(a1 + 16), 0, a1, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
}

void (*sub_1001E144C(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_retain();
  v4[9] = sub_1001E16DC(v4);
  v4[10] = sub_1001E155C(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1001E14E8;
}

void sub_1001E14E8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_release();
  v2(v1, 0);

  free(v1);
}

void (*sub_1001E155C(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  _OWORD v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_1001DE0AC(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_1001E168C;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_1001E1008();
      goto LABEL_7;
    }
    sub_1001DE8FC(v14, a3 & 1);
    unint64_t v18 = sub_1001DE0AC(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for RoutingSessionServer.Client(0);
  uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1001E168C(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1001E1718(*a1, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t (*sub_1001E16DC(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_1001E170C;
}

uint64_t sub_1001E170C(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t *sub_1001E1718(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7 = *result;
  if (*result)
  {
    uint64_t v8 = (void *)*a3;
    if (a2)
    {
      *(void *)(v8[7] + 8 * a4) = v7;
    }
    else
    {
      v8[(a4 >> 6) + 8] |= 1 << a4;
      uint64_t v9 = 8 * a4;
      *(void *)(v8[6] + v9) = a5;
      *(void *)(v8[7] + v9) = v7;
      uint64_t v10 = v8[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11)
      {
        __break(1u);
        return result;
      }
      _OWORD v8[2] = v12;
      swift_retain();
    }
  }
  else if (a2)
  {
    type metadata accessor for RoutingSessionServer.Client(0);
    swift_arrayDestroy();
    sub_1001DF394(a4, *a3);
  }

  return (uint64_t *)swift_bridgeObjectRetain();
}

uint64_t sub_1001E17F8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100015AE0(&qword_100479510, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      long long v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100015AE0(&qword_100479518, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      int64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1001E1B1C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1001E1B1C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1001DD3C0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1001DCD6C();
      goto LABEL_12;
    }
    sub_1001DD010();
  }
  uint64_t v12 = *v3;
  sub_100015AE0(&qword_100479510, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100015AE0(&qword_100479518, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1001E1DBC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v7 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v8 <= v9) {
    int64_t v30 = v8 + v6;
  }
  else {
    int64_t v30 = v8;
  }
  unint64_t v7 = sub_1001DC838(isUniquelyReferenced_nonNull_native, v30, 1, v7, a2, a3, a4);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v16 = *(void *)(v7 + 16);
  uint64_t v17 = (*(void *)(v7 + 24) >> 1) - v16;
  uint64_t v18 = *(void *)(a5(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  if (v17 < v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v21 = v7 + v20 + v19 * v16;
  unint64_t v22 = a1 + v20;
  uint64_t v23 = v19 * v6;
  unint64_t v24 = v21 + v23;
  unint64_t v25 = v22 + v23;
  if (v22 < v24 && v21 < v25) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v5 = v7;
    return result;
  }
  uint64_t v27 = *(void *)(v7 + 16);
  BOOL v28 = __OFADD__(v27, v6);
  uint64_t v29 = v27 + v6;
  if (!v28)
  {
    *(void *)(v7 + 16) = v29;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001E1F90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001E2064(a1, a2, a3, (void *)*v3, &qword_1004794D0, type metadata accessor for HostedRoutingItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001E1FCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001E2064(a1, a2, a3, (void *)*v3, &qword_100478F38, type metadata accessor for HostedRoutingSourceSession);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001E2008(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001E2064(a1, a2, a3, (void *)*v3, &qword_100479558, type metadata accessor for HostedRoutingSession);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001E2044(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001E22AC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001E2064(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100013A80(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  _OWORD v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001E22AC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100013A80(&qword_1004795D0);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100013A80(&qword_1004795D8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001E2438(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_1001DC838(isUniquelyReferenced_nonNull_native, v13, 1, v5, &qword_1004794D0, type metadata accessor for HostedRoutingItem, type metadata accessor for HostedRoutingItem);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for HostedRoutingItem(0) - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_1001E6EAC(a3, v17, type metadata accessor for HostedRoutingItem);
  }
  return sub_100009A08(a3, &qword_100479560);
}

Swift::Int sub_1001E2688(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v156 = a2;
  uint64_t v155 = a1;
  uint64_t v147 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v153 = *(void *)(v147 - 8);
  uint64_t v5 = __chkstk_darwin(v147);
  uint64_t v148 = (uint64_t)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v151 = (uint64_t)&v133 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  int64_t v11 = (char *)&v133 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v133 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v133 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  unint64_t v20 = (char *)&v133 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v133 - v22;
  __chkstk_darwin(v21);
  uint64_t v138 = (uint64_t)&v133 - v24;
  uint64_t v154 = v2;
  Swift::Int v25 = v2[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v25);
  if (result >= v25)
  {
    if (v25 < 0) {
      goto LABEL_149;
    }
    if (v25) {
      return sub_1001E3370(0, v25, 1, v155);
    }
    return result;
  }
  if (v25 >= 0) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = v25 + 1;
  }
  if (v25 <= -2) {
    goto LABEL_158;
  }
  Swift::Int v137 = result;
  Swift::Int v28 = v25;
  if (v25 < 2)
  {
    uint64_t v31 = _swiftEmptyArrayStorage;
    unint64_t v152 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
    if (v28 != 1)
    {
      unint64_t v60 = _swiftEmptyArrayStorage[2];
      uint64_t v33 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_111;
    }
    uint64_t v29 = 1;
    unsigned __int8 v134 = v23;
    uint64_t v142 = v20;
    uint64_t v143 = v17;
    uint64_t v146 = v11;
  }
  else
  {
    uint64_t v29 = v25;
    unsigned __int8 v134 = v23;
    uint64_t v142 = v20;
    uint64_t v143 = v17;
    uint64_t v146 = v11;
    uint64_t v30 = v27 >> 1;
    uint64_t v31 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    void v31[2] = v30;
    unint64_t v152 = (unint64_t)v31
         + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
  }
  uint64_t v141 = v31;
  uint64_t v32 = 0;
  uint64_t v33 = (char *)_swiftEmptyArrayStorage;
  uint64_t v136 = v14;
  uint64_t v34 = v29;
  do
  {
    uint64_t v35 = v32;
    uint64_t v36 = v32 + 1;
    if (v32 + 1 >= v34)
    {
      uint64_t v41 = v32 + 1;
      uint64_t v48 = v32;
LABEL_48:
      if (v41 < v48) {
        goto LABEL_148;
      }
      goto LABEL_49;
    }
    uint64_t v150 = v34;
    uint64_t v37 = *v154;
    uint64_t v38 = *(void *)(v153 + 72);
    uint64_t v39 = v138;
    sub_1001E6EAC(*v154 + v38 * v36, v138, type metadata accessor for HostedRoutingItem);
    uint64_t v40 = (uint64_t)v134;
    sub_1001E6EAC(v37 + v38 * v35, (uint64_t)v134, type metadata accessor for HostedRoutingItem);
    LODWORD(v149) = v155(v39, v40);
    if (v4)
    {
      sub_1001E6F14(v40, type metadata accessor for HostedRoutingItem);
      sub_1001E6F14(v39, type metadata accessor for HostedRoutingItem);
LABEL_125:
      swift_bridgeObjectRelease();
      goto LABEL_126;
    }
    sub_1001E6F14(v40, type metadata accessor for HostedRoutingItem);
    sub_1001E6F14(v39, type metadata accessor for HostedRoutingItem);
    uint64_t v135 = v35;
    uint64_t v41 = v35 + 2;
    uint64_t v42 = v150;
    uint64_t v140 = v37;
    if (v35 + 2 < v150)
    {
      uint64_t v43 = v37;
      uint64_t v133 = v33;
      uint64_t v144 = v38 * v41;
      uint64_t v145 = v38 * v36;
      while (1)
      {
        uint64_t v44 = v41;
        uint64_t v45 = (uint64_t)v142;
        sub_1001E6EAC(v43 + v144, (uint64_t)v142, type metadata accessor for HostedRoutingItem);
        uint64_t v46 = (uint64_t)v143;
        sub_1001E6EAC(v43 + v145, (uint64_t)v143, type metadata accessor for HostedRoutingItem);
        int v47 = v155(v45, v46);
        sub_1001E6F14(v46, type metadata accessor for HostedRoutingItem);
        sub_1001E6F14(v45, type metadata accessor for HostedRoutingItem);
        if ((v149 ^ v47)) {
          break;
        }
        uint64_t v41 = v44 + 1;
        v43 += v38;
        uint64_t v42 = v150;
        if (v150 == v44 + 1)
        {
          uint64_t v41 = v150;
          uint64_t v33 = v133;
          uint64_t v4 = 0;
          goto LABEL_23;
        }
      }
      uint64_t v33 = v133;
      uint64_t v41 = v44;
      uint64_t v4 = 0;
      uint64_t v42 = v150;
LABEL_23:
      uint64_t v37 = v140;
    }
    Swift::Int v49 = v137;
    uint64_t v48 = v135;
    if ((v149 & 1) == 0) {
      goto LABEL_37;
    }
    if (v41 < v135) {
      goto LABEL_153;
    }
    if (v135 < v41)
    {
      uint64_t v133 = v33;
      uint64_t v50 = 0;
      uint64_t v51 = v38 * (v41 - 1);
      uint64_t v52 = v41 * v38;
      uint64_t v53 = v135;
      uint64_t v54 = v135 * v38;
      uint64_t v139 = v38;
      do
      {
        if (v53 != v41 + v50 - 1)
        {
          if (!v37) {
            goto LABEL_156;
          }
          uint64_t v149 = v37 + v51;
          sub_1001E6FE8(v37 + v54, v148, type metadata accessor for HostedRoutingItem);
          if (v54 < v51 || v37 + v54 >= (unint64_t)(v37 + v52))
          {
            uint64_t v55 = v149;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            uint64_t v55 = v149;
            if (v54 != v51) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          sub_1001E6FE8(v148, v55, type metadata accessor for HostedRoutingItem);
          uint64_t v38 = v139;
          uint64_t v37 = v140;
        }
        ++v53;
        --v50;
        v51 -= v38;
        v52 -= v38;
        v54 += v38;
      }
      while (v53 < v41 + v50);
      uint64_t v33 = v133;
      uint64_t v56 = (uint64_t)v136;
      Swift::Int v49 = v137;
      uint64_t v48 = v135;
      uint64_t v42 = v150;
      if (v41 >= v150) {
        goto LABEL_48;
      }
    }
    else
    {
LABEL_37:
      uint64_t v56 = (uint64_t)v136;
      if (v41 >= v42) {
        goto LABEL_48;
      }
    }
    if (__OFSUB__(v41, v48)) {
      goto LABEL_150;
    }
    if (v41 - v48 >= v49) {
      goto LABEL_48;
    }
    if (__OFADD__(v48, v49)) {
      goto LABEL_151;
    }
    if (v48 + v49 >= v42) {
      uint64_t v57 = v42;
    }
    else {
      uint64_t v57 = v48 + v49;
    }
    if (v57 < v48)
    {
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    if (v41 == v57) {
      goto LABEL_48;
    }
    uint64_t v150 = v4;
    uint64_t v133 = v33;
    uint64_t v110 = *(void *)(v153 + 72);
    uint64_t v111 = v110 * (v41 - 1);
    uint64_t v144 = v110;
    uint64_t v112 = v41 * v110;
    uint64_t v135 = v48;
    uint64_t v140 = v57;
    do
    {
      uint64_t v113 = 0;
      uint64_t v114 = v48;
      uint64_t v149 = v41;
      uint64_t v145 = v112;
      while (1)
      {
        uint64_t v116 = *v154;
        sub_1001E6EAC(v112 + v113 + *v154, v56, type metadata accessor for HostedRoutingItem);
        uint64_t v117 = v111;
        uint64_t v118 = v111 + v113 + v116;
        uint64_t v119 = v56;
        uint64_t v120 = (uint64_t)v146;
        sub_1001E6EAC(v118, (uint64_t)v146, type metadata accessor for HostedRoutingItem);
        uint64_t v121 = v150;
        char v122 = v155(v119, v120);
        uint64_t v150 = v121;
        if (v121)
        {
          sub_1001E6F14(v120, type metadata accessor for HostedRoutingItem);
          sub_1001E6F14(v119, type metadata accessor for HostedRoutingItem);
          swift_bridgeObjectRelease();
LABEL_126:
          v141[2] = 0;
          return swift_bridgeObjectRelease();
        }
        char v123 = v122;
        uint64_t v124 = v114;
        sub_1001E6F14(v120, type metadata accessor for HostedRoutingItem);
        sub_1001E6F14(v119, type metadata accessor for HostedRoutingItem);
        uint64_t v56 = v119;
        if ((v123 & 1) == 0) {
          break;
        }
        uint64_t v125 = *v154;
        if (!*v154) {
          goto LABEL_155;
        }
        uint64_t v111 = v117;
        uint64_t v112 = v145;
        uint64_t v126 = v125 + v111 + v113;
        sub_1001E6FE8(v125 + v145 + v113, v151, type metadata accessor for HostedRoutingItem);
        swift_arrayInitWithTakeFrontToBack();
        sub_1001E6FE8(v151, v126, type metadata accessor for HostedRoutingItem);
        v113 -= v144;
        uint64_t v114 = v124 + 1;
        uint64_t v115 = v149;
        if (v149 == v124 + 1) {
          goto LABEL_106;
        }
      }
      uint64_t v115 = v149;
      uint64_t v111 = v117;
      uint64_t v112 = v145;
LABEL_106:
      uint64_t v41 = v115 + 1;
      v111 += v144;
      v112 += v144;
      uint64_t v48 = v135;
    }
    while (v41 != v140);
    uint64_t v41 = v140;
    uint64_t v33 = v133;
    uint64_t v4 = v150;
    if (v140 < v135) {
      goto LABEL_148;
    }
LABEL_49:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v33 = sub_1001E3C20(0, *((void *)v33 + 2) + 1, 1, v33);
    }
    unint64_t v59 = *((void *)v33 + 2);
    unint64_t v58 = *((void *)v33 + 3);
    unint64_t v60 = v59 + 1;
    uint64_t v149 = v41;
    if (v59 >= v58 >> 1) {
      uint64_t v33 = sub_1001E3C20((char *)(v58 > 1), v59 + 1, 1, v33);
    }
    *((void *)v33 + 2) = v60;
    uint64_t v61 = v33 + 32;
    Swift::String v62 = &v33[16 * v59 + 32];
    uint64_t v63 = v149;
    *(void *)Swift::String v62 = v48;
    *((void *)v62 + 1) = v63;
    if (v59)
    {
      while (2)
      {
        unint64_t v64 = v60 - 1;
        if (v60 >= 4)
        {
          uint64_t v69 = &v61[16 * v60];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_133;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_134;
          }
          unint64_t v76 = v60 - 2;
          uint64_t v77 = &v61[16 * v60 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_136;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_139;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_143;
            }
            BOOL v92 = v67 < v102;
          }
          else
          {
LABEL_67:
            if (v68) {
              goto LABEL_135;
            }
            unint64_t v76 = v60 - 2;
            uint64_t v82 = &v61[16 * v60 - 32];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v85 = __OFSUB__(v83, v84);
            uint64_t v86 = v83 - v84;
            char v87 = v85;
            if (v85) {
              goto LABEL_138;
            }
            Swift::String v88 = &v61[16 * v64];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v75 = __OFSUB__(v89, v90);
            uint64_t v91 = v89 - v90;
            if (v75) {
              goto LABEL_141;
            }
            if (__OFADD__(v86, v91)) {
              goto LABEL_142;
            }
            if (v86 + v91 < v67) {
              goto LABEL_79;
            }
            BOOL v92 = v67 < v91;
          }
          if (v92) {
            unint64_t v64 = v76;
          }
        }
        else
        {
          if (v60 == 3)
          {
            uint64_t v66 = *((void *)v33 + 4);
            uint64_t v65 = *((void *)v33 + 5);
            BOOL v75 = __OFSUB__(v65, v66);
            uint64_t v67 = v65 - v66;
            char v68 = v75;
            goto LABEL_67;
          }
          uint64_t v93 = *((void *)v33 + 4);
          uint64_t v94 = *((void *)v33 + 5);
          BOOL v75 = __OFSUB__(v94, v93);
          uint64_t v86 = v94 - v93;
          char v87 = v75;
LABEL_79:
          if (v87) {
            goto LABEL_137;
          }
          int64_t v95 = &v61[16 * v64];
          uint64_t v97 = *(void *)v95;
          uint64_t v96 = *((void *)v95 + 1);
          BOOL v75 = __OFSUB__(v96, v97);
          uint64_t v98 = v96 - v97;
          if (v75) {
            goto LABEL_140;
          }
          if (v98 < v86) {
            goto LABEL_96;
          }
        }
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v60)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!*v154) {
          goto LABEL_154;
        }
        uint64_t v104 = v33;
        int64_t v105 = &v61[16 * v103];
        uint64_t v106 = *(void *)v105;
        unint64_t v107 = &v61[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        sub_1001E364C(*v154 + *(void *)(v153 + 72) * *(void *)v105, *v154 + *(void *)(v153 + 72) * *(void *)v107, *v154 + *(void *)(v153 + 72) * v108, v152, (uint64_t (*)(char *, char *))v155, v156);
        if (v4) {
          goto LABEL_125;
        }
        if (v108 < v106) {
          goto LABEL_130;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_131;
        }
        *(void *)int64_t v105 = v106;
        *(void *)&v61[16 * v103 + 8] = v108;
        unint64_t v109 = *((void *)v104 + 2);
        if (v64 >= v109) {
          goto LABEL_132;
        }
        uint64_t v33 = v104;
        unint64_t v60 = v109 - 1;
        memmove(&v61[16 * v64], v107 + 16, 16 * (v109 - 1 - v64));
        *((void *)v33 + 2) = v109 - 1;
        if (v109 <= 2) {
          goto LABEL_96;
        }
        continue;
      }
    }
    unint64_t v60 = 1;
LABEL_96:
    uint64_t v34 = v154[1];
    uint64_t v32 = v149;
    uint64_t v31 = v141;
  }
  while (v149 < v34);
LABEL_111:
  if (v60 >= 2)
  {
    uint64_t v127 = *v154;
    uint64_t v141 = v31;
    do
    {
      unint64_t v128 = v60 - 2;
      if (v60 < 2) {
        goto LABEL_144;
      }
      if (!v127) {
        goto LABEL_157;
      }
      uint64_t v129 = *(void *)&v33[16 * v128 + 32];
      uint64_t v130 = *(void *)&v33[16 * v60 + 24];
      sub_1001E364C(v127 + *(void *)(v153 + 72) * v129, v127 + *(void *)(v153 + 72) * *(void *)&v33[16 * v60 + 16], v127 + *(void *)(v153 + 72) * v130, v152, (uint64_t (*)(char *, char *))v155, v156);
      if (v4) {
        goto LABEL_125;
      }
      if (v130 < v129) {
        goto LABEL_145;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = sub_1001E3E5C((uint64_t)v33);
      }
      if (v128 >= *((void *)v33 + 2)) {
        goto LABEL_146;
      }
      uint64_t v131 = &v33[16 * v128 + 32];
      *(void *)uint64_t v131 = v129;
      *((void *)v131 + 1) = v130;
      unint64_t v132 = *((void *)v33 + 2);
      if (v60 > v132) {
        goto LABEL_147;
      }
      memmove(&v33[16 * v60 + 16], &v33[16 * v60 + 32], 16 * (v132 - v60));
      *((void *)v33 + 2) = v132 - 1;
      unint64_t v60 = v132 - 1;
      uint64_t v31 = v141;
    }
    while (v132 > 2);
  }
  swift_bridgeObjectRelease();
  void v31[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E3370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v35 = a4;
  uint64_t v29 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v7 = __chkstk_darwin(v29);
  uint64_t v38 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v34 = (uint64_t)&v26 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v33 = (uint64_t)&v26 - v13;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (a3 - 1);
    uint64_t v30 = v14;
    uint64_t v16 = v14 * a3;
    uint64_t v27 = a1;
LABEL_4:
    uint64_t v17 = 0;
    uint64_t v31 = v16;
    uint64_t v32 = a3;
    while (1)
    {
      uint64_t v19 = *v39;
      uint64_t v36 = v16 + v17;
      uint64_t v37 = a1;
      uint64_t v20 = v33;
      sub_1001E6EAC(v16 + v17 + v19, v33, type metadata accessor for HostedRoutingItem);
      uint64_t v21 = v34;
      sub_1001E6EAC(v15 + v17 + v19, v34, type metadata accessor for HostedRoutingItem);
      uint64_t v22 = v40;
      char v23 = v35(v20, v21);
      sub_1001E6F14(v21, type metadata accessor for HostedRoutingItem);
      uint64_t result = sub_1001E6F14(v20, type metadata accessor for HostedRoutingItem);
      uint64_t v40 = v22;
      if (v22) {
        break;
      }
      if ((v23 & 1) == 0)
      {
        uint64_t v16 = v31;
        uint64_t v18 = v32;
LABEL_11:
        a3 = v18 + 1;
        v15 += v30;
        v16 += v30;
        a1 = v27;
        if (a3 != v28) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v24 = *v39;
      if (!*v39)
      {
        __break(1u);
        return result;
      }
      uint64_t v16 = v31;
      uint64_t v25 = v24 + v15 + v17;
      sub_1001E6FE8(v24 + v31 + v17, v38, type metadata accessor for HostedRoutingItem);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1001E6FE8(v38, v25, type metadata accessor for HostedRoutingItem);
      v17 -= v30;
      a1 = v37 + 1;
      uint64_t v18 = v32;
      if (v32 == v37 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1001E364C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6)
{
  unint64_t v7 = v6;
  uint64_t v55 = a6;
  uint64_t v56 = a5;
  uint64_t v54 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v12 = __chkstk_darwin(v54);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v49 - v17;
  __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v49 - v20;
  uint64_t v23 = *(void *)(v22 + 72);
  if (!v23)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (a2 - a1 == 0x8000000000000000 && v23 == -1) {
    goto LABEL_66;
  }
  int64_t v24 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v23 == -1) {
    goto LABEL_67;
  }
  uint64_t v25 = (uint64_t)(a2 - a1) / v23;
  unint64_t v59 = a1;
  unint64_t v58 = a4;
  uint64_t v26 = v24 / v23;
  if (v25 >= v24 / v23)
  {
    if ((v26 & 0x8000000000000000) == 0)
    {
      uint64_t v28 = v23;
      unint64_t v29 = a3;
      uint64_t v30 = v26 * v28;
      uint64_t v31 = v19;
      if (a4 < a2 || a2 + v30 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v38 = a4 + v30;
      unint64_t v57 = a4 + v30;
      unint64_t v59 = a2;
      if (v30 < 1 || a1 >= a2) {
        goto LABEL_63;
      }
      unint64_t v51 = a4;
      unint64_t v52 = (unint64_t)v14;
      uint64_t v40 = -v28;
      unint64_t v49 = a1;
      uint64_t v50 = -v28;
      while (1)
      {
        sub_1001E6EAC(v38 + v40, v31, type metadata accessor for HostedRoutingItem);
        unint64_t v41 = a2;
        a2 += v40;
        uint64_t v21 = (char *)v31;
        uint64_t v18 = (char *)v52;
        sub_1001E6EAC(a2, v52, type metadata accessor for HostedRoutingItem);
        char v42 = v56(v21, v18);
        if (v7) {
          goto LABEL_62;
        }
        char v43 = v42;
        unint64_t v53 = 0;
        unint64_t v44 = v29 + v40;
        sub_1001E6F14((uint64_t)v18, type metadata accessor for HostedRoutingItem);
        sub_1001E6F14((uint64_t)v21, type metadata accessor for HostedRoutingItem);
        uint64_t v31 = (uint64_t)v21;
        if (v43)
        {
          if (v29 < v41 || v44 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v46 = v51;
          }
          else
          {
            BOOL v45 = v29 == v41;
            unint64_t v46 = v51;
            if (!v45) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          uint64_t v40 = v50;
          v59 += v50;
        }
        else
        {
          unint64_t v47 = v57;
          v57 += v40;
          if (v29 < v47 || v44 >= v47)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v29 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v41;
          uint64_t v40 = v50;
          unint64_t v46 = v51;
        }
        unint64_t v38 = v57;
        if (v57 > v46)
        {
          unint64_t v29 = v44;
          unint64_t v7 = v53;
          if (a2 > v49) {
            continue;
          }
        }
        goto LABEL_63;
      }
    }
  }
  else
  {
    unint64_t v53 = a3;
    if ((v25 & 0x8000000000000000) == 0)
    {
      uint64_t v27 = v25 * v23;
      if (a4 < a1 || a1 + v27 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v52 = a4 + v27;
      unint64_t v57 = a4 + v27;
      if (v27 < 1 || a2 >= v53) {
        goto LABEL_63;
      }
      while (1)
      {
        sub_1001E6EAC(a2, (uint64_t)v21, type metadata accessor for HostedRoutingItem);
        sub_1001E6EAC(a4, (uint64_t)v18, type metadata accessor for HostedRoutingItem);
        char v33 = v56(v21, v18);
        if (v6) {
          break;
        }
        char v34 = v33;
        sub_1001E6F14((uint64_t)v18, type metadata accessor for HostedRoutingItem);
        sub_1001E6F14((uint64_t)v21, type metadata accessor for HostedRoutingItem);
        unint64_t v35 = v59;
        if (v34)
        {
          unint64_t v36 = a2 + v23;
          if (v59 < a2 || v59 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 == a2)
          {
            unint64_t v35 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v37 = v58 + v23;
          if (v59 < v58 || v59 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 != v58)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v58 = v37;
          unint64_t v36 = a2;
        }
        unint64_t v59 = v35 + v23;
        a4 = v58;
        if (v58 < v52)
        {
          a2 = v36;
          if (v36 < v53) {
            continue;
          }
        }
        goto LABEL_63;
      }
LABEL_62:
      sub_1001E6F14((uint64_t)v18, type metadata accessor for HostedRoutingItem);
      sub_1001E6F14((uint64_t)v21, type metadata accessor for HostedRoutingItem);
LABEL_63:
      sub_1001E3D1C(&v59, &v58, (uint64_t *)&v57);
      return 1;
    }
  }
LABEL_68:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001E3C20(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100013A80((uint64_t *)&unk_10047AEE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E3D1C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for HostedRoutingItem(0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1001E3E5C(uint64_t a1)
{
  return sub_1001E3C20(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1001E3E70(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v35 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v4 = *(void *)(v35 - 8);
  uint64_t v5 = __chkstk_darwin(v35);
  char v34 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v33 = (char *)v29 - v7;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8) {
    return (uint64_t)v9;
  }
  v29[0] = v2;
  unint64_t v38 = _swiftEmptyArrayStorage;
  sub_1001E2044(0, v8, 0);
  uint64_t result = sub_10001551C(a1);
  int64_t v11 = result;
  int v13 = v12;
  int v15 = v14 & 1;
  uint64_t v31 = a1;
  uint64_t v32 = a1 + 56;
  uint64_t v29[2] = v4 + 32;
  v29[3] = v4 + 16;
  v29[1] = v4 + 8;
  uint64_t v30 = v4;
  uint64_t v16 = v34;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v32 + (((unint64_t)v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v13) {
      goto LABEL_16;
    }
    int v37 = v15;
    int64_t v17 = *(void *)(a1 + 48) + *(void *)(v4 + 72) * v11;
    uint64_t v18 = v33;
    uint64_t v19 = v35;
    (*(void (**)(char *, int64_t, uint64_t))(v4 + 16))(v33, v17, v35);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v16, v18, v19);
    uint64_t v20 = *(void *)sub_1001BF970();
    uint64_t v21 = (*(uint64_t (**)(char *))(v20 + 656))(v16);
    uint64_t v23 = v22;
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v19);
    uint64_t v9 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1001E2044(0, v9[2] + 1, 1);
      uint64_t v9 = v38;
    }
    unint64_t v25 = v9[2];
    unint64_t v24 = v9[3];
    if (v25 >= v24 >> 1)
    {
      sub_1001E2044(v24 > 1, v25 + 1, 1);
      uint64_t v9 = v38;
    }
    v9[2] = v25 + 1;
    uint64_t v26 = &v9[2 * v25];
    v26[4] = v21;
    v26[5] = v23;
    a1 = v31;
    uint64_t result = sub_100013AC4(v11, v13, v37 & 1, v31);
    int64_t v11 = result;
    int v13 = v27;
    int v15 = v28 & 1;
    --v8;
    uint64_t v4 = v30;
    if (!v8)
    {
      sub_100015510(result, v27, v15);
      return (uint64_t)v9;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void *sub_1001E418C(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v5 = *(void *)(v34 - 8);
  uint64_t v6 = __chkstk_darwin(v34);
  int64_t v8 = (void *)((char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v10 = (void *)((char *)v30 - v9);
  int64_t v11 = *(void *)(a1 + 16);
  int v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    v30[0] = v2;
    unint64_t v41 = _swiftEmptyArrayStorage;
    int64_t v36 = v11;
    sub_1001E1F90(0, v11, 0);
    uint64_t v13 = 0;
    unint64_t v38 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v35 = a1 + v38;
    uint64_t v37 = *(void *)(a2 + 16);
    uint64_t v14 = *(void *)(v5 + 72);
    v30[1] = a2;
    uint64_t v31 = a2 + 32;
    int v15 = (int *)v34;
    do
    {
      sub_1001E6EAC(v35 + v14 * v13, (uint64_t)v10, type metadata accessor for HostedRoutingItem);
      *((unsigned char *)v10 + v15[9]) = 0;
      uint64_t v16 = (char *)v10 + v15[12];
      *(_DWORD *)uint64_t v16 = 0;
      v16[4] = 1;
      uint64_t v39 = _swiftEmptyArrayStorage;
      sub_1001E7328();
      sub_100013A80(&qword_1004795C0);
      sub_1000155BC(&qword_1004795C8, &qword_1004795C0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      *((unsigned char *)v10 + v15[13]) = v40;
      if (v37)
      {
        uint64_t v17 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0) - 8);
        uint64_t v18 = v31 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
        uint64_t v19 = *(void *)(v17 + 72);
        swift_bridgeObjectRetain();
        uint64_t v20 = 0;
        uint64_t v32 = v19;
        uint64_t v33 = v18;
        while (1)
        {
          uint64_t v21 = *(void *)(v18 + v19 * v20);
          uint64_t v22 = *(void *)(v21 + 16);
          if (v22) {
            break;
          }
LABEL_5:
          if (++v20 == v37)
          {
            char v26 = 0;
            goto LABEL_18;
          }
        }
        uint64_t v23 = v21 + v38;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1001E6EAC(v23, (uint64_t)v8, type metadata accessor for HostedRoutingItem);
          if (*v8 == *v10 && v8[1] == v10[1]) {
            break;
          }
          char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_1001E6F14((uint64_t)v8, type metadata accessor for HostedRoutingItem);
          if (v25) {
            goto LABEL_17;
          }
          v23 += v14;
          if (!--v22)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v18 = v33;
            int v15 = (int *)v34;
            uint64_t v19 = v32;
            goto LABEL_5;
          }
        }
        sub_1001E6F14((uint64_t)v8, type metadata accessor for HostedRoutingItem);
LABEL_17:
        swift_bridgeObjectRelease_n();
        char v26 = 1;
        int v15 = (int *)v34;
LABEL_18:
        swift_bridgeObjectRelease();
      }
      else
      {
        char v26 = 0;
      }
      *((unsigned char *)v10 + v15[10]) = v26;
      int v12 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001E1F90(0, v12[2] + 1, 1);
        int v12 = v41;
      }
      unint64_t v28 = v12[2];
      unint64_t v27 = v12[3];
      if (v28 >= v27 >> 1)
      {
        sub_1001E1F90(v27 > 1, v28 + 1, 1);
        int v12 = v41;
      }
      ++v13;
      v12[2] = v28 + 1;
      sub_1001E6FE8((uint64_t)v10, (uint64_t)v12 + v38 + v28 * v14, type metadata accessor for HostedRoutingItem);
    }
    while (v13 != v36);
  }
  return v12;
}

void *sub_1001E45C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for HostedRoutingItem(0) - 8;
  uint64_t v6 = __chkstk_darwin(v5);
  int64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  int64_t v11 = (void *)((char *)v27 - v10);
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    v27[1] = v2;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v28 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = a1 + v28;
    uint64_t v16 = _swiftEmptyArrayStorage;
    unint64_t v29 = v8;
    while (1)
    {
      sub_1001E6EAC(v15, (uint64_t)v11, type metadata accessor for HostedRoutingItem);
      if (*(void *)(a2 + 16))
      {
        uint64_t v17 = *v11;
        uint64_t v18 = v11[1];
        swift_bridgeObjectRetain();
        unint64_t v19 = sub_100013660(v17, v18);
        if (v20)
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + 56) + 8 * v19);
          swift_retain();
          uint64_t v22 = swift_bridgeObjectRelease();
          char v23 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 120))(v22);
          swift_release();
          if (v23)
          {
            sub_1001E6FE8((uint64_t)v11, (uint64_t)v8, type metadata accessor for HostedRoutingItem);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1001E1F90(0, v16[2] + 1, 1);
            }
            uint64_t v16 = v30;
            unint64_t v25 = v30[2];
            unint64_t v24 = v30[3];
            if (v25 >= v24 >> 1)
            {
              sub_1001E1F90(v24 > 1, v25 + 1, 1);
              uint64_t v16 = v30;
            }
            _OWORD v16[2] = v25 + 1;
            uint64_t v26 = (uint64_t)v16 + v28 + v25 * v14;
            int64_t v8 = v29;
            sub_1001E6FE8((uint64_t)v29, v26, type metadata accessor for HostedRoutingItem);
            goto LABEL_5;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      sub_1001E6F14((uint64_t)v11, type metadata accessor for HostedRoutingItem);
LABEL_5:
      v15 += v14;
      if (!--v13) {
        return v30;
      }
    }
  }
  return result;
}

uint64_t sub_1001E485C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1001DC838(isUniquelyReferenced_nonNull_native, v11, 1, v4, &qword_100478F38, type metadata accessor for HostedRoutingSourceSession, type metadata accessor for HostedRoutingSourceSession);
  }
  uint64_t v12 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      unint64_t *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001E4A74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1001E4BD0(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v51 = a2;
  uint64_t v56 = a1;
  uint64_t v4 = type metadata accessor for HostedRoutingSession(0);
  uint64_t v50 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  __chkstk_darwin(v7);
  unint64_t v52 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100013A80(&qword_100478F10);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RoutingInteraction();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v53 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for RoutingSessionConfiguration();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = v19;
  uint64_t v55 = v18;
  (*(void (**)(char *, uint64_t))(v19 + 16))(v17, a3 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_configuration);
  uint64_t v20 = OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context;
  uint64_t v21 = (uint64_t *)(*(void *)(a3
                              + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_context)
                  + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_visibleSessionIdentifiersForCurrentPresentation);
  swift_beginAccess();
  uint64_t v22 = *v21;
  type metadata accessor for Preferences();
  swift_bridgeObjectRetain();
  static Preferences.sessionRecentActivityInterval.getter();
  double v24 = v23;
  v59[0] = (unint64_t)_swiftEmptyArrayStorage;
  v59[1] = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  uint64_t v25 = *(void *)(a3 + v20)
      + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_mostRecentSourceSessionHidingInteraction;
  swift_beginAccess();
  sub_1001E71E8(v25, (uint64_t)v11, &qword_100478F10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100009A08((uint64_t)v11, &qword_100478F10);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v53, v11, v12);
  uint64_t v26 = v52;
  RoutingInteraction.action.getter();
  uint64_t v28 = v48;
  uint64_t v27 = v49;
  int v29 = (*(uint64_t (**)(char *, uint64_t))(v48 + 88))(v26, v49);
  if (v29 == enum case for RoutingInteraction.Action.setActiveItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v28 + 96))(v26, v27);
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1002A0458();
    uint64_t v32 = *(void *)v30;
    uint64_t v31 = *((void *)v30 + 1);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
    swift_bridgeObjectRetain();
    v33(v53, v12);
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v57 = v32;
    uint64_t v58 = v31;
    goto LABEL_9;
  }
  int v34 = v29;
  int v35 = enum case for RoutingInteraction.Action.handoff(_:);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v53, v12);
  if (v34 == v35)
  {
    int64_t v36 = v52;
    (*(void (**)(char *, uint64_t))(v28 + 96))(v52, v27);
    uint64_t v37 = *(void *)v36;
    uint64_t v32 = *(void *)(v37 + 16);
    uint64_t v31 = *(void *)(v37 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v52, v27);
LABEL_9:
  uint64_t v38 = *(void *)(v56 + 16);
  if (v38)
  {
    uint64_t v39 = (uint64_t *)(v56 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80)));
    uint64_t v40 = *(void *)(v50 + 72);
    swift_bridgeObjectRetain();
    uint64_t v41 = v38 - 1;
    uint64_t v42 = (uint64_t)v39;
    do
    {
      uint64_t v43 = v41;
      sub_1001E6EAC(v42, (uint64_t)v6, type metadata accessor for HostedRoutingSession);
      int v44 = v6[*(int *)(v4 + 64)];
      sub_1001E6F14((uint64_t)v6, type metadata accessor for HostedRoutingSession);
      if (v44) {
        break;
      }
      uint64_t v41 = v43 - 1;
      v42 += v40;
    }
    while (v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    BOOL v45 = v51;
    do
    {
      sub_1001D8CD4(v39, v45, (uint64_t)v17, v59, &v57, v22, v44, v24);
      uint64_t v39 = (uint64_t *)((char *)v39 + v40);
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v55);
  swift_bridgeObjectRelease();
  unint64_t v46 = v59[0];
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_1001E519C(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a1;
  uint64_t v45 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v41 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  uint64_t v46 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v43 = v8;
  uint64_t v42 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100013A80(&qword_10047D120);
  __chkstk_darwin(v9 - 8);
  uint64_t v38 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100013A80(&qword_100479548);
  v54[3] = v11;
  v54[4] = sub_1000155BC(&qword_100479550, &qword_100479548);
  v54[0] = a2;
  uint64_t v12 = sub_1001BDB5C(v54, v11);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = sub_1001922CC(v51);
  uint64_t *v16 = *v14;
  v16[1] = 0;
  swift_bridgeObjectRetain();
  sub_1001E6A9C((uint64_t)v51, AssociatedTypeWitness);
  dispatch thunk of IteratorProtocol.next()();
  uint64_t v17 = aBlock[0];
  if (aBlock[0])
  {
    uint64_t v40 = v50;
    uint64_t v18 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v37 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56);
    do
    {
      uint64_t v28 = OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_queue;
      id v29 = objc_retain(*(id *)(v17
                              + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_queue));
      uint64_t v30 = *sub_100266CC0();

      if (v29 == (id)v30)
      {
        uint64_t v31 = *(void *)(v17
                        + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient
                        + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v33 = v38;
        sub_1001E6EAC(v47, v38, type metadata accessor for HostedRoutingSessionSnapshot);
        (*v37)(v33, 0, 1, v39);
        int v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 8);
        swift_unknownObjectRetain();
        v34(v33, ObjectType, v31);
        swift_release();
        swift_unknownObjectRelease();
        sub_100009A08(v33, &qword_10047D120);
      }
      else
      {
        uint64_t v20 = *(void **)(v17 + v28);
        uint64_t v21 = v42;
        sub_1001E6EAC(v47, v42, type metadata accessor for HostedRoutingSessionSnapshot);
        unint64_t v22 = (*(unsigned __int8 *)(v46 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v17;
        sub_1001E6FE8(v21, v23 + v22, type metadata accessor for HostedRoutingSessionSnapshot);
        v50[2] = sub_1001E6E48;
        v50[3] = v23;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v50[0] = sub_100006760;
        v50[1] = &unk_1004219E8;
        double v24 = _Block_copy(aBlock);
        id v25 = v20;
        swift_retain();
        static DispatchQoS.unspecified.getter();
        uint64_t v48 = _swiftEmptyArrayStorage;
        sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100013A80((uint64_t *)&unk_100479AE0);
        sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
        uint64_t v26 = v41;
        uint64_t v27 = v45;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v24);
        swift_release();

        (*v18)(v26, v27);
        (*v19)(v7, v44);
        swift_release();
      }
      sub_1001E6A9C((uint64_t)v51, AssociatedTypeWitness);
      dispatch thunk of IteratorProtocol.next()();
      uint64_t v17 = aBlock[0];
    }
    while (aBlock[0]);
  }
  sub_10018FD5C((uint64_t)v51);
  return sub_10018FD5C((uint64_t)v54);
}

unint64_t sub_1001E5894(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (result >= 3)
  {
    swift_errorRelease();
    return sub_1001859D4(a2, a3, a4);
  }
  return result;
}

uint64_t sub_1001E58F0()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_100266CC0();
  uint64_t v5 = (void *)*v4;
  *uint64_t v3 = *v4;
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v5)
  {
    unint64_t v7 = (unint64_t)sub_1001BF738();
    uint64_t v0 = v7;
    if (!(v7 >> 62))
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v8) {
        goto LABEL_4;
      }
      return swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v8 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_4:
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v0 & 0xC000000000000001) != 0)
      {
        uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v11 = *(void *)(v0 + 8 * i + 32);
        swift_retain();
      }
      sub_1001CF640(v11);
      swift_release();
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

unint64_t sub_1001E5AAC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v59 = a1;
  uint64_t v60 = a3;
  uint64_t v51 = *v4;
  uint64_t v55 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v49 = *(void (***)(char *, uint64_t))(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for DispatchQoS();
  uint64_t v48 = *(void (***)(char *, uint64_t))(v53 - 8);
  __chkstk_darwin(v53);
  unint64_t v52 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void (***)(char *, uint64_t))((char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = sub_100266CC0();
  uint64_t v17 = (void *)*v58;
  void *v16 = *v58;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    uint64_t v57 = v4;
    uint64_t v19 = sub_1001A69C4();
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    unint64_t v56 = v9;
    v20(v12, v19, v9);
    unint64_t v21 = a2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v61 = (void *)a4;
    if (v24)
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v50 = (void *)swift_slowAlloc();
      aBlock[0] = (uint64_t)v50;
      *(_DWORD *)uint64_t v25 = 136315650;
      uint64_t v26 = _typeName(_:qualified:)();
      Swift::String v62 = (void *)sub_10018A9E0(v26, v27, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      Swift::String v62 = (void *)sub_10018A9E0(v59, v21, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 22) = 2080;
      swift_bridgeObjectRetain();
      Swift::String v62 = (void *)sub_10018A9E0(v60, (unint64_t)v61, aBlock);
      uint64_t v16 = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      unint64_t v28 = v21;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%s] dataSourceWillTransition - from: %s to: %s", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v16 = (void *)a4;

      swift_bridgeObjectRelease_n();
      unint64_t v28 = v21;
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, unint64_t))(v10 + 8))(v12, v56);
    unint64_t result = (unint64_t)sub_1001BF738();
    uint64_t v9 = result;
    uint64_t v57 = (uint64_t *)v28;
    if (!(result >> 62))
    {
      uint64_t v30 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v30) {
        goto LABEL_7;
      }
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v30 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  if (v30 >= 1)
  {
    uint64_t v31 = 0;
    unint64_t v56 = v9 & 0xC000000000000001;
    uint64_t v50 = v64;
    ++v49;
    ++v48;
    uint64_t v51 = v9;
    uint64_t v32 = v54;
    do
    {
      if (v56)
      {
        uint64_t v36 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v36 = *(void *)(v9 + 8 * v31 + 32);
        swift_retain();
      }
      uint64_t v37 = *(void **)(v36
                     + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_queue);
      if (v37 == (void *)*v58)
      {
        uint64_t v33 = *(void *)(v36
                        + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient
                        + 8);
        uint64_t ObjectType = swift_getObjectType();
        int v35 = *(void (**)(uint64_t, uint64_t *, uint64_t, void *, uint64_t, uint64_t))(v33 + 40);
        swift_unknownObjectRetain();
        v35(v59, v57, v60, v61, ObjectType, v33);
        uint64_t v16 = v61;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v38 = (void *)swift_allocObject();
        uint64_t v39 = v59;
        v38[2] = v36;
        v38[3] = v39;
        uint64_t v40 = v60;
        v38[4] = v57;
        v38[5] = v40;
        v38[6] = v16;
        v64[2] = sub_1001E6618;
        v64[3] = v38;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v64[0] = sub_100006760;
        v64[1] = &unk_1004218F8;
        uint64_t v41 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v42 = v37;
        swift_retain();
        uint64_t v43 = v52;
        static DispatchQoS.unspecified.getter();
        Swift::String v62 = _swiftEmptyArrayStorage;
        sub_100015AE0((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100013A80((uint64_t *)&unk_100479AE0);
        sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
        uint64_t v44 = v30;
        uint64_t v45 = v55;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v41);
        swift_release();

        uint64_t v46 = v45;
        uint64_t v30 = v44;
        (*v49)(v32, v46);
        uint64_t v47 = v43;
        uint64_t v16 = v61;
        uint64_t v9 = v51;
        (*v48)(v47, v53);
      }
      swift_release();
      ++v31;
    }
    while (v30 != v31);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001E62CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100013A80(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for RoutingSessionServer()
{
  return self;
}

uint64_t sub_1001E6354()
{
  return type metadata accessor for RoutingSessionServer.Client(0);
}

uint64_t sub_1001E635C()
{
  uint64_t result = type metadata accessor for RoutingSessionConfiguration();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for RoutingMode();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1001E644C()
{
  return type metadata accessor for RoutingSessionServer.Client.Context(0);
}

void sub_1001E6454()
{
  sub_1001E651C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001E651C()
{
  if (!qword_100479358)
  {
    type metadata accessor for RoutingInteraction();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100479358);
    }
  }
}

unint64_t sub_1001E6578()
{
  unint64_t result = qword_10047F090[0];
  if (!qword_10047F090[0])
  {
    type metadata accessor for RoutingSessionServer.Client(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10047F090);
  }
  return result;
}

uint64_t sub_1001E65D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001E6618()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = *(void *)(v1
                 + OBJC_IVAR____TtCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client_externalClient
                 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 40);
  swift_unknownObjectRetain();
  v8(v2, v3, v4, v5, ObjectType, v6);

  return swift_unknownObjectRelease();
}

uint64_t sub_1001E66C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001D2A7C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1001E66F4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E672C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(void *)(result
                   + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_itemSettlingTimer))
    {
      *(unsigned char *)(result
               + OBJC_IVAR____TtCCC12mediaremoted20RoutingSessionServerP33_3B73967C365FB47E5431CA6E1588B6FE6Client7Context_requestsStableItemOrdering) = 1;
      sub_1001BE6E0();
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_1001E67A4()
{
  unint64_t result = qword_1004794D8;
  if (!qword_1004794D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004794D8);
  }
  return result;
}

uint64_t sub_1001E67FC()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001E690C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001C7188(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v5 + 8), *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001E69CC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E6A04(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

uint64_t sub_1001E6A30(uint64_t a1)
{
  return sub_1001CEAA4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001E6A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001E6A9C(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1001E6AEC()
{
  uint64_t v1 = *(void *)(type metadata accessor for HostedRoutingSessionSnapshot(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  unint64_t v6 = (int *)type metadata accessor for HostedRoutingSession(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + v6[7];
    uint64_t v8 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001DDF44(*(void *)(v7 + 32), *(unsigned int *)(v7 + 40), *(unsigned char *)(v7 + 44));
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v9 = v7 + *(int *)(v8 + 36);
      uint64_t v10 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      uint64_t v11 = v7 + *(int *)(v8 + 40);
      uint64_t v12 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v5 + v6[8];
    uint64_t v14 = type metadata accessor for RoutingControls();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v5 + v6[13];
    uint64_t v16 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v5 + v6[15];
    uint64_t v18 = type metadata accessor for RoutingSession.HostInfo();
    uint64_t v19 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001E6E48()
{
  uint64_t v1 = *(void *)(type metadata accessor for HostedRoutingSessionSnapshot(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1001D170C(v2, v3);
}

uint64_t sub_1001E6EAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001E6F14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001E6F74()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E6FAC(uint64_t *a1, uint64_t *a2)
{
  return sub_1001D42E8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001E6FB4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001D4B98(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(char **)(v2 + 48), *(void *)(v2 + 56), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 64), a2, *(void *)(v2 + 72));
}

uint64_t sub_1001E6FE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001E7050(uint64_t *a1)
{
  return sub_1001D7DAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40)) & 1;
}

uint64_t sub_1001E7088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001D89F0(a1, *(uint64_t **)(v2 + 16), *(unsigned char *)(v2 + 24), a2);
}

uint64_t sub_1001E70B8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 4u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1001E70CC()
{
  unint64_t result = qword_100479578;
  if (!qword_100479578)
  {
    sub_10018F8A4(&qword_100479570);
    sub_100015AE0(&qword_100479580, type metadata accessor for CFString);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100479578);
  }
  return result;
}

void type metadata accessor for CFString(uint64_t a1)
{
}

uint64_t sub_1001E7184(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100013A80(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001E71E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100013A80(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001E724C(void *a1)
{
  return sub_1001DA91C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40)) & 1;
}

unint64_t sub_1001E7280()
{
  unint64_t result = qword_1004795A0;
  if (!qword_1004795A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004795A0);
  }
  return result;
}

unint64_t sub_1001E72D4()
{
  unint64_t result = qword_1004795A8;
  if (!qword_1004795A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004795A8);
  }
  return result;
}

unint64_t sub_1001E7328()
{
  unint64_t result = qword_1004795B8;
  if (!qword_1004795B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004795B8);
  }
  return result;
}

void sub_1001E737C()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v15 = 0u;
    long long v16 = 0u;
LABEL_20:
    sub_100009A08((uint64_t)&v15, &qword_100479F50);
    return;
  }
  uint64_t v1 = v0;
  uint64_t v13 = kMRNowPlayingPlayerPathUserInfoKey;
  id v2 = kMRNowPlayingPlayerPathUserInfoKey;
  sub_100013A80(&qword_100479570);
  sub_1001E70CC();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v3 = sub_10018C3C4((uint64_t)v14), (v4 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v1 + 56) + 32 * v3, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10018FFC8((uint64_t)v14);
  if (!*((void *)&v16 + 1)) {
    goto LABEL_20;
  }
  sub_10018FE08(0, &qword_1004795E8);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  id v5 = v14[0];
  id v6 = objc_msgSend(v14[0], "origin", v13);
  if (!v6)
  {
LABEL_23:

    return;
  }
  uint64_t v7 = v6;
  if (([v6 isLocal] & 1) == 0)
  {

    goto LABEL_23;
  }
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {

    return;
  }
  unint64_t v8 = (unint64_t)sub_1001BF738();
  unint64_t v9 = v8;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (v10) {
      goto LABEL_13;
    }
LABEL_26:

    swift_release();
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10) {
    goto LABEL_26;
  }
LABEL_13:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v12 = *(void *)(v9 + 8 * i + 32);
        swift_retain();
      }
      sub_1001CF640(v12);
      swift_release();
    }
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_1001E75DC()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10018C3C4((uint64_t)v10), (v3 & 1) != 0))
    {
      sub_10018FDAC(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v11);
    }
    else
    {
      long long v11 = 0u;
      long long v12 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10018FFC8((uint64_t)v10);
    if (*((void *)&v12 + 1)) {
      return sub_100009A08((uint64_t)&v11, &qword_100479F50);
    }
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  sub_100009A08((uint64_t)&v11, &qword_100479F50);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v5 = (unint64_t)sub_1001BF738();
    unint64_t v6 = v5;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v7 = result;
      if (result) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_12:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
          {
            uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v9 = *(void *)(v6 + 8 * i + 32);
            swift_retain();
          }
          sub_1001CF640(v9);
          swift_release();
        }
      }
    }
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1001E77A8()
{
  return sub_100015AE0(&qword_100479580, type metadata accessor for CFString);
}

uint64_t sub_1001E77F0()
{
  return sub_100015AE0(&qword_1004795F8, type metadata accessor for CFString);
}

uint64_t sub_1001E7838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E7088(a1, a2);
}

uint64_t sub_1001E78B8()
{
  return String.init<A>(_:)();
}

char *sub_1001E7934(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100013A80(&qword_100479610);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E7A38(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result == a2)
  {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = result;
    if (a2 >= result)
    {
      uint64_t v7 = HIBYTE(a4) & 0xF;
      if ((a4 & 0x2000000000000000) == 0) {
        uint64_t v7 = a3 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v15 = v7;
      char v4 = (char *)_swiftEmptyArrayStorage;
      while (v6 < a2)
      {
        if (v15)
        {
          uint64_t result = String.count.getter();
          if (result < 0) {
            goto LABEL_21;
          }
          unint64_t v9 = result;
          if (!result) {
            goto LABEL_22;
          }
          swift_stdlib_random();
          if (-(uint64_t)v9 % v9)
          {
            while (1)
              swift_stdlib_random();
          }
          String.index(_:offsetBy:)();
          uint64_t v10 = String.subscript.getter();
          uint64_t v12 = v11;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1001E7934(0, *((void *)v4 + 2) + 1, 1, v4);
            char v4 = (char *)result;
          }
          unint64_t v14 = *((void *)v4 + 2);
          unint64_t v13 = *((void *)v4 + 3);
          if (v14 >= v13 >> 1)
          {
            uint64_t result = (uint64_t)sub_1001E7934((char *)(v13 > 1), v14 + 1, 1, v4);
            char v4 = (char *)result;
          }
          *((void *)v4 + 2) = v14 + 1;
          uint64_t v8 = &v4[16 * v14];
          *((void *)v8 + 4) = v10;
          *((void *)v8 + 5) = v12;
        }
        if (++v6 == a2) {
          return (uint64_t)v4;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_1001E7BFC()
{
  unint64_t result = qword_100479608;
  if (!qword_100479608)
  {
    sub_10018F8A4(&qword_100479600);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100479608);
  }
  return result;
}

uint64_t sub_1001E7C58@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1001E7CE8(a1, a2, a3, a4, a5);
}

uint64_t type metadata accessor for RoutingDecisionEngine()
{
  return self;
}

uint64_t sub_1001E7CE8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v352 = a4;
  uint64_t v372 = a3;
  unint64_t v373 = a2;
  uint64_t v376 = a1;
  uint64_t v358 = a5;
  uint64_t v353 = type metadata accessor for RoutingSessionConfiguration.Context();
  uint64_t v351 = *(void *)(v353 - 8);
  __chkstk_darwin(v353);
  uint64_t v350 = (char *)&v329 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Logger();
  unint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  v334 = (char *)&v329 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  v336 = (char *)&v329 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  v341 = (char *)&v329 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v343 = (char *)&v329 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v342 = (char *)&v329 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v340 = (char *)&v329 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v332 = (char *)&v329 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v333 = (char *)&v329 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v335 = (char *)&v329 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v338 = (char *)&v329 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v344 = (char *)&v329 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v346 = (char *)&v329 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v345 = (char *)&v329 - v33;
  __chkstk_darwin(v32);
  uint64_t v354 = (char *)&v329 - v34;
  uint64_t v355 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v356 = *(void *)(v355 - 8);
  __chkstk_darwin(v355);
  v357 = (uint64_t *)((char *)&v329 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = sub_100013A80(&qword_1004794C0);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  uint64_t v339 = (uint64_t)&v329 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v349 = (uint64_t)&v329 - v39;
  uint64_t v360 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
  uint64_t v359 = *(void *)(v360 - 8);
  uint64_t v40 = __chkstk_darwin(v360);
  uint64_t v337 = (uint64_t)&v329 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v348 = (uint64_t *)((char *)&v329 - v42);
  uint64_t v43 = sub_100013A80(&qword_100478988);
  __chkstk_darwin(v43 - 8);
  uint64_t v362 = (uint64_t)&v329 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v365 = *(void *)(v45 - 8);
  v366 = (int *)v45;
  uint64_t v46 = __chkstk_darwin(v45);
  uint64_t v347 = (uint64_t)&v329 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v49 = (char *)&v329 - v48;
  uint64_t v50 = type metadata accessor for HostedRoutingSession(0);
  uint64_t v374 = *(void *)(v50 - 8);
  unint64_t v375 = v50;
  uint64_t v51 = __chkstk_darwin(v50);
  uint64_t v53 = (char *)&v329 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v369 = (uint64_t *)((char *)&v329 - v54);
  uint64_t v55 = sub_100013A80(&qword_100479530);
  uint64_t v56 = __chkstk_darwin(v55 - 8);
  uint64_t v367 = (uint64_t)&v329 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v364 = (uint64_t)&v329 - v59;
  __chkstk_darwin(v58);
  uint64_t v368 = (uint64_t)&v329 - v60;
  uint64_t v61 = type metadata accessor for HostedRoutingSessionSnapshot(0);
  uint64_t v62 = __chkstk_darwin(v61 - 8);
  unint64_t v64 = (char *)&v329 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __chkstk_darwin(v62);
  uint64_t v67 = (char *)&v329 - v66;
  __chkstk_darwin(v65);
  uint64_t v69 = (char *)&v329 - v68;
  uint64_t v70 = sub_100013A80((uint64_t *)&unk_10047BC50);
  __chkstk_darwin(v70 - 8);
  uint64_t v72 = (char *)&v329 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1001A6DEC();
  sub_1001E71E8(v73, (uint64_t)v72, (uint64_t *)&unk_10047BC50);
  uint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v371 = v6;
  int v75 = v74(v72, 1, v6);
  unint64_t v370 = v7;
  if (v75 == 1)
  {
    sub_100009A08((uint64_t)v72, (uint64_t *)&unk_10047BC50);
    unint64_t v76 = v373;
  }
  else
  {
    sub_1001EF668(v372, (uint64_t)v69, type metadata accessor for HostedRoutingSessionSnapshot);
    sub_1001EF668((uint64_t)v69, (uint64_t)v67, type metadata accessor for HostedRoutingSessionSnapshot);
    sub_1001EF6D0((uint64_t)v69, (uint64_t)v64, type metadata accessor for HostedRoutingSessionSnapshot);
    unint64_t v76 = v373;
    swift_bridgeObjectRetain_n();
    uint64_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.default.getter();
    unint64_t v7 = v78;
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = swift_slowAlloc();
      uint64_t v380 = swift_slowAlloc();
      v379[0] = v380;
      *(_DWORD *)uint64_t v79 = 136315650;
      os_log_t v331 = v77;
      uint64_t v80 = _typeName(_:qualified:)();
      LODWORD(v330) = v7;
      unint64_t v7 = v76;
      uint64_t v377 = sub_10018A9E0(v80, v81, v379);
      uint64_t v361 = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v377 = sub_10018A9E0(v376, v76, v379);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 22) = 2080;
      unint64_t v82 = sub_1002ABCEC();
      uint64_t v377 = sub_10018A9E0(v82, v83, v379);
      uint64_t v49 = v361;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001EF738((uint64_t)v64, type metadata accessor for HostedRoutingSessionSnapshot);
      sub_1001EF738((uint64_t)v67, type metadata accessor for HostedRoutingSessionSnapshot);
      os_log_t v84 = v331;
      _os_log_impl((void *)&_mh_execute_header, v331, (os_log_type_t)v330, "[%s] computeInteraction for item: %s in snapshot: %s", (uint8_t *)v79, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_1001EF738((uint64_t)v64, type metadata accessor for HostedRoutingSessionSnapshot);
      sub_1001EF738((uint64_t)v67, type metadata accessor for HostedRoutingSessionSnapshot);
    }
    (*(void (**)(char *, uint64_t))(v370 + 8))(v72, v371);
  }
  unint64_t v85 = v375;
  v379[0] = v376;
  v379[1] = v76;
  uint64_t v377 = 14906;
  unint64_t v378 = 0xE200000000000000;
  sub_1001EEAA8();
  uint64_t v86 = Collection<>.split<A>(separator:maxSplits:omittingEmptySubsequences:)();
  char v87 = v86;
  if (*(void *)(v86 + 16) != 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v100 = type metadata accessor for InternalRoutingError();
    sub_1001EF798(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    swift_allocError();
    uint64_t v102 = v101;
    unint64_t v103 = (unsigned int *)&enum case for InternalRoutingError.itemNotFound(_:);
LABEL_28:
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v100 - 8) + 104))(v102, *v103, v100);
    return swift_willThrow();
  }
  Swift::String v88 = *(uint64_t **)(v86 + 56);
  swift_bridgeObjectRetain();
  uint64_t v89 = static String._fromSubstring(_:)();
  uint64_t v91 = v90;
  swift_bridgeObjectRelease();
  if (v87[2].isa < (Class)2)
  {
    __break(1u);
    goto LABEL_115;
  }
  uint64_t v380 = v91;
  uint64_t v361 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v329 = static String._fromSubstring(_:)();
  unint64_t v330 = v92;
  swift_bridgeObjectRelease();
  uint64_t v93 = v372;
  os_log_t v331 = (os_log_t)sub_1002AB998();
  unint64_t v94 = v85;
  uint64_t v95 = v368;
  sub_1001E71E8(v93, v368, &qword_100479530);
  uint64_t v96 = v374;
  uint64_t v97 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v374 + 48);
  int v98 = v97(v95, 1, v94);
  sub_100009A08(v95, &qword_100479530);
  if (v98 == 1)
  {
    uint64_t v99 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100013A80(&qword_100479558);
    unint64_t v104 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
    uint64_t v99 = (void *)swift_allocObject();
    *((_OWORD *)v99 + 1) = xmmword_1003C58B0;
    uint64_t v105 = v93;
    uint64_t v106 = v364;
    sub_1001E71E8(v105, v364, &qword_100479530);
    uint64_t result = v97(v106, 1, v94);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    sub_1001EF6D0(v106, (uint64_t)v99 + v104, type metadata accessor for HostedRoutingSession);
  }
  unint64_t v108 = v94;
  v379[0] = (uint64_t)v331;
  sub_1001EE7A0((uint64_t)v99);
  uint64_t v109 = *(void *)(v379[0] + 16);
  unint64_t v110 = v380;
  if (v109)
  {
    uint64_t v111 = v379[0] + ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80));
    uint64_t v112 = *(void *)(v374 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1001EF668(v111, (uint64_t)v53, type metadata accessor for HostedRoutingSession);
      BOOL v115 = *(void *)v53 == v89;
      uint64_t v113 = v89;
      unint64_t v114 = v380;
      BOOL v115 = v115 && *((void *)v53 + 1) == v380;
      if (v115 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      sub_1001EF738((uint64_t)v53, type metadata accessor for HostedRoutingSession);
      v111 += v112;
      --v109;
      uint64_t v89 = v113;
      if (!v109)
      {
        swift_bridgeObjectRelease();
        uint64_t v116 = 1;
        unint64_t v110 = v380;
        unint64_t v108 = v375;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v117 = v367;
    sub_1001EF6D0((uint64_t)v53, v367, type metadata accessor for HostedRoutingSession);
    uint64_t v116 = 0;
    unint64_t v110 = v114;
    uint64_t v89 = v113;
    unint64_t v108 = v375;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v116 = 1;
LABEL_25:
    uint64_t v117 = v367;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v374 + 56))(v117, v116, 1, v108);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v97(v117, 1, v108) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100009A08(v117, &qword_100479530);
    uint64_t v100 = type metadata accessor for InternalRoutingError();
    sub_1001EF798(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    swift_allocError();
    uint64_t v102 = v118;
    unint64_t v103 = (unsigned int *)&enum case for InternalRoutingError.sessionNotFound(_:);
    goto LABEL_28;
  }
  sub_1001EF6D0(v117, (uint64_t)v369, type metadata accessor for HostedRoutingSession);
  uint64_t v119 = sub_1002A61EC();
  uint64_t v120 = v373;
  swift_bridgeObjectRetain();
  uint64_t v121 = v362;
  uint64_t v122 = v120;
  unint64_t v123 = v363;
  sub_1001EE240(v119, v376, v122, v362);
  swift_bridgeObjectRelease();
  uint64_t v124 = v366;
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v365 + 48))(v121, 1, v366) != 1)
  {
    uint64_t v49 = v361;
    sub_1001EF6D0(v121, (uint64_t)v361, type metadata accessor for HostedRoutingItem);
    if (v49[v124[16]] == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for HostedRoutingError(0);
      sub_1001EF798(&qword_100478EF8, (void (*)(uint64_t))type metadata accessor for HostedRoutingError);
      swift_allocError();
      uint64_t v128 = v127;
      sub_1001EF668((uint64_t)v49, v127, type metadata accessor for HostedRoutingItem);
      uint64_t v129 = sub_100013A80(&qword_100478F00);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v128, 0, 1, v129);
LABEL_76:
      swift_willThrow();
      goto LABEL_91;
    }
    if (sub_10029F840())
    {
      unint64_t v130 = v108;
      unint64_t v131 = v330;
      uint64_t v132 = v349;
      sub_1001E71E8((uint64_t)v369 + *(int *)(v130 + 28), v349, &qword_1004794C0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v359 + 48))(v132, 1, v360) == 1)
      {
        uint64_t v376 = v89;
        sub_100009A08(v132, &qword_1004794C0);
        unint64_t v134 = v370;
        uint64_t v133 = v371;
      }
      else
      {
        uint64_t v151 = v348;
        sub_1001EF6D0(v132, (uint64_t)v348, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
        unint64_t v134 = v370;
        uint64_t v133 = v371;
        if (v151[1])
        {
          uint64_t v376 = *v151;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          unint64_t v152 = (void *)swift_allocObject();
          uint64_t v153 = v369[1];
          v152[2] = *v369;
          v152[3] = v153;
          v152[4] = v329;
          v152[5] = v131;
          uint64_t v154 = (uint64_t)v151;
          uint64_t v155 = v151[4];
          uint64_t v156 = *(unsigned int *)(v154 + 40);
          unsigned __int8 v157 = *(unsigned char *)(v154 + 44);
          swift_bridgeObjectRetain();
          sub_1001E70B8(v155, v156, v157);
          sub_1002A56D8(v155);
          uint64_t v158 = v156;
          uint64_t v49 = v361;
          sub_1001DDF44(v155, v158, v157);
          type metadata accessor for RoutingInteraction.Action.HandoffContext();
          swift_allocObject();
          v152[6] = RoutingInteraction.Action.HandoffContext.init(sourceBundleIdentifier:mediaTitle:)();
          uint64_t v159 = v357;
          void *v357 = v152;
          (*(void (**)(void *, void, uint64_t))(v356 + 104))(v159, enum case for RoutingInteraction.Action.handoff(_:), v355);
          RoutingInteraction.init(action:)();
          sub_1001EF738(v154, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
LABEL_91:
          sub_1001EF738((uint64_t)v49, type metadata accessor for HostedRoutingItem);
          return sub_1001EF738((uint64_t)v369, type metadata accessor for HostedRoutingSession);
        }
        uint64_t v376 = v89;
        sub_1001EF738((uint64_t)v151, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
      }
      uint64_t v209 = sub_1001A69C4();
      uint64_t v210 = v354;
      (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v354, v209, v133);
      unint64_t v211 = v380;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v212 = Logger.logObject.getter();
      os_log_type_t v213 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v212, v213))
      {
        uint64_t v214 = swift_slowAlloc();
        v379[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v214 = 136315650;
        uint64_t v215 = _typeName(_:qualified:)();
        uint64_t v377 = sub_10018A9E0(v215, v216, v379);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v214 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v377 = sub_10018A9E0(v329, v131, v379);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v214 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v377 = sub_10018A9E0(v376, v211, v379);
        uint64_t v49 = v361;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v212, v213, "[%s] Item: %s, is pull handoff item but session: %s has no content", (uint8_t *)v214, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v370 + 8))(v354, v371);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v134 + 8))(v210, v133);
      }
      uint64_t v217 = type metadata accessor for InternalRoutingError();
      sub_1001EF798(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      swift_allocError();
      uint64_t v219 = v218;
      BOOL v220 = (unsigned int *)&enum case for InternalRoutingError.invalidAction(_:);
      goto LABEL_75;
    }
    uint64_t v135 = v350;
    RoutingSessionConfiguration.context.getter();
    char v136 = sub_1002AC7F4();
    (*(void (**)(char *, uint64_t))(v351 + 8))(v135, v353);
    if (v136)
    {
      uint64_t v137 = sub_1002A61EC();
      uint64_t v138 = sub_1001EEB50(v137);
      swift_bridgeObjectRelease();
      uint64_t v139 = v138[2];
      swift_bridgeObjectRelease();
      uint64_t v140 = sub_1002A61EC();
      uint64_t v141 = sub_1001EEE34(v140);
      unint64_t v375 = v123;
      swift_bridgeObjectRelease();
      uint64_t v142 = v141[2];
      uint64_t v143 = swift_bridgeObjectRelease();
      char v144 = sub_1002A0454(v143);
      uint64_t v145 = v347;
      sub_1001EF668((uint64_t)v49, v347, type metadata accessor for HostedRoutingItem);
      if (v144)
      {
        char v146 = *(unsigned char *)(v145 + v366[11]);
        LOBYTE(v379[0]) = *(unsigned char *)sub_10029E328();
        LOBYTE(v377) = v146;
        sub_1001EEAFC();
        char v147 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        sub_1001EF738(v145, type metadata accessor for HostedRoutingItem);
        if ((v147 & 1) != 0 && !v139 && !v142)
        {
          unint64_t v148 = v108;
          unint64_t v85 = v330;
          uint64_t v149 = v339;
          sub_1001E71E8((uint64_t)v369 + *(int *)(v148 + 28), v339, &qword_1004794C0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v359 + 48))(v149, 1, v360) == 1)
          {
            swift_bridgeObjectRelease();
            sub_100009A08(v149, &qword_1004794C0);
            unint64_t v7 = v370;
            uint64_t v150 = v371;
LABEL_106:
            uint64_t v303 = sub_1001A69C4();
            v304 = v340;
            (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v340, v303, v150);
            swift_bridgeObjectRetain_n();
            uint64_t v305 = Logger.logObject.getter();
            os_log_type_t v306 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v305, v306))
            {
              uint64_t v307 = swift_slowAlloc();
              v379[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v307 = 136315394;
              uint64_t v308 = _typeName(_:qualified:)();
              unint64_t v309 = v7;
              uint64_t v377 = sub_10018A9E0(v308, v310, v379);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v307 + 12) = 2080;
              swift_bridgeObjectRetain();
              uint64_t v311 = v329;
              uint64_t v377 = sub_10018A9E0(v329, v85, v379);
              uint64_t v49 = v361;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v305, v306, "[%s] Item: %s, selected in local session, is .remoteControllable, has no nowPlayingInfo content -> .setActiveItem", (uint8_t *)v307, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v309 + 8))(v340, v371);
              uint64_t v233 = v357;
              uint64_t v234 = v356;
              uint64_t v235 = v355;
            }
            else
            {

              swift_bridgeObjectRelease_n();
              (*(void (**)(char *, uint64_t))(v7 + 8))(v304, v150);
              uint64_t v233 = v357;
              uint64_t v234 = v356;
              uint64_t v235 = v355;
              uint64_t v311 = v329;
            }
            *uint64_t v233 = v311;
            v233[1] = v85;
            uint64_t v270 = (unsigned int *)&enum case for RoutingInteraction.Action.setActiveItem(_:);
            goto LABEL_90;
          }
          Swift::String v88 = (uint64_t *)v337;
          sub_1001EF6D0(v149, v337, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
          unint64_t v7 = v370;
          uint64_t v150 = v371;
          if (!v88[1])
          {
            sub_1001EF738((uint64_t)v88, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
            swift_bridgeObjectRelease();
            goto LABEL_106;
          }
          if (*(void *)(v88[7] + 16))
          {
            uint64_t v376 = *v88;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v278 = sub_1001A69C4();
            uint64_t v279 = v333;
            (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v333, v278, v150);
            swift_bridgeObjectRetain_n();
            uint64_t v280 = v150;
            uint64_t v281 = Logger.logObject.getter();
            os_log_type_t v282 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v281, v282))
            {
              uint64_t v283 = swift_slowAlloc();
              v379[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v283 = 136315394;
              uint64_t v284 = _typeName(_:qualified:)();
              uint64_t v377 = sub_10018A9E0(v284, v285, v379);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v283 + 12) = 2080;
              swift_bridgeObjectRetain();
              uint64_t v286 = v329;
              uint64_t v377 = sub_10018A9E0(v329, v85, v379);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v281, v282, "[%s] Item: %s, selected in local session, is .remoteControllable, has nowPlayingInfo content, has handoff formats -> .handoff", (uint8_t *)v283, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v370 + 8))(v333, v371);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              (*(void (**)(char *, uint64_t))(v7 + 8))(v279, v280);
              uint64_t v286 = v329;
            }
            v321 = (void *)swift_allocObject();
            uint64_t v322 = v369[1];
            v321[2] = *v369;
            v321[3] = v322;
            v321[4] = v286;
            v321[5] = v85;
            uint64_t v323 = v337;
            uint64_t v324 = *(void *)(v337 + 32);
            uint64_t v325 = *(unsigned int *)(v337 + 40);
            unsigned __int8 v326 = *(unsigned char *)(v337 + 44);
            swift_bridgeObjectRetain();
            sub_1001E70B8(v324, v325, v326);
            sub_1002A56D8(v324);
            sub_1001DDF44(v324, v325, v326);
            type metadata accessor for RoutingInteraction.Action.HandoffContext();
            swift_allocObject();
            v321[6] = RoutingInteraction.Action.HandoffContext.init(sourceBundleIdentifier:mediaTitle:)();
            uint64_t v327 = v357;
            void *v357 = v321;
            (*(void (**)(void *, void, uint64_t))(v356 + 104))(v327, enum case for RoutingInteraction.Action.handoff(_:), v355);
            RoutingInteraction.init(action:)();
            sub_1001EF738(v323, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
            uint64_t v49 = v361;
            goto LABEL_91;
          }
          uint64_t v312 = sub_1001A69C4();
          uint64_t v53 = v332;
          (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v332, v312, v150);
          swift_bridgeObjectRetain_n();
          char v87 = Logger.logObject.getter();
          os_log_type_t v313 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v87, v313))
          {
            uint64_t v314 = swift_slowAlloc();
            v379[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v314 = 136315394;
            uint64_t v315 = _typeName(_:qualified:)();
            uint64_t v377 = sub_10018A9E0(v315, v316, v379);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v314 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v317 = v329;
            uint64_t v377 = sub_10018A9E0(v329, v85, v379);
            uint64_t v49 = v361;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v87, v313, "[%s] Item: %s, selected in local session, is .remoteControllable, has nowPlayingInfo content, no handoff formats -> .add", (uint8_t *)v314, 0x16u);
            swift_arrayDestroy();
            Swift::String v88 = (uint64_t *)v337;
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v370 + 8))(v332, v371);
            v318 = v357;
            uint64_t v319 = v356;
            uint64_t v320 = v355;
LABEL_116:
            uint64_t *v318 = v317;
            v318[1] = v85;
            uint64_t v328 = v380;
            v318[2] = v89;
            v318[3] = v328;
            (*(void (**)(uint64_t *, void, uint64_t))(v319 + 104))(v318, enum case for RoutingInteraction.Action.add(_:), v320);
            RoutingInteraction.init(action:)();
            sub_1001EF738((uint64_t)v88, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
            goto LABEL_91;
          }
LABEL_115:

          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v7 + 8))(v53, v371);
          v318 = v357;
          uint64_t v319 = v356;
          uint64_t v320 = v355;
          uint64_t v317 = v329;
          goto LABEL_116;
        }
      }
      else
      {
        sub_1001EF738(v145, type metadata accessor for HostedRoutingItem);
      }
      unint64_t v177 = v375;
      if (v49[v366[9]] == 1)
      {
        uint64_t v376 = v89;
        unint64_t v160 = v330;
        uint64_t v178 = sub_1002A61EC();
        uint64_t v179 = sub_1001EF110(v178);
        swift_bridgeObjectRelease();
        sub_100013A80(&qword_1004794D0);
        unint64_t v180 = (*(unsigned __int8 *)(v365 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v365 + 80);
        uint64_t v181 = swift_allocObject();
        *(_OWORD *)(v181 + 16) = xmmword_1003C58B0;
        sub_1001EF668((uint64_t)v49, v181 + v180, type metadata accessor for HostedRoutingItem);
        char v182 = sub_1001B5938((uint64_t)v179, v181);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        swift_bridgeObjectRelease();
        uint64_t v183 = sub_1001A69C4();
        unint64_t v167 = v370;
        uint64_t v184 = *(void (**)(char *, uint64_t, uint64_t))(v370 + 16);
        if (v182)
        {
          uint64_t v169 = v342;
          uint64_t v170 = v371;
          v184(v342, v183, v371);
          unint64_t v185 = v380;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v172 = Logger.logObject.getter();
          os_log_type_t v186 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v172, v186))
          {
            uint64_t v187 = swift_slowAlloc();
            v379[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v187 = 136315650;
            uint64_t v188 = _typeName(_:qualified:)();
            uint64_t v377 = sub_10018A9E0(v188, v189, v379);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v187 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v377 = sub_10018A9E0(v329, v160, v379);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v187 + 22) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v377 = sub_10018A9E0(v376, v185, v379);
            uint64_t v49 = v361;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v172, v186, "[%s] Item: %s, selected in session: %s, is sole picked item -> no-op", (uint8_t *)v187, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v370 + 8))(v342, v371);
            goto LABEL_74;
          }
          goto LABEL_73;
        }
        unint64_t v236 = v343;
        uint64_t v237 = v371;
        v184(v343, v183, v371);
        unint64_t v238 = v380;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v239 = Logger.logObject.getter();
        os_log_type_t v264 = static os_log_type_t.default.getter();
        int v265 = v264;
        if (os_log_type_enabled(v239, v264))
        {
          uint64_t v266 = swift_slowAlloc();
          LODWORD(v373) = v265;
          uint64_t v267 = v266;
          uint64_t v374 = swift_slowAlloc();
          v379[0] = v374;
          *(_DWORD *)uint64_t v267 = 136315650;
          uint64_t v268 = _typeName(_:qualified:)();
          unint64_t v375 = v177;
          uint64_t v377 = sub_10018A9E0(v268, v269, v379);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v267 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v246 = v329;
          uint64_t v377 = sub_10018A9E0(v329, v160, v379);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v267 + 22) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v247 = v376;
          uint64_t v377 = sub_10018A9E0(v376, v238, v379);
          uint64_t v49 = v361;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v239, (os_log_type_t)v373, "[%s] Item: %s, selected in session: %s, is picked -> .remove", (uint8_t *)v267, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v370 + 8))(v343, v371);
          goto LABEL_79;
        }
        goto LABEL_80;
      }
      char v221 = v49[v366[11]];
      LOBYTE(v379[0]) = *(unsigned char *)sub_10029E31C();
      LOBYTE(v377) = v221;
      sub_1001EEAFC();
      if (dispatch thunk of SetAlgebra.isSuperset(of:)())
      {
        uint64_t v191 = v89;
        unint64_t v192 = v330;
        uint64_t v222 = sub_1002A61EC();
        unint64_t v223 = sub_1001EF33C(v222);
        swift_bridgeObjectRelease();
        uint64_t v224 = v223[2];
        swift_bridgeObjectRelease();
        uint64_t v225 = sub_1001A69C4();
        unint64_t v197 = v370;
        uint64_t v226 = *(void (**)(char *, uint64_t, uint64_t))(v370 + 16);
        if (v224)
        {
          Swift::String v199 = v336;
          v226(v336, v225, v371);
          unint64_t v200 = v380;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v201 = Logger.logObject.getter();
          os_log_type_t v227 = static os_log_type_t.default.getter();
          int v228 = v227;
          if (os_log_type_enabled(v201, v227))
          {
            uint64_t v229 = swift_slowAlloc();
            LODWORD(v374) = v228;
            uint64_t v230 = v229;
            uint64_t v376 = swift_slowAlloc();
            v379[0] = v376;
            *(_DWORD *)uint64_t v230 = 136315650;
            uint64_t v231 = _typeName(_:qualified:)();
            unint64_t v375 = v177;
            uint64_t v377 = sub_10018A9E0(v231, v232, v379);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v230 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v208 = v329;
            uint64_t v377 = sub_10018A9E0(v329, v192, v379);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v230 + 22) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v377 = sub_10018A9E0(v191, v200, v379);
            uint64_t v49 = v361;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v201, (os_log_type_t)v374, "[%s] Item: %s, is not picked in session: %s, session has existing non-groupable items -> .set", (uint8_t *)v230, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v370 + 8))(v336, v371);
            goto LABEL_68;
          }
          goto LABEL_87;
        }
        char v287 = v334;
        v226(v334, v225, v371);
        unint64_t v288 = v380;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v289 = Logger.logObject.getter();
        os_log_type_t v297 = static os_log_type_t.default.getter();
        int v298 = v297;
        if (os_log_type_enabled(v289, v297))
        {
          uint64_t v299 = swift_slowAlloc();
          LODWORD(v374) = v298;
          uint64_t v300 = v299;
          uint64_t v376 = swift_slowAlloc();
          v379[0] = v376;
          *(_DWORD *)uint64_t v300 = 136315650;
          uint64_t v301 = _typeName(_:qualified:)();
          unint64_t v375 = v177;
          uint64_t v377 = sub_10018A9E0(v301, v302, v379);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v300 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v296 = v329;
          uint64_t v377 = sub_10018A9E0(v329, v192, v379);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v300 + 22) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v377 = sub_10018A9E0(v191, v288, v379);
          uint64_t v49 = v361;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v289, (os_log_type_t)v374, "[%s] Item: %s, is not picked in session: %s -> .add", (uint8_t *)v300, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v370 + 8))(v334, v371);
          goto LABEL_102;
        }
        goto LABEL_103;
      }
      uint64_t v376 = v89;
      uint64_t v271 = sub_1001A69C4();
      unint64_t v249 = v370;
      uint64_t v250 = v371;
      uint64_t v251 = v341;
      unint64_t v252 = v330;
      (*(void (**)(char *, uint64_t, uint64_t))(v370 + 16))(v341, v271, v371);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      BOOL v253 = Logger.logObject.getter();
      os_log_type_t v272 = static os_log_type_t.default.getter();
      int v273 = v272;
      if (os_log_type_enabled(v253, v272))
      {
        uint64_t v274 = swift_slowAlloc();
        LODWORD(v374) = v273;
        uint64_t v275 = v274;
        uint64_t v380 = swift_slowAlloc();
        v379[0] = v380;
        *(_DWORD *)uint64_t v275 = 136315650;
        uint64_t v276 = _typeName(_:qualified:)();
        uint64_t v377 = sub_10018A9E0(v276, v277, v379);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v275 + 12) = 2080;
        swift_bridgeObjectRetain();
        unint64_t v260 = v110;
        uint64_t v261 = v329;
        uint64_t v377 = sub_10018A9E0(v329, v252, v379);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v275 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v262 = v376;
        uint64_t v377 = sub_10018A9E0(v376, v110, v379);
        uint64_t v49 = v361;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v253, (os_log_type_t)v374, "[%s] Item: %s, is not picked in session: %s, not multi select -> .set", (uint8_t *)v275, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v370 + 8))(v341, v371);
        goto LABEL_84;
      }
    }
    else
    {
      if (v49[v124[9]] == 1)
      {
        uint64_t v376 = v89;
        unint64_t v160 = v330;
        uint64_t v161 = sub_1002A61EC();
        char v162 = sub_1001EF110(v161);
        swift_bridgeObjectRelease();
        sub_100013A80(&qword_1004794D0);
        unint64_t v163 = (*(unsigned __int8 *)(v365 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v365 + 80);
        uint64_t v164 = swift_allocObject();
        *(_OWORD *)(v164 + 16) = xmmword_1003C58B0;
        sub_1001EF668((uint64_t)v49, v164 + v163, type metadata accessor for HostedRoutingItem);
        char v165 = sub_1001B5938((uint64_t)v162, v164);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        swift_bridgeObjectRelease();
        uint64_t v166 = sub_1001A69C4();
        unint64_t v167 = v370;
        uint64_t v168 = *(void (**)(char *, uint64_t, uint64_t))(v370 + 16);
        if (v165)
        {
          uint64_t v169 = v345;
          uint64_t v170 = v371;
          v168(v345, v166, v371);
          unint64_t v171 = v380;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v172 = Logger.logObject.getter();
          os_log_type_t v173 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v172, v173))
          {
            uint64_t v174 = swift_slowAlloc();
            v379[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v174 = 136315650;
            uint64_t v175 = _typeName(_:qualified:)();
            uint64_t v377 = sub_10018A9E0(v175, v176, v379);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v174 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v377 = sub_10018A9E0(v329, v160, v379);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v174 + 22) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v377 = sub_10018A9E0(v376, v171, v379);
            uint64_t v49 = v361;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v172, v173, "[%s] Item: %s, is sole picked item in session: %s, not RC context -> no-op", (uint8_t *)v174, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v370 + 8))(v345, v371);
LABEL_74:
            uint64_t v217 = type metadata accessor for InternalRoutingError();
            sub_1001EF798(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
            swift_allocError();
            uint64_t v219 = v263;
            BOOL v220 = (unsigned int *)&enum case for InternalRoutingError.NOP(_:);
LABEL_75:
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v217 - 8) + 104))(v219, *v220, v217);
            goto LABEL_76;
          }
LABEL_73:

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v167 + 8))(v169, v170);
          goto LABEL_74;
        }
        unint64_t v236 = v346;
        uint64_t v237 = v371;
        v168(v346, v166, v371);
        unint64_t v238 = v380;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v239 = Logger.logObject.getter();
        os_log_type_t v240 = static os_log_type_t.default.getter();
        int v241 = v240;
        if (os_log_type_enabled(v239, v240))
        {
          uint64_t v242 = swift_slowAlloc();
          LODWORD(v373) = v241;
          uint64_t v243 = v242;
          uint64_t v374 = swift_slowAlloc();
          v379[0] = v374;
          *(_DWORD *)uint64_t v243 = 136315650;
          uint64_t v244 = _typeName(_:qualified:)();
          unint64_t v375 = v123;
          uint64_t v377 = sub_10018A9E0(v244, v245, v379);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v243 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v246 = v329;
          uint64_t v377 = sub_10018A9E0(v329, v160, v379);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v243 + 22) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v247 = v376;
          uint64_t v377 = sub_10018A9E0(v376, v238, v379);
          uint64_t v49 = v361;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v239, (os_log_type_t)v373, "[%s] Item: %s, is picked in session: %s, not RC context -> .remove", (uint8_t *)v243, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v370 + 8))(v346, v371);
LABEL_79:
          uint64_t v233 = v357;
          uint64_t v234 = v356;
          uint64_t v235 = v355;
LABEL_81:
          *uint64_t v233 = v246;
          v233[1] = v160;
          v233[2] = v247;
          v233[3] = v238;
          uint64_t v270 = (unsigned int *)&enum case for RoutingInteraction.Action.remove(_:);
LABEL_90:
          (*(void (**)(uint64_t *, void, uint64_t))(v234 + 104))(v233, *v270, v235);
          RoutingInteraction.init(action:)();
          goto LABEL_91;
        }
LABEL_80:

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v167 + 8))(v236, v237);
        uint64_t v233 = v357;
        uint64_t v234 = v356;
        uint64_t v235 = v355;
        uint64_t v246 = v329;
        uint64_t v247 = v376;
        goto LABEL_81;
      }
      char v190 = v49[v124[11]];
      LOBYTE(v379[0]) = *(unsigned char *)sub_10029E31C();
      LOBYTE(v377) = v190;
      sub_1001EEAFC();
      if (dispatch thunk of SetAlgebra.isSuperset(of:)())
      {
        uint64_t v191 = v89;
        unint64_t v192 = v330;
        uint64_t v193 = sub_1002A61EC();
        id v194 = sub_1001EF33C(v193);
        swift_bridgeObjectRelease();
        uint64_t v195 = v194[2];
        swift_bridgeObjectRelease();
        uint64_t v196 = sub_1001A69C4();
        unint64_t v197 = v370;
        id v198 = *(void (**)(char *, uint64_t, uint64_t))(v370 + 16);
        if (v195)
        {
          Swift::String v199 = v338;
          v198(v338, v196, v371);
          unint64_t v200 = v380;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v201 = Logger.logObject.getter();
          os_log_type_t v202 = static os_log_type_t.default.getter();
          int v203 = v202;
          if (os_log_type_enabled(v201, v202))
          {
            uint64_t v204 = swift_slowAlloc();
            LODWORD(v374) = v203;
            uint64_t v205 = v204;
            uint64_t v376 = swift_slowAlloc();
            v379[0] = v376;
            *(_DWORD *)uint64_t v205 = 136315650;
            uint64_t v206 = _typeName(_:qualified:)();
            unint64_t v375 = v123;
            uint64_t v377 = sub_10018A9E0(v206, v207, v379);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v205 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v208 = v329;
            uint64_t v377 = sub_10018A9E0(v329, v192, v379);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v205 + 22) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v377 = sub_10018A9E0(v191, v200, v379);
            uint64_t v49 = v361;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v201, (os_log_type_t)v374, "[%s] Item: %s, is not picked in session: %s, not RC context, session has existing non-groupable items -> .set", (uint8_t *)v205, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v370 + 8))(v338, v371);
LABEL_68:
            uint64_t v233 = v357;
            uint64_t v234 = v356;
            uint64_t v235 = v355;
LABEL_88:
            *uint64_t v233 = v208;
            v233[1] = v192;
            v233[2] = v191;
            v233[3] = v200;
            goto LABEL_89;
          }
LABEL_87:

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v197 + 8))(v199, v371);
          uint64_t v233 = v357;
          uint64_t v234 = v356;
          uint64_t v235 = v355;
          uint64_t v208 = v329;
          goto LABEL_88;
        }
        char v287 = v335;
        v198(v335, v196, v371);
        unint64_t v288 = v380;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v289 = Logger.logObject.getter();
        os_log_type_t v290 = static os_log_type_t.default.getter();
        int v291 = v290;
        if (os_log_type_enabled(v289, v290))
        {
          uint64_t v292 = swift_slowAlloc();
          LODWORD(v374) = v291;
          uint64_t v293 = v292;
          uint64_t v376 = swift_slowAlloc();
          v379[0] = v376;
          *(_DWORD *)uint64_t v293 = 136315650;
          uint64_t v294 = _typeName(_:qualified:)();
          unint64_t v375 = v123;
          uint64_t v377 = sub_10018A9E0(v294, v295, v379);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v293 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v296 = v329;
          uint64_t v377 = sub_10018A9E0(v329, v192, v379);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v293 + 22) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v377 = sub_10018A9E0(v191, v288, v379);
          uint64_t v49 = v361;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v289, (os_log_type_t)v374, "[%s] Item: %s, is not picked in session: %s, not RC context -> .add", (uint8_t *)v293, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v370 + 8))(v335, v371);
LABEL_102:
          uint64_t v233 = v357;
          uint64_t v234 = v356;
          uint64_t v235 = v355;
LABEL_104:
          *uint64_t v233 = v296;
          v233[1] = v192;
          v233[2] = v191;
          v233[3] = v288;
          uint64_t v270 = (unsigned int *)&enum case for RoutingInteraction.Action.add(_:);
          goto LABEL_90;
        }
LABEL_103:

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v197 + 8))(v287, v371);
        uint64_t v233 = v357;
        uint64_t v234 = v356;
        uint64_t v235 = v355;
        uint64_t v296 = v329;
        goto LABEL_104;
      }
      uint64_t v376 = v89;
      uint64_t v248 = sub_1001A69C4();
      unint64_t v249 = v370;
      uint64_t v250 = v371;
      uint64_t v251 = v344;
      unint64_t v252 = v330;
      (*(void (**)(char *, uint64_t, uint64_t))(v370 + 16))(v344, v248, v371);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      BOOL v253 = Logger.logObject.getter();
      os_log_type_t v254 = static os_log_type_t.default.getter();
      int v255 = v254;
      if (os_log_type_enabled(v253, v254))
      {
        uint64_t v256 = swift_slowAlloc();
        LODWORD(v374) = v255;
        uint64_t v257 = v256;
        uint64_t v380 = swift_slowAlloc();
        v379[0] = v380;
        *(_DWORD *)uint64_t v257 = 136315650;
        uint64_t v258 = _typeName(_:qualified:)();
        unint64_t v375 = v123;
        uint64_t v377 = sub_10018A9E0(v258, v259, v379);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v257 + 12) = 2080;
        swift_bridgeObjectRetain();
        unint64_t v260 = v110;
        uint64_t v261 = v329;
        uint64_t v377 = sub_10018A9E0(v329, v252, v379);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v257 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v262 = v376;
        uint64_t v377 = sub_10018A9E0(v376, v110, v379);
        uint64_t v49 = v361;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v253, (os_log_type_t)v374, "[%s] Item: %s, is not picked in session: %s, not RC context, not multi select -> .set", (uint8_t *)v257, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v370 + 8))(v344, v371);
LABEL_84:
        uint64_t v233 = v357;
        uint64_t v234 = v356;
        uint64_t v235 = v355;
LABEL_86:
        *uint64_t v233 = v261;
        v233[1] = v252;
        v233[2] = v262;
        v233[3] = v260;
LABEL_89:
        uint64_t v270 = (unsigned int *)&enum case for RoutingInteraction.Action.set(_:);
        goto LABEL_90;
      }
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v249 + 8))(v251, v250);
    uint64_t v233 = v357;
    uint64_t v234 = v356;
    uint64_t v235 = v355;
    unint64_t v260 = v110;
    uint64_t v261 = v329;
    uint64_t v262 = v376;
    goto LABEL_86;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100009A08(v121, &qword_100478988);
  uint64_t v125 = type metadata accessor for InternalRoutingError();
  sub_1001EF798(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v125 - 8) + 104))(v126, enum case for InternalRoutingError.itemNotFound(_:), v125);
  swift_willThrow();
  return sub_1001EF738((uint64_t)v369, type metadata accessor for HostedRoutingSession);
}

uint64_t sub_1001EB86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1001EB8C8(a1, a2, a3, a4);
}

uint64_t sub_1001EB8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100013A80(&qword_100479530);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001E71E8(a3, (uint64_t)v13, &qword_100479530);
  uint64_t v14 = type metadata accessor for HostedRoutingSession(0);
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  uint64_t v34 = a4;
  if (v16 == 1)
  {
    sub_100009A08((uint64_t)v13, &qword_100479530);
    goto LABEL_8;
  }
  uint64_t v18 = *v13;
  uint64_t v17 = v13[1];
  swift_bridgeObjectRetain();
  sub_1001EF738((uint64_t)v13, type metadata accessor for HostedRoutingSession);
  if (v18 == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v20)
  {
LABEL_18:
    uint64_t v26 = type metadata accessor for InternalRoutingError();
    sub_1001EF798(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    swift_allocError();
    uint64_t v28 = v30;
    uint64_t v29 = (unsigned int *)&enum case for InternalRoutingError.NOP(_:);
    goto LABEL_19;
  }
LABEL_8:
  uint64_t v21 = sub_1002AB998();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v26 = type metadata accessor for InternalRoutingError();
    sub_1001EF798(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    swift_allocError();
    uint64_t v28 = v27;
    uint64_t v29 = (unsigned int *)&enum case for InternalRoutingError.sessionNotFound(_:);
LABEL_19:
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *v29, v26);
    return swift_willThrow();
  }
  uint64_t v23 = *(void *)(v15 + 72);
  uint64_t v24 = (void *)(((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
                 + v21
                 + 8);
  while (1)
  {
    BOOL v25 = *(v24 - 1) == a1 && *v24 == a2;
    if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      break;
    }
    uint64_t v24 = (void *)((char *)v24 + v23);
    if (!--v22) {
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  void *v10 = a1;
  v10[1] = a2;
  (*(void (**)(void *, void, uint64_t))(v32 + 104))(v10, enum case for RoutingInteraction.Action.setActiveSession(_:), v33);
  swift_bridgeObjectRetain();
  return RoutingInteraction.init(action:)();
}

uint64_t sub_1001EBC78(uint64_t a1, char *a2)
{
  uint64_t v268 = a2;
  uint64_t v3 = sub_100013A80(&qword_1004794C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v260 = (uint64_t)&v242 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
  uint64_t v258 = *(void *)(v259 - 8);
  __chkstk_darwin(v259);
  uint64_t v261 = (uint64_t)&v242 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v287 = (void *)type metadata accessor for HostedRoutingItem(0);
  uint64_t v272 = *(v287 - 1);
  uint64_t v6 = __chkstk_darwin(v287);
  os_log_type_t v282 = (uint64_t *)((char *)&v242 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v281 = (uint64_t)&v242 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v276 = (char *)&v242 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char **)((char *)&v242 - v13);
  __chkstk_darwin(v12);
  int v16 = (char *)&v242 - v15;
  uint64_t v273 = type metadata accessor for HostedRoutingSession(0);
  uint64_t v275 = *(void *)(v273 - 8);
  uint64_t v17 = __chkstk_darwin(v273);
  uint64_t v257 = (uint64_t)&v242 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v252 = (uint64_t *)((char *)&v242 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v251 = (uint64_t *)((char *)&v242 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v253 = (uint64_t)&v242 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v271 = (uint64_t)&v242 - v26;
  __chkstk_darwin(v25);
  uint64_t v270 = (uint64_t)&v242 - v27;
  uint64_t v28 = sub_100013A80(&qword_100479530);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v269 = (uint64_t)&v242 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v262 = (uint64_t)&v242 - v32;
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v242 - v33;
  uint64_t v277 = type metadata accessor for RoutingInteraction();
  uint64_t v279 = *(void *)(v277 - 8);
  uint64_t v35 = __chkstk_darwin(v277);
  unint64_t v285 = (char *)&v242 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v266 = (char *)&v242 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v242 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v250 = (char *)&v242 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  unint64_t v249 = (char *)&v242 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  os_log_t v286 = (os_log_t)((char *)&v242 - v47);
  __chkstk_darwin(v46);
  uint64_t v278 = (char *)&v242 - v48;
  uint64_t v49 = type metadata accessor for Logger();
  uint64_t v283 = *(void *)(v49 - 8);
  uint64_t v284 = v49;
  uint64_t v50 = __chkstk_darwin(v49);
  uint64_t v52 = (char *)&v242 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __chkstk_darwin(v50);
  int v265 = (char *)&v242 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v274 = (char *)&v242 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  int v255 = (char *)&v242 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  os_log_type_t v254 = (char *)&v242 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v256 = (char *)&v242 - v62;
  __chkstk_darwin(v61);
  unint64_t v64 = (char *)&v242 - v63;
  uint64_t v65 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v267 = (char *)&v242 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  uint64_t v70 = (char **)((char *)&v242 - v69);
  uint64_t v280 = a1;
  RoutingInteraction.action.getter();
  uint64_t v71 = v65;
  uint64_t v72 = v66;
  uint64_t v263 = *(uint64_t (**)(char **, uint64_t))(v66 + 88);
  int v73 = v263(v70, v71);
  uint64_t v264 = v66 + 88;
  if (v73 == enum case for RoutingInteraction.Action.add(_:))
  {
    uint64_t v248 = *(void (**)(char **, uint64_t))(v66 + 96);
    v248(v70, v71);
    uint64_t v74 = *v70;
    int v75 = v70[1];
    swift_bridgeObjectRelease();
  }
  else if (v73 == enum case for RoutingInteraction.Action.set(_:))
  {
    uint64_t v248 = *(void (**)(char **, uint64_t))(v66 + 96);
    v248(v70, v71);
    uint64_t v74 = v70[2];
    int v75 = v70[3];
    swift_bridgeObjectRelease();
  }
  else if (v73 == enum case for RoutingInteraction.Action.setActiveItem(_:))
  {
    uint64_t v248 = *(void (**)(char **, uint64_t))(v66 + 96);
    v248(v70, v71);
    uint64_t v74 = *v70;
    int v75 = v70[1];
  }
  else
  {
    if (v73 != enum case for RoutingInteraction.Action.handoff(_:))
    {
      uint64_t v243 = v71;
      uint64_t v147 = sub_1001A69C4();
      uint64_t v149 = v283;
      uint64_t v148 = v284;
      (*(void (**)(char *, uint64_t, uint64_t))(v283 + 16))(v52, v147, v284);
      uint64_t v150 = v279;
      uint64_t v151 = v285;
      uint64_t v152 = v277;
      (*(void (**)(char *, uint64_t, uint64_t))(v279 + 16))(v285, v280, v277);
      uint64_t v153 = Logger.logObject.getter();
      os_log_type_t v154 = static os_log_type_t.default.getter();
      int v155 = v154;
      if (os_log_type_enabled(v153, v154))
      {
        uint64_t v156 = swift_slowAlloc();
        uint64_t v245 = v72;
        uint64_t v157 = v156;
        char v287 = (void *)swift_slowAlloc();
        id v289 = v287;
        *(_DWORD *)uint64_t v157 = 136315394;
        os_log_t v286 = v153;
        uint64_t v158 = _typeName(_:qualified:)();
        LODWORD(v282) = v155;
        uint64_t v288 = sub_10018A9E0(v158, v159, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v157 + 12) = 2080;
        sub_1001EF798(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        uint64_t v160 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v288 = sub_10018A9E0(v160, v161, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v150 + 8))(v151, v152);
        os_log_t v162 = v286;
        _os_log_impl((void *)&_mh_execute_header, v286, (os_log_type_t)v282, "[%s] Interaction: %s has no applicable dialogs", (uint8_t *)v157, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v72 = v245;
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v149 + 8))(v52, v284);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v150 + 8))(v151, v152);

        (*(void (**)(char *, uint64_t))(v149 + 8))(v52, v148);
      }
      (*(void (**)(char **, uint64_t))(v72 + 8))(v70, v243);
      return 0;
    }
    uint64_t v248 = *(void (**)(char **, uint64_t))(v66 + 96);
    v248(v70, v71);
    uint64_t v245 = v66;
    uint64_t v74 = (char *)*((void *)*v70 + 4);
    int v75 = (char *)*((void *)*v70 + 5);
    swift_bridgeObjectRetain();
    uint64_t v72 = v245;
    swift_release();
  }
  unint64_t v76 = (char **)sub_10029EEA0();
  os_log_t v77 = v286;
  if (v74 == *v76 && v75 == v76[1] || (unint64_t v285 = v74, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v78 = sub_1001A69C4();
    uint64_t v80 = v283;
    uint64_t v79 = v284;
    (*(void (**)(char *, uint64_t, uint64_t))(v283 + 16))(v64, v78, v284);
    unint64_t v81 = v278;
    uint64_t v82 = v279;
    uint64_t v83 = v277;
    (*(void (**)(char *, uint64_t, uint64_t))(v279 + 16))(v278, v280, v277);
    os_log_t v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = swift_slowAlloc();
      char v87 = (void *)swift_slowAlloc();
      char v287 = v64;
      id v289 = v87;
      *(_DWORD *)uint64_t v86 = 136315394;
      uint64_t v88 = _typeName(_:qualified:)();
      uint64_t v288 = sub_10018A9E0(v88, v89, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v86 + 12) = 2080;
      sub_1001EF798(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      uint64_t v90 = v278;
      uint64_t v91 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v288 = sub_10018A9E0(v91, v92, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v90, v83);
      _os_log_impl((void *)&_mh_execute_header, v84, v85, "[%s] Interaction: %s is handoff to local -> no dialog", (uint8_t *)v86, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(void *, uint64_t))(v283 + 8))(v287, v284);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v83);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v64, v79);
    }
    return 0;
  }
  uint64_t v245 = v72;
  uint64_t v243 = v71;
  uint64_t v94 = (uint64_t)v268;
  uint64_t v95 = (void *)sub_1002AB998();
  sub_1001E71E8(v94, (uint64_t)v34, &qword_100479530);
  uint64_t v96 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v275 + 48);
  uint64_t v247 = v275 + 48;
  uint64_t v246 = v96;
  int v97 = v96((uint64_t)v34, 1, v273);
  sub_100009A08((uint64_t)v34, &qword_100479530);
  int v98 = _swiftEmptyArrayStorage;
  BOOL v113 = v97 == 1;
  uint64_t v99 = v274;
  uint64_t v100 = v272;
  if (!v113)
  {
    sub_100013A80(&qword_100479558);
    uint64_t v101 = v94;
    unint64_t v102 = (*(unsigned __int8 *)(v275 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v275 + 80);
    int v98 = (void *)swift_allocObject();
    *((_OWORD *)v98 + 1) = xmmword_1003C58B0;
    uint64_t v103 = v101;
    uint64_t v104 = v262;
    sub_1001E71E8(v103, v262, &qword_100479530);
    uint64_t result = v246(v104, 1, v273);
    if (result == 1) {
      goto LABEL_92;
    }
    sub_1001EF6D0(v104, (uint64_t)v98 + v102, type metadata accessor for HostedRoutingSession);
    uint64_t v99 = v274;
  }
  id v289 = v95;
  sub_1001EE7A0((uint64_t)v98);
  uint64_t v105 = v289[2];
  uint64_t v278 = v41;
  uint64_t v244 = v105;
  if (!v105)
  {
    uint64_t v115 = 1;
    goto LABEL_37;
  }
  uint64_t v268 = (char *)v289 + ((*(unsigned __int8 *)(v275 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v275 + 80));
  uint64_t v262 = *(void *)(v275 + 72);
  uint64_t v242 = v289;
  swift_bridgeObjectRetain();
  uint64_t v106 = 0;
  uint64_t v107 = v271;
  while (1)
  {
    sub_1001EF668((uint64_t)&v268[v262 * v106], v107, type metadata accessor for HostedRoutingSession);
    uint64_t v108 = sub_1002A61EC();
    uint64_t v109 = *(void *)(v108 + 16);
    if (v109) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_34:
    ++v106;
    sub_1001EF738(v107, type metadata accessor for HostedRoutingSession);
    if (v106 == v244)
    {
      swift_bridgeObjectRelease();
      uint64_t v115 = 1;
      uint64_t v41 = v278;
LABEL_37:
      uint64_t v116 = v269;
      goto LABEL_40;
    }
  }
  uint64_t v110 = v108 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
  swift_bridgeObjectRetain();
  uint64_t v111 = *(void *)(v100 + 72);
  while (1)
  {
    sub_1001EF668(v110, (uint64_t)v16, type metadata accessor for HostedRoutingItem);
    int v112 = v16[*((int *)v287 + 9)];
    sub_1001EF668((uint64_t)v16, (uint64_t)v14, type metadata accessor for HostedRoutingItem);
    if (v112 != 1)
    {
      sub_1001EF738((uint64_t)v14, type metadata accessor for HostedRoutingItem);
      sub_1001EF738((uint64_t)v16, type metadata accessor for HostedRoutingItem);
      goto LABEL_24;
    }
    BOOL v113 = *v14 == v285 && v14[1] == v75;
    if (v113) {
      break;
    }
    char v114 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1001EF738((uint64_t)v14, type metadata accessor for HostedRoutingItem);
    sub_1001EF738((uint64_t)v16, type metadata accessor for HostedRoutingItem);
    if (v114) {
      goto LABEL_39;
    }
LABEL_24:
    v110 += v111;
    if (!--v109)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v99 = v274;
      os_log_t v77 = v286;
      uint64_t v100 = v272;
      uint64_t v107 = v271;
      goto LABEL_34;
    }
  }
  sub_1001EF738((uint64_t)v14, type metadata accessor for HostedRoutingItem);
  sub_1001EF738((uint64_t)v16, type metadata accessor for HostedRoutingItem);
LABEL_39:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v116 = v269;
  sub_1001EF6D0(v271, v269, type metadata accessor for HostedRoutingSession);
  uint64_t v115 = 0;
  uint64_t v99 = v274;
  uint64_t v41 = v278;
  os_log_t v77 = v286;
LABEL_40:
  uint64_t v117 = v273;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v275 + 56))(v116, v115, 1, v273);
  swift_bridgeObjectRelease();
  int v118 = v246(v116, 1, v117);
  uint64_t v119 = v284;
  uint64_t v120 = v270;
  uint64_t v121 = (uint64_t)v276;
  uint64_t v122 = v267;
  if (v118 == 1)
  {
    swift_bridgeObjectRelease();
    sub_100009A08(v116, &qword_100479530);
    uint64_t v123 = sub_1001A69C4();
    uint64_t v124 = v283;
    uint64_t v125 = v265;
    (*(void (**)(char *, uint64_t, uint64_t))(v283 + 16))(v265, v123, v119);
    uint64_t v126 = v279;
    uint64_t v127 = v266;
    uint64_t v128 = v277;
    (*(void (**)(char *, uint64_t, uint64_t))(v279 + 16))(v266, v280, v277);
    uint64_t v129 = Logger.logObject.getter();
    os_log_type_t v130 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = swift_slowAlloc();
      id v289 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v131 = 136315394;
      uint64_t v132 = _typeName(_:qualified:)();
      uint64_t v288 = sub_10018A9E0(v132, v133, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v131 + 12) = 2080;
      sub_1001EF798(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      unint64_t v134 = v266;
      uint64_t v135 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v288 = sub_10018A9E0(v135, v136, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v126 + 8))(v134, v128);
      _os_log_impl((void *)&_mh_execute_header, v129, v130, "[%s] Interaction: %s references item not picked in any session -> no dialog", (uint8_t *)v131, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v283 + 8))(v265, v284);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v128);

      (*(void (**)(char *, uint64_t))(v124 + 8))(v125, v119);
    }
    return 0;
  }
  sub_1001EF6D0(v116, v270, type metadata accessor for HostedRoutingSession);
  RoutingInteraction.action.getter();
  uint64_t v137 = v243;
  if (v263((char **)v122, v243) != enum case for RoutingInteraction.Action.setActiveItem(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v245 + 8))(v122, v137);
    goto LABEL_75;
  }
  v248((char **)v122, v137);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1002A61EC();
  uint64_t v138 = result;
  uint64_t v139 = _swiftEmptyArrayStorage;
  id v289 = _swiftEmptyArrayStorage;
  uint64_t v140 = *(void *)(result + 16);
  if (!v140)
  {
    unint64_t v163 = _swiftEmptyArrayStorage;
    uint64_t v142 = v272;
LABEL_63:
    swift_bridgeObjectRelease();
    int64_t v164 = v163[2];
    if (v164)
    {
      id v289 = _swiftEmptyArrayStorage;
      sub_100014688(0, v164, 0);
      uint64_t v165 = (uint64_t)v163
           + ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80));
      uint64_t v166 = *(void *)(v142 + 72);
      do
      {
        unint64_t v167 = v282;
        sub_1001EF668(v165, (uint64_t)v282, type metadata accessor for HostedRoutingItem);
        uint64_t v168 = *v167;
        uint64_t v169 = v167[1];
        swift_bridgeObjectRetain();
        sub_1001EF738((uint64_t)v167, type metadata accessor for HostedRoutingItem);
        uint64_t v139 = v289;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100014688(0, v139[2] + 1, 1);
          uint64_t v139 = v289;
        }
        unint64_t v171 = v139[2];
        unint64_t v170 = v139[3];
        if (v171 >= v170 >> 1)
        {
          sub_100014688(v170 > 1, v171 + 1, 1);
          uint64_t v139 = v289;
        }
        v139[2] = v171 + 1;
        uint64_t v172 = &v139[2 * v171];
        v172[4] = v168;
        v172[5] = v169;
        v165 += v166;
        --v164;
      }
      while (v164);
      swift_release();
      uint64_t v41 = v278;
      os_log_t v77 = v286;
    }
    else
    {
      swift_release();
    }
    sub_100013A80(&qword_100478690);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
    *(void *)(inited + 32) = v285;
    *(void *)(inited + 40) = v75;
    char v174 = sub_1001EE450(v139, (void *)inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    uint64_t v119 = v284;
    uint64_t v120 = v270;
    uint64_t v99 = v274;
    if (v174)
    {
      uint64_t v175 = sub_1001A69C4();
      uint64_t v176 = v283;
      uint64_t v99 = v256;
      (*(void (**)(char *, uint64_t, uint64_t))(v283 + 16))(v256, v175, v119);
      uint64_t v177 = v279;
      uint64_t v178 = v277;
      (*(void (**)(os_log_t, uint64_t, uint64_t))(v279 + 16))(v77, v280, v277);
      uint64_t v179 = v253;
      sub_1001EF668(v120, v253, type metadata accessor for HostedRoutingSession);
      uint64_t v180 = v120;
      uint64_t v181 = Logger.logObject.getter();
      os_log_type_t v182 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v181, v182))
      {
        uint64_t v183 = (uint64_t *)v179;
        uint64_t v184 = swift_slowAlloc();
        char v287 = (void *)swift_slowAlloc();
        id v289 = v287;
        *(_DWORD *)uint64_t v184 = 136315650;
        uint64_t v185 = _typeName(_:qualified:)();
        uint64_t v288 = sub_10018A9E0(v185, v186, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v184 + 12) = 2080;
        sub_1001EF798(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        uint64_t v187 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v288 = sub_10018A9E0(v187, v188, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(os_log_t, uint64_t))(v177 + 8))(v77, v178);
        *(_WORD *)(v184 + 22) = 2080;
        uint64_t v189 = *v183;
        unint64_t v190 = v183[1];
        swift_bridgeObjectRetain();
        uint64_t v288 = sub_10018A9E0(v189, v190, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001EF738((uint64_t)v183, type metadata accessor for HostedRoutingSession);
        _os_log_impl((void *)&_mh_execute_header, v181, v182, "[%s] Interaction: %s references item picked in session: %s, sole picked item -> no dialog", (uint8_t *)v184, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v283 + 8))(v256, v284);
LABEL_84:
        sub_1001EF738(v270, type metadata accessor for HostedRoutingSession);
        return 0;
      }

      sub_1001EF738(v179, type metadata accessor for HostedRoutingSession);
      (*(void (**)(os_log_t, uint64_t))(v177 + 8))(v77, v178);
      goto LABEL_86;
    }
LABEL_75:
    uint64_t v191 = v260;
    sub_1001E71E8(v120 + *(int *)(v273 + 28), v260, &qword_1004794C0);
    int v192 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v258 + 48))(v191, 1, v259);
    uint64_t v193 = (void (**)(char *, uint64_t, uint64_t))(v279 + 16);
    uint64_t v176 = v283;
    if (v192 != 1)
    {
      sub_1001EF6D0(v191, v261, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
      char v207 = sub_1002A047C();
      uint64_t v208 = sub_1001A69C4();
      uint64_t v209 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 16);
      if (v207)
      {
        uint64_t v210 = v254;
        uint64_t v211 = v284;
        v209(v254, v208, v284);
        uint64_t v212 = v249;
        uint64_t v213 = v277;
        (*v193)(v249, v280, v277);
        uint64_t v214 = v270;
        uint64_t v215 = v251;
        sub_1001EF668(v270, (uint64_t)v251, type metadata accessor for HostedRoutingSession);
        unint64_t v216 = Logger.logObject.getter();
        os_log_type_t v217 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v216, v217))
        {
          uint64_t v218 = swift_slowAlloc();
          char v287 = (void *)swift_slowAlloc();
          id v289 = v287;
          *(_DWORD *)uint64_t v218 = 136315650;
          uint64_t v219 = _typeName(_:qualified:)();
          uint64_t v288 = sub_10018A9E0(v219, v220, (uint64_t *)&v289);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v218 + 12) = 2080;
          sub_1001EF798(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
          uint64_t v221 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v288 = sub_10018A9E0(v221, v222, (uint64_t *)&v289);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v279 + 8))(v212, v213);
          *(_WORD *)(v218 + 22) = 2080;
          uint64_t v223 = *v215;
          unint64_t v224 = v215[1];
          swift_bridgeObjectRetain();
          uint64_t v288 = sub_10018A9E0(v223, v224, (uint64_t *)&v289);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1001EF738((uint64_t)v215, type metadata accessor for HostedRoutingSession);
          _os_log_impl((void *)&_mh_execute_header, v216, v217, "[%s] Interaction: %s references item picked in session: %s, session is playing -> dialog", (uint8_t *)v218, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v176 + 8))(v254, v284);
          sub_1001EF738(v261, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
          uint64_t v225 = v270;
        }
        else
        {

          sub_1001EF738((uint64_t)v215, type metadata accessor for HostedRoutingSession);
          (*(void (**)(char *, uint64_t))(v279 + 8))(v212, v213);
          (*(void (**)(char *, uint64_t))(v176 + 8))(v210, v211);
          sub_1001EF738(v261, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
          uint64_t v225 = v214;
        }
        sub_1001EF738(v225, type metadata accessor for HostedRoutingSession);
        return 1;
      }
      uint64_t v226 = v255;
      uint64_t v227 = v284;
      v209(v255, v208, v284);
      int v228 = v250;
      uint64_t v229 = v277;
      (*v193)(v250, v280, v277);
      uint64_t v230 = v270;
      uint64_t v231 = v252;
      sub_1001EF668(v270, (uint64_t)v252, type metadata accessor for HostedRoutingSession);
      unint64_t v232 = Logger.logObject.getter();
      os_log_type_t v233 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v232, v233))
      {
        uint64_t v234 = swift_slowAlloc();
        char v287 = (void *)swift_slowAlloc();
        id v289 = v287;
        *(_DWORD *)uint64_t v234 = 136315650;
        uint64_t v235 = _typeName(_:qualified:)();
        uint64_t v288 = sub_10018A9E0(v235, v236, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v234 + 12) = 2080;
        sub_1001EF798(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        uint64_t v237 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v288 = sub_10018A9E0(v237, v238, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v279 + 8))(v228, v229);
        *(_WORD *)(v234 + 22) = 2080;
        uint64_t v239 = *v231;
        unint64_t v240 = v231[1];
        swift_bridgeObjectRetain();
        uint64_t v288 = sub_10018A9E0(v239, v240, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001EF738((uint64_t)v231, type metadata accessor for HostedRoutingSession);
        _os_log_impl((void *)&_mh_execute_header, v232, v233, "[%s] Interaction: %s references item picked in session: %s, session is not playing -> no dialog", (uint8_t *)v234, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v176 + 8))(v255, v284);
        sub_1001EF738(v261, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
        goto LABEL_84;
      }

      sub_1001EF738((uint64_t)v231, type metadata accessor for HostedRoutingSession);
      (*(void (**)(char *, uint64_t))(v279 + 8))(v228, v229);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v226, v227);
      sub_1001EF738(v261, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
      uint64_t v241 = v230;
LABEL_90:
      sub_1001EF738(v241, type metadata accessor for HostedRoutingSession);
      return 0;
    }
    sub_100009A08(v191, &qword_1004794C0);
    uint64_t v194 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v99, v194, v119);
    uint64_t v195 = v277;
    (*v193)(v41, v280, v277);
    uint64_t v196 = v257;
    sub_1001EF668(v120, v257, type metadata accessor for HostedRoutingSession);
    uint64_t v180 = v120;
    unint64_t v197 = Logger.logObject.getter();
    os_log_type_t v198 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v197, v198))
    {
      Swift::String v199 = (uint64_t *)v196;
      uint64_t v200 = swift_slowAlloc();
      char v287 = (void *)swift_slowAlloc();
      id v289 = v287;
      *(_DWORD *)uint64_t v200 = 136315650;
      uint64_t v201 = _typeName(_:qualified:)();
      uint64_t v288 = sub_10018A9E0(v201, v202, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v200 + 12) = 2080;
      sub_1001EF798(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      uint64_t v203 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v288 = sub_10018A9E0(v203, v204, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v279 + 8))(v41, v195);
      *(_WORD *)(v200 + 22) = 2080;
      uint64_t v205 = *v199;
      unint64_t v206 = v199[1];
      swift_bridgeObjectRetain();
      uint64_t v288 = sub_10018A9E0(v205, v206, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001EF738((uint64_t)v199, type metadata accessor for HostedRoutingSession);
      _os_log_impl((void *)&_mh_execute_header, v197, v198, "[%s] Interaction: %s references item picked in session: %s, no now playing info -> no dialog", (uint8_t *)v200, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v176 + 8))(v274, v284);
      goto LABEL_84;
    }

    sub_1001EF738(v196, type metadata accessor for HostedRoutingSession);
    (*(void (**)(char *, uint64_t))(v279 + 8))(v41, v195);
LABEL_86:
    (*(void (**)(char *, uint64_t))(v176 + 8))(v99, v119);
    uint64_t v241 = v180;
    goto LABEL_90;
  }
  unint64_t v141 = 0;
  uint64_t v142 = v272;
  while (v141 < *(void *)(v138 + 16))
  {
    unint64_t v143 = (*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80);
    uint64_t v144 = *(void *)(v142 + 72);
    sub_1001EF668(v138 + v143 + v144 * v141, v121, type metadata accessor for HostedRoutingItem);
    if (*(unsigned char *)(v121 + *((int *)v287 + 9)) == 1)
    {
      sub_1001EF6D0(v121, v281, type metadata accessor for HostedRoutingItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1001E1F90(0, v139[2] + 1, 1);
      }
      uint64_t v139 = v289;
      unint64_t v146 = v289[2];
      unint64_t v145 = v289[3];
      if (v146 >= v145 >> 1)
      {
        sub_1001E1F90(v145 > 1, v146 + 1, 1);
        uint64_t v139 = v289;
      }
      v139[2] = v146 + 1;
      uint64_t result = sub_1001EF6D0(v281, (uint64_t)v139 + v143 + v146 * v144, type metadata accessor for HostedRoutingItem);
      os_log_t v77 = v286;
      uint64_t v121 = (uint64_t)v276;
    }
    else
    {
      uint64_t result = sub_1001EF738(v121, type metadata accessor for HostedRoutingItem);
    }
    ++v141;
    uint64_t v41 = v278;
    if (v140 == v141)
    {
      unint64_t v163 = v289;
      uint64_t v139 = _swiftEmptyArrayStorage;
      goto LABEL_63;
    }
  }
  __break(1u);
LABEL_92:
  __break(1u);
  return result;
}

uint64_t sub_1001EE240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v22 = v11;
    uint64_t v23 = a4;
    uint64_t v24 = v4;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v16 = *(void *)(v10 + 72);
    v21[1] = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1001EF668(v15, (uint64_t)v13, type metadata accessor for HostedRoutingItem);
      if (sub_10029F540() == a2 && v17 == a3) {
        break;
      }
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_10;
      }
      sub_1001EF738((uint64_t)v13, type metadata accessor for HostedRoutingItem);
      v15 += v16;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = 1;
        uint64_t v11 = v22;
        a4 = v23;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    a4 = v23;
    sub_1001EF6D0((uint64_t)v13, v23, type metadata accessor for HostedRoutingItem);
    uint64_t v19 = 0;
    uint64_t v11 = v22;
  }
  else
  {
    uint64_t v19 = 1;
  }
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a4, v19, 1, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001EE450(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1001EE518()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1001EE528()
{
  return swift_allocObject();
}

uint64_t sub_1001EE538(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100013A80(&qword_100479558);
  uint64_t v10 = *(void *)(type metadata accessor for HostedRoutingSession(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for HostedRoutingSession(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001EE950(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1001EE7A0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_1001EE538(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for HostedRoutingSession(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001EE950(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for HostedRoutingSession(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1001EEAA8()
{
  unint64_t result = qword_1004796B0;
  if (!qword_1004796B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004796B0);
  }
  return result;
}

unint64_t sub_1001EEAFC()
{
  unint64_t result = qword_1004796B8;
  if (!qword_1004796B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004796B8);
  }
  return result;
}

void *sub_1001EEB50(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v4 = __chkstk_darwin(v3);
  unint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v24 - v8;
  __chkstk_darwin(v7);
  unint64_t v12 = (char *)v24 - v11;
  unint64_t result = _swiftEmptyArrayStorage;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v27 = *(void *)(v10 + 72);
    v24[1] = v1;
    uint64_t v25 = (v15 + 32) & ~v15;
    uint64_t v16 = a1 + v25;
    unint64_t v17 = _swiftEmptyArrayStorage;
    uint64_t v26 = v6;
    while (1)
    {
      sub_1001EF668(v16, (uint64_t)v12, type metadata accessor for HostedRoutingItem);
      int v18 = v12[*(int *)(v3 + 36)];
      sub_1001EF668((uint64_t)v12, (uint64_t)v9, type metadata accessor for HostedRoutingItem);
      if (v18 == 1)
      {
        char v19 = v9[*(int *)(v3 + 44)];
        char v29 = *(unsigned char *)sub_10029E31C();
        char v28 = v19;
        sub_1001EEAFC();
        char v20 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        sub_1001EF738((uint64_t)v9, type metadata accessor for HostedRoutingItem);
        if (v20)
        {
          sub_1001EF6D0((uint64_t)v12, (uint64_t)v6, type metadata accessor for HostedRoutingItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1001E1F90(0, v17[2] + 1, 1);
          }
          unint64_t v17 = v30;
          unint64_t v22 = v30[2];
          unint64_t v21 = v30[3];
          if (v22 >= v21 >> 1)
          {
            sub_1001E1F90(v21 > 1, v22 + 1, 1);
            unint64_t v17 = v30;
          }
          uint64_t v17[2] = v22 + 1;
          uint64_t v23 = (uint64_t)v17 + v25 + v22 * v27;
          unint64_t v6 = v26;
          sub_1001EF6D0((uint64_t)v26, v23, type metadata accessor for HostedRoutingItem);
          goto LABEL_5;
        }
      }
      else
      {
        sub_1001EF738((uint64_t)v9, type metadata accessor for HostedRoutingItem);
      }
      sub_1001EF738((uint64_t)v12, type metadata accessor for HostedRoutingItem);
LABEL_5:
      v16 += v27;
      if (!--v14) {
        return v30;
      }
    }
  }
  return result;
}

void *sub_1001EEE34(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v26 = (uint64_t)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v23 - v7;
  __chkstk_darwin(v6);
  uint64_t v11 = (char *)v23 - v10;
  unint64_t result = _swiftEmptyArrayStorage;
  char v29 = _swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = *(void *)(v9 + 72);
    v23[1] = v1;
    uint64_t v24 = (v14 + 32) & ~v14;
    uint64_t v16 = a1 + v24;
    unint64_t v17 = _swiftEmptyArrayStorage;
    uint64_t v25 = v3;
    while (1)
    {
      sub_1001EF668(v16, (uint64_t)v11, type metadata accessor for HostedRoutingItem);
      BOOL v18 = sub_10029F6A0();
      sub_1001EF668((uint64_t)v11, (uint64_t)v8, type metadata accessor for HostedRoutingItem);
      if (v18)
      {
        char v19 = v8[*(int *)(v3 + 44)];
        char v28 = *(unsigned char *)sub_10029E31C();
        char v27 = v19;
        sub_1001EEAFC();
        char v20 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        sub_1001EF738((uint64_t)v8, type metadata accessor for HostedRoutingItem);
        if (v20)
        {
          sub_1001EF6D0((uint64_t)v11, v26, type metadata accessor for HostedRoutingItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1001E1F90(0, v17[2] + 1, 1);
          }
          unint64_t v17 = v29;
          unint64_t v22 = v29[2];
          unint64_t v21 = v29[3];
          if (v22 >= v21 >> 1)
          {
            sub_1001E1F90(v21 > 1, v22 + 1, 1);
            unint64_t v17 = v29;
          }
          uint64_t v17[2] = v22 + 1;
          sub_1001EF6D0(v26, (uint64_t)v17 + v24 + v22 * v15, type metadata accessor for HostedRoutingItem);
          uint64_t v3 = v25;
          goto LABEL_5;
        }
      }
      else
      {
        sub_1001EF738((uint64_t)v8, type metadata accessor for HostedRoutingItem);
      }
      sub_1001EF738((uint64_t)v11, type metadata accessor for HostedRoutingItem);
LABEL_5:
      v16 += v15;
      if (!--v13) {
        return v29;
      }
    }
  }
  return result;
}

void *sub_1001EF110(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v17 - v8;
  unint64_t result = _swiftEmptyArrayStorage;
  char v19 = _swiftEmptyArrayStorage;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v17 = v1;
    uint64_t v12 = *(void *)(v7 + 72);
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = a1 + v18;
    uint64_t v14 = _swiftEmptyArrayStorage;
    do
    {
      sub_1001EF668(v13, (uint64_t)v9, type metadata accessor for HostedRoutingItem);
      if (v9[*(int *)(v3 + 36)] == 1)
      {
        sub_1001EF6D0((uint64_t)v9, (uint64_t)v6, type metadata accessor for HostedRoutingItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001E1F90(0, v14[2] + 1, 1);
        }
        uint64_t v14 = v19;
        unint64_t v16 = v19[2];
        unint64_t v15 = v19[3];
        if (v16 >= v15 >> 1)
        {
          sub_1001E1F90(v15 > 1, v16 + 1, 1);
          uint64_t v14 = v19;
        }
        v14[2] = v16 + 1;
        sub_1001EF6D0((uint64_t)v6, (uint64_t)v14 + v18 + v16 * v12, type metadata accessor for HostedRoutingItem);
      }
      else
      {
        sub_1001EF738((uint64_t)v9, type metadata accessor for HostedRoutingItem);
      }
      v13 += v12;
      --v11;
    }
    while (v11);
    return v19;
  }
  return result;
}

void *sub_1001EF33C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v24 - v8;
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)v24 - v11;
  unint64_t result = _swiftEmptyArrayStorage;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v27 = *(void *)(v10 + 72);
    v24[1] = v1;
    uint64_t v25 = (v15 + 32) & ~v15;
    uint64_t v16 = a1 + v25;
    uint64_t v17 = _swiftEmptyArrayStorage;
    uint64_t v26 = v6;
    while (1)
    {
      sub_1001EF668(v16, (uint64_t)v12, type metadata accessor for HostedRoutingItem);
      int v18 = v12[*(int *)(v3 + 36)];
      sub_1001EF668((uint64_t)v12, (uint64_t)v9, type metadata accessor for HostedRoutingItem);
      if (v18 == 1)
      {
        char v19 = v9[*(int *)(v3 + 44)];
        char v29 = *(unsigned char *)sub_10029E31C();
        char v28 = v19;
        sub_1001EEAFC();
        char v20 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        sub_1001EF738((uint64_t)v9, type metadata accessor for HostedRoutingItem);
        if ((v20 & 1) == 0)
        {
          sub_1001EF6D0((uint64_t)v12, (uint64_t)v6, type metadata accessor for HostedRoutingItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1001E1F90(0, v17[2] + 1, 1);
          }
          uint64_t v17 = v30;
          unint64_t v22 = v30[2];
          unint64_t v21 = v30[3];
          if (v22 >= v21 >> 1)
          {
            sub_1001E1F90(v21 > 1, v22 + 1, 1);
            uint64_t v17 = v30;
          }
          uint64_t v17[2] = v22 + 1;
          uint64_t v23 = (uint64_t)v17 + v25 + v22 * v27;
          uint64_t v6 = v26;
          sub_1001EF6D0((uint64_t)v26, v23, type metadata accessor for HostedRoutingItem);
          goto LABEL_5;
        }
      }
      else
      {
        sub_1001EF738((uint64_t)v9, type metadata accessor for HostedRoutingItem);
      }
      sub_1001EF738((uint64_t)v12, type metadata accessor for HostedRoutingItem);
LABEL_5:
      v16 += v27;
      if (!--v14) {
        return v30;
      }
    }
  }
  return result;
}

uint64_t sub_1001EF620()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001EF668(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001EF6D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001EF738(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001EF798(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001EF7E0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10019001C(v0, qword_10047F328);
  sub_10018A9A8(v0, (uint64_t)qword_10047F328);
  id v1 = (id)*sub_1001A6778();
  return Logger.init(_:)();
}

uint64_t sub_1001EF83C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001EF8B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 160))();
  *a2 = result;
  return result;
}

uint64_t sub_1001EF8FC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 168);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1001EF950()
{
  return static Published.subscript.setter();
}

void (*sub_1001EF9C0(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_1001EFA4C;
}

void sub_1001EFA4C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_1001EFAB4()
{
  return swift_endAccess();
}

uint64_t sub_1001EFB18(uint64_t a1)
{
  uint64_t v2 = sub_100013A80(&qword_100478280);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  sub_100013A80(&qword_1004796C8);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1001EFC44(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_100013A80(&qword_100478280);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC12mediaremoted32GroupSessionRapportUserDiscovery__availableDevices;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_100013A80(&qword_1004796C8);
  Published.projectedValue.getter();
  swift_endAccess();
  return sub_1001EFD54;
}

void sub_1001EFD54(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

void sub_1001EFEC4()
{
  uint64_t v0 = 0;
  sub_100289944(sub_1001EFFD0);
}

void sub_1001EFFD0()
{
  uint64_t v1 = *(void ***)(v0 + 16);
  if (*v1)
  {
    if (qword_10047F320 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10018A9A8(v2, (uint64_t)qword_10047F328);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      uint64_t v22 = sub_10018A9E0(0xD000000000000020, 0x80000001003C62E0, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%s] Attempted to start while already started", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 24);
    id v7 = [objc_allocWithZone((Class)RPCompanionLinkClient) init];
    [v7 setControlFlags:2052];
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    char v20 = sub_1001F0E58;
    uint64_t v21 = v8;
    uint64_t v16 = (uint64_t)_NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    int v18 = sub_1001F09E8;
    char v19 = &unk_100421AE0;
    uint64_t v9 = _Block_copy(&v16);
    swift_release();
    [v7 setDeviceFoundHandler:v9];
    _Block_release(v9);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    char v20 = sub_1001F0E60;
    uint64_t v21 = v10;
    uint64_t v16 = (uint64_t)_NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    int v18 = sub_1001F09E8;
    char v19 = &unk_100421B08;
    uint64_t v11 = _Block_copy(&v16);
    swift_release();
    [v7 setDeviceLostHandler:v11];
    _Block_release(v11);
    uint64_t v12 = *v1;
    void *v1 = v7;

    uint64_t v13 = *v1;
    uint64_t v14 = *(void **)(v6 + 16);
    *(void *)(v6 + 16) = *v1;
    id v15 = v13;
  }
}

void sub_1001F0304(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_10047F320 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10018A9A8(v1, (uint64_t)qword_10047F328);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = swift_slowAlloc();
      os_log_type_t v4 = (void *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136315394;
      sub_10018A9E0(0xD000000000000020, 0x80000001003C62E0, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v3 + 12) = 2112;
      swift_errorRetain();
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v4 = v9;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "[%s] Failed to activate client: %@", (uint8_t *)v3, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_10047F320 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10018A9A8(v5, (uint64_t)qword_10047F328);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)id v7 = 136315138;
      sub_10018A9E0(0xD000000000000020, 0x80000001003C62E0, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "[%s] Activated RP client", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
}

void sub_1001F06BC()
{
}

void sub_1001F0718()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    [v1 invalidate];
    os_log_type_t v2 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    if (qword_10047F320 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10018A9A8(v3, (uint64_t)qword_10047F328);
    os_log_type_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v6 = 136315138;
      sub_10018A9E0(0xD000000000000020, 0x80000001003C62E0, &v7);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%s] Attempted to stop with no active client", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1001F08C0(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v3 = [a1 idsDeviceIdentifier];
    if (v3)
    {
      os_log_type_t v4 = v3;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      __chkstk_darwin(v5);
      swift_retain();
      sub_100289944((void (*)(void))sub_1001F2128);
      swift_release();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

void sub_1001F09E8(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1001F0A50(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v3 = [a1 idsDeviceIdentifier];
    if (v3)
    {
      id v4 = v3;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      __chkstk_darwin(v5);
      swift_retain();
      sub_100289944(sub_1001F0E68);
      swift_release();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1001F0B6C()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12mediaremoted32GroupSessionRapportUserDiscovery__availableDevices;
  uint64_t v2 = sub_100013A80(&qword_1004796C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

void *sub_1001F0C28()
{
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = 0;
  type metadata accessor for Lock();
  v0[3] = sub_1002898BC();
  v0[4] = &_swiftEmptyDictionarySingleton;
  sub_100013A80(&qword_1004796C0);
  Published.init(initialValue:)();
  return v0;
}

uint64_t sub_1001F0CB8()
{
  return type metadata accessor for GroupSessionRapportUserDiscovery();
}

uint64_t type metadata accessor for GroupSessionRapportUserDiscovery()
{
  uint64_t result = qword_10047F358;
  if (!qword_10047F358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001F0D0C()
{
  sub_1001F0DC4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001F0DC4()
{
  if (!qword_1004796F8)
  {
    sub_10018F8A4(&qword_1004796C0);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1004796F8);
    }
  }
}

uint64_t sub_1001F0E20()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F0E58(void *a1)
{
  return sub_1001F08C0(a1);
}

uint64_t sub_1001F0E60(void *a1)
{
  return sub_1001F0A50(a1);
}

void sub_1001F0E68()
{
  uint64_t v1 = (uint64_t *)v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  id v4 = v1 + 4;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_100013660(v2, v3);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  if (v3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v4;
    uint64_t v12 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10018CD80();
      uint64_t v8 = v12;
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void **)(*(void *)(v8 + 56) + 8 * v5);
    sub_1001F1A4C(v5, v8);
    v1[4] = v8;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v10 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*v1 + 176))(v11);

    v10(v11, 0);
  }
  else
  {
    swift_endAccess();
  }
}

uint64_t sub_1001F0FC0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1001F20E8();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_1001F1240(v7, result + 1);
    char v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_10018B318();
      uint64_t v23 = v28;
    }
    else
    {
      uint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_1001F1428((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_1001F20E8();
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        char v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_1001F14AC((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

Swift::Int sub_1001F1240(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100013A80(&qword_100478270);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_1001F20E8();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10018B318();
          uint64_t v2 = v14;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

unint64_t sub_1001F1428(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

void sub_1001F14AC(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10018B318();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1001F1624();
      goto LABEL_14;
    }
    sub_1001F17D0();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1001F20E8();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = static NSObject.== infix(_:_:)();

    if (v12)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = static NSObject.== infix(_:_:)();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

id sub_1001F1624()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_100478270);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1001F17D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013A80(&qword_100478270);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  char v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = NSObject._rawHashValue(seed:)(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1001F1A4C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          int64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *int64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1001F1C24(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100013660(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10018CD80();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10018CF34(v15, a4 & 1);
  unint64_t v20 = sub_100013660(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_1001F1D94(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_1001F1F5C();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_1001F20E8();
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001F1624();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_1001A2D04(v11);
  uint64_t *v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1001F1F5C()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_1001F1240(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_1001F20E8();
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_1001A2D04(v8);
      if (static NSObject.== infix(_:_:)())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1001F20E8()
{
  unint64_t result = qword_100478250;
  if (!qword_100478250)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100478250);
  }
  return result;
}

id sub_1001F2128()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v1 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  id result = [v2 model];
  if (result)
  {
    Swift::Int v6 = result;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    uint64_t v18 = v7;
    uint64_t v19 = v9;
    uint64_t v20 = 0x656E6F685069;
    unint64_t v21 = 0xE600000000000000;
    sub_1001A4624();
    if (StringProtocol.contains<A>(_:)())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = v7;
      uint64_t v19 = v9;
      uint64_t v20 = 1684099177;
      unint64_t v21 = 0xE400000000000000;
      char v10 = StringProtocol.contains<A>(_:)();
      id result = (id)swift_bridgeObjectRelease();
      if ((v10 & 1) == 0) {
        return result;
      }
    }
    swift_beginAccess();
    if (!*(void *)(v1[4] + 16)
      || (swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          sub_100013660(v4, v3),
          char v12 = v11,
          swift_bridgeObjectRelease(),
          id result = (id)swift_bridgeObjectRelease(),
          (v12 & 1) == 0))
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      id v13 = v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v22 = (id)v1[4];
      v1[4] = 0x8000000000000000;
      sub_1001F1C24((uint64_t)v13, v4, v3, isUniquelyReferenced_nonNull_native);
      v1[4] = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      id v15 = *(uint64_t (**)(uint64_t *))(*v1 + 176);
      id v16 = v13;
      uint64_t v17 = (uint64_t (*)(uint64_t *, void))v15(&v18);
      sub_1001F0FC0(&v22, v16);

      return (id)v17(&v18, 0);
    }
  }
  return result;
}

uint64_t sub_1001F2384()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10019001C(v0, qword_10047F370);
  sub_10018A9A8(v0, (uint64_t)qword_10047F370);
  id v1 = (id)*sub_1001A6778();
  return Logger.init(_:)();
}

uint64_t sub_1001F23E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10018FE44(a1, a2);
  }
  return a1;
}

id sub_1001F23F4()
{
  id result = sub_1001F2414();
  qword_100486258 = (uint64_t)result;
  return result;
}

id sub_1001F2414()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)CNContactStore) init];
  if (qword_10047F390 != -1) {
    swift_once();
  }
  sub_100013A80(&qword_100479878);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v18 = 0;
  id v6 = objc_msgSend(v4, "_ios_meContactWithKeysToFetch:error:", isa, &v18);

  id v7 = v18;
  if (v6)
  {
  }
  else
  {
    uint64_t v8 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10047F368 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10018A9A8(v0, (uint64_t)qword_10047F370);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v9, v0);
    swift_errorRetain();
    swift_errorRetain();
    char v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      id v15 = (void *)swift_slowAlloc();
      id v16 = (void *)swift_slowAlloc();
      id v18 = v16;
      *(_DWORD *)uint64_t v12 = 136315394;
      uint64_t v17 = sub_10018A9E0(0x52746361746E6F43, 0xEF7265766C6F7365, (uint64_t *)&v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v12 + 12) = 2114;
      swift_errorRetain();
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v17 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v15 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "[%s] Failed to get Me contact with error: %{public}@", (uint8_t *)v12, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  return v6;
}

NSString *sub_1001F2810()
{
  sub_100013A80(&qword_100478380);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003C6340;
  *(void *)(v0 + 32) = [self descriptorForRequiredKeysForStyle:0];
  *(void *)(v0 + 40) = CNContactEmailAddressesKey;
  *(void *)(v0 + 48) = CNContactPhoneNumbersKey;
  *(void *)(v0 + 56) = CNContactImageDataKey;
  *(void *)(v0 + 64) = CNContactThumbnailImageDataKey;
  specialized Array._endMutation()();
  qword_100486260 = v0;
  uint64_t v1 = CNContactEmailAddressesKey;
  uint64_t v2 = CNContactPhoneNumbersKey;
  uint64_t v3 = CNContactImageDataKey;

  return CNContactThumbnailImageDataKey;
}

uint64_t sub_1001F2904(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100013A80(&qword_100478690);
  uint64_t inited = swift_initStackObject();
  long long v43 = xmmword_1003C58B0;
  *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
  type metadata accessor for NearbyAdvertisement();
  *(void *)(inited + 32) = static NearbyAdvertisement.meContactID.getter();
  *(void *)(inited + 40) = v9;
  char v10 = sub_1001F2E94(a1, a2, (void *)inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  if (v10)
  {
    id v11 = [self sharedCenter];
    id v12 = [v11 localActiveIdentity];

    if (v12)
    {
      id v13 = [v12 displayName];

      if (v13)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        return v14;
      }
    }
    if (qword_10047F388 != -1) {
      swift_once();
    }
    if (qword_100486258)
    {
      id v19 = (id)qword_100486258;
      goto LABEL_11;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  id v15 = self;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v43;
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a2;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v18 = [v15 predicateForContactsWithIdentifiers:isa];

  id v19 = sub_1001F30BC(v18);
  if (!v19) {
    goto LABEL_15;
  }
LABEL_11:
  id v20 = v19;
  uint64_t v14 = sub_1001F2FB8(v20);
  uint64_t v22 = v21;
  uint64_t v42 = v24;
  *(void *)&long long v43 = v23;
  if (qword_10047F368 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_10018A9A8(v4, (uint64_t)qword_10047F370);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v25, v4);
  id v26 = v20;
  swift_bridgeObjectRetain();
  id v27 = v26;
  char v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v40 = v22;
    uint64_t v31 = v30;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v41 = v14;
    uint64_t v33 = a1;
    uint64_t v34 = (void *)v32;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v45 = v37;
    *(_DWORD *)uint64_t v31 = 136315650;
    uint64_t v39 = v4;
    uint64_t v44 = sub_10018A9E0(0x52746361746E6F43, 0xEF7265766C6F7365, &v45);
    uint64_t v38 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_10018A9E0(v33, a2, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 22) = 2112;
    uint64_t v44 = (uint64_t)v27;
    id v35 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v34 = v27;

    _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%s] Resolved %s to %@", (uint8_t *)v31, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v38, v39);
    return v41;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v14;
}

uint64_t sub_1001F2E94(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_1001F2F5C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_1001F2FB8(void *a1)
{
  id v2 = [self stringFromContact:a1 style:1000];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v4 = 0;
  }
  swift_bridgeObjectRetain();
  id v5 = [a1 imageData];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v8;
  }
  else
  {

    uint64_t v7 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_1001F23E0(v7, v9);
  swift_bridgeObjectRelease_n();
  sub_1001A3954(v7, v9);
  return v4;
}

id sub_1001F30BC(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  id v3 = *(void (***)(char *, uint64_t, uint64_t))(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v46 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v41 - v6;
  id v8 = [objc_allocWithZone((Class)CNContactStore) init];
  if (qword_10047F390 != -1) {
    swift_once();
  }
  id v9 = objc_allocWithZone((Class)CNContactFetchRequest);
  swift_bridgeObjectRetain();
  sub_100013A80(&qword_100479878);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithKeysToFetch:isa];

  [v11 setPredicate:a1];
  id v51 = 0;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &v51;
  id v13 = (void *)swift_allocObject();
  v13[2] = sub_1001F3C38;
  void v13[3] = v12;
  uint64_t v47 = v12;
  aBlock[4] = sub_1001F3C94;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_1001F2F5C;
  aBlock[3] = &unk_100421C00;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v48 = v11;
  unsigned int v15 = [v8 enumerateContactsWithFetchRequest:v11 error:aBlock usingBlock:v14];
  _Block_release(v14);
  id v16 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_19:
    swift_once();
    goto LABEL_6;
  }
  if (v15) {
    goto LABEL_10;
  }
  uint64_t v45 = a1;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (qword_10047F368 != -1) {
    goto LABEL_19;
  }
LABEL_6:
  uint64_t v18 = sub_10018A9A8(v2, (uint64_t)qword_10047F370);
  id v19 = v46;
  v3[2](v46, v18, v2);
  swift_errorRetain();
  swift_errorRetain();
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    id v43 = v8;
    uint64_t v23 = v22;
    uint64_t v24 = (void *)swift_slowAlloc();
    uint64_t v42 = (void *)swift_slowAlloc();
    aBlock[0] = v42;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v44 = v2;
    uint64_t v49 = sub_10018A9E0(0x52746361746E6F43, 0xEF7265766C6F7365, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 12) = 2114;
    swift_errorRetain();
    uint64_t v25 = v7;
    uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v49 = v26;
    uint64_t v2 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v24 = v26;
    uint64_t v7 = v25;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%s] Failed to query contact store with error: %{public}@", (uint8_t *)v23, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    id v8 = v43;
    swift_slowDealloc();

    swift_errorRelease();
    ((void (*)(char *, uint64_t))v3[1])(v46, v2);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    ((void (*)(char *, uint64_t))v3[1])(v19, v2);
  }
  a1 = v45;
LABEL_10:
  id v27 = v51;
  if (v51)
  {
    id v28 = v51;
  }
  else
  {
    if (qword_10047F368 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_10018A9A8(v2, (uint64_t)qword_10047F370);
    v3[2](v7, v29, v2);
    id v30 = a1;
    uint64_t v31 = a1;
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      id v43 = v8;
      uint64_t v36 = (void *)v35;
      uint64_t v37 = (void *)swift_slowAlloc();
      uint64_t v45 = v31;
      aBlock[0] = v37;
      *(_DWORD *)uint64_t v34 = 136315394;
      uint64_t v46 = (char *)v3;
      uint64_t v49 = sub_10018A9E0(0x52746361746E6F43, 0xEF7265766C6F7365, (uint64_t *)aBlock);
      uint64_t v42 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v34 + 12) = 2114;
      uint64_t v44 = v2;
      uint64_t v49 = (uint64_t)v30;
      id v38 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v36 = v45;

      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%s] No contact for predicate: %{public}@", (uint8_t *)v34, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*((void (**)(void *, uint64_t))v46 + 1))(v42, v44);
    }
    else
    {

      ((void (*)(char *, uint64_t))v3[1])(v7, v2);
    }
  }
  id v39 = v51;
  swift_release();

  return v27;
}

uint64_t destroy for ContactResolver(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    return sub_10018FE9C(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ContactResolver(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    uint64_t v6 = *(void *)v4;
    sub_10018FE44(v6, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v5;
  }
  return a1;
}

void *assignWithCopy for ContactResolver(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_10018FE44(*v4, v5);
      uint64_t v8 = a1[2];
      unint64_t v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_10018FE9C(v8, v9);
      return a1;
    }
    sub_1001F3A7C((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_10018FE44(*v4, v5);
  a1[2] = v6;
  a1[3] = v5;
  return a1;
}

uint64_t sub_1001F3A7C(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for ContactResolver(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for ContactResolver(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = a2 + 2;
  unint64_t v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_10018FE9C(v8, v6);
      return a1;
    }
    sub_1001F3A7C((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactResolver(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactResolver(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactResolver()
{
  return &type metadata for ContactResolver;
}

uint64_t sub_1001F3C28()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001F3C38(void *a1, unsigned char *a2)
{
  unint64_t v3 = *(id **)(v2 + 16);
  *a2 = 1;
  id v5 = *v3;
  *unint64_t v3 = a1;
  id v4 = a1;
}

uint64_t sub_1001F3C84()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F3C94()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1001F3CBC(uint64_t a1)
{
  return sub_1001F3CFC(a1, qword_10047F3A8, (uint64_t (*)(void))sub_1001A6778);
}

uint64_t sub_1001F3CDC(uint64_t a1)
{
  return sub_1001F3CFC(a1, qword_10047F3C8, (uint64_t (*)(void))sub_1001A682C);
}

uint64_t sub_1001F3CFC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = type metadata accessor for Logger();
  sub_10019001C(v5, a2);
  sub_10018A9A8(v5, (uint64_t)a2);
  id v6 = *(id *)a3();
  return Logger.init(_:)();
}

Swift::Int sub_1001F3D64()
{
  return Hasher._finalize()();
}

uint64_t sub_1001F3DC8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100239798();

  return _BridgedNSError.hash(into:)(a1, a2, v4);
}

unint64_t sub_1001F3E14@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_10022EDD8(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1001F3E48(uint64_t a1)
{
  unint64_t v2 = sub_100239798();

  return _BridgedNSError._domain.getter(a1, v2);
}

uint64_t sub_1001F3E84(uint64_t a1)
{
  unint64_t v2 = sub_100239798();

  return _BridgedNSError._code.getter(a1, v2);
}

unint64_t sub_1001F3EC0()
{
  return 0xD000000000000021;
}

uint64_t sub_1001F3EDC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100239798();

  return _BridgedNSError.init(_bridgedNSError:)(a1, a2, v4);
}

unint64_t MRDFastSyncGroupSessionState.init(rawValue:)(unint64_t a1)
{
  return sub_10022EDE8(a1);
}

Swift::Int sub_1001F3F4C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1001F3F94()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1001F3FC0()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t sub_1001F4004@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_10022EDE8(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

id sub_1001F403C()
{
  Swift::UInt v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = *(id *)(v0 + 32);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for TimingEvent();
    id v4 = MRDFastSyncGroupSession.__allocating_init()();
    uint64_t v5 = *(void **)(v0 + 32);
    *(void *)(v3 + 32) = v4;
    id v2 = v4;

    Swift::UInt v1 = 0;
  }
  id v6 = v1;
  return v2;
}

id sub_1001F409C()
{
  Swift::UInt v1 = *(void **)(v0 + 40);
  if (v1)
  {
    id v2 = *(id *)(v0 + 40);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for TimingEvent();
    id v4 = MRDFastSyncGroupSession.__allocating_init()();
    uint64_t v5 = *(void **)(v0 + 40);
    *(void *)(v3 + 40) = v4;
    id v2 = v4;

    Swift::UInt v1 = 0;
  }
  id v6 = v1;
  return v2;
}

id sub_1001F40FC()
{
  Swift::UInt v1 = *(void **)(v0 + 48);
  if (v1)
  {
    id v2 = *(id *)(v0 + 48);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for TimingEvent();
    id v4 = MRDFastSyncGroupSession.__allocating_init()();
    uint64_t v5 = *(void **)(v0 + 48);
    *(void *)(v3 + 48) = v4;
    id v2 = v4;

    Swift::UInt v1 = 0;
  }
  id v6 = v1;
  return v2;
}

id sub_1001F415C()
{
  Swift::UInt v1 = *(void **)(v0 + 56);
  if (v1)
  {
    id v2 = *(id *)(v0 + 56);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for TimingEvent();
    id v4 = MRDFastSyncGroupSession.__allocating_init()();
    uint64_t v5 = *(void **)(v0 + 56);
    *(void *)(v3 + 56) = v4;
    id v2 = v4;

    Swift::UInt v1 = 0;
  }
  id v6 = v1;
  return v2;
}

uint64_t sub_1001F41BC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1001F4214()
{
  return sub_1001F4238();
}

uint64_t sub_1001F4238()
{
  sub_100013A80(&qword_100478380);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003C6340;
  *(void *)(v0 + 32) = sub_1001F4038();
  *(void *)(v0 + 40) = sub_1001F403C();
  *(void *)(v0 + 48) = sub_1001F409C();
  *(void *)(v0 + 56) = sub_1001F40FC();
  *(void *)(v0 + 64) = sub_1001F415C();
  specialized Array._endMutation()();
  return v0;
}

id sub_1001F42C8()
{
  Swift::UInt v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = *(id *)(v0 + 24);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for TimingEvent();
    id v4 = MRDFastSyncGroupSession.__allocating_init()();
    uint64_t v5 = *(void **)(v0 + 24);
    *(void *)(v3 + 24) = v4;
    id v2 = v4;

    Swift::UInt v1 = 0;
  }
  id v6 = v1;
  return v2;
}

uint64_t sub_1001F4328()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1001F4360()
{
  sub_100013A80(&qword_100478380);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003C5800;
  *(void *)(v0 + 32) = sub_1001F42C8();
  specialized Array._endMutation()();
  return v0;
}

uint64_t variable initialization expression of MRDFastSyncGroupSession.delegate()
{
  return 0;
}

void *variable initialization expression of MRDFastSyncGroupSession.guests()
{
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1001F43DC()
{
  uint64_t v1 = OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___joinTimings;
  if (*(void *)(v0 + OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___joinTimings))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___joinTimings);
  }
  else
  {
    char v3 = *(unsigned char *)(v0 + OBJC_IVAR___MRDFastSyncGroupSession_isLeader);
    type metadata accessor for JoinTimingEvents();
    uint64_t v2 = swift_allocObject();
    *(unsigned char *)(v2 + 16) = 0;
    *(_OWORD *)(v2 + 24) = 0u;
    *(_OWORD *)(v2 + 40) = 0u;
    *(void *)(v2 + 56) = 0;
    *(unsigned char *)(v2 + 64) = v3;
    *(void *)(v0 + v1) = v2;
    swift_retain();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001F4464()
{
  uint64_t v1 = OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___sessionTimings;
  if (*(void *)(v0 + OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___sessionTimings))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___sessionTimings);
  }
  else
  {
    char v3 = *(unsigned char *)(v0 + OBJC_IVAR___MRDFastSyncGroupSession_isLeader);
    type metadata accessor for SessionTimingEvents();
    uint64_t v2 = swift_allocObject();
    *(unsigned char *)(v2 + 16) = 0;
    *(void *)(v2 + 24) = 0;
    *(unsigned char *)(v2 + 32) = v3;
    *(void *)(v0 + v1) = v2;
    swift_retain();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001F44E0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = OBJC_IVAR___MRDFastSyncGroupSession__state;
  if (*(void **)&v1[OBJC_IVAR___MRDFastSyncGroupSession__state] != a1)
  {
    uint64_t v41 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v42 = v11;
    uint64_t v44 = result;
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    id v43 = v7;
    uint64_t v13 = type metadata accessor for Logger();
    sub_10018A9A8(v13, (uint64_t)qword_10047F3A8);
    uint64_t v14 = v1;
    unsigned int v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v40 = v4;
      uint64_t v19 = v18;
      id v20 = (void *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v45 = v14;
      aBlock[0] = v38;
      *(_DWORD *)uint64_t v19 = 138544130;
      os_log_t v36 = v15;
      uint64_t v37 = v12;
      os_log_type_t v21 = v14;
      uint64_t v39 = v5;
      uint64_t v22 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v20 = v14;

      *(_WORD *)(v19 + 12) = 2082;
      int v35 = v17;
      uint64_t v24 = *(void *)&v22[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v23 = *(void *)&v22[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v25 = v24;
      uint64_t v12 = v37;
      uint64_t v45 = (void *)sub_10018A9E0(v25, v23, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2048;
      uint64_t v45 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 32) = 2048;
      uint64_t v26 = *(void **)&v2[v12];

      uint64_t v45 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v5 = v39;
      os_log_t v27 = v36;
      _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v35, "[%{public}@]<%{public}s> State changed: %ld -> %ld.", (uint8_t *)v19, 0x2Au);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v4 = v40;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v28 = *(void *)&v2[v12];
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v14;
    *(void *)(v29 + 24) = v28;
    aBlock[4] = (uint64_t)sub_100237588;
    aBlock[5] = v29;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_100006760;
    aBlock[3] = (uint64_t)&unk_100422838;
    id v30 = _Block_copy(aBlock);
    uint64_t v31 = v14;
    uint64_t v32 = v41;
    static DispatchQoS.unspecified.getter();
    uint64_t v45 = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    os_log_type_t v33 = v43;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v30);
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v33, v4);
    (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v32, v44);
    return swift_release();
  }
  return result;
}

uint64_t MRDFastSyncGroupSession.state.getter()
{
  uint64_t v10 = 0;
  char v11 = 1;
  uint64_t v1 = *(NSObject **)&v0[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v10;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_10022EE30;
  *(void *)(v3 + 24) = v2;
  v9[4] = sub_1001BA8E4;
  v9[5] = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1001F4BF0;
  v9[3] = &unk_100421C78;
  uint64_t v4 = _Block_copy(v9);
  uint64_t v5 = v0;
  swift_retain();
  swift_release();
  dispatch_async_and_wait(v1, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else if ((v11 & 1) == 0)
  {
    uint64_t v8 = v10;
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F4BF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t MRDFastSyncGroupSession.localParticipant.getter()
{
  uint64_t v10 = 0;
  uint64_t v1 = *(NSObject **)&v0[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  *(void *)(v2 + 24) = &v10;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_10022EE5C;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_10023A22C;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1001F4BF0;
  aBlock[3] = &unk_100421CF0;
  uint64_t v4 = _Block_copy(aBlock);
  uint64_t v5 = v0;
  swift_retain();
  swift_release();
  dispatch_async_and_wait(v1, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

void *MRDFastSyncGroupSession.leaderParticipant.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MRDFastSyncGroupSession_leaderParticipant);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MRDFastSyncGroupSession.leaderParticipant.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___MRDFastSyncGroupSession_leaderParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*MRDFastSyncGroupSession.leaderParticipant.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1001F4F6C()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1001F4FB8()
{
  return swift_unknownObjectRelease();
}

void (*sub_1001F5014(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___MRDFastSyncGroupSession_delegate;
  v3[4] = v1;
  void v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_1001F5098;
}

void sub_1001F5098(void **a1, char a2)
{
  id v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t MRDFastSyncGroupSession.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

void *variable initialization expression of MRDFastSyncGroupSession.participantHandleToMediaRemoteIdentifierMap()
{
  return &_swiftEmptyDictionarySingleton;
}

void *variable initialization expression of MRDFastSyncGroupSession.pendingParticipants()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of MRDFastSyncGroupSession.hasEncounteredLowPowerError()
{
  return 0;
}

uint64_t static MRDFastSyncGroupSession.createSession(nearbyGroup:asUser:delegate:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x68);
  uint64_t v6 = swift_retain();
  uint64_t v7 = v5(v6);
  uint64_t v9 = v8;
  type metadata accessor for RemoteControlActivity();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v9;
  sub_100013A80(&qword_1004799C0);
  swift_allocObject();
  char v11 = (void *)NearbyGroupSessionProvider.init(nearbyGroup:activity:)();
  objc_allocWithZone((Class)type metadata accessor for MRDFastSyncGroupSession());
  id v12 = a2;
  swift_unknownObjectRetain();
  return sub_1001F5744(1, v12, v11, a3);
}

uint64_t static MRDFastSyncGroupSession.joinSession(nearbyGroup:asUser:hostSigningKey:delegate:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x68);
  uint64_t v8 = swift_retain();
  uint64_t v9 = v7(v8);
  uint64_t v11 = v10;
  type metadata accessor for RemoteControlActivity();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  *(void *)(v12 + 24) = v11;
  sub_100013A80(&qword_1004799C0);
  swift_allocObject();
  uint64_t v13 = (void *)NearbyGroupSessionProvider.init(nearbyGroup:activity:)();
  objc_allocWithZone((Class)type metadata accessor for MRDFastSyncGroupSession());
  id v14 = a2;
  swift_unknownObjectRetain();
  return sub_1001F5744(0, v14, v13, a5);
}

uint64_t sub_1001F5744(int a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v142 = a2;
  int v110 = a1;
  uint64_t v8 = sub_100013A80(&qword_10047A1F0);
  uint64_t v105 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v104 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for UUID();
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v101 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v109);
  uint64_t v108 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12 - 8);
  uint64_t v107 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  int v17 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = OBJC_IVAR___MRDFastSyncGroupSession_pushMessenger;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_pushMessenger] = 0;
  uint64_t v112 = OBJC_IVAR___MRDFastSyncGroupSession_sessionCancellables;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_sessionCancellables] = &_swiftEmptySetSingleton;
  uint64_t v113 = OBJC_IVAR___MRDFastSyncGroupSession_cancellables;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_cancellables] = &_swiftEmptySetSingleton;
  uint64_t v118 = OBJC_IVAR___MRDFastSyncGroupSession_groupSession;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_groupSession] = 0;
  uint64_t v120 = OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger] = 0;
  uint64_t v122 = OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___joinTimings;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___joinTimings] = 0;
  uint64_t v124 = OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___sessionTimings;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___sessionTimings] = 0;
  uint64_t v135 = (id *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_leaderParticipant];
  *uint64_t v135 = 0;
  unint64_t v141 = &v4[OBJC_IVAR___MRDFastSyncGroupSession_delegate];
  swift_unknownObjectWeakInit();
  uint64_t v18 = &v4[OBJC_IVAR___MRDFastSyncGroupSession_localParticipantIdentifier];
  void *v18 = 0;
  v18[1] = 0;
  uint64_t v138 = v18;
  uint64_t v19 = &v4[OBJC_IVAR___MRDFastSyncGroupSession_leaderParticipantIdentifier];
  void *v19 = 0;
  v19[1] = 0;
  uint64_t v139 = v19;
  id v20 = &v4[OBJC_IVAR___MRDFastSyncGroupSession_localFastSyncIdentifier];
  *id v20 = 0;
  v20[1] = 0;
  uint64_t v117 = v20;
  os_log_type_t v21 = &v4[OBJC_IVAR___MRDFastSyncGroupSession_leaderFastSyncIdentifier];
  void *v21 = 0;
  v21[1] = 0;
  uint64_t v116 = v21;
  uint64_t v22 = (uint64_t *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_localHandle];
  uint64_t *v22 = 0;
  v22[1] = 0;
  unint64_t v143 = v22;
  unint64_t v23 = (uint64_t *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle];
  uint64_t *v23 = 0;
  v23[1] = 0;
  uint64_t v137 = v23;
  uint64_t v114 = OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToMediaRemoteIdentifierMap;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToMediaRemoteIdentifierMap] = &_swiftEmptyDictionarySingleton;
  uint64_t v115 = OBJC_IVAR___MRDFastSyncGroupSession_participantIdentityMap;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_participantIdentityMap] = &_swiftEmptyDictionarySingleton;
  uint64_t v119 = OBJC_IVAR___MRDFastSyncGroupSession_identities;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_identities] = &_swiftEmptyDictionarySingleton;
  uint64_t v121 = OBJC_IVAR___MRDFastSyncGroupSession_guests;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_guests] = &_swiftEmptySetSingleton;
  uint64_t v123 = OBJC_IVAR___MRDFastSyncGroupSession_pendingParticipants;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_pendingParticipants] = _swiftEmptyArrayStorage;
  uint64_t v125 = OBJC_IVAR___MRDFastSyncGroupSession_connectionManager;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_connectionManager] = 0;
  unint64_t v136 = &v4[OBJC_IVAR___MRDFastSyncGroupSession_prewarmedParticipantIdentifiers];
  *unint64_t v136 = 0;
  uint64_t v126 = OBJC_IVAR___MRDFastSyncGroupSession_presenceTask;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_presenceTask] = 0;
  uint64_t v127 = OBJC_IVAR___MRDFastSyncGroupSession_joinProviderTask;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_joinProviderTask] = 0;
  uint64_t v128 = OBJC_IVAR___MRDFastSyncGroupSession_observeSessionTask;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_observeSessionTask] = 0;
  uint64_t v130 = OBJC_IVAR___MRDFastSyncGroupSession_leaderDiscoveryTimer;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_leaderDiscoveryTimer] = 0;
  uint64_t v132 = (void (*)(char *))OBJC_IVAR___MRDFastSyncGroupSession_expectedRealtimeParticipants;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_expectedRealtimeParticipants] = &_swiftEmptySetSingleton;
  v4[OBJC_IVAR___MRDFastSyncGroupSession_isLowPowerMode] = 0;
  uint64_t v24 = (uint64_t *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
  *uint64_t v24 = 0;
  v24[1] = 0;
  v4[OBJC_IVAR___MRDFastSyncGroupSession_hasEncounteredLowPowerError] = 0;
  uint64_t v129 = OBJC_IVAR___MRDFastSyncGroupSession_removedParticipantIdentityIdentifiers;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_removedParticipantIdentityIdentifiers] = &_swiftEmptySetSingleton;
  uint64_t v131 = OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToPresenceTimeoutTimerMap;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToPresenceTimeoutTimerMap] = &_swiftEmptyDictionarySingleton;
  uint64_t v133 = OBJC_IVAR___MRDFastSyncGroupSession_timedOutParticipantHandles;
  *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_timedOutParticipantHandles] = &_swiftEmptySetSingleton;
  uint64_t v144 = v4;
  dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
  uint64_t v134 = NearbyGroup.localMemberHandle.getter();
  unint64_t v26 = v25;
  swift_release();
  unint64_t v140 = v26;
  if (!v26)
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    sub_10018A9A8(v57, (uint64_t)qword_10047F3A8);
    swift_retain_n();
    uint64_t v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v148 = swift_slowAlloc();
      uint64_t v106 = a4;
      *(_DWORD *)uint64_t v60 = 136446210;
      uint64_t v61 = dispatch thunk of NearbyGroupSessionProvider.id.getter();
      unint64_t v146 = (void *)sub_10018A9E0(v61, v62, &v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v63 = "[MRDFastSyncGroupSession]<%{public}s> Error getting local handle from nearby group.";
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v58, v59, v63, v60, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      swift_unknownObjectRelease();
LABEL_16:
      uint64_t v67 = v144;
      uint64_t v68 = v135;
      uint64_t v69 = (uint64_t)v141;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      sub_1001B9788(v69);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
      sub_1001924CC(*v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      type metadata accessor for MRDFastSyncGroupSession();
      swift_deallocPartialClassInstance();
      return 0;
    }
LABEL_15:

    swift_unknownObjectRelease();
    swift_release_n();
    goto LABEL_16;
  }
  id v27 = objc_msgSend(self, "mr_activeGroupSessionAccount");

  if (!v27)
  {
    swift_bridgeObjectRelease();
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v64 = type metadata accessor for Logger();
    sub_10018A9A8(v64, (uint64_t)qword_10047F3A8);
    swift_retain_n();
    uint64_t v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v148 = swift_slowAlloc();
      uint64_t v106 = a4;
      *(_DWORD *)uint64_t v60 = 136446210;
      uint64_t v65 = dispatch thunk of NearbyGroupSessionProvider.id.getter();
      unint64_t v146 = (void *)sub_10018A9E0(v65, v66, &v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v63 = "[MRDFastSyncGroupSession]<%{public}s> No local IDS account.";
      goto LABEL_14;
    }
    goto LABEL_15;
  }
  uint64_t v129 = v8;
  swift_beginAccess();
  uint64_t v106 = a4;
  swift_unknownObjectWeakAssign();
  uint64_t v28 = v144;
  *(void *)&v144[OBJC_IVAR___MRDFastSyncGroupSession_provider] = a3;
  swift_retain();
  uint64_t v29 = dispatch thunk of NearbyGroupSessionProvider.id.getter();
  id v30 = (uint64_t *)&v28[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
  uint64_t *v30 = v29;
  v30[1] = v31;
  id v32 = v142;
  *(void *)&v28[OBJC_IVAR___MRDFastSyncGroupSession_localIdentity] = v142;
  *(void *)&v28[OBJC_IVAR___MRDFastSyncGroupSession__state] = 0;
  uint64_t v131 = sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
  LODWORD(v133) = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v132 = *(void (**)(char *))(v15 + 104);
  uint64_t v100 = v14;
  v132(v17);
  unint64_t v141 = (char *)v32;
  static DispatchQoS.unspecified.getter();
  unint64_t v146 = _swiftEmptyArrayStorage;
  uint64_t v33 = sub_100015B28((unint64_t *)&qword_10047A1F8, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  id v142 = a3;
  uint64_t v130 = v33;
  sub_100013A80(&qword_10047A200);
  sub_1000155BC((unint64_t *)&qword_10047A208, &qword_10047A200);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&v28[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  ((void (*)(char *, void, uint64_t))v132)(v17, v133, v100);
  static DispatchQoS.unspecified.getter();
  unint64_t v146 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&v28[OBJC_IVAR___MRDFastSyncGroupSession_notificationQueue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  char v34 = v110;
  v28[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] = v110 & 1;
  uint64_t v35 = dispatch thunk of NearbyGroupSessionProvider.id.getter();
  uint64_t v37 = v36;
  objc_allocWithZone((Class)type metadata accessor for PresenceDataSource());
  unint64_t v38 = v140;
  swift_bridgeObjectRetain();
  uint64_t v39 = v134;
  *(void *)&v28[OBJC_IVAR___MRDFastSyncGroupSession_presenceDataSource] = sub_100226A30(v35, v37, v134, v38);
  uint64_t v40 = v143;
  *unint64_t v143 = v39;
  v40[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28[OBJC_IVAR___MRDFastSyncGroupSession_shouldHideLeader] = 0;
  if ((v34 & 1) == 0)
  {

    goto LABEL_18;
  }
  uint64_t v41 = v137;
  uint64_t *v137 = v39;
  v41[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = v101;
  UUID.init()();
  uint64_t v43 = UUID.uuidString.getter();
  uint64_t v45 = v44;
  (*(void (**)(char *, uint64_t))(v102 + 8))(v42, v103);
  uint64_t v46 = v139;
  void *v139 = v43;
  v46[1] = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = v46[1];
  id v48 = v138;
  void *v138 = *v46;
  v48[1] = v47;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  if (v46[1])
  {
    id v50 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
    id v51 = v141;
    swift_bridgeObjectRetain();
    NSString v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v53 = [v50 initWithIdentifier:v52 identity:v51 connected:1 guest:0 hidden:0];

    uint64_t v54 = v135;
    swift_beginAccess();
    uint64_t v55 = *v54;
    *uint64_t v54 = v53;

    uint64_t v56 = v136;
    swift_beginAccess();
    *uint64_t v56 = &_swiftEmptyDictionarySingleton;

    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v71 = (objc_class *)type metadata accessor for MRDFastSyncGroupSession();
    v147.id receiver = v28;
    v147.super_class = v71;
    uint64_t v72 = (char *)objc_msgSendSuper2(&v147, "init");
    type metadata accessor for GroupSessionRemoteControlConnectionManager();
    unint64_t v143 = (uint64_t *)OBJC_IVAR___MRDFastSyncGroupSession_executionQueue;
    uint64_t v144 = v72;
    int v73 = *(void **)&v72[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
    uint64_t v74 = v72;
    swift_bridgeObjectRetain();
    int v75 = v74;
    *(void *)&v75[OBJC_IVAR___MRDFastSyncGroupSession_connectionManager] = sub_1002947C8(v39, v38, v34 & 1, (uint64_t)v75, (uint64_t)&off_100422420, v73);
    swift_release();
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v76 = type metadata accessor for Logger();
    sub_10018A9A8(v76, (uint64_t)qword_10047F3A8);
    os_log_t v77 = v75;
    swift_bridgeObjectRetain_n();
    uint64_t v70 = v77;
    uint64_t v78 = Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = swift_slowAlloc();
      unint64_t v81 = (void *)swift_slowAlloc();
      uint64_t v139 = (void *)swift_slowAlloc();
      uint64_t v145 = (uint64_t)v70;
      unint64_t v146 = v139;
      *(_DWORD *)uint64_t v80 = 138543874;
      uint64_t v82 = v70;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v81 = v70;

      *(_WORD *)(v80 + 12) = 2082;
      uint64_t v84 = *(void *)&v82[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v83 = *(void *)&v82[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v85 = v84;
      unint64_t v38 = v140;
      uint64_t v145 = sub_10018A9E0(v85, v83, (uint64_t *)&v146);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v80 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v145 = sub_10018A9E0(v134, v38, (uint64_t *)&v146);
      uint64_t v39 = v134;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "[%{public}@]<%{public}s> Created with local handle: %{public}s", (uint8_t *)v80, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v86 = v105;
    char v87 = v104;
    uint64_t v88 = *(void **)&v70[OBJC_IVAR___MRDFastSyncGroupSession_presenceDataSource];
    swift_beginAccess();
    id v89 = v88;
    sub_100013A80(&qword_100479F88);
    Published.projectedValue.getter();
    swift_endAccess();

    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000155BC((unint64_t *)&unk_10047A210, &qword_10047A1F0);
    uint64_t v90 = v129;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v90);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    id v91 = objc_msgSend(self, "mr_sharedGroupSessionService");
    unint64_t v92 = *(void **)((char *)v143 + (void)v144);
    uint64_t v93 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v94 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v95 = objc_allocWithZone((Class)MRDGroupSessionPushMessenger);
    id v96 = v92;
    swift_retain();
    swift_retain();
    id v97 = sub_100229794(v91, v39, v38, v96, (uint64_t)sub_100239EF4, v93, (uint64_t)sub_100239F74, v94);
    swift_release();
    swift_release();

    swift_release();
    swift_unknownObjectRelease();
    int v98 = *(void **)&v70[OBJC_IVAR___MRDFastSyncGroupSession_pushMessenger];
    *(void *)&v70[OBJC_IVAR___MRDFastSyncGroupSession_pushMessenger] = v97;

    return (uint64_t)v70;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F6BB0()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = (void *)result;
    uint64_t v36 = v7;
    uint64_t v37 = v5;
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    unint64_t v38 = v3;
    uint64_t v39 = v4;
    uint64_t v10 = type metadata accessor for Logger();
    sub_10018A9A8(v10, (uint64_t)qword_10047F3A8);
    id v11 = v9;
    swift_bridgeObjectRetain_n();
    uint64_t v12 = v11;
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v34 = v1;
      uint64_t v17 = v16;
      uint64_t v18 = (void *)swift_slowAlloc();
      uint64_t v31 = v18;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v40 = v12;
      aBlock[0] = v33;
      *(_DWORD *)uint64_t v17 = 138543874;
      int v32 = v15;
      uint64_t v19 = v12;
      uint64_t v35 = v0;
      id v20 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v18 = v9;

      *(_WORD *)(v17 + 12) = 2082;
      uint64_t v21 = *(void *)&v20[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v22 = *(void *)&v20[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v40 = (void *)sub_10018A9E0(v21, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v23 = Set.description.getter();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      uint64_t v40 = (void *)sub_10018A9E0(v23, v25, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v0 = v35;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v32, "[%{public}@]<%{public}s> Updated presentHandles: %{public}s", (uint8_t *)v17, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v1 = v34;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v12;
    aBlock[4] = (uint64_t)sub_100239FD0;
    aBlock[5] = v26;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_100006760;
    aBlock[3] = (uint64_t)&unk_100423790;
    id v27 = _Block_copy(aBlock);
    uint64_t v28 = v12;
    uint64_t v29 = v36;
    static DispatchQoS.unspecified.getter();
    uint64_t v40 = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    id v30 = v38;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v27);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v30, v0);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v39);

    return swift_release();
  }
  return result;
}

id MRDFastSyncGroupSession.__deallocating_deinit()
{
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10018A9A8(v1, (uint64_t)qword_10047F3A8);
  uint64_t v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138543618;
    uint64_t v14 = (uint64_t)v2;
    uint64_t v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v2;

    *(_WORD *)(v5 + 12) = 2082;
    uint64_t v9 = *(void *)&v7[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v8 = *(void *)&v7[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_10018A9E0(v9, v8, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}@]<%{public}s> Dealloc.", (uint8_t *)v5, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v10 = &v2[OBJC_IVAR___MRDFastSyncGroupSession_cancellables];
  swift_beginAccess();
  *(void *)uint64_t v10 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  id v11 = &v2[OBJC_IVAR___MRDFastSyncGroupSession_sessionCancellables];
  swift_beginAccess();
  *(void *)id v11 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  v13.id receiver = v2;
  v13.super_class = (Class)type metadata accessor for MRDFastSyncGroupSession();
  return objc_msgSendSuper2(&v13, "dealloc");
}

Swift::Void __swiftcall MRDFastSyncGroupSession.start()()
{
}

void sub_1001F7708(void *a1)
{
  uint64_t v2 = type metadata accessor for GroupSessionProviderState();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)((char *)a1 + OBJC_IVAR___MRDFastSyncGroupSession__state))
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10018A9A8(v6, (uint64_t)qword_10047F3A8);
    id v48 = a1;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      v49[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138543618;
      id v50 = v48;
      id v11 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v10 = v48;

      *(_WORD *)(v9 + 12) = 2082;
      uint64_t v12 = *(void *)&v11[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v13 = *(void *)&v11[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      id v50 = (char *)sub_10018A9E0(v12, v13, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%{public}@]<%{public}s> session can only be started from initial state.", (uint8_t *)v9, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v28 = v48;
    }
  }
  else
  {
    id v48 = (char *)OBJC_IVAR___MRDFastSyncGroupSession__state;
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    int v15 = sub_10018A9A8(v14, (uint64_t)qword_10047F3A8);
    uint64_t v16 = a1;
    os_log_t v47 = v15;
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      uint64_t v43 = v21;
      uint64_t v44 = swift_slowAlloc();
      v49[0] = v44;
      *(_DWORD *)uint64_t v20 = 138543618;
      uint64_t v45 = v3;
      uint64_t v46 = v2;
      id v50 = v16;
      unint64_t v22 = v16;
      int v42 = v19;
      uint64_t v23 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v21 = v16;

      *(_WORD *)(v20 + 12) = 2082;
      unint64_t v24 = v17;
      uint64_t v26 = *(void *)&v23[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v25 = *(void *)&v23[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v27 = v26;
      uint64_t v2 = v46;
      id v50 = (char *)sub_10018A9E0(v27, v25, v49);
      uint64_t v3 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v42, "[%{public}@]<%{public}s> Starting", (uint8_t *)v20, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_retain();
    uint64_t v29 = dispatch thunk of NearbyGroupSessionProvider.state.getter();
    swift_release();
    v49[0] = v29;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100013A80(&qword_10047A1D8);
    sub_1000155BC((unint64_t *)&unk_10047A1E0, &qword_10047A1D8);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_retain();
    dispatch thunk of NearbyGroupSessionProvider.state.getter();
    swift_release();
    CurrentValueSubject.value.getter();
    swift_release();
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v3 + 88))(v5, v2) == enum case for GroupSessionProviderState.invalidated(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
      uint64_t v30 = *v5;
      uint64_t v31 = v16;
      int v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        os_log_t v47 = v32;
        uint64_t v35 = (void *)v46;
        id v48 = (char *)swift_slowAlloc();
        v49[0] = (uint64_t)v48;
        *(_DWORD *)uint64_t v34 = 138412546;
        id v50 = v31;
        uint64_t v36 = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v35 = v16;

        *(_WORD *)(v34 + 12) = 2082;
        uint64_t v37 = *(void *)&v36[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        unint64_t v38 = *(void *)&v36[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        swift_bridgeObjectRetain();
        id v50 = (char *)sub_10018A9E0(v37, v38, v49);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_t v39 = v47;
        _os_log_impl((void *)&_mh_execute_header, v47, v33, "[%@]<%{public}s> Provider invalidated on start", (uint8_t *)v34, 0x16u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      swift_errorRetain();
      sub_100215528(v30);
      swift_errorRelease();
      swift_errorRelease();
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v40 = *(void **)&v48[(void)a1];
      *(void *)&v48[(void)a1] = 1;
      sub_1001F44E0(v40);
      if ((v16[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] & 1) == 0) {
        sub_100216338();
      }
    }
  }
}

uint64_t sub_1001F7FD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  __chkstk_darwin(v6);
  os_log_type_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupSessionProviderState();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v14 = (void *)result;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9) == enum case for GroupSessionProviderState.invalidated(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
      uint64_t v36 = *v12;
      if (qword_10047F3A0 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_10018A9A8(v15, (uint64_t)qword_10047F3A8);
      uint64_t v16 = v14;
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.info.getter();
      int v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        uint64_t v33 = v2;
        unint64_t v22 = v21;
        v31[1] = v21;
        uint64_t v34 = swift_slowAlloc();
        os_log_t v39 = v16;
        aBlock[0] = v34;
        *(_DWORD *)uint64_t v20 = 138543618;
        int v32 = v19;
        uint64_t v35 = v3;
        v31[0] = v17;
        uint64_t v23 = v16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v22->Class isa = (Class)v14;
        uint64_t v2 = v33;

        *(_WORD *)(v20 + 12) = 2082;
        uint64_t v24 = *(void *)&v23[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        unint64_t v25 = *(void *)&v23[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        swift_bridgeObjectRetain();
        os_log_t v39 = (void *)sub_10018A9E0(v24, v25, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        uint64_t v3 = v35;
        swift_bridgeObjectRelease();
        os_log_t v26 = v31[0];
        _os_log_impl((void *)&_mh_execute_header, v31[0], (os_log_type_t)v32, "[%{public}@]<%{public}s> Provider state invalidated", (uint8_t *)v20, 0x16u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v35 = *(void *)((char *)v16 + OBJC_IVAR___MRDFastSyncGroupSession_executionQueue);
      uint64_t v27 = swift_allocObject();
      uint64_t v28 = v36;
      *(void *)(v27 + 16) = v16;
      *(void *)(v27 + 24) = v28;
      aBlock[4] = (uint64_t)sub_10023A538;
      aBlock[5] = v27;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = (uint64_t)sub_100006760;
      aBlock[3] = (uint64_t)&unk_1004236F0;
      uint64_t v29 = _Block_copy(aBlock);
      uint64_t v30 = v16;
      swift_errorRetain();
      static DispatchQoS.unspecified.getter();
      os_log_t v39 = _swiftEmptyArrayStorage;
      sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100013A80((uint64_t *)&unk_100479AE0);
      sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v29);
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v38);

      return swift_release();
    }
    else
    {

      return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  return result;
}

uint64_t sub_1001F8648()
{
  return sub_1001FE3B0((uint64_t)&unk_100422E68, (uint64_t)sub_10023939C, (uint64_t)&unk_100422E80);
}

uint64_t sub_1001F8670(void *a1)
{
  uint64_t v2 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10018A9A8(v5, (uint64_t)qword_10047F3A8);
  uint64_t v6 = a1;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    unint64_t v22 = v10;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = (uint64_t)v6;
    uint64_t v25 = v23;
    *(_DWORD *)uint64_t v9 = 138543618;
    uint64_t v11 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v10 = v6;

    *(_WORD *)(v9 + 12) = 2082;
    uint64_t v12 = v4;
    uint64_t v14 = *(void *)&v11[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v13 = *(void *)&v11[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_10018A9E0(v14, v13, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v4 = v12;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%{public}@]<%{public}s> Started observing session.", (uint8_t *)v9, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1001F43DC();
  uint64_t v15 = sub_1001F409C();
  uint64_t v16 = swift_release();
  (*(void (**)(uint64_t))((swift_isaMask & *v15) + 0xC0))(v16);

  uint64_t v17 = OBJC_IVAR___MRDFastSyncGroupSession_observeSessionTask;
  if (*(void *)&v6[OBJC_IVAR___MRDFastSyncGroupSession_observeSessionTask])
  {
    swift_retain();
    sub_100013A80(&qword_100478740);
    Task.cancel()();
    swift_release();
  }
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  int v19 = (void *)swift_allocObject();
  uint64_t v19[2] = 0;
  v19[3] = 0;
  v19[4] = v6;
  uint64_t v20 = v6;
  *(void *)&v6[v17] = sub_100196EE0((uint64_t)v4, (uint64_t)&unk_10047A140, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1001F8A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  uint64_t v5 = sub_100013A80(&qword_10047A148);
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_100013A80(&qword_10047A150);
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  return _swift_task_switch(sub_1001F8B68, 0, 0);
}

uint64_t sub_1001F8B68()
{
  uint64_t v1 = (char *)v0[13];
  if (v1[OBJC_IVAR___MRDFastSyncGroupSession_isLeader])
  {
    id v2 = 0;
  }
  else
  {
    uint64_t v3 = *(void **)&v1[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    id v5 = objc_allocWithZone((Class)MSVTimer);
    v0[6] = sub_100239478;
    v0[7] = v4;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100006760;
    v0[5] = &unk_100422EF8;
    uint64_t v6 = _Block_copy(v0 + 2);
    id v7 = v3;
    uint64_t v8 = v1;
    swift_release();
    id v2 = [v5 initWithInterval:0 repeats:v7 queue:v6 block:20.0];

    _Block_release(v6);
  }
  v0[20] = v2;
  uint64_t v10 = v0[15];
  uint64_t v9 = v0[16];
  uint64_t v11 = v0[14];
  swift_retain();
  sub_100013A80(&qword_1004799C0);
  sub_1000155BC(&qword_10047A018, &qword_1004799C0);
  GroupSessionProvider.sessions.getter();
  swift_release();
  GroupSession.Sessions.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  uint64_t v14 = (char *)&dword_10047A158 + dword_10047A158;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[21] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1001F8DD8;
  return ((uint64_t (*)(void, void, void *))v14)(0, 0, v0 + 8);
}

uint64_t sub_1001F8DD8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 176) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001F8ED8, 0, 0);
}

uint64_t sub_1001F8ED8()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 + 176);
  if (v1)
  {
    [*(id *)(v0 + 160) invalidate];
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    id v2 = *(void **)(v0 + 104);
    uint64_t v3 = type metadata accessor for Logger();
    sub_10018A9A8(v3, (uint64_t)qword_10047F3A8);
    id v4 = v2;
    swift_retain_n();
    id v5 = v4;
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void **)(v0 + 104);
    if (v8)
    {
      os_log_type_t type = v7;
      uint64_t v10 = swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138543874;
      *(void *)(v0 + 72) = v9;
      uint64_t v11 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v25 = v9;

      *(_WORD *)(v10 + 12) = 2082;
      uint64_t v12 = *(void *)&v11[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v13 = *(void *)&v11[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 80) = sub_10018A9E0(v12, v13, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v10 + 22) = 2082;
      *(void *)(v0 + 88) = v1;
      sub_100013A80(&qword_10047A160);
      sub_1000155BC(&qword_10047A168, &qword_10047A160);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 96) = sub_10018A9E0(v14, v15, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v6, type, "[%{public}@]<%{public}s> Provider gave session %{public}s.", (uint8_t *)v10, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    sub_1001F43DC();
    uint64_t v16 = sub_1001F409C();
    uint64_t v17 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v16) + 0xD0))(v17);

    sub_1001F43DC();
    uint64_t v18 = sub_1001F40FC();
    uint64_t v19 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v18) + 0xC0))(v19);

    sub_1001F4464();
    uint64_t v20 = sub_1001F42C8();
    uint64_t v21 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v20) + 0xC0))(v21);

    sub_100204DCC(v1);
    swift_release();
  }
  unint64_t v22 = *(void **)(v0 + 160);
  (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_1001F9394(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_100013A80(&qword_10047A150);
  uint64_t v4 = sub_1000155BC(&qword_10047A170, &qword_10047A150);
  id v5 = (void *)swift_task_alloc();
  v2[6] = v5;
  *id v5 = v2;
  v5[1] = sub_100196B8C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v2 + 2, v3, v4);
}

Swift::Void __swiftcall MRDFastSyncGroupSession.end()()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  BOOL v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v7) = v0[OBJC_IVAR___MRDFastSyncGroupSession_isLeader];
  v14[0] = *(void *)&v0[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  if (v7 == 1)
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v0;
    uint64_t v19 = sub_10022F3BC;
    uint64_t v20 = v9;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    uint64_t v10 = &unk_100421DE0;
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v0;
    uint64_t v19 = sub_10022F394;
    uint64_t v20 = v11;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    uint64_t v10 = &unk_100421D90;
  }
  uint64_t v17 = sub_100006760;
  uint64_t v18 = v10;
  uint64_t v12 = _Block_copy(&aBlock);
  unint64_t v13 = v0;
  static DispatchQoS.unspecified.getter();
  v14[1] = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
}

void *sub_1001F97C4(char *a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for Participants();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)&a1[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger];
  if (v10)
  {
    swift_retain();
    unsigned __int8 v12 = MRDFastSyncGroupSessionState.rawValue.getter(4, 0, 0xC000000000000000, v11);
    unint64_t v47 = v14;
    uint64_t v48 = v13;
    sub_100289DF4(v12);
    unint64_t v49 = v16;
    uint64_t v50 = v15;
    uint64_t v17 = *(void (**)(char *, void, uint64_t))(v7 + 104);
    uint64_t v51 = v6;
    v17(v9, enum case for Participants.all(_:), v6);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    uint64_t v19 = *(void **)&a1[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
    *uint64_t v5 = v19;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
    uint64_t v20 = a1;
    id v21 = v19;
    LOBYTE(v19) = _dispatchPreconditionTest(_:)();
    uint64_t result = (void *)(*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v19)
    {
      uint64_t v23 = (void *)swift_allocObject();
      void v23[2] = v20;
      v23[3] = sub_100239E28;
      v23[4] = v18;
      uint64_t v24 = v20;
      swift_retain();
      unint64_t v26 = v49;
      uint64_t v25 = v50;
      v46[1] = v10;
      GroupSessionMessenger.send(_:to:completion:)();
      swift_release();
      swift_release();
      sub_10018FE9C(v25, v26);
      uint64_t result = (void *)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v51);
      uint64_t v27 = *(void **)&v24[OBJC_IVAR___MRDFastSyncGroupSession_pushMessenger];
      if (v27)
      {
        sub_100013A80((uint64_t *)&unk_100479B10);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1003C5F10;
        id v29 = v27;
        uint64_t v30 = sub_1002899FC();
        uint64_t v31 = *((void *)v30 + 1);
        uint64_t v52 = *(void *)v30;
        uint64_t v53 = v31;
        swift_bridgeObjectRetain_n();
        AnyHashable.init<A>(_:)();
        int v32 = sub_100289A68();
        uint64_t v34 = *(void *)v32;
        uint64_t v33 = *((void *)v32 + 1);
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 72) = v34;
        *(void *)(inited + 80) = v33;
        swift_bridgeObjectRetain();
        uint64_t v35 = (uint64_t *)sub_100289A2C();
        uint64_t v36 = v35[1];
        uint64_t v52 = *v35;
        uint64_t v53 = v36;
        swift_bridgeObjectRetain_n();
        AnyHashable.init<A>(_:)();
        uint64_t v38 = *(void *)&v24[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        uint64_t v37 = *(void *)&v24[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        *(void *)(inited + 168) = &type metadata for String;
        *(void *)(inited + 144) = v38;
        *(void *)(inited + 152) = v37;
        swift_bridgeObjectRetain();
        os_log_t v39 = sub_1002899F0();
        uint64_t v40 = *((void *)v39 + 1);
        uint64_t v52 = *(void *)v39;
        uint64_t v53 = v40;
        swift_bridgeObjectRetain_n();
        uint64_t result = (void *)AnyHashable.init<A>(_:)();
        uint64_t v41 = *(void *)&v24[OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8];
        if (v41)
        {
          uint64_t v42 = *(void *)&v24[OBJC_IVAR___MRDFastSyncGroupSession_localHandle];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)(inited + 240) = &type metadata for String;
          *(void *)(inited + 216) = v42;
          *(void *)(inited + 224) = v41;
          sub_100189560(inited);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          swift_beginAccess();
          uint64_t v44 = swift_bridgeObjectRetain();
          sub_10018871C(v44);
          Class v45 = Set._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v29 sendMessage:isa toDestinations:v45];

          sub_10018FE9C(v48, v47);
          return (void *)swift_release();
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  return sub_100215528(0);
}

uint64_t sub_1001F9CB0(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v41 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v40 = v8;
    swift_errorRetain();
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10018A9A8(v11, (uint64_t)qword_10047F3A8);
    id v12 = a2;
    swift_errorRetain();
    id v13 = v12;
    swift_errorRetain();
    unint64_t v14 = v13;
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v39 = v4;
      uint64_t v19 = v18;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v36 = a2;
      id v21 = v7;
      unint64_t v22 = (void *)v20;
      uint64_t v33 = v20;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v42 = v14;
      aBlock[0] = v37;
      *(_DWORD *)uint64_t v19 = 138543874;
      uint64_t v38 = v5;
      int v35 = v17;
      uint64_t v23 = v14;
      os_log_t v34 = v15;
      uint64_t v24 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v22 = v14;
      uint64_t v7 = v21;
      a2 = v36;

      *(_WORD *)(v19 + 12) = 2082;
      uint64_t v25 = *(void *)&v24[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v26 = *(void *)&v24[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v42 = (void *)sub_10018A9E0(v25, v26, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v5 = v38;
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2114;
      swift_errorRetain();
      uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v42 = (void *)v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)(v33 + 8) = v27;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v28 = v34;
      _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v35, "[%{public}@]<%{public}s> SessionEndMessage send error %{public}@.", (uint8_t *)v19, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v4 = v39;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v8 = v40;
  }
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a2;
  aBlock[4] = (uint64_t)sub_10023A2A0;
  aBlock[5] = v29;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_100006760;
  aBlock[3] = (uint64_t)&unk_1004236A0;
  uint64_t v30 = _Block_copy(aBlock);
  id v31 = a2;
  static DispatchQoS.unspecified.getter();
  uint64_t v42 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v8);
  return swift_release();
}

unint64_t sub_1001FA23C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100013A80(&qword_100479F78);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100013660(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    id v12 = (void *)(v2[7] + 16 * result);
    *id v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FA360(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100013A80((uint64_t *)&unk_10047B7F0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1001E71E8(v6, (uint64_t)&v15, &qword_100479F00);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100013660(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10018FF5C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FA498(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100013A80(a2);
  uint64_t v5 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v8 = *(v7 - 2);
    uint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10022A144(v8, a3);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v5[6] + 8 * result) = v8;
    BOOL v13 = (void *)(v5[7] + 16 * result);
    *BOOL v13 = v9;
    v13[1] = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v7 += 3;
    v5[2] = v16;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t MRDFastSyncGroupSession.prewarm(for:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v8 = UUID.uuidString.getter();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v11 = *(NSObject **)&v2[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  char v12 = (void *)swift_allocObject();
  v12[2] = v2;
  uint64_t v12[3] = v8;
  v12[4] = v10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10022F3C8;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_10023A22C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1001F4BF0;
  aBlock[3] = &unk_100421E58;
  uint64_t v14 = _Block_copy(aBlock);
  BOOL v15 = v2;
  swift_bridgeObjectRetain();
  id v16 = a1;
  swift_retain();
  swift_release();
  dispatch_async_and_wait(v11, v14);
  _Block_release(v14);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((a1 & 1) == 0) {
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001FA828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10022D270(a1, a2, a3, isUniquelyReferenced_nonNull_native, &qword_10047A078);
    *uint64_t v3 = v16;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_100013660(a2, a3);
    char v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
    {
      char v12 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = *v3;
      uint64_t v17 = *v4;
      uint64_t *v4 = 0x8000000000000000;
      if ((v12 & 1) == 0)
      {
        sub_10022C894(&qword_10047A078);
        uint64_t v13 = v17;
      }
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void **)(*(void *)(v13 + 56) + 8 * v9);
      sub_1001F1A4C(v9, v13);
      uint64_t *v4 = v13;

      swift_bridgeObjectRelease();
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t MRDFastSyncGroupSession.cancel(prewarmedIdentifier:for:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *(NSObject **)&v3[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = v3;
  v8[3] = a1;
  v8[4] = a2;
  void v8[5] = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10022F9B0;
  *(void *)(v9 + 24) = v8;
  v15[4] = sub_10023A22C;
  v15[5] = v9;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  _OWORD v15[2] = sub_1001F4BF0;
  uint64_t v15[3] = &unk_100421ED0;
  char v10 = _Block_copy(v15);
  char v11 = v3;
  swift_bridgeObjectRetain();
  id v12 = a3;
  swift_retain();
  swift_release();
  dispatch_async_and_wait(v7, v10);
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall MRDFastSyncGroupSession.prepareForAddedMember()()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v30 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10018A9A8(v6, (uint64_t)qword_10047F3A8);
  uint64_t v7 = v0;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  int v10 = v9;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v11 = swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    uint64_t v25 = v12;
    uint64_t v27 = swift_slowAlloc();
    int v32 = v7;
    aBlock[0] = v27;
    *(_DWORD *)uint64_t v11 = 138543874;
    os_log_t v26 = v8;
    uint64_t v13 = v7;
    uint64_t v28 = v1;
    uint64_t v14 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v12 = v7;

    *(_WORD *)(v11 + 12) = 2082;
    int v24 = v10;
    uint64_t v15 = v2;
    uint64_t v16 = *(void *)&v14[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v17 = *(void *)&v14[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    int v32 = (void *)sub_10018A9E0(v16, v17, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v1 = v28;
    uint64_t v2 = v15;
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2080;
    int v32 = (void *)sub_10018A9E0(0xD000000000000017, 0x80000001003B56F0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_t v18 = v26;
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v24, "[%{public}@]<%{public}s> %s", (uint8_t *)v11, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v7;
  aBlock[4] = (uint64_t)sub_1002302B8;
  aBlock[5] = v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_100006760;
  aBlock[3] = (uint64_t)&unk_100421F20;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v7;
  unint64_t v22 = v30;
  static DispatchQoS.unspecified.getter();
  int v32 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v22, v29);
  swift_release();
}

uint64_t MRDFastSyncGroupSession.shouldAutomaticallyApprove(identity:)(void *a1)
{
  unsigned __int8 v13 = 0;
  uint64_t v3 = *(NSObject **)&v1[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v1;
  v4[3] = a1;
  v4[4] = &v13;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100230340;
  *(void *)(v5 + 24) = v4;
  aBlock[4] = sub_10023A22C;
  aBlock[5] = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1001F4BF0;
  aBlock[3] = &unk_100421F98;
  uint64_t v6 = _Block_copy(aBlock);
  uint64_t v7 = v1;
  id v8 = a1;
  swift_retain();
  swift_release();
  dispatch_async_and_wait(v3, v6);
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13;
    swift_release();
    return v11;
  }
  return result;
}

Swift::Void __swiftcall MRDFastSyncGroupSession.removeParticipant(identifier:)(Swift::String identifier)
{
}

void sub_1001FB360(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_100232D8C(v9, a2, a3);
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRelease();
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10018A9A8(v13, (uint64_t)qword_10047F3A8);
    id v14 = a1;
    swift_bridgeObjectRetain_n();
    uint64_t v15 = (char *)v14;
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v43 = v20;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v46 = (uint64_t)v15;
      v47[0] = v44;
      *(_DWORD *)uint64_t v19 = 138543874;
      uint64_t v45 = v10;
      id v21 = v15;
      HIDWORD(v42) = v18;
      unint64_t v22 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v20 = v15;

      *(_WORD *)(v19 + 12) = 2082;
      uint64_t v23 = v8;
      uint64_t v24 = *(void *)&v22[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v25 = *(void *)&v22[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_10018A9E0(v24, v25, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      id v8 = v23;
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_10018A9E0(v45, v12, v47);
      uint64_t v10 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, BYTE4(v42), "[%{public}@]<%{public}s> Removing member with handle: %{public}s.", (uint8_t *)v19, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v38 = *(void *)&v15[OBJC_IVAR___MRDFastSyncGroupSession_provider];
    uint64_t v39 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v8, 1, 1, v39);
    uint64_t v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v41 = (void *)swift_allocObject();
    v41[2] = 0;
    v41[3] = 0;
    v41[4] = v38;
    v41[5] = v10;
    v41[6] = v12;
    v41[7] = v40;
    swift_retain();
    sub_10018A588((uint64_t)v8, (uint64_t)&unk_10047A1D0, (uint64_t)v41);
    swift_release();
  }
  else
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10018A9A8(v26, (uint64_t)qword_10047F3A8);
    id v27 = a1;
    swift_bridgeObjectRetain_n();
    id v28 = v27;
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      LODWORD(v44) = v31;
      uint64_t v33 = v32;
      os_log_t v34 = (void *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = (uint64_t)v28;
      v47[0] = v45;
      *(_DWORD *)uint64_t v33 = 138543874;
      int v35 = (char *)v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v34 = v28;

      *(_WORD *)(v33 + 12) = 2082;
      uint64_t v36 = *(void *)&v35[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v37 = *(void *)&v35[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_10018A9E0(v36, v37, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_10018A9E0(a2, a3, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v44, "[%{public}@]<%{public}s> Could not find participant for identifier %{public}s.", (uint8_t *)v33, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1001FBA08(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v5 = type metadata accessor for Participant();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v38 = (char *)&v31 - v10;
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v34 = a1 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v33 = a2;
  uint64_t v15 = &a2[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle];
  int64_t v35 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v37 = v6 + 16;
  uint64_t v39 = v6 + 32;
  uint64_t v40 = a1;
  swift_bridgeObjectRetain();
  int64_t v16 = 0;
  for (i = v15; ; uint64_t v15 = i)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_23;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v20 >= v35) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v35) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v34 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v35) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v34 + 8 * v16);
        if (!v21)
        {
          int64_t v16 = v20 + 3;
          if (v20 + 3 >= v35) {
            goto LABEL_28;
          }
          unint64_t v21 = *(void *)(v34 + 8 * v16);
          if (!v21)
          {
            int64_t v22 = v20 + 4;
            if (v22 >= v35)
            {
LABEL_28:
              swift_release();
              uint64_t v28 = 1;
              uint64_t v29 = v33;
              os_log_type_t v30 = v32;
              goto LABEL_31;
            }
            unint64_t v21 = *(void *)(v34 + 8 * v22);
            int64_t v16 = v22;
            if (!v21) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_23:
    uint64_t v23 = v38;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v38, *(void *)(v40 + 48) + *(void *)(v6 + 72) * v19, v5);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v24(v9, v23, v5);
    uint64_t v25 = Participant.handle.getter();
    uint64_t v27 = *((void *)v15 + 1);
    if (v27)
    {
      if (v25 == *(void *)v15 && v27 == v26)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v17)
      {
        swift_release();
LABEL_30:
        os_log_type_t v30 = v32;
        v24(v32, v9, v5);
        uint64_t v28 = 0;
        uint64_t v29 = v33;
LABEL_31:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v30, v28, 1, v5);

        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v35) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_1001FBD98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  os_log_type_t v30 = a4;
  uint64_t v38 = a2;
  uint64_t v6 = type metadata accessor for NearbyGroup.Member();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v31 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v34 = v7 + 16;
  uint64_t v36 = v7 + 32;
  uint64_t v37 = a1;
  int64_t v32 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v33 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t j = 0;
  uint64_t v35 = a3;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (j << 6); ; unint64_t i = __clz(__rbit64(v22)) + (j << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(void *)(v37 + 48) + *(void *)(v7 + 72) * i, v6);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v24(v10, v12, v6);
    if (NearbyGroup.Member.handle.getter() == v38 && v25 == a3)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v27 = v30;
      v24(v30, v10, v6);
      uint64_t v28 = 0;
LABEL_29:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v27, v28, 1, v6);
      return swift_bridgeObjectRelease();
    }
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v26)
    {
      swift_release();
      goto LABEL_27;
    }
    uint64_t result = (*v33)(v10, v6);
    a3 = v35;
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = j + 1;
    if (__OFADD__(j, 1)) {
      break;
    }
    if (v21 >= v32) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v31 + 8 * v21);
    ++j;
    if (v22) {
      goto LABEL_19;
    }
    int64_t j = v21 + 1;
    if (v21 + 1 >= v32) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v31 + 8 * j);
    if (v22) {
      goto LABEL_19;
    }
    int64_t j = v21 + 2;
    if (v21 + 2 >= v32) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v31 + 8 * j);
    if (v22) {
      goto LABEL_19;
    }
    int64_t j = v21 + 3;
    if (v21 + 3 >= v32) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v31 + 8 * j);
    if (v22) {
      goto LABEL_19;
    }
    int64_t v23 = v21 + 4;
    if (v23 >= v32)
    {
LABEL_28:
      swift_release();
      uint64_t v28 = 1;
      uint64_t v27 = v30;
      goto LABEL_29;
    }
    unint64_t v22 = *(void *)(v31 + 8 * v23);
    for (int64_t j = v23; !v22; ++v23)
    {
      int64_t j = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_31;
      }
      if (j >= v32) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v31 + 8 * j);
    }
LABEL_19:
    unint64_t v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1001FC108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(uint64_t)@<X3>, char *a5@<X8>)
{
  uint64_t v37 = a4;
  int64_t v32 = a5;
  uint64_t v40 = a2;
  uint64_t v6 = a3(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v33 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v36 = v7 + 16;
  uint64_t v38 = v7 + 32;
  uint64_t v39 = a1;
  int64_t v34 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v35 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t j = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (j << 6); ; unint64_t i = __clz(__rbit64(v22)) + (j << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(void *)(v39 + 48) + *(void *)(v7 + 72) * i, v6);
    uint64_t v24 = *(uint64_t (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v25 = v24(v10, v12, v6);
    uint64_t v26 = v37(v25);
    if (v26 == *(void *)(v40 + 16) && v27 == *(void *)(v40 + 24))
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      os_log_type_t v30 = v32;
      v24(v32, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v6);
      return swift_release();
    }
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v29)
    {
      swift_release();
      goto LABEL_29;
    }
    uint64_t result = (*v35)(v10, v6);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = j + 1;
    if (__OFADD__(j, 1)) {
      break;
    }
    if (v21 >= v34) {
      goto LABEL_30;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v21);
    ++j;
    if (v22) {
      goto LABEL_19;
    }
    int64_t j = v21 + 1;
    if (v21 + 1 >= v34) {
      goto LABEL_30;
    }
    unint64_t v22 = *(void *)(v33 + 8 * j);
    if (v22) {
      goto LABEL_19;
    }
    int64_t j = v21 + 2;
    if (v21 + 2 >= v34) {
      goto LABEL_30;
    }
    unint64_t v22 = *(void *)(v33 + 8 * j);
    if (v22) {
      goto LABEL_19;
    }
    int64_t j = v21 + 3;
    if (v21 + 3 >= v34) {
      goto LABEL_30;
    }
    unint64_t v22 = *(void *)(v33 + 8 * j);
    if (v22) {
      goto LABEL_19;
    }
    int64_t v23 = v21 + 4;
    if (v23 >= v34)
    {
LABEL_30:
      swift_release();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v32, 1, 1, v6);
      return swift_release();
    }
    unint64_t v22 = *(void *)(v33 + 8 * v23);
    for (int64_t j = v23; !v22; ++v23)
    {
      int64_t j = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_33;
      }
      if (j >= v34) {
        goto LABEL_30;
      }
      unint64_t v22 = *(void *)(v33 + 8 * j);
    }
LABEL_19:
    unint64_t v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1001FC474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  return _swift_task_switch(sub_1001FC498, 0, 0);
}

uint64_t sub_1001FC498()
{
  v0[12] = dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  void *v1 = v0;
  v1[1] = sub_1001FC540;
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  return NearbyGroup.kickMember(_:)(v3, v2);
}

uint64_t sub_1001FC540()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1001FC67C, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1001FC67C()
{
  int64_t v20 = v0;
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10018A9A8(v3, (uint64_t)qword_10047F3A8);
    id v4 = v2;
    swift_bridgeObjectRetain_n();
    id v5 = v4;
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    unint64_t v9 = v0[10];
    if (v8)
    {
      uint64_t v18 = v0[9];
      uint64_t v10 = swift_slowAlloc();
      os_log_type_t type = v7;
      uint64_t v11 = (void *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138543874;
      v0[5] = v5;
      uint64_t v12 = (char *)v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v11 = v2;

      *(_WORD *)(v10 + 12) = 2080;
      uint64_t v13 = *(void *)&v12[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v14 = *(void *)&v12[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      v0[6] = sub_10018A9E0(v13, v14, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v10 + 22) = 2082;
      swift_bridgeObjectRetain();
      v0[7] = sub_10018A9E0(v18, v9, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v6, type, "[%{public}@]<%s> Failed to remove member: %{public}s.", (uint8_t *)v10, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

id MRDFastSyncGroupSession.markParticipantAsGuestIfNeeded(_:)(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 guest];
  if (result)
  {
    v15[0] = *(void *)&v1[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v1;
    *(void *)(v12 + 24) = a1;
    aBlock[4] = sub_1002306F4;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_100006760;
    aBlock[3] = &unk_100422038;
    uint64_t v13 = _Block_copy(aBlock);
    unint64_t v14 = v1;
    swift_unknownObjectRetain();
    static DispatchQoS.unspecified.getter();
    v15[1] = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (id)swift_release();
  }
  return result;
}

uint64_t MRDFastSyncGroupSession.addPendingParticipant(_:)(uint64_t a1)
{
  return sub_1001FCE5C(a1, (uint64_t)&unk_100422070, (uint64_t)sub_1002307AC, (uint64_t)&unk_100422088);
}

void sub_1001FCD3C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

uint64_t MRDFastSyncGroupSession.removePendingParticipant(_:)(uint64_t a1)
{
  return sub_1001FCE5C(a1, (uint64_t)&unk_1004220C0, (uint64_t)sub_100230B14, (uint64_t)&unk_1004220D8);
}

uint64_t MRDFastSyncGroupSession.remoteApprovePendingParticipant(_:)(uint64_t a1)
{
  return sub_1001FCE5C(a1, (uint64_t)&unk_100422110, (uint64_t)sub_100230EB4, (uint64_t)&unk_100422128);
}

uint64_t MRDFastSyncGroupSession.remoteRejectPendingParticipant(_:)(uint64_t a1)
{
  return sub_1001FCE5C(a1, (uint64_t)&unk_100422160, (uint64_t)sub_100230EF4, (uint64_t)&unk_100422178);
}

uint64_t sub_1001FCE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  unint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v4;
  *(void *)(v15 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_100006760;
  aBlock[3] = a4;
  unint64_t v16 = _Block_copy(aBlock);
  char v17 = v4;
  swift_unknownObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v21 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  return swift_release();
}

void sub_1001FD118(void *a1, void *a2, const char *a3, int a4)
{
  int v62 = a4;
  unint64_t v66 = a3;
  uint64_t v6 = type metadata accessor for Participants();
  uint64_t v63 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100013A80(&qword_100479B20);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Participant();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v61 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = sub_10018A9A8(v15, (uint64_t)qword_10047F3A8);
  id v17 = a1;
  swift_unknownObjectRetain_n();
  uint64_t v18 = (char *)v17;
  uint64_t v67 = v16;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v64 = v11;
  uint64_t v65 = v13;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v60 = v6;
    uint64_t v24 = (void *)v23;
    v56[1] = v23;
    uint64_t v57 = swift_slowAlloc();
    uint64_t v68 = (uint64_t)v18;
    uint64_t v69 = v57;
    *(_DWORD *)uint64_t v22 = 138543874;
    uint64_t v58 = v12;
    os_log_type_t v59 = v8;
    uint64_t v25 = a2;
    uint64_t v26 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v24 = v18;

    *(_WORD *)(v22 + 12) = 2082;
    uint64_t v28 = *(void *)&v26[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v27 = *(void *)&v26[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_10018A9E0(v28, v27, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2080;
    id v29 = [v25 description];
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v32 = v31;

    a2 = v25;
    uint64_t v33 = v30;
    uint64_t v8 = v59;
    uint64_t v68 = sub_10018A9E0(v33, v32, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    uint64_t v12 = v58;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, v66, (uint8_t *)v22, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    uint64_t v6 = v60;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  if (*(void *)&v18[OBJC_IVAR___MRDFastSyncGroupSession_groupSession])
  {
    uint64_t v34 = *(void *)&v18[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger];
    if (v34)
    {
      swift_retain();
      swift_retain();
      uint64_t v35 = GroupSession.activeParticipants.getter();
      uint64_t v36 = v18;
      uint64_t v37 = v64;
      unint64_t v66 = v36;
      sub_1001FBA08(v35, v36, v64);
      swift_bridgeObjectRelease();
      uint64_t v38 = v65;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v37, 1, v12) != 1)
      {
        uint64_t v48 = v61;
        (*(void (**)(void))(v38 + 32))();
        id v49 = [a2 identifier];
        uint64_t v50 = v38;
        id v51 = v49;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10028ACC4();
        id v55 = sub_10028AE3C(v53, v54, v52 & 1);
        swift_bridgeObjectRelease();
        static Participants.only(_:)();
        sub_10021E92C(8u, v55, (uint64_t)v8, v34, 0, 0);

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v8, v6);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v12);
        return;
      }
      swift_release();
      swift_release();
      sub_100009A08((uint64_t)v37, &qword_100479B20);
    }
  }
  uint64_t v39 = v18;
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v68 = (uint64_t)v39;
    uint64_t v69 = v44;
    *(_DWORD *)uint64_t v42 = 138543618;
    uint64_t v45 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v43 = v39;

    *(_WORD *)(v42 + 12) = 2082;
    uint64_t v46 = *(void *)&v45[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v47 = *(void *)&v45[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_10018A9E0(v46, v47, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "[%{public}@]<%{public}s> Unable to message leader", (uint8_t *)v42, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

Swift::Void __swiftcall MRDFastSyncGroupSession.remoteRemoveParticipant(identifier:)(Swift::String identifier)
{
}

uint64_t sub_1001FD8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v20[0] = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)&v5[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = v5;
  v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = a4;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_100006760;
  aBlock[3] = v20[0];
  id v17 = _Block_copy(aBlock);
  uint64_t v18 = v5;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

void sub_1001FDBBC(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v57 = a2;
  uint64_t v5 = type metadata accessor for Participants();
  uint64_t v54 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100013A80(&qword_100479B20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Participant();
  uint64_t v56 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_10018A9A8(v13, (uint64_t)qword_10047F3A8);
  id v15 = a1;
  swift_bridgeObjectRetain_n();
  uint64_t v16 = (char *)v15;
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v55 = v14;
    uint64_t v20 = v19;
    uint64_t v21 = (void *)swift_slowAlloc();
    unint64_t v47 = v21;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v58 = (uint64_t)v16;
    uint64_t v59 = v48;
    *(_DWORD *)uint64_t v20 = 138543874;
    id v49 = v10;
    uint64_t v50 = v11;
    char v52 = v7;
    uint64_t v22 = v16;
    uint64_t v51 = v5;
    uint64_t v23 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v21 = v16;

    *(_WORD *)(v20 + 12) = 2082;
    LOBYTE(v21) = v18;
    uint64_t v25 = *(void *)&v23[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v24 = *(void *)&v23[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v26 = v25;
    uint64_t v11 = v50;
    uint64_t v58 = sub_10018A9E0(v26, v24, &v59);
    uint64_t v7 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v5 = v51;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_10018A9E0(v57, a3, &v59);
    uint64_t v10 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v21, "[%{public}@]<%{public}s> Requesting to remove participant: %s", (uint8_t *)v20, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v14 = v55;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (*(void *)&v16[OBJC_IVAR___MRDFastSyncGroupSession_groupSession])
  {
    uint64_t v27 = *(void *)&v16[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger];
    if (v27)
    {
      uint64_t v55 = v14;
      char v52 = (char *)a3;
      swift_retain();
      swift_retain();
      uint64_t v28 = GroupSession.activeParticipants.getter();
      sub_1001FBA08(v28, v16, v10);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v10, 1, v11) != 1)
      {
        uint64_t v38 = v56;
        uint64_t v39 = v10;
        uint64_t v40 = v53;
        (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v39, v11);
        os_log_type_t v41 = v52;
        swift_bridgeObjectRetain();
        uint64_t v44 = j___s12mediaremoted28MRDFastSyncGroupSessionStateO8rawValueSivg(v57, v41, v42, v43);
        id v46 = sub_10028B00C(v44, v45);
        swift_bridgeObjectRelease();
        static Participants.only(_:)();
        sub_10021E92C(9u, v46, (uint64_t)v7, v27, 0, 0);

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v7, v5);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v11);
        return;
      }
      swift_release();
      swift_release();
      sub_100009A08((uint64_t)v10, &qword_100479B20);
    }
  }
  id v29 = v16;
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v58 = (uint64_t)v29;
    uint64_t v59 = v34;
    *(_DWORD *)uint64_t v32 = 138543618;
    uint64_t v35 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v33 = v29;

    *(_WORD *)(v32 + 12) = 2082;
    uint64_t v36 = *(void *)&v35[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v37 = *(void *)&v35[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_10018A9E0(v36, v37, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%{public}@]<%{public}s> Unable to message leader", (uint8_t *)v32, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1001FE31C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MRDFastSyncGroupSession.remoteRemoveAllParticipants()()
{
}

uint64_t sub_1001FE3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)&v3[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_100006760;
  aBlock[3] = a3;
  id v15 = _Block_copy(aBlock);
  uint64_t v16 = v3;
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_1001FE660(void *a1)
{
  uint64_t v2 = type metadata accessor for Participants();
  uint64_t v46 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100013A80(&qword_100479B20);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Participant();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v45 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = sub_10018A9A8(v11, (uint64_t)qword_10047F3A8);
  uint64_t v13 = a1;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  unint64_t v47 = v7;
  uint64_t v48 = v9;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    os_log_type_t v18 = (void *)swift_slowAlloc();
    uint64_t v40 = v18;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v49 = (uint64_t)v13;
    uint64_t v50 = v42;
    *(_DWORD *)uint64_t v17 = 138543618;
    uint64_t v43 = v4;
    uint64_t v44 = v2;
    os_log_t v41 = v14;
    uint64_t v19 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v18 = v13;

    *(_WORD *)(v17 + 12) = 2082;
    uint64_t v20 = v8;
    uint64_t v21 = *(void *)&v19[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v22 = *(void *)&v19[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v23 = v21;
    uint64_t v2 = v44;
    uint64_t v49 = sub_10018A9E0(v23, v22, &v50);
    uint64_t v4 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v8 = v20;
    swift_bridgeObjectRelease();
    os_log_t v24 = v41;
    _os_log_impl((void *)&_mh_execute_header, v41, v15, "[%{public}@]<%{public}s> Requesting to remove all participants", (uint8_t *)v17, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (*(void *)&v13[OBJC_IVAR___MRDFastSyncGroupSession_groupSession])
  {
    uint64_t v25 = *(void *)&v13[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger];
    if (v25)
    {
      uint64_t v44 = v12;
      swift_retain();
      swift_retain();
      uint64_t v26 = GroupSession.activeParticipants.getter();
      uint64_t v27 = v13;
      uint64_t v28 = v47;
      sub_1001FBA08(v26, v27, v47);
      swift_bridgeObjectRelease();
      uint64_t v29 = v48;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v28, 1, v8) != 1)
      {
        uint64_t v39 = v45;
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v45, v28, v8);
        static Participants.only(_:)();
        sub_10021E92C(0xAu, 0, (uint64_t)v4, v25, 0, 0);
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v4, v2);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v39, v8);
        return;
      }
      swift_release();
      swift_release();
      sub_100009A08((uint64_t)v28, &qword_100479B20);
    }
  }
  uint64_t v30 = v13;
  os_log_type_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v49 = (uint64_t)v30;
    uint64_t v50 = v35;
    *(_DWORD *)uint64_t v33 = 138543618;
    uint64_t v36 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v34 = v30;

    *(_WORD *)(v33 + 12) = 2082;
    uint64_t v37 = *(void *)&v36[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v38 = *(void *)&v36[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_10018A9E0(v37, v38, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "[%{public}@]<%{public}s> Unable to message leader", (uint8_t *)v33, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t MRDFastSyncGroupSession.enterLowPowerMode(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v36 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10018A9A8(v11, (uint64_t)qword_10047F3A8);
  uint64_t v12 = v2;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v33 = v9;
    uint64_t v16 = v15;
    uint64_t v17 = (void *)swift_slowAlloc();
    uint64_t v29 = v17;
    uint64_t v30 = swift_slowAlloc();
    unint64_t v38 = v12;
    aBlock[0] = v30;
    *(_DWORD *)uint64_t v16 = 138412546;
    uint64_t v34 = v6;
    uint64_t v31 = a1;
    uint64_t v32 = a2;
    os_log_type_t v18 = v12;
    uint64_t v35 = v5;
    uint64_t v19 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v17 = v12;

    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v20 = v8;
    uint64_t v21 = *(void *)&v19[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v22 = *(void *)&v19[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v23 = v21;
    uint64_t v6 = v34;
    unint64_t v38 = (void *)sub_10018A9E0(v23, v22, aBlock);
    a1 = v31;
    a2 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v5 = v35;
    uint64_t v8 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%@]<%s> Enter low-power mode", (uint8_t *)v16, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v33;
    swift_slowDealloc();
  }
  else
  {
  }
  os_log_t v24 = (void *)swift_allocObject();
  void v24[2] = v12;
  v24[3] = a1;
  v24[4] = a2;
  aBlock[4] = (uint64_t)sub_100230F98;
  aBlock[5] = (uint64_t)v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_100006760;
  aBlock[3] = (uint64_t)&unk_100422268;
  uint64_t v25 = _Block_copy(aBlock);
  uint64_t v26 = v12;
  swift_retain();
  uint64_t v27 = v36;
  static DispatchQoS.unspecified.getter();
  unint64_t v38 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v9);
  return swift_release();
}

uint64_t sub_1001FF24C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v116 = a2;
  uint64_t v117 = a3;
  uint64_t v118 = (void *)type metadata accessor for Logger();
  uint64_t v109 = *(v118 - 1);
  __chkstk_darwin(v118);
  uint64_t v5 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v112 = v6;
  uint64_t v113 = v7;
  __chkstk_darwin(v6);
  int v110 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v114 = v9;
  uint64_t v115 = v10;
  __chkstk_darwin(v9);
  uint64_t v111 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Participants();
  uint64_t v13 = *(char **)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100013A80(&qword_100479B20);
  __chkstk_darwin(v16 - 8);
  os_log_type_t v18 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Participant();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = OBJC_IVAR___MRDFastSyncGroupSession__state;
  if (*(void *)&a1[OBJC_IVAR___MRDFastSyncGroupSession__state] != 3)
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v32 = (void (*)(void, void, void))v118;
    uint64_t v33 = sub_10018A9A8((uint64_t)v118, (uint64_t)qword_10047F3A8);
    uint64_t v34 = v109;
    (*(void (**)(char *, uint64_t, void))(v109 + 16))(v5, v33, v32);
    uint64_t v35 = a1;
    uint64_t v36 = Logger.logObject.getter();
    int v37 = static os_log_type_t.error.getter();
    uint64_t v108 = v36;
    if (os_log_type_enabled(v36, (os_log_type_t)v37))
    {
      LODWORD(v106) = v37;
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = (void *)swift_slowAlloc();
      uint64_t v107 = (void **)swift_slowAlloc();
      uint64_t v119 = v35;
      uint64_t aBlock = v107;
      *(_DWORD *)uint64_t v38 = 138543874;
      uint64_t v13 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v105 = v39;
      void *v39 = v35;

      *(_WORD *)(v38 + 12) = 2082;
      uint64_t v41 = *(void *)&v13[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v40 = *(void *)&v13[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v119 = (void *)sub_10018A9E0(v41, v40, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 22) = 2080;
      unint64_t v42 = *(void *)&a1[v23];
      if (v42 >= 5) {
        goto LABEL_48;
      }
      uint64_t v119 = (void *)sub_10018A9E0(*(void *)&aInitial_0[8 * v42], *(void *)&aInvalida[8 * v42 + 8], (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v43 = v108;
      _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v106, "[%{public}@]<%{public}s> Cannot enter low-power mode in state: %s.", (uint8_t *)v38, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, void *))(v109 + 8))(v5, v118);
    }
    else
    {

      (*(void (**)(char *, void (*)(void, void, void)))(v34 + 8))(v5, v32);
    }
    uint64_t v52 = v115;
    uint64_t v54 = v112;
    uint64_t v53 = v113;
    uint64_t v55 = v111;
    uint64_t v56 = v117;
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = v116;
    *(void *)(v57 + 24) = v56;
    uint64_t v124 = sub_1002398E0;
    uint64_t v125 = v57;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v121 = 1107296256;
    uint64_t v58 = &unk_100423268;
LABEL_27:
    uint64_t v122 = sub_100006760;
    uint64_t v123 = v58;
    uint64_t v68 = _Block_copy(&aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v119 = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v69 = v110;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
LABEL_28:
    _Block_release(v68);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v69, v54);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v114);
    return swift_release();
  }
  if (a1[OBJC_IVAR___MRDFastSyncGroupSession_isLowPowerMode])
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    sub_10018A9A8((uint64_t)v118, (uint64_t)qword_10047F3A8);
    os_log_t v24 = a1;
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      uint64_t v118 = (void *)swift_slowAlloc();
      uint64_t v119 = v24;
      uint64_t aBlock = (void **)v118;
      *(_DWORD *)uint64_t v27 = 138543618;
      uint64_t v29 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v28 = v24;

      *(_WORD *)(v27 + 12) = 2082;
      uint64_t v31 = *(void *)&v29[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v30 = *(void *)&v29[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v119 = (void *)sub_10018A9E0(v31, v30, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%{public}@]<%{public}s> Already in low power mode.", (uint8_t *)v27, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v52 = v115;
    uint64_t v59 = v116;
    uint64_t v54 = v112;
    uint64_t v53 = v113;
    uint64_t v55 = v111;
    uint64_t v60 = v117;
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = v59;
    *(void *)(v61 + 24) = v60;
    uint64_t v124 = sub_10023A53C;
    uint64_t v125 = v61;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v121 = 1107296256;
    uint64_t v58 = &unk_100423420;
    goto LABEL_27;
  }
  if (*(void *)&a1[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion])
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    sub_10018A9A8((uint64_t)v118, (uint64_t)qword_10047F3A8);
    uint64_t v44 = a1;
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      uint64_t v118 = (void *)swift_slowAlloc();
      uint64_t v119 = v44;
      uint64_t aBlock = (void **)v118;
      *(_DWORD *)uint64_t v47 = 138543618;
      uint64_t v49 = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v48 = v44;

      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v51 = *(void *)&v49[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v50 = *(void *)&v49[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v119 = (void *)sub_10018A9E0(v51, v50, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "[%{public}@]<%{public}s> Cannot enter low power mode while updating low power state.", (uint8_t *)v47, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v52 = v115;
    uint64_t v65 = v116;
    uint64_t v54 = v112;
    uint64_t v53 = v113;
    uint64_t v55 = v111;
    uint64_t v66 = v117;
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = v65;
    *(void *)(v67 + 24) = v66;
    uint64_t v124 = sub_1002398E0;
    uint64_t v125 = v67;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v121 = 1107296256;
    uint64_t v58 = &unk_1004233D0;
    goto LABEL_27;
  }
  if (!*(void *)&a1[OBJC_IVAR___MRDFastSyncGroupSession_groupSession])
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    sub_10018A9A8((uint64_t)v118, (uint64_t)qword_10047F3A8);
    uint64_t v71 = a1;
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      int v75 = (void *)swift_slowAlloc();
      uint64_t v118 = (void *)swift_slowAlloc();
      uint64_t v119 = v71;
      uint64_t aBlock = (void **)v118;
      *(_DWORD *)uint64_t v74 = 138543618;
      uint64_t v76 = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *int v75 = v71;

      *(_WORD *)(v74 + 12) = 2082;
      uint64_t v78 = *(void *)&v76[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v77 = *(void *)&v76[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v119 = (void *)sub_10018A9E0(v78, v77, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "[%{public}@]<%{public}s> No groupSession to leave.", (uint8_t *)v74, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v52 = v115;
    uint64_t v95 = v116;
    uint64_t v54 = v112;
    uint64_t v53 = v113;
    uint64_t v55 = v111;
    uint64_t v96 = v117;
    uint64_t v97 = swift_allocObject();
    *(void *)(v97 + 16) = v95;
    *(void *)(v97 + 24) = v96;
    uint64_t v124 = sub_100239A30;
    uint64_t v125 = v97;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v121 = 1107296256;
    uint64_t v58 = &unk_1004232B8;
    goto LABEL_27;
  }
  uint64_t v62 = *(void *)&a1[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger];
  uint64_t v109 = *(void *)&a1[OBJC_IVAR___MRDFastSyncGroupSession_groupSession];
  if (!v62)
  {
    swift_retain();
    goto LABEL_35;
  }
  uint64_t v106 = (uint64_t *)&a1[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
  swift_retain();
  swift_retain();
  uint64_t v63 = GroupSession.activeParticipants.getter();
  uint64_t v64 = a1;
  uint64_t v107 = (void **)v62;
  uint64_t v108 = v64;
  unint64_t v42 = 0;
  sub_1001FBA08(v63, (char *)v64, v18);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    swift_release();
    sub_100009A08((uint64_t)v18, &qword_100479B20);
LABEL_35:
    os_log_type_t v79 = (void (*)(void, void, void))v118;
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    sub_10018A9A8((uint64_t)v79, (uint64_t)qword_10047F3A8);
    uint64_t v80 = a1;
    unint64_t v81 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v84 = (void *)swift_slowAlloc();
      uint64_t v118 = (void *)swift_slowAlloc();
      uint64_t v119 = v80;
      uint64_t aBlock = (void **)v118;
      *(_DWORD *)uint64_t v83 = 138543618;
      uint64_t v85 = v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v84 = v80;

      *(_WORD *)(v83 + 12) = 2082;
      uint64_t v87 = *(void *)&v85[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v86 = *(void *)&v85[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v119 = (void *)sub_10018A9E0(v87, v86, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "[%{public}@]<%{public}s> Cannot send send low power message.", (uint8_t *)v83, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v52 = v115;
    uint64_t v88 = v116;
    uint64_t v54 = v112;
    uint64_t v53 = v113;
    uint64_t v55 = v111;
    uint64_t v89 = v117;
    uint64_t v90 = swift_allocObject();
    *(void *)(v90 + 16) = v88;
    *(void *)(v90 + 24) = v89;
    uint64_t v124 = sub_100239A38;
    uint64_t v125 = v90;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v121 = 1107296256;
    uint64_t v122 = sub_100006760;
    uint64_t v123 = &unk_100423308;
    uint64_t v68 = _Block_copy(&aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v119 = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v69 = v110;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    swift_release();
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  id v91 = *(Class *)((char *)&v108->isa + OBJC_IVAR___MRDFastSyncGroupSession_connectionManager);
  if (v91)
  {
    uint64_t v92 = *(uint64_t *)((char *)&v108[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_localHandle);
    if (v92)
    {
      uint64_t v93 = *(uint64_t *)((char *)&v108->isa + OBJC_IVAR___MRDFastSyncGroupSession_localHandle);
      uint64_t v94 = (void **)(*v91 + 368);
      uint64_t v118 = *v94;
      uint64_t v105 = v94;
      swift_retain();
      swift_bridgeObjectRetain();
      ((void (*)(uint64_t, uint64_t, uint64_t))v118)(1, v93, v92);
      swift_release();
      swift_bridgeObjectRelease();
      static Participants.only(_:)();
      sub_10021E92C(6u, 0, (uint64_t)v15, (uint64_t)v107, 0, 0);
      (*((void (**)(char *, uint64_t))v13 + 1))(v15, v12);
      uint64_t v98 = v116;
      uint64_t v99 = v117;
      uint64_t v100 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v101 = (void *)swift_allocObject();
      v101[2] = v100;
      v101[3] = v98;
      v101[4] = v99;
      uint64_t v102 = v106;
      uint64_t v103 = *v106;
      *uint64_t v106 = (uint64_t)sub_100239AAC;
      v102[1] = (uint64_t)v101;
      swift_retain();
      swift_retain();
      sub_1001924CC(v103);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_48:

  uint64_t v119 = (void *)v42;
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

void sub_100200958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v6 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  os_log_type_t v18 = (uint64_t *)((char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = (char *)Strong;
    uint64_t v35 = a4;
    uint64_t v21 = *(void **)(Strong + OBJC_IVAR___MRDFastSyncGroupSession_executionQueue);
    void *v18 = v21;
    (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
    id v22 = v21;
    LOBYTE(v21) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
    if (v21)
    {
      if (a1)
      {
        uint64_t v23 = (void *)swift_allocObject();
        uint64_t v24 = v35;
        void v23[2] = v39;
        v23[3] = v24;
        v23[4] = a1;
        aBlock[4] = sub_1002399BC;
        aBlock[5] = v23;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        uint64_t aBlock[2] = sub_100006760;
        aBlock[3] = &unk_100423498;
        uint64_t v25 = _Block_copy(aBlock);
        swift_retain();
        swift_errorRetain();
        static DispatchQoS.unspecified.getter();
        unint64_t v40 = _swiftEmptyArrayStorage;
        sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100013A80((uint64_t *)&unk_100479AE0);
        sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v25);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v9);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v37);
        swift_release();
        os_log_type_t v26 = &v20[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
        uint64_t v27 = *(void *)&v20[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
        *(void *)os_log_type_t v26 = 0;
        *((void *)v26 + 1) = 0;
        sub_1001924CC(v27);
      }
      else
      {
        uint64_t v28 = *(void **)&v20[OBJC_IVAR___MRDFastSyncGroupSession__state];
        *(void *)&v20[OBJC_IVAR___MRDFastSyncGroupSession__state] = 1;
        sub_1001F44E0(v28);
        *(void *)&v20[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger] = 0;
        swift_release();
        *(void *)&v20[OBJC_IVAR___MRDFastSyncGroupSession_groupSession] = 0;
        swift_release();
        uint64_t v29 = &v20[OBJC_IVAR___MRDFastSyncGroupSession_sessionCancellables];
        swift_beginAccess();
        *(void *)uint64_t v29 = &_swiftEmptySetSingleton;
        swift_bridgeObjectRelease();
        uint64_t v30 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v8, 1, 1, v30);
        uint64_t v31 = (void *)swift_allocObject();
        os_log_t v31[2] = 0;
        v31[3] = 0;
        uint64_t v32 = v39;
        void v31[4] = v20;
        v31[5] = v32;
        v31[6] = v35;
        swift_retain();
        uint64_t v33 = v20;
        sub_10018A588((uint64_t)v8, (uint64_t)&unk_10047A1B8, (uint64_t)v31);

        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100200ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[29] = a5;
  v6[30] = a6;
  v6[28] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  v6[31] = v7;
  v6[32] = *(void *)(v7 - 8);
  v6[33] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  v6[34] = v8;
  v6[35] = *(void *)(v8 - 8);
  v6[36] = swift_task_alloc();
  return _swift_task_switch(sub_100200FF4, 0, 0);
}

uint64_t sub_100200FF4()
{
  uint64_t v20 = v0;
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[28];
  uint64_t v2 = type metadata accessor for Logger();
  v0[37] = sub_10018A9A8(v2, (uint64_t)qword_10047F3A8);
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[28];
  if (v6)
  {
    log = v4;
    uint64_t v8 = swift_slowAlloc();
    os_log_type_t type = v5;
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138543618;
    v0[26] = v7;
    uint64_t v10 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v7;

    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v11 = *(void *)&v10[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v12 = *(void *)&v10[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    v0[27] = sub_10018A9E0(v11, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, log, type, "[%{public}@]<%{public}s> Calling provider.leave", (uint8_t *)v8, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  v0[38] = *(void *)(v0[28] + OBJC_IVAR___MRDFastSyncGroupSession_provider);
  swift_retain();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[39] = v13;
  uint64_t v14 = sub_100013A80(&qword_1004799C0);
  uint64_t v15 = sub_1000155BC(&qword_10047A018, &qword_1004799C0);
  *uint64_t v13 = v0;
  v13[1] = sub_100201318;
  return GroupSessionProvider.leave()(v14, v15);
}

uint64_t sub_100201318()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100201678;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100201434;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100201434()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[33];
  uint64_t v12 = v0[35];
  uint64_t v13 = v0[34];
  uint64_t v3 = v0[31];
  uint64_t v4 = v0[32];
  uint64_t v5 = v0[30];
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (void *)v0[28];
  *(_OWORD *)(v6 + 16) = *((_OWORD *)v0 + 14);
  *(void *)(v6 + 32) = v5;
  v0[12] = sub_100239D10;
  v0[13] = v6;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_100006760;
  v0[11] = &unk_100423588;
  uint64_t v8 = _Block_copy(v0 + 8);
  id v9 = v7;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[25] = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100201678()
{
  uint64_t v36 = v0;
  uint64_t v1 = (void *)v0[28];
  swift_release();
  id v2 = v1;
  swift_errorRetain();
  id v3 = v2;
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[28];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    log = v4;
    uint64_t v33 = swift_slowAlloc();
    v0[21] = v6;
    uint64_t v35 = v33;
    *(_DWORD *)uint64_t v7 = 138543874;
    id v9 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v6;

    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v11 = *(void *)&v9[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v10 = *(void *)&v9[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    v0[22] = sub_10018A9E0(v11, v10, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v7 + 22) = 2114;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[23] = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v8[1] = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v5, "[%{public}@]<%{public}s> Failure on provider.leave: %{public}@", (uint8_t *)v7, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v13 = (void *)v0[28];

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v14 = v0[40];
  uint64_t v15 = v0[36];
  uint64_t v34 = v0[35];
  uint64_t v16 = v0[33];
  uint64_t v17 = v0[31];
  uint64_t v18 = v0[32];
  uint64_t v19 = v0[29];
  uint64_t v20 = v0[30];
  uint64_t v30 = (void *)v0[28];
  *(void *)os_log_type_t type = v0[34];
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v19;
  v21[3] = v20;
  v21[4] = v14;
  v0[6] = sub_1002399BC;
  v0[7] = v21;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100006760;
  v0[5] = &unk_1004234E8;
  id v22 = _Block_copy(v0 + 2);
  swift_retain();
  swift_errorRetain();
  static DispatchQoS.unspecified.getter();
  v0[24] = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v29(v16, v17);
  uint64_t v23 = *(void (**)(uint64_t, void))(v34 + 8);
  v23(v15, *(void *)type);
  swift_release();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v30;
  *(void *)(v24 + 24) = v14;
  v0[18] = sub_10023A538;
  v0[19] = v24;
  v0[14] = _NSConcreteStackBlock;
  v0[15] = 1107296256;
  v0[16] = sub_100006760;
  v0[17] = &unk_100423538;
  uint64_t v25 = _Block_copy(v0 + 14);
  id v26 = v30;
  swift_errorRetain();
  static DispatchQoS.unspecified.getter();
  v0[20] = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);
  swift_errorRelease();
  v29(v16, v17);
  v23(v15, *(void *)type);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_100201C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v18[0] - 8);
  __chkstk_darwin(v18[0]);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(a1 + OBJC_IVAR___MRDFastSyncGroupSession_isLowPowerMode) = 1;
  uint64_t v13 = (void *)(a1 + OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion);
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion);
  *uint64_t v13 = 0;
  v13[1] = 0;
  sub_1001924CC(v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  aBlock[4] = sub_10023A53C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_100006760;
  aBlock[3] = &unk_1004235D8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, void))(v10 + 8))(v12, v18[0]);
  return swift_release();
}

void sub_100201FA4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t MRDFastSyncGroupSession.exitLowPowerMode(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v36 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10018A9A8(v11, (uint64_t)qword_10047F3A8);
  uint64_t v12 = v2;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v33 = v9;
    uint64_t v16 = v15;
    uint64_t v17 = (void *)swift_slowAlloc();
    uint64_t v29 = v17;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v38 = v12;
    aBlock[0] = v30;
    *(_DWORD *)uint64_t v16 = 138543618;
    uint64_t v34 = v6;
    uint64_t v31 = a1;
    uint64_t v32 = a2;
    uint64_t v18 = v12;
    uint64_t v35 = v5;
    uint64_t v19 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v17 = v12;

    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v20 = v8;
    uint64_t v21 = *(void *)&v19[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v22 = *(void *)&v19[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v23 = v21;
    uint64_t v6 = v34;
    uint64_t v38 = (void *)sub_10018A9E0(v23, v22, aBlock);
    a1 = v31;
    a2 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v5 = v35;
    uint64_t v8 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%{public}@]<%{public}s> Exit low-power mode", (uint8_t *)v16, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v33;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v24 = (void *)swift_allocObject();
  void v24[2] = v12;
  v24[3] = a1;
  v24[4] = a2;
  aBlock[4] = (uint64_t)sub_100230FBC;
  aBlock[5] = (uint64_t)v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_100006760;
  aBlock[3] = (uint64_t)&unk_1004222B8;
  uint64_t v25 = _Block_copy(aBlock);
  id v26 = v12;
  swift_retain();
  uint64_t v27 = v36;
  static DispatchQoS.unspecified.getter();
  uint64_t v38 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v9);
  return swift_release();
}

uint64_t sub_100202510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  id v6 = *(id *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v130 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(unsigned __int8 **)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v129 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v11 - 8);
  os_log_t v123 = (os_log_t)((char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for String.Encoding();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v124 = (void **)((char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_100013A80(&qword_100479B00);
  __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v18) = v17[OBJC_IVAR___MRDFastSyncGroupSession_isLowPowerMode];
  uint64_t v131 = v9;
  uint64_t v132 = v8;
  if (v18 != 1)
  {
    uint64_t v32 = v17;
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_10018A9A8(v33, (uint64_t)qword_10047F3A8);
    uint64_t v34 = v32;
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v125 = v5;
      uint64_t v39 = v38;
      os_log_t v123 = v38;
      uint64_t v124 = (void **)swift_slowAlloc();
      uint64_t v133 = v34;
      uint64_t aBlock = v124;
      *(_DWORD *)uint64_t v37 = 138543618;
      uint64_t v127 = a3;
      uint64_t v128 = a2;
      id v126 = v6;
      unint64_t v40 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v39->Class isa = (Class)v34;

      *(_WORD *)(v37 + 12) = 2082;
      uint64_t v41 = *(void *)&v40[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v42 = *(void *)&v40[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v43 = v41;
      id v6 = v126;
      uint64_t v133 = (void *)sub_10018A9E0(v43, v42, (uint64_t *)&aBlock);
      a3 = v127;
      a2 = v128;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v5 = v125;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[%{public}@]<%{public}s> Not in low power mode.", (uint8_t *)v37, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = a2;
    *(void *)(v44 + 24) = a3;
    uint64_t v138 = sub_10023A53C;
    uint64_t v139 = v44;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v135 = 1107296256;
    uint64_t v45 = &unk_100422FE8;
    goto LABEL_19;
  }
  if (*(void *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion])
  {
    uint64_t v20 = v17;
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10018A9A8(v21, (uint64_t)qword_10047F3A8);
    unint64_t v22 = v20;
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v122 = swift_slowAlloc();
      os_log_t v123 = v23;
      id v26 = (void *)v122;
      uint64_t v124 = (void **)swift_slowAlloc();
      uint64_t v133 = v22;
      uint64_t aBlock = v124;
      *(_DWORD *)uint64_t v25 = 138543618;
      uint64_t v127 = a3;
      uint64_t v128 = a2;
      id v126 = v6;
      uint64_t v27 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v26 = v22;

      *(_WORD *)(v25 + 12) = 2082;
      uint64_t v125 = v5;
      uint64_t v28 = *(void *)&v27[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v29 = *(void *)&v27[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v30 = v28;
      id v6 = v126;
      uint64_t v133 = (void *)sub_10018A9E0(v30, v29, (uint64_t *)&aBlock);
      a3 = v127;
      a2 = v128;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v5 = v125;
      swift_bridgeObjectRelease();
      os_log_t v31 = v123;
      _os_log_impl((void *)&_mh_execute_header, v123, v24, "[%{public}@]<%{public}s> Cannot exit low power mode while updating low power state.", (uint8_t *)v25, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = a2;
    *(void *)(v52 + 24) = a3;
    uint64_t v138 = sub_1002398E0;
    uint64_t v139 = v52;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v135 = 1107296256;
    uint64_t v45 = &unk_1004230D8;
LABEL_19:
    unint64_t v136 = sub_100006760;
    uint64_t v137 = v45;
    uint64_t v53 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v54 = v129;
    static DispatchQoS.unspecified.getter();
    uint64_t v133 = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v55 = v130;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v53);
    (*((void (**)(char *, uint64_t))v6 + 1))(v55, v5);
    (*((void (**)(char *, uint64_t))v131 + 1))(v54, v132);
    return swift_release();
  }
  id v126 = v6;
  uint64_t v121 = *(void *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle + 8];
  if (!v121)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v119 = v14;
  uint64_t v128 = a2;
  uint64_t v46 = OBJC_IVAR___MRDFastSyncGroupSession_connectionManager;
  uint64_t v47 = *(void *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_connectionManager];
  if (!v47)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v117 = (uint64_t *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
  uint64_t v118 = v13;
  uint64_t v125 = v5;
  uint64_t v127 = a3;
  uint64_t v122 = (uint64_t)v17;
  uint64_t v48 = &v17[OBJC_IVAR___MRDFastSyncGroupSession_localHandle];
  uint64_t v49 = *(void *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8];
  if (!v49)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v120 = *(void *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle];
  uint64_t v50 = *(void *)v48;
  uint64_t v51 = *(void (**)(void, uint64_t, uint64_t))(*(void *)v47 + 368);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v51(0, v50, v49);
  uint64_t v131 = v48;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void *)(v122 + v46);
  if (!v57) {
    goto LABEL_35;
  }
  uint64_t v58 = *(uint64_t (**)(uint64_t))(*(void *)v57 + 200);
  uint64_t v59 = swift_retain();
  uint64_t v60 = v58(v59);
  swift_release();
  uint64_t v61 = v119;
  if (!*(void *)(v60 + 16))
  {
LABEL_37:
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v62 = v121;
  swift_bridgeObjectRetain();
  uint64_t v63 = v120;
  unint64_t v64 = sub_100013660(v120, v62);
  if ((v65 & 1) == 0)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  uint64_t v66 = *(void *)(*(void *)(v60 + 56) + 8 * v64);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v67 = swift_bridgeObjectRelease();
  uint64_t v130 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)v66 + 216))(v67);
  swift_release();
  swift_retain();
  dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
  swift_release();
  uint64_t v68 = NearbyGroup.members.getter();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1001FBD98(v68, v63, v62, v19);
  swift_bridgeObjectRelease();
  uint64_t v69 = type metadata accessor for NearbyGroup.Member();
  uint64_t v70 = *(void *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v19, 1, v69) == 1)
  {
    sub_100009A08((uint64_t)v19, &qword_100479B00);
  }
  else
  {
    uint64_t v132 = NearbyGroup.Member.tokenDestination.getter();
    uint64_t v72 = v71;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v19, v69);
    if (v72) {
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v132 = v63;
  uint64_t v72 = (char *)v62;
LABEL_28:
  uint64_t v73 = v118;
  uint64_t v74 = *(void **)(v122 + OBJC_IVAR___MRDFastSyncGroupSession_pushMessenger);
  if (!v74)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v129 = v72;
  sub_100013A80((uint64_t *)&unk_100479B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C6370;
  id v126 = v74;
  uint64_t v76 = sub_1002899FC();
  uint64_t v78 = *(void ***)v76;
  uint64_t v77 = *((void *)v76 + 1);
  uint64_t aBlock = v78;
  uint64_t v135 = v77;
  uint64_t v125 = v77;
  swift_bridgeObjectRetain_n();
  AnyHashable.init<A>(_:)();
  os_log_type_t v79 = (uint64_t *)sub_100289A50();
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = v81;
  *(void *)(inited + 80) = v80;
  swift_bridgeObjectRetain();
  os_log_type_t v82 = sub_100289A14();
  uint64_t v84 = *(void ***)v82;
  uint64_t v83 = *((void *)v82 + 1);
  uint64_t aBlock = v84;
  uint64_t v135 = v83;
  uint64_t v118 = v83;
  swift_bridgeObjectRetain_n();
  AnyHashable.init<A>(_:)();
  swift_bridgeObjectRetain();
  uint64_t v85 = v124;
  static String.Encoding.utf8.getter();
  uint64_t v86 = String.data(using:allowLossyConversion:)();
  unint64_t v88 = v87;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(void **, uint64_t))(v61 + 8))(v85, v73);
  if (v88 >> 60 == 15)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  *(void *)(inited + 168) = &type metadata for Data;
  *(void *)(inited + 144) = v86;
  *(void *)(inited + 152) = v88;
  uint64_t v89 = sub_100289A20();
  uint64_t v90 = *((void *)v89 + 1);
  uint64_t aBlock = *(void ***)v89;
  uint64_t v135 = v90;
  swift_bridgeObjectRetain_n();
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 240) = &type metadata for Int;
  *(void *)(inited + 216) = v130;
  id v91 = (void ***)sub_100289A2C();
  uint64_t v92 = (uint64_t)v91[1];
  uint64_t aBlock = *v91;
  uint64_t v135 = v92;
  swift_bridgeObjectRetain_n();
  AnyHashable.init<A>(_:)();
  uint64_t v94 = *(void *)(v122 + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
  uint64_t v93 = *(void *)(v122 + OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8);
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 288) = v94;
  *(void *)(inited + 296) = v93;
  swift_bridgeObjectRetain();
  uint64_t v95 = sub_100289A08();
  uint64_t v96 = *((void *)v95 + 1);
  uint64_t aBlock = *(void ***)v95;
  uint64_t v135 = v96;
  swift_bridgeObjectRetain_n();
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 384) = &type metadata for String;
  *(void *)(inited + 360) = v120;
  *(void *)(inited + 368) = v62;
  uint64_t v97 = sub_1002899F0();
  uint64_t v98 = *((void *)v97 + 1);
  uint64_t aBlock = *(void ***)v97;
  uint64_t v135 = v98;
  swift_bridgeObjectRetain_n();
  uint64_t result = AnyHashable.init<A>(_:)();
  uint64_t v99 = *((void *)v131 + 1);
  if (v99)
  {
    uint64_t v100 = *(void *)v131;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(inited + 456) = &type metadata for String;
    *(void *)(inited + 432) = v100;
    *(void *)(inited + 440) = v99;
    sub_100189560(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    sub_100013A80(&qword_100478690);
    uint64_t v102 = swift_initStackObject();
    *(_OWORD *)(v102 + 16) = xmmword_1003C58B0;
    *(void *)(v102 + 32) = v132;
    *(void *)(v102 + 40) = v129;
    sub_1002339E8(v102);
    swift_setDeallocating();
    swift_arrayDestroy();
    Class v103 = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v104 = v126;
    [v126 sendMessage:isa toDestinations:v103];

    uint64_t v105 = swift_allocObject();
    uint64_t v106 = (void *)v122;
    swift_unknownObjectWeakInit();
    uint64_t v107 = (void *)swift_allocObject();
    uint64_t v108 = v127;
    uint64_t v109 = v128;
    v107[2] = v105;
    v107[3] = v109;
    v107[4] = v108;
    int v110 = v117;
    uint64_t v111 = *v117;
    *uint64_t v117 = (uint64_t)sub_100239900;
    v110[1] = (uint64_t)v107;
    swift_retain();
    sub_1001924CC(v111);
    uint64_t v112 = type metadata accessor for TaskPriority();
    os_log_t v113 = v123;
    (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v123, 1, 1, v112);
    uint64_t v114 = (void *)swift_allocObject();
    v114[2] = 0;
    v114[3] = 0;
    v114[4] = v106;
    v114[5] = v109;
    v114[6] = v108;
    swift_retain();
    id v115 = v106;
    sub_10018A588((uint64_t)v113, (uint64_t)&unk_10047A1A8, (uint64_t)v114);
    return swift_release();
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10020397C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v10 - 8);
  uint64_t v29 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v18 = (unsigned char *)result;
    uint64_t v26 = v7;
    uint64_t v19 = *(void **)(result + OBJC_IVAR___MRDFastSyncGroupSession_executionQueue);
    void *v16 = v19;
    (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
    id v20 = v19;
    LOBYTE(v19) = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    if (v19)
    {
      if (a1)
      {
        uint64_t v21 = (void *)swift_allocObject();
        void v21[2] = v27;
        v21[3] = a4;
        v21[4] = a1;
        uint64_t v35 = sub_1002399BC;
        os_log_type_t v36 = v21;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v32 = 1107296256;
        uint64_t v33 = sub_100006760;
        uint64_t v34 = &unk_100423218;
        unint64_t v22 = _Block_copy(&aBlock);
        swift_retain();
        swift_errorRetain();
      }
      else
      {
        v18[OBJC_IVAR___MRDFastSyncGroupSession_isLowPowerMode] = 0;
        uint64_t v23 = &v18[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
        uint64_t v24 = *(void *)&v18[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
        void *v23 = 0;
        v23[1] = 0;
        sub_1001924CC(v24);
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = v27;
        *(void *)(v25 + 24) = a4;
        uint64_t v35 = sub_100239A00;
        os_log_type_t v36 = (void *)v25;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v32 = 1107296256;
        uint64_t v33 = sub_100006760;
        uint64_t v34 = &unk_1004231C8;
        unint64_t v22 = _Block_copy(&aBlock);
        swift_retain();
      }
      static DispatchQoS.unspecified.getter();
      uint64_t v30 = _swiftEmptyArrayStorage;
      sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100013A80((uint64_t *)&unk_100479AE0);
      sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);

      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100203EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[26] = a5;
  v6[27] = a6;
  v6[25] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  v6[28] = v7;
  v6[29] = *(void *)(v7 - 8);
  v6[30] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  v6[31] = v8;
  v6[32] = *(void *)(v8 - 8);
  v6[33] = swift_task_alloc();
  return _swift_task_switch(sub_100204004, 0, 0);
}

uint64_t sub_100204004()
{
  id v20 = v0;
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[25];
  uint64_t v2 = type metadata accessor for Logger();
  v0[34] = sub_10018A9A8(v2, (uint64_t)qword_10047F3A8);
  id v3 = v1;
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[25];
  if (v6)
  {
    log = v4;
    uint64_t v8 = swift_slowAlloc();
    os_log_type_t type = v5;
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138543874;
    v0[22] = v7;
    uint64_t v10 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v7;

    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v11 = *(void *)&v10[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v12 = *(void *)&v10[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    v0[23] = sub_10018A9E0(v11, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 22) = 2080;
    v0[24] = sub_10018A9E0(0xD00000000000001DLL, 0x80000001003B6090, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, log, type, "[%{public}@]<%{public}s> %s Re-joining provider", (uint8_t *)v8, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  v0[35] = *(void *)(v0[25] + OBJC_IVAR___MRDFastSyncGroupSession_provider);
  swift_retain();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[36] = v13;
  uint64_t v14 = sub_100013A80(&qword_1004799C0);
  uint64_t v15 = sub_1000155BC(&qword_10047A018, &qword_1004799C0);
  *uint64_t v13 = v0;
  v13[1] = sub_100204378;
  return GroupSessionProvider.join()(v14, v15);
}

uint64_t sub_100204378()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10020473C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100204494;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100204494()
{
  uint64_t v15 = v0;
  id v1 = *(id *)(v0 + 200);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void **)(v0 + 200);
    uint64_t v5 = swift_slowAlloc();
    log = v2;
    BOOL v6 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(void *)(v0 + 152) = v4;
    *(_DWORD *)uint64_t v5 = 138543874;
    uint64_t v7 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v4;

    *(_WORD *)(v5 + 12) = 2082;
    uint64_t v8 = *(void *)&v7[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v9 = *(void *)&v7[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 160) = sub_10018A9E0(v8, v9, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v5 + 22) = 2080;
    *(void *)(v0 + 168) = sub_10018A9E0(0xD00000000000001DLL, 0x80000001003B6090, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v2 = log;
    _os_log_impl((void *)&_mh_execute_header, log, v3, "[%{public}@]<%{public}s> %s Re-joined provider", (uint8_t *)v5, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 200);
  }
  sub_1001F8648();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_10020473C()
{
  uint64_t v33 = v0;
  id v1 = (void *)v0[25];
  swift_release();
  id v2 = v1;
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (void *)v0[25];
    uint64_t v6 = swift_slowAlloc();
    log = v3;
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v0[16] = v5;
    *(_DWORD *)uint64_t v6 = 138543874;
    uint64_t v8 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v5;

    *(_WORD *)(v6 + 12) = 2082;
    uint64_t v9 = *(void *)&v8[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v10 = *(void *)&v8[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    v0[17] = sub_10018A9E0(v9, v10, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v6 + 22) = 2080;
    v0[18] = sub_10018A9E0(0xD00000000000001DLL, 0x80000001003B6090, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_type_t v3 = log;
    _os_log_impl((void *)&_mh_execute_header, log, v4, "[%{public}@]<%{public}s> %s Failed to re-join provider", (uint8_t *)v6, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v11 = (void *)v0[25];
  }
  uint64_t v12 = v0[37];
  uint64_t v13 = v0[33];
  uint64_t v31 = v0[32];
  uint64_t v14 = v0[30];
  uint64_t v15 = v0[28];
  uint64_t v16 = v0[29];
  uint64_t v17 = v0[26];
  uint64_t v18 = v0[27];
  uint64_t v28 = (void *)v0[25];
  uint64_t v29 = v0[31];
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = v17;
  v19[3] = v18;
  v19[4] = v12;
  v0[6] = sub_1002399BC;
  v0[7] = v19;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100006760;
  v0[5] = &unk_100423128;
  id v20 = _Block_copy(v0 + 2);
  swift_retain();
  swift_errorRetain();
  static DispatchQoS.unspecified.getter();
  v0[14] = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v27(v14, v15);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v21(v13, v29);
  swift_release();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v28;
  *(void *)(v22 + 24) = v12;
  v0[12] = sub_1002399D8;
  v0[13] = v22;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_100006760;
  v0[11] = &unk_100423178;
  uint64_t v23 = _Block_copy(v0 + 8);
  id v24 = v28;
  swift_errorRetain();
  static DispatchQoS.unspecified.getter();
  v0[15] = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);
  swift_errorRelease();
  v27(v14, v15);
  v21(v13, v29);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_100204D38(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  a6(a5, v10);

  return swift_release();
}

uint64_t sub_100204DCC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v1[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_10023920C;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100422D90;
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = v1;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_100205098(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80(&qword_10047A0F8);
  uint64_t v47 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100013A80(&qword_10047A100);
  uint64_t v42 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100013A80(&qword_10047A108);
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  __chkstk_darwin(v9);
  uint64_t v43 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)&a1[OBJC_IVAR___MRDFastSyncGroupSession__state];
  *(void *)&a1[OBJC_IVAR___MRDFastSyncGroupSession__state] = 2;
  sub_1001F44E0(v11);
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = sub_10018A9A8(v12, (uint64_t)qword_10047F3A8);
  uint64_t v14 = a1;
  uint64_t v46 = v13;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v37 = v7;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v39 = v4;
    id v20 = (void *)v19;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v48 = (uint64_t)v14;
    v49[0] = v36;
    *(_DWORD *)uint64_t v18 = 138543618;
    uint64_t v40 = a2;
    uint64_t v21 = v14;
    uint64_t v38 = v6;
    uint64_t v22 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v20 = v14;

    *(_WORD *)(v18 + 12) = 2082;
    uint64_t v24 = *(void *)&v22[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v23 = *(void *)&v22[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_10018A9E0(v24, v23, v49);
    a2 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v6 = v38;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%{public}@]<%{public}s> Handling session.", (uint8_t *)v18, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    uint64_t v4 = v39;
    swift_slowDealloc();
    uint64_t v7 = v37;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v25 = v41;
  GroupSession.$activeParticipants.getter();
  sub_1000155BC(&qword_10047A110, &qword_10047A100);
  sub_1000155BC(&qword_10047A118, &qword_10047A120);
  uint64_t v26 = v43;
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v7);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000155BC(&qword_10047A128, &qword_10047A108);
  uint64_t v27 = v45;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v27);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  GroupSession.$state.getter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000155BC(&qword_10047A130, &qword_10047A0F8);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v6, v4);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  *(void *)&v14[OBJC_IVAR___MRDFastSyncGroupSession_groupSession] = a2;
  swift_retain();
  swift_release();
  sub_10021B664();
  uint64_t v28 = v14;
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = (void *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = (uint64_t)v28;
    v49[0] = v47;
    *(_DWORD *)uint64_t v31 = 138543618;
    uint64_t v33 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v32 = v28;

    *(_WORD *)(v31 + 12) = 2082;
    uint64_t v34 = *(void *)&v33[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v35 = *(void *)&v33[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_10018A9E0(v34, v35, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "[%{public}@]<%{public}s> Will join session.", (uint8_t *)v31, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  GroupSession.join()();
}

uint64_t sub_1002058BC(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v40 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    uint64_t v37 = v6;
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v36 = v8;
    uint64_t v38 = v4;
    uint64_t v39 = v5;
    uint64_t v12 = type metadata accessor for Logger();
    sub_10018A9A8(v12, (uint64_t)qword_10047F3A8);
    id v13 = v11;
    swift_bridgeObjectRetain_n();
    uint64_t v14 = v13;
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v32 = v19;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v41 = v14;
      aBlock[0] = v35;
      *(_DWORD *)uint64_t v18 = 138543874;
      int v33 = v17;
      id v20 = v14;
      uint64_t v34 = v2;
      uint64_t v21 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v19 = v11;

      *(_WORD *)(v18 + 12) = 2082;
      uint64_t v22 = *(void *)&v21[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v23 = *(void *)&v21[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v41 = (void *)sub_10018A9E0(v22, v23, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v2 = v34;
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2082;
      type metadata accessor for Participant();
      sub_100015B28(&qword_100479AF8, (void (*)(uint64_t))&type metadata accessor for Participant);
      swift_bridgeObjectRetain();
      uint64_t v24 = Set.description.getter();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      uint64_t v41 = (void *)sub_10018A9E0(v24, v26, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v33, "[%{public}@]<%{public}s> Fast Sync participants changed: %{public}s.", (uint8_t *)v18, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v14;
    *(void *)(v27 + 24) = v9;
    aBlock[4] = (uint64_t)sub_100239374;
    aBlock[5] = v27;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_100006760;
    aBlock[3] = (uint64_t)&unk_100422E30;
    uint64_t v28 = _Block_copy(aBlock);
    uint64_t v29 = v14;
    swift_bridgeObjectRetain();
    os_log_type_t v30 = v36;
    static DispatchQoS.unspecified.getter();
    uint64_t v41 = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v31 = v38;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v28);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v2);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v39);

    return swift_release();
  }
  return result;
}

uint64_t sub_100205EB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100013A80(&qword_100479FC8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = (void *)result;
    uint64_t v17 = *(void *)(result + OBJC_IVAR___MRDFastSyncGroupSession_executionQueue);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    aBlock[4] = sub_1002392F4;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_100006760;
    aBlock[3] = &unk_100422DE0;
    uint64_t v15 = _Block_copy(aBlock);
    id v16 = v12;
    static DispatchQoS.unspecified.getter();
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);

    return swift_release();
  }
  return result;
}

void sub_100206270()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (os_log_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (qword_10047F3A0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10018A9A8(v7, (uint64_t)qword_10047F3A8);
  uint64_t v8 = v0;
  swift_errorRetain();
  uint64_t v9 = v8;
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    unint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = (uint64_t)v9;
    uint64_t v23 = v21;
    *(_DWORD *)uint64_t v12 = 138543874;
    uint64_t v14 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v13 = v9;

    *(_WORD *)(v12 + 12) = 2082;
    os_log_t v20 = v10;
    uint64_t v16 = *(void *)&v14[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v15 = *(void *)&v14[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10018A9E0(v16, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2114;
    swift_errorRetain();
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v22 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v13[1] = v17;
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v10 = v20;
    _os_log_impl((void *)&_mh_execute_header, v20, v11, "[%{public}@]<%{public}s> Encountered push message error: %{public}@.", (uint8_t *)v12, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  if (v9[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] == 1)
  {
    v9[OBJC_IVAR___MRDFastSyncGroupSession_hasEncounteredLowPowerError] = 1;
  }
  else
  {
    sub_100231260();
    uint64_t v18 = swift_allocError();
    void *v19 = 6;
    sub_100215528(v18);
    swift_errorRelease();
  }
}

void sub_100206668(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)&v2[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_87:
    swift_once();
LABEL_12:
    uint64_t v14 = type metadata accessor for Logger();
    sub_10018A9A8(v14, (uint64_t)qword_10047F3A8);
    unint64_t v15 = v2;
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      v106[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138543618;
      *(void *)&long long v107 = v15;
      os_log_t v20 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v19 = v15;

      *(_WORD *)(v18 + 12) = 2082;
      uint64_t v21 = *(void *)&v20[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v22 = *(void *)&v20[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      *(void *)&long long v107 = sub_10018A9E0(v21, v22, (uint64_t *)v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%{public}@]<%{public}s> dropping push message for different session identifier.", (uint8_t *)v18, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  *(void *)&v105[0] = 0xD000000000000011;
  *((void *)&v105[0] + 1) = 0x80000001003B6070;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (a1[2] && (unint64_t v10 = sub_10018C3C4((uint64_t)v106), (v11 & 1) != 0))
  {
    sub_10018FDAC(a1[7] + 32 * v10, (uint64_t)&v107);
  }
  else
  {
    long long v107 = 0u;
    long long v108 = 0u;
  }
  sub_10018FFC8((uint64_t)v106);
  if (!*((void *)&v108 + 1))
  {
    sub_100009A08((uint64_t)&v107, &qword_100479F50);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v12 = *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
  unint64_t v13 = *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
  if (v105[0] == __PAIR128__(v13, v12))
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    if (qword_10047F3A0 == -1) {
      goto LABEL_12;
    }
    goto LABEL_87;
  }
LABEL_16:
  NSString v24 = String._bridgeToObjectiveC()();
  v106[0] = 0;
  id v25 = (id)IDSCopyTokenAndIDForTokenWithID();

  id v26 = v106[0];
  if (!v25)
  {
    id v37 = v106[0];
    swift_bridgeObjectRelease();
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_10018A9A8(v38, (uint64_t)qword_10047F3A8);
    uint64_t v39 = v2;
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = (void *)swift_slowAlloc();
      uint64_t v101 = (void *)swift_slowAlloc();
      v106[0] = v101;
      *(_DWORD *)uint64_t v42 = 138543618;
      uint64_t v103 = v12;
      *(void *)&long long v107 = v39;
      uint64_t v44 = v39;
      id v102 = v37;
      uint64_t v45 = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v43 = v39;

      *(_WORD *)(v42 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v107 = sub_10018A9E0(v103, v13, (uint64_t *)v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      id v37 = v102;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "[%{public}@]<%{public}s> could not parse sender from token.", (uint8_t *)v42, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  uint64_t v103 = v12;
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;
  id v30 = v26;

  uint64_t v31 = *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle + 8];
  if ((!v31
     || (v27 != *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle] || v31 != v29)
     && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    && (v2[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    sub_10018A9A8(v49, (uint64_t)qword_10047F3A8);
    uint64_t v50 = v2;
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v100 = (void *)swift_slowAlloc();
      uint64_t v101 = (void *)swift_slowAlloc();
      v106[0] = v101;
      *(_DWORD *)uint64_t v53 = 138543618;
      id v102 = v30;
      *(void *)&long long v107 = v50;
      uint64_t v54 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v100 = v50;

      *(_WORD *)(v53 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v107 = sub_10018A9E0(v103, v13, (uint64_t *)v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v55 = v102;
      swift_bridgeObjectRelease();
      uint64_t v56 = "[%{public}@]<%{public}s> dropping push message not from leader.";
LABEL_73:
      _os_log_impl((void *)&_mh_execute_header, v51, v52, v56, (uint8_t *)v53, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_74;
    }
LABEL_75:

    return;
  }
  uint64_t v32 = sub_1002899FC();
  uint64_t v34 = *(void *)v32;
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)&v105[0] = v34;
  *((void *)&v105[0] + 1) = v33;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (a1[2] && (unint64_t v35 = sub_10018C3C4((uint64_t)v106), (v36 & 1) != 0))
  {
    sub_10018FDAC(a1[7] + 32 * v35, (uint64_t)&v107);
  }
  else
  {
    long long v107 = 0u;
    long long v108 = 0u;
  }
  sub_10018FFC8((uint64_t)v106);
  if (!*((void *)&v108 + 1))
  {
    swift_bridgeObjectRelease();
    sub_100009A08((uint64_t)&v107, &qword_100479F50);
    goto LABEL_46;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_46:
    swift_bridgeObjectRelease();
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    sub_10018A9A8(v57, (uint64_t)qword_10047F3A8);
    uint64_t v50 = v2;
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v51, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v60 = (void *)swift_slowAlloc();
      uint64_t v101 = (void *)swift_slowAlloc();
      v106[0] = v101;
      *(_DWORD *)uint64_t v59 = 138543618;
      *(void *)&long long v107 = v50;
      id v102 = v30;
      uint64_t v61 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v60 = v50;

      *(_WORD *)(v59 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v107 = sub_10018A9E0(v103, v13, (uint64_t *)v106);
      uint64_t v55 = v102;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v51, v58, "[%{public}@]<%{public}s> dropping push message without type", (uint8_t *)v59, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
LABEL_74:
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    goto LABEL_75;
  }
  long long v46 = v105[0];
  if (v46 != *(_OWORD *)sub_100289A68() && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
    || (v2[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] & 1) != 0)
  {
    *(void *)&v105[0] = 0x74616E6974736564;
    *((void *)&v105[0] + 1) = 0xEB000000006E6F69;
    AnyHashable.init<A>(_:)();
    if (a1[2] && (unint64_t v47 = sub_10018C3C4((uint64_t)v106), (v48 & 1) != 0))
    {
      sub_10018FDAC(a1[7] + 32 * v47, (uint64_t)&v107);
    }
    else
    {
      long long v107 = 0u;
      long long v108 = 0u;
    }
    sub_10018FFC8((uint64_t)v106);
    if (*((void *)&v108 + 1))
    {
      if (swift_dynamicCast())
      {
        id v102 = v30;
        unint64_t v62 = v13;
        uint64_t v63 = (void *)*((void *)&v105[0] + 1);
        if (*(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8])
        {
          if (*(_OWORD *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_localHandle] == v105[0])
          {
            swift_bridgeObjectRelease();
            goto LABEL_66;
          }
          char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v72)
          {
LABEL_66:
            if (v46 == *(_OWORD *)sub_100289A44())
            {
              swift_bridgeObjectRelease();
              uint64_t v73 = v102;
            }
            else
            {
              char v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              uint64_t v73 = v102;
              if ((v76 & 1) == 0) {
                goto LABEL_94;
              }
            }
            uint64_t v77 = (uint64_t *)sub_100289A38();
            uint64_t v79 = *v77;
            uint64_t v78 = v77[1];
            *(void *)&v105[0] = v79;
            *((void *)&v105[0] + 1) = v78;
            swift_bridgeObjectRetain();
            AnyHashable.init<A>(_:)();
            if (a1[2] && (unint64_t v80 = sub_10018C3C4((uint64_t)v106), (v81 & 1) != 0))
            {
              sub_10018FDAC(a1[7] + 32 * v80, (uint64_t)&v107);
            }
            else
            {
              long long v107 = 0u;
              long long v108 = 0u;
            }
            sub_10018FFC8((uint64_t)v106);
            if (!*((void *)&v108 + 1))
            {
              sub_100009A08((uint64_t)&v107, &qword_100479F50);
              goto LABEL_94;
            }
            if ((swift_dynamicCast() & 1) == 0) {
              goto LABEL_94;
            }
            long long v82 = v105[0];
            if (v82 == *(_OWORD *)sub_1002899E4())
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v83 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v83 & 1) == 0)
              {
LABEL_93:
                uint64_t v73 = v102;
LABEL_94:
                uint64_t v96 = *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_connectionManager];
                if (v96)
                {
                  v106[3] = (id)sub_100013A80(&qword_10047A0E8);
                  v106[0] = a1;
                  uint64_t v97 = *(void (**)(id *, uint64_t, uint64_t, uint64_t))(*(void *)v96 + 432);
                  swift_retain();
                  v97(v106, v27, v29, 1);
                  swift_bridgeObjectRelease();
                  swift_release();
                  sub_10018FD5C((uint64_t)v106);

                  return;
                }
                goto LABEL_98;
              }
            }
            uint64_t v84 = sub_100289A14();
            uint64_t v85 = *((void *)v84 + 1);
            *(void *)&long long v107 = *(void *)v84;
            *((void *)&v107 + 1) = v85;
            swift_bridgeObjectRetain_n();
            AnyHashable.init<A>(_:)();
            if (a1[2])
            {
              unint64_t v86 = sub_10018C3C4((uint64_t)v106);
              if (v87)
              {
                sub_10018FDAC(a1[7] + 32 * v86, (uint64_t)v105);
                sub_10018FFC8((uint64_t)v106);
                swift_bridgeObjectRelease();
                sub_10018FF5C(v105, &v107);
                uint64_t v88 = sub_10018FE08(0, &qword_10047A0F0);
                swift_dynamicCast();
                uint64_t v89 = v104;
                uint64_t v90 = *(void *)v84;
                uint64_t v91 = *((void *)v84 + 1);
                *(void *)&long long v107 = v90;
                *((void *)&v107 + 1) = v91;
                swift_bridgeObjectRetain_n();
                AnyHashable.init<A>(_:)();
                *(void *)&long long v107 = 0;
                id v92 = [v89 decompressedDataUsingAlgorithm:0 error:&v107];
                uint64_t v63 = (void *)v107;
                if (!v92)
                {
LABEL_99:
                  id v98 = v63;
                  _convertNSErrorToError(_:)();

                  swift_willThrow();
                  swift_unexpectedError();
                  __break(1u);
                  return;
                }
                id v93 = v92;
                id v94 = (id)v107;
                swift_bridgeObjectRelease();
                *((void *)&v108 + 1) = v88;
                *(void *)&long long v107 = v93;
                sub_10018FF5C(&v107, v105);
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                id v104 = a1;
                sub_10022CFB0(v105, (uint64_t)v106, isUniquelyReferenced_nonNull_native);
                a1 = v104;
                swift_bridgeObjectRelease();
                sub_10018FFC8((uint64_t)v106);

                goto LABEL_93;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
LABEL_98:
            __break(1u);
            goto LABEL_99;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v13 = v62;
        id v30 = v102;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100009A08((uint64_t)&v107, &qword_100479F50);
    }
    swift_bridgeObjectRelease();
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v74 = type metadata accessor for Logger();
    sub_10018A9A8(v74, (uint64_t)qword_10047F3A8);
    uint64_t v50 = v2;
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v100 = (void *)swift_slowAlloc();
      uint64_t v101 = (void *)swift_slowAlloc();
      v106[0] = v101;
      *(_DWORD *)uint64_t v53 = 138543618;
      id v102 = v30;
      *(void *)&long long v107 = v50;
      int v75 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v100 = v50;

      *(_WORD *)(v53 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v107 = sub_10018A9E0(v103, v13, (uint64_t *)v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v55 = v102;
      swift_bridgeObjectRelease();
      uint64_t v56 = "[%{public}@]<%{public}s> dropping push message for different participant.";
      goto LABEL_73;
    }
    goto LABEL_75;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v64 = type metadata accessor for Logger();
  sub_10018A9A8(v64, (uint64_t)qword_10047F3A8);
  char v65 = v2;
  uint64_t v66 = Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    uint64_t v100 = (void *)swift_slowAlloc();
    uint64_t v101 = (void *)swift_slowAlloc();
    v106[0] = v101;
    *(_DWORD *)uint64_t v68 = 138543618;
    id v102 = v30;
    *(void *)&long long v107 = v65;
    uint64_t v69 = v65;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v100 = v65;

    *(_WORD *)(v68 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)&long long v107 = sub_10018A9E0(v103, v13, (uint64_t *)v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v30 = v102;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "[%{public}@]<%{public}s> Received session end push message.", (uint8_t *)v68, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100231260();
  uint64_t v70 = swift_allocError();
  *uint64_t v71 = 5;
  sub_100215528(v70);
  swift_errorRelease();
}

void sub_100207AE4(uint64_t a1, uint64_t a2, unint64_t a3, char *a4)
{
  uint64_t v89 = a1;
  uint64_t v90 = type metadata accessor for Participant();
  uint64_t v8 = *(void *)(v90 - 8);
  uint64_t v9 = __chkstk_darwin(v90);
  char v87 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v78 - v11;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void *)((char *)v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v17 = *(void **)&v4[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    if (qword_10047F3A0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = sub_10018A9A8(v19, (uint64_t)qword_10047F3A8);
  uint64_t v21 = v90;
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v86 = v8 + 16;
  v85(v12, a4, v90);
  unint64_t v22 = v4;
  sub_10018FE44(a2, a3);
  char v23 = v22;
  sub_10018FE44(a2, a3);
  NSString v24 = v23;
  sub_10018FE44(a2, a3);
  id v25 = v24;
  sub_10018FE44(a2, a3);
  uint64_t v88 = v20;
  id v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.info.getter();
  int v28 = v27;
  BOOL v29 = os_log_type_enabled(v26, v27);
  uint64_t v84 = v8;
  if (v29)
  {
    uint64_t v30 = swift_slowAlloc();
    char v83 = a4;
    uint64_t v31 = v30;
    uint64_t v32 = swift_slowAlloc();
    v78[0] = v12;
    v78[1] = v32;
    uint64_t v33 = (void *)v32;
    uint64_t v82 = swift_slowAlloc();
    uint64_t v91 = (uint64_t)v25;
    uint64_t v92 = v82;
    *(_DWORD *)uint64_t v31 = 138544386;
    os_log_t v79 = v26;
    int v80 = v28;
    uint64_t v34 = v25;
    id v35 = v25;
    char v81 = v25;
    char v36 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v33 = v35;

    *(_WORD *)(v31 + 12) = 2082;
    uint64_t v38 = *(void *)&v36[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v37 = *(void *)&v36[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v91 = sub_10018A9E0(v38, v37, &v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 22) = 2080;
    sub_100015B28(&qword_100479B28, (void (*)(uint64_t))&type metadata accessor for Participant);
    uint64_t v39 = v78[0];
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v91 = sub_10018A9E0(v40, v41, &v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v42(v39, v90);
    *(_WORD *)(v31 + 32) = 2082;
    char v43 = v89;
    LOBYTE(v91) = v89;
    sub_100238E8C();
    uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v91 = sub_10018A9E0(v44, v45, &v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10018FE9C(a2, a3);
    sub_10018FE9C(a2, a3);
    *(_WORD *)(v31 + 42) = 2080;
    sub_10018FE44(a2, a3);
    uint64_t v46 = Data.description.getter();
    unint64_t v48 = v47;
    sub_10018FE9C(a2, a3);
    uint64_t v91 = sub_10018A9E0(v46, v48, &v92);
    uint64_t v21 = v90;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10018FE9C(a2, a3);
    sub_10018FE9C(a2, a3);
    os_log_t v49 = v79;
    _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v80, "[%{public}@]<%{public}s> received message from %s. Type: %{public}s. Payload: %s", (uint8_t *)v31, 0x34u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v83;
    swift_slowDealloc();

    uint64_t v50 = v81;
  }
  else
  {

    uint64_t v50 = v25;
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v42((uint64_t)v12, v21);
    sub_10018FE9C(a2, a3);
    sub_10018FE9C(a2, a3);
    sub_10018FE9C(a2, a3);
    sub_10018FE9C(a2, a3);

    char v43 = v89;
  }
  if (*(void *)&v50[OBJC_IVAR___MRDFastSyncGroupSession__state] != 3)
  {
    os_log_type_t v52 = v50;
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v56 = (void *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v91 = (uint64_t)v52;
      uint64_t v92 = v57;
      *(_DWORD *)uint64_t v55 = 138543618;
      os_log_type_t v58 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v56 = v52;

      *(_WORD *)(v55 + 12) = 2082;
      uint64_t v59 = *(void *)&v58[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v60 = *(void *)&v58[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v91 = sub_10018A9E0(v59, v60, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v61 = "[%{public}@]<%{public}s> dropping message received while not joined.";
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v53, v54, v61, (uint8_t *)v55, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
LABEL_39:

    return;
  }
  LOBYTE(v92) = v43;
  LOBYTE(v91) = 0;
  sub_100238E38();
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0
    && !*(void *)&v50[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle + 8]
    && !*(void *)&v50[OBJC_IVAR___MRDFastSyncGroupSession_leaderFastSyncIdentifier + 8])
  {
    os_log_type_t v52 = v50;
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v73 = (void *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v91 = (uint64_t)v52;
      uint64_t v92 = v74;
      *(_DWORD *)uint64_t v55 = 138543618;
      int v75 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v73 = v52;

      *(_WORD *)(v55 + 12) = 2082;
      uint64_t v76 = *(void *)&v75[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v77 = *(void *)&v75[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v91 = sub_10018A9E0(v76, v77, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v61 = "[%{public}@]<%{public}s> dropping message received before leader discovered.";
      goto LABEL_14;
    }
    goto LABEL_39;
  }
  if (v50[OBJC_IVAR___MRDFastSyncGroupSession_isLeader])
  {
    uint64_t v51 = v87;
    v85(v87, a4, v21);
LABEL_16:
    uint64_t v63 = ((uint64_t (*)(char *, uint64_t))v42)(v51, v21);
    goto LABEL_17;
  }
  LOBYTE(v92) = v43;
  LOBYTE(v91) = 0;
  char v62 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v51 = v87;
  v85(v87, a4, v21);
  if (v62) {
    goto LABEL_16;
  }
  uint64_t v64 = Participant.handle.getter();
  uint64_t v66 = *(void *)&v50[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle + 8];
  if (!v66)
  {
    v42((uint64_t)v51, v21);
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (v64 == *(void *)&v50[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle] && v66 == v65)
  {
    v42((uint64_t)v87, v21);
    uint64_t v63 = swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
  v42((uint64_t)v87, v21);
  uint64_t v63 = swift_bridgeObjectRelease();
  if ((v67 & 1) == 0)
  {
LABEL_35:
    os_log_type_t v52 = v50;
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v68 = (void *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v91 = (uint64_t)v52;
      uint64_t v92 = v69;
      *(_DWORD *)uint64_t v55 = 138543618;
      uint64_t v70 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v68 = v52;

      *(_WORD *)(v55 + 12) = 2082;
      uint64_t v71 = *(void *)&v70[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v72 = *(void *)&v70[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v91 = sub_10018A9E0(v71, v72, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v61 = "[%{public}@]<%{public}s> dropping message that did not come from leader.";
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_17:
  switch(v43)
  {
    case 1:
      sub_100209318(v63, a2, a3, a4);
      break;
    case 2:
      sub_10020B6D8(v63, a2, a3, (uint64_t)a4);
      break;
    case 3:
      sub_10020C048(v63, a2, a3);
      break;
    case 4:
      sub_100234474((uint64_t)a4);
      break;
    case 5:
      sub_10020CDB0(v63, a2, a3, (uint64_t)a4);
      break;
    case 6:
      sub_100234938((uint64_t)a4);
      break;
    case 7:
      sub_10020DCE0(v63, a2, a3);
      break;
    case 8:
      sub_10020E7D4(v63, a2, a3, (uint64_t)a4);
      break;
    case 9:
      sub_10020FC80(v63, a2, a3, (uint64_t)a4);
      break;
    case 10:
      sub_100235984((uint64_t)a4);
      break;
    default:
      sub_10020880C(v63, a2, a3, (uint64_t)a4);
      break;
  }
}

uint64_t sub_10020880C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = type metadata accessor for Participant();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v66 = v11;
  uint64_t v68 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v12 - 8);
  char v67 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchPredicate();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  os_log_type_t v17 = (uint64_t *)((char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v18 = *(void **)&v5[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  *os_log_type_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v5[OBJC_IVAR___MRDFastSyncGroupSession_isLeader])
  {
    if (qword_10047F3A0 == -1)
    {
LABEL_4:
      uint64_t v65 = v10;
      uint64_t v20 = type metadata accessor for Logger();
      sub_10018A9A8(v20, (uint64_t)qword_10047F3A8);
      uint64_t v21 = v5;
      unint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        NSString v24 = (uint8_t *)swift_slowAlloc();
        id v25 = (void *)swift_slowAlloc();
        *(_DWORD *)NSString v24 = 138543362;
        uint64_t v69 = v21;
        id v26 = v21;
        uint64_t v64 = v9;
        uint64_t v27 = a4;
        int v28 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v25 = v21;

        a4 = v27;
        uint64_t v9 = v64;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%{public}@] Leader should not receive leader discovery messages.", v24, 0xCu);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        unint64_t v22 = v21;
      }
      uint64_t v38 = (uint64_t)v67;
      unint64_t v37 = v68;
      uint64_t v39 = v66;

      uint64_t v41 = *(uint64_t *)((char *)&v21->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
      uint64_t v40 = *(uint64_t *)((char *)&v21[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
      uint64_t v42 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v38, 1, 1, v42);
      uint64_t v43 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v44 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v37, a4, v9);
      unint64_t v45 = (*(unsigned __int8 *)(v44 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      uint64_t v46 = v9;
      unint64_t v47 = (v39 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v48 = (char *)swift_allocObject();
      *((void *)v48 + 2) = 0;
      *((void *)v48 + 3) = 0;
      *((void *)v48 + 4) = v43;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v48[v45], v37, v46);
      os_log_t v49 = &v48[v47];
      *(void *)os_log_t v49 = v41;
      *((void *)v49 + 1) = v40;
      swift_bridgeObjectRetain();
      sub_10018A588(v38, (uint64_t)&unk_10047A0C0, (uint64_t)v48);
      return swift_release();
    }
LABEL_18:
    swift_once();
    goto LABEL_4;
  }
  sub_10018FE44(a2, a3);
  sub_10028A208(a2, a3, (uint64_t)&type metadata for LeaderDiscoveryMessage, (uint64_t)&off_10047BA90, (uint64_t)&v69);
  unint64_t v29 = v70;
  if (v70 >> 60 == 15)
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10018A9A8(v30, (uint64_t)qword_10047F3A8);
    uint64_t v31 = v5;
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      id v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 138543362;
      uint64_t v69 = v31;
      char v36 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v35 = v31;

      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%{public}@] LeaderDiscovery message payload is malformed.", v34, 0xCu);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v32 = v31;
    }

    sub_100231260();
    uint64_t v61 = swift_allocError();
    void *v62 = 4;
    sub_100215528(v61);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v51 = (uint64_t)v69;
    uint64_t v52 = Participant.handle.getter();
    uint64_t v53 = (uint64_t *)&v5[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle];
    *uint64_t v53 = v52;
    v53[1] = v54;
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v55 = *(void **)&v5[OBJC_IVAR___MRDFastSyncGroupSession_pushMessenger];
    if (v55)
    {
      uint64_t v56 = a4;
      sub_100013A80(&qword_100478690);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_1003C58B0;
      id v58 = v55;
      *(void *)(v57 + 32) = Participant.handle.getter();
      *(void *)(v57 + 40) = v59;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v58 updateAllowedDestinations:isa];

      sub_10021E680();
      sub_10021D78C(v56);
      return sub_1001A3954(v51, v29);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100208F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  return _swift_task_switch(sub_100208FE8, 0, 0);
}

uint64_t sub_100208FE8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    swift_retain();

    v0[16] = dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
    swift_release();
    uint64_t v3 = Participant.handle.getter();
    uint64_t v5 = v4;
    v0[17] = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[18] = v6;
    void *v6 = v0;
    v6[1] = sub_100209184;
    return NearbyGroup.kickMember(_:)(v3, v5);
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_100209184()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10023A4C4, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

void sub_100209318(uint64_t a1, uint64_t a2, unint64_t a3, char *a4)
{
  os_log_type_t v290 = a4;
  uint64_t v7 = type metadata accessor for Participants();
  uint64_t v284 = *(void *)(v7 - 8);
  uint64_t v285 = v7;
  __chkstk_darwin(v7);
  uint64_t v283 = (char *)&v269 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for String.Encoding();
  uint64_t v277 = *(void **)(v9 - 8);
  uint64_t v278 = v9;
  __chkstk_darwin(v9);
  uint64_t v276 = (char *)&v269 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100013A80(&qword_100479B00);
  __chkstk_darwin(v11 - 8);
  uint64_t v275 = (char *)&v269 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v287 = (char *)type metadata accessor for UUID();
  id v289 = (char *)*((void *)v287 - 1);
  __chkstk_darwin(v287);
  uint64_t v14 = (char *)&v269 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v288 = type metadata accessor for Participant();
  uint64_t v286 = *(void *)(v288 - 8);
  uint64_t v15 = __chkstk_darwin(v288);
  os_log_type_t v17 = (char *)&v269 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v281 = (char *)&v269 - v18;
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (os_log_t *)((char *)&v269 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v23 = *(void **)((char *)v4 + OBJC_IVAR___MRDFastSyncGroupSession_executionQueue);
  void *v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
LABEL_102:
    swift_once();
LABEL_10:
    uint64_t v50 = type metadata accessor for Logger();
    sub_10018A9A8(v50, (uint64_t)qword_10047F3A8);
    uint64_t v51 = v22;
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 138543362;
      uint64_t v294 = v51;
      uint64_t v56 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v55 = v51;

      uint64_t v57 = "[%{public}@] Participants should not receive IdentityShare messages.";
LABEL_16:
      _os_log_impl((void *)&_mh_execute_header, v52, v53, v57, v54, 0xCu);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
LABEL_17:

    return;
  }
  unint64_t v22 = v4;
  if (*((unsigned char *)v4 + OBJC_IVAR___MRDFastSyncGroupSession_isLeader) != 1)
  {
    if (qword_10047F3A0 == -1) {
      goto LABEL_10;
    }
    goto LABEL_102;
  }
  sub_10018FE44(a2, a3);
  sub_10028A208(a2, a3, (uint64_t)&type metadata for IdentityShareMessage, (uint64_t)&off_10047BAC0, (uint64_t)&v294);
  id v25 = v294;
  if (!v294)
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    sub_10018A9A8(v58, (uint64_t)qword_10047F3A8);
    uint64_t v51 = v4;
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 138543362;
      uint64_t v294 = v51;
      unint64_t v60 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v59 = v51;

      uint64_t v57 = "[%{public}@] IdentityShare message payload is malformed.";
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  uint64_t v26 = Participant.handle.getter();
  uint64_t v28 = v27;
  unint64_t v29 = (char *)v4 + OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToMediaRemoteIdentifierMap;
  swift_beginAccess();
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *(void *)(*(void *)v29 + 16);
  uint64_t v280 = (char *)v22;
  if (v31)
  {
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_100013660(v26, v28);
    if (v33)
    {
      uint64_t v34 = (uint64_t *)(*(void *)(v30 + 56) + 16 * v32);
      uint64_t v36 = *v34;
      uint64_t v35 = v34[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v37 = [v25 identifier];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      uint64_t v41 = (void *)((char *)v22 + OBJC_IVAR___MRDFastSyncGroupSession_identities);
      swift_beginAccess();
      uint64_t v42 = *v41;
      if (*(void *)(v42 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v43 = sub_100013660(v38, v40);
        if (v44)
        {
          id v45 = *(id *)(*(void *)(v42 + 56) + 8 * v43);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10018FE08(0, &qword_10047A068);
          uint64_t v46 = v25;
          id v47 = v45;
          int v48 = static NSObject.== infix(_:_:)();

          uint64_t v49 = v48 ^ 1u;
LABEL_44:
          uint64_t v288 = v49;
LABEL_58:
          uint64_t v116 = Participant.handle.getter();
          uint64_t v118 = v117;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v292 = *(void **)v29;
          uint64_t v120 = v35;
          *(void *)unint64_t v29 = 0x8000000000000000;
          sub_10022CE28(v36, v35, v116, v118, isUniquelyReferenced_nonNull_native);
          *(void *)unint64_t v29 = v292;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_bridgeObjectRetain();
          id v121 = [v25 identifier];
          uint64_t v122 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v124 = v123;

          uint64_t v125 = v25;
          id v126 = v280;
          uint64_t v127 = (uint64_t *)&v280[OBJC_IVAR___MRDFastSyncGroupSession_participantIdentityMap];
          swift_beginAccess();
          char v128 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v292 = (void *)*v127;
          uint64_t *v127 = 0x8000000000000000;
          uint64_t v279 = v36;
          sub_10022CE28(v122, v124, v36, v120, v128);
          uint64_t *v127 = (uint64_t)v292;
          os_log_type_t v282 = (void *)v120;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          id v129 = [v125 identifier];
          uint64_t v130 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v26 = v131;

          uint64_t v132 = (uint64_t *)&v126[OBJC_IVAR___MRDFastSyncGroupSession_identities];
          swift_beginAccess();
          uint64_t v133 = v125;
          char v134 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v292 = (void *)*v132;
          *uint64_t v132 = 0x8000000000000000;
          id v289 = v133;
          sub_10022D270((uint64_t)v133, v130, v26, v134, (uint64_t *)&unk_100479FD8);
          *uint64_t v132 = (uint64_t)v292;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          uint64_t v135 = OBJC_IVAR___MRDFastSyncGroupSession_connectionManager;
          uint64_t v136 = *(void *)&v126[OBJC_IVAR___MRDFastSyncGroupSession_connectionManager];
          if (v136)
          {
            uint64_t v137 = *(uint64_t (**)(uint64_t))(*(void *)v136 + 200);
            uint64_t v138 = swift_retain();
            uint64_t v139 = v137(v138);
            swift_release();
            uint64_t v140 = Participant.handle.getter();
            unint64_t v22 = v282;
            uint64_t v142 = v279;
            if (*(void *)(v139 + 16) && (unint64_t v143 = sub_100013660(v140, v141), (v144 & 1) != 0))
            {
              uint64_t v145 = *(void **)(*(void *)(v139 + 56) + 8 * v143);
              swift_retain();
              swift_bridgeObjectRelease();
              uint64_t v146 = swift_bridgeObjectRelease();
              unsigned __int8 v147 = (*(uint64_t (**)(uint64_t))(*v145 + 168))(v146);
              if (sub_1002924E0(v147, 2u))
              {
                char v148 = (*(uint64_t (**)(void))(*v145 + 144))();
                if (sub_1002924D0(v148 & 1, 1))
                {
                  uint64_t v149 = v280;
                  uint64_t v150 = *(void *)&v280[v135];
                  if (!v150)
                  {
LABEL_119:
                    __break(1u);
LABEL_120:
                    __break(1u);
                    goto LABEL_121;
                  }
                  uint64_t v151 = v145[2];
                  uint64_t v152 = v145[3];
                  uint64_t v153 = *(void (**)(void, uint64_t, uint64_t))(*(void *)v150 + 368);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  v153(0, v151, v152);
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v195 = (uint64_t *)&v149[OBJC_IVAR___MRDFastSyncGroupSession_expectedRealtimeParticipants];
                  swift_beginAccess();
                  uint64_t v196 = *v195;
                  uint64_t v197 = v145[2];
                  uint64_t v198 = v145[3];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  char v199 = sub_10018835C(v197, v198, v196);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v199 & 1) == 0)
                  {
                    swift_release();
LABEL_100:
                    uint64_t v288 = 1;
                    unint64_t v22 = v282;
                    goto LABEL_70;
                  }
                  uint64_t v200 = v145[2];
                  uint64_t v201 = v145[3];
                  swift_beginAccess();
                  swift_bridgeObjectRetain();
                  sub_10018C4D0(v200, v201);
                  swift_endAccess();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_retain();
                  dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
                  swift_release();
                  uint64_t v202 = NearbyGroup.members.getter();
                  swift_release();
                  swift_retain();
                  uint64_t v203 = v275;
                  sub_1001FC108(v202, (uint64_t)v145, (uint64_t (*)(void))&type metadata accessor for NearbyGroup.Member, (uint64_t (*)(uint64_t))&NearbyGroup.Member.handle.getter, v275);
                  swift_bridgeObjectRelease();
                  uint64_t v204 = type metadata accessor for NearbyGroup.Member();
                  uint64_t v205 = *(void *)(v204 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v205 + 48))(v203, 1, v204) == 1)
                  {
                    sub_100009A08((uint64_t)v203, &qword_100479B00);
                  }
                  else
                  {
                    char v287 = (char *)NearbyGroup.Member.tokenDestination.getter();
                    unint64_t v206 = v203;
                    uint64_t v208 = v207;
                    (*(void (**)(char *, uint64_t))(v205 + 8))(v206, v204);
                    if (v208) {
                      goto LABEL_89;
                    }
                  }
                  uint64_t v208 = v145[3];
                  char v287 = (char *)v145[2];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
LABEL_89:
                  if (qword_10047F3A0 != -1) {
                    swift_once();
                  }
                  uint64_t v209 = type metadata accessor for Logger();
                  sub_10018A9A8(v209, (uint64_t)qword_10047F3A8);
                  uint64_t v210 = v149;
                  swift_retain_n();
                  swift_bridgeObjectRetain_n();
                  uint64_t v211 = v210;
                  uint64_t v212 = Logger.logObject.getter();
                  os_log_type_t v213 = static os_log_type_t.info.getter();
                  int v214 = v213;
                  BOOL v215 = os_log_type_enabled(v212, v213);
                  uint64_t v286 = v208;
                  uint64_t v288 = (uint64_t)v211;
                  uint64_t v281 = 0;
                  if (v215)
                  {
                    uint64_t v216 = swift_slowAlloc();
                    os_log_type_t v217 = (void *)swift_slowAlloc();
                    uint64_t v275 = (char *)swift_slowAlloc();
                    uint64_t v294 = v275;
                    *(_DWORD *)uint64_t v216 = 138543874;
                    LODWORD(v274) = v214;
                    uint64_t v292 = v211;
                    uint64_t v218 = v145;
                    id v219 = (id)v288;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    void *v217 = v288;

                    *(_WORD *)(v216 + 12) = 2082;
                    uint64_t v220 = v218[2];
                    unint64_t v221 = v218[3];
                    swift_bridgeObjectRetain();
                    uint64_t v292 = (void *)sub_10018A9E0(v220, v221, (uint64_t *)&v294);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    unint64_t v222 = v218;
                    unint64_t v223 = v286;
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v216 + 22) = 2082;
                    swift_bridgeObjectRetain();
                    uint64_t v292 = (void *)sub_10018A9E0((uint64_t)v287, v223, (uint64_t *)&v294);
                    uint64_t v211 = (char *)v288;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl((void *)&_mh_execute_header, v212, (os_log_type_t)v274, "[%{public}@] Send transportMigrationReply push to: %{public}s, dst: %{public}s.", (uint8_t *)v216, 0x20u);
                    sub_100013A80((uint64_t *)&unk_10047B850);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                    unint64_t v222 = v145;
                    swift_release_n();
                  }
                  unint64_t v224 = *(void **)&v211[OBJC_IVAR___MRDFastSyncGroupSession_pushMessenger];
                  if (!v224) {
                    goto LABEL_120;
                  }
                  sub_100013A80((uint64_t *)&unk_100479B10);
                  uint64_t inited = swift_initStackObject();
                  *(_OWORD *)(inited + 16) = xmmword_1003C6370;
                  uint64_t v275 = v224;
                  uint64_t v226 = sub_1002899FC();
                  int v228 = *(char **)v226;
                  uint64_t v227 = (char *)*((void *)v226 + 1);
                  uint64_t v294 = v228;
                  uint64_t v295 = (uint64_t)v227;
                  uint64_t v274 = v227;
                  swift_bridgeObjectRetain_n();
                  AnyHashable.init<A>(_:)();
                  uint64_t v229 = (uint64_t *)sub_100289A5C();
                  uint64_t v231 = *v229;
                  uint64_t v230 = v229[1];
                  *(void *)(inited + 96) = &type metadata for String;
                  *(void *)(inited + 72) = v231;
                  *(void *)(inited + 80) = v230;
                  swift_bridgeObjectRetain();
                  unint64_t v232 = sub_100289A14();
                  uint64_t v234 = *(char **)v232;
                  os_log_type_t v233 = (char *)*((void *)v232 + 1);
                  uint64_t v294 = v234;
                  uint64_t v295 = (uint64_t)v233;
                  uint64_t v273 = v233;
                  swift_bridgeObjectRetain_n();
                  AnyHashable.init<A>(_:)();
                  swift_bridgeObjectRetain();
                  uint64_t v235 = v276;
                  static String.Encoding.utf8.getter();
                  uint64_t v236 = String.data(using:allowLossyConversion:)();
                  unint64_t v238 = v237;
                  swift_bridgeObjectRelease();
                  ((void (*)(char *, uint64_t))v277[1])(v235, v278);
                  if (v238 >> 60 == 15)
                  {
LABEL_121:
                    __break(1u);
                    goto LABEL_122;
                  }
                  *(void *)(inited + 168) = &type metadata for Data;
                  *(void *)(inited + 144) = v236;
                  *(void *)(inited + 152) = v238;
                  uint64_t v239 = sub_100289A20();
                  uint64_t v241 = *(char **)v239;
                  uint64_t v240 = *((void *)v239 + 1);
                  uint64_t v294 = v241;
                  uint64_t v295 = v240;
                  uint64_t v278 = v240;
                  swift_bridgeObjectRetain_n();
                  uint64_t v242 = AnyHashable.init<A>(_:)();
                  uint64_t v243 = v222;
                  uint64_t v244 = (*(uint64_t (**)(uint64_t))(*v222 + 216))(v242);
                  *(void *)(inited + 240) = &type metadata for Int;
                  *(void *)(inited + 216) = v244;
                  uint64_t v245 = (uint64_t *)sub_100289A2C();
                  uint64_t v246 = v245[1];
                  uint64_t v294 = (char *)*v245;
                  uint64_t v295 = v246;
                  swift_bridgeObjectRetain_n();
                  AnyHashable.init<A>(_:)();
                  uint64_t v247 = v288;
                  uint64_t v249 = *(void *)(v288 + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
                  uint64_t v248 = *(void *)(v288 + OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8);
                  *(void *)(inited + 312) = &type metadata for String;
                  *(void *)(inited + 288) = v249;
                  *(void *)(inited + 296) = v248;
                  swift_bridgeObjectRetain();
                  uint64_t v250 = (uint64_t *)sub_100289A08();
                  uint64_t v251 = v250[1];
                  uint64_t v294 = (char *)*v250;
                  uint64_t v295 = v251;
                  swift_bridgeObjectRetain_n();
                  AnyHashable.init<A>(_:)();
                  uint64_t v253 = v243[2];
                  uint64_t v252 = v243[3];
                  uint64_t v277 = v243;
                  *(void *)(inited + 384) = &type metadata for String;
                  *(void *)(inited + 360) = v253;
                  *(void *)(inited + 368) = v252;
                  swift_bridgeObjectRetain();
                  os_log_type_t v254 = (uint64_t *)sub_1002899F0();
                  uint64_t v255 = v254[1];
                  uint64_t v294 = (char *)*v254;
                  uint64_t v295 = v255;
                  swift_bridgeObjectRetain_n();
                  AnyHashable.init<A>(_:)();
                  uint64_t v256 = (uint64_t *)(v247 + OBJC_IVAR___MRDFastSyncGroupSession_localHandle);
                  uint64_t v257 = *(void *)(v247 + OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8);
                  if (!v257)
                  {
LABEL_122:
                    __break(1u);
                    goto LABEL_123;
                  }
                  uint64_t v258 = *v256;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  *(void *)(inited + 456) = &type metadata for String;
                  *(void *)(inited + 432) = v258;
                  *(void *)(inited + 440) = v257;
                  sub_100189560(inited);
                  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease();
                  sub_100013A80(&qword_100478690);
                  uint64_t v260 = swift_initStackObject();
                  *(_OWORD *)(v260 + 16) = xmmword_1003C58B0;
                  *(void *)(v260 + 32) = v287;
                  *(void *)(v260 + 40) = v286;
                  sub_1002339E8(v260);
                  swift_setDeallocating();
                  swift_arrayDestroy();
                  Class v261 = Set._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease();
                  uint64_t v262 = v275;
                  [v275 sendMessage:isa toDestinations:v261];

                  uint64_t v263 = *(void *)&v280[v135];
                  if (!v263)
                  {
LABEL_123:
                    __break(1u);
                    goto LABEL_124;
                  }
                  uint64_t v264 = v277[2];
                  uint64_t v265 = v277[3];
                  uint64_t v266 = *(void (**)(void, uint64_t, uint64_t))(*(void *)v263 + 392);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v267 = v264;
                  uint64_t v61 = v281;
                  v266(0, v267, v265);
                  uint64_t v142 = v279;
                  if (!v61)
                  {
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
                    goto LABEL_100;
                  }
                  unint64_t v22 = v282;
                  swift_release();
                  swift_bridgeObjectRelease();
                  if (qword_10047F3A0 == -1)
                  {
LABEL_66:
                    uint64_t v154 = type metadata accessor for Logger();
                    sub_10018A9A8(v154, (uint64_t)qword_10047F3A8);
                    int v155 = v280;
                    swift_bridgeObjectRetain_n();
                    uint64_t v156 = v155;
                    uint64_t v157 = Logger.logObject.getter();
                    os_log_type_t v158 = static os_log_type_t.error.getter();
                    if (os_log_type_enabled(v157, v158))
                    {
                      uint64_t v159 = swift_slowAlloc();
                      uint64_t v286 = swift_slowAlloc();
                      char v287 = (char *)swift_slowAlloc();
                      uint64_t v294 = v287;
                      *(_DWORD *)uint64_t v159 = 138543618;
                      uint64_t v292 = v156;
                      uint64_t v160 = v156;
                      uint64_t v288 = (uint64_t)v61;
                      unint64_t v161 = v160;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      *(void *)uint64_t v286 = v156;

                      *(_WORD *)(v159 + 12) = 2082;
                      swift_bridgeObjectRetain();
                      uint64_t v162 = v279;
                      uint64_t v292 = (void *)sub_10018A9E0(v279, (unint64_t)v282, (uint64_t *)&v294);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      swift_bridgeObjectRelease_n();
                      _os_log_impl((void *)&_mh_execute_header, v157, v158, "[%{public}@] realtime transition failure for: %{public}s. Resolve by removing participant.", (uint8_t *)v159, 0x16u);
                      sub_100013A80((uint64_t *)&unk_10047B850);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      unint64_t v22 = v282;
                      swift_slowDealloc();
                    }
                    else
                    {

                      swift_bridgeObjectRelease_n();
                      uint64_t v162 = v279;
                    }
                    (*(void (**)(uint64_t, void *))((swift_isaMask & *(void *)v156) + 0x538))(v162, v22);
                    swift_release();
                    swift_errorRelease();
                    uint64_t v288 = 1;
                    uint64_t v142 = v162;
                    goto LABEL_70;
                  }
LABEL_110:
                  swift_once();
                  goto LABEL_66;
                }
              }
              swift_release();
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
LABEL_70:
            unint64_t v163 = v280;
            uint64_t v164 = *(void *)&v280[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger];
            if (!v164)
            {
              swift_bridgeObjectRelease();
              if (qword_10047F3A0 != -1) {
                swift_once();
              }
              uint64_t v186 = type metadata accessor for Logger();
              sub_10018A9A8(v186, (uint64_t)qword_10047F3A8);
              uint64_t v187 = v280;
              unint64_t v188 = Logger.logObject.getter();
              os_log_type_t v189 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v188, v189))
              {
                uint64_t v190 = swift_slowAlloc();
                uint64_t v191 = (void *)swift_slowAlloc();
                os_log_type_t v290 = (char *)swift_slowAlloc();
                uint64_t v294 = v290;
                *(_DWORD *)uint64_t v190 = 138543618;
                uint64_t v292 = v187;
                int v192 = v187;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *uint64_t v191 = v187;

                *(_WORD *)(v190 + 12) = 2082;
                uint64_t v193 = *(void *)&v192[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
                unint64_t v194 = *(void *)&v192[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
                swift_bridgeObjectRetain();
                uint64_t v292 = (void *)sub_10018A9E0(v193, v194, (uint64_t *)&v294);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v188, v189, "[%{public}@]<%{public}s> No messenger to respond to identity share.", (uint8_t *)v190, 0x16u);
                sub_100013A80((uint64_t *)&unk_10047B850);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                return;
              }

              goto LABEL_80;
            }
            uint64_t v165 = (uint64_t *)&v280[OBJC_IVAR___MRDFastSyncGroupSession_guests];
            swift_beginAccess();
            uint64_t v166 = *v165;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v26 = sub_10018835C(v142, (uint64_t)v22, v166);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v289 = v289;
            sub_10028A950();
            if (*(void *)&v163[OBJC_IVAR___MRDFastSyncGroupSession_localParticipantIdentifier + 8])
            {
              uint64_t v171 = v167;
              uint64_t v172 = v168;
              uint64_t v173 = v169;
              int v174 = v170;
              uint64_t v175 = *(void **)&v163[OBJC_IVAR___MRDFastSyncGroupSession_localIdentity];
              swift_bridgeObjectRetain();
              id v176 = v175;
              sub_10028A950();
              sub_10028B1A8(v171, v172, v173, v174 & 0x10101, v178, v179, v180, v177 & 0x10101, (uint64_t)&v294);
              id v181 = sub_10028B42C();
              sub_1002389C8((uint64_t)&v294);
              id v182 = v181;
              uint64_t v183 = (uint64_t)v283;
              static Participants.only(_:)();
              uint64_t v184 = swift_allocObject();
              *(void *)(v184 + 16) = v163;
              uint64_t v185 = v163;
              sub_10021E92C(2u, v181, v183, v164, (uint64_t)sub_100238A14, v184);

              swift_release();
              (*(void (**)(uint64_t, uint64_t))(v284 + 8))(v183, v285);
              if (v288) {
                sub_1002121F0(1);
              }
              swift_release();

LABEL_80:
              return;
            }
            goto LABEL_113;
          }
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
          goto LABEL_114;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v49 = 1;
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v274 = v29;
  uint64_t v61 = (char *)v22 + OBJC_IVAR___MRDFastSyncGroupSession_prewarmedParticipantIdentifiers;
  swift_beginAccess();
  if (!*(void *)v61) {
    goto LABEL_112;
  }
  if (!*(void *)(*(void *)v61 + 16)
    || (uint64_t v26 = v25,
        swift_bridgeObjectRetain(),
        sub_10022A100(v26),
        uint64_t v63 = v62,
        (id)v26,
        swift_bridgeObjectRelease(),
        (v63 & 1) == 0))
  {
    UUID.init()();
    uint64_t v279 = UUID.uuidString.getter();
    os_log_type_t v282 = (void *)v74;
    int v75 = (char *)*((void *)v289 + 1);
    v289 += 8;
    uint64_t v281 = v75;
    ((void (*)(char *, char *))v75)(v14, v287);
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v76 = type metadata accessor for Logger();
    sub_10018A9A8(v76, (uint64_t)qword_10047F3A8);
    uint64_t v77 = v286;
    uint64_t v78 = v288;
    (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v17, v290, v288);
    os_log_t v79 = v22;
    swift_bridgeObjectRetain_n();
    int v80 = v79;
    char v81 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.default.getter();
    LODWORD(v273) = v82;
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v271 = v25;
      uint64_t v84 = v83;
      os_log_t v272 = (os_log_t)swift_slowAlloc();
      uint64_t v270 = (char *)swift_slowAlloc();
      uint64_t v294 = v270;
      *(_DWORD *)uint64_t v84 = 138543874;
      os_log_t v269 = v81;
      uint64_t v292 = v80;
      uint64_t v85 = v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v272->Class isa = (Class)v80;

      *(_WORD *)(v84 + 12) = 2082;
      Participant.id.getter();
      uint64_t v86 = UUID.uuidString.getter();
      unint64_t v88 = v87;
      ((void (*)(char *, char *))v281)(v14, v287);
      uint64_t v292 = (void *)sub_10018A9E0(v86, v88, (uint64_t *)&v294);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v89 = (unint64_t)v282;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v17, v288);
      uint64_t v35 = v89;
      *(_WORD *)(v84 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v36 = v279;
      uint64_t v292 = (void *)sub_10018A9E0(v279, v89, (uint64_t *)&v294);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      os_log_t v90 = v269;
      _os_log_impl((void *)&_mh_execute_header, v269, (os_log_type_t)v273, "[%{public}@] Mapping fast sync participant: %{public}s to identifier %{public}s.", (uint8_t *)v84, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      id v25 = v271;
      swift_slowDealloc();

      uint64_t v288 = 1;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v77 + 8))(v17, v78);
      uint64_t v35 = (uint64_t)v282;
      swift_bridgeObjectRelease_n();
      uint64_t v288 = 1;
      uint64_t v36 = v279;
    }
    unint64_t v29 = v274;
    goto LABEL_58;
  }
  swift_beginAccess();
  if (!*(void *)v61)
  {
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  id v64 = (id)v26;
  uint64_t v35 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v292 = *(void **)v61;
  uint64_t v65 = (uint64_t)v292;
  *(void *)uint64_t v61 = 0x8000000000000000;
  id v66 = v64;
  unint64_t v68 = sub_10022A100((uint64_t)v66);
  uint64_t v69 = *(void *)(v65 + 16);
  BOOL v70 = (v67 & 1) == 0;
  uint64_t v71 = v69 + v70;
  if (__OFADD__(v69, v70))
  {
    __break(1u);
    goto LABEL_104;
  }
  uint64_t v26 = v67;
  if (*(void *)(v65 + 24) >= v71)
  {
    uint64_t v63 = v288;
    if ((v35 & 1) == 0) {
      goto LABEL_108;
    }
    if ((v67 & 1) == 0)
    {
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
LABEL_38:
    while (1)
    {
      uint64_t v91 = *(void **)(v292[7] + 8 * v68);
      v291[0] = (uint64_t)v91;
      if (!v91[2]) {
        break;
      }
      uint64_t v26 = v68;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v92 = v91[2];
        if (v92) {
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v91 = sub_10022EDC4(v91);
        uint64_t v92 = v91[2];
        if (v92)
        {
LABEL_41:
          uint64_t v93 = v92 - 1;
          id v94 = &v91[2 * v93];
          uint64_t v35 = v94[5];
          uint64_t v279 = v94[4];
          v91[2] = v93;
          v291[0] = (uint64_t)v91;
          unint64_t v68 = v26;
          goto LABEL_46;
        }
      }
      __break(1u);
LABEL_108:
      unint64_t v268 = v68;
      sub_10022C6E8();
      unint64_t v68 = v268;
      if ((v26 & 1) == 0) {
        goto LABEL_109;
      }
    }
    uint64_t v279 = 0;
    uint64_t v35 = 0;
LABEL_46:
    sub_10022C258(v291, 1, (uint64_t *)&v292, v68, v66);

    swift_bridgeObjectRelease();
    *(void *)uint64_t v61 = v292;
    swift_endAccess();

    if (!v35) {
      goto LABEL_115;
    }
    uint64_t v95 = *(void *)v61;
    if (!*(void *)v61)
    {
LABEL_116:
      __break(1u);
      goto LABEL_117;
    }
    if (*(void *)(v95 + 16))
    {
      uint64_t v26 = (uint64_t)v66;
      swift_bridgeObjectRetain();
      unint64_t v96 = sub_10022A100(v26);
      if ((v97 & 1) == 0)
      {
LABEL_117:

        swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_118;
      }
      uint64_t v98 = *(void *)(*(void *)(v95 + 56) + 8 * v96);
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      uint64_t v99 = *(void *)(v98 + 16);
      swift_bridgeObjectRelease();
      id v66 = (id)v286;
      if (!v99)
      {
        swift_beginAccess();
        if (!*(void *)v61)
        {
LABEL_118:
          __break(1u);
          goto LABEL_119;
        }
        id v100 = (id)v26;
        sub_10022B254((uint64_t)v100);
        swift_endAccess();

        swift_bridgeObjectRelease();
      }
      if (qword_10047F3A0 == -1) {
        goto LABEL_54;
      }
      goto LABEL_105;
    }
LABEL_104:
    __break(1u);
LABEL_105:
    swift_once();
LABEL_54:
    uint64_t v101 = type metadata accessor for Logger();
    sub_10018A9A8(v101, (uint64_t)qword_10047F3A8);
    (*((void (**)(char *, char *, uint64_t))v66 + 2))(v281, v290, v63);
    id v102 = v22;
    swift_bridgeObjectRetain_n();
    uint64_t v103 = v102;
    id v104 = Logger.logObject.getter();
    os_log_type_t v105 = static os_log_type_t.default.getter();
    int v106 = v105;
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v107 = swift_slowAlloc();
      long long v108 = (char *)swift_slowAlloc();
      uint64_t v270 = v108;
      uint64_t v273 = (char *)swift_slowAlloc();
      uint64_t v294 = v273;
      *(_DWORD *)uint64_t v107 = 138543874;
      os_log_t v272 = v104;
      uint64_t v292 = v103;
      os_log_type_t v282 = (void *)v35;
      os_log_t v269 = (os_log_t)&v293;
      uint64_t v109 = v103;
      LODWORD(v271) = v106;
      id v110 = v109;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)long long v108 = v103;

      *(_WORD *)(v107 + 12) = 2082;
      uint64_t v111 = v281;
      Participant.id.getter();
      uint64_t v112 = UUID.uuidString.getter();
      unint64_t v114 = v113;
      (*((void (**)(char *, char *))v289 + 1))(v14, v287);
      uint64_t v292 = (void *)sub_10018A9E0(v112, v114, (uint64_t *)&v294);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v286 + 8))(v111, v288);
      *(_WORD *)(v107 + 22) = 2082;
      uint64_t v35 = (uint64_t)v282;
      swift_bridgeObjectRetain();
      uint64_t v36 = v279;
      uint64_t v292 = (void *)sub_10018A9E0(v279, v35, (uint64_t *)&v294);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      os_log_t v115 = v272;
      _os_log_impl((void *)&_mh_execute_header, v272, (os_log_type_t)v271, "[%{public}@] Mapping fast sync participant: %{public}s to prewarmed identifier %{public}s.", (uint8_t *)v107, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      uint64_t v288 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*((void (**)(char *, uint64_t))v66 + 1))(v281, v63);
      swift_bridgeObjectRelease_n();
      uint64_t v288 = 1;
      uint64_t v36 = v279;
    }
    unint64_t v29 = v274;
    goto LABEL_58;
  }
  sub_10022B95C(v71, v35);
  unint64_t v72 = sub_10022A100((uint64_t)v66);
  uint64_t v63 = v288;
  if ((v26 & 1) == (v73 & 1))
  {
    unint64_t v68 = v72;
    if (v26) {
      goto LABEL_38;
    }
    goto LABEL_109;
  }
LABEL_124:
  sub_10018FE08(0, &qword_10047A068);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_10020B6D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v68 = a4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v67 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for DispatchQoS();
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v17 = *(void **)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_executionQueue);
  void *v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
LABEL_4:
    uint64_t v19 = type metadata accessor for Logger();
    sub_10018A9A8(v19, (uint64_t)qword_10047F3A8);
    uint64_t v20 = v5;
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
      id v24 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v23 = 138543362;
      uint64_t aBlock = v20;
      id v25 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v24 = v20;

      uint64_t v26 = "[%{public}@] Leader should not receive IdentityShareReply messages.";
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v21, v22, v26, v23, 0xCu);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
LABEL_14:

    return;
  }
  if (*((unsigned char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_isLeader))
  {
    if (qword_10047F3A0 == -1) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  sub_10018FE44(a2, a3);
  sub_10028A208(a2, a3, (uint64_t)&type metadata for IdentityShareReplyMessage, (uint64_t)&off_10047BB80, (uint64_t)&aBlock);
  uint64_t v27 = v71;
  if (!v71)
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    sub_10018A9A8(v53, (uint64_t)qword_10047F3A8);
    uint64_t v20 = v5;
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v23 = 138543362;
      uint64_t aBlock = v20;
      uint64_t v55 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v54 = v20;

      uint64_t v26 = "[%{public}@] IdentityShareReply message payload is malformed.";
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  uint64_t v57 = v10;
  uint64_t v60 = v8;
  uint64_t v63 = v72;
  uint64_t v28 = (uint64_t)v74;
  uint64_t v62 = (uint64_t)v73;
  uint64_t v30 = v75;
  unint64_t v29 = v76;
  unsigned int v31 = v77 | (v78 << 16);
  unint64_t v32 = (void *)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_localParticipantIdentifier);
  uint64_t v61 = (uint64_t)aBlock;
  void *v32 = aBlock;
  v32[1] = v27;
  uint64_t v64 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v33 = (void *)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_leaderParticipantIdentifier);
  *char v33 = v28;
  v33[1] = v30;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  id v34 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
  swift_bridgeObjectRetain();
  uint64_t v59 = v29;
  id v35 = v29;
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v58 = v31;
  id v37 = [v34 initWithIdentifier:v36 identity:v35 connected:v31 & 1 guest:(v31 >> 8) & 1 hidden:HIWORD(v31) & 1];

  (*(void (**)(id))((swift_isaMask & *v5) + 0x2A8))(v37);
  sub_100013A80(&qword_100479F68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
  *(void *)(inited + 32) = Participant.handle.getter();
  *(void *)(inited + 40) = v39;
  uint64_t v68 = v28;
  *(void *)(inited + 48) = v28;
  *(void *)(inited + 56) = v30;
  unint64_t v40 = sub_1001FA23C(inited);
  uint64_t v41 = (void *)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToMediaRemoteIdentifierMap);
  swift_beginAccess();
  *uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_connectionManager);
  if (v42)
  {
    unint64_t v43 = *(void (**)(uint64_t))(*(void *)v42 + 360);
    swift_retain();
    uint64_t v44 = swift_bridgeObjectRetain();
    v43(v44);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1001F43DC();
    id v45 = sub_1001F415C();
    uint64_t v46 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v45) + 0xD0))(v46);

    uint64_t aBlock = (void *)sub_1001F43DC();
    uint64_t v47 = type metadata accessor for JoinTimingEvents();
    sub_100252448(v47, (uint64_t)&off_1004224C0);
    *(void *)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___joinTimings) = aBlock;
    swift_release();
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v5;
    unint64_t v74 = sub_10023754C;
    uint64_t v75 = v48;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v71 = 1107296256;
    unint64_t v72 = sub_100006760;
    char v73 = &unk_100422C78;
    uint64_t v49 = _Block_copy(&aBlock);
    uint64_t v50 = v5;
    static DispatchQoS.unspecified.getter();
    uint64_t v69 = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v51 = v57;
    uint64_t v52 = v60;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v49);
    sub_100238968(v61, v64, v63, v62, v68, v30, v59);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v51, v52);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v12, v66);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_10020C048(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v66 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for DispatchQoS();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v64 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (void ***)((char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)&v4[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  char v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_24:
    swift_once();
LABEL_4:
    uint64_t v18 = type metadata accessor for Logger();
    sub_10018A9A8(v18, (uint64_t)qword_10047F3A8);
    uint64_t v19 = v4;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v22 = 138543362;
      uint64_t aBlock = v19;
      id v24 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v23 = v19;

      id v25 = "[%{public}@] Leader should not receive MemberSync messages.";
LABEL_19:
      _os_log_impl((void *)&_mh_execute_header, v20, v21, v25, v22, 0xCu);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
LABEL_20:

    return;
  }
  if (v4[OBJC_IVAR___MRDFastSyncGroupSession_isLeader])
  {
    if (qword_10047F3A0 == -1) {
      goto LABEL_4;
    }
    goto LABEL_24;
  }
  sub_10018FE44(a2, a3);
  sub_10028A208(a2, a3, (uint64_t)&type metadata for MemberSyncMessage, (uint64_t)&off_10047BBB0, (uint64_t)&aBlock);
  uint64_t v26 = aBlock;
  if (!aBlock)
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    sub_10018A9A8(v48, (uint64_t)qword_10047F3A8);
    uint64_t v19 = v4;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v22 = 138543362;
      uint64_t aBlock = v19;
      uint64_t v50 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v49 = v19;

      id v25 = "[%{public}@] MemberSync message payload is malformed.";
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  uint64_t v27 = v70;
  unsigned int v58 = v71;
  uint64_t v28 = (char *)aBlock[2];
  unint64_t v29 = (void **)_swiftEmptyArrayStorage;
  uint64_t v62 = v7;
  uint64_t v63 = v4;
  uint64_t v60 = aBlock;
  uint64_t v61 = v8;
  uint64_t v59 = v70;
  if (v28)
  {
    uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v30 = (unsigned __int8 *)v26 + 58;
    do
    {
      unsigned int v31 = *(void **)(v30 - 10);
      uint64_t v32 = *(v30 - 2);
      uint64_t v33 = *(v30 - 1);
      unsigned int v34 = *v30;
      v30 += 32;
      id v35 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
      swift_bridgeObjectRetain();
      id v36 = v31;
      NSString v37 = String._bridgeToObjectiveC()();
      [v35 initWithIdentifier:v37 identity:v36 connected:v32 guest:v33 hidden:v34];

      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v28;
    }
    while (v28);
    unint64_t v29 = aBlock;
    swift_bridgeObjectRelease();
    uint64_t v7 = v62;
    uint64_t v4 = v63;
    uint64_t v8 = v61;
    uint64_t v27 = v59;
  }
  uint64_t v38 = *(void *)(v27 + 16);
  if (v38)
  {
    uint64_t v57 = v29;
    uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v39 = (unsigned __int8 *)(v27 + 58);
    do
    {
      unint64_t v40 = *(void **)(v39 - 10);
      uint64_t v41 = *(v39 - 2);
      uint64_t v42 = *(v39 - 1);
      unsigned int v43 = *v39;
      v39 += 32;
      id v44 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
      swift_bridgeObjectRetain();
      id v45 = v40;
      NSString v46 = String._bridgeToObjectiveC()();
      [v44 initWithIdentifier:v46 identity:v45 connected:v41 guest:v42 hidden:v43];

      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v38;
    }
    while (v38);
    uint64_t v47 = aBlock;
    swift_bridgeObjectRelease();
    uint64_t v7 = v62;
    uint64_t v4 = v63;
    uint64_t v8 = v61;
    unint64_t v29 = v57;
  }
  else
  {
    uint64_t v47 = (void **)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = (void *)swift_allocObject();
  uint64_t v52 = v58;
  v51[2] = v4;
  uint64_t v51[3] = v52;
  v51[4] = v29;
  v51[5] = v47;
  char v73 = sub_10023870C;
  unint64_t v74 = v51;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v70 = 1107296256;
  uint64_t v71 = sub_100006760;
  unint64_t v72 = &unk_100422C28;
  uint64_t v53 = _Block_copy(&aBlock);
  uint64_t v54 = v4;
  uint64_t v55 = v64;
  static DispatchQoS.unspecified.getter();
  uint64_t v68 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  uint64_t v56 = v66;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v53);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v56, v7);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v55, v67);
  swift_release();
}

void *sub_10020C8BC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_10022D3F8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    unint64_t v19 = v1 & 0xC000000000000001;
    unint64_t v20 = v1;
    while (v2 != v4)
    {
      if (v19)
      {
        uint64_t v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v5 = *(void **)(v1 + 8 * v4 + 32);
        swift_unknownObjectRetain();
      }
      id v6 = [v5 identifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v7 = [v5 identity];
      [v5 guest];
      [v5 hidden];
      sub_10028A950();
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      uint64_t v13 = v12;
      int v15 = v14;
      swift_unknownObjectRelease();
      unint64_t v17 = _swiftEmptyArrayStorage[2];
      unint64_t v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1) {
        sub_10022D3F8(v16 > 1, v17 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v17 + 1;
      uint64_t v18 = &_swiftEmptyArrayStorage[4 * v17];
      v18[4] = v9;
      v18[5] = v11;
      v18[6] = v13;
      *((unsigned char *)v18 + 56) = v15 & 1;
      *((unsigned char *)v18 + 57) = BYTE1(v15) & 1;
      *((unsigned char *)v18 + 58) = BYTE2(v15) & 1;
      unint64_t v1 = v20;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10020CAD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v38 = a4;
  uint64_t v37 = a3(0);
  uint64_t v6 = *(void *)(v37 - 8);
  uint64_t v7 = __chkstk_darwin(v37);
  id v36 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v35 = (char *)v31 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (!v10) {
    return (uint64_t)v11;
  }
  v31[1] = v4;
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_100014688(0, v10, 0);
  uint64_t result = sub_10001551C(a1);
  int64_t v13 = result;
  int v15 = v14;
  char v17 = v16 & 1;
  uint64_t v33 = a1;
  uint64_t v34 = a1 + 56;
  v31[3] = v6 + 32;
  void v31[4] = v6 + 16;
  os_log_t v31[2] = v6 + 8;
  uint64_t v32 = v6;
  while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v34 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v15) {
      goto LABEL_16;
    }
    int64_t v18 = *(void *)(a1 + 48) + *(void *)(v6 + 72) * v13;
    unint64_t v19 = v35;
    uint64_t v20 = v37;
    (*(void (**)(char *, int64_t, uint64_t))(v6 + 16))(v35, v18, v37);
    os_log_type_t v21 = v36;
    uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v36, v19, v20);
    uint64_t v23 = v38(v22);
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v20);
    uint64_t v11 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100014688(0, v11[2] + 1, 1);
      uint64_t v11 = v39;
    }
    unint64_t v27 = v11[2];
    unint64_t v26 = v11[3];
    if (v27 >= v26 >> 1)
    {
      sub_100014688(v26 > 1, v27 + 1, 1);
      uint64_t v11 = v39;
    }
    void v11[2] = v27 + 1;
    uint64_t v28 = &v11[2 * v27];
    v28[4] = v23;
    void v28[5] = v25;
    a1 = v33;
    uint64_t result = sub_100013AC4(v13, v15, v17 & 1, v33);
    int64_t v13 = result;
    int v15 = v29;
    char v17 = v30 & 1;
    --v10;
    uint64_t v6 = v32;
    if (!v10)
    {
      sub_100015510(result, v29, v30 & 1);
      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_10020CDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v75 = a3;
  uint64_t v8 = type metadata accessor for Participant();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v77 = v10;
  os_log_t v79 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v11 - 8);
  unsigned __int8 v78 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  char v16 = (uint64_t *)((char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v17 = *(void **)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_executionQueue);
  void *v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  char v19 = _dispatchPreconditionTest(_:)();
  uint64_t v20 = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  int v21 = *((unsigned __int8 *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_isLeader);
  uint64_t v76 = v9;
  if (v21 != 1)
  {
    id v31 = (id)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x2A0))(v20);
    if (!v31) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  uint64_t v22 = Participant.handle.getter();
  uint64_t v24 = v23;
  uint64_t v25 = (void *)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToMediaRemoteIdentifierMap);
  swift_beginAccess();
  uint64_t v26 = *v25;
  if (!*(void *)(v26 + 16))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  unint64_t v27 = sub_100013660(v22, v24);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v29 = (uint64_t *)(*(void *)(v26 + 56) + 16 * v27);
  uint64_t v30 = *v29;
  id v31 = (id)v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = (void *)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_guests);
  swift_beginAccess();
  uint64_t v33 = *v32;
  swift_bridgeObjectRetain();
  char v34 = sub_10018835C(v30, (uint64_t)v31, v33);
  swift_bridgeObjectRelease();
  id v35 = (char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_participantIdentityMap;
  swift_beginAccess();
  uint64_t v36 = *(void *)v35;
  if (!*(void *)(*(void *)v35 + 16))
  {
    __break(1u);
LABEL_25:

    __break(1u);
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v37 = sub_100013660(v30, (uint64_t)v31);
  if ((v38 & 1) == 0)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v39 = (uint64_t *)(*(void *)(v36 + 56) + 16 * v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = (void *)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_identities);
  swift_beginAccess();
  uint64_t v43 = *v42;
  if (!*(void *)(v43 + 16))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  unint64_t v44 = sub_100013660(v41, v40);
  if ((v45 & 1) == 0)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  id v46 = *(id *)(*(void *)(v43 + 56) + 8 * v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v47 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
  NSString v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v31 = [v47 initWithIdentifier:v48 identity:v46 connected:1 guest:v34 & 1];

  if (v31)
  {
LABEL_12:
    uint64_t v49 = *(void *)((char *)v5 + OBJC_IVAR___MRDFastSyncGroupSession_connectionManager);
    if (v49)
    {
      v80[3] = &type metadata for Data;
      unint64_t v50 = v75;
      v80[0] = a2;
      v80[1] = v75;
      swift_retain();
      sub_10018FE44(a2, v50);
      uint64_t v51 = Participant.handle.getter();
      (*(void (**)(void *, uint64_t, uint64_t, void))(*(void *)v49 + 432))(v80, v51, v52, 0);
      swift_release();
      swift_bridgeObjectRelease();

      return sub_10018FD5C((uint64_t)v80);
    }
    goto LABEL_25;
  }
LABEL_17:
  if (qword_10047F3A0 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v54 = type metadata accessor for Logger();
  sub_10018A9A8(v54, (uint64_t)qword_10047F3A8);
  uint64_t v55 = v5;
  uint64_t v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v56, v57))
  {
    unsigned int v58 = (uint8_t *)swift_slowAlloc();
    uint64_t v59 = (void *)swift_slowAlloc();
    *(_DWORD *)unsigned int v58 = 138543362;
    v80[0] = v55;
    uint64_t v60 = v55;
    uint64_t v75 = v8;
    uint64_t v61 = a4;
    uint64_t v62 = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v59 = v55;

    a4 = v61;
    uint64_t v8 = v75;
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "[%{public}@] Received remote control message from unmapped participant. Kicking.", v58, 0xCu);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v56 = v55;
  }
  uint64_t v64 = v76;
  uint64_t v63 = v77;
  uint64_t v66 = (uint64_t)v78;
  uint64_t v65 = v79;

  uint64_t v68 = *(uint64_t *)((char *)&v55->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
  uint64_t v67 = *(uint64_t *)((char *)&v55[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
  uint64_t v69 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v66, 1, 1, v69);
  uint64_t v70 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v65, a4, v8);
  unint64_t v71 = (*(unsigned __int8 *)(v64 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  unint64_t v72 = (v63 + v71 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v73 = (char *)swift_allocObject();
  *((void *)v73 + 2) = 0;
  *((void *)v73 + 3) = 0;
  *((void *)v73 + 4) = v70;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v73[v71], v65, v8);
  unint64_t v74 = &v73[v72];
  *(void *)unint64_t v74 = v68;
  *((void *)v74 + 1) = v67;
  swift_bridgeObjectRetain();
  sub_10018A588(v66, (uint64_t)&unk_10047A098, (uint64_t)v73);
  return swift_release();
}

uint64_t sub_10020D594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  return _swift_task_switch(sub_10020D628, 0, 0);
}

uint64_t sub_10020D628()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    swift_retain();

    v0[16] = dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
    swift_release();
    uint64_t v3 = Participant.handle.getter();
    uint64_t v5 = v4;
    v0[17] = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[18] = v6;
    void *v6 = v0;
    v6[1] = sub_10020D7C4;
    return NearbyGroup.kickMember(_:)(v3, v5);
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_10020D7C4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10020D958, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10020D958()
{
  uint64_t v13 = v0;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10018A9A8(v1, (uint64_t)qword_10047F3A8);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_retain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543874;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong) {
      v0[11] = Strong;
    }
    else {
      v0[8] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v8 = v0[14];
    unint64_t v7 = v0[15];
    *uint64_t v5 = Strong;
    swift_release();
    *(_WORD *)(v4 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[9] = sub_10018A9E0(v8, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 22) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v5[1] = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%{public}@]<%{public}s> Error kicking member: %{public}@", (uint8_t *)v4, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10020DCE0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (void **)((char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)&v4[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_30:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v13 = *(void (**)(void))&v4[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
  if (v13)
  {
    uint64_t v14 = *(NSObject **)&v4[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion + 8];
    sub_1002312B4(*(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion]);
    sub_10018FE44(a2, a3);
    sub_10028A208(a2, a3, (uint64_t)&type metadata for ErrorReplyMessage, (uint64_t)&off_10047BBE0, (uint64_t)&v59);
    unint64_t v15 = v60;
    if (v60)
    {
      if (v60 == 1)
      {
        if (qword_10047F3A0 != -1) {
          swift_once();
        }
        uint64_t v16 = type metadata accessor for Logger();
        sub_10018A9A8(v16, (uint64_t)qword_10047F3A8);
        char v17 = v4;
        id v18 = Logger.logObject.getter();
        os_log_type_t v19 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v18, v19))
        {
          os_log_type_t v57 = v14;
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          int v21 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v20 = 138543362;
          uint64_t v59 = (uint64_t)v17;
          uint64_t v22 = v17;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v21 = v17;

          _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%{public}@] TransportMigrationReply message payload is malformed.", v20, 0xCu);
          sub_100013A80((uint64_t *)&unk_10047B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          id v18 = v17;
        }

        sub_100231260();
        swift_allocError();
        void *v45 = 6;
        v13();
        swift_errorRelease();
        uint64_t v46 = swift_allocError();
        *id v47 = 6;
        sub_100215528(v46);
        goto LABEL_27;
      }
      uint64_t v34 = v59;
      if (qword_10047F3A0 != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      sub_10018A9A8(v35, (uint64_t)qword_10047F3A8);
      uint64_t v36 = v4;
      sub_10023856C(v34, v15);
      unint64_t v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.fault.getter();
      int v39 = v38;
      os_log_type_t v57 = v37;
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v54 = (void *)swift_slowAlloc();
        uint64_t v56 = swift_slowAlloc();
        uint64_t v59 = v56;
        *(_DWORD *)uint64_t v40 = 138543618;
        int v55 = v39;
        uint64_t v58 = (uint64_t)v36;
        uint64_t v41 = v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v54 = v36;

        *(_WORD *)(v40 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v58 = sub_10018A9E0(v34, v15, &v59);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_100238580(v34, v15);
        sub_100238580(v34, v15);
        swift_bridgeObjectRelease();
        uint64_t v42 = v57;
        _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v55, "[%{public}@] TransportMigrationReply error: %s. Cancel transition to low power.", (uint8_t *)v40, 0x16u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_100238580(v34, v15);
        sub_100238580(v34, v15);
      }
      uint64_t v48 = *(void *)&v36[OBJC_IVAR___MRDFastSyncGroupSession_connectionManager];
      if (v48)
      {
        uint64_t v49 = *(void *)&v36[OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8];
        if (v49)
        {
          uint64_t v50 = *(void *)&v36[OBJC_IVAR___MRDFastSyncGroupSession_localHandle];
          uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v48 + 416);
          swift_retain();
          swift_bridgeObjectRetain();
          v51(1, v50, v49);
          swift_release();
          swift_bridgeObjectRelease();
          sub_100231260();
          swift_allocError();
          *uint64_t v52 = 6;
          v13();
LABEL_27:
          swift_errorRelease();
          return sub_1001924CC((uint64_t)v13);
        }
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v30 = *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_connectionManager];
      if (v30)
      {
        uint64_t v31 = *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8];
        if (v31)
        {
          uint64_t v32 = *(void *)&v4[OBJC_IVAR___MRDFastSyncGroupSession_localHandle];
          uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v30 + 392);
          swift_retain();
          swift_bridgeObjectRetain();
          v33(1, v32, v31);
          swift_release();
          swift_bridgeObjectRelease();
          ((void (*)(void))v13)(0);
          return sub_1001924CC((uint64_t)v13);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    __break(1u);
LABEL_34:
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  if (qword_10047F3A0 != -1) {
    goto LABEL_30;
  }
LABEL_10:
  uint64_t v23 = type metadata accessor for Logger();
  sub_10018A9A8(v23, (uint64_t)qword_10047F3A8);
  uint64_t v24 = v4;
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    unint64_t v27 = (uint8_t *)swift_slowAlloc();
    char v28 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v27 = 138543362;
    uint64_t v59 = (uint64_t)v24;
    uint64_t v29 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v28 = v24;

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%{public}@] Received transport migration reply with no completion.", v27, 0xCu);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v25 = v24;
  }

  sub_100231260();
  uint64_t v43 = swift_allocError();
  *unint64_t v44 = 6;
  sub_100215528(v43);
  return swift_errorRelease();
}

void sub_10020E7D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v130 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  id v126 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for DispatchQoS();
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v125 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for Participant();
  uint64_t v134 = *(void *)(v135 - 8);
  uint64_t v11 = __chkstk_darwin(v135);
  uint64_t v13 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v131 = (char *)&v117 - v14;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v133 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v132 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v21 = *(void **)&v5[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  *uint64_t v20 = v21;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  id v22 = v21;
  uint64_t v23 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  sub_10018FE44(a2, a3);
  sub_10028A208(a2, a3, (uint64_t)&type metadata for JoinResponseMessage, (uint64_t)&off_10047BB20, (uint64_t)&aBlock);
  unint64_t v24 = v137;
  if (!v137)
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    sub_10018A9A8(v15, (uint64_t)qword_10047F3A8);
    unint64_t v87 = v5;
    unint64_t v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v88, v89))
    {

      return;
    }
    uint64_t v90 = swift_slowAlloc();
    uint64_t v91 = (void *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v90 = 138543618;
    uint64_t v144 = (uint64_t)v87;
    uint64_t v92 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v91 = v87;

    *(_WORD *)(v90 + 12) = 2080;
    uint64_t v144 = sub_10018A9E0(0xD000000000000028, 0x80000001003B5FB0, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "[%{public}@] %s message payload is malformed.", (uint8_t *)v90, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_25:
    swift_slowDealloc();

    return;
  }
  uint64_t v25 = aBlock;
  int v26 = v138;
  uint64_t v27 = Participant.handle.getter();
  uint64_t v29 = v28;
  uint64_t v30 = &v5[OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToMediaRemoteIdentifierMap];
  swift_beginAccess();
  uint64_t v31 = *(void *)v30;
  if (!*(void *)(v31 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  unint64_t v32 = sub_100013660(v27, v29);
  if ((v33 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v17 = v134;
    uint64_t v23 = v135;
    if (qword_10047F3A0 == -1)
    {
LABEL_23:
      sub_10018A9A8(v15, (uint64_t)qword_10047F3A8);
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v13, a4, v23);
      uint64_t v93 = v5;
      unint64_t v88 = Logger.logObject.getter();
      os_log_type_t v94 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v88, v94))
      {

        (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v23);
        return;
      }
      uint64_t v95 = swift_slowAlloc();
      unint64_t v96 = (void *)swift_slowAlloc();
      uint64_t v133 = swift_slowAlloc();
      uint64_t aBlock = v133;
      *(_DWORD *)uint64_t v95 = 138543874;
      uint64_t v143 = (uint64_t)v93;
      char v97 = v93;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v96 = v93;

      *(_WORD *)(v95 + 12) = 2080;
      uint64_t v143 = sub_10018A9E0(0xD000000000000028, 0x80000001003B5FB0, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v95 + 22) = 2082;
      uint64_t v98 = Participant.handle.getter();
      uint64_t v143 = sub_10018A9E0(v98, v99, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v134 + 8))(v13, v135);
      _os_log_impl((void *)&_mh_execute_header, v88, v94, "[%{public}@] %s message received from unknown handle: %{public}s", (uint8_t *)v95, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_25;
    }
LABEL_39:
    swift_once();
    goto LABEL_23;
  }
  uint64_t v124 = v25;
  uint64_t v34 = (uint64_t *)(*(void *)(v31 + 56) + 16 * v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v37 = (uint64_t *)&v5[OBJC_IVAR___MRDFastSyncGroupSession_guests];
  swift_beginAccess();
  uint64_t v38 = *v37;
  swift_bridgeObjectRetain();
  int v39 = sub_10018835C(v36, v35, v38);
  swift_bridgeObjectRelease();
  uint64_t v40 = &v5[OBJC_IVAR___MRDFastSyncGroupSession_participantIdentityMap];
  swift_beginAccess();
  uint64_t v41 = *(void **)v40;
  if (!v41[2])
  {
    __break(1u);
    goto LABEL_41;
  }
  LODWORD(v123) = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v42 = sub_100013660(v36, v35);
  if ((v43 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_43;
  }
  unint64_t v44 = (uint64_t *)(v41[7] + 16 * v42);
  uint64_t v45 = *v44;
  uint64_t v46 = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v47 = &v5[OBJC_IVAR___MRDFastSyncGroupSession_identities];
  swift_beginAccess();
  uint64_t v48 = *(void *)v47;
  if (!*(void *)(v48 + 16))
  {
LABEL_43:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_44;
  }
  int v122 = v26;
  swift_bridgeObjectRetain();
  unint64_t v49 = sub_100013660(v45, v46);
  if ((v50 & 1) == 0)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    return;
  }
  id v51 = *(id *)(*(void *)(v48 + 56) + 8 * v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v52 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
  NSString v53 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v54 = [v52 initWithIdentifier:v53 identity:v51 connected:1 guest:v123 & 1];

  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v55 = swift_bridgeObjectRetain();
  uint64_t v56 = sub_100232F94(v55, v124, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v56)
  {
    id v123 = v54;
    id v57 = [v56 identifier];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v58 = v56;
    id v59 = [v56 identity];
    id v60 = [v58 guest];
    uint64_t v124 = (uint64_t)v58;
    id v61 = [v58 hidden];
    id v62 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
    NSString v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v41 = [v62 initWithIdentifier:v63 identity:v59 connected:0 guest:v60 hidden:v61];

    if (qword_10047F3A0 == -1)
    {
LABEL_11:
      uint64_t v64 = sub_10018A9A8(v15, (uint64_t)qword_10047F3A8);
      uint64_t v65 = v133;
      uint64_t v66 = v132;
      (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v132, v64, v15);
      uint64_t v67 = v134;
      uint64_t v68 = v131;
      (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v131, a4, v135);
      swift_bridgeObjectRetain_n();
      uint64_t v69 = v5;
      uint64_t v70 = v41;
      unint64_t v71 = v69;
      unint64_t v72 = v70;
      char v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.default.getter();
      int v121 = v74;
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = swift_slowAlloc();
        uint64_t v76 = v72;
        uint64_t v77 = (void *)swift_slowAlloc();
        uint64_t v118 = v77;
        uint64_t v120 = swift_slowAlloc();
        uint64_t aBlock = v120;
        *(_DWORD *)uint64_t v75 = 138544386;
        os_log_t v119 = v73;
        uint64_t v142 = v71;
        unsigned __int8 v78 = v71;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v77 = v71;
        unint64_t v72 = v76;

        *(_WORD *)(v75 + 12) = 2080;
        uint64_t v142 = (void *)sub_10018A9E0(0xD000000000000028, 0x80000001003B5FB0, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v75 + 22) = 2080;
        if (v122) {
          uint64_t v79 = 0x6465766F72707061;
        }
        else {
          uint64_t v79 = 0x64657463656A6572;
        }
        uint64_t v142 = (void *)sub_10018A9E0(v79, 0xE800000000000000, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v75 + 32) = 2112;
        uint64_t v142 = v76;
        int v80 = v76;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v118[1] = v76;

        *(_WORD *)(v75 + 42) = 2082;
        char v81 = v131;
        uint64_t v82 = Participant.handle.getter();
        uint64_t v142 = (void *)sub_10018A9E0(v82, v83, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v134 + 8))(v81, v135);
        os_log_t v84 = v119;
        _os_log_impl((void *)&_mh_execute_header, v119, (os_log_type_t)v121, "[%{public}@] %s %s %@ from: %{public}s", (uint8_t *)v75, 0x34u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v133 + 8))(v132, v15);
        swift_bridgeObjectRelease();
        char v85 = v122;
        id v86 = v123;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v135);

        (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v15);
        swift_bridgeObjectRelease();
        id v86 = v123;
        char v85 = v122;
      }
      if (v85)
      {
        uint64_t v109 = (void *)swift_allocObject();
        v109[2] = v71;
        v109[3] = v72;
        v109[4] = v86;
        uint64_t v140 = sub_1002384A4;
        uint64_t v141 = v109;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v137 = 1107296256;
        long long v108 = &unk_100422BB0;
      }
      else
      {
        uint64_t v107 = (void *)swift_allocObject();
        v107[2] = v71;
        v107[3] = v72;
        v107[4] = v86;
        uint64_t v140 = sub_10023844C;
        uint64_t v141 = v107;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v137 = 1107296256;
        long long v108 = &unk_100422B60;
      }
      uint64_t v138 = sub_100006760;
      uint64_t v139 = v108;
      id v110 = _Block_copy(&aBlock);
      uint64_t v111 = v71;
      uint64_t v112 = v72;
      id v113 = v86;
      unint64_t v114 = v125;
      static DispatchQoS.unspecified.getter();
      uint64_t v142 = _swiftEmptyArrayStorage;
      sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100013A80((uint64_t *)&unk_100479AE0);
      sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
      os_log_t v115 = v126;
      uint64_t v116 = v130;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v110);

      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v129 + 8))(v115, v116);
      (*(void (**)(char *, uint64_t))(v127 + 8))(v114, v128);
      swift_release();
      return;
    }
LABEL_41:
    swift_once();
    goto LABEL_11;
  }
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  sub_10018A9A8(v15, (uint64_t)qword_10047F3A8);
  id v100 = v5;
  swift_bridgeObjectRetain();
  uint64_t v101 = v100;
  id v102 = Logger.logObject.getter();
  os_log_type_t v103 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v102, v103))
  {
    uint64_t v104 = swift_slowAlloc();
    os_log_type_t v105 = (void *)swift_slowAlloc();
    uint64_t v135 = swift_slowAlloc();
    uint64_t aBlock = v135;
    *(_DWORD *)uint64_t v104 = 138543874;
    id v123 = v54;
    uint64_t v142 = v101;
    int v106 = v101;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v105 = v101;

    *(_WORD *)(v104 + 12) = 2080;
    uint64_t v142 = (void *)sub_10018A9E0(0xD000000000000028, 0x80000001003B5FB0, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v104 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v142 = (void *)sub_10018A9E0(v124, v24, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v102, v103, "[%{public}@] %s message received for unknown participant: %{public}s", (uint8_t *)v104, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_10020FC80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v131 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v129 = (char *)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for DispatchQoS();
  uint64_t v128 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v127 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Participant();
  uint64_t v133 = *(void *)(v12 - 8);
  uint64_t v134 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v132 = (char *)&v121 - v16;
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v21 = *(void **)&v5[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  *uint64_t v20 = v21;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  id v22 = v21;
  uint64_t v23 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  sub_10018FE44(a2, a3);
  sub_10028A208(a2, a3, (uint64_t)&type metadata for RemoveRequestMessage, (uint64_t)&off_10047BB50, (uint64_t)&aBlock);
  unint64_t v24 = v136;
  if (!v136)
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v88 = type metadata accessor for Logger();
    sub_10018A9A8(v88, (uint64_t)qword_10047F3A8);
    os_log_type_t v89 = v5;
    uint64_t v90 = Logger.logObject.getter();
    os_log_type_t v91 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v90, v91))
    {

      return;
    }
    uint64_t v92 = swift_slowAlloc();
    uint64_t v93 = (void *)swift_slowAlloc();
    uint64_t aBlock = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v92 = 138543618;
    uint64_t v143 = (uint64_t)v89;
    os_log_type_t v94 = v89;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v93 = v89;

    *(_WORD *)(v92 + 12) = 2080;
    uint64_t v143 = sub_10018A9E0(0xD000000000000029, 0x80000001003B5F80, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "[%{public}@] %s message payload is malformed.", (uint8_t *)v92, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_26:
    swift_slowDealloc();

    return;
  }
  uint64_t v25 = aBlock;
  uint64_t v26 = Participant.handle.getter();
  uint64_t v28 = v27;
  uint64_t v29 = &v5[OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToMediaRemoteIdentifierMap];
  swift_beginAccess();
  uint64_t v30 = *(void *)v29;
  if (!*(void *)(v30 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  unint64_t v31 = sub_100013660(v26, v28);
  if ((v32 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v17 = v133;
    uint64_t v23 = v134;
    if (qword_10047F3A0 == -1)
    {
LABEL_24:
      uint64_t v95 = type metadata accessor for Logger();
      sub_10018A9A8(v95, (uint64_t)qword_10047F3A8);
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a4, v23);
      unint64_t v96 = v5;
      uint64_t v90 = Logger.logObject.getter();
      os_log_type_t v97 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v90, v97))
      {

        (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v23);
        return;
      }
      uint64_t v98 = swift_slowAlloc();
      unint64_t v99 = (void *)swift_slowAlloc();
      uint64_t v132 = (char *)swift_slowAlloc();
      uint64_t aBlock = v132;
      *(_DWORD *)uint64_t v98 = 138543874;
      uint64_t v142 = (uint64_t)v96;
      id v100 = v96;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v99 = v96;

      *(_WORD *)(v98 + 12) = 2080;
      uint64_t v142 = sub_10018A9E0(0xD000000000000029, 0x80000001003B5F80, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v98 + 22) = 2082;
      uint64_t v101 = Participant.handle.getter();
      uint64_t v142 = sub_10018A9E0(v101, v102, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v133 + 8))(v15, v134);
      _os_log_impl((void *)&_mh_execute_header, v90, v97, "[%{public}@] %s message received from unknown handle: %{public}s", (uint8_t *)v98, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_26;
    }
LABEL_40:
    swift_once();
    goto LABEL_24;
  }
  char v33 = (uint64_t *)(*(void *)(v30 + 56) + 16 * v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = (uint64_t *)&v5[OBJC_IVAR___MRDFastSyncGroupSession_guests];
  swift_beginAccess();
  uint64_t v37 = *v36;
  swift_bridgeObjectRetain();
  LODWORD(v125) = sub_10018835C(v35, v34, v37);
  swift_bridgeObjectRelease();
  uint64_t v38 = &v5[OBJC_IVAR___MRDFastSyncGroupSession_participantIdentityMap];
  swift_beginAccess();
  uint64_t v39 = *(void *)v38;
  if (!*(void *)(*(void *)v38 + 16))
  {
    __break(1u);
LABEL_42:
    swift_once();
LABEL_34:
    uint64_t v103 = type metadata accessor for Logger();
    sub_10018A9A8(v103, (uint64_t)qword_10047F3A8);
    uint64_t v104 = v5;
    swift_bridgeObjectRetain();
    os_log_type_t v105 = v104;
    int v106 = Logger.logObject.getter();
    os_log_type_t v107 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = swift_slowAlloc();
      uint64_t v109 = (void *)swift_slowAlloc();
      uint64_t v134 = swift_slowAlloc();
      uint64_t aBlock = (char *)v134;
      *(_DWORD *)uint64_t v108 = 138543874;
      uint64_t v141 = v105;
      id v110 = v105;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v109 = v105;

      *(_WORD *)(v108 + 12) = 2080;
      uint64_t v141 = (void *)sub_10018A9E0(0xD000000000000029, 0x80000001003B5F80, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v108 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v141 = (void *)sub_10018A9E0((uint64_t)v126, v24, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v106, v107, "[%{public}@] %s message received for unknown participant identifier: %{public}s", (uint8_t *)v108, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  uint64_t v124 = v36;
  id v126 = v25;
  uint64_t v123 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v40 = sub_100013660(v35, v34);
  if ((v41 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_44;
  }
  unint64_t v42 = (uint64_t *)(*(void *)(v39 + 56) + 16 * v40);
  uint64_t v43 = *v42;
  uint64_t v44 = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v45 = &v5[OBJC_IVAR___MRDFastSyncGroupSession_identities];
  swift_beginAccess();
  uint64_t v46 = *(void *)v45;
  if (!*(void *)(*(void *)v45 + 16))
  {
LABEL_44:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_45;
  }
  swift_bridgeObjectRetain();
  unint64_t v47 = sub_100013660(v43, v44);
  if ((v48 & 1) == 0)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    return;
  }
  id v49 = *(id *)(*(void *)(v46 + 56) + 8 * v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v50 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v125 = [v50 initWithIdentifier:v51 identity:v49 connected:1 guest:v125 & 1];

  uint64_t v52 = *(void *)v38;
  uint64_t v53 = (uint64_t)v126;
  if (!*(void *)(*(void *)v38 + 16)) {
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v54 = sub_100013660(v53, v24);
  if ((v55 & 1) == 0) {
    goto LABEL_31;
  }
  uint64_t v56 = (uint64_t *)(*(void *)(v52 + 56) + 16 * v54);
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v59 = *(void *)v45;
  if (!*(void *)(*(void *)v45 + 16)) {
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  unint64_t v60 = sub_100013660(v58, v57);
  if ((v61 & 1) == 0)
  {
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    swift_bridgeObjectRelease();
LABEL_33:
    if (qword_10047F3A0 == -1) {
      goto LABEL_34;
    }
    goto LABEL_42;
  }
  id v62 = *(id *)(*(void *)(v59 + 56) + 8 * v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = *v124;
  swift_bridgeObjectRetain();
  char v64 = sub_10018835C(v53, v24, v63);
  swift_bridgeObjectRelease();
  id v65 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
  id v66 = v62;
  NSString v67 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v68 = [v65 initWithIdentifier:v67 identity:v66 connected:1 guest:v64 & 1];

  id v126 = v66;
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v69 = type metadata accessor for Logger();
  sub_10018A9A8(v69, (uint64_t)qword_10047F3A8);
  uint64_t v70 = v133;
  uint64_t v71 = v134;
  unint64_t v72 = v132;
  (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v132, a4, v134);
  char v73 = v5;
  id v74 = v68;
  uint64_t v75 = v73;
  uint64_t v76 = v74;
  uint64_t v77 = Logger.logObject.getter();
  os_log_type_t v78 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    os_log_t v122 = v77;
    char v81 = (void *)v80;
    uint64_t v124 = (uint64_t *)swift_slowAlloc();
    uint64_t aBlock = (char *)v124;
    *(_DWORD *)uint64_t v79 = 138544130;
    uint64_t v141 = v75;
    uint64_t v82 = v75;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v81 = v75;

    *(_WORD *)(v79 + 12) = 2080;
    uint64_t v141 = (void *)sub_10018A9E0(0xD000000000000029, 0x80000001003B5F80, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v79 + 22) = 2112;
    uint64_t v141 = v76;
    unint64_t v83 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v81[1] = v76;

    *(_WORD *)(v79 + 32) = 2082;
    os_log_t v84 = v132;
    uint64_t v85 = Participant.handle.getter();
    uint64_t v141 = (void *)sub_10018A9E0(v85, v86, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v84, v134);
    os_log_t v87 = v122;
    _os_log_impl((void *)&_mh_execute_header, v122, v78, "[%{public}@] %s %@ from: %{public}s", (uint8_t *)v79, 0x2Au);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v71);
  }
  uint64_t v111 = v123;
  uint64_t v112 = v131;
  id v113 = v125;
  uint64_t v134 = *(void *)&v75[OBJC_IVAR___MRDFastSyncGroupSession_notificationQueue];
  unint64_t v114 = (void *)swift_allocObject();
  v114[2] = v75;
  v114[3] = v76;
  v114[4] = v113;
  uint64_t v139 = sub_10023843C;
  uint64_t v140 = v114;
  uint64_t aBlock = (char *)_NSConcreteStackBlock;
  uint64_t v136 = 1107296256;
  uint64_t v137 = sub_100006760;
  uint64_t v138 = &unk_100422B10;
  os_log_t v115 = _Block_copy(&aBlock);
  uint64_t v116 = v75;
  uint64_t v117 = v76;
  id v118 = v113;
  os_log_t v119 = v127;
  static DispatchQoS.unspecified.getter();
  uint64_t v141 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  uint64_t v120 = v129;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v115);

  (*(void (**)(char *, uint64_t))(v112 + 8))(v120, v111);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v119, v130);
  swift_release();
}

void sub_100210EAC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)&v2[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  uint64_t v15 = *(void (**)(void *, uint64_t))(v9 + 8);
  uint64_t v14 = v9 + 8;
  v15(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_44:
    swift_once();
LABEL_11:
    uint64_t v35 = sub_10018A9A8(v4, (uint64_t)qword_10047F3A8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v35, v4);
    uint64_t v36 = v2;
    uint64_t v37 = Logger.logObject.getter();
    int v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      os_log_t v85 = (os_log_t)v5;
      LODWORD(v87) = v38;
      os_log_t v89 = v37;
      uint64_t v90 = v4;
      uint64_t v39 = swift_slowAlloc();
      unint64_t v40 = (void *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      uint64_t v91 = (uint64_t)v36;
      os_log_t v92 = (os_log_t)v88;
      *(_DWORD *)uint64_t v39 = 138543874;
      char v41 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v86 = (uint64_t)v40;
      void *v40 = v36;

      *(_WORD *)(v39 + 12) = 2082;
      uint64_t v42 = *(void *)&v41[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v43 = *(void *)&v41[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v91 = sub_10018A9E0(v42, v43, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 22) = 2080;
      unint64_t v44 = *(void *)&v2[v14];
      if (v44 >= 5)
      {

        uint64_t v91 = v44;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
      }
      else
      {
        uint64_t v91 = sub_10018A9E0(*(void *)&aInitial_0[8 * v44], *(void *)&aInvalida[8 * v44 + 8], (uint64_t *)&v92);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_t v45 = v89;
        _os_log_impl((void *)&_mh_execute_header, v89, (os_log_type_t)v87, "[%{public}@]<%{public}s> Dropping handleParticipantsChanged in state: %s.", (uint8_t *)v39, 0x20u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(char *, uint64_t))v85[1].isa)(v7, v90);
      }
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    return;
  }
  uint64_t v14 = OBJC_IVAR___MRDFastSyncGroupSession__state;
  if (*(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession__state] != 3)
  {
    if (qword_10047F3A0 == -1) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
  if (!*(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_groupSession])
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    sub_10018A9A8(v4, (uint64_t)qword_10047F3A8);
    uint64_t v46 = v2;
    unint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc();
      id v50 = (void *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v91 = (uint64_t)v46;
      os_log_t v92 = (os_log_t)v51;
      *(_DWORD *)uint64_t v49 = 138543618;
      uint64_t v52 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v50 = v46;

      *(_WORD *)(v49 + 12) = 2082;
      uint64_t v53 = *(void *)&v52[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v54 = *(void *)&v52[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v91 = sub_10018A9E0(v53, v54, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      char v55 = "[%{public}@]<%{public}s> Dropping handleParticipantsChanged with no session.";
LABEL_23:
      _os_log_impl((void *)&_mh_execute_header, v47, v48, v55, (uint8_t *)v49, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
LABEL_24:

    return;
  }
  uint64_t v16 = *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle + 8];
  if (!v16)
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    sub_10018A9A8(v4, (uint64_t)qword_10047F3A8);
    uint64_t v46 = v2;
    unint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc();
      uint64_t v56 = (void *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v91 = (uint64_t)v46;
      os_log_t v92 = (os_log_t)v57;
      *(_DWORD *)uint64_t v49 = 138543618;
      uint64_t v58 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v56 = v46;

      *(_WORD *)(v49 + 12) = 2082;
      uint64_t v59 = *(void *)&v58[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v60 = *(void *)&v58[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v91 = sub_10018A9E0(v59, v60, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      char v55 = "[%{public}@]<%{public}s> Dropping handleParticipantsChanged before leader discovered.";
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  os_log_t v89 = *(os_log_t *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle];
  uint64_t v17 = v2;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_100234184((uint64_t)&_swiftEmptyDictionarySingleton, a1, (uint64_t)v17);

  uint64_t v19 = sub_10022D580(v18);
  swift_bridgeObjectRelease();
  if (v19[2])
  {
    uint64_t v88 = a1;
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    sub_10018A9A8(v4, (uint64_t)qword_10047F3A8);
    uint64_t v20 = v17;
    swift_retain();
    int v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.fault.getter();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v90 = v4;
      uint64_t v25 = v24;
      uint64_t v26 = (void *)swift_slowAlloc();
      v83[1] = v26;
      uint64_t v86 = swift_slowAlloc();
      uint64_t v91 = (uint64_t)v20;
      os_log_t v92 = (os_log_t)v86;
      *(_DWORD *)uint64_t v25 = 138543874;
      os_log_t v85 = v21;
      uint64_t v87 = 0;
      uint64_t v27 = v20;
      int v84 = v23;
      uint64_t v28 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v26 = v20;

      *(_WORD *)(v25 + 12) = 2082;
      uint64_t v29 = *(void *)&v28[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v30 = *(void *)&v28[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v91 = sub_10018A9E0(v29, v30, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2082;
      swift_retain();
      sub_100013A80(&qword_10047A080);
      uint64_t v31 = Dictionary.description.getter();
      unint64_t v33 = v32;
      swift_release();
      uint64_t v91 = sub_10018A9E0(v31, v33, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v34 = v85;
      _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v84, "[%{public}@]<%{public}s> Handle collision detected: %{public}s", (uint8_t *)v25, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v4 = v90;
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    a1 = v88;
  }
  else
  {
    swift_release();
  }
  char v61 = v17;
  swift_bridgeObjectRetain();
  char v62 = sub_1002324D0(a1, (uint64_t)v89, v16, (uint64_t)v61);
  swift_bridgeObjectRelease_n();

  if (v62)
  {
    if ((v61[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] & 1) == 0) {
      sub_10021E680();
    }
    sub_10021D028();
    sub_1002121F0(0);
  }
  else
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_10018A9A8(v4, (uint64_t)qword_10047F3A8);
    char v64 = v61;
    id v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v90 = v63;
      uint64_t v68 = v67;
      uint64_t v69 = (void *)swift_slowAlloc();
      os_log_t v89 = (os_log_t)swift_slowAlloc();
      uint64_t v91 = (uint64_t)v64;
      os_log_t v92 = v89;
      *(_DWORD *)uint64_t v68 = 138543618;
      uint64_t v70 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v69 = v64;

      *(_WORD *)(v68 + 12) = 2082;
      uint64_t v72 = *(void *)&v70[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v71 = *(void *)&v70[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v91 = sub_10018A9E0(v72, v71, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "[%{public}@]<%{public}s> Leader lost from participants.", (uint8_t *)v68, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    if (v64[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] == 1)
    {
      char v73 = v64;
      id v74 = Logger.logObject.getter();
      os_log_type_t v75 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = swift_slowAlloc();
        uint64_t v77 = (void *)swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        uint64_t v91 = (uint64_t)v73;
        os_log_t v92 = (os_log_t)v90;
        *(_DWORD *)uint64_t v76 = 138543618;
        os_log_type_t v78 = v73;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v77 = v73;

        *(_WORD *)(v76 + 12) = 2082;
        uint64_t v80 = *(void *)&v78[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        unint64_t v79 = *(void *)&v78[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        swift_bridgeObjectRetain();
        uint64_t v91 = sub_10018A9E0(v80, v79, (uint64_t *)&v92);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "[%{public}@]<%{public}s> Leader lost from own participants.", (uint8_t *)v76, 0x16u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_100231260();
      uint64_t v81 = swift_allocError();
      void *v82 = 4;
      sub_100215528(v81);
      swift_errorRelease();
    }
    else
    {
      sub_10021DFDC();
    }
  }
}

uint64_t sub_100211E68(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v44 - v10;
  Participant.id.getter();
  uint64_t v12 = UUID.uuidString.getter();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v11, v5);
  uint64_t v16 = *(void *)(a3 + OBJC_IVAR___MRDFastSyncGroupSession_localFastSyncIdentifier + 8);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v12 != *(void *)(a3 + OBJC_IVAR___MRDFastSyncGroupSession_localFastSyncIdentifier) || v16 != v14)
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v20 = Participant.handle.getter();
    uint64_t v22 = v21;
    goto LABEL_13;
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_11:
  int v23 = (uint64_t *)(a3 + OBJC_IVAR___MRDFastSyncGroupSession_localHandle);
  uint64_t v22 = *(void *)(a3 + OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8);
  if (!v22) {
    return result;
  }
  uint64_t v20 = *v23;
  swift_bridgeObjectRetain();
LABEL_13:
  Participant.id.getter();
  uint64_t v24 = UUID.uuidString.getter();
  uint64_t v26 = v25;
  v15(v9, v5);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  os_log_t v45 = (void *)*a1;
  uint64_t v28 = v45;
  *a1 = 0x8000000000000000;
  unint64_t v30 = sub_100013660(v20, v22);
  uint64_t v31 = v28[2];
  BOOL v32 = (v29 & 1) == 0;
  uint64_t v33 = v31 + v32;
  if (__OFADD__(v31, v32))
  {
    __break(1u);
    goto LABEL_28;
  }
  char v34 = v29;
  if (v28[3] >= v33)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_10022CA40();
    }
  }
  else
  {
    sub_10022BF40(v33, isUniquelyReferenced_nonNull_native);
    unint64_t v35 = sub_100013660(v20, v22);
    if ((v34 & 1) != (v36 & 1))
    {
LABEL_30:
      uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return result;
    }
    unint64_t v30 = v35;
  }
  *a1 = v45;
  swift_bridgeObjectRelease();
  uint64_t v37 = (void *)*a1;
  if (v34) {
    goto LABEL_22;
  }
  v37[(v30 >> 6) + 8] |= 1 << v30;
  int v38 = (uint64_t *)(v37[6] + 16 * v30);
  uint64_t *v38 = v20;
  v38[1] = v22;
  *(void *)(v37[7] + 8 * v30) = _swiftEmptyArrayStorage;
  uint64_t v39 = v37[2];
  swift_bridgeObjectRetain();
  if (__OFADD__(v39, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  v37[2] = v39 + 1;
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v20 = v37[7];
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void **)(v20 + 8 * v30);
  char v40 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v20 + 8 * v30) = v28;
  if ((v40 & 1) == 0)
  {
LABEL_28:
    uint64_t v28 = sub_100229FF0(0, v28[2] + 1, 1, v28);
    *(void *)(v20 + 8 * v30) = v28;
  }
  unint64_t v42 = v28[2];
  unint64_t v41 = v28[3];
  if (v42 >= v41 >> 1)
  {
    uint64_t v28 = sub_100229FF0((void *)(v41 > 1), v42 + 1, 1, v28);
    *(void *)(v20 + 8 * v30) = v28;
  }
  v28[2] = v42 + 1;
  unint64_t v43 = &v28[2 * v42];
  v43[4] = v24;
  v43[5] = v26;
  return swift_bridgeObjectRelease();
}

id sub_1002121F0(int a1)
{
  uint64_t v2 = (objc_class *)v1;
  int v356 = a1;
  uint64_t v3 = type metadata accessor for Participants();
  uint64_t v343 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  v342 = (os_log_t *)((char *)&v333 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v353 = *(void *)(v5 - 8);
  uint64_t v354 = v5;
  __chkstk_darwin(v5);
  uint64_t v351 = (char *)&v333 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v352 = type metadata accessor for DispatchQoS();
  uint64_t v350 = *(void *)(v352 - 8);
  __chkstk_darwin(v352);
  uint64_t v349 = (char *)&v333 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  os_log_t v382 = *(os_log_t *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t)&v333 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v14 = (unint64_t)&v333 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  v341 = (char *)&v333 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v346 = (char *)&v333 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v345 = (char *)&v333 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v344 = (char *)&v333 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v355 = (char *)&v333 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v358 = (char *)&v333 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v347 = (char *)&v333 - v28;
  __chkstk_darwin(v27);
  uint64_t v367 = (char *)&v333 - v29;
  uint64_t v30 = type metadata accessor for DispatchPredicate();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (uint64_t *)((char *)&v333 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v34 = *(void **)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_executionQueue);
  *uint64_t v33 = v34;
  (*(void (**)(void *, void, uint64_t))(v31 + 104))(v33, enum case for DispatchPredicate.onQueue(_:), v30);
  os_log_t v369 = v34;
  LOBYTE(v34) = _dispatchPreconditionTest(_:)();
  char v36 = *(uint64_t (**)(void *, uint64_t))(v31 + 8);
  unint64_t v35 = (v31 + 8);
  id result = (id)v36(v33, v30);
  if ((v34 & 1) == 0)
  {
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    swift_once();
LABEL_9:
    uint64_t v45 = sub_10018A9A8(v8, (uint64_t)qword_10047F3A8);
    os_log_t v46 = v382;
    ((void (*)(uint64_t, uint64_t, uint64_t))v382[2].isa)(v11, v45, v8);
    unint64_t v47 = v2;
    os_log_type_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.default.getter();
    int v50 = v49;
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v51 = swift_slowAlloc();
      LODWORD(v380) = v50;
      uint64_t v52 = v51;
      unint64_t v378 = swift_slowAlloc();
      os_log_t v379 = v48;
      uint64_t v53 = v378;
      os_log_t v381 = (os_log_t)swift_slowAlloc();
      os_log_t v388 = v381;
      *(_DWORD *)uint64_t v52 = 138544130;
      uint64_t v362 = v8;
      unint64_t v363 = v2;
      uint64_t v394 = (uint64_t)v47;
      unint64_t v54 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v53->Class isa = (Class)v47;

      *(_WORD *)(v52 + 12) = 2082;
      uint64_t v55 = *(void *)&v54[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v56 = *(void *)&v54[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v394 = sub_10018A9E0(v55, v56, (uint64_t *)&v388);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 22) = 2080;
      uint64_t v394 = sub_10018A9E0(0xD000000000000037, 0x80000001003B5F40, (uint64_t *)&v388);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v52 + 32) = 2080;
      uint64_t v57 = _s12mediaremoted23MRDFastSyncGroupSessionC13stateToStringySSAA0bcdE5StateOFZ_0(*(unint64_t *)((char *)&v35->isa + (void)v363));
      uint64_t v394 = sub_10018A9E0(v57, v58, (uint64_t *)&v388);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v59 = v379;
      _os_log_impl((void *)&_mh_execute_header, v379, (os_log_type_t)v380, "[%{public}@]<%{public}s> %s Dropping updateParticipants in state: %s.", (uint8_t *)v52, 0x2Au);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (id)((uint64_t (*)(uint64_t, uint64_t))v382[1].isa)(v11, v362);
    }
    else
    {

      return (id)((uint64_t (*)(uint64_t, uint64_t))v46[1].isa)(v11, v8);
    }
  }
  if (*((unsigned char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_isLeader) != 1) {
    return result;
  }
  unint64_t v35 = OBJC_IVAR___MRDFastSyncGroupSession__state;
  if (*(void *)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession__state) != 3)
  {
    if (qword_10047F3A0 == -1) {
      goto LABEL_9;
    }
    goto LABEL_153;
  }
  uint64_t v38 = *(void *)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_groupSession);
  if (v38)
  {
    swift_retain();
    uint64_t v337 = GroupSession.activeParticipants.getter();
    uint64_t v39 = sub_10020CAD8(v337, (uint64_t)v395, (uint64_t (*)(void))&type metadata accessor for Participant, (uint64_t (*)(uint64_t))&Participant.handle.getter);
    v338 = 0;
    id v335 = self;
    id result = [v335 currentSettings];
    if (result)
    {
      char v40 = result;
      unsigned int v41 = [result supportGroupSessionLowPowerMode];

      uint64_t v336 = v38;
      if (v41)
      {
        unint64_t v42 = *(void **)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_presenceDataSource);
        swift_getKeyPath();
        swift_getKeyPath();
        id v43 = v42;
        static Published.subscript.getter();

        swift_release();
        swift_release();
        os_log_t v44 = v388;
      }
      else
      {
        os_log_t v44 = (os_log_t)&_swiftEmptySetSingleton;
      }
      uint64_t v334 = v3;
      uint64_t v72 = sub_1002312C4(v39, (uint64_t)v44);
      swift_bridgeObjectRelease();
      sub_100013A80(&qword_100478690);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
      id result = *(id *)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8);
      if (result)
      {
        *(void *)(inited + 32) = *(void *)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_localHandle);
        *(void *)(inited + 40) = result;
        swift_bridgeObjectRetain();
        os_log_t v74 = (os_log_t)sub_1002312C4(inited, v72);
        swift_setDeallocating();
        swift_arrayDestroy();
        os_log_type_t v75 = (uint64_t *)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToMediaRemoteIdentifierMap);
        swift_beginAccess();
        v348 = v75;
        uint64_t v76 = *v75;
        uint64_t v77 = *(void *)(*v75 + 64);
        uint64_t v372 = *v75 + 64;
        uint64_t v11 = 1 << *(unsigned char *)(v76 + 32);
        if (v11 < 64) {
          uint64_t v78 = ~(-1 << v11);
        }
        else {
          uint64_t v78 = -1;
        }
        unint64_t v35 = (v78 & v77);
        unint64_t v79 = (uint64_t *)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToPresenceTimeoutTimerMap);
        unint64_t v375 = (void *)OBJC_IVAR___MRDFastSyncGroupSession_presenceDataSource;
        uint64_t v80 = (uint64_t *)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_timedOutParticipantHandles);
        uint64_t v340 = (uint64_t *)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_participantIdentityMap);
        uint64_t v360 = (uint64_t *)((char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
        uint64_t v339 = (char *)v2 + OBJC_IVAR___MRDFastSyncGroupSession_guests;
        swift_bridgeObjectRetain_n();
        uint64_t v374 = v80;
        swift_beginAccess();
        uint64_t v380 = v79;
        unint64_t v14 = (unint64_t)v35;
        swift_beginAccess();
        uint64_t v81 = 0;
        os_log_t v373 = (os_log_t)((unint64_t)(v11 + 63) >> 6);
        os_log_t v376 = v74 + 7;
        unint64_t v370 = v382 + 1;
        uint64_t v371 = (NSObject **)&v382[2];
        uint64_t v359 = &v387;
        v366 = &v390;
        *(void *)&long long v82 = 138543874;
        long long v361 = v82;
        v357 = (char *)&type metadata for Any + 8;
        uint64_t v362 = v8;
        unint64_t v363 = v2;
        uint64_t v377 = v76;
        unint64_t v83 = v367;
        os_log_t v368 = v74;
        while (1)
        {
          if (v14)
          {
            unint64_t v92 = __clz(__rbit64(v14));
            uint64_t v93 = (v14 - 1) & v14;
            unint64_t v94 = v92 | (v81 << 6);
          }
          else
          {
            uint64_t v95 = v81 + 1;
            if (__OFADD__(v81, 1))
            {
              __break(1u);
              goto LABEL_151;
            }
            if (v95 >= (uint64_t)v373)
            {
LABEL_114:
              swift_bridgeObjectRelease();
              swift_release();
              uint64_t v202 = *v348;
              uint64_t v203 = v2;
              uint64_t v204 = swift_bridgeObjectRetain();
              uint64_t v205 = v338;
              p_Class isa = (void *)sub_100231344(v204, (uint64_t)v203);

              if (qword_10047F3A0 != -1) {
                swift_once();
              }
              uint64_t v207 = sub_10018A9A8(v8, (uint64_t)qword_10047F3A8);
              uint64_t v208 = *v371;
              uint64_t v209 = v355;
              unint64_t v378 = v207;
              os_log_t v379 = v208;
              ((void (*)(char *))v208)(v355);
              uint64_t v210 = v203;
              swift_bridgeObjectRetain_n();
              uint64_t v211 = v210;
              uint64_t v212 = Logger.logObject.getter();
              os_log_type_t v213 = static os_log_type_t.info.getter();
              int v214 = v213;
              BOOL v215 = os_log_type_enabled(v212, v213);
              uint64_t v380 = (uint64_t *)v202;
              os_log_t v381 = v211;
              os_log_t v382 = (os_log_t)p_isa;
              unint64_t v375 = v205;
              if (v215)
              {
                uint64_t v216 = swift_slowAlloc();
                uint64_t v217 = swift_slowAlloc();
                LODWORD(v374) = v214;
                uint64_t v218 = (void *)v217;
                os_log_t v376 = (os_log_t)swift_slowAlloc();
                os_log_t v388 = v376;
                *(_DWORD *)uint64_t v216 = 138544130;
                uint64_t v386 = (uint64_t)v211;
                id v219 = v2;
                uint64_t v220 = v211;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                void *v218 = v219;

                *(_WORD *)(v216 + 12) = 2082;
                uint64_t v222 = *(uint64_t *)((char *)&v220->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
                unint64_t v221 = *(unint64_t *)((char *)&v220[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
                swift_bridgeObjectRetain();
                uint64_t v386 = sub_10018A9E0(v222, v221, (uint64_t *)&v388);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                *(_WORD *)(v216 + 22) = 2080;
                uint64_t v386 = sub_10018A9E0(0xD000000000000037, 0x80000001003B5F40, (uint64_t *)&v388);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *(_WORD *)(v216 + 32) = 2080;
                p_Class isa = &v382->isa;
                swift_bridgeObjectRetain();
                uint64_t v223 = Array.description.getter();
                unint64_t v225 = v224;
                swift_bridgeObjectRelease();
                uint64_t v226 = v223;
                uint64_t v211 = v381;
                uint64_t v386 = sub_10018A9E0(v226, v225, (uint64_t *)&v388);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v212, (os_log_type_t)v374, "[%{public}@]<%{public}s> %s mapped participants: %s", (uint8_t *)v216, 0x2Au);
                sub_100013A80((uint64_t *)&unk_10047B850);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                Class isa = v370->isa;
                int v228 = v355;
                uint64_t v229 = v362;
              }
              else
              {

                swift_bridgeObjectRelease_n();
                Class isa = v370->isa;
                int v228 = v209;
                uint64_t v229 = v8;
              }
              os_log_t v376 = isa;
              ((void (*)(char *, uint64_t))isa)(v228, v229);
              uint64_t v230 = p_isa[2];
              if (v230)
              {
                os_log_t v388 = (os_log_t)_swiftEmptyArrayStorage;
                specialized ContiguousArray.reserveCapacity(_:)();
                uint64_t v231 = (unsigned __int8 *)p_isa + 58;
                do
                {
                  unint64_t v232 = *(void **)(v231 - 10);
                  uint64_t v233 = *(v231 - 2);
                  uint64_t v234 = *(v231 - 1);
                  unsigned int v235 = *v231;
                  v231 += 32;
                  id v236 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
                  swift_bridgeObjectRetain();
                  id v237 = v232;
                  NSString v238 = String._bridgeToObjectiveC()();
                  [v236 initWithIdentifier:v238 identity:v237 connected:v233 guest:v234 hidden:v235];

                  swift_bridgeObjectRelease();
                  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                  specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized ContiguousArray._endMutation()();
                  --v230;
                }
                while (v230);
                os_log_t v239 = v388;
                uint64_t v211 = v381;
              }
              else
              {
                os_log_t v239 = (os_log_t)_swiftEmptyArrayStorage;
              }
              swift_beginAccess();
              uint64_t v240 = swift_bridgeObjectRetain();
              uint64_t v241 = sub_10022E9D8(v240);
              swift_bridgeObjectRelease();
              uint64_t v242 = (void *)swift_allocObject();
              v242[2] = v211;
              v242[3] = v241;
              v242[4] = v239;
              unint64_t v392 = sub_1002382A8;
              v393 = v242;
              os_log_t v388 = (os_log_t)_NSConcreteStackBlock;
              uint64_t v389 = 1107296256;
              long long v390 = sub_100006760;
              unsigned __int8 v391 = &unk_100422A98;
              uint64_t v243 = _Block_copy(&v388);
              uint64_t v244 = v211;
              uint64_t v245 = v243;
              uint64_t v246 = v244;
              swift_retain();
              uint64_t v247 = v349;
              static DispatchQoS.unspecified.getter();
              unint64_t v383 = _swiftEmptyArrayStorage;
              sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
              sub_100013A80((uint64_t *)&unk_100479AE0);
              sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
              uint64_t v248 = v351;
              uint64_t v249 = v354;
              dispatch thunk of SetAlgebra.init<A>(_:)();
              OS_dispatch_queue.async(group:qos:flags:execute:)();
              _Block_release(v245);
              (*(void (**)(char *, uint64_t))(v353 + 8))(v248, v249);
              (*(void (**)(char *, uint64_t))(v350 + 8))(v247, v352);
              id result = (id)swift_release();
              uint64_t v250 = *(uint64_t *)((char *)&v246->isa + OBJC_IVAR___MRDFastSyncGroupSession_connectionManager);
              if (!v250) {
                goto LABEL_159;
              }
              uint64_t v251 = *(void (**)(uint64_t))(*(void *)v250 + 360);
              swift_retain();
              uint64_t v252 = swift_bridgeObjectRetain();
              v251(v252);
              swift_release();
              swift_bridgeObjectRelease();
              if (v356)
              {
                uint64_t v253 = v246;
                uint64_t v254 = v337;
                uint64_t v255 = swift_bridgeObjectRetain();
                uint64_t v256 = sub_100231C60(v255, v253);

                if (*(void *)(v256 + 16))
                {
                  uint64_t v257 = swift_allocObject();
                  *(void *)(v257 + 16) = _swiftEmptyArrayStorage;
                  unint64_t v375 = (void *)(v257 + 16);
                  id result = [v335 currentSettings];
                  if (!result) {
                    goto LABEL_160;
                  }
                  uint64_t v258 = result;
                  unsigned int v259 = [result groupSessionSynchronizePendingParticipants];

                  if (v259)
                  {
                    swift_beginAccess();
                    unint64_t v260 = swift_bridgeObjectRetain();
                    Class v261 = sub_10020C8BC(v260);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    void *v375 = v261;
                  }
                  uint64_t v262 = *(void *)(v254 + 16);
                  swift_bridgeObjectRelease();
                  uint64_t v263 = (v262 + ~*(void *)(v256 + 16));
                  os_log_t v381 = (os_log_t)v256;
                  if ((uint64_t)v263 >= 1)
                  {
                    os_log_t v373 = v263;
                    uint64_t v264 = v345;
                    uint64_t v265 = v362;
                    ((void (*)(char *, NSObject *, uint64_t))v379)(v345, v378, v362);
                    uint64_t v266 = v253;
                    uint64_t v267 = Logger.logObject.getter();
                    os_log_type_t v268 = static os_log_type_t.default.getter();
                    LODWORD(v372) = v268;
                    if (os_log_type_enabled(v267, v268))
                    {
                      uint64_t v269 = swift_slowAlloc();
                      uint64_t v367 = (char *)swift_slowAlloc();
                      os_log_t v368 = v267;
                      uint64_t v270 = (objc_class **)v367;
                      os_log_t v369 = (os_log_t)swift_slowAlloc();
                      os_log_t v388 = v369;
                      *(_DWORD *)uint64_t v269 = 138544130;
                      uint64_t v374 = (uint64_t *)v257;
                      os_log_t v385 = v266;
                      uint64_t v271 = v266;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      *uint64_t v270 = v363;

                      *(_WORD *)(v269 + 12) = 2082;
                      uint64_t v273 = *(uint64_t *)((char *)&v271->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
                      unint64_t v272 = *(unint64_t *)((char *)&v271[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
                      swift_bridgeObjectRetain();
                      os_log_t v385 = (os_log_t)sub_10018A9E0(v273, v272, (uint64_t *)&v388);
                      uint64_t v257 = (uint64_t)v374;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();

                      swift_bridgeObjectRelease();
                      *(_WORD *)(v269 + 22) = 2080;
                      os_log_t v385 = (os_log_t)sub_10018A9E0(0xD000000000000037, 0x80000001003B5F40, (uint64_t *)&v388);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      *(_WORD *)(v269 + 32) = 2048;
                      os_log_t v385 = v373;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      os_log_t v274 = v368;
                      _os_log_impl((void *)&_mh_execute_header, v368, (os_log_type_t)v372, "[%{public}@]<%{public}s> %s Will not message %ld unmapped participants.", (uint8_t *)v269, 0x2Au);
                      sub_100013A80((uint64_t *)&unk_10047B850);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();

                      uint64_t v275 = v345;
                      uint64_t v276 = v362;
                    }
                    else
                    {

                      uint64_t v275 = v264;
                      uint64_t v276 = v265;
                    }
                    ((void (*)(char *, uint64_t))v376)(v275, v276);
                  }
                  uint64_t v292 = *(void *)&v253[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger];
                  if (v292)
                  {
                    uint64_t v293 = *(void *)(v257 + 16);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    uint64_t v295 = MRDFastSyncGroupSessionState.rawValue.getter(v382, v293, v241, v294);
                    os_log_t v382 = (os_log_t)sub_10028B668(v295, v296, v297);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    int v298 = v346;
                    uint64_t v299 = v362;
                    ((void (*)(char *, NSObject *, uint64_t))v379)(v346, v378, v362);
                    uint64_t v300 = v253;
                    swift_retain_n();
                    os_log_t v301 = v300;
                    unint64_t v302 = Logger.logObject.getter();
                    os_log_type_t v303 = static os_log_type_t.default.getter();
                    int v304 = v303;
                    if (os_log_type_enabled(v302, v303))
                    {
                      uint64_t v305 = swift_slowAlloc();
                      uint64_t v306 = swift_slowAlloc();
                      unint64_t v378 = v292;
                      uint64_t v307 = (void *)v306;
                      os_log_t v376 = (os_log_t)v306;
                      os_log_t v379 = (os_log_t)swift_slowAlloc();
                      os_log_t v385 = v379;
                      *(_DWORD *)uint64_t v305 = 138544130;
                      os_log_t v388 = v301;
                      LODWORD(v374) = v304;
                      uint64_t v308 = v301;
                      os_log_t v373 = v302;
                      unint64_t v309 = v308;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      *uint64_t v307 = v363;
                      uint64_t v292 = (uint64_t)v378;

                      *(_WORD *)(v305 + 12) = 2082;
                      uint64_t v311 = *(uint64_t *)((char *)&v309->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
                      unint64_t v310 = *(unint64_t *)((char *)&v309[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
                      swift_bridgeObjectRetain();
                      os_log_t v388 = (os_log_t)sub_10018A9E0(v311, v310, (uint64_t *)&v385);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();

                      swift_bridgeObjectRelease();
                      *(_WORD *)(v305 + 22) = 2080;
                      os_log_t v388 = (os_log_t)sub_10018A9E0(0xD000000000000037, 0x80000001003B5F40, (uint64_t *)&v385);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      *(_WORD *)(v305 + 32) = 2080;
                      swift_beginAccess();
                      swift_bridgeObjectRetain();
                      uint64_t v312 = Array.description.getter();
                      unint64_t v314 = v313;
                      swift_bridgeObjectRelease();
                      uint64_t v384 = sub_10018A9E0(v312, v314, (uint64_t *)&v385);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_release();
                      os_log_t v315 = v373;
                      _os_log_impl((void *)&_mh_execute_header, v373, (os_log_type_t)v374, "[%{public}@]<%{public}s> %s Sending message with pending participants: %s", (uint8_t *)v305, 0x2Au);
                      sub_100013A80((uint64_t *)&unk_10047B850);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();

                      ((void (*)(char *, uint64_t))v370->isa)(v346, v362);
                    }
                    else
                    {

                      swift_release_n();
                      ((void (*)(char *, uint64_t))v376)(v298, v299);
                    }
                    uint64_t v329 = (uint64_t)v342;
                    uint64_t v328 = v343;
                    os_log_t *v342 = v381;
                    uint64_t v330 = v334;
                    (*(void (**)(uint64_t, void, uint64_t))(v328 + 104))(v329, enum case for Participants.only(_:), v334);
                    os_log_t v331 = v382;
                    uint64_t v332 = v382;
                    sub_10021E92C(3u, v331, v329, v292, 0, 0);
                    swift_bridgeObjectRelease();
                    swift_release();

                    swift_release();
                    swift_bridgeObjectRelease();
                    (*(void (**)(uint64_t, uint64_t))(v328 + 8))(v329, v330);
                    return (id)swift_release();
                  }
                  else
                  {
                    uint64_t v374 = (uint64_t *)v257;
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
                    unint64_t v316 = v341;
                    uint64_t v317 = v362;
                    ((void (*)(char *, NSObject *, uint64_t))v379)(v341, v378, v362);
                    v318 = v253;
                    uint64_t v319 = Logger.logObject.getter();
                    os_log_type_t v320 = static os_log_type_t.error.getter();
                    if (os_log_type_enabled(v319, v320))
                    {
                      uint64_t v321 = swift_slowAlloc();
                      uint64_t v322 = (void *)swift_slowAlloc();
                      os_log_t v382 = (os_log_t)swift_slowAlloc();
                      os_log_t v388 = v382;
                      *(_DWORD *)uint64_t v321 = v361;
                      os_log_t v385 = v318;
                      uint64_t v323 = v318;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      *uint64_t v322 = v363;

                      *(_WORD *)(v321 + 12) = 2082;
                      uint64_t v325 = *(uint64_t *)((char *)&v323->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
                      unint64_t v324 = *(unint64_t *)((char *)&v323[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
                      swift_bridgeObjectRetain();
                      os_log_t v385 = (os_log_t)sub_10018A9E0(v325, v324, (uint64_t *)&v388);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();

                      swift_bridgeObjectRelease();
                      *(_WORD *)(v321 + 22) = 2080;
                      os_log_t v385 = (os_log_t)sub_10018A9E0(0xD000000000000037, 0x80000001003B5F40, (uint64_t *)&v388);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      _os_log_impl((void *)&_mh_execute_header, v319, v320, "[%{public}@]<%{public}s> %s Drop identity broadcast we are not ready.", (uint8_t *)v321, 0x20u);
                      sub_100013A80((uint64_t *)&unk_10047B850);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();
                      swift_bridgeObjectRelease();

                      swift_release();
                      swift_bridgeObjectRelease();
                      unsigned __int8 v326 = v341;
                      uint64_t v327 = v362;
                    }
                    else
                    {

                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      unsigned __int8 v326 = v316;
                      uint64_t v327 = v317;
                    }
                    ((void (*)(char *, uint64_t))v376)(v326, v327);
                    return (id)swift_release();
                  }
                }
                else
                {
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v277 = v344;
                  uint64_t v278 = v362;
                  ((void (*)(char *, NSObject *, uint64_t))v379)(v344, v378, v362);
                  uint64_t v279 = v253;
                  swift_bridgeObjectRetain();
                  uint64_t v280 = Logger.logObject.getter();
                  os_log_type_t v281 = static os_log_type_t.default.getter();
                  int v282 = v281;
                  if (os_log_type_enabled(v280, v281))
                  {
                    uint64_t v283 = swift_slowAlloc();
                    uint64_t v284 = swift_slowAlloc();
                    LODWORD(v381) = v282;
                    uint64_t v285 = v284;
                    os_log_t v379 = v284;
                    os_log_t v382 = (os_log_t)swift_slowAlloc();
                    os_log_t v388 = v382;
                    *(_DWORD *)uint64_t v283 = 138544130;
                    unint64_t v383 = v279;
                    uint64_t v286 = v279;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    v285->Class isa = v363;

                    *(_WORD *)(v283 + 12) = 2082;
                    uint64_t v288 = *(void *)&v286[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
                    unint64_t v287 = *(void *)&v286[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
                    swift_bridgeObjectRetain();
                    unint64_t v383 = (void *)sub_10018A9E0(v288, v287, (uint64_t *)&v388);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();

                    swift_bridgeObjectRelease();
                    *(_WORD *)(v283 + 22) = 2080;
                    unint64_t v383 = (void *)sub_10018A9E0(0xD000000000000037, 0x80000001003B5F40, (uint64_t *)&v388);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *(_WORD *)(v283 + 32) = 2082;
                    type metadata accessor for Participant();
                    sub_100015B28(&qword_100479AF8, (void (*)(uint64_t))&type metadata accessor for Participant);
                    swift_bridgeObjectRetain();
                    uint64_t v289 = Set.description.getter();
                    unint64_t v291 = v290;
                    swift_bridgeObjectRelease();
                    unint64_t v383 = (void *)sub_10018A9E0(v289, v291, (uint64_t *)&v388);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    _os_log_impl((void *)&_mh_execute_header, v280, (os_log_type_t)v381, "[%{public}@]<%{public}s> %s No mapped participants to sync participants to. activeFastSyncParticipants: %{public}s", (uint8_t *)v283, 0x2Au);
                    sub_100013A80((uint64_t *)&unk_10047B850);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                    swift_bridgeObjectRelease();

                    swift_release();
                    swift_bridgeObjectRelease();
                    return (id)((uint64_t (*)(char *, uint64_t))v370->isa)(v344, v362);
                  }
                  else
                  {

                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();

                    swift_bridgeObjectRelease();
                    return (id)((uint64_t (*)(char *, uint64_t))v376)(v277, v278);
                  }
                }
              }
              else
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                return (id)swift_bridgeObjectRelease();
              }
            }
            unint64_t v96 = *(void *)(v372 + 8 * v95);
            ++v81;
            if (!v96)
            {
              uint64_t v81 = v95 + 1;
              if (v95 + 1 >= (uint64_t)v373) {
                goto LABEL_114;
              }
              unint64_t v96 = *(void *)(v372 + 8 * v81);
              if (!v96)
              {
                uint64_t v81 = v95 + 2;
                if (v95 + 2 >= (uint64_t)v373) {
                  goto LABEL_114;
                }
                unint64_t v96 = *(void *)(v372 + 8 * v81);
                if (!v96)
                {
                  uint64_t v81 = v95 + 3;
                  if (v95 + 3 >= (uint64_t)v373) {
                    goto LABEL_114;
                  }
                  unint64_t v96 = *(void *)(v372 + 8 * v81);
                  if (!v96)
                  {
                    uint64_t v81 = v95 + 4;
                    if (v95 + 4 >= (uint64_t)v373) {
                      goto LABEL_114;
                    }
                    unint64_t v96 = *(void *)(v372 + 8 * v81);
                    if (!v96)
                    {
                      uint64_t v97 = v95 + 5;
                      if (v97 >= (uint64_t)v373) {
                        goto LABEL_114;
                      }
                      unint64_t v96 = *(void *)(v372 + 8 * v97);
                      if (!v96)
                      {
                        while (1)
                        {
                          uint64_t v81 = v97 + 1;
                          if (__OFADD__(v97, 1)) {
                            break;
                          }
                          if (v81 >= (uint64_t)v373) {
                            goto LABEL_114;
                          }
                          unint64_t v96 = *(void *)(v372 + 8 * v81);
                          ++v97;
                          if (v96) {
                            goto LABEL_43;
                          }
                        }
                        __break(1u);
                        goto LABEL_155;
                      }
                      uint64_t v81 = v97;
                    }
                  }
                }
              }
            }
LABEL_43:
            uint64_t v93 = (v96 - 1) & v96;
            unint64_t v94 = __clz(__rbit64(v96)) + (v81 << 6);
          }
          os_log_t v381 = (os_log_t)v93;
          os_log_t v382 = (os_log_t)v81;
          uint64_t v98 = *(void *)(v377 + 48) + 16 * v94;
          unint64_t v99 = *(NSObject **)v98;
          unint64_t v35 = *(NSObject **)(v98 + 8);
          if (v74[2].isa)
          {
            Hasher.init(_seed:)();
            swift_bridgeObjectRetain();
            String.hash(into:)();
            Swift::Int v100 = Hasher._finalize()();
            uint64_t v101 = -1 << LOBYTE(v74[4].isa);
            unint64_t v102 = v100 & ~v101;
            if ((*(unint64_t *)((char *)&v376->isa + ((v102 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v102))
            {
              Class v103 = v74[6].isa;
              uint64_t v104 = (NSObject **)((char *)v103 + 16 * v102);
              BOOL v105 = *v104 == v99 && v104[1] == v35;
              if (v105 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
LABEL_51:
                unint64_t v378 = v35;
                os_log_t v379 = v99;
                uint64_t v11 = *v380;
                if (!*(void *)(*v380 + 16)) {
                  goto LABEL_68;
                }
                uint64_t v106 = (uint64_t)v378;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_100013660((uint64_t)v379, v106);
                char v108 = v107;
                swift_bridgeObjectRelease();
                if ((v108 & 1) == 0)
                {
LABEL_62:
                  swift_bridgeObjectRelease();
LABEL_68:
                  swift_bridgeObjectRelease();
                  goto LABEL_23;
                }
                swift_bridgeObjectRelease();
                if (qword_10047F3A0 != -1) {
                  swift_once();
                }
                uint64_t v109 = sub_10018A9A8(v8, (uint64_t)qword_10047F3A8);
                id v110 = v358;
                ((void (*)(char *, uint64_t, uint64_t))*v371)(v358, v109, v8);
                uint64_t v111 = v2;
                swift_bridgeObjectRetain_n();
                unint64_t v112 = v106;
                id v113 = v2;
                unint64_t v114 = v111;
                os_log_t v115 = Logger.logObject.getter();
                os_log_type_t v116 = static os_log_type_t.info.getter();
                int v117 = v116;
                if (os_log_type_enabled(v115, v116))
                {
                  uint64_t v118 = swift_slowAlloc();
                  os_log_t v119 = (void *)swift_slowAlloc();
                  os_log_t v365 = (os_log_t)swift_slowAlloc();
                  os_log_t v388 = v365;
                  *(_DWORD *)uint64_t v118 = v361;
                  LODWORD(v364) = v117;
                  uint64_t v386 = (uint64_t)v114;
                  uint64_t v120 = v114;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  void *v119 = v113;

                  *(_WORD *)(v118 + 12) = 2082;
                  uint64_t v122 = *v360;
                  unint64_t v121 = v360[1];
                  swift_bridgeObjectRetain();
                  uint64_t v386 = sub_10018A9E0(v122, v121, (uint64_t *)&v388);
                  uint64_t v8 = v362;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v118 + 22) = 2080;
                  swift_bridgeObjectRetain();
                  uint64_t v386 = sub_10018A9E0((uint64_t)v379, v112, (uint64_t *)&v388);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v115, (os_log_type_t)v364, "[%{public}@]<%{public}s> Cancel timeout timer for: %s.", (uint8_t *)v118, 0x20u);
                  sub_100013A80((uint64_t *)&unk_10047B850);
                  swift_arrayDestroy();
                  os_log_t v74 = v368;
                  swift_slowDealloc();
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  ((void (*)(char *, uint64_t))v370->isa)(v358, v8);
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                  ((void (*)(char *, uint64_t))v370->isa)(v110, v8);
                }
                uint64_t v148 = v112;
                uint64_t v149 = *v380;
                unint64_t v83 = v367;
                if (*(void *)(*v380 + 16))
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  os_log_t v150 = v379;
                  unint64_t v151 = sub_100013660((uint64_t)v379, v148);
                  if (v152) {
                    id v153 = *(id *)(*(void *)(v149 + 56) + 8 * v151);
                  }
                  else {
                    id v153 = 0;
                  }
                  uint64_t v2 = v363;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  id v153 = 0;
                  uint64_t v2 = v363;
                  os_log_t v150 = v379;
                }
                [v153 invalidate];

                uint64_t v154 = v380;
                swift_beginAccess();
                uint64_t v11 = *v154;
                swift_bridgeObjectRetain();
                unint64_t v155 = sub_100013660((uint64_t)v150, v148);
                unint64_t v35 = v148;
                char v157 = v156;
                swift_bridgeObjectRelease();
                if (v157)
                {
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v11 = *v154;
                  uint64_t v386 = *v154;
                  *uint64_t v154 = 0x8000000000000000;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_10022C894(&qword_10047A078);
                    uint64_t v11 = v386;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v159 = *(void **)(*(void *)(v11 + 56) + 8 * v155);
                  sub_1001F1A4C(v155, v11);
                  *uint64_t v154 = v11;

                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_endAccess();
                goto LABEL_23;
              }
              uint64_t v145 = ~v101;
              while (1)
              {
                unint64_t v102 = (v102 + 1) & v145;
                if (((*(unint64_t *)((char *)&v376->isa + ((v102 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v102) & 1) == 0) {
                  break;
                }
                uint64_t v146 = (NSObject **)((char *)v103 + 16 * v102);
                BOOL v147 = *v146 == v99 && v146[1] == v35;
                if (v147 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                  goto LABEL_51;
                }
              }
            }
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          uint64_t v123 = *(void *)(*(void *)((char *)v375 + (void)v2)
                           + OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_members);
          swift_bridgeObjectRetain();
          char v124 = sub_10018835C((uint64_t)v99, (uint64_t)v35, v123);
          swift_bridgeObjectRelease();
          uint64_t v125 = (uint64_t)v35;
          if ((v124 & 1) == 0)
          {
            unint64_t v35 = v99;
            if (*(void *)(*v380 + 16))
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_100013660((uint64_t)v99, v125);
              char v161 = v160;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v161)
              {
                uint64_t v162 = *v380;
                if (*(void *)(*v380 + 16))
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  unint64_t v163 = sub_100013660((uint64_t)v99, v125);
                  if (v164) {
                    id v165 = *(id *)(*(void *)(v162 + 56) + 8 * v163);
                  }
                  else {
                    id v165 = 0;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  id v165 = 0;
                }
                [v165 invalidate];

                swift_beginAccess();
                swift_bridgeObjectRetain();
                sub_1001FA828(0, (uint64_t)v99, v125);
                swift_endAccess();
                if (qword_10047F3A0 != -1) {
                  swift_once();
                }
                uint64_t v186 = sub_10018A9A8(v8, (uint64_t)qword_10047F3A8);
                uint64_t v187 = v347;
                ((void (*)(char *, uint64_t, uint64_t))*v371)(v347, v186, v8);
                unint64_t v188 = v2;
                swift_bridgeObjectRetain_n();
                os_log_type_t v189 = (char *)v2;
                uint64_t v190 = v188;
                uint64_t v191 = Logger.logObject.getter();
                os_log_type_t v192 = static os_log_type_t.info.getter();
                int v193 = v192;
                if (os_log_type_enabled(v191, v192))
                {
                  uint64_t v194 = swift_slowAlloc();
                  uint64_t v364 = swift_slowAlloc();
                  os_log_t v365 = v191;
                  uint64_t v195 = (void *)v364;
                  unint64_t v378 = swift_slowAlloc();
                  os_log_t v388 = v378;
                  *(_DWORD *)uint64_t v194 = v361;
                  uint64_t v386 = (uint64_t)v190;
                  uint64_t v196 = v190;
                  int v356 = v193;
                  uint64_t v197 = (uint64_t)v99;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *uint64_t v195 = v189;

                  *(_WORD *)(v194 + 12) = 2082;
                  unint64_t v198 = v125;
                  uint64_t v200 = *v360;
                  unint64_t v199 = v360[1];
                  swift_bridgeObjectRetain();
                  uint64_t v386 = sub_10018A9E0(v200, v199, (uint64_t *)&v388);
                  uint64_t v8 = v362;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v194 + 22) = 2080;
                  swift_bridgeObjectRetain();
                  uint64_t v386 = sub_10018A9E0(v197, v198, (uint64_t *)&v388);
                  unint64_t v35 = v197;
                  uint64_t v125 = v198;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  os_log_t v201 = v365;
                  _os_log_impl((void *)&_mh_execute_header, v365, (os_log_type_t)v356, "[%{public}@]<%{public}s> Ending timeout timer early and unmapping: %s.", (uint8_t *)v194, 0x20u);
                  sub_100013A80((uint64_t *)&unk_10047B850);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  ((void (*)(char *, uint64_t))v370->isa)(v347, v8);
                  uint64_t v2 = v363;
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                  ((void (*)(char *, uint64_t))v370->isa)(v187, v8);
                  uint64_t v2 = (objc_class *)v189;
                }
              }
            }
            goto LABEL_95;
          }
          uint64_t v126 = *v374;
          swift_bridgeObjectRetain();
          char v127 = sub_10018835C((uint64_t)v99, (uint64_t)v35, v126);
          swift_bridgeObjectRelease();
          unint64_t v35 = v99;
          if (v127)
          {
            swift_beginAccess();
            sub_10018C4D0((uint64_t)v99, v125);
            swift_endAccess();
            swift_bridgeObjectRelease();
LABEL_95:
            uint64_t v11 = *v348;
            if (!*(void *)(*v348 + 16)) {
              goto LABEL_152;
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v166 = sub_100013660((uint64_t)v35, v125);
            uint64_t v167 = v125;
            if ((v168 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              id result = (id)swift_bridgeObjectRelease();
              __break(1u);
              goto LABEL_157;
            }
            uint64_t v169 = (uint64_t *)(*(void *)(v11 + 56) + 16 * v166);
            uint64_t v171 = *v169;
            uint64_t v170 = v169[1];
            swift_bridgeObjectRetain();
            unint64_t v378 = v167;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v172 = v340;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v173 = sub_100013660(v171, v170);
            char v175 = v174;
            swift_bridgeObjectRelease();
            if (v175)
            {
              char v176 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v177 = *v172;
              uint64_t v386 = *v172;
              *uint64_t v172 = 0x8000000000000000;
              if ((v176 & 1) == 0)
              {
                sub_10022C344();
                uint64_t v177 = v386;
              }
              swift_bridgeObjectRelease();
              sub_1001B6C58(v173, v177);
              *uint64_t v172 = v177;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_endAccess();
            uint64_t v178 = v348;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            uint64_t v179 = (uint64_t)v35;
            unint64_t v35 = v378;
            unint64_t v180 = sub_100013660(v179, (uint64_t)v378);
            char v182 = v181;
            swift_bridgeObjectRelease();
            if (v182)
            {
              char v183 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v184 = *v178;
              uint64_t v386 = *v178;
              *uint64_t v178 = 0x8000000000000000;
              if ((v183 & 1) == 0)
              {
                sub_10022C344();
                uint64_t v184 = v386;
              }
              swift_bridgeObjectRelease();
              sub_1001B6C58(v180, v184);
              *uint64_t v178 = v184;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_endAccess();
            swift_beginAccess();
            sub_10018C4D0(v171, v170);
            uint64_t v11 = v185;
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v356 = 1;
            unint64_t v83 = v367;
            os_log_t v74 = v368;
            goto LABEL_23;
          }
          uint64_t v11 = *v380;
          if (*(void *)(*v380 + 16))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_100013660((uint64_t)v99, v125);
            char v129 = v128;
            swift_bridgeObjectRelease();
            if (v129) {
              goto LABEL_62;
            }
            swift_bridgeObjectRelease();
          }
          if (qword_10047F3A0 != -1) {
            swift_once();
          }
          uint64_t v130 = sub_10018A9A8(v8, (uint64_t)qword_10047F3A8);
          ((void (*)(char *, uint64_t, uint64_t))*v371)(v83, v130, v8);
          uint64_t v131 = v2;
          swift_bridgeObjectRetain_n();
          unint64_t v132 = v125;
          uint64_t v133 = v131;
          uint64_t v134 = Logger.logObject.getter();
          os_log_type_t v135 = static os_log_type_t.info.getter();
          int v136 = v135;
          if (os_log_type_enabled(v134, v135))
          {
            uint64_t v137 = swift_slowAlloc();
            LODWORD(v364) = v136;
            uint64_t v138 = v137;
            uint64_t v139 = v2;
            uint64_t v140 = (void *)swift_slowAlloc();
            os_log_t v365 = (os_log_t)swift_slowAlloc();
            os_log_t v388 = v365;
            *(_DWORD *)uint64_t v138 = v361;
            unint64_t v378 = v132;
            uint64_t v386 = (uint64_t)v133;
            uint64_t v141 = v133;
            os_log_t v379 = v35;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *v140 = v139;

            *(_WORD *)(v138 + 12) = 2082;
            uint64_t v143 = *v360;
            unint64_t v142 = v360[1];
            swift_bridgeObjectRetain();
            uint64_t v144 = v143;
            unint64_t v132 = (unint64_t)v378;
            uint64_t v386 = sub_10018A9E0(v144, v142, (uint64_t *)&v388);
            uint64_t v8 = v362;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            uint64_t v2 = v363;
            swift_bridgeObjectRelease();

            *(_WORD *)(v138 + 22) = 2082;
            swift_bridgeObjectRetain();
            uint64_t v386 = sub_10018A9E0((uint64_t)v379, v132, (uint64_t *)&v388);
            unint64_t v35 = v379;
            unint64_t v83 = v367;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v364, "[%{public}@]<%{public}s> Starting timeout timer for: %{public}s.", (uint8_t *)v138, 0x20u);
            sub_100013A80((uint64_t *)&unk_10047B850);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          ((void (*)(char *, uint64_t))v370->isa)(v83, v8);
          uint64_t v84 = swift_allocObject();
          swift_unknownObjectWeakInit();
          os_log_t v85 = (void *)swift_allocObject();
          v85[2] = v84;
          v85[3] = v35;
          v85[4] = v132;
          id v86 = objc_allocWithZone((Class)MSVTimer);
          unint64_t v392 = sub_100237E6C;
          v393 = v85;
          os_log_t v388 = (os_log_t)_NSConcreteStackBlock;
          uint64_t v389 = 1107296256;
          long long v390 = sub_100006760;
          unsigned __int8 v391 = &unk_100422A48;
          uint64_t v87 = _Block_copy(&v388);
          uint64_t v88 = v369;
          swift_bridgeObjectRetain();
          swift_release();
          id v89 = [v86 initWithInterval:0 repeats:v88 queue:v87 block:15.0];

          _Block_release(v87);
          uint64_t v90 = (uint64_t)v380;
          swift_beginAccess();
          uint64_t v91 = (uint64_t)v89;
          uint64_t v11 = v90;
          sub_1001FA828(v91, (uint64_t)v35, v132);
          swift_endAccess();
          os_log_t v74 = v368;
LABEL_23:
          unint64_t v14 = (unint64_t)v381;
          uint64_t v81 = (uint64_t)v382;
        }
      }
    }
    else
    {
LABEL_157:
      __break(1u);
    }
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
  }
  else
  {
    if (qword_10047F3A0 != -1) {
LABEL_155:
    }
      swift_once();
    uint64_t v60 = sub_10018A9A8(v8, (uint64_t)qword_10047F3A8);
    os_log_t v61 = v382;
    ((void (*)(unint64_t, uint64_t, uint64_t))v382[2].isa)(v14, v60, v8);
    char v62 = v2;
    uint64_t v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.default.getter();
    int v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v66 = swift_slowAlloc();
      LODWORD(v380) = v65;
      uint64_t v67 = v66;
      uint64_t v68 = (void *)swift_slowAlloc();
      os_log_t v381 = (os_log_t)swift_slowAlloc();
      os_log_t v388 = v381;
      *(_DWORD *)uint64_t v67 = 138543874;
      uint64_t v394 = (uint64_t)v62;
      uint64_t v362 = v8;
      uint64_t v69 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v68 = v62;

      *(_WORD *)(v67 + 12) = 2082;
      uint64_t v70 = *(void *)&v69[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v71 = *(void *)&v69[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v394 = sub_10018A9E0(v70, v71, (uint64_t *)&v388);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 22) = 2080;
      uint64_t v394 = sub_10018A9E0(0xD000000000000037, 0x80000001003B5F40, (uint64_t *)&v388);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v380, "[%{public}@]<%{public}s> %s No group session when updateParticipants called.", (uint8_t *)v67, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (id)((uint64_t (*)(unint64_t, uint64_t))v382[1].isa)(v14, v362);
    }
    else
    {

      return (id)((uint64_t (*)(unint64_t, uint64_t))v61[1].isa)(v14, v8);
    }
  }
  return result;
}

void *sub_100215528(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (uint64_t *)((char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)&v2[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  id result = *(void **)&v2[OBJC_IVAR___MRDFastSyncGroupSession__state];
  if (result == (void *)4) {
    return result;
  }
  *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession__state] = 4;
  sub_1001F44E0(result);
  uint64_t v18 = &v2[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
  uint64_t v19 = *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  sub_1001924CC(v19);
  uint64_t v20 = &v2[OBJC_IVAR___MRDFastSyncGroupSession_sessionCancellables];
  swift_beginAccess();
  *(void *)uint64_t v20 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t v21 = &v2[OBJC_IVAR___MRDFastSyncGroupSession_cancellables];
  swift_beginAccess();
  *(void *)uint64_t v21 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  if (*(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_presenceTask])
  {
    swift_retain();
    sub_100013A80(&qword_100478740);
    Task.cancel()();
    swift_release();
  }
  if (*(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_joinProviderTask])
  {
    swift_retain();
    sub_100013A80(&qword_100478740);
    Task.cancel()();
    swift_release();
  }
  if (*(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_observeSessionTask])
  {
    swift_retain();
    sub_100013A80(&qword_100478740);
    Task.cancel()();
    swift_release();
  }
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v22 = v10;
  sub_100231260();
  swift_allocError();
  void *v23 = 5;
  swift_errorRetain();
  uint64_t v24 = (void *)_convertErrorToNSError(_:)();
  uint64_t v25 = (void *)_convertErrorToNSError(_:)();
  sub_10018FE08(0, &qword_10047A198);
  char v26 = static NSObject.== infix(_:_:)();

  swift_errorRelease();
  if (v26)
  {
    swift_errorRelease();
    uint64_t v10 = v22;
LABEL_12:
    sub_1001F4464();
    uint64_t v27 = sub_1001F42C8();
    uint64_t v28 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v27) + 0xD0))(v28);

    uint64_t v64 = sub_1001F4464();
    uint64_t v29 = type metadata accessor for SessionTimingEvents();
    sub_100252448(v29, (uint64_t)&off_100422478);
    *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___sessionTimings] = v64;
    swift_release();
    goto LABEL_14;
  }
  uint64_t v64 = sub_1001F43DC();
  uint64_t v30 = type metadata accessor for JoinTimingEvents();
  sub_100252DB4(a1, v30, (uint64_t)&off_1004224C0);
  *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___joinTimings] = v64;
  swift_release();
  uint64_t v64 = sub_1001F4464();
  uint64_t v31 = type metadata accessor for SessionTimingEvents();
  sub_100252DB4(a1, v31, (uint64_t)&off_100422478);
  *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___sessionTimings] = v64;
  swift_release();
  swift_errorRelease();
  uint64_t v10 = v22;
LABEL_14:
  if (qword_10047F3A0 != -1) {
LABEL_27:
  }
    swift_once();
  uint64_t v32 = sub_10018A9A8(v7, (uint64_t)qword_10047F3A8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v32, v7);
  uint64_t v33 = v2;
  swift_errorRetain();
  char v34 = v33;
  swift_errorRetain();
  unint64_t v35 = v34;
  char v36 = v10;
  uint64_t v37 = Logger.logObject.getter();
  int v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, (os_log_type_t)v38))
  {
    int v59 = v38;
    char v62 = v36;
    uint64_t v56 = v8;
    uint64_t v57 = v7;
    unint64_t v58 = v6;
    uint64_t v39 = swift_slowAlloc();
    char v40 = (void *)swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    uint64_t v66 = v61;
    *(_DWORD *)uint64_t v39 = 138543874;
    uint64_t v64 = (uint64_t)v35;
    unsigned int v41 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v60 = v40;
    void *v40 = v35;

    *(_WORD *)(v39 + 12) = 2082;
    uint64_t v42 = *(void *)&v41[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v43 = *(void *)&v41[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_10018A9E0(v42, v43, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 22) = 2082;
    unint64_t v44 = 0xE000000000000000;
    if (a1)
    {
      uint64_t v64 = 0;
      unint64_t v65 = 0xE000000000000000;
      swift_errorRetain();
      v45._uint64_t countAndFlagsBits = 0x7265206874697720;
      v45._object = (void *)0xED0000203A726F72;
      String.append(_:)(v45);
      uint64_t v63 = a1;
      sub_100013A80(&qword_100478740);
      _print_unlocked<A, B>(_:_:)();
      swift_errorRelease();
      uint64_t v46 = v64;
      unint64_t v44 = v65;
    }
    else
    {
      uint64_t v46 = 0;
    }
    uint64_t v47 = v57;
    uint64_t v6 = v58;
    uint64_t v48 = v56;
    uint64_t v64 = sub_10018A9E0(v46, v44, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v59, "[%{public}@]<%{public}s> invalidate%{public}s.", (uint8_t *)v39, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v48 + 8))(v62, v47);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v36, v7);
  }
  uint64_t v49 = *(void *)&v35[OBJC_IVAR___MRDFastSyncGroupSession_provider];
  int v50 = *(void **)&v35[OBJC_IVAR___MRDFastSyncGroupSession_presenceDataSource];
  if (*(void *)&v35[OBJC_IVAR___MRDFastSyncGroupSession_groupSession])
  {
    swift_retain();
    id v51 = v50;
    swift_retain();
    GroupSession.end()();
    swift_release();
  }
  else
  {
    swift_retain();
    id v52 = v50;
  }
  uint64_t v53 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v6, 1, 1, v53);
  unint64_t v54 = (void *)swift_allocObject();
  v54[2] = 0;
  v54[3] = 0;
  v54[4] = v49;
  v54[5] = v50;
  sub_10018A588((uint64_t)v6, (uint64_t)&unk_10047A190, (uint64_t)v54);
  return (void *)swift_release();
}

uint64_t sub_100215E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100215E88, 0, 0);
}

uint64_t sub_100215E88()
{
  *(void *)(v0 + 32) = dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_100215F28;
  return NearbyGroup.leave()();
}

uint64_t sub_100215F28()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    swift_errorRelease();
  }
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 48) = v4;
  uint64_t v5 = sub_100013A80(&qword_1004799C0);
  uint64_t v6 = sub_1000155BC(&qword_10047A018, &qword_1004799C0);
  void *v4 = v3;
  v4[1] = sub_1002160D4;
  return GroupSessionProvider.leave()(v5, v6);
}

uint64_t sub_1002160D4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v4;
  void *v4 = v3;
  v4[1] = sub_100216238;
  v4[23] = *(void *)(v2 + 24);
  unsigned char v4[24] = swift_getObjectType();
  return _swift_task_switch(sub_100227D54, 0, 0);
}

uint64_t sub_100216238()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return v3();
}

uint64_t sub_100216338()
{
  uint64_t v1 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100013A80(&qword_100479FE8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)&v0[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v14)
  {
    unint64_t v54 = v7;
    uint64_t v55 = v5;
    uint64_t v56 = v4;
    uint64_t v5 = *(void *)&v0[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    uint64_t v7 = *(char **)&v0[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    uint64_t v15 = qword_10047F3A0;
    swift_bridgeObjectRetain();
    if (v15 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v16 = type metadata accessor for Logger();
  sub_10018A9A8(v16, (uint64_t)qword_10047F3A8);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = v0;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.info.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v57 = v5;
  id v53 = v13;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    id v52 = v3;
    uint64_t v22 = v21;
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    v60[0] = v51;
    *(_DWORD *)uint64_t v22 = 138543618;
    uint64_t v58 = (uint64_t)v17;
    uint64_t v24 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v23 = v17;

    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_10018A9E0(v57, (unint64_t)v7, v60);
    uint64_t v5 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%{public}@]<%{public}s> Bind presence data source to nearby group.", (uint8_t *)v22, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v52;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_retain();
  dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
  swift_release();
  uint64_t v25 = v54;
  NearbyGroup.$members.getter();
  swift_release();
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = v26;
  v27[3] = v5;
  v27[4] = v7;
  sub_1000155BC(&qword_100479FF0, &qword_100479FE8);
  swift_bridgeObjectRetain();
  uint64_t v28 = v56;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v25, v28);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v29 = (char *)*(id *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_presenceDataSource];
  swift_retain();
  dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
  swift_release();
  uint64_t v30 = NearbyGroup.members.getter();
  swift_release();
  uint64_t v31 = (void *)sub_10020CAD8(v30, (uint64_t)v59, (uint64_t (*)(void))&type metadata accessor for NearbyGroup.Member, (uint64_t (*)(uint64_t))&NearbyGroup.Member.handle.getter);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8];
  if (v33)
  {
    uint64_t v34 = *(void *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_localHandle];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v35 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v35 = sub_100229FF0(0, v31[2] + 1, 1, v31);
    }
    unint64_t v37 = v35[2];
    unint64_t v36 = v35[3];
    if (v37 >= v36 >> 1) {
      unint64_t v35 = sub_100229FF0((void *)(v36 > 1), v37 + 1, 1, v35);
    }
    uint64_t v35[2] = v37 + 1;
    int v38 = &v35[2 * v37];
    v38[4] = v34;
    v38[5] = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_10000B4EC((uint64_t)v35);
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void *)&v29[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_members];
    *(void *)&v29[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_members] = v39;
    sub_1002252D0(v40);

    swift_bridgeObjectRelease();
    uint64_t v41 = type metadata accessor for TaskPriority();
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
    v42(v3, 1, 1, v41);
    uint64_t v43 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v44 = (void *)swift_allocObject();
    void v44[2] = 0;
    v44[3] = 0;
    uint64_t v45 = v57;
    v44[4] = v43;
    v44[5] = v45;
    uint64_t v46 = v53;
    v44[6] = v7;
    v44[7] = v46;
    id v47 = v46;
    swift_bridgeObjectRetain();
    *(void *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_presenceTask] = sub_100196EE0((uint64_t)v3, (uint64_t)&unk_10047A000, (uint64_t)v44);
    swift_release();
    v42(v3, 1, 1, v41);
    uint64_t v48 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v49 = (void *)swift_allocObject();
    v49[2] = 0;
    uint64_t v49[3] = 0;
    v49[4] = v48;
    v49[5] = v45;
    v49[6] = v7;
    *(void *)&v17[OBJC_IVAR___MRDFastSyncGroupSession_joinProviderTask] = sub_100196EE0((uint64_t)v3, (uint64_t)&unk_10047A010, (uint64_t)v49);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100216B68(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v36 = a3;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v31 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10018A9A8(v11, (uint64_t)qword_10047F3A8);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v30 = v7;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    aBlock[0] = v29;
    *(_DWORD *)uint64_t v14 = 138543874;
    swift_beginAccess();
    uint64_t v28 = a2 + 16;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v17 = Strong;
    if (Strong) {
      uint64_t v39 = Strong;
    }
    else {
      uint64_t v39 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v15 = v17;
    swift_release_n();
    *(_WORD *)(v14 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_10018A9E0(v36, a4, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2080;
    type metadata accessor for NearbyGroup.Member();
    sub_100015B28(&qword_10047A050, (void (*)(uint64_t))&type metadata accessor for NearbyGroup.Member);
    swift_bridgeObjectRetain();
    uint64_t v18 = Set.description.getter();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_10018A9E0(v18, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%{public}@]<%{public}s> NearbyGroup members changed: %s.", (uint8_t *)v14, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v7 = v30;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v22 = (void *)result;
    uint64_t v23 = (void *)swift_allocObject();
    void v23[2] = v10;
    v23[3] = v22;
    v23[4] = v36;
    v23[5] = a4;
    aBlock[4] = (uint64_t)sub_1002379C0;
    aBlock[5] = (uint64_t)v23;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_100006760;
    aBlock[3] = (uint64_t)&unk_1004229F8;
    uint64_t v24 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = v22;
    uint64_t v26 = v31;
    static DispatchQoS.unspecified.getter();
    unint64_t v37 = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v27 = v33;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v7);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v34);

    return swift_release();
  }
  return result;
}

uint64_t sub_1002171C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NearbyGroup.Member();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v32 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  uint64_t v36 = v3 + 16;
  uint64_t v35 = v3 + 32;
  int64_t v33 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v34 = v3 + 8;
  uint64_t v13 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  uint64_t v31 = _swiftEmptyArrayStorage;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(void *)(v13 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    uint64_t v18 = NearbyGroup.Member.tokenDestination.getter();
    uint64_t v20 = v19;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if (v20)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100229FF0(0, v31[2] + 1, 1, v31);
        uint64_t v31 = (void *)result;
      }
      unint64_t v25 = v31[2];
      unint64_t v24 = v31[3];
      unint64_t v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        unint64_t v29 = v31[2];
        unint64_t v30 = v25 + 1;
        uint64_t result = (uint64_t)sub_100229FF0((void *)(v24 > 1), v25 + 1, 1, v31);
        unint64_t v25 = v29;
        unint64_t v26 = v30;
        uint64_t v31 = (void *)result;
      }
      uint64_t v27 = v31;
      os_log_t v31[2] = v26;
      uint64_t v28 = &v27[2 * v25];
      v28[4] = v18;
      void v28[5] = v20;
      if (v12) {
        goto LABEL_4;
      }
    }
    else if (v12)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v21 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v21 >= v33) {
      goto LABEL_29;
    }
    unint64_t v22 = *(void *)(v32 + 8 * v21);
    ++v15;
    if (!v22)
    {
      int64_t v15 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_29;
      }
      unint64_t v22 = *(void *)(v32 + 8 * v15);
      if (!v22)
      {
        int64_t v15 = v21 + 2;
        if (v21 + 2 >= v33) {
          goto LABEL_29;
        }
        unint64_t v22 = *(void *)(v32 + 8 * v15);
        if (!v22)
        {
          int64_t v15 = v21 + 3;
          if (v21 + 3 >= v33) {
            goto LABEL_29;
          }
          unint64_t v22 = *(void *)(v32 + 8 * v15);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v33)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v31;
  }
  unint64_t v22 = *(void *)(v32 + 8 * v23);
  if (v22)
  {
    int64_t v15 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v15 >= v33) {
      goto LABEL_29;
    }
    unint64_t v22 = *(void *)(v32 + 8 * v15);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_100217510(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10018FE08(0, &qword_100479F30);
    sub_100236E24();
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v34;
    uint64_t v31 = v35;
    uint64_t v4 = v36;
    int64_t v5 = v37;
    uint64_t v6 = v38;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v31 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    uint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v28 = v4;
  int64_t v30 = (unint64_t)(v4 + 64) >> 6;
  unint64_t v29 = _swiftEmptyArrayStorage;
  uint64_t v42 = (char *)&type metadata for Any + 8;
LABEL_8:
  int64_t v10 = v5;
  unint64_t v11 = v6;
  while (v3 < 0)
  {
    uint64_t v13 = __CocoaSet.Iterator.next()();
    if (!v13) {
      goto LABEL_53;
    }
    *(void *)&long long v40 = v13;
    sub_10018FE08(0, &qword_100479F30);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = (id)v39[0];
    swift_unknownObjectRelease();
    int64_t v5 = v10;
    uint64_t v6 = v11;
    if (!v14) {
      goto LABEL_53;
    }
LABEL_27:
    id v17 = objc_msgSend(v14, "presencePayload", v28);
    id v18 = [v17 payloadDictionary];

    if (!v18)
    {
      long long v40 = 0u;
      long long v41 = 0u;
LABEL_37:
      sub_100009A08((uint64_t)&v40, &qword_100479F50);
LABEL_38:
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      if (v2)
      {
LABEL_52:

        sub_10018F864();
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_39;
    }
    uint64_t v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    AnyHashable.init<A>(_:)();
    if (*(void *)(v19 + 16) && (unint64_t v20 = sub_10018C3C4((uint64_t)v39), (v21 & 1) != 0))
    {
      sub_10018FDAC(*(void *)(v19 + 56) + 32 * v20, (uint64_t)&v40);
    }
    else
    {
      long long v40 = 0u;
      long long v41 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10018FFC8((uint64_t)v39);
    if (!*((void *)&v41 + 1)) {
      goto LABEL_37;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_38;
    }
    if (v2) {
      goto LABEL_52;
    }
LABEL_39:

    int64_t v10 = v5;
    unint64_t v11 = v6;
    if (v33)
    {
      int64_t v23 = v29;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        int64_t v23 = sub_100229FF0(0, v29[2] + 1, 1, v29);
      }
      unint64_t v26 = v23[2];
      unint64_t v25 = v23[3];
      if (v26 >= v25 >> 1) {
        int64_t v23 = sub_100229FF0((void *)(v25 > 1), v26 + 1, 1, v23);
      }
      void v23[2] = v26 + 1;
      unint64_t v29 = v23;
      uint64_t v27 = &v23[2 * v26];
      v27[4] = v32;
      v27[5] = v33;
      goto LABEL_8;
    }
  }
  if (v11)
  {
    uint64_t v6 = (v11 - 1) & v11;
    unint64_t v12 = __clz(__rbit64(v11)) | (v10 << 6);
    int64_t v5 = v10;
LABEL_26:
    id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_53;
    }
    goto LABEL_27;
  }
  int64_t v5 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v5 >= v30) {
      goto LABEL_53;
    }
    unint64_t v15 = *(void *)(v31 + 8 * v5);
    if (!v15)
    {
      int64_t v16 = v10 + 2;
      if (v10 + 2 >= v30) {
        goto LABEL_53;
      }
      unint64_t v15 = *(void *)(v31 + 8 * v16);
      if (v15) {
        goto LABEL_24;
      }
      int64_t v16 = v10 + 3;
      if (v10 + 3 >= v30) {
        goto LABEL_53;
      }
      unint64_t v15 = *(void *)(v31 + 8 * v16);
      if (v15) {
        goto LABEL_24;
      }
      int64_t v16 = v10 + 4;
      if (v10 + 4 >= v30) {
        goto LABEL_53;
      }
      unint64_t v15 = *(void *)(v31 + 8 * v16);
      if (v15)
      {
LABEL_24:
        int64_t v5 = v16;
      }
      else
      {
        int64_t v5 = v10 + 5;
        if (v10 + 5 >= v30) {
          goto LABEL_53;
        }
        unint64_t v15 = *(void *)(v31 + 8 * v5);
        if (!v15)
        {
          int64_t v22 = v10 + 6;
          while (v30 != v22)
          {
            unint64_t v15 = *(void *)(v31 + 8 * v22++);
            if (v15)
            {
              int64_t v5 = v22 - 1;
              goto LABEL_25;
            }
          }
LABEL_53:
          sub_10018F864();
          return;
        }
      }
    }
LABEL_25:
    uint64_t v6 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_1002179D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[60] = a6;
  v7[61] = a7;
  v7[58] = a4;
  v7[59] = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  v7[62] = v8;
  v7[63] = *(void *)(v8 - 8);
  v7[64] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  v7[65] = v9;
  v7[66] = *(void *)(v9 - 8);
  v7[67] = swift_task_alloc();
  sub_100013A80(&qword_10047A020);
  v7[68] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for AddressableMember();
  v7[69] = v10;
  v7[70] = *(void *)(v10 - 8);
  v7[71] = swift_task_alloc();
  return _swift_task_switch(sub_100217BA8, 0, 0);
}

uint64_t sub_100217BA8()
{
  uint64_t v67 = v0;
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 576) = sub_10018A9A8(v1, (uint64_t)qword_10047F3A8);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    int64_t v5 = (void *)swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543618;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong) {
      *(void *)(v0 + 456) = Strong;
    }
    else {
      *(void *)(v0 + 440) = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v8 = *(void *)(v0 + 472);
    unint64_t v7 = *(void *)(v0 + 480);
    *int64_t v5 = Strong;
    swift_release_n();
    *(_WORD *)(v4 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 448) = sub_10018A9E0(v8, v7, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%{public}@]<%{public}s> Asserting presence.", (uint8_t *)v4, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (!v9)
  {
    *(void *)(v0 + 96) = 0;
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    goto LABEL_19;
  }
  uint64_t v10 = (void *)v9;
  swift_retain();

  dispatch thunk of NearbyGroupSessionProvider.localMember.getter();
  swift_release();
  if (!*(void *)(v0 + 88))
  {
LABEL_19:
    uint64_t v27 = *(void *)(v0 + 560);
    uint64_t v28 = *(void *)(v0 + 552);
    uint64_t v29 = *(void *)(v0 + 544);
    sub_100009A08(v0 + 64, &qword_10047A028);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, 1, 1, v28);
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)(v0 + 560);
  uint64_t v12 = *(void *)(v0 + 552);
  uint64_t v13 = *(void *)(v0 + 544);
  sub_100013A80(&qword_10047A030);
  int v14 = swift_dynamicCast();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v13, v14 ^ 1u, 1, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v12) == 1)
  {
LABEL_20:
    int64_t v30 = (const void *)(v0 + 16);
    sub_100009A08(*(void *)(v0 + 544), &qword_10047A020);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 138543618;
      swift_beginAccess();
      uint64_t v35 = swift_unknownObjectWeakLoadStrong();
      if (v35) {
        *(void *)(v0 + 352) = v35;
      }
      else {
        *(void *)(v0 + 400) = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v37 = *(void *)(v0 + 472);
      unint64_t v36 = *(void *)(v0 + 480);
      void *v34 = v35;
      swift_release_n();
      *(_WORD *)(v33 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 392) = sub_10018A9E0(v37, v36, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "[%{public}@]<%{public}s> No local handle to assert presence with.", (uint8_t *)v33, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      int64_t v30 = (const void *)(v0 + 16);
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v38 = *(void *)(v0 + 536);
    uint64_t v62 = *(void *)(v0 + 528);
    uint64_t v63 = *(void *)(v0 + 520);
    uint64_t v39 = *(void *)(v0 + 504);
    uint64_t v40 = *(void *)(v0 + 512);
    uint64_t v41 = *(void *)(v0 + 496);
    uint64_t v42 = swift_allocObject();
    swift_beginAccess();
    uint64_t v43 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    *(void *)(v0 + 48) = sub_1002377B8;
    *(void *)(v0 + 56) = v42;
    *(void *)(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = 1107296256;
    *(void *)(v0 + 32) = sub_100006760;
    *(void *)(v0 + 40) = &unk_1004228D8;
    unint64_t v44 = _Block_copy(v30);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    *(void *)(v0 + 432) = _swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v41);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v38, v63);
    swift_release();
    swift_release();
    goto LABEL_27;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 560) + 32))(*(void *)(v0 + 568), *(void *)(v0 + 544), *(void *)(v0 + 552));
  swift_beginAccess();
  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    int64_t v16 = (void *)v15;
    sub_1001F43DC();

    id v17 = (void *)sub_1001F4038();
    uint64_t v18 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v17) + 0xC0))(v18);
  }
  swift_beginAccess();
  uint64_t v19 = swift_unknownObjectWeakLoadStrong();
  if (v19)
  {
    unint64_t v20 = (void *)v19;
    char v21 = *(void **)(v19 + OBJC_IVAR___MRDFastSyncGroupSession_presenceDataSource);
    *(void *)(v0 + 584) = v21;
    id v22 = v21;

    uint64_t v23 = AddressableMember.handle.getter();
    uint64_t v25 = v24;
    *(void *)(v0 + 592) = v24;
    unint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 600) = v26;
    void *v26 = v0;
    v26[1] = sub_1002188B8;
    v26[39] = v25;
    v26[40] = v22;
    v26[38] = v23;
    v26[41] = swift_getObjectType();
    return _swift_task_switch(sub_1002270FC, 0, 0);
  }
  swift_beginAccess();
  uint64_t v46 = swift_unknownObjectWeakLoadStrong();
  if (v46)
  {
    id v47 = (void *)v46;
    sub_1001F43DC();

    uint64_t v48 = (void *)sub_1001F4038();
    uint64_t v49 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v48) + 0xD0))(v49);
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = swift_slowAlloc();
    id v53 = (void *)swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 138543618;
    swift_beginAccess();
    uint64_t v54 = swift_unknownObjectWeakLoadStrong();
    if (v54) {
      *(void *)(v0 + 424) = v54;
    }
    else {
      *(void *)(v0 + 408) = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v65 = *(void *)(v0 + 568);
    uint64_t v58 = *(void *)(v0 + 560);
    uint64_t v64 = *(void *)(v0 + 552);
    uint64_t v60 = *(void *)(v0 + 472);
    unint64_t v59 = *(void *)(v0 + 480);
    *id v53 = v54;
    swift_release_n();
    *(_WORD *)(v52 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 416) = sub_10018A9E0(v60, v59, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "[%{public}@]<%{public}s> Asserted presence.", (uint8_t *)v52, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v65, v64);
  }
  else
  {
    uint64_t v55 = *(void *)(v0 + 568);
    uint64_t v56 = *(void *)(v0 + 560);
    uint64_t v57 = *(void *)(v0 + 552);

    swift_bridgeObjectRelease_n();
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
  }
LABEL_27:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_1002188B8()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 584);
  *(void *)(*(void *)v1 + 608) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  if (v0) {
    os_log_type_t v3 = sub_100218DD8;
  }
  else {
    os_log_type_t v3 = sub_100218A34;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100218A34()
{
  id v22 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_1001F43DC();

    os_log_type_t v3 = (void *)sub_1001F4038();
    uint64_t v4 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0xD0))(v4);
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    unint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138543618;
    swift_beginAccess();
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();
    uint64_t v9 = v8;
    if (v8) {
      v0[53] = v8;
    }
    else {
      v0[51] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v13 = v0[70];
    uint64_t v18 = v0[69];
    uint64_t v19 = v0[71];
    uint64_t v15 = v0[59];
    unint64_t v14 = v0[60];
    *unint64_t v20 = v9;
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[52] = sub_10018A9E0(v15, v14, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%{public}@]<%{public}s> Asserted presence.", (uint8_t *)v7, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v19, v18);
  }
  else
  {
    uint64_t v10 = v0[71];
    uint64_t v11 = v0[70];
    uint64_t v12 = v0[69];

    swift_bridgeObjectRelease_n();
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_100218DD8()
{
  id v17 = v0;
  (*(void (**)(void, void))(v0[70] + 8))(v0[71], v0[69]);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543874;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v6 = Strong;
    if (Strong) {
      v0[48] = Strong;
    }
    else {
      v0[45] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v7 = v0[59];
    unint64_t v8 = v0[60];
    void *v4 = v6;
    swift_release_n();
    *(_WORD *)(v3 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[46] = sub_10018A9E0(v7, v8, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 22) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[47] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v4[1] = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%{public}@]<%{public}s> Error asserting presence %{public}@. Low-power mode will not function.", (uint8_t *)v3, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_beginAccess();
  uint64_t v10 = swift_unknownObjectWeakLoadStrong();
  uint64_t v11 = v0[76];
  if (v10)
  {
    uint64_t v12 = (char *)v10;
    v0[43] = sub_1001F43DC();
    uint64_t v13 = type metadata accessor for JoinTimingEvents();
    sub_100252DB4(v11, v13, (uint64_t)&off_1004224C0);
    *(void *)&v12[OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___joinTimings] = v0[43];
    swift_release();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1002191EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[27] = a5;
  v6[28] = a6;
  v6[26] = a4;
  return _swift_task_switch(sub_100219280, 0, 0);
}

uint64_t sub_100219280()
{
  uint64_t v34 = v0;
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[29] = sub_10018A9A8(v1, (uint64_t)qword_10047F3A8);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543618;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong) {
      v0[25] = Strong;
    }
    else {
      v0[23] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v8 = v0[27];
    unint64_t v7 = v0[28];
    *uint64_t v5 = Strong;
    swift_release_n();
    *(_WORD *)(v4 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[24] = sub_10018A9E0(v8, v7, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%{public}@]<%{public}s> Joining provider.", (uint8_t *)v4, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    sub_1001F43DC();

    uint64_t v11 = sub_1001F403C();
    uint64_t v12 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v11) + 0xC0))(v12);
  }
  swift_beginAccess();
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  if (v13)
  {
    unint64_t v14 = (void *)v13;
    v0[30] = *(void *)(v13 + OBJC_IVAR___MRDFastSyncGroupSession_provider);
    swift_retain();

    uint64_t v15 = (void *)swift_task_alloc();
    v0[31] = v15;
    uint64_t v16 = sub_100013A80(&qword_1004799C0);
    uint64_t v17 = sub_1000155BC(&qword_10047A018, &qword_1004799C0);
    void *v15 = v0;
    v15[1] = sub_1002199E0;
    return GroupSessionProvider.join()(v16, v17);
  }
  else
  {
    swift_beginAccess();
    uint64_t v18 = swift_unknownObjectWeakLoadStrong();
    if (v18)
    {
      uint64_t v19 = (void *)v18;
      sub_1001F43DC();

      unint64_t v20 = sub_1001F403C();
      uint64_t v21 = swift_release();
      (*(void (**)(uint64_t))((swift_isaMask & *v20) + 0xD0))(v21);
    }
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    id v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138543618;
      swift_beginAccess();
      uint64_t v26 = swift_unknownObjectWeakLoadStrong();
      if (v26) {
        v0[21] = v26;
      }
      else {
        v0[22] = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v28 = v0[27];
      unint64_t v27 = v0[28];
      *uint64_t v25 = v26;
      swift_release_n();
      *(_WORD *)(v24 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[20] = sub_10018A9E0(v28, v27, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%{public}@]<%{public}s> Joined provider.", (uint8_t *)v24, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }

    swift_beginAccess();
    uint64_t v29 = swift_unknownObjectWeakLoadStrong();
    if (v29)
    {
      int64_t v30 = (void *)v29;
      sub_1001F8648();
    }
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1002199E0()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v2 = sub_100219E90;
  }
  else
  {
    swift_release();
    os_log_type_t v2 = sub_100219B30;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100219B30()
{
  uint64_t v18 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v2 = (void *)Strong;
    sub_1001F43DC();

    os_log_type_t v3 = sub_1001F403C();
    uint64_t v4 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0xD0))(v4);
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138543618;
    swift_beginAccess();
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    uint64_t v10 = v9;
    if (v9) {
      v0[21] = v9;
    }
    else {
      v0[22] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v12 = v0[27];
    unint64_t v11 = v0[28];
    *uint64_t v8 = v10;
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[20] = sub_10018A9E0(v12, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%{public}@]<%{public}s> Joined provider.", (uint8_t *)v7, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  if (v13)
  {
    unint64_t v14 = (void *)v13;
    sub_1001F8648();
  }
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100219E90()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100219F20(NSObject *a1)
{
  os_log_type_t v2 = v1;
  char v181 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v163 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v161 = (char *)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = type metadata accessor for DispatchQoS();
  uint64_t v160 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  uint64_t v159 = (char *)&v153 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for UUID();
  uint64_t v178 = *(void **)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v177 = (char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = type metadata accessor for Participant();
  uint64_t v166 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  char v164 = (char *)&v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_100013A80(&qword_100479FC8);
  uint64_t v8 = *(void *)(v182 - 8);
  uint64_t v9 = __chkstk_darwin(v182);
  char v174 = (uint64_t *)((char *)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v9);
  char v176 = (char *)&v153 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v169 = (char *)&v153 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v153 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v153 - v18;
  uint64_t v20 = type metadata accessor for DispatchPredicate();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  os_log_type_t v23 = (char **)((char *)&v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = *(void **)&v2[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v23 = v24;
  (*(void (**)(void *, void, uint64_t))(v21 + 104))(v23, enum case for DispatchPredicate.onQueue(_:), v20);
  id v25 = v24;
  uint64_t v26 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v21 + 8))(v23, v20);
  if ((v26 & 1) == 0)
  {
    __break(1u);
LABEL_36:
    swift_once();
LABEL_4:
    uint64_t v27 = type metadata accessor for Logger();
    uint64_t v28 = sub_10018A9A8(v27, (uint64_t)qword_10047F3A8);
    uint64_t v29 = v8;
    uint64_t v31 = v8 + 16;
    int64_t v30 = *(void (**)(char *, NSObject *, uint64_t))(v8 + 16);
    v30(v17, v181, v182);
    unint64_t v180 = v2;
    uint64_t v167 = v28;
    os_log_type_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    int v34 = v33;
    BOOL v35 = os_log_type_enabled(v32, v33);
    unint64_t v173 = v19;
    uint64_t v168 = v26;
    uint64_t v175 = v29;
    uint64_t v171 = v31;
    uint64_t v172 = (void (*)(char *, char *, uint64_t))v30;
    if (v35)
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v170 = (void (*)(void, void))v17;
      uint64_t v38 = (void *)v37;
      uint64_t v154 = v37;
      uint64_t v157 = swift_slowAlloc();
      aBlock[0] = v157;
      *(_DWORD *)uint64_t v36 = 138543874;
      LODWORD(v156) = v34;
      uint64_t v39 = v180;
      os_log_t v155 = v32;
      uint64_t v40 = v29;
      uint64_t v184 = v180;
      id v153 = &v185;
      uint64_t v41 = v180;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v38 = v39;

      *(_WORD *)(v36 + 12) = 2082;
      uint64_t v43 = *(void *)&v41[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v42 = *(void *)&v41[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v184 = (void *)sub_10018A9E0(v43, v42, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v44 = v182;
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 22) = 2082;
      uint64_t v45 = v170;
      v30(v169, v170, v44);
      uint64_t v46 = String.init<A>(describing:)();
      uint64_t v184 = (void *)sub_10018A9E0(v46, v47, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v170 = *(void (**)(void, void))(v40 + 8);
      v170(v45, v44);
      os_log_t v48 = v155;
      _os_log_impl((void *)&_mh_execute_header, v155, (os_log_type_t)v156, "[%{public}@]<%{public}s> GroupSession.State changed: %{public}s.", (uint8_t *)v36, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v19 = v173;
      swift_slowDealloc();
    }
    else
    {
      uint64_t v58 = v180;

      uint64_t v170 = *(void (**)(void, void))(v29 + 8);
      v170(v17, v182);
    }
    uint64_t v60 = v176;
    unint64_t v59 = v177;
    uint64_t v61 = v179;
    sub_1000155BC(&qword_100479FD0, &qword_100479FC8);
    char v62 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v63 = v178;
    if ((v62 & 1) == 0)
    {
      uint64_t v64 = v59;
      uint64_t v65 = v172;
      v172(v60, v19, v182);
      uint64_t v66 = v180;
      uint64_t v67 = Logger.logObject.getter();
      os_log_type_t v68 = static os_log_type_t.error.getter();
      int v69 = v68;
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v70 = swift_slowAlloc();
        unint64_t v71 = (void *)swift_slowAlloc();
        char v156 = v71;
        uint64_t v157 = swift_slowAlloc();
        aBlock[0] = v157;
        *(_DWORD *)uint64_t v70 = 138543874;
        uint64_t v184 = v66;
        os_log_t v155 = v67;
        uint64_t v72 = v66;
        LODWORD(v154) = v69;
        char v73 = v72;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v71 = v66;

        *(_WORD *)(v70 + 12) = 2082;
        uint64_t v74 = *(void *)&v73[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        unint64_t v75 = *(void *)&v73[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        swift_bridgeObjectRetain();
        uint64_t v184 = (void *)sub_10018A9E0(v74, v75, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        uint64_t v76 = v182;
        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 22) = 2082;
        uint64_t v77 = v176;
        v65(v169, v176, v76);
        uint64_t v78 = String.init<A>(describing:)();
        uint64_t v184 = (void *)sub_10018A9E0(v78, v79, aBlock);
        unint64_t v59 = v177;
        uint64_t v61 = v179;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v170(v77, v76);
        os_log_t v80 = v155;
        _os_log_impl((void *)&_mh_execute_header, v155, (os_log_type_t)v154, "[%{public}@]<%{public}s> GroupSession.State change differs from session: %{public}s.", (uint8_t *)v70, 0x20u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v63 = v178;
        swift_slowDealloc();

        uint64_t v19 = v173;
      }
      else
      {

        v170(v60, v182);
        uint64_t v19 = v173;
        unint64_t v59 = v64;
      }
    }
    uint64_t v81 = v174;
    uint64_t v82 = v182;
    v172((char *)v174, (char *)v181, v182);
    uint64_t v83 = v175;
    int v84 = (*(uint64_t (**)(uint64_t *, uint64_t))(v175 + 88))(v81, v82);
    if (v84 == enum case for GroupSession.State.invalidated<A>(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v83 + 96))(v81, v182);
      uint64_t v85 = *v81;
      id v86 = v180;
      swift_errorRetain();
      uint64_t v87 = v86;
      swift_errorRetain();
      uint64_t v88 = Logger.logObject.getter();
      os_log_type_t v89 = static os_log_type_t.error.getter();
      char v181 = v88;
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = swift_slowAlloc();
        uint64_t v91 = (char *)swift_slowAlloc();
        unint64_t v180 = v91;
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v90 = 138543874;
        uint64_t v184 = v87;
        unint64_t v92 = v87;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(void *)uint64_t v91 = v87;

        *(_WORD *)(v90 + 12) = 2082;
        uint64_t v94 = *(void *)&v92[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        unint64_t v93 = *(void *)&v92[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        swift_bridgeObjectRetain();
        uint64_t v184 = (void *)sub_10018A9E0(v94, v93, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 22) = 2082;
        uint64_t v184 = (void *)v85;
        swift_errorRetain();
        sub_100013A80(&qword_100478740);
        uint64_t v95 = String.init<A>(describing:)();
        uint64_t v184 = (void *)sub_10018A9E0(v95, v96, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        uint64_t v97 = v181;
        _os_log_impl((void *)&_mh_execute_header, v181, v89, "[%{public}@]<%{public}s> GroupSession.State invalidated with error: %{public}s.", (uint8_t *)v90, 0x20u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
      swift_errorRetain();
      sub_100215528(v85);
      swift_release();
      swift_errorRelease();
      swift_errorRelease();
      v170(v173, v182);
      return;
    }
    if (v84 == enum case for GroupSession.State.waiting<A>(_:))
    {
      v170(v19, v182);
      swift_release();
      return;
    }
    if (v84 != enum case for GroupSession.State.joined<A>(_:))
    {
      uint64_t v122 = v182;
      uint64_t v123 = (void (*)(uint64_t *, uint64_t))v170;
      v170(v19, v182);
      swift_release();
      v123(v81, v122);
      return;
    }
    uint64_t v98 = v180;
    unint64_t v99 = *(void **)&v180[OBJC_IVAR___MRDFastSyncGroupSession__state];
    *(void *)&v180[OBJC_IVAR___MRDFastSyncGroupSession__state] = 3;
    sub_1001F44E0(v99);
    Swift::Int v100 = v164;
    GroupSession.localParticipant.getter();
    Participant.id.getter();
    uint64_t v101 = *(NSObject **)(v166 + 8);
    v166 += 8;
    char v181 = v101;
    ((void (*)(char *, uint64_t))v101)(v100, v61);
    uint64_t v102 = UUID.uuidString.getter();
    uint64_t v104 = v103;
    uint64_t v105 = v165;
    uint64_t v178 = (void *)v63[1];
    ((void (*)(char *, uint64_t))v178)(v59, v165);
    uint64_t v106 = (uint64_t *)&v98[OBJC_IVAR___MRDFastSyncGroupSession_localFastSyncIdentifier];
    *uint64_t v106 = v102;
    v106[1] = v104;
    swift_bridgeObjectRelease();
    sub_1001F43DC();
    char v107 = sub_1001F40FC();
    uint64_t v108 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v107) + 0xD0))(v108);

    if (v98[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] == 1)
    {
      GroupSession.localParticipant.getter();
      Participant.id.getter();
      ((void (*)(char *, uint64_t))v181)(v100, v179);
      uint64_t v109 = UUID.uuidString.getter();
      uint64_t v111 = v110;
      ((void (*)(char *, uint64_t))v178)(v59, v105);
      unint64_t v112 = v180;
      id v113 = (uint64_t *)&v180[OBJC_IVAR___MRDFastSyncGroupSession_leaderFastSyncIdentifier];
      *id v113 = v109;
      v113[1] = v111;
      swift_bridgeObjectRelease();
      unint64_t v114 = (uint64_t *)&v112[OBJC_IVAR___MRDFastSyncGroupSession_localHandle];
      uint64_t v115 = *(void *)&v112[OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8];
      if (v115)
      {
        uint64_t v116 = *v114;
        int v117 = (uint64_t *)&v180[OBJC_IVAR___MRDFastSyncGroupSession_localParticipantIdentifier];
        uint64_t v118 = *(void *)&v180[OBJC_IVAR___MRDFastSyncGroupSession_localParticipantIdentifier];
        uint64_t v119 = *(void *)&v180[OBJC_IVAR___MRDFastSyncGroupSession_localParticipantIdentifier + 8];
        uint64_t v120 = &v180[OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToMediaRemoteIdentifierMap];
        swift_beginAccess();
        swift_bridgeObjectRetain();
        if (v119)
        {
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v184 = *(void **)v120;
          *(void *)uint64_t v120 = 0x8000000000000000;
          sub_10022CE28(v118, v119, v116, v115, isUniquelyReferenced_nonNull_native);
          *(void *)uint64_t v120 = v184;
        }
        else
        {
          sub_10022B094(v116, v115);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v126 = v117[1];
        if (v126)
        {
          uint64_t v127 = *v117;
          uint64_t v128 = OBJC_IVAR___MRDFastSyncGroupSession_localIdentity;
          char v129 = v180;
          uint64_t v130 = *(void **)&v180[OBJC_IVAR___MRDFastSyncGroupSession_localIdentity];
          swift_bridgeObjectRetain();
          id v131 = [v130 identifier];
          uint64_t v132 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v134 = v133;

          os_log_type_t v135 = &v129[OBJC_IVAR___MRDFastSyncGroupSession_participantIdentityMap];
          swift_beginAccess();
          char v136 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v184 = *(void **)v135;
          *(void *)os_log_type_t v135 = 0x8000000000000000;
          sub_10022CE28(v132, v134, v127, v126, v136);
          *(void *)os_log_type_t v135 = v184;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          id v137 = [*(id *)&v129[v128] identifier];
          uint64_t v138 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v140 = v139;

          uint64_t v141 = *(void **)&v129[v128];
          unint64_t v142 = &v129[OBJC_IVAR___MRDFastSyncGroupSession_identities];
          swift_beginAccess();
          id v143 = v141;
          char v144 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v184 = *(void **)v142;
          *(void *)unint64_t v142 = 0x8000000000000000;
          sub_10022D270((uint64_t)v143, v138, v140, v144, (uint64_t *)&unk_100479FD8);
          *(void *)unint64_t v142 = v184;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          uint64_t v145 = swift_allocObject();
          *(void *)(v145 + 16) = v129;
          aBlock[4] = (uint64_t)sub_10023754C;
          aBlock[5] = v145;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          uint64_t aBlock[2] = (uint64_t)sub_100006760;
          aBlock[3] = (uint64_t)&unk_1004227E8;
          uint64_t v146 = _Block_copy(aBlock);
          BOOL v147 = v129;
          uint64_t v148 = v159;
          static DispatchQoS.unspecified.getter();
          uint64_t v184 = _swiftEmptyArrayStorage;
          sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100013A80((uint64_t *)&unk_100479AE0);
          sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
          uint64_t v149 = v161;
          uint64_t v150 = v158;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v146);
          (*(void (**)(char *, uint64_t))(v163 + 8))(v149, v150);
          (*(void (**)(char *, uint64_t))(v160 + 8))(v148, v162);
          swift_release();
          aBlock[0] = sub_1001F43DC();
          uint64_t v151 = type metadata accessor for JoinTimingEvents();
          sub_100252448(v151, (uint64_t)&off_1004224C0);
          *(void *)&v147[OBJC_IVAR___MRDFastSyncGroupSession____lazy_storage___joinTimings] = aBlock[0];
          swift_release();
          uint64_t v83 = v175;
          uint64_t v19 = v173;
LABEL_34:
          uint64_t v152 = GroupSession.activeParticipants.getter();
          sub_100210EAC(v152);
          swift_bridgeObjectRelease();
          swift_release();
          (*(void (**)(char *, uint64_t))(v83 + 8))(v19, v182);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
    if (!*(void *)&v180[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle + 8])
    {
      sub_1001F43DC();
      char v124 = sub_1001F415C();
      uint64_t v125 = swift_release();
      (*(void (**)(uint64_t))((swift_isaMask & *v124) + 0xC0))(v125);

      sub_10021DFDC();
    }
    goto LABEL_34;
  }
  uint64_t v26 = *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_groupSession];
  if (v26)
  {
    uint64_t v158 = v3;
    swift_retain();
    GroupSession.state.getter();
    if (qword_10047F3A0 == -1) {
      goto LABEL_4;
    }
    goto LABEL_36;
  }
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v49 = type metadata accessor for Logger();
  sub_10018A9A8(v49, (uint64_t)qword_10047F3A8);
  uint64_t v50 = v2;
  os_log_type_t v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = swift_slowAlloc();
    uint64_t v54 = (void *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 138543618;
    uint64_t v184 = v50;
    uint64_t v55 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v54 = v50;

    *(_WORD *)(v53 + 12) = 2082;
    uint64_t v56 = *(void *)&v55[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v57 = *(void *)&v55[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v184 = (void *)sub_10018A9E0(v56, v57, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "[%{public}@]<%{public}s> State changed without group session.", (uint8_t *)v53, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_10021B664()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100013A80(&qword_100479FA8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  uint64_t v53 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (void *)((char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)&v1[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  uint64_t v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v52 = v3;
  uint64_t v3 = OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger;
  if (*(void *)&v1[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger]) {
    return;
  }
  uint64_t v15 = *(void *)&v1[OBJC_IVAR___MRDFastSyncGroupSession_groupSession];
  if (v15)
  {
    uint64_t v16 = qword_10047F3A0;
    swift_retain();
    if (v16 == -1)
    {
LABEL_5:
      uint64_t v17 = type metadata accessor for Logger();
      sub_10018A9A8(v17, (uint64_t)qword_10047F3A8);
      uint64_t v18 = v1;
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.info.getter();
      int v21 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v22 = swift_slowAlloc();
        os_log_type_t v51 = v18;
        uint64_t v23 = v22;
        uint64_t v24 = swift_slowAlloc();
        uint64_t v48 = v2;
        id v25 = (void *)v24;
        uint64_t v45 = v24;
        uint64_t v49 = swift_slowAlloc();
        v54[0] = v49;
        *(_DWORD *)uint64_t v23 = 138543618;
        int v47 = v21;
        os_log_t v46 = v19;
        uint64_t v55 = (uint64_t)v51;
        uint64_t v44 = v5;
        uint64_t v26 = v51;
        uint64_t v50 = v15;
        uint64_t v27 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v25 = v51;
        uint64_t v2 = v48;

        *(_WORD *)(v23 + 12) = 2082;
        v43[1] = v23 + 14;
        uint64_t v29 = *(void *)&v27[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        unint64_t v28 = *(void *)&v27[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        swift_bridgeObjectRetain();
        uint64_t v55 = sub_10018A9E0(v29, v28, v54);
        uint64_t v5 = v44;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_t v30 = v46;
        _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v47, "[%{public}@]<%{public}s> Configuring messenger.", (uint8_t *)v23, 0x16u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, void, uint64_t))(v53 + 104))(v8, enum case for GroupSessionMessenger.DeliveryMode.reliable(_:), v6);
      type metadata accessor for GroupSessionMessenger();
      swift_allocObject();
      swift_retain();
      uint64_t v40 = GroupSessionMessenger.init<A>(session:deliveryMode:)();
      GroupSessionMessenger.receive(_:)();
      uint64_t v41 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = sub_1002372D0;
      *(void *)(v42 + 24) = v41;
      sub_1000155BC(&qword_100479FB0, &qword_100479FA8);
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v5, v2);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      *(void *)&v1[v3] = v40;
      swift_release();
      swift_release();
      return;
    }
LABEL_16:
    swift_once();
    goto LABEL_5;
  }
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_10018A9A8(v31, (uint64_t)qword_10047F3A8);
  os_log_type_t v32 = v1;
  os_log_type_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    v54[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 138543618;
    uint64_t v55 = (uint64_t)v32;
    uint64_t v37 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v36 = v32;

    *(_WORD *)(v35 + 12) = 2082;
    uint64_t v38 = *(void *)&v37[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v39 = *(void *)&v37[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_10018A9E0(v38, v39, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "[%{public}@]<%{public}s> No session to create messenger.", (uint8_t *)v35, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_10021BE5C(uint64_t a1, unint64_t a2, char *a3)
{
  uint64_t v45 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v48 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for GroupSessionMessenger.MessageContext();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  id v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (char *)Strong;
    uint64_t v44 = v5;
    sub_10018FE44(a1, a2);
    uint64_t v17 = sub_100289C48(a1, a2);
    if (v17 == 11)
    {
      if (qword_10047F3A0 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10018A9A8(v20, (uint64_t)qword_10047F3A8);
      int v21 = v16;
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        id v25 = (void *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 138543618;
        uint64_t v50 = v21;
        uint64_t v26 = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v25 = v16;

        *(_WORD *)(v24 + 12) = 2082;
        uint64_t v27 = *(void *)&v26[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        unint64_t v28 = *(void *)&v26[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        swift_bridgeObjectRetain();
        uint64_t v50 = (void *)sub_10018A9E0(v27, v28, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%{public}@]<%{public}s> Error decoding message.", (uint8_t *)v24, 0x16u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    else
    {
      uint64_t v29 = v17;
      uint64_t v43 = *(void *)&v16[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
      os_log_t v30 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      uint64_t v31 = v18;
      uint64_t v41 = v18;
      os_log_type_t v32 = v45;
      uint64_t v45 = v7;
      unint64_t v33 = v19;
      v30((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v11);
      unint64_t v34 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v16;
      *(unsigned char *)(v35 + 24) = v29;
      *(void *)(v35 + 32) = v31;
      *(void *)(v35 + 40) = v33;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v35 + v34, v14, v11);
      aBlock[4] = (uint64_t)sub_100237370;
      aBlock[5] = v35;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = (uint64_t)sub_100006760;
      aBlock[3] = (uint64_t)&unk_1004226F8;
      uint64_t v36 = _Block_copy(aBlock);
      uint64_t v42 = v16;
      uint64_t v37 = v41;
      unint64_t v38 = v33;
      sub_100237388(v29, v41, v33);
      static DispatchQoS.unspecified.getter();
      uint64_t v50 = _swiftEmptyArrayStorage;
      sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100013A80((uint64_t *)&unk_100479AE0);
      sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
      uint64_t v39 = v44;
      uint64_t v40 = v45;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v36);
      sub_1002373A4(v29, v37, v38);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v40, v39);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v47);

      swift_release();
    }
  }
}

uint64_t sub_10021C498(char *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for Participant();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v60 = *(void *)(v14 - 8);
  uint64_t v61 = v14;
  __chkstk_darwin(v14);
  uint64_t v58 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DispatchQoS();
  uint64_t v16 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  unint64_t v57 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for GroupSessionMessenger.MessageContext();
  uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
  uint64_t v20 = __chkstk_darwin(v18);
  if (*(void *)&a1[OBJC_IVAR___MRDFastSyncGroupSession__state] == 3)
  {
    GroupSessionMessenger.MessageContext.source.getter();
    sub_100207AE4(a2, a3, a4, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v49 = (char *)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = v21;
    uint64_t v51 = v20;
    uint64_t v52 = a5;
    int v53 = a2;
    uint64_t v54 = a3;
    uint64_t v55 = a4;
    uint64_t v56 = v16;
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_10018A9A8(v23, (uint64_t)qword_10047F3A8);
    uint64_t v24 = a1;
    id v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      unint64_t v28 = (void *)swift_slowAlloc();
      v47[1] = v28;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v62 = (uint64_t)v24;
      aBlock[0] = v48;
      *(_DWORD *)uint64_t v27 = 138543618;
      uint64_t v29 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v28 = v24;

      *(_WORD *)(v27 + 12) = 2082;
      uint64_t v30 = *(void *)&v29[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v31 = *(void *)&v29[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_10018A9E0(v30, v31, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%{public}@]<%{public}s> Got message when not joined. Will attempt to correct ordering.", (uint8_t *)v27, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v33 = v54;
    unint64_t v32 = v55;
    char v34 = v53;
    uint64_t v35 = v52;
    sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
    uint64_t v55 = static OS_dispatch_queue.main.getter();
    uint64_t v36 = v49;
    uint64_t v37 = v50;
    uint64_t v38 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v35, v51);
    unint64_t v39 = (*(unsigned __int8 *)(v37 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v24;
    *(unsigned char *)(v40 + 24) = v34;
    *(void *)(v40 + 32) = v33;
    *(void *)(v40 + 40) = v32;
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v40 + v39, v36, v38);
    aBlock[4] = (uint64_t)sub_1002373C4;
    aBlock[5] = v40;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_100006760;
    aBlock[3] = (uint64_t)&unk_100422748;
    uint64_t v41 = _Block_copy(aBlock);
    uint64_t v42 = v24;
    sub_10018FE44(v33, v32);
    swift_release();
    uint64_t v43 = v57;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v44 = v58;
    uint64_t v45 = v61;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v46 = (void *)v55;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v45);
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v43, v59);
  }
}

uint64_t sub_10021CB70(char *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v27 = a4;
  uint64_t v29 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for GroupSessionMessenger.MessageContext();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)&a1[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(unsigned char *)(v19 + 24) = a2;
  *(void *)(v19 + 32) = a3;
  uint64_t v20 = a3;
  unint64_t v21 = v27;
  *(void *)(v19 + 40) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v19 + v18, v17, v14);
  aBlock[4] = sub_1002374B4;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100422798;
  uint64_t v22 = _Block_copy(aBlock);
  uint64_t v23 = a1;
  sub_10018FE44(v20, v21);
  static DispatchQoS.unspecified.getter();
  uint64_t v33 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  uint64_t v24 = v29;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v24);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
  return swift_release();
}

uint64_t sub_10021CF2C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = type metadata accessor for Participant();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  GroupSessionMessenger.MessageContext.source.getter();
  sub_100207AE4(a2, a3, a4, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_10021D028()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Participants();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)&v1[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_4;
  }
  if (v1[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] != 1) {
    return;
  }
  if (qword_10047F3A0 != -1) {
    goto LABEL_18;
  }
LABEL_4:
  uint64_t v13 = type metadata accessor for Logger();
  sub_10018A9A8(v13, (uint64_t)qword_10047F3A8);
  uint64_t v14 = v1;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v51 = v3;
    uint64_t v19 = (void *)v18;
    v48[1] = v18;
    uint64_t v49 = swift_slowAlloc();
    uint64_t v53 = (uint64_t)v14;
    uint64_t v54 = v49;
    *(_DWORD *)uint64_t v17 = 138543618;
    uint64_t v50 = v5;
    uint64_t v20 = v14;
    uint64_t v52 = v2;
    unint64_t v21 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v19 = v14;

    *(_WORD *)(v17 + 12) = 2082;
    uint64_t v23 = *(void *)&v21[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v22 = *(void *)&v21[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v24 = v23;
    uint64_t v5 = v50;
    uint64_t v53 = sub_10018A9E0(v24, v22, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v2 = v52;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%{public}@]<%{public}s> Broadcast leader discovery.", (uint8_t *)v17, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    uint64_t v3 = v51;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (*(void *)&v14[OBJC_IVAR___MRDFastSyncGroupSession__state] == 3)
  {
    uint64_t v25 = *(void *)&v14[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger];
    if (v25)
    {
      swift_retain();
      uint64_t v28 = j___s12mediaremoted28MRDFastSyncGroupSessionStateO8rawValueSivg(0, 0xC000000000000000, v26, v27);
      unint64_t v30 = v29;
      id v31 = sub_10028A684(v28, v29);
      sub_10018FE9C(v28, v30);
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Participants.all(_:), v2);
      id v32 = v31;
      sub_10021E92C(0, v31, (uint64_t)v5, v25, 0, 0);
      swift_release();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return;
    }
    uint64_t v33 = v14;
    char v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v43 = (void *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v53 = (uint64_t)v33;
      uint64_t v54 = v44;
      *(_DWORD *)uint64_t v36 = 138543618;
      uint64_t v45 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v43 = v33;

      *(_WORD *)(v36 + 12) = 2082;
      uint64_t v46 = *(void *)&v45[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v47 = *(void *)&v45[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_10018A9E0(v46, v47, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v42 = "[%{public}@]<%{public}s> No messenger to send leader message.";
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v33 = v14;
    char v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = (void *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v53 = (uint64_t)v33;
      uint64_t v54 = v38;
      *(_DWORD *)uint64_t v36 = 138543618;
      unint64_t v39 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v37 = v33;

      *(_WORD *)(v36 + 12) = 2082;
      uint64_t v40 = *(void *)&v39[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v41 = *(void *)&v39[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_10018A9E0(v40, v41, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v42 = "[%{public}@]<%{public}s> Drop leader message because we are not joined.";
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v34, v35, v42, (uint8_t *)v36, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
}

void sub_10021D78C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Participants();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (void *)((char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v12 = *(void **)&v2[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_24:
    swift_once();
LABEL_6:
    uint64_t v17 = type metadata accessor for Logger();
    sub_10018A9A8(v17, (uint64_t)qword_10047F3A8);
    uint64_t v18 = v2;
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      unint64_t v22 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v66 = (uint64_t)v18;
      uint64_t v67 = v23;
      *(_DWORD *)uint64_t v21 = 138412546;
      uint64_t v24 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v22 = v18;

      *(_WORD *)(v21 + 12) = 2082;
      uint64_t v25 = *(void *)&v24[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v26 = *(void *)&v24[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_10018A9E0(v25, v26, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v27 = "[%@]<%{public}s> Skip identity share because we are entering low power.";
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v19, v20, v27, (uint8_t *)v21, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
LABEL_19:

    return;
  }
  if ((v2[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] & 1) == 0)
  {
    uint64_t v14 = *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_connectionManager];
    if (v14)
    {
      uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)v14 + 248);
      uint64_t v16 = swift_retain();
      LOBYTE(v15) = v15(v16);
      swift_release();
      if (sub_1002924E0(v15, 1u))
      {
        if (qword_10047F3A0 == -1) {
          goto LABEL_6;
        }
        goto LABEL_24;
      }
      uint64_t v28 = *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_groupSession];
      if (!v28 || (uint64_t v29 = *(void *)&v2[OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger]) == 0)
      {
        if (qword_10047F3A0 != -1) {
          swift_once();
        }
        uint64_t v51 = type metadata accessor for Logger();
        sub_10018A9A8(v51, (uint64_t)qword_10047F3A8);
        uint64_t v18 = v2;
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v20 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = swift_slowAlloc();
          uint64_t v52 = (void *)swift_slowAlloc();
          uint64_t v53 = swift_slowAlloc();
          uint64_t v66 = (uint64_t)v18;
          uint64_t v67 = v53;
          *(_DWORD *)uint64_t v21 = 138412546;
          uint64_t v54 = v18;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v52 = v18;

          *(_WORD *)(v21 + 12) = 2082;
          uint64_t v55 = *(void *)&v54[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
          unint64_t v56 = *(void *)&v54[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
          swift_bridgeObjectRetain();
          uint64_t v66 = sub_10018A9E0(v55, v56, &v67);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          uint64_t v27 = "[%@]<%{public}s> No messenger available to share identity.";
          goto LABEL_18;
        }
        goto LABEL_19;
      }
      unint64_t v30 = *(void **)&v2[OBJC_IVAR___MRDFastSyncGroupSession_localIdentity];
      swift_retain();
      swift_retain();
      id v31 = v30;
      os_log_type_t v35 = (void *)MRDFastSyncGroupSessionState.rawValue.getter(v31, v32, v33, v34);
      id v36 = sub_10028A810(v35);

      if (qword_10047F3A0 != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      sub_10018A9A8(v37, (uint64_t)qword_10047F3A8);
      uint64_t v38 = v2;
      unint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.info.getter();
      int v65 = v40;
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v63 = v29;
        uint64_t v42 = v41;
        uint64_t v43 = swift_slowAlloc();
        uint64_t v60 = a1;
        uint64_t v44 = (void *)v43;
        v58[2] = v43;
        uint64_t v61 = swift_slowAlloc();
        uint64_t v66 = (uint64_t)v38;
        uint64_t v67 = v61;
        *(_DWORD *)uint64_t v42 = 138412546;
        id v62 = v36;
        os_log_t v59 = v39;
        v58[1] = &v67;
        uint64_t v45 = v38;
        uint64_t v64 = v28;
        uint64_t v46 = v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v44 = v38;

        *(_WORD *)(v42 + 12) = 2082;
        uint64_t v48 = *(void *)&v46[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        unint64_t v47 = *(void *)&v46[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        swift_bridgeObjectRetain();
        uint64_t v49 = v48;
        id v36 = v62;
        uint64_t v66 = sub_10018A9E0(v49, v47, &v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_t v50 = v59;
        _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v65, "[%@]<%{public}s> Sharing identity.", (uint8_t *)v42, 0x16u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v29 = v63;
        swift_slowDealloc();
      }
      else
      {
      }
      id v57 = v36;
      static Participants.only(_:)();
      sub_10021E92C(1u, v36, (uint64_t)v7, v29, 0, 0);
      swift_release();

      swift_release();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10021DFDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100013A80(&qword_100479F98);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v11 = (char *)v43 - v10;
  if (!*(void *)&v0[OBJC_IVAR___MRDFastSyncGroupSession_leaderDiscoveryTimer])
  {
    uint64_t v45 = OBJC_IVAR___MRDFastSyncGroupSession_leaderDiscoveryTimer;
    sub_1001F4464();
    char v12 = sub_1001F42C8();
    uint64_t v13 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v12) + 0x68))(v13);

    uint64_t v14 = "@\"MRRouteBannerRequest\"" + 22;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_100009A08((uint64_t)v4, &qword_100479F98);
    }
    else
    {
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v15(v11, v4, v5);
      uint64_t v16 = sub_1001F43DC();
      swift_beginAccess();
      int v17 = *(unsigned __int8 *)(v16 + 16);
      swift_release();
      if (v17 == 1)
      {
        uint64_t v44 = (void **)kMREventGroupSessionLeaderLost;
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
        unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        uint64_t v19 = swift_allocObject();
        v15((char *)(v19 + v18), v9, v5);
        uint64_t v51 = sub_1002371E8;
        uint64_t v52 = v19;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v14 = "\"";
        uint64_t v48 = 1107296256;
        uint64_t v49 = sub_10019A7F4;
        os_log_t v50 = &unk_100422658;
        os_log_type_t v20 = _Block_copy(&aBlock);
        uint64_t v21 = v44;
        swift_release();
        MRAnalyticsSendEvent();
        _Block_release(v20);

        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        uint64_t v14 = "\"";
      }
    }
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10018A9A8(v22, (uint64_t)qword_10047F3A8);
    uint64_t v23 = v1;
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      v43[1] = v27;
      uint64_t v44 = (void **)swift_slowAlloc();
      uint64_t v46 = (uint64_t)v23;
      uint64_t aBlock = v44;
      *(_DWORD *)uint64_t v26 = 138412546;
      uint64_t v28 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v27 = v23;

      *(_WORD *)(v26 + 12) = 2082;
      uint64_t v30 = *(void *)&v28[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v29 = *(void *)&v28[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_10018A9E0(v30, v29, (uint64_t *)&aBlock);
      uint64_t v14 = "@\"MRRouteBannerRequest\"" + 22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%@]<%{public}s> Start leader discovery timer.", (uint8_t *)v26, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v31 = [self currentSettings];
    if (v31)
    {
      uint64_t v32 = v31;
      [v31 groupSessionLeaderDiscoveryInterval];
      double v34 = v33;

      os_log_type_t v35 = *(void **)&v23[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v23;
      id v37 = objc_allocWithZone((Class)MSVTimer);
      uint64_t v51 = sub_100236E90;
      uint64_t v52 = v36;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v48 = *((void *)v14 + 235);
      uint64_t v49 = sub_100006760;
      os_log_t v50 = &unk_100422608;
      uint64_t v38 = _Block_copy(&aBlock);
      unint64_t v39 = v23;
      id v40 = v35;
      swift_release();
      id v41 = [v37 initWithInterval:0 repeats:v40 queue:v38 block:v34];

      _Block_release(v38);
      uint64_t v42 = *(void **)&v1[v45];
      *(void *)&v1[v45] = v41;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10021E680()
{
  uint64_t v1 = OBJC_IVAR___MRDFastSyncGroupSession_leaderDiscoveryTimer;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___MRDFastSyncGroupSession_leaderDiscoveryTimer];
  if (v2)
  {
    [v2 invalidate];
    uint64_t v3 = *(void **)&v0[v1];
    *(void *)&v0[v1] = 0;

    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10018A9A8(v4, (uint64_t)qword_10047F3A8);
    char v12 = v0;
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412546;
      uint64_t v9 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v8 = v12;

      *(_WORD *)(v7 + 12) = 2082;
      uint64_t v10 = *(void *)&v9[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v11 = *(void *)&v9[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      sub_10018A9E0(v10, v11, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%@]<%{public}s> Stop leader discovery timer.", (uint8_t *)v7, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_10021E92C(unsigned int a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v102 = a2;
  uint64_t v103 = a3;
  unsigned int v99 = a1;
  uint64_t v105 = type metadata accessor for Participants();
  uint64_t v10 = *(void *)(v105 - 8);
  uint64_t v11 = __chkstk_darwin(v105);
  uint64_t v87 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v104 = (char *)&v78 - v13;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v100 = *(void *)(v14 - 8);
  uint64_t v101 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  os_log_type_t v20 = (uint64_t *)((char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *(void **)&v6[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  *os_log_type_t v20 = v21;
  uint64_t v22 = *(void (**)(void))(v18 + 104);
  unsigned int v96 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v97 = v18 + 104;
  uint64_t v95 = (void (*)(void *, void, uint64_t))v22;
  v22(v20);
  id v93 = v21;
  LOBYTE(v21) = _dispatchPreconditionTest(_:)();
  uint64_t v24 = *(void (**)(void *, uint64_t))(v18 + 8);
  uint64_t v23 = v18 + 8;
  unint64_t v92 = v20;
  uint64_t v94 = v24;
  v24(v20, v17);
  if (v21)
  {
    uint64_t v88 = a6;
    uint64_t v89 = a4;
    uint64_t v98 = v16;
    uint64_t v91 = a5;
    if (qword_10047F3A0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v90 = v23;
  uint64_t v25 = v101;
  uint64_t v26 = sub_10018A9A8(v101, (uint64_t)qword_10047F3A8);
  uint64_t v27 = v100;
  uint64_t v28 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v98, v26, v25);
  uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v85(v104, v103, v105);
  id v29 = v102;
  id v30 = v102;
  id v31 = v6;
  id v32 = v30;
  double v33 = v31;
  double v34 = Logger.logObject.getter();
  int v86 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v34, (os_log_type_t)v86))
  {
    os_log_t v82 = v34;
    id v79 = v32;
    uint64_t v84 = v17;
    os_log_type_t v35 = v33;
    uint64_t v36 = swift_slowAlloc();
    id v37 = (void *)swift_slowAlloc();
    uint64_t v81 = swift_slowAlloc();
    uint64_t v106 = (uint64_t)v35;
    uint64_t v107 = v81;
    *(_DWORD *)uint64_t v36 = 138413314;
    char v38 = v99;
    unint64_t v39 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v83 = v35;
    os_log_t v80 = v37;
    void *v37 = v35;

    *(_WORD *)(v36 + 12) = 2082;
    uint64_t v40 = *(void *)&v39[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v41 = *(void *)&v39[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v106 = sub_10018A9E0(v40, v41, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 22) = 2080;
    unint64_t v42 = sub_100289AC0(v38);
    uint64_t v106 = sub_10018A9E0(v42, v43, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 32) = 2080;
    uint64_t v44 = v87;
    uint64_t v46 = v104;
    uint64_t v45 = v105;
    v85(v87, (uint64_t)v104, v105);
    int v47 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v44, v45);
    if (v47 == enum case for Participants.only(_:))
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v44, v45);
      type metadata accessor for Participant();
      sub_100015B28(&qword_100479AF8, (void (*)(uint64_t))&type metadata accessor for Participant);
      uint64_t v48 = Set.description.getter();
      unint64_t v50 = v49;
      swift_bridgeObjectRelease();
      uint64_t v51 = v98;
    }
    else
    {
      uint64_t v51 = v98;
      if (v47 == enum case for Participants.all(_:))
      {
        unint64_t v50 = 0xE300000000000000;
        uint64_t v48 = 7105633;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v44, v45);
        unint64_t v50 = 0xE700000000000000;
        uint64_t v48 = 0x6E776F6E6B6E75;
      }
    }
    uint64_t v106 = sub_10018A9E0(v48, v50, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v46, v45);
    *(_WORD *)(v36 + 42) = 2112;
    uint64_t v17 = v84;
    id v29 = v102;
    if (v102)
    {
      id v32 = v79;
      uint64_t v106 = (uint64_t)v79;
      id v55 = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v53 = v92;
    }
    else
    {
      uint64_t v106 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v53 = v92;
      id v32 = v79;
    }
    v80[1] = v29;

    os_log_t v56 = v82;
    _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v86, "[%@]<%{public}s> Sending message type: %s to: %s with payload: %@", (uint8_t *)v36, 0x34u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v100 + 8))(v51, v101);
    uint64_t v54 = v91;
    double v33 = v83;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v104, v105);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v25);
    uint64_t v54 = v91;
    uint64_t v53 = v92;
  }
  id v57 = v32;
  uint64_t v58 = v33;
  if (v29 && (id v59 = [v57 data]) != 0)
  {
    uint64_t v60 = v59;
    uint64_t v61 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v63 = v62;
  }
  else
  {
    uint64_t v61 = 0;
    unint64_t v63 = 0xC000000000000000;
  }
  unsigned __int8 v64 = MRDFastSyncGroupSessionState.rawValue.getter(v99, v61, v63, v52);
  uint64_t v66 = v65;
  unint64_t v68 = v67;
  sub_100289DF4(v64);
  uint64_t v70 = v69;
  unint64_t v72 = v71;
  char v73 = v93;
  *uint64_t v53 = v93;
  v95(v53, v96, v17);
  id v74 = v73;
  LOBYTE(v73) = _dispatchPreconditionTest(_:)();
  v94(v53, v17);
  if ((v73 & 1) == 0) {
    __break(1u);
  }
  unint64_t v75 = (void *)swift_allocObject();
  v75[2] = v58;
  v75[3] = v54;
  v75[4] = v88;
  uint64_t v76 = v58;
  sub_1002312B4(v54);
  GroupSessionMessenger.send(_:to:completion:)();
  swift_release();
  sub_10018FE9C(v70, v72);
  return sub_10018FE9C(v66, v68);
}

void sub_10021F280(uint64_t a1, void *a2, void (*a3)(uint64_t))
{
  if (!a1)
  {
LABEL_6:
    if (!a3) {
      return;
    }
    goto LABEL_7;
  }
  swift_errorRetain();
  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10018A9A8(v6, (uint64_t)qword_10047F3A8);
  id v7 = a2;
  swift_errorRetain();
  id v8 = v7;
  swift_errorRetain();
  id v9 = v8;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412802;
    log = v10;
    uint64_t v14 = (char *)v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v13 = v9;

    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v15 = *(void *)&v14[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v16 = *(void *)&v14[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    sub_10018A9E0(v15, v16, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2112;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v13[1] = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v11, "[%@]<%{public}s> Message send error %@.", (uint8_t *)v12, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    goto LABEL_6;
  }
  swift_errorRelease();

  swift_errorRelease();
  swift_errorRelease();

  if (!a3) {
    return;
  }
LABEL_7:
  swift_retain();
  a3(a1);
  sub_1001924CC((uint64_t)a3);
}

void sub_10021F59C(NSObject *a1, unint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  id v7 = v5;
  v111[1] = a5;
  unint64_t v112 = a4;
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (void *)((char *)v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)&v7[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    swift_once();
LABEL_9:
    uint64_t v44 = type metadata accessor for Logger();
    sub_10018A9A8(v44, (uint64_t)qword_10047F3A8);
    uint64_t v45 = v7;
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      unint64_t v49 = (void *)swift_slowAlloc();
      id v131 = swift_slowAlloc();
      v132[0] = (uint64_t)v45;
      uint64_t v134 = v131;
      *(_DWORD *)uint64_t v48 = 138412546;
      unint64_t v50 = a1;
      uint64_t v51 = v45;
      unint64_t v129 = v6;
      uint64_t v52 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v49 = v45;

      *(_WORD *)(v48 + 12) = 2082;
      uint64_t v53 = *(void *)&v52[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v54 = *(void *)&v52[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v55 = v53;
      a1 = v50;
      v132[0] = sub_10018A9E0(v55, v54, (uint64_t *)&v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      unint64_t v6 = v129;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "[%@]<%{public}s> Cannot send message before identity exchange.", (uint8_t *)v48, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    os_log_t v56 = v112;
    sub_100231260();
    swift_allocError();
    *id v57 = 3;
    v56();
    swift_errorRelease();
LABEL_45:
    sub_10018FE9C((uint64_t)a1, v6);
    return;
  }
  sub_10018FE44((uint64_t)a1, a2);
  os_log_t v126 = a1;
  int v117 = MRDFastSyncGroupSessionState.rawValue.getter(5, a1, a2, v17);
  a1 = v18;
  unint64_t v6 = v19;
  if (!*(void *)&v7[OBJC_IVAR___MRDFastSyncGroupSession_leaderParticipantIdentifier + 8])
  {
    if (qword_10047F3A0 == -1) {
      goto LABEL_9;
    }
    goto LABEL_51;
  }
  unint64_t v124 = a2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v20 = swift_bridgeObjectRetain();
  unint64_t v21 = 0;
  uint64_t v22 = sub_100236AD8(v20, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)&unk_100479000;
  uint64_t v25 = "@\"MRRouteBannerRequest\"" + 22;
  BOOL v26 = *(void *)(v22 + 16) == *(void *)(a3 + 16);
  uint64_t v116 = v22;
  uint64_t v127 = v7;
  if (!v26)
  {
    if (qword_10047F3A0 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_10018A9A8(v27, (uint64_t)qword_10047F3A8);
    uint64_t v28 = v7;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v29 = v28;
    id v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      LODWORD(v128) = v32;
      uint64_t v34 = v33;
      os_log_type_t v35 = (void *)swift_slowAlloc();
      uint64_t v125 = (uint64_t)v35;
      uint64_t v36 = swift_slowAlloc();
      unint64_t v129 = v36;
      *(_DWORD *)uint64_t v34 = 138413058;
      id v131 = a1;
      v132[0] = v36;
      v133[0] = (uint64_t)v29;
      id v37 = v29;
      unint64_t v130 = 0;
      unint64_t v38 = v6;
      unint64_t v39 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v35 = v29;

      *(_WORD *)(v34 + 12) = 2082;
      uint64_t v40 = *(void *)&v39[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
      unint64_t v41 = *(void *)&v39[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
      swift_bridgeObjectRetain();
      v133[0] = sub_10018A9E0(v40, v41, v132);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      unint64_t v6 = v38;
      unint64_t v21 = v130;
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2048;
      uint64_t v42 = *(void *)(a3 + 16);
      swift_bridgeObjectRelease();
      v133[0] = v42;
      uint64_t v22 = v116;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 32) = 2048;
      a1 = v131;
      uint64_t v43 = *(void *)(v22 + 16);
      swift_release();
      v133[0] = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v128, "[%@]<%{public}s> Not all participant identifiers mapped to send message. Provided: %ld, Mapped: %ld.", (uint8_t *)v34, 0x2Au);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v24 = &unk_100479000;
      uint64_t v25 = "@\"MRRouteBannerRequest\"" + 22;
      id v7 = v127;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      id v7 = v127;
      uint64_t v25 = "\"";
      uint64_t v24 = &unk_100479000;
    }
  }
  unint64_t v58 = 0;
  uint64_t v59 = *(void *)(v22 + 64);
  uint64_t v118 = v22 + 64;
  uint64_t v60 = 1 << *(unsigned char *)(v22 + 32);
  uint64_t v61 = -1;
  if (v60 < 64) {
    uint64_t v61 = ~(-1 << v60);
  }
  unint64_t v62 = v61 & v59;
  uint64_t v115 = (uint64_t *)&v7[v24[311]];
  uint64_t v125 = OBJC_IVAR___MRDFastSyncGroupSession_connectionManager;
  int64_t v119 = (unint64_t)(v60 + 63) >> 6;
  *(void *)&long long v23 = *((void *)v25 + 107);
  long long v114 = v23;
  id v113 = (char *)&type metadata for Any + 8;
  if (!v62) {
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v128 = (v62 - 1) & v62;
  unint64_t v129 = v58;
  for (unint64_t i = __clz(__rbit64(v62)) | (v58 << 6); ; unint64_t i = __clz(__rbit64(v66)) + (v65 << 6))
  {
    uint64_t v68 = 16 * i;
    uint64_t v69 = *(void *)(v22 + 56);
    uint64_t v70 = (uint64_t *)(*(void *)(v22 + 48) + v68);
    unint64_t v71 = v70[1];
    id v131 = *v70;
    unint64_t v72 = (uint64_t *)(v69 + v68);
    uint64_t v74 = *v72;
    unint64_t v73 = v72[1];
    uint64_t v75 = qword_10047F3A0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v75 != -1) {
      swift_once();
    }
    uint64_t v76 = type metadata accessor for Logger();
    uint64_t v77 = sub_10018A9A8(v76, (uint64_t)qword_10047F3A8);
    uint64_t v78 = v7;
    swift_bridgeObjectRetain();
    sub_10018FE44((uint64_t)a1, v6);
    id v79 = v78;
    swift_bridgeObjectRetain();
    sub_10018FE44((uint64_t)a1, v6);
    uint64_t v123 = v77;
    os_log_t v80 = Logger.logObject.getter();
    os_log_type_t v81 = static os_log_type_t.info.getter();
    BOOL v82 = os_log_type_enabled(v80, v81);
    unint64_t v130 = v73;
    uint64_t v122 = v74;
    if (v82)
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v84 = (void *)swift_slowAlloc();
      uint64_t v120 = v84;
      uint64_t v121 = swift_slowAlloc();
      v133[0] = v121;
      *(_DWORD *)uint64_t v83 = v114;
      *(void *)(v83 + 4) = v79;
      void *v84 = v127;

      *(_WORD *)(v83 + 12) = 2082;
      unint64_t v85 = v21;
      unint64_t v86 = v6;
      uint64_t v87 = (uint64_t)a1;
      uint64_t v89 = *v115;
      unint64_t v88 = v115[1];
      swift_bridgeObjectRetain();
      uint64_t v90 = v89;
      unint64_t v6 = v86;
      unint64_t v21 = v85;
      *(void *)(v83 + 14) = sub_10018A9E0(v90, v88, v133);

      swift_bridgeObjectRelease();
      *(_WORD *)(v83 + 22) = 2080;
      LOBYTE(v132[0]) = v117;
      v132[1] = v87;
      v132[2] = v6;
      sub_10018FE44(v87, v6);
      uint64_t v91 = String.init<A>(describing:)();
      *(void *)(v83 + 24) = sub_10018A9E0(v91, v92, v133);
      a1 = v87;
      swift_bridgeObjectRelease();
      sub_10018FE9C(v87, v6);
      sub_10018FE9C(v87, v6);
      *(_WORD *)(v83 + 32) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v83 + 34) = sub_10018A9E0((uint64_t)v131, v71, v133);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "[%@]<%{public}s> Enqueue message %s for handle: %s.", (uint8_t *)v83, 0x2Au);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v22 = v116;
      swift_slowDealloc();
    }
    else
    {

      sub_10018FE9C((uint64_t)a1, v6);
      sub_10018FE9C((uint64_t)a1, v6);

      swift_bridgeObjectRelease_n();
    }
    id v7 = v127;
    uint64_t v93 = *(void *)&v127[v125];
    if (!v93)
    {
      __break(1u);
      return;
    }
    uint64_t v94 = *(void (**)(os_log_t, unint64_t, NSObject *, unint64_t))(*(void *)v93 + 440);
    swift_retain();
    v94(v126, v124, v131, v71);
    if (v21) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v62 = v128;
    unint64_t v58 = v129;
    if (v128) {
      goto LABEL_17;
    }
LABEL_18:
    BOOL v64 = __OFADD__(v58, 1);
    int64_t v65 = v58 + 1;
    if (v64)
    {
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v65 >= v119) {
      goto LABEL_44;
    }
    unint64_t v66 = *(void *)(v118 + 8 * v65);
    if (!v66)
    {
      int64_t v67 = v65 + 1;
      if (v65 + 1 >= v119) {
        goto LABEL_44;
      }
      unint64_t v66 = *(void *)(v118 + 8 * v67);
      if (!v66)
      {
        int64_t v67 = v65 + 2;
        if (v65 + 2 >= v119) {
          goto LABEL_44;
        }
        unint64_t v66 = *(void *)(v118 + 8 * v67);
        if (!v66)
        {
          int64_t v67 = v65 + 3;
          if (v65 + 3 >= v119)
          {
LABEL_44:
            swift_release();
            goto LABEL_45;
          }
          unint64_t v66 = *(void *)(v118 + 8 * v67);
          if (!v66)
          {
            while (1)
            {
              int64_t v65 = v67 + 1;
              if (__OFADD__(v67, 1)) {
                goto LABEL_49;
              }
              if (v65 >= v119) {
                goto LABEL_44;
              }
              unint64_t v66 = *(void *)(v118 + 8 * v65);
              ++v67;
              if (v66) {
                goto LABEL_28;
              }
            }
          }
        }
      }
      int64_t v65 = v67;
    }
LABEL_28:
    uint64_t v128 = (v66 - 1) & v66;
    unint64_t v129 = v65;
  }
  id v131 = a1;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v95 = v79;
  swift_errorRetain();
  unsigned int v96 = v95;
  unint64_t v97 = v130;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v98 = Logger.logObject.getter();
  os_log_type_t v99 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v98, v99))
  {
    uint64_t v100 = swift_slowAlloc();
    os_log_t v126 = v98;
    uint64_t v101 = v100;
    uint64_t v102 = swift_slowAlloc();
    unint64_t v129 = v6;
    uint64_t v103 = (void *)v102;
    uint64_t v128 = swift_slowAlloc();
    v132[0] = v128;
    *(_DWORD *)uint64_t v101 = v114;
    v133[0] = (uint64_t)v96;
    uint64_t v104 = v96;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v103 = v7;

    *(_WORD *)(v101 + 12) = 2082;
    uint64_t v105 = *v115;
    unint64_t v106 = v115[1];
    swift_bridgeObjectRetain();
    v133[0] = sub_10018A9E0(v105, v106, v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v101 + 22) = 2080;
    swift_bridgeObjectRetain();
    v133[0] = sub_10018A9E0(v122, v97, v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v101 + 32) = 2112;
    swift_errorRetain();
    uint64_t v107 = _swift_stdlib_bridgeErrorToNSError();
    v133[0] = v107;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v103[1] = v107;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v108 = v126;
    _os_log_impl((void *)&_mh_execute_header, v126, v99, "[%@]<%{public}s> Error enqueuing message for id: %s - %@.", (uint8_t *)v101, 0x2Au);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    unint64_t v6 = v129;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v109 = v112;
  sub_100231260();
  swift_allocError();
  *uint64_t v110 = 3;
  v109();
  swift_errorRelease();
  swift_errorRelease();
  sub_10018FE9C((uint64_t)v131, v6);
  swift_release();
}

void sub_1002204E8(uint64_t a1, uint64_t a2, unint64_t a3, void **a4)
{
  uint64_t v5 = v4;
  unint64_t v199 = a4;
  uint64_t v196 = a1;
  id v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t isa = (uint64_t)v8[-1].isa;
  os_log_t v195 = v8;
  __chkstk_darwin(v8);
  os_log_t v191 = (os_log_t)((char *)&v189 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for DispatchQoS();
  os_log_type_t v192 = *(void ***)(v10 - 8);
  uint64_t v193 = v10;
  __chkstk_darwin(v10);
  uint64_t v190 = (char *)&v189 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100013A80(&qword_100479B00);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v189 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for String.Encoding();
  uint64_t v197 = *(void ***)(v15 - 8);
  unint64_t v198 = (void **)v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v189 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v21 = (uint64_t *)((char *)&v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void **)&v5[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  void *v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v22)
  {
    static String.Encoding.utf8.getter();
    uint64_t v24 = String.init(data:encoding:)();
    BOOL v26 = v199;
    if (v25)
    {
      uint64_t v27 = v24;
      uint64_t v28 = v25;
      id v29 = sub_100289A50();
      if (v27 == *v29 && v28 == v29[1])
      {
        uint64_t v30 = swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v30 = swift_bridgeObjectRelease();
      if (v31)
      {
LABEL_7:
        unsigned __int8 v32 = (*((uint64_t (**)(uint64_t))*v26 + 21))(v30);
        if ((sub_1002924E0(v32, 0) & 1) == 0)
        {
          Swift::Int v41 = (Swift::Int)v26[2];
          Swift::Int v42 = (Swift::Int)v26[3];
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_10000DDD8((Swift::Int *)&v202, v41, v42);
          swift_endAccess();
          swift_bridgeObjectRelease();
          return;
        }
        swift_retain();
        dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
        swift_release();
        uint64_t v33 = NearbyGroup.members.getter();
        swift_release();
        swift_retain();
        sub_1001FC108(v33, (uint64_t)v26, (uint64_t (*)(void))&type metadata accessor for NearbyGroup.Member, (uint64_t (*)(uint64_t))&NearbyGroup.Member.handle.getter, v14);
        swift_bridgeObjectRelease();
        uint64_t v34 = type metadata accessor for NearbyGroup.Member();
        uint64_t v35 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v14, 1, v34) == 1)
        {
          sub_100009A08((uint64_t)v14, &qword_100479B00);
        }
        else
        {
          os_log_t v195 = (os_log_t)NearbyGroup.Member.tokenDestination.getter();
          uint64_t v100 = v99;
          (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v34);
          if (v100) {
            goto LABEL_40;
          }
        }
        uint64_t v100 = (uint64_t)v26[3];
        os_log_t v195 = (os_log_t)v26[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_40:
        if (qword_10047F3A0 != -1) {
          swift_once();
        }
        uint64_t v101 = type metadata accessor for Logger();
        sub_10018A9A8(v101, (uint64_t)qword_10047F3A8);
        uint64_t v102 = v5;
        swift_retain_n();
        uint64_t v103 = v102;
        swift_bridgeObjectRetain_n();
        uint64_t v104 = v103;
        uint64_t v105 = Logger.logObject.getter();
        os_log_type_t v106 = static os_log_type_t.info.getter();
        int v107 = v106;
        BOOL v108 = os_log_type_enabled(v105, v106);
        uint64_t v193 = 0;
        uint64_t isa = v100;
        if (v108)
        {
          uint64_t v109 = swift_slowAlloc();
          uint64_t v110 = swift_slowAlloc();
          os_log_t v191 = v105;
          uint64_t v111 = (void *)v110;
          uint64_t v189 = v110;
          os_log_type_t v192 = (void **)swift_slowAlloc();
          uint64_t aBlock = v192;
          *(_DWORD *)uint64_t v109 = 138413058;
          LODWORD(v190) = v107;
          unint64_t v112 = v104;
          uint64_t v202 = v104;
          id v113 = v104;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v111 = v104;

          *(_WORD *)(v109 + 12) = 2082;
          uint64_t v115 = *(void *)&v113[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
          unint64_t v114 = *(void *)&v113[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
          swift_bridgeObjectRetain();
          uint64_t v202 = (void *)sub_10018A9E0(v115, v114, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          unint64_t v116 = isa;
          swift_bridgeObjectRelease();
          *(_WORD *)(v109 + 22) = 2080;
          uint64_t v117 = (uint64_t)v199[2];
          unint64_t v118 = (unint64_t)v199[3];
          swift_bridgeObjectRetain();
          uint64_t v202 = (void *)sub_10018A9E0(v117, v118, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          uint64_t v104 = v112;
          swift_bridgeObjectRelease();
          *(_WORD *)(v109 + 32) = 2080;
          BOOL v26 = v199;
          swift_bridgeObjectRetain();
          uint64_t v202 = (void *)sub_10018A9E0((uint64_t)v195, v116, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          os_log_t v119 = v191;
          _os_log_impl((void *)&_mh_execute_header, v191, (os_log_type_t)v190, "[%@]<%{public}s> Send transportMigrationReply push to: %s, dst: %s.", (uint8_t *)v109, 0x2Au);
          sub_100013A80((uint64_t *)&unk_10047B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release_n();
        }
        uint64_t v120 = *(void **)&v104[OBJC_IVAR___MRDFastSyncGroupSession_pushMessenger];
        if (v120)
        {
          sub_100013A80((uint64_t *)&unk_100479B10);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1003C6370;
          unint64_t v199 = v120;
          uint64_t v122 = sub_1002899FC();
          unint64_t v124 = *(void ***)v122;
          uint64_t v123 = (void **)*((void *)v122 + 1);
          uint64_t aBlock = v124;
          uint64_t v204 = (uint64_t)v123;
          os_log_type_t v192 = v123;
          swift_bridgeObjectRetain_n();
          AnyHashable.init<A>(_:)();
          uint64_t v125 = (uint64_t *)sub_100289A5C();
          uint64_t v127 = *v125;
          uint64_t v126 = v125[1];
          *(void *)(inited + 96) = &type metadata for String;
          *(void *)(inited + 72) = v127;
          *(void *)(inited + 80) = v126;
          swift_bridgeObjectRetain();
          uint64_t v128 = sub_100289A14();
          unint64_t v130 = *(void ***)v128;
          unint64_t v129 = *((void *)v128 + 1);
          uint64_t aBlock = v130;
          uint64_t v204 = (uint64_t)v129;
          os_log_t v191 = v129;
          swift_bridgeObjectRetain_n();
          AnyHashable.init<A>(_:)();
          swift_bridgeObjectRetain();
          static String.Encoding.utf8.getter();
          uint64_t v131 = String.data(using:allowLossyConversion:)();
          unint64_t v133 = v132;
          swift_bridgeObjectRelease();
          ((void (*)(char *, void **))v197[1])(v17, v198);
          if (v133 >> 60 != 15)
          {
            *(void *)(inited + 168) = &type metadata for Data;
            *(void *)(inited + 144) = v131;
            *(void *)(inited + 152) = v133;
            uint64_t v134 = sub_100289A20();
            uint64_t v135 = *((void *)v134 + 1);
            uint64_t aBlock = *(void ***)v134;
            uint64_t v204 = v135;
            swift_bridgeObjectRetain_n();
            uint64_t v136 = AnyHashable.init<A>(_:)();
            uint64_t v137 = (*((uint64_t (**)(uint64_t))*v26 + 27))(v136);
            *(void *)(inited + 240) = &type metadata for Int;
            *(void *)(inited + 216) = v137;
            uint64_t v138 = (void ***)sub_100289A2C();
            uint64_t v139 = v26;
            uint64_t v140 = (uint64_t)v138[1];
            uint64_t aBlock = *v138;
            uint64_t v204 = v140;
            swift_bridgeObjectRetain_n();
            AnyHashable.init<A>(_:)();
            uint64_t v142 = *(void *)&v104[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
            uint64_t v141 = *(void *)&v104[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
            *(void *)(inited + 312) = &type metadata for String;
            *(void *)(inited + 288) = v142;
            *(void *)(inited + 296) = v141;
            swift_bridgeObjectRetain();
            id v143 = sub_100289A08();
            uint64_t v144 = *((void *)v143 + 1);
            uint64_t aBlock = *(void ***)v143;
            uint64_t v204 = v144;
            swift_bridgeObjectRetain_n();
            AnyHashable.init<A>(_:)();
            uint64_t v146 = (uint64_t)v139[2];
            uint64_t v145 = (void **)v139[3];
            *(void *)(inited + 384) = &type metadata for String;
            uint64_t v197 = v145;
            unint64_t v198 = (void **)v146;
            *(void *)(inited + 360) = v146;
            *(void *)(inited + 368) = v145;
            swift_bridgeObjectRetain();
            BOOL v147 = sub_1002899F0();
            uint64_t v148 = *((void *)v147 + 1);
            uint64_t aBlock = *(void ***)v147;
            uint64_t v204 = v148;
            swift_bridgeObjectRetain_n();
            AnyHashable.init<A>(_:)();
            uint64_t v149 = *(void *)&v104[OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8];
            if (v149)
            {
              uint64_t v150 = *(void *)&v104[OBJC_IVAR___MRDFastSyncGroupSession_localHandle];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v46 = (char *)&type metadata for String;
              *(void *)(inited + 456) = &type metadata for String;
              *(void *)(inited + 432) = v150;
              *(void *)(inited + 440) = v149;
              sub_100189560(inited);
              Class v151 = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              sub_100013A80(&qword_100478690);
              uint64_t v152 = swift_initStackObject();
              *(_OWORD *)(v152 + 16) = xmmword_1003C58B0;
              *(void *)(v152 + 32) = v195;
              *(void *)(v152 + 40) = isa;
              sub_1002339E8(v152);
              swift_setDeallocating();
              swift_arrayDestroy();
              Class v153 = Set._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              uint64_t v154 = v199;
              [v199 sendMessage:v151 toDestinations:v153];

              uint64_t v155 = v193;
              (*(void (**)(void, void **, void **))(*(void *)v196 + 392))(0, v198, v197);
              if (!v155) {
                return;
              }
              swift_unexpectedError();
              __break(1u);
              goto LABEL_50;
            }
            goto LABEL_71;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
    }
    static String.Encoding.utf8.getter();
    uint64_t v36 = String.init(data:encoding:)();
    if (v37)
    {
      uint64_t v38 = v36;
      uint64_t v39 = v37;
      uint64_t v40 = sub_100289A5C();
      if (v38 == *v40 && v39 == v40[1])
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v43)
      {
LABEL_16:
        if (qword_10047F3A0 == -1) {
          goto LABEL_17;
        }
        goto LABEL_66;
      }
    }
    uint64_t v55 = (void **)v26[2];
    unint64_t v54 = (unint64_t)v26[3];
    if (v5[OBJC_IVAR___MRDFastSyncGroupSession_isLeader] == 1)
    {
      os_log_t v56 = &v5[OBJC_IVAR___MRDFastSyncGroupSession_participantHandleToMediaRemoteIdentifierMap];
      swift_beginAccess();
      uint64_t v57 = *(void *)v56;
      if (*(void *)(v57 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v58 = sub_100013660((uint64_t)v55, v54);
        if (v59)
        {
          uint64_t v60 = *(void *)(v57 + 56) + 16 * v58;
          uint64_t v55 = *(void ***)v60;
          uint64_t v61 = *(void *)(v60 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v62 = (uint64_t *)&v5[OBJC_IVAR___MRDFastSyncGroupSession_guests];
          swift_beginAccess();
          uint64_t v63 = *v62;
          swift_bridgeObjectRetain();
          char v64 = sub_10018835C((uint64_t)v55, v61, v63);
          swift_bridgeObjectRelease();
          int64_t v65 = &v5[OBJC_IVAR___MRDFastSyncGroupSession_participantIdentityMap];
          swift_beginAccess();
          uint64_t v66 = *(void *)v65;
          if (*(void *)(v66 + 16))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v67 = sub_100013660((uint64_t)v55, v61);
            if ((v68 & 1) == 0)
            {
LABEL_75:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __break(1u);
              goto LABEL_76;
            }
            unint64_t v199 = v55;
            uint64_t v69 = (uint64_t *)(*(void *)(v66 + 56) + 16 * v67);
            uint64_t v71 = *v69;
            uint64_t v70 = v69[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v72 = &v5[OBJC_IVAR___MRDFastSyncGroupSession_identities];
            swift_beginAccess();
            uint64_t v73 = *(void *)v72;
            if (!*(void *)(v73 + 16))
            {
LABEL_76:
              swift_bridgeObjectRelease();
              __break(1u);
              goto LABEL_77;
            }
            swift_bridgeObjectRetain();
            unint64_t v74 = sub_100013660(v71, v70);
            if ((v75 & 1) == 0)
            {
LABEL_77:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __break(1u);
              return;
            }
            id v76 = *(id *)(*(void *)(v73 + 56) + 8 * v74);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v77 = objc_allocWithZone((Class)MRDFastSyncGroupSessionParticipant);
            NSString v78 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v79 = [v77 initWithIdentifier:v78 identity:v76 connected:1 guest:v64 & 1];

            os_log_t v80 = (void *)swift_allocObject();
            v80[2] = v5;
            v80[3] = a2;
            v80[4] = a3;
            void v80[5] = v79;
            uint64_t v207 = sub_100231178;
            uint64_t v208 = v80;
            uint64_t aBlock = _NSConcreteStackBlock;
            uint64_t v204 = 1107296256;
            uint64_t v205 = sub_100006760;
            unint64_t v206 = &unk_100422358;
            os_log_type_t v81 = _Block_copy(&aBlock);
            BOOL v82 = v5;
            sub_10018FE44(a2, a3);
            id v83 = v79;
            uint64_t v84 = v190;
            static DispatchQoS.unspecified.getter();
            uint64_t v200 = _swiftEmptyArrayStorage;
            sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            sub_100013A80((uint64_t *)&unk_100479AE0);
            sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
            os_log_t v85 = v191;
            os_log_t v86 = v195;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            OS_dispatch_queue.async(group:qos:flags:execute:)();
            _Block_release(v81);

            (*(void (**)(os_log_t, os_log_t))(isa + 8))(v85, v86);
            ((void (*)(char *, uint64_t))v192[1])(v84, v193);
LABEL_32:
            swift_release();
            return;
          }
          __break(1u);
          goto LABEL_68;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (qword_10047F3A0 != -1) {
        swift_once();
      }
      uint64_t v166 = type metadata accessor for Logger();
      sub_10018A9A8(v166, (uint64_t)qword_10047F3A8);
      uint64_t v167 = v5;
      swift_retain_n();
      uint64_t v168 = v167;
      uint64_t v169 = Logger.logObject.getter();
      os_log_type_t v170 = static os_log_type_t.error.getter();
      int v171 = v170;
      if (os_log_type_enabled(v169, v170))
      {
        uint64_t v172 = swift_slowAlloc();
        LODWORD(v196) = v171;
        uint64_t v173 = v172;
        uint64_t isa = swift_slowAlloc();
        os_log_t v195 = v169;
        char v174 = (void *)isa;
        uint64_t v197 = (void **)swift_slowAlloc();
        uint64_t aBlock = v197;
        *(_DWORD *)uint64_t v173 = 138412802;
        unint64_t v198 = v55;
        uint64_t v201 = (uint64_t)v168;
        uint64_t v175 = v168;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *char v174 = v168;

        *(_WORD *)(v173 + 12) = 2082;
        uint64_t v176 = *(void *)&v175[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        unint64_t v177 = *(void *)&v175[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        swift_bridgeObjectRetain();
        uint64_t v201 = sub_10018A9E0(v176, v177, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v173 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v201 = sub_10018A9E0((uint64_t)v198, v54, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v178 = "[%@]<%{public}s> Received message but no mapped participant for connection manager participant: %s.";
LABEL_62:
        os_log_t v188 = v195;
        _os_log_impl((void *)&_mh_execute_header, v195, (os_log_type_t)v196, v178, (uint8_t *)v173, 0x20u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }
LABEL_63:

      swift_release_n();
      return;
    }
    uint64_t v87 = *(void *)&v5[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle + 8];
    if (!v87)
    {
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    if (v55 == *(void ***)&v5[OBJC_IVAR___MRDFastSyncGroupSession_leaderHandle] && v87 == v54
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      unint64_t v88 = (void *)swift_allocObject();
      v88[2] = v5;
      v88[3] = a2;
      v88[4] = a3;
      uint64_t v207 = sub_100231008;
      uint64_t v208 = v88;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v204 = 1107296256;
      uint64_t v205 = sub_100006760;
      unint64_t v206 = &unk_100422308;
      uint64_t v89 = _Block_copy(&aBlock);
      uint64_t v90 = v5;
      sub_10018FE44(a2, a3);
      uint64_t v91 = v190;
      static DispatchQoS.unspecified.getter();
      uint64_t v202 = _swiftEmptyArrayStorage;
      sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100013A80((uint64_t *)&unk_100479AE0);
      sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
      os_log_t v92 = v191;
      os_log_t v93 = v195;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v89);
      (*(void (**)(os_log_t, os_log_t))(isa + 8))(v92, v93);
      ((void (*)(char *, uint64_t))v192[1])(v91, v193);
      goto LABEL_32;
    }
    if (qword_10047F3A0 == -1)
    {
LABEL_60:
      uint64_t v179 = type metadata accessor for Logger();
      sub_10018A9A8(v179, (uint64_t)qword_10047F3A8);
      unint64_t v180 = v5;
      swift_retain_n();
      uint64_t v168 = v180;
      uint64_t v169 = Logger.logObject.getter();
      os_log_type_t v181 = static os_log_type_t.error.getter();
      int v182 = v181;
      if (os_log_type_enabled(v169, v181))
      {
        uint64_t v183 = swift_slowAlloc();
        LODWORD(v196) = v182;
        uint64_t v173 = v183;
        uint64_t isa = swift_slowAlloc();
        os_log_t v195 = v169;
        uint64_t v184 = (void *)isa;
        uint64_t v197 = (void **)swift_slowAlloc();
        uint64_t aBlock = v197;
        *(_DWORD *)uint64_t v173 = 138412802;
        unint64_t v198 = v55;
        uint64_t v202 = v168;
        char v185 = v168;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v184 = v168;

        *(_WORD *)(v173 + 12) = 2082;
        uint64_t v186 = *(void *)&v185[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
        unint64_t v187 = *(void *)&v185[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
        swift_bridgeObjectRetain();
        uint64_t v202 = (void *)sub_10018A9E0(v186, v187, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v173 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v202 = (void *)sub_10018A9E0((uint64_t)v198, v54, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v178 = "[%@]<%{public}s> Received message from connection manager participant that does not match leader: %s.";
        goto LABEL_62;
      }
      goto LABEL_63;
    }
LABEL_68:
    swift_once();
    goto LABEL_60;
  }
  __break(1u);
LABEL_66:
  swift_once();
LABEL_17:
  uint64_t v44 = type metadata accessor for Logger();
  uint64_t v45 = (void **)sub_10018A9A8(v44, (uint64_t)qword_10047F3A8);
  uint64_t v46 = v5;
  unint64_t v199 = v45;
  os_log_type_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc();
    unint64_t v50 = (void **)swift_slowAlloc();
    uint64_t v197 = v50;
    unint64_t v198 = (void **)swift_slowAlloc();
    uint64_t aBlock = v198;
    *(_DWORD *)uint64_t v49 = 138412546;
    uint64_t v202 = v46;
    uint64_t v51 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v50 = v46;

    *(_WORD *)(v49 + 12) = 2082;
    uint64_t v53 = *(void *)&v51[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v52 = *(void *)&v51[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v202 = (void *)sub_10018A9E0(v53, v52, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "[%@]<%{public}s> Received transportMigrationReply push.", (uint8_t *)v49, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v94 = *(void (**)(void))&v46[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion];
  if (v94)
  {
    uint64_t v95 = *(void *)&v46[OBJC_IVAR___MRDFastSyncGroupSession_connectionManager];
    if (v95)
    {
      uint64_t v96 = *(void *)&v46[OBJC_IVAR___MRDFastSyncGroupSession_localHandle + 8];
      if (v96)
      {
        uint64_t v97 = *(void *)&v46[OBJC_IVAR___MRDFastSyncGroupSession_localHandle];
        uint64_t v98 = *(void (**)(void, uint64_t, uint64_t))(*(void *)v95 + 392);
        sub_1002312B4(*(void *)&v46[OBJC_IVAR___MRDFastSyncGroupSession_lowPowerCompletion]);
        swift_retain();
        swift_bridgeObjectRetain();
        v98(0, v97, v96);
        swift_release();
        swift_bridgeObjectRelease();
        v94(0);
        sub_1001924CC((uint64_t)v94);
        return;
      }
      goto LABEL_73;
    }
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
LABEL_50:
  char v156 = v46;
  uint64_t v157 = Logger.logObject.getter();
  os_log_type_t v158 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v157, v158))
  {
    uint64_t v159 = swift_slowAlloc();
    uint64_t v160 = (void **)swift_slowAlloc();
    unint64_t v198 = v160;
    unint64_t v199 = (void **)swift_slowAlloc();
    uint64_t aBlock = v199;
    *(_DWORD *)uint64_t v159 = 138412546;
    uint64_t v202 = v156;
    char v161 = v156;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    char *v160 = v156;

    *(_WORD *)(v159 + 12) = 2082;
    uint64_t v163 = *(void *)&v161[OBJC_IVAR___MRDFastSyncGroupSession_identifier];
    unint64_t v162 = *(void *)&v161[OBJC_IVAR___MRDFastSyncGroupSession_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v202 = (void *)sub_10018A9E0(v163, v162, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v157, v158, "[%@]<%{public}s> Received transportMigrationReply with no completion.", (uint8_t *)v159, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100231260();
  uint64_t v164 = swift_allocError();
  *uint64_t v165 = 6;
  sub_100215528(v164);
  swift_errorRelease();
}

void sub_100222100(uint64_t a1, NSObject *a2, unint64_t a3, NSObject *a4, char a5)
{
  unint64_t v6 = v5;
  os_log_type_t v303 = a4;
  uint64_t v295 = type metadata accessor for DispatchPredicate();
  uint64_t v290 = *(void *)(v295 - 8);
  __chkstk_darwin(v295);
  uint64_t v294 = (uint64_t *)((char *)&v263 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v293 = type metadata accessor for Participants();
  uint64_t v289 = *(NSObject **)(v293 - 8);
  __chkstk_darwin(v293);
  uint64_t v296 = ((char *)&v263 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_100013A80(&qword_100479B20);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v263 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Participant();
  unint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v288 = ((char *)&v263 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v291 = (uint64_t *)((char *)&v263 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v297 = ((char *)&v263 - v22);
  __chkstk_darwin(v21);
  os_log_t v301 = (char *)&v263 - v23;
  unint64_t v302 = (void *)type metadata accessor for Logger();
  unint64_t v300 = *(v302 - 1);
  __chkstk_darwin(v302);
  uint64_t v299 = ((char *)&v263 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_100013A80(&qword_100479B00);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v263 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    unint64_t v297 = v6;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v308 = 0;
    id v60 = [(objc_class *)isa compressedDataUsingAlgorithm:0 error:&v308];

    uint64_t v61 = v308;
    if (v60)
    {
      uint64_t v34 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v6 = v62;
    }
    else
    {
      id v77 = v61;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
      uint64_t v34 = 0;
      unint64_t v6 = 0xF000000000000000;
    }
    unsigned __int8 v32 = v303;
    unint64_t v310 = v34;
    unint64_t v311 = v6;
    NSString v78 = (unint64_t *)sub_1002899E4();
    unint64_t v79 = a3 >> 62;
    if (v6 >> 60 == 15)
    {
      unint64_t v310 = a2;
      unint64_t v311 = a3;
      sub_10018FE44((uint64_t)a2, a3);
    }
    else
    {
      unint64_t v31 = *v78;
      os_log_t v80 = v78[1];
      uint64_t v81 = 0;
      switch(v6 >> 62)
      {
        case 1uLL:
          LODWORD(v81) = HIDWORD(v34) - v34;
          if (__OFSUB__(HIDWORD(v34), v34)) {
            goto LABEL_121;
          }
          uint64_t v81 = (int)v81;
LABEL_24:
          switch(v79)
          {
            case 1uLL:
              LODWORD(v85) = HIDWORD(a2) - a2;
              if (__OFSUB__(HIDWORD(a2), a2)) {
                goto LABEL_123;
              }
              uint64_t v85 = (int)v85;
LABEL_29:
              if (v85 >= v81) {
                goto LABEL_34;
              }
LABEL_32:
              unint64_t v310 = a2;
              unint64_t v311 = a3;
              sub_10018FE44((uint64_t)a2, a3);
              sub_1001A3954((uint64_t)v34, v6);
              break;
            case 2uLL:
              Class v87 = a2[2].isa;
              Class v86 = a2[3].isa;
              BOOL v84 = __OFSUB__(v86, v87);
              uint64_t v85 = v86 - v87;
              if (!v84) {
                goto LABEL_29;
              }
              goto LABEL_124;
            case 3uLL:
              if (v81 > 0) {
                goto LABEL_32;
              }
              goto LABEL_34;
            default:
              uint64_t v85 = BYTE6(a3);
              goto LABEL_29;
          }
          break;
        case 2uLL:
          Class v83 = v34[2].isa;
          Class v82 = v34[3].isa;
          BOOL v84 = __OFSUB__(v82, v83);
          uint64_t v81 = v82 - v83;
          if (!v84) {
            goto LABEL_24;
          }
          goto LABEL_122;
        case 3uLL:
          goto LABEL_24;
        default:
          uint64_t v81 = BYTE6(v6);
          goto LABEL_24;
      }
    }
    unint64_t v88 = (unint64_t *)sub_1002899D8();
    unint64_t v31 = *v88;
    os_log_t v80 = v88[1];
    uint64_t v34 = a2;
    unint64_t v6 = a3;
LABEL_34:
    uint64_t v296 = v80;
    swift_bridgeObjectRetain();
    unint64_t v89 = 0;
    switch(v6 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v34), v34))
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
          goto LABEL_119;
        }
        unint64_t v89 = HIDWORD(v34) - (int)v34;
        break;
      case 2uLL:
        Class v91 = v34[2].isa;
        Class v90 = v34[3].isa;
        unint64_t v89 = v90 - v91;
        if (!__OFSUB__(v90, v91)) {
          break;
        }
        goto LABEL_114;
      case 3uLL:
        break;
      default:
        unint64_t v89 = BYTE6(v6);
        break;
    }
    uint64_t v92 = 0;
    switch(v79)
    {
      case 1uLL:
        LODWORD(v92) = HIDWORD(a2) - a2;
        if (__OFSUB__(HIDWORD(a2), a2)) {
          goto LABEL_115;
        }
        uint64_t v92 = (int)v92;
LABEL_44:
        uint64_t v293 = v92;
        uint64_t v294 = (void *)v89;
        uint64_t v295 = v31;
        uint64_t v95 = v297;
        swift_retain();
        dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
        swift_release();
        uint64_t v96 = NearbyGroup.members.getter();
        swift_release();
        swift_retain();
        sub_1001FC108(v96, (uint64_t)v32, (uint64_t (*)(void))&type metadata accessor for NearbyGroup.Member, (uint64_t (*)(uint64_t))&NearbyGroup.Member.handle.getter, v27);
        swift_bridgeObjectRelease();
        uint64_t v97 = type metadata accessor for NearbyGroup.Member();
        uint64_t v98 = *(void *)(v97 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v27, 1, v97) == 1)
        {
          sub_100009A08((uint64_t)v27, &qword_100479B00);
          uint64_t v99 = (void (*)(void, void))v302;
          uint64_t v101 = (uint64_t)v299;
          unint64_t v100 = v300;
        }
        else
        {
          os_log_t v301 = (char *)NearbyGroup.Member.tokenDestination.getter();
          Class v103 = v102;
          (*(void (**)(char *, uint64_t))(v98 + 8))(v27, v97);
          uint64_t v99 = (void (*)(void, void))v302;
          uint64_t v101 = (uint64_t)v299;
          unint64_t v100 = v300;
          if (v103) {
            goto LABEL_48;
          }
        }
        Class v103 = v32[3].isa;
        os_log_t v301 = (char *)v32[2].isa;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_48:
        if (qword_10047F3A0 != -1) {
          swift_once();
        }
        uint64_t v104 = sub_10018A9A8((uint64_t)v99, (uint64_t)qword_10047F3A8);
        (*(void (**)(uint64_t, uint64_t, void (*)(void, void)))(v100 + 16))(v101, v104, v99);
        uint64_t v105 = v95;
        swift_retain_n();
        os_log_type_t v106 = v105;
        swift_bridgeObjectRetain_n();
        int v107 = v106;
        BOOL v108 = Logger.logObject.getter();
        int v109 = static os_log_type_t.info.getter();
        BOOL v110 = os_log_type_enabled(v108, (os_log_type_t)v109);
        unint64_t v298 = (unint64_t)v103;
        if (v110)
        {
          LODWORD(v290) = v109;
          uint64_t v111 = swift_slowAlloc();
          unint64_t v112 = (void *)swift_slowAlloc();
          uint64_t v292 = swift_slowAlloc();
          uint64_t v308 = v292;
          *(_DWORD *)uint64_t v111 = 138413826;
          uint64_t v306 = v107;
          id v113 = v107;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          unint64_t v297 = v107;
          unint64_t v291 = v112;
          *unint64_t v112 = v107;

          *(_WORD *)(v111 + 12) = 2082;
          uint64_t v114 = *(uint64_t *)((char *)&v113->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
          unint64_t v115 = *(unint64_t *)((char *)&v113[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
          swift_bridgeObjectRetain();
          uint64_t v306 = sub_10018A9E0(v114, v115, (uint64_t *)&v308);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v111 + 22) = 2080;
          swift_beginAccess();
          unint64_t v116 = v311;
          if (v311 >> 60 == 15)
          {
LABEL_137:
            swift_bridgeObjectRelease();
            swift_release_n();
            __break(1u);
            JUMPOUT(0x100224748);
          }
          float v117 = (float)(uint64_t)v294 / (float)v293;
          uint64_t v118 = (uint64_t)v310;
          sub_10018FE44((uint64_t)v310, v311);
          uint64_t v119 = Data.description.getter();
          unint64_t v121 = v120;
          sub_1001A3954(v118, v116);
          double v304 = COERCE_DOUBLE(sub_10018A9E0(v119, v121, (uint64_t *)&v308));
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v111 + 32) = 2080;
          unsigned __int8 v32 = v303;
          uint64_t v122 = (uint64_t)v303[2].isa;
          unint64_t v123 = (unint64_t)v303[3].isa;
          swift_bridgeObjectRetain();
          double v304 = COERCE_DOUBLE(sub_10018A9E0(v122, v123, (uint64_t *)&v308));
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v111 + 42) = 2080;
          unint64_t v124 = v298;
          swift_bridgeObjectRetain();
          double v304 = COERCE_DOUBLE(sub_10018A9E0((uint64_t)v301, v124, (uint64_t *)&v308));
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          uint64_t v125 = swift_bridgeObjectRelease_n();
          *(_WORD *)(v111 + 52) = 2048;
          double v126 = COERCE_DOUBLE((*((uint64_t (**)(uint64_t))v32->isa + 27))(v125));
          swift_release();
          double v304 = v126;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          *(_WORD *)(v111 + 62) = 2048;
          double v304 = v117;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v290, "[%@]<%{public}s> Send remoteControl push message: %s to: %s, dst: %s. Timestamp: %ld. Ratio: %f.", (uint8_t *)v111, 0x48u);
          sub_100013A80((uint64_t *)&unk_10047B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(NSObject *, void *))(v300 + 8))(v299, v302);
          int v107 = v297;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release_n();
          (*(void (**)(uint64_t, void))(v100 + 8))(v101, v99);
        }
        uint64_t v127 = *(Class *)((char *)&v107->isa + OBJC_IVAR___MRDFastSyncGroupSession_pushMessenger);
        uint64_t v128 = v295;
        if (v127)
        {
          sub_100013A80((uint64_t *)&unk_100479B10);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1003C6380;
          os_log_type_t v303 = v127;
          unint64_t v130 = sub_1002899FC();
          unint64_t v132 = *(NSObject **)v130;
          uint64_t v131 = (void (*)(void, void))*((void *)v130 + 1);
          uint64_t v308 = v132;
          unint64_t v309 = v131;
          unint64_t v302 = v131;
          swift_bridgeObjectRetain_n();
          AnyHashable.init<A>(_:)();
          unint64_t v133 = sub_100289A44();
          uint64_t v135 = *(void *)v133;
          uint64_t v134 = *((void *)v133 + 1);
          *(void *)(inited + 96) = &type metadata for String;
          *(void *)(inited + 72) = v135;
          *(void *)(inited + 80) = v134;
          swift_bridgeObjectRetain();
          uint64_t v136 = sub_100289A14();
          uint64_t v138 = *(NSObject **)v136;
          unint64_t v137 = *((void *)v136 + 1);
          uint64_t v308 = v138;
          unint64_t v309 = (void (*)(void, void))v137;
          unint64_t v300 = v137;
          swift_bridgeObjectRetain_n();
          AnyHashable.init<A>(_:)();
          swift_beginAccess();
          unint64_t v139 = v311;
          if (v311 >> 60 != 15)
          {
            uint64_t v140 = (uint64_t)v310;
            *(void *)(inited + 168) = &type metadata for Data;
            *(void *)(inited + 144) = v140;
            *(void *)(inited + 152) = v139;
            sub_10018FE44(v140, v139);
            uint64_t v141 = (double *)sub_100289A38();
            double v143 = *v141;
            uint64_t v142 = *((void *)v141 + 1);
            double v304 = v143;
            uint64_t v305 = v142;
            uint64_t v299 = v142;
            swift_bridgeObjectRetain_n();
            AnyHashable.init<A>(_:)();
            *(void *)(inited + 240) = &type metadata for String;
            uint64_t v144 = v296;
            *(void *)(inited + 216) = v128;
            *(void *)(inited + 224) = v144;
            uint64_t v145 = sub_100289A20();
            uint64_t v146 = *((void *)v145 + 1);
            double v304 = *(double *)v145;
            uint64_t v305 = v146;
            swift_bridgeObjectRetain_n();
            uint64_t v147 = AnyHashable.init<A>(_:)();
            uint64_t v148 = (*((uint64_t (**)(uint64_t))v32->isa + 27))(v147);
            *(void *)(inited + 312) = &type metadata for Int;
            *(void *)(inited + 288) = v148;
            uint64_t v149 = (double *)sub_100289A2C();
            uint64_t v150 = *((void *)v149 + 1);
            double v304 = *v149;
            uint64_t v305 = v150;
            swift_bridgeObjectRetain_n();
            AnyHashable.init<A>(_:)();
            uint64_t v152 = *(uint64_t *)((char *)&v107->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
            uint64_t v151 = *(uint64_t *)((char *)&v107[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
            *(void *)(inited + 384) = &type metadata for String;
            *(void *)(inited + 360) = v152;
            *(void *)(inited + 368) = v151;
            swift_bridgeObjectRetain();
            Class v153 = sub_100289A08();
            uint64_t v154 = *((void *)v153 + 1);
            double v304 = *(double *)v153;
            uint64_t v305 = v154;
            swift_bridgeObjectRetain_n();
            AnyHashable.init<A>(_:)();
            Class v156 = v32[2].isa;
            Class v155 = v32[3].isa;
            *(void *)(inited + 456) = &type metadata for String;
            *(void *)(inited + 432) = v156;
            *(void *)(inited + 440) = v155;
            swift_bridgeObjectRetain();
            uint64_t v157 = sub_1002899F0();
            uint64_t v158 = *((void *)v157 + 1);
            double v304 = *(double *)v157;
            uint64_t v305 = v158;
            swift_bridgeObjectRetain_n();
            AnyHashable.init<A>(_:)();
            uint64_t v159 = (uint64_t *)((char *)v107 + OBJC_IVAR___MRDFastSyncGroupSession_localHandle);
            uint64_t v160 = *(uint64_t *)((char *)&v107[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_localHandle);
            if (v160)
            {
              uint64_t v161 = *v159;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              *(void *)(inited + 528) = &type metadata for String;
              *(void *)(inited + 504) = v161;
              *(void *)(inited + 512) = v160;
              sub_100189560(inited);
              Class v162 = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              sub_100013A80(&qword_100478690);
              uint64_t v163 = swift_initStackObject();
              *(_OWORD *)(v163 + 16) = xmmword_1003C58B0;
              *(void *)(v163 + 32) = v301;
              *(void *)(v163 + 40) = v298;
              sub_1002339E8(v163);
              swift_setDeallocating();
              swift_arrayDestroy();
              Class v164 = Set._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              uint64_t v165 = v303;
              [v303 sendMessage:v162 toDestinations:v164];

              sub_1001A3954((uint64_t)v310, v311);
              return;
            }
            goto LABEL_136;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_136:
        __break(1u);
        goto LABEL_137;
      case 2uLL:
        Class v94 = a2[2].isa;
        Class v93 = a2[3].isa;
        BOOL v84 = __OFSUB__(v93, v94);
        uint64_t v92 = v93 - v94;
        if (!v84) {
          goto LABEL_44;
        }
        goto LABEL_116;
      case 3uLL:
        goto LABEL_44;
      default:
        uint64_t v92 = BYTE6(a3);
        goto LABEL_44;
    }
  }
  uint64_t v299 = a2;
  unint64_t v300 = a3;
  if (!*(void *)(v6 + OBJC_IVAR___MRDFastSyncGroupSession_groupSession))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_12:
    sub_100009A08((uint64_t)v14, &qword_100479B20);
    if (qword_10047F3A0 == -1) {
      goto LABEL_13;
    }
    goto LABEL_112;
  }
  swift_retain();
  uint64_t v28 = GroupSession.activeParticipants.getter();
  unint64_t v298 = v16;
  uint64_t v29 = v28;
  swift_release();
  uint64_t v30 = v303;
  swift_retain();
  sub_1001FC108(v29, (uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for Participant, (uint64_t (*)(uint64_t))&Participant.handle.getter, v14);
  unint64_t v31 = v298;
  swift_bridgeObjectRelease();
  a2 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v14, 1, v15) == 1) {
    goto LABEL_12;
  }
  uint64_t v27 = v301;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v301, v14, v15);
  if (!*(void *)(v6 + OBJC_IVAR___MRDFastSyncGroupSession_groupMessenger))
  {
    if (qword_10047F3A0 == -1) {
      goto LABEL_59;
    }
    goto LABEL_125;
  }
  unsigned __int8 v32 = v299;
  unint64_t v33 = v300 >> 62;
  uint64_t v292 = v15;
  a3 = (unint64_t)v291;
  switch(v300 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v299), v299))
      {
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
        goto LABEL_129;
      }
      if (HIDWORD(v299) - (int)v299 <= 90000)
      {
LABEL_6:
        uint64_t v34 = v300;
        sub_10018FE44((uint64_t)v299, v300);
        swift_retain();
        LODWORD(v288) = MRDFastSyncGroupSessionState.rawValue.getter(5, v32, v34, v35);
        uint64_t v286 = v36;
        unint64_t v297 = v37;
        if (qword_10047F3A0 == -1)
        {
LABEL_7:
          sub_10018A9A8((uint64_t)v302, (uint64_t)qword_10047F3A8);
          (*(void (**)(unint64_t, char *, NSObject *))(v31 + 16))(a3, v27, a2);
          id v38 = (id)v6;
          sub_10018FE44((uint64_t)v32, (unint64_t)v34);
          id v39 = v38;
          sub_10018FE44((uint64_t)v32, (unint64_t)v34);
          uint64_t v40 = v39;
          Swift::Int v41 = Logger.logObject.getter();
          os_log_type_t v42 = static os_log_type_t.info.getter();
          int v43 = v42;
          BOOL v44 = os_log_type_enabled(v41, v42);
          os_log_type_t v303 = v40;
          if (v44)
          {
            uint64_t v45 = swift_slowAlloc();
            uint64_t v46 = (void *)swift_slowAlloc();
            unint64_t v283 = (unint64_t)v46;
            uint64_t v285 = swift_slowAlloc();
            uint64_t v308 = v285;
            *(_DWORD *)uint64_t v45 = 138413058;
            os_log_t v284 = v41;
            uint64_t v47 = (uint64_t)v32;
            uint64_t v306 = v303;
            os_log_type_t v48 = v303;
            LODWORD(v282) = v43;
            uint64_t v49 = v48;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v46 = v303;

            *(_WORD *)(v45 + 12) = 2082;
            uint64_t v51 = *(uint64_t *)((char *)&v49->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
            unint64_t v50 = *(unint64_t *)((char *)&v49[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
            swift_bridgeObjectRetain();
            uint64_t v306 = sub_10018A9E0(v51, v50, (uint64_t *)&v308);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v45 + 22) = 2080;
            sub_10018FE44(v47, (unint64_t)v34);
            uint64_t v52 = Data.description.getter();
            unint64_t v54 = v53;
            sub_10018FE9C(v47, (unint64_t)v34);
            uint64_t v306 = sub_10018A9E0(v52, v54, (uint64_t *)&v308);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_10018FE9C(v47, (unint64_t)v34);
            sub_10018FE9C(v47, (unint64_t)v34);
            *(_WORD *)(v45 + 32) = 2080;
            sub_100015B28(&qword_100479B28, (void (*)(uint64_t))&type metadata accessor for Participant);
            unint64_t v55 = (unint64_t)v291;
            os_log_t v56 = v292;
            uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v306 = sub_10018A9E0(v57, v58, (uint64_t *)&v308);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v40 = v303;
            unint64_t v302 = *(void **)(v298 + 8);
            ((void (*)(unint64_t, NSObject *))v302)(v55, v56);
            Swift::Int v41 = v284;
            _os_log_impl((void *)&_mh_execute_header, v284, (os_log_type_t)v282, "[%@]<%{public}s> Send remoteControl message: %s to: %s.", (uint8_t *)v45, 0x2Au);
            sub_100013A80((uint64_t *)&unk_10047B850);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v27 = v301;
            swift_slowDealloc();
          }
          else
          {

            sub_10018FE9C((uint64_t)v32, (unint64_t)v34);
            sub_10018FE9C((uint64_t)v32, (unint64_t)v34);
            unint64_t v302 = *(void **)(v31 + 8);
            ((void (*)(unint64_t, NSObject *))v302)(a3, a2);
          }

          a2 = v286;
          sub_100289DF4(v288);
          uint64_t v182 = v181;
          unint64_t v31 = v183;
          uint64_t v184 = (char *)v296;
          static Participants.only(_:)();
          char v185 = *(Class *)((char *)&v40->isa + OBJC_IVAR___MRDFastSyncGroupSession_executionQueue);
          unint64_t v6 = (unint64_t)v294;
          uint64_t v186 = v295;
          void *v294 = v185;
          uint64_t v187 = v290;
          (*(void (**)(unint64_t, void, uint64_t))(v290 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v186);
          id v188 = v185;
          LOBYTE(v185) = _dispatchPreconditionTest(_:)();
          (*(void (**)(unint64_t, uint64_t))(v187 + 8))(v6, v186);
          if (v185)
          {
            uint64_t v189 = (void *)swift_allocObject();
            uint64_t v190 = v303;
            v189[2] = v303;
            v189[3] = MRDFastSyncGroupSessionState.rawValue.getter;
            v189[4] = 0;
            os_log_t v191 = v190;
            GroupSessionMessenger.send(_:to:completion:)();
            swift_release();
            swift_release();
            sub_10018FE9C(v182, v31);
            sub_10018FE9C((uint64_t)a2, (unint64_t)v297);
            ((void (*)(char *, uint64_t))v289[1].isa)(v184, v293);
            ((void (*)(char *, NSObject *))v302)(v27, v292);
            return;
          }
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          swift_once();
LABEL_59:
          sub_10018A9A8((uint64_t)v302, (uint64_t)qword_10047F3A8);
          uint64_t v166 = v288;
          (*(void (**)(NSObject *, char *, NSObject *))(v31 + 16))(v288, v27, a2);
          uint64_t v167 = (id)v6;
          uint64_t v168 = Logger.logObject.getter();
          os_log_type_t v169 = static os_log_type_t.error.getter();
          int v170 = v169;
          if (os_log_type_enabled(v168, v169))
          {
            uint64_t v171 = swift_slowAlloc();
            uint64_t v172 = (void *)swift_slowAlloc();
            unint64_t v300 = (unint64_t)v172;
            os_log_type_t v303 = swift_slowAlloc();
            uint64_t v308 = v303;
            *(_DWORD *)uint64_t v171 = 138412802;
            LODWORD(v302) = v170;
            uint64_t v306 = v167;
            uint64_t v173 = v167;
            uint64_t v292 = a2;
            char v174 = v173;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v172 = v167;

            *(_WORD *)(v171 + 12) = 2082;
            uint64_t v175 = *(uint64_t *)((char *)&v174->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
            unint64_t v176 = *(unint64_t *)((char *)&v174[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
            swift_bridgeObjectRetain();
            uint64_t v306 = sub_10018A9E0(v175, v176, (uint64_t *)&v308);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v171 + 22) = 2080;
            sub_100015B28(&qword_100479B28, (void (*)(uint64_t))&type metadata accessor for Participant);
            unint64_t v177 = v292;
            uint64_t v178 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v306 = sub_10018A9E0(v178, v179, (uint64_t *)&v308);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            unint64_t v180 = *(void (**)(NSObject *, NSObject *))(v298 + 8);
            v180(v166, v177);
            _os_log_impl((void *)&_mh_execute_header, v168, (os_log_type_t)v302, "[%@]<%{public}s> No messenger to send message to participant: %s.", (uint8_t *)v171, 0x20u);
            sub_100013A80((uint64_t *)&unk_10047B850);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v180(v301, v177);
          }
          else
          {

            os_log_type_t v192 = *(void (**)(NSObject *, NSObject *))(v31 + 8);
            v192(v166, a2);

            v192(v27, a2);
          }
          return;
        }
LABEL_119:
        swift_once();
        goto LABEL_7;
      }
LABEL_71:
      LODWORD(v195) = HIDWORD(v299) - v299;
      if (__OFSUB__(HIDWORD(v299), v299)) {
        goto LABEL_133;
      }
      uint64_t v195 = (int)v195;
LABEL_73:
      float v196 = ceilf((float)v195 / 90000.0);
      if ((~LODWORD(v196) & 0x7F800000) == 0) {
        goto LABEL_128;
      }
      if (v196 <= -9.2234e18)
      {
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
      if (v196 < 9.2234e18)
      {
        uint64_t v288 = (uint64_t)v196;
        uint64_t v197 = qword_10047F3A0;
        swift_retain();
        if (v197 == -1) {
          goto LABEL_77;
        }
        goto LABEL_131;
      }
LABEL_130:
      __break(1u);
LABEL_131:
      swift_once();
LABEL_77:
      unint64_t v198 = sub_10018A9A8((uint64_t)v302, (uint64_t)qword_10047F3A8);
      id v199 = (id)v6;
      uint64_t v34 = v300;
      sub_10018FE44((uint64_t)v32, v300);
      id v200 = v199;
      sub_10018FE44((uint64_t)v32, (unint64_t)v34);
      uint64_t v201 = v200;
      os_log_t v284 = v198;
      uint64_t v202 = Logger.logObject.getter();
      os_log_type_t v203 = static os_log_type_t.info.getter();
      int v204 = v203;
      os_log_type_t v303 = v202;
      BOOL v205 = os_log_type_enabled(v202, v203);
      uint64_t v286 = v201;
      if (v205)
      {
        uint64_t v206 = swift_slowAlloc();
        uint64_t v207 = swift_slowAlloc();
        LODWORD(v291) = v204;
        uint64_t v208 = (void *)v207;
        unint64_t v302 = (void *)swift_slowAlloc();
        uint64_t v308 = v302;
        *(_DWORD *)uint64_t v206 = 138413058;
        uint64_t v306 = v201;
        uint64_t v209 = v201;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v208 = v201;

        *(_WORD *)(v206 + 12) = 2082;
        uint64_t v211 = *(uint64_t *)((char *)&v209->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
        unint64_t v210 = *(unint64_t *)((char *)&v209[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
        swift_bridgeObjectRetain();
        uint64_t v212 = v211;
        unsigned __int8 v32 = v299;
        uint64_t v306 = sub_10018A9E0(v212, v210, (uint64_t *)&v308);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v206 + 22) = 2080;
        sub_10018FE44((uint64_t)v32, (unint64_t)v34);
        uint64_t v213 = Data.description.getter();
        unint64_t v215 = v214;
        sub_10018FE9C((uint64_t)v32, (unint64_t)v34);
        uint64_t v306 = sub_10018A9E0(v213, v215, (uint64_t *)&v308);
        unint64_t v31 = v298;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v27 = v301;
        swift_bridgeObjectRelease();
        sub_10018FE9C((uint64_t)v32, (unint64_t)v34);
        sub_10018FE9C((uint64_t)v32, (unint64_t)v34);
        *(_WORD *)(v206 + 32) = 2048;
        unint64_t v6 = (unint64_t)v288;
        uint64_t v306 = v288;
        a2 = v292;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v34 = v303;
        _os_log_impl((void *)&_mh_execute_header, v303, (os_log_type_t)v291, "[%@]<%{public}s> Split remoteControl payload: %s into %ld chunks.", (uint8_t *)v206, 0x2Au);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_10018FE9C((uint64_t)v32, (unint64_t)v34);
        sub_10018FE9C((uint64_t)v32, (unint64_t)v34);

        unint64_t v6 = (unint64_t)v288;
      }
      if ((v6 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_133:
        __break(1u);
      }
      if (v6)
      {
        a2 = 0;
        uint64_t v217 = 0;
        int v282 = *(Class *)((char *)&v286->isa + OBJC_IVAR___MRDFastSyncGroupSession_executionQueue);
        uint64_t v269 = (uint64_t *)((char *)v286 + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
        BOOL v218 = __OFSUB__(HIDWORD(v32), v32);
        BOOL v265 = v218;
        uint64_t v263 = BYTE6(v300);
        uint64_t v264 = HIDWORD(v32) - (int)v32;
        os_log_type_t v281 = (void (**)(unint64_t, char *, void *))(v31 + 16);
        v31 += 8;
        os_log_type_t v268 = &v307;
        unsigned int v280 = enum case for DispatchPredicate.onQueue(_:);
        uint64_t v278 = (void (**)(void *, uint64_t))(v290 + 8);
        uint64_t v279 = (void (**)(void *, void, uint64_t))(v290 + 104);
        uint64_t v277 = (void (**)(NSObject *, uint64_t))&v289[1];
        unint64_t v283 = v33;
        *(void *)&long long v216 = 138413570;
        long long v267 = v216;
        uint64_t v266 = (char *)&type metadata for Any + 8;
        unint64_t v298 = v31;
        while (v6 != v217)
        {
          if (v217 == 0x5D34EDEE9D61) {
            goto LABEL_107;
          }
          a3 = (unint64_t)&v217->isa + 1;
          uint64_t v219 = 0;
          unint64_t v220 = (unint64_t)v297;
          switch(v283)
          {
            case 1uLL:
              uint64_t v219 = v264;
              if (v265) {
                goto LABEL_117;
              }
              break;
            case 2uLL:
              Class v222 = v299[2].isa;
              Class v221 = v299[3].isa;
              BOOL v84 = __OFSUB__(v221, v222);
              uint64_t v219 = v221 - v222;
              if (v84) {
                goto LABEL_118;
              }
              break;
            case 3uLL:
              break;
            default:
              uint64_t v219 = v263;
              break;
          }
          BOOL v84 = __OFSUB__(v219, a2);
          uint64_t v223 = v219 - (void)a2;
          if (v84) {
            goto LABEL_108;
          }
          if (v223 >= 90000) {
            uint64_t v223 = 90000;
          }
          if (__OFADD__(a2, v223)) {
            goto LABEL_109;
          }
          if ((uint64_t)((char *)a2 + v223) < (uint64_t)a2) {
            goto LABEL_110;
          }
          uint64_t v224 = Data.subdata(in:)();
          unint64_t v226 = v225;
          sub_10018FE44(v224, v225);
          LODWORD(v302) = MRDFastSyncGroupSessionState.rawValue.getter(5, v224, v226, v227);
          uint64_t v229 = v228;
          unint64_t v231 = v230;
          (*v281)(v220, v27, v292);
          unint64_t v232 = v220;
          uint64_t v233 = v286;
          sub_10018FE44(v224, v226);
          uint64_t v234 = v233;
          sub_10018FE44(v224, v226);
          unsigned int v235 = Logger.logObject.getter();
          os_log_type_t v236 = static os_log_type_t.info.getter();
          LODWORD(v285) = v236;
          BOOL v237 = os_log_type_enabled(v235, v236);
          os_log_type_t v303 = a3;
          uint64_t v290 = v224;
          unint64_t v291 = (void *)v226;
          uint64_t v289 = v234;
          if (v237)
          {
            uint64_t v238 = swift_slowAlloc();
            unint64_t v273 = v231;
            uint64_t v239 = v238;
            uint64_t v240 = (void *)swift_slowAlloc();
            uint64_t v270 = v240;
            uint64_t v241 = swift_slowAlloc();
            os_log_t v271 = v235;
            unint64_t v272 = v241;
            uint64_t v308 = v241;
            *(_DWORD *)uint64_t v239 = v267;
            uint64_t v274 = v229;
            uint64_t v306 = v234;
            uint64_t v242 = v234;
            uint64_t v275 = a2;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *v240 = v286;

            *(_WORD *)(v239 + 12) = 2082;
            uint64_t v243 = *v269;
            unint64_t v244 = v269[1];
            unint64_t v245 = (unint64_t)v297;
            swift_bridgeObjectRetain();
            uint64_t v306 = sub_10018A9E0(v243, v244, (uint64_t *)&v308);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v239 + 22) = 2080;
            sub_10018FE44(v224, v226);
            uint64_t v246 = Data.description.getter();
            unint64_t v248 = v247;
            sub_10018FE9C(v224, v226);
            uint64_t v306 = sub_10018A9E0(v246, v248, (uint64_t *)&v308);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_10018FE9C(v224, v226);
            sub_10018FE9C(v224, v226);
            *(_WORD *)(v239 + 32) = 2080;
            sub_100015B28(&qword_100479B28, (void (*)(uint64_t))&type metadata accessor for Participant);
            uint64_t v249 = v292;
            uint64_t v250 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v306 = sub_10018A9E0(v250, v251, (uint64_t *)&v308);
            uint64_t v229 = v274;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v276 = *(void (**)(unint64_t, NSObject *))v298;
            v276(v245, v249);
            *(_WORD *)(v239 + 42) = 2048;
            uint64_t v306 = v303;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v239 + 52) = 2048;
            uint64_t v306 = v288;
            a2 = v275;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            unsigned int v235 = v271;
            _os_log_impl((void *)&_mh_execute_header, v271, (os_log_type_t)v285, "[%@]<%{public}s> Send remoteControl message: %s to: %s. Chunk %ld of %ld", (uint8_t *)v239, 0x3Eu);
            sub_100013A80((uint64_t *)&unk_10047B850);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            unint64_t v231 = v273;
            swift_slowDealloc();
          }
          else
          {

            sub_10018FE9C(v224, v226);
            sub_10018FE9C(v224, v226);
            uint64_t v276 = *(void (**)(unint64_t, NSObject *))v298;
            v276(v232, v292);
          }

          sub_100289DF4(v302);
          uint64_t v252 = v229;
          uint64_t v254 = v253;
          unint64_t v256 = v255;
          unsigned __int8 v32 = v296;
          static Participants.only(_:)();
          uint64_t v257 = v294;
          uint64_t v258 = v282;
          void *v294 = v282;
          unint64_t v6 = v231;
          uint64_t v259 = v295;
          (*v279)(v257, v280, v295);
          id v260 = v258;
          LOBYTE(v258) = _dispatchPreconditionTest(_:)();
          (*v278)(v257, v259);
          if ((v258 & 1) == 0) {
            goto LABEL_111;
          }
          uint64_t v34 = swift_allocObject();
          Class v261 = v289;
          v34[2].Class isa = (Class)v289;
          v34[3].Class isa = (Class)MRDFastSyncGroupSessionState.rawValue.getter;
          v34[4].Class isa = 0;
          uint64_t v262 = v261;
          GroupSessionMessenger.send(_:to:completion:)();
          swift_release();
          sub_10018FE9C(v254, v256);
          sub_10018FE9C(v252, v6);
          sub_10018FE9C(v290, (unint64_t)v291);
          (*v277)(v32, v293);
          a2 += 11250;
          unint64_t v6 = (unint64_t)v288;
          uint64_t v217 = v303;
          unint64_t v31 = v298;
          uint64_t v27 = v301;
          if (v288 == v303)
          {
            v276((unint64_t)v301, v292);
            goto LABEL_105;
          }
        }
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        swift_once();
LABEL_13:
        sub_10018A9A8((uint64_t)v302, (uint64_t)qword_10047F3A8);
        id v63 = (id)v6;
        char v64 = v303;
        swift_retain_n();
        int64_t v65 = v63;
        uint64_t v66 = Logger.logObject.getter();
        os_log_type_t v67 = static os_log_type_t.error.getter();
        int v68 = v67;
        if (os_log_type_enabled(v66, v67))
        {
          uint64_t v69 = swift_slowAlloc();
          LODWORD(v301) = v68;
          uint64_t v70 = v69;
          uint64_t v71 = (void *)swift_slowAlloc();
          unint64_t v302 = (void *)swift_slowAlloc();
          uint64_t v308 = v302;
          *(_DWORD *)uint64_t v70 = 138412802;
          uint64_t v306 = v65;
          unint64_t v72 = v65;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v71 = v65;

          *(_WORD *)(v70 + 12) = 2082;
          uint64_t v73 = *(uint64_t *)((char *)&v72->isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
          unint64_t v74 = *(unint64_t *)((char *)&v72[1].isa + OBJC_IVAR___MRDFastSyncGroupSession_identifier);
          swift_bridgeObjectRetain();
          uint64_t v306 = sub_10018A9E0(v73, v74, (uint64_t *)&v308);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v70 + 22) = 2080;
          uint64_t v75 = (uint64_t)v64[2].isa;
          unint64_t v76 = (unint64_t)v64[3].isa;
          swift_bridgeObjectRetain();
          uint64_t v306 = sub_10018A9E0(v75, v76, (uint64_t *)&v308);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v301, "[%@]<%{public}s> No active participant to send message to connection manager participant: %s.", (uint8_t *)v70, 0x20u);
          sub_100013A80((uint64_t *)&unk_10047B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        return;
      }
      (*(void (**)(char *, NSObject *))(v31 + 8))(v27, a2);
LABEL_105:
      swift_release();
      return;
    case 2uLL:
      Class v194 = v299[2].isa;
      Class v193 = v299[3].isa;
      BOOL v84 = __OFSUB__(v193, v194);
      uint64_t v195 = v193 - v194;
      if (v84) {
        goto LABEL_127;
      }
      if (v195 <= 90000) {
        goto LABEL_6;
      }
      if (v33 != 2) {
        goto LABEL_71;
      }
      goto LABEL_73;
    default:
      goto LABEL_6;
  }
}

uint64_t MRDFastSyncGroupSession.sendRemoteControlMessage(_:to:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)&v5[OBJC_IVAR___MRDFastSyncGroupSession_executionQueue];
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v17[2] = v5;
  v17[3] = a1;
  v17[4] = a2;
  v17[5] = a3;
  v17[6] = a4;
  v17[7] = a5;
  aBlock[4] = sub_100233BF0;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_100006760;
  aBlock[3] = &unk_1004223F8;
  uint64_t v18 = _Block_copy(aBlock);
  uint64_t v19 = v5;
  sub_10018FE44(a1, a2);
  swift_bridgeObjectRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v22);
  return swift_release();
}

void MRDFastSyncGroupSession.init()()
{
}

uint64_t sub_100224C14()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x698))();
}

uint64_t sub_100224C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))((swift_isaMask & *v5) + 0x6A0))(a1, a2, a3, a4, a5 & 1);
}

uint64_t static TimeoutError.__derived_enum_equals(_:_:)()
{
  return 1;
}

Swift::Int TimeoutError.hashValue.getter()
{
  return Hasher._finalize()();
}

void TimeoutError.hash(into:)()
{
}

Swift::Int sub_100224D04()
{
  return Hasher._finalize()();
}

uint64_t sub_100224D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_100236C94(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_100224D78()
{
  return 0;
}

void sub_100224D84(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100224D90(uint64_t a1)
{
  unint64_t v2 = sub_100234130();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100224DCC(uint64_t a1)
{
  unint64_t v2 = sub_100234130();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100224E08()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100224E40(void *a1)
{
  uint64_t v2 = sub_100013A80(&qword_100479F90);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BDB5C(a1, a1[3]);
  sub_100234130();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  swift_bridgeObjectRetain();
  KeyedEncodingContainer.encode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100224F84(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100013A80(&qword_100479EE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BDB5C(a1, a1[3]);
  sub_100234130();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    type metadata accessor for RemoteControlActivity();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v3 + 16) = v10;
    *(void *)(v3 + 24) = v12;
  }
  sub_10018FD5C((uint64_t)a1);
  return v3;
}

unint64_t sub_100225110()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_10022512C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for GroupActivityMetadata.ActivityType();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1002251BC, 0, 0);
}

uint64_t sub_1002251BC()
{
  GroupActivityMetadata.init()();
  GroupActivityMetadata.supportsContinuationOnTV.setter();
  static GroupActivityMetadata.ActivityType.generic.getter();
  GroupActivityMetadata.type.setter();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100225244@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100225254@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for RemoteControlActivity();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_100224F84(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1002252AC(void *a1)
{
  return sub_100224E40(a1);
}

uint64_t sub_1002252D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_members;
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_members];
  swift_bridgeObjectRetain();
  char v10 = sub_1001DC3B0(a1, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    unint64_t v50 = v7;
    uint64_t v12 = *(void *)&v2[v8];
    uint64_t v13 = qword_10047F3A0;
    swift_bridgeObjectRetain();
    if (v13 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    uint64_t v15 = sub_10018A9A8(v14, (uint64_t)qword_10047F3A8);
    swift_bridgeObjectRetain_n();
    unint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v51 = ObjectType;
    uint64_t v52 = v2;
    if (v18)
    {
      uint64_t v19 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v20 = _typeName(_:qualified:)();
      uint64_t v53 = sub_10018A9E0(v20, v21, aBlock);
      v49[1] = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v22 = Set.description.getter();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v25 = v22;
      uint64_t ObjectType = v51;
      uint64_t v53 = sub_10018A9E0(v25, v24, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%{public}s] New members: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (*(void *)(v12 + 16) <= *(void *)(a1 + 16) >> 3)
    {
      aBlock[0] = a1;
      swift_bridgeObjectRetain();
      sub_10018BDAC(v12);
      uint64_t v26 = (unint64_t *)aBlock[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_10018BF54(v12, a1);
    }
    if (*(void *)(a1 + 16) <= *(void *)(v12 + 16) >> 3)
    {
      aBlock[0] = v12;
      sub_10018BDAC(a1);
      uint64_t v27 = (unint64_t *)aBlock[0];
    }
    else
    {
      uint64_t v27 = sub_10018BF54(a1, v12);
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136446722;
      uint64_t v31 = _typeName(_:qualified:)();
      uint64_t v53 = sub_10018A9E0(v31, v32, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v33 = Set.description.getter();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_10018A9E0(v33, v35, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v36 = Set.description.getter();
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_10018A9E0(v36, v38, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t ObjectType = v51;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%{public}s] Updating members with added: %{public}s, removed: %{public}s", (uint8_t *)v30, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    id v39 = v52;
    uint64_t v40 = (uint64_t)v50;
    uint64_t v41 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
    os_log_type_t v42 = (void *)swift_allocObject();
    v42[2] = 0;
    v42[3] = 0;
    unsigned char v42[4] = v26;
    v42[5] = v39;
    v42[6] = v27;
    v42[7] = ObjectType;
    int v43 = v39;
    sub_100196EE0(v40, (uint64_t)&unk_10047A040, (uint64_t)v42);
    swift_release();
    BOOL v44 = *(NSObject **)&v43[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_queue];
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v43;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_100237938;
    *(void *)(v46 + 24) = v45;
    aBlock[4] = (uint64_t)sub_10023A22C;
    aBlock[5] = v46;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_1001F4BF0;
    aBlock[3] = (uint64_t)&unk_100422978;
    uint64_t v47 = _Block_copy(aBlock);
    os_log_type_t v48 = v43;
    swift_retain();
    swift_release();
    dispatch_sync(v44, v47);
    _Block_release(v47);
    LOBYTE(v43) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v43) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1002259E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[25] = a6;
  v7[26] = a7;
  v7[23] = a4;
  v7[24] = a5;
  return _swift_task_switch(sub_100225A0C, 0, 0);
}

uint64_t sub_100225A0C()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    id v35 = *(id *)(v0[24]
                + OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_presence);
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = sub_10001551C(v1);
    int64_t v4 = v3;
    int v6 = v5;
    char v8 = v7 & 1;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(v1 + 32))
    {
      if (((*(void *)(v1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_24;
      }
      if (*(_DWORD *)(v1 + 36) != v6) {
        goto LABEL_25;
      }
      uint64_t v9 = v37[23];
      id v10 = objc_allocWithZone((Class)SKHandle);
      swift_bridgeObjectRetain();
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v10 initWithString:v11];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      uint64_t v3 = sub_100013AC4(v4, v6, v8 & 1, v9);
      int64_t v4 = v3;
      int v6 = v12;
      char v8 = v13 & 1;
      if (!--v2)
      {
        uint64_t v14 = v37 + 2;
        sub_100015510(v3, v12, v13 & 1);
        sub_10018FE08(0, &qword_10047A048);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        v37[27] = isa;
        swift_release();
        v37[2] = v37;
        v37[3] = sub_100225F50;
        uint64_t v16 = swift_continuation_init();
        v37[18] = _NSConcreteStackBlock;
        v37[19] = 0x40000000;
        v37[20] = sub_10018A4F0;
        v37[21] = &unk_1004229A0;
        v37[22] = v16;
        objc_msgSend(v35, "removeInvitedHandles:completion:", isa);
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  else
  {
    uint64_t v17 = v0[25];
    uint64_t v18 = *(void *)(v17 + 16);
    if (!v18)
    {
      uint64_t v33 = (uint64_t (*)(void))v0[1];
      return v33();
    }
    unint64_t v38 = v0;
    id v36 = *(id *)(v0[24]
                + OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_presence);
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = sub_10001551C(v17);
    int64_t v19 = v3;
    int v21 = v20;
    char v23 = v22 & 1;
    while ((v19 & 0x8000000000000000) == 0 && v19 < 1 << *(unsigned char *)(v17 + 32))
    {
      if (((*(void *)(v17 + 56 + (((unint64_t)v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        goto LABEL_27;
      }
      if (*(_DWORD *)(v17 + 36) != v21) {
        goto LABEL_28;
      }
      uint64_t v24 = v0[25];
      id v25 = objc_allocWithZone((Class)SKHandle);
      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v25 initWithString:v26];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      uint64_t v3 = sub_100013AC4(v19, v21, v23 & 1, v24);
      int64_t v19 = v3;
      int v21 = v27;
      char v23 = v28 & 1;
      if (!--v18)
      {
        uint64_t v14 = v0 + 10;
        uint64_t v29 = v0[24];
        sub_100015510(v3, v27, v28 & 1);
        sub_10018FE08(0, &qword_10047A048);
        Class v30 = Array._bridgeToObjectiveC()().super.isa;
        v38[29] = v30;
        swift_release();
        uint64_t v31 = *(void *)(v29
                        + OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_localHandle);
        v38[10] = v38;
        v38[11] = sub_10022654C;
        uint64_t v32 = swift_continuation_init();
        v38[18] = _NSConcreteStackBlock;
        v38[19] = 0x40000000;
        v38[20] = sub_10018A4F0;
        v38[21] = &unk_1004229B8;
        v38[22] = v32;
        objc_msgSend(v36, "inviteHandles:fromSenderHandle:completion:", v30, v31);
LABEL_17:
        uint64_t v3 = (uint64_t)v14;
        return _swift_continuation_await(v3);
      }
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return _swift_continuation_await(v3);
}

uint64_t sub_100225F50()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 224) = v1;
  if (v1) {
    uint64_t v2 = sub_1002268BC;
  }
  else {
    uint64_t v2 = sub_100226060;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100226060()
{
  uint64_t v32 = v0;

  if (qword_10047F3A0 != -1) {
LABEL_21:
  }
    swift_once();
  uint64_t v1 = type metadata accessor for Logger();
  sub_10018A9A8(v1, (uint64_t)qword_10047F3A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    uint64_t v5 = _typeName(_:qualified:)();
    *(void *)(v0 + 144) = sub_10018A9E0(v5, v6, (uint64_t *)&v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v7 = Set.description.getter();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = sub_10018A9E0(v7, v9, (uint64_t *)&v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%{public}s] Removed handles: %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    Class v30 = (void *)v0;
    id v29 = *(id *)(*(void *)(v0 + 192)
                + OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_presence);
    uint64_t v31 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    int64_t v12 = sub_10001551C(v10);
    int v14 = v13;
    char v16 = v15 & 1;
    uint64_t v0 = v10 + 56;
    do
    {
      if (v12 < 0 || v12 >= 1 << *(unsigned char *)(v10 + 32))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (((*(void *)(v0 + (((unint64_t)v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_19;
      }
      if (*(_DWORD *)(v10 + 36) != v14) {
        goto LABEL_20;
      }
      uint64_t v17 = v30[25];
      id v18 = objc_allocWithZone((Class)SKHandle);
      swift_bridgeObjectRetain();
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v18 initWithString:v19];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      int64_t v20 = sub_100013AC4(v12, v14, v16 & 1, v17);
      int64_t v12 = v20;
      int v14 = v21;
      char v16 = v22 & 1;
      --v11;
    }
    while (v11);
    uint64_t v23 = v30[24];
    sub_100015510(v20, v21, v22 & 1);
    sub_10018FE08(0, &qword_10047A048);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    v30[29] = isa;
    swift_release();
    uint64_t v25 = *(void *)(v23
                    + OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_localHandle);
    v30[10] = v30;
    v30[11] = sub_10022654C;
    uint64_t v26 = swift_continuation_init();
    v30[18] = _NSConcreteStackBlock;
    v30[19] = 0x40000000;
    v30[20] = sub_10018A4F0;
    v30[21] = &unk_1004229B8;
    v30[22] = v26;
    objc_msgSend(v29, "inviteHandles:fromSenderHandle:completion:", isa, v25);
    return _swift_continuation_await(v30 + 10);
  }
  else
  {
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
}

uint64_t sub_10022654C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 240) = v1;
  if (v1) {
    uint64_t v2 = sub_10022692C;
  }
  else {
    uint64_t v2 = sub_10022665C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10022665C()
{
  uint64_t v13 = v0;

  if (qword_10047F3A0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10018A9A8(v1, (uint64_t)qword_10047F3A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    uint64_t v5 = _typeName(_:qualified:)();
    *(void *)(v0 + 144) = sub_10018A9E0(v5, v6, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v7 = Set.description.getter();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = sub_10018A9E0(v7, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%{public}s] Invited handles: %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1002268BC()
{
  swift_willThrow();

  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10022692C()
{
  swift_willThrow();

  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10022699C()
{
  return sub_1002269C4();
}

uint64_t sub_1002269B0()
{
  return sub_1002269C4();
}

uint64_t sub_1002269C4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

char *sub_100226A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  uint64_t v5 = sub_100013A80(&qword_100479F88);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  BOOL v44 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100013A80(&qword_100479F80);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v9 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v12);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v13 - 8);
  uint64_t v39 = OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_queue;
  v38[1] = sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
  uint64_t v14 = v4;
  static DispatchQoS.unspecified.getter();
  uint64_t v52 = _swiftEmptyArrayStorage;
  sub_100015B28((unint64_t *)&qword_10047A1F8, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100013A80(&qword_10047A200);
  sub_1000155BC((unint64_t *)&qword_10047A208, &qword_10047A200);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v40);
  *(void *)(v38[2] + v39) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v14[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_members] = &_swiftEmptySetSingleton;
  char v15 = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      sub_10022EFCC((unint64_t)_swiftEmptyArrayStorage);
    }
    else {
      char v15 = &_swiftEmptySetSingleton;
    }
  }
  char v16 = &v14[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource__presentDevices];
  uint64_t v52 = v15;
  sub_100013A80(&qword_100479EC0);
  uint64_t v17 = v41;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v16, v17, v43);
  id v18 = &v14[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource__presentHandles];
  uint64_t v52 = &_swiftEmptySetSingleton;
  sub_100013A80(qword_100479ED0);
  NSString v19 = v44;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v18, v19, v46);
  id v20 = objc_allocWithZone((Class)SKHandle);
  swift_bridgeObjectRetain();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = [v20 initWithString:v21];

  *(void *)&v14[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_localHandle] = v22;
  uint64_t v23 = &v14[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_presenceIdentifier];
  uint64_t v24 = v50;
  *(void *)uint64_t v23 = v49;
  *((void *)v23 + 1) = v24;
  id v25 = objc_allocWithZone((Class)SKPresenceOptions);
  swift_bridgeObjectRetain();
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 initWithServiceIdentifier:v26];

  [v27 setIsPersonal:0];
  id v28 = objc_allocWithZone((Class)IDSURI);
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v30 = [v28 initWithPrefixedURI:v29];

  [v27 setClientSpecifiedURI:v30];
  id v31 = objc_allocWithZone((Class)SKPresence);
  id v32 = v27;
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v34 = [v31 initWithPresenceIdentifier:v33 options:v32];

  *(void *)&v14[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_presence] = v34;
  id v35 = (objc_class *)type metadata accessor for PresenceDataSource();
  v51.id receiver = v14;
  v51.super_class = v35;
  id v36 = (char *)objc_msgSendSuper2(&v51, "init");
  [*(id *)&v36[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_presence] addDelegate:v36 queue:*(void *)&v36[OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_queue]];

  return v36;
}

uint64_t sub_100227088(uint64_t a1, uint64_t a2)
{
  v3[39] = a2;
  v3[40] = v2;
  v3[38] = a1;
  v3[41] = swift_getObjectType();
  return _swift_task_switch(sub_1002270FC, 0, 0);
}

uint64_t sub_1002270FC()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[38];
  sub_100013A80(&qword_100479F68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
  *(void *)(inited + 32) = 25705;
  *(void *)(inited + 40) = 0xE200000000000000;
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v1;
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1001FA23C(inited);
  v0[42] = v5;
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC12mediaremotedP33_5F812221C055B7907E48F2E367000FFE18PresenceDataSource_presence);
  v0[43] = v6;
  sub_100227924(v5);
  id v7 = objc_allocWithZone((Class)SKPresencePayload);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithDictionary:isa];
  v0[44] = v9;

  v0[2] = v0;
  v0[3] = sub_1002272C8;
  uint64_t v10 = swift_continuation_init();
  v0[26] = _NSConcreteStackBlock;
  v0[27] = 0x40000000;
  v0[28] = sub_10018A4F0;
  v0[29] = &unk_100422588;
  v0[30] = v10;
  [v6 assertPresenceWithPresencePayload:v9 completion:v0 + 26];
  return _swift_continuation_await(v0 + 2);
}