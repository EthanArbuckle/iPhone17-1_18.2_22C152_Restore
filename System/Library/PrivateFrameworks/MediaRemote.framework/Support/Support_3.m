_OWORD *sub_1002B9FA8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  long long v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  long long v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;

  v6 = (int *)type metadata accessor for HostedRoutingSession(0);
  v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100013A80(&qword_100479530);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = v6[7];
    v11 = (_OWORD *)((char *)a1 + v10);
    v12 = (_OWORD *)((char *)a2 + v10);
    v13 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
    v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100013A80(&qword_1004794C0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      v16 = v12[1];
      *v11 = *v12;
      v11[1] = v16;
      *((void *)v11 + 4) = *((void *)v12 + 4);
      *(void *)((char *)v11 + 37) = *(void *)((char *)v12 + 37);
      v17 = *((void *)v12 + 7);
      *((void *)v11 + 6) = *((void *)v12 + 6);
      *((void *)v11 + 7) = v17;
      v18 = *(int *)(v13 + 36);
      v19 = (char *)v11 + v18;
      v46 = v7;
      v20 = (char *)v12 + v18;
      v21 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo();
      v22 = v20;
      v7 = v46;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v22, v21);
      v23 = *(int *)(v13 + 40);
      v24 = (char *)v11 + v23;
      v25 = (char *)v12 + v23;
      v26 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v27 = v6[8];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = type metadata accessor for RoutingControls();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
    *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
    *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
    v31 = v6[12];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    v34 = v6[13];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
    v38 = v6[15];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = type metadata accessor for RoutingSession.HostInfo();
    v42 = *(void *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = sub_100013A80(&qword_1004794B8);
      memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v44 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v44) = *(void *)((char *)a2 + v44);
  return a1;
}

void *sub_1002BA408(void *a1, void *a2, uint64_t a3)
{
  v6 = (int *)type metadata accessor for HostedRoutingSession(0);
  uint64_t v7 = *((void *)v6 - 1);
  v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1002B0524((uint64_t)a1, type metadata accessor for HostedRoutingSession);
      goto LABEL_7;
    }
    uint64_t v108 = a3;
    uint64_t v19 = a2[1];
    *a1 = *a2;
    a1[1] = v19;
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    swift_bridgeObjectRelease();
    a1[3] = a2[3];
    swift_bridgeObjectRelease();
    uint64_t v20 = v6[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    uint64_t v23 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
    uint64_t v24 = *(void *)(v23 - 8);
    v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    int v26 = v25(v21, 1, v23);
    int v27 = v25(v22, 1, v23);
    if (v26)
    {
      if (!v27)
      {
        long long v28 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v28;
        *((void *)v21 + 4) = *((void *)v22 + 4);
        *(void *)(v21 + 37) = *(void *)(v22 + 37);
        uint64_t v29 = *((void *)v22 + 7);
        *((void *)v21 + 6) = *((void *)v22 + 6);
        *((void *)v21 + 7) = v29;
        uint64_t v30 = *(int *)(v23 + 36);
        v31 = &v21[v30];
        v32 = &v22[v30];
        uint64_t v33 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        uint64_t v34 = *(int *)(v23 + 40);
        v35 = &v21[v34];
        v36 = &v22[v34];
        uint64_t v37 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v27)
      {
        uint64_t v93 = *((void *)v22 + 1);
        *(void *)v21 = *(void *)v22;
        *((void *)v21 + 1) = v93;
        swift_bridgeObjectRelease();
        uint64_t v94 = *((void *)v22 + 3);
        *((void *)v21 + 2) = *((void *)v22 + 2);
        *((void *)v21 + 3) = v94;
        swift_bridgeObjectRelease();
        int v95 = *((_DWORD *)v22 + 10);
        char v96 = v22[44];
        uint64_t v97 = *((void *)v21 + 4);
        uint64_t v98 = *((unsigned int *)v21 + 10);
        *((void *)v21 + 4) = *((void *)v22 + 4);
        *((_DWORD *)v21 + 10) = v95;
        unsigned __int8 v99 = v21[44];
        v21[44] = v96;
        sub_1001DDF44(v97, v98, v99);
        *((void *)v21 + 6) = *((void *)v22 + 6);
        swift_release();
        *((void *)v21 + 7) = *((void *)v22 + 7);
        swift_bridgeObjectRelease();
        uint64_t v100 = *(int *)(v23 + 36);
        v101 = &v21[v100];
        v102 = &v22[v100];
        uint64_t v103 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 40))(v101, v102, v103);
        uint64_t v104 = *(int *)(v23 + 40);
        v105 = &v21[v104];
        v106 = &v22[v104];
        uint64_t v107 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 40))(v105, v106, v107);
LABEL_19:
        uint64_t v67 = v6[8];
        v68 = (char *)a1 + v67;
        v69 = (char *)a2 + v67;
        uint64_t v70 = type metadata accessor for RoutingControls();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
        *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
        swift_bridgeObjectRelease();
        *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
        swift_bridgeObjectRelease();
        uint64_t v71 = v6[11];
        v72 = (void *)((char *)a1 + v71);
        v73 = (void *)((char *)a2 + v71);
        uint64_t v75 = *v73;
        uint64_t v74 = v73[1];
        void *v72 = v75;
        v72[1] = v74;
        swift_bridgeObjectRelease();
        uint64_t v76 = v6[12];
        v77 = (char *)a1 + v76;
        v78 = (char *)a2 + v76;
        *(_DWORD *)v77 = *(_DWORD *)v78;
        v77[4] = v78[4];
        uint64_t v79 = v6[13];
        v80 = (char *)a1 + v79;
        v81 = (char *)a2 + v79;
        uint64_t v82 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 40))(v80, v81, v82);
        *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
        uint64_t v83 = v6[15];
        v84 = (char *)a1 + v83;
        v85 = (char *)a2 + v83;
        uint64_t v86 = type metadata accessor for RoutingSession.HostInfo();
        uint64_t v87 = *(void *)(v86 - 8);
        v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
        int v89 = v88(v84, 1, v86);
        int v90 = v88(v85, 1, v86);
        if (v89)
        {
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v84, v85, v86);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
LABEL_25:
            a3 = v108;
            *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
            goto LABEL_26;
          }
        }
        else
        {
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v84, v85, v86);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v86);
        }
        uint64_t v91 = sub_100013A80(&qword_1004794B8);
        memcpy(v84, v85, *(void *)(*(void *)(v91 - 8) + 64));
        goto LABEL_25;
      }
      sub_1002B0524((uint64_t)v21, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
    }
    uint64_t v66 = sub_100013A80(&qword_1004794C0);
    memcpy(v21, v22, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v18 = sub_100013A80(&qword_100479530);
    memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_26;
  }
  long long v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  uint64_t v12 = v6[7];
  v13 = (_OWORD *)((char *)a1 + v12);
  v14 = (_OWORD *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100013A80(&qword_1004794C0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    long long v38 = v14[1];
    _OWORD *v13 = *v14;
    v13[1] = v38;
    *((void *)v13 + 4) = *((void *)v14 + 4);
    *(void *)((char *)v13 + 37) = *(void *)((char *)v14 + 37);
    uint64_t v39 = *((void *)v14 + 7);
    *((void *)v13 + 6) = *((void *)v14 + 6);
    *((void *)v13 + 7) = v39;
    uint64_t v40 = *(int *)(v15 + 36);
    uint64_t v109 = a3;
    v41 = (char *)v13 + v40;
    v42 = (char *)v14 + v40;
    uint64_t v43 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
    uint64_t v44 = *(int *)(v15 + 40);
    v45 = (char *)v13 + v44;
    v46 = (char *)v14 + v44;
    uint64_t v47 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo();
    v48 = v45;
    a3 = v109;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v48, v46, v47);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v49 = v6[8];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  uint64_t v52 = type metadata accessor for RoutingControls();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
  uint64_t v53 = v6[12];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  *(_DWORD *)v54 = *(_DWORD *)v55;
  v54[4] = v55[4];
  uint64_t v56 = v6[13];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  uint64_t v59 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
  *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
  uint64_t v60 = v6[15];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  uint64_t v63 = type metadata accessor for RoutingSession.HostInfo();
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = sub_100013A80(&qword_1004794B8);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_26:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002BADD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002BADEC);
}

uint64_t sub_1002BADEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100013A80(&qword_100479530);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1002BAEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002BAEC4);
}

uint64_t sub_1002BAEC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100013A80(&qword_100479530);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1002BAF84()
{
  sub_1002B5938(319, (unint64_t *)&unk_10047C950, (void (*)(uint64_t))type metadata accessor for HostedRoutingSession);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1002BB090()
{
  sub_100013A80(&qword_100478690);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003C9F60;
  uint64_t result = kMRMediaRemoteOriginNowPlayingApplicationDidChangeNotification;
  if (!kMRMediaRemoteOriginNowPlayingApplicationDidChangeNotification)
  {
    __break(1u);
    goto LABEL_14;
  }
  *(void *)(v0 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 40) = v2;
  uint64_t result = kMRMediaRemoteOriginNowPlayingApplicationClientStateDidChange;
  if (!kMRMediaRemoteOriginNowPlayingApplicationClientStateDidChange)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(void *)(v0 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 56) = v3;
  uint64_t result = kMRMediaRemoteOriginNowPlayingPlayerDidChange;
  if (!kMRMediaRemoteOriginNowPlayingPlayerDidChange)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(void *)(v0 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 72) = v4;
  uint64_t result = kMRMediaRemoteOriginNowPlayingApplicationIsPlayingDidChangeNotification;
  if (!kMRMediaRemoteOriginNowPlayingApplicationIsPlayingDidChangeNotification)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(void *)(v0 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 88) = v5;
  uint64_t result = kMROriginNowPlayingPlaybackQueueChangedNotification;
  if (!kMROriginNowPlayingPlaybackQueueChangedNotification)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(void *)(v0 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 104) = v6;
  uint64_t result = kMROriginPlaybackQueueContentItemsChangedNotification;
  if (!kMROriginPlaybackQueueContentItemsChangedNotification)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(void *)(v0 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 120) = v7;
  uint64_t result = kMROriginPlaybackQueueContentItemArtworkChangedNotification;
  if (!kMROriginPlaybackQueueContentItemArtworkChangedNotification)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(void *)(v0 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 136) = v8;
  uint64_t result = kMRMediaRemoteOriginSupportedCommandsDidChangeNotification;
  if (!kMRMediaRemoteOriginSupportedCommandsDidChangeNotification)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(void *)(v0 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 152) = v9;
  uint64_t result = kMRMediaRemoteOriginNowPlayingPlayerStateDidChange;
  if (!kMRMediaRemoteOriginNowPlayingPlayerStateDidChange)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  *(void *)(v0 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 168) = v10;
  uint64_t result = kMRMediaRemoteOriginDidRegisterNotification;
  if (!kMRMediaRemoteOriginDidRegisterNotification)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(void *)(v0 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 184) = v11;
  uint64_t result = kMRMediaRemoteOriginDidUnregisterNotification;
  if (kMRMediaRemoteOriginDidUnregisterNotification)
  {
    uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v0 + 192) = result;
    *(void *)(v0 + 200) = v12;
    qword_1004839D8 = v0;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

id sub_1002BB210()
{
  sub_100013A80(&qword_100478DC8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003C5F10;
  v1 = (void *)MRAVEndpointVolumeDidChangeNotification;
  uint64_t v2 = (void *)MRAVEndpointVolumeControlCapabilitiesDidChangeNotification;
  *(void *)(v0 + 32) = MRAVEndpointVolumeDidChangeNotification;
  *(void *)(v0 + 40) = v2;
  id v6 = (id)MRAVEndpointDeviceInfoDidChangeNotification;
  *(void *)(v0 + 48) = MRAVEndpointDeviceInfoDidChangeNotification;
  qword_1004839E8 = v0;
  id v3 = v1;
  id v4 = v2;

  return v6;
}

id sub_1002BB2AC()
{
  swift_beginAccess();
  v1 = *(void **)(v0 + 32);

  return v1;
}

void sub_1002BB2F0(uint64_t a1)
{
  swift_beginAccess();
  id v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

uint64_t (*sub_1002BB338())()
{
  return j__swift_endAccess;
}

uint64_t sub_1002BB38C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for RoutingMode();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1002BB410(unsigned char *a1)
{
  uint64_t v3 = type metadata accessor for RoutingMode();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v14[-v8];
  uint64_t v10 = v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode;
  swift_beginAccess();
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
  v11(v9, v10, v3);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 24))(v10, a1, v3);
  swift_endAccess();
  v11(v7, v10, v3);
  sub_1002F14AC(&qword_100478DA8, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
  LOBYTE(v10) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v12(v7, v3);
  if ((v10 & 1) == 0) {
    sub_1002CA060();
  }
  v12(a1, v3);
  return ((uint64_t (*)(unsigned char *, uint64_t))v12)(v9, v3);
}

void (*sub_1002BB624(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = type metadata accessor for RoutingMode();
  v3[4] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[5] = v5;
  size_t v7 = *(void *)(v5 + 64);
  v3[6] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[7] = v8;
  uint64_t v9 = v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode;
  swift_beginAccess();
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
  v3[8] = v10;
  v3[9] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v10(v8, v9, v4);
  return sub_1002BB740;
}

void sub_1002BB740(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = *(unsigned char **)(*a1 + 48);
  uint64_t v3 = *(void **)(*a1 + 56);
  if (a2)
  {
    uint64_t v5 = *(void *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 40);
    (*(void (**)(void, void, uint64_t))(v2 + 64))(*(void *)(v2 + 48), *(void *)(v2 + 56), v5);
    sub_1002BB410(v4);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    sub_1002BB410(*(unsigned char **)(v2 + 56));
  }
  free(v3);
  free(v4);

  free((void *)v2);
}

uint64_t sub_1002BB7EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  size_t v7 = (uint64_t *)((char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions);
  swift_beginAccess();
  uint64_t v13 = *v12;
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1002D5A40(a1, v13);
  uint64_t result = swift_bridgeObjectRelease();
  if (a1) {
    return result;
  }
  uint64_t v15 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  swift_retain_n();
  uint64_t v16 = Logger.logObject.getter();
  int v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, (os_log_type_t)v17))
  {
    uint64_t v62 = v5;
    int v65 = v17;
    os_log_t v67 = v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    v69[0] = v64;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v19 = _typeName(_:qualified:)();
    v68 = (void *)sub_10018A9E0(v19, v20, v69);
    uint64_t v63 = v69;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v66 = (uint8_t *)v18;
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v21 = *v12;
    int64_t v22 = *(void *)(*v12 + 16);
    if (v22)
    {
      v58 = v11;
      uint64_t v59 = v9;
      uint64_t v60 = v8;
      v61 = v12;
      v68 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100014688(0, v22, 0);
      uint64_t v23 = *(unsigned __int8 *)(v62 + 80);
      uint64_t v57 = v21;
      uint64_t v24 = v21 + ((v23 + 32) & ~v23);
      uint64_t v25 = *(void *)(v62 + 72);
      int v26 = v68;
      do
      {
        sub_1002F2874(v24, (uint64_t)v7, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v28 = *v7;
        uint64_t v27 = v7[1];
        swift_bridgeObjectRetain();
        sub_1002F5F00((uint64_t)v7, type metadata accessor for HostedRoutingSourceSession);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100014688(0, v26[2] + 1, 1);
          int v26 = v68;
        }
        unint64_t v30 = v26[2];
        unint64_t v29 = v26[3];
        if (v30 >= v29 >> 1)
        {
          sub_100014688(v29 > 1, v30 + 1, 1);
          int v26 = v68;
        }
        v26[2] = v30 + 1;
        v31 = &v26[2 * v30];
        v31[4] = v28;
        v31[5] = v27;
        v24 += v25;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      uint64_t v8 = v60;
      uint64_t v12 = v61;
      uint64_t v11 = v58;
      uint64_t v9 = v59;
    }
    v32 = v66;
    uint64_t v33 = Array.description.getter();
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    v68 = (void *)sub_10018A9E0(v33, v35, v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v36 = v67;
    _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v65, "[%s] setSessions - value: %s", v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1002C5F2C();
  uint64_t v37 = v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v38 = *(void *)(v37 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v40 = *v12;
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8);
    swift_bridgeObjectRetain();
    v41(v2, v40, ObjectType, v38);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  v42 = (uint64_t *)(v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers);
  swift_beginAccess();
  uint64_t v43 = *v42;
  uint64_t v44 = *v42 + 64;
  uint64_t v45 = 1 << *(unsigned char *)(*v42 + 32);
  uint64_t v46 = -1;
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  unint64_t v47 = v46 & *(void *)(*v42 + 64);
  int64_t v48 = (unint64_t)(v45 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v49 = 0;
  while (1)
  {
    if (v47)
    {
      unint64_t v50 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      unint64_t v51 = v50 | (v49 << 6);
      goto LABEL_19;
    }
    int64_t v52 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v52 >= v48) {
      goto LABEL_39;
    }
    unint64_t v53 = *(void *)(v44 + 8 * v52);
    ++v49;
    if (!v53)
    {
      int64_t v49 = v52 + 1;
      if (v52 + 1 >= v48) {
        goto LABEL_39;
      }
      unint64_t v53 = *(void *)(v44 + 8 * v49);
      if (!v53)
      {
        int64_t v49 = v52 + 2;
        if (v52 + 2 >= v48) {
          goto LABEL_39;
        }
        unint64_t v53 = *(void *)(v44 + 8 * v49);
        if (!v53)
        {
          int64_t v49 = v52 + 3;
          if (v52 + 3 >= v48) {
            goto LABEL_39;
          }
          unint64_t v53 = *(void *)(v44 + 8 * v49);
          if (!v53)
          {
            int64_t v49 = v52 + 4;
            if (v52 + 4 >= v48) {
              goto LABEL_39;
            }
            unint64_t v53 = *(void *)(v44 + 8 * v49);
            if (!v53) {
              break;
            }
          }
        }
      }
    }
LABEL_38:
    unint64_t v47 = (v53 - 1) & v53;
    unint64_t v51 = __clz(__rbit64(v53)) + (v49 << 6);
LABEL_19:
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v43 + 56) + 16 * v51))(result);
  }
  int64_t v54 = v52 + 5;
  if (v54 >= v48)
  {
LABEL_39:
    swift_release();
    v55 = *(void (**)(uint64_t))(**(void **)(v2
                                                       + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore)
                                         + 272);
    swift_retain();
    uint64_t v56 = swift_bridgeObjectRetain();
    v55(v56);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  unint64_t v53 = *(void *)(v44 + 8 * v54);
  if (v53)
  {
    int64_t v49 = v54;
    goto LABEL_38;
  }
  while (1)
  {
    int64_t v49 = v54 + 1;
    if (__OFADD__(v54, 1)) {
      break;
    }
    if (v49 >= v48) {
      goto LABEL_39;
    }
    unint64_t v53 = *(void *)(v44 + 8 * v49);
    ++v54;
    if (v53) {
      goto LABEL_38;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1002BBEC8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100014688(0, v1, 0);
  uint64_t result = (void *)sub_10022EAC4(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v20 = v1;
  int v21 = v4;
  uint64_t v22 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v23 = v6;
    swift_retain();
    v11._countAndFlagsBits = sub_1002BDC70();
    String.append(_:)(v11);
    swift_release();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    unint64_t v13 = _swiftEmptyArrayStorage[2];
    unint64_t v12 = _swiftEmptyArrayStorage[3];
    if (v13 >= v12 >> 1) {
      uint64_t result = (void *)sub_100014688(v12 > 1, v13 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v13 + 1;
    v14 = &_swiftEmptyArrayStorage[2 * v13];
    v14[4] = 538976288;
    v14[5] = 0xE400000000000000;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v15 = *(void *)(v22 + 8 * v10);
    if ((v15 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v21;
    if (*(_DWORD *)(a1 + 36) != v21) {
      goto LABEL_27;
    }
    unint64_t v16 = v15 & (-2 << (v5 & 0x3F));
    if (v16)
    {
      int64_t v8 = __clz(__rbit64(v16)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v20;
    }
    else
    {
      unint64_t v17 = v10 + 1;
      unint64_t v18 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v20;
      if (v10 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v10)
          {
            unint64_t v19 = *(void *)(a1 + 80 + 8 * v10++);
            if (v19)
            {
              unint64_t v17 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v23 + 1;
    uint64_t v5 = v8;
    if (v23 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1002BC10C(uint64_t a1)
{
  uint64_t v44 = type metadata accessor for RoutingInteraction();
  uint64_t v3 = *(void *)(v44 - 8);
  uint64_t v4 = __chkstk_darwin(v44);
  uint64_t v43 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v42 = (char *)v32 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  int64_t v8 = _swiftEmptyArrayStorage;
  if (!v7) {
    return (uint64_t)v8;
  }
  v32[1] = v1;
  int64_t v49 = _swiftEmptyArrayStorage;
  sub_100014688(0, v7, 0);
  uint64_t result = sub_1001B9870(a1);
  uint64_t v11 = result;
  uint64_t v12 = 0;
  uint64_t v13 = a1 + 64;
  uint64_t v38 = v3 + 32;
  uint64_t v39 = v3 + 16;
  uint64_t v40 = v3;
  uint64_t v41 = a1;
  uint64_t v36 = a1 + 64;
  uint64_t v37 = v3 + 8;
  uint64_t v33 = a1 + 80;
  int64_t v34 = v7;
  uint64_t v35 = v10;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v16 = (unint64_t)v11 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_26;
    }
    uint64_t v17 = v40;
    uint64_t v18 = *(void *)(a1 + 48) + *(void *)(v40 + 72) * v11;
    unint64_t v19 = v42;
    uint64_t v20 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v42, v18, v44);
    int v21 = v43;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v43, v19, v20);
    uint64_t v47 = 538976288;
    unint64_t v48 = 0xE400000000000000;
    sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    unint64_t v45 = v48;
    uint64_t v46 = v47;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v20);
    int64_t v8 = v49;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_100014688(0, v8[2] + 1, 1);
      int64_t v8 = v49;
    }
    unint64_t v24 = v8[2];
    unint64_t v23 = v8[3];
    if (v24 >= v23 >> 1)
    {
      uint64_t result = sub_100014688(v23 > 1, v24 + 1, 1);
      int64_t v8 = v49;
    }
    v8[2] = v24 + 1;
    uint64_t v25 = &v8[2 * v24];
    unint64_t v26 = v45;
    v25[4] = v46;
    v25[5] = v26;
    a1 = v41;
    int64_t v14 = 1 << *(unsigned char *)(v41 + 32);
    if (v11 >= v14) {
      goto LABEL_27;
    }
    uint64_t v13 = v36;
    uint64_t v27 = *(void *)(v36 + 8 * v16);
    if ((v27 & (1 << v11)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v10) = v35;
    if (*(_DWORD *)(v41 + 36) != v35) {
      goto LABEL_29;
    }
    unint64_t v28 = v27 & (-2 << (v11 & 0x3F));
    if (v28)
    {
      int64_t v14 = __clz(__rbit64(v28)) | v11 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v34;
    }
    else
    {
      unint64_t v29 = v16 + 1;
      unint64_t v30 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v34;
      if (v16 + 1 < v30)
      {
        unint64_t v31 = *(void *)(v36 + 8 * v29);
        if (v31)
        {
LABEL_22:
          int64_t v14 = __clz(__rbit64(v31)) + (v29 << 6);
        }
        else
        {
          while (v30 - 2 != v16)
          {
            unint64_t v31 = *(void *)(v33 + 8 * v16++);
            if (v31)
            {
              unint64_t v29 = v16 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v12;
    uint64_t v11 = v14;
    if (v12 == v15) {
      return (uint64_t)v8;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1002BC4D4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100014688(0, v1, 0);
  uint64_t result = (void *)sub_10022EAC4(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v4;
  uint64_t v23 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    swift_retain();
    uint64_t v24 = sub_1001B4174();
    uint64_t v12 = v11;
    uint64_t result = (void *)swift_release();
    unint64_t v13 = _swiftEmptyArrayStorage[2];
    unint64_t v14 = _swiftEmptyArrayStorage[3];
    if (v13 >= v14 >> 1) {
      uint64_t result = (void *)sub_100014688(v14 > 1, v13 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v13 + 1;
    int64_t v15 = &_swiftEmptyArrayStorage[2 * v13];
    v15[4] = v24;
    v15[5] = v12;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v10);
    if ((v16 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v5 & 0x3F));
    if (v17)
    {
      int64_t v8 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v21;
    }
    else
    {
      unint64_t v18 = v10 + 1;
      unint64_t v19 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v21;
      if (v10 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v10)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v10++);
            if (v20)
            {
              unint64_t v18 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v6;
    uint64_t v5 = v8;
    if (v6 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1002BC6F8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002BC744(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  sub_1002BB7EC(v4);
  return swift_bridgeObjectRelease();
}

void (*sub_1002BC7AC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  swift_bridgeObjectRetain();
  return sub_1002BC834;
}

void sub_1002BC834(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  uint64_t v5 = *(void *)(v4 + v3);
  *(void *)(v4 + v3) = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1002BB7EC(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1002BB7EC(v5);
  }
  swift_bridgeObjectRelease();

  free(v2);
}

id sub_1002BC8B8()
{
  uint64_t v1 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource____lazy_storage___discoverySession;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource____lazy_storage___discoverySession);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource____lazy_storage___discoverySession);
  }
  else
  {
    id v4 = sub_1002BC944(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1002BC944(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v34 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v36 = v4;
  uint64_t v37 = v5;
  if (v14)
  {
    uint64_t v33 = v1;
    int64_t v15 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long aBlock = swift_slowAlloc();
    uint64_t v32 = v2;
    *(_DWORD *)int64_t v15 = 136315138;
    uint64_t v16 = _typeName(_:qualified:)();
    uint64_t v39 = (void *)sub_10018A9E0(v16, v17, (uint64_t *)&aBlock);
    uint64_t v2 = v32;
    uint64_t v1 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%s] discoverySession - initializing", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id result = [self discoverySessionWithEndpointFeatures:8 enableThrottling:0];
  uint64_t v19 = v38;
  if (result)
  {
    id v20 = result;
    [v20 setAlwaysAllowUpdates:1];
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    v42 = sub_1002F3A2C;
    uint64_t v43 = v21;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v41 = sub_1002BD010;
    *((void *)&v41 + 1) = &unk_1004283B0;
    int v22 = _Block_copy(&aBlock);
    swift_release();
    id v23 = [v20 addEndpointsAddedCallback:v22];
    _Block_release(v22);
    if (v23)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long aBlock = 0u;
      long long v41 = 0u;
    }
    sub_100009A08((uint64_t)&aBlock, &qword_100479F50);
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    v42 = sub_1002F3A64;
    uint64_t v43 = v24;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v41 = sub_1002BD010;
    *((void *)&v41 + 1) = &unk_1004283D8;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_release();
    id v26 = [v20 addEndpointsRemovedCallback:v25];
    _Block_release(v25);

    if (v26)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long aBlock = 0u;
      long long v41 = 0u;
    }
    uint64_t v27 = sub_100009A08((uint64_t)&aBlock, &qword_100479F50);
    unint64_t v28 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v19 + 280))(v27);
    v42 = sub_1002F7A30;
    uint64_t v43 = v19;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v41 = sub_100006760;
    *((void *)&v41 + 1) = &unk_100428400;
    unint64_t v29 = _Block_copy(&aBlock);
    swift_retain();
    unint64_t v30 = v34;
    static DispatchQoS.unspecified.getter();
    uint64_t v39 = _swiftEmptyArrayStorage;
    sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    unint64_t v31 = v36;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v31, v1);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v37);
    swift_release();
    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BD010(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_10018FE08(0, &qword_10047C9D0);
    uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  v3(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002BD098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v17 = (*(uint64_t (**)(void))(*(void *)result + 280))();
    uint64_t v18 = v9;
    aBlock[4] = a2;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100006760;
    aBlock[3] = a3;
    int64_t v15 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v16 = (void *)v17;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);
    swift_release();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
    return swift_release();
  }
  return result;
}

uint64_t sub_1002BD394()
{
  if (*v0) {
    return 0x7463656E6E6F632ELL;
  }
  else {
    return 0x65766F637369642ELL;
  }
}

uint64_t sub_1002BD404()
{
  if (*v0) {
    return 0x636E79732ELL;
  }
  else {
    return 0x65766F637369642ELL;
  }
}

uint64_t sub_1002BD440()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1002BD508(void *a1)
{
  uint64_t v3 = sub_100013A80((uint64_t *)&unk_10047BC50);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + 72);
  *(void *)(v1 + 72) = a1;
  id v7 = a1;
  id v8 = [v6 outputDevices];
  if (v8)
  {
    uint64_t v9 = v8;
    sub_10018FE08(0, (unint64_t *)&qword_100478370);
    uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = [v7 outputDevices];
  if (!v11)
  {
    if (!v10) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v12 = v11;
  sub_10018FE08(0, (unint64_t *)&qword_100478370);
  uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!v10)
  {
    if (!v13) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (!v13)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if ((*(unsigned char *)(v1 + 80) & 1) == 0) {
      goto LABEL_15;
    }
LABEL_14:

    return;
  }
  unint64_t v14 = swift_bridgeObjectRetain();
  unsigned __int8 v15 = sub_1002D5754(v14, v13);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if (v15 & 1) != 0 || (*(unsigned char *)(v1 + 80)) {
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v16 = sub_1001A6B94();
  sub_1001E71E8(v16, (uint64_t)v5, (uint64_t *)&unk_10047BC50);
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v17) == 1)
  {

    sub_100009A08((uint64_t)v5, (uint64_t *)&unk_10047BC50);
    return;
  }
  uint64_t v19 = (uint64_t)v7;
  id v20 = Logger.logObject.getter();
  int v21 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v20, (os_log_type_t)v21))
  {

LABEL_37:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v17);
    return;
  }
  os_log_t v55 = v20;
  int v53 = v21;
  uint64_t v22 = swift_slowAlloc();
  uint64_t v52 = swift_slowAlloc();
  uint64_t v57 = v52;
  *(_DWORD *)uint64_t v22 = 136315394;
  uint64_t v23 = _typeName(_:qualified:)();
  uint64_t v56 = sub_10018A9E0(v23, v24, &v57);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  int64_t v54 = (uint8_t *)v22;
  *(_WORD *)(v22 + 12) = 2080;
  id v25 = [(id)v19 outputDevices];
  if (!v25) {
    goto LABEL_39;
  }
  id v26 = v25;
  id v47 = (id)v19;
  uint64_t v48 = v18;
  uint64_t v49 = v17;
  sub_10018FE08(0, (unint64_t *)&qword_100478370);
  unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v50 = v6;
  unint64_t v51 = v5;
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    if (v19) {
      goto LABEL_21;
    }
LABEL_36:
    swift_bridgeObjectRelease_n();
    uint64_t v40 = v54;
    uint64_t v41 = Array.description.getter();
    unint64_t v43 = v42;
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_10018A9E0(v41, v43, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v44 = v47;

    swift_bridgeObjectRelease();
    os_log_t v45 = v55;
    _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v53, "[%s] updateWithEndpoint - updated topology: %s", v40, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = v51;
    uint64_t v18 = v48;
    uint64_t v17 = v49;
    goto LABEL_37;
  }
  uint64_t v19 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v19) {
    goto LABEL_36;
  }
LABEL_21:
  if (v19 >= 1)
  {
    uint64_t v28 = 0;
    unint64_t v29 = _swiftEmptyArrayStorage;
    do
    {
      if ((v27 & 0xC000000000000001) != 0) {
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v30 = *(id *)(v27 + 8 * v28 + 32);
      }
      id v31 = v30;
      id v32 = [v31 uid];
      if (v32)
      {
        uint64_t v33 = v32;
        uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v36 = v35;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v29 = sub_100229FF0(0, v29[2] + 1, 1, v29);
        }
        unint64_t v38 = v29[2];
        unint64_t v37 = v29[3];
        if (v38 >= v37 >> 1) {
          unint64_t v29 = sub_100229FF0((void *)(v37 > 1), v38 + 1, 1, v29);
        }
        v29[2] = v38 + 1;
        uint64_t v39 = &v29[2 * v38];
        v39[4] = v34;
        v39[5] = v36;
      }
      else
      {
      }
      ++v28;
    }
    while (v19 != v28);
    goto LABEL_36;
  }
  __break(1u);
LABEL_39:

  __break(1u);
}

void *sub_1002BDAD8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = [v5 uid];
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_100229FF0(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_100229FF0((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        unsigned __int8 v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1002BDC70()
{
  _StringGuts.grow(_:)(67);
  v1._countAndFlagsBits = 60;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x746E656469202D20;
  v3._object = (void *)0xEF203A7265696669;
  String.append(_:)(v3);
  uint64_t v4 = *(void *)(v0 + 48);
  id v5 = *(void **)(v0 + 56);
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0x3A6574617473202CLL;
  v7._object = (void *)0xE900000000000020;
  String.append(_:)(v7);
  unint64_t v8 = 0xEB00000000676E69;
  if (*(unsigned char *)(v0 + 16) != 1) {
    unint64_t v8 = 0xEA00000000006465;
  }
  if (*(unsigned char *)(v0 + 16)) {
    uint64_t v9 = 0x7463656E6E6F632ELL;
  }
  else {
    uint64_t v9 = 0x65766F637369642ELL;
  }
  if (*(unsigned char *)(v0 + 16)) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = 0xEB00000000646572;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x80000001003BA200;
  v12._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v12);
  uint64_t v13 = *(void *)(v0 + 32);
  unint64_t v14 = *(void **)(v0 + 40);
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x696F70646E65202CLL;
  v16._object = (void *)0xEC000000203A746ELL;
  String.append(_:)(v16);
  id v17 = *(id *)(v0 + 64);
  id v18 = [v17 description];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  int v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);

  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 62;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  return 0;
}

Swift::Int sub_1002BDECC()
{
  return Hasher._finalize()();
}

uint64_t sub_1002BDF2C()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002BDF88()
{
  return Hasher._finalize()();
}

uint64_t sub_1002BDFE4()
{
  return sub_1002BDC70();
}

uint64_t sub_1002BE008(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 48) == *(void *)(*(void *)a2 + 48)
    && *(void *)(*(void *)a1 + 56) == *(void *)(*(void *)a2 + 56))
  {
    return 1;
  }
  else
  {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

void sub_1002BE034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Swift::UInt v5 = *(void *)(a4 + 16);
  Hasher._combine(_:)(v5);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = a4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
}

Swift::Int sub_1002BE11C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  Hasher.init(_seed:)();
  sub_1002BE034((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_1002BE178(uint64_t a1)
{
  sub_1002BE034(a1, *v1, v1[1], v1[2]);
}

Swift::Int sub_1002BE184()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  Hasher.init(_seed:)();
  sub_1002BE034((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_1002BE1DC(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = a2[1];
  uint64_t v6 = (void *)a2[2];
  if (v3)
  {
    if (v5)
    {
      BOOL v7 = *a1 == *a2 && v3 == v5;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_8;
      }
    }
    return 0;
  }
  if (v5) {
    return 0;
  }
LABEL_8:

  return sub_1001EE450(v4, v6);
}

void sub_1002BE258(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v126 = v10;
  uint64_t v127 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  v128 = (uint64_t *)((char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  Swift::String v15 = (char *)&v120 - v14;
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier);
  swift_beginAccess();
  BOOL v21 = *v20 == a1 && v20[1] == a2;
  if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    return;
  }
  uint64_t v22 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v22, v16);
  swift_retain_n();
  Swift::String v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  int v25 = v24;
  BOOL v26 = os_log_type_enabled(v23, v24);
  v123 = v15;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    LODWORD(v124) = v25;
    uint64_t v28 = v27;
    uint64_t v122 = swift_slowAlloc();
    uint64_t v131 = v122;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t ObjectType = v6;
    uint64_t v29 = _typeName(_:qualified:)();
    uint64_t v129 = sub_10018A9E0(v29, v30, &v131);
    os_log_t v121 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    uint64_t v120 = v28 + 14;
    uint64_t v31 = *v20;
    unint64_t v32 = v20[1];
    swift_bridgeObjectRetain();
    uint64_t v129 = sub_10018A9E0(v31, v32, &v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    uint64_t v6 = ObjectType;
    swift_bridgeObjectRelease();
    os_log_t v33 = v121;
    _os_log_impl((void *)&_mh_execute_header, v121, (os_log_type_t)v124, "[%s] setActiveSessionIdentifier - value: %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v34 = (char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v35 = *((void *)v34 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v36 = *v20;
    uint64_t v37 = v20[1];
    unint64_t v38 = v9;
    uint64_t v39 = v20;
    uint64_t v40 = v6;
    uint64_t v41 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 24);
    swift_bridgeObjectRetain();
    v41(v3, v36, v37, ObjectType, v35);
    uint64_t v6 = v40;
    id v20 = v39;
    uint64_t v9 = v38;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  unint64_t v43 = (objc_class *)*v20;
  unint64_t v42 = (objc_class *)v20[1];
  swift_bridgeObjectRetain();
  id v44 = sub_1002A0458();
  if (v43 == v44->isa && v42 == v44[1].isa)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t v46 = swift_bridgeObjectRelease();
  if (v45)
  {
LABEL_15:
    id v47 = [self server];
    id v48 = [v47 routingServer];

    id v49 = [v48 systemEndpointController];
    if (v49)
    {
      uint64_t v131 = 0;
      unint64_t v132 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease();
      uint64_t v131 = 91;
      unint64_t v132 = 0xE100000000000000;
      v50._countAndFlagsBits = _typeName(_:qualified:)();
      String.append(_:)(v50);
      swift_bridgeObjectRelease();
      v51._countAndFlagsBits = 0xD000000000000017;
      v51._object = (void *)0x80000001003BA6A0;
      String.append(_:)(v51);
      id v52 = objc_allocWithZone((Class)MRUpdateActiveSystemEndpointRequest);
      NSString v53 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v54 = [v52 initWithOutputDeviceUID:0 type:0 reason:v53];

      [v49 updateSystemEndpointForRequest:v54];
      return;
    }
    goto LABEL_97;
  }
  os_log_t v121 = v44;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(*v3 + 328))(v46);
  uint64_t v56 = *(void *)(v55 + 16);
  if (v56)
  {
    uint64_t ObjectType = v6;
    uint64_t v57 = v55 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
    v58 = *(uint64_t (**)(uint64_t))(*v3 + 544);
    uint64_t v124 = *(void *)(v127 + 72);
    uint64_t v122 = v55;
    swift_bridgeObjectRetain();
    uint64_t v59 = v128;
    while (1)
    {
      uint64_t v60 = sub_1002F2874(v57, (uint64_t)v59, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v62 = *v59;
      uint64_t v61 = v59[1];
      if (v62 == v58(v60) && v61 == v63) {
        break;
      }
      char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v65) {
        goto LABEL_30;
      }
      uint64_t v59 = v128;
      sub_1002F5F00((uint64_t)v128, type metadata accessor for HostedRoutingSourceSession);
      v57 += v124;
      if (!--v56)
      {
        swift_bridgeObjectRelease();
        uint64_t v66 = 1;
        uint64_t v67 = (uint64_t)v123;
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease();
LABEL_30:
    uint64_t v67 = (uint64_t)v123;
    uint64_t v68 = v126;
    uint64_t v69 = (uint64_t)v128;
    swift_bridgeObjectRelease();
    sub_1002F39C4(v69, (uint64_t)v9, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v66 = 0;
  }
  else
  {
    uint64_t v66 = 1;
    uint64_t v67 = (uint64_t)v123;
LABEL_28:
    uint64_t v68 = v126;
  }
  uint64_t v70 = v127;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v9, v66, 1, v68);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v9, 1, v68) == 1) {
    goto LABEL_98;
  }
  sub_1002F39C4((uint64_t)v9, v67, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v71 = *(void *)(v67 + 24);
  if (!v71)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  uint64_t v72 = *(void *)(v67 + 16);
  v73 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess();
  uint64_t v74 = *v73;
  if (!*(void *)(v74 + 16))
  {
LABEL_42:
    sub_1002F5F00(v67, type metadata accessor for HostedRoutingSourceSession);
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v75 = sub_100013660(v72, v71);
  if ((v76 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  uint64_t v77 = *(void *)(*(void *)(v74 + 56) + 8 * v75);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v77 + 16) != 2)
  {
    uint64_t v90 = v67;
LABEL_69:
    sub_1002F5F00(v90, type metadata accessor for HostedRoutingSourceSession);
    swift_release();
    return;
  }
  v78 = self;
  id v79 = [v78 server];
  id v80 = [v79 routingServer];

  id v81 = [v80 systemEndpointController];
  if (!v81)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  id v82 = [v81 activeOutputDeviceUID:0];

  if (!v82) {
    goto LABEL_46;
  }
  uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v85 = v84;

  id v86 = [self localDeviceUID];
  uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v89 = v88;

  if (v83 == v87 && v85 == v89)
  {
    swift_bridgeObjectRelease();
LABEL_45:
    swift_bridgeObjectRelease();
LABEL_46:
    if (((Class)*v20 != v121->isa || (Class)v20[1] != v121[1].isa)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      id v92 = [v78 server];
      id v93 = [v92 routingServer];

      id v94 = [v93 systemEndpointController];
      if (!v94)
      {
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      if (*(unsigned char *)(v77 + 80)) {
        id v95 = [*(id *)(v77 + 64) resolvedOutputDevices];
      }
      else {
        id v95 = [*(id *)(v77 + 72) outputDevices];
      }
      id v97 = v95;
      uint64_t v9 = v123;
      if (v97)
      {
        sub_10018FE08(0, (unint64_t *)&qword_100478370);
        unint64_t v98 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        unint64_t v98 = (unint64_t)_swiftEmptyArrayStorage;
      }
      if (v98 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v112 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v112) {
          goto LABEL_89;
        }
        goto LABEL_60;
      }
      if (*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_60:
        if ((v98 & 0xC000000000000001) != 0) {
          goto LABEL_95;
        }
        if (*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_81:
          id v107 = *(id *)(v98 + 32);
          goto LABEL_82;
        }
        __break(1u);
        goto LABEL_88;
      }
LABEL_89:
      swift_bridgeObjectRelease();
      goto LABEL_90;
    }
    goto LABEL_68;
  }
  char v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v91) {
    goto LABEL_45;
  }
  if (*(unsigned char *)(v77 + 80)) {
    id v96 = [*(id *)(v77 + 64) resolvedOutputDevices];
  }
  else {
    id v96 = [*(id *)(v77 + 72) outputDevices];
  }
  id v99 = v96;
  uint64_t v100 = v99;
  if (v99)
  {
    sub_10018FE08(0, (unint64_t *)&qword_100478370);
    v101 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    v101 = _swiftEmptyArrayStorage;
  }
  __chkstk_darwin(v99);
  *(&v120 - 2) = v83;
  *(&v120 - 1) = v85;
  char v102 = sub_1002BF1D0((uint64_t (*)(id *))sub_1002F78A4, (uint64_t)(&v120 - 4), (unint64_t)v101);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v102)
  {
LABEL_68:
    uint64_t v90 = (uint64_t)v123;
    goto LABEL_69;
  }
  id v103 = [v78 server];
  id v104 = [v103 routingServer];

  id v94 = [v104 systemEndpointController];
  if (!v94)
  {
LABEL_102:
    __break(1u);
    return;
  }
  if (*(unsigned char *)(v77 + 80)) {
    id v105 = [*(id *)(v77 + 64) resolvedOutputDevices];
  }
  else {
    id v105 = [*(id *)(v77 + 72) outputDevices];
  }
  id v106 = v105;
  uint64_t v9 = v123;
  if (v106)
  {
    sub_10018FE08(0, (unint64_t *)&qword_100478370);
    unint64_t v98 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v98 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v98 >> 62)
  {
LABEL_88:
    swift_bridgeObjectRetain();
    uint64_t v113 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v113) {
      goto LABEL_89;
    }
    goto LABEL_79;
  }
  if (!*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_89;
  }
LABEL_79:
  if ((v98 & 0xC000000000000001) == 0)
  {
    if (!*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      sub_100009A08((uint64_t)v9, &qword_100479588);
      __break(1u);
      goto LABEL_99;
    }
    goto LABEL_81;
  }
LABEL_95:
  id v107 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_82:
  uint64_t v108 = v107;
  swift_bridgeObjectRelease();
  id v109 = [v108 uid];

  if (!v109)
  {
LABEL_90:
    uint64_t v111 = 0;
    goto LABEL_91;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v111 = v110;

LABEL_91:
  uint64_t v129 = 0;
  unint64_t v130 = 0xE000000000000000;
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease();
  uint64_t v129 = 91;
  unint64_t v130 = 0xE100000000000000;
  v114._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v114);
  swift_bridgeObjectRelease();
  v115._object = (void *)0x80000001003BA680;
  v115._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v115);
  if (v111)
  {
    NSString v116 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v116 = 0;
  }
  id v117 = objc_allocWithZone((Class)MRUpdateActiveSystemEndpointRequest);
  NSString v118 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v119 = [v117 initWithOutputDeviceUID:v116 type:0 reason:v118];

  [v94 updateSystemEndpointForRequest:v119];
  swift_release();

  sub_1002F5F00((uint64_t)v9, type metadata accessor for HostedRoutingSourceSession);
}

uint64_t sub_1002BF1D0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v15 = v7;
      char v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      char v11 = v10;

      if (v11)
      {
        swift_bridgeObjectRelease();
        char v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_1002BF308()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1002BF360(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  *uint64_t v5 = a1;
  v5[1] = a2;
  sub_1002BE258(v6, v7);
  return swift_bridgeObjectRelease();
}

void (*sub_1002BF3D4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_1002BF45C;
}

void sub_1002BF45C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v7 = (uint64_t *)(v5 + v4);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *uint64_t v7 = v3;
  v7[1] = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1002BE258(v9, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1002BE258(v9, v8);
  }
  swift_bridgeObjectRelease();

  free(v2);
}

uint64_t sub_1002BF4F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  v32[1] = *v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = __chkstk_darwin(v8);
  char v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)((char *)v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v14 = *(void **)((char *)v4
                   + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                   + 16);
  if (!a3)
  {
    if (!v14) {
      return result;
    }
    goto LABEL_20;
  }
  if (v14)
  {
    uint64_t v33 = v9;
    uint64_t v34 = v8;
    uint64_t v16 = *v13;
    uint64_t v15 = v13[1];
    if (a2)
    {
      if (!v15)
      {
        sub_1002F2830(a1, a2, (uint64_t)a3);
        sub_1002F2830(a1, a2, (uint64_t)a3);
        sub_1002F2830(v16, 0, (uint64_t)v14);
        goto LABEL_19;
      }
      BOOL v17 = v16 == a1 && v15 == a2;
      if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        sub_1002F2830(a1, a2, (uint64_t)a3);
        uint64_t v18 = a1;
        uint64_t v19 = a2;
LABEL_15:
        sub_1002F2830(v18, v19, (uint64_t)a3);
        sub_1002F2830(v16, v15, (uint64_t)v14);
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
        sub_1002F16C8(a1, a2, (uint64_t)a3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v33;
        uint64_t v8 = v34;
        goto LABEL_20;
      }
    }
    else if (v15)
    {
      sub_1002F2830(a1, 0, (uint64_t)a3);
      uint64_t v18 = a1;
      uint64_t v19 = 0;
      goto LABEL_15;
    }
    char v20 = sub_1001EE450(a3, v14);
    sub_1002F2830(a1, a2, (uint64_t)a3);
    sub_1002F2830(a1, a2, (uint64_t)a3);
    sub_1002F2830(v16, v15, (uint64_t)v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1002F16C8(a1, a2, (uint64_t)a3);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v9 = v33;
    uint64_t v8 = v34;
    if (v20) {
      return result;
    }
  }
LABEL_20:
  uint64_t v21 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v21, v8);
  swift_retain_n();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v33 = v9;
    uint64_t v34 = v8;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315650;
    uint64_t v25 = _typeName(_:qualified:)();
    uint64_t v35 = sub_10018A9E0(v25, v26, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    if (v13[2] && (unint64_t v27 = v13[1]) != 0)
    {
      uint64_t v28 = *v13;
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v27 = 0xE300000000000000;
      uint64_t v28 = 7104878;
    }
    uint64_t v35 = sub_10018A9E0(v28, v27, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2080;
    if (v13[2])
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = Array.description.getter();
      unint64_t v31 = v30;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v31 = 0xE300000000000000;
      uint64_t v29 = 7104878;
    }
    uint64_t v35 = sub_10018A9E0(v29, v31, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%s] setActiveSessionElements - value: <SessionElements - groupIdentifier: %s, devices: %s", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return sub_1002C5F2C();
}

uint64_t sub_1002BF9E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  sub_1002BFA58(a1, a2, a3, a4, a5);
  return v10;
}

void sub_1002BFA58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v87 = a3;
  uint64_t v88 = a5;
  uint64_t v86 = a4;
  uint64_t v89 = a2;
  uint64_t v8 = sub_100013A80(&qword_100478278);
  __chkstk_darwin(v8 - 8);
  uint64_t v77 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v78 = *(void *)(v10 - 8);
  uint64_t v79 = v10;
  __chkstk_darwin(v10);
  char v76 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100013A80((uint64_t *)&unk_10047BF40);
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  __chkstk_darwin(v12);
  id v80 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v14 = *(void *)(v85 - 8);
  uint64_t v15 = __chkstk_darwin(v85);
  uint64_t v84 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v75 - v17;
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (void **)((char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6[2] = &_swiftEmptySetSingleton;
  v6[3] = &_swiftEmptySetSingleton;
  os_log_type_t v23 = (char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode;
  uint64_t v24 = enum case for RoutingMode.disabled(_:);
  uint64_t v25 = type metadata accessor for RoutingMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions) = _swiftEmptyArrayStorage;
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers) = &_swiftEmptyDictionarySingleton;
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)((char *)v6
            + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource____lazy_storage___discoverySession) = 0;
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemTypes) = &_swiftEmptySetSingleton;
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources) = &_swiftEmptyDictionarySingleton;
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints) = &_swiftEmptyDictionarySingleton;
  *(void *)((char *)v6
            + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_failedEndpointReconnectIntervals) = &_swiftEmptyDictionarySingleton;
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeEndpointObserver) = 0;
  unint64_t v26 = (void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  v26[1] = 0;
  v26[2] = 0;
  *unint64_t v26 = 0;
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_pendingInteractions) = &_swiftEmptyDictionarySingleton;
  unint64_t v27 = v88;
  void *v22 = v88;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v28 = v27;
  LOBYTE(v27) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline) = a1;
  uint64_t v88 = a1;
  swift_retain();
  uint64_t v29 = sub_1002A0458();
  uint64_t v30 = *((void *)v29 + 1);
  unint64_t v31 = (void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier);
  void *v31 = *(void *)v29;
  v31[1] = v30;
  v6[4] = v28;
  unint64_t v75 = v6 + 4;
  unint64_t v32 = self;
  id v83 = v28;
  swift_bridgeObjectRetain();
  id v33 = [v32 currentSettings];
  if (!v33)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v34 = v33;
  unsigned __int8 v35 = [v33 supportSystemEndpoints];

  *((unsigned char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_supportActiveSession) = v35;
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore) = v89;
  uint64_t v36 = enum case for RoutingSessionConfiguration.ItemType.standard(_:);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  uint64_t v38 = v85;
  v37(v18, enum case for RoutingSessionConfiguration.ItemType.standard(_:), v85);
  type metadata accessor for RoutingItemDataSource(0);
  uint64_t v39 = v84;
  v37(v84, v36, v38);
  uint64_t v40 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline;
  uint64_t v41 = *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline);
  swift_retain();
  swift_retain();
  swift_retain();
  id v42 = sub_1001A8C14();
  uint64_t v43 = sub_1001A8C40(v39, v41, (uint64_t)v6, (uint64_t)&off_100427F88, v42);
  id v44 = (id *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v90 = *v44;
  *id v44 = (id)0x8000000000000000;
  sub_1002F1304(v43, (uint64_t)v18, isUniquelyReferenced_nonNull_native);
  *id v44 = v90;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v38);
  swift_endAccess();
  uint64_t v46 = *(void (**)(void *, _UNKNOWN **))(**(void **)((char *)v6 + v40) + 200);
  swift_retain();
  swift_retain();
  v46(v6, &off_100427F78);
  swift_release();
  swift_release();
  *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate + 8) = v86;
  swift_unknownObjectWeakAssign();
  if (*((unsigned char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_supportActiveSession) != 1)
  {
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

    return;
  }
  id v47 = [self server];
  id v48 = [v47 routingServer];

  id v49 = [v48 systemEndpointController];
  if (!v49) {
    goto LABEL_17;
  }
  id v50 = [v49 activeOutputDeviceUID:0];

  if (v50)
  {
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v52;

    id v54 = [self localDeviceUID];
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v57 = v56;

    if (v51 == v55 && v53 == v57)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v58)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100013A80(&qword_100478690);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_1003C58B0;
        *(void *)(v59 + 32) = v51;
        *(void *)(v59 + 40) = v53;
        uint64_t v60 = (void *)((char *)v6
                       + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
        uint64_t v62 = *(void *)((char *)v6
                        + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
        uint64_t v61 = *(void *)((char *)v6
                        + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                        + 8);
        uint64_t v63 = *(void *)((char *)v6
                        + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                        + 16);
        *uint64_t v60 = 0;
        v60[1] = 0;
        v60[2] = v59;
        sub_1002F16C8(v62, v61, v63);
      }
    }
  }
  id v64 = [self defaultCenter];
  if (kMRMediaRemoteActiveSystemEndpointDidChangeNotification)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v65 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v66 = v76;
    NSNotificationCenter.publisher(for:object:)();

    swift_beginAccess();
    id v90 = (id)v6[4];
    id v67 = v90;
    uint64_t v68 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v69 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v77, 1, 1, v68);
    sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
    sub_1002F14AC((unint64_t *)&unk_10047BF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
    sub_1001BB4CC();
    id v70 = v67;
    uint64_t v72 = v79;
    uint64_t v71 = v80;
    Publisher.receive<A>(on:options:)();
    sub_100009A08(v69, &qword_100478278);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v66, v72);
    sub_1000155BC((unint64_t *)&qword_10047BF60, (uint64_t *)&unk_10047BF40);
    swift_retain();
    uint64_t v73 = v82;
    uint64_t v74 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v71, v73);
    *(void *)((char *)v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeEndpointObserver) = v74;
    swift_unknownObjectRelease();
    return;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_1002C04B0()
{
  uint64_t v1 = v0;
  (*(void (**)(uint64_t, _UNKNOWN **))(**(void **)(v0
                                                             + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline)
                                               + 208))(v0, &off_100427F78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = v0 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode;
  uint64_t v3 = type metadata accessor for RoutingMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001B9788(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate);
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource____lazy_storage___discoverySession));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1002F16C8(*(void *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements), *(void *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 8), *(void *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16));
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_1002C0658()
{
  sub_1002C04B0();

  return swift_deallocClassInstance();
}

uint64_t sub_1002C06B0(uint64_t a1)
{
  uint64_t v153 = *v1;
  uint64_t v158 = type metadata accessor for Logger();
  unint64_t v184 = *(void *)(v158 - 8);
  uint64_t v3 = __chkstk_darwin(v158);
  v149 = (char *)&v148 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v154 = (char *)&v148 - v5;
  uint64_t v167 = type metadata accessor for RoutingMode();
  uint64_t v6 = *(void *)(v167 - 8);
  uint64_t v7 = __chkstk_darwin(v167);
  v161 = (char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v166 = (char *)&v148 - v9;
  uint64_t v10 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v180 = (unint64_t)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v148 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  v173 = (char *)&v148 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v162 = (char *)&v148 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  os_log_type_t v23 = (char *)&v148 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  unint64_t v26 = (char *)&v148 - v25;
  __chkstk_darwin(v24);
  v174 = (char *)&v148 - v27;
  uint64_t v150 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemTypes;
  *(void *)((char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemTypes) = a1;
  swift_bridgeObjectRetain();
  uint64_t v28 = (uint64_t)v16;
  swift_bridgeObjectRelease();
  v177 = v1;
  uint64_t v29 = (void *)((char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources);
  swift_beginAccess();
  uint64_t v30 = *v29;
  uint64_t v31 = *(void *)(*v29 + 64);
  uint64_t v170 = *v29 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(v30 + 32);
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  else {
    uint64_t v33 = -1;
  }
  unint64_t v34 = v33 & v31;
  uint64_t v176 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline;
  int64_t v171 = (unint64_t)(v32 + 63) >> 6;
  uint64_t v186 = a1;
  uint64_t v187 = v11 + 16;
  uint64_t v181 = v11 + 32;
  uint64_t v185 = a1 + 56;
  unsigned int v169 = enum case for RoutingSessionConfiguration.ItemType.standard(_:);
  uint64_t v182 = v11;
  v168 = (void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  unsigned int v165 = enum case for RoutingMode.disabled(_:);
  v164 = (void (**)(char *, void, uint64_t))(v6 + 104);
  unsigned __int8 v35 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v36 = v26;
  v160 = v35;
  v156 = (void (**)(char *, uint64_t, uint64_t))(v184 + 16);
  v157 = (void (**)(char *, uint64_t))(v184 + 8);
  uint64_t v175 = v30;
  swift_bridgeObjectRetain_n();
  unint64_t v37 = 0;
  *(void *)&long long v38 = 136315138;
  long long v152 = v38;
  v151 = (char *)&type metadata for Any + 8;
  v178 = v16;
  v179 = v29;
  v188 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  v155 = v26;
  while (v34)
  {
    uint64_t v183 = (v34 - 1) & v34;
    unint64_t v184 = v37;
    unint64_t v40 = __clz(__rbit64(v34)) | (v37 << 6);
LABEL_28:
    uint64_t v45 = v182;
    uint64_t v46 = *(void *)(v182 + 72);
    id v47 = *(void (**)(char *, unint64_t, uint64_t))(v182 + 16);
    id v48 = v174;
    v47(v174, *(void *)(v175 + 48) + v46 * v40, v10);
    uint64_t v49 = (uint64_t)v36;
    uint64_t v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v45 + 32))(v36, v48, v10);
    if (*(void *)(v186 + 16))
    {
      uint64_t v51 = v186;
      sub_1002F14AC(&qword_100479510, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
      uint64_t v50 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v52 = -1 << *(unsigned char *)(v51 + 32);
      unint64_t v53 = v50 & ~v52;
      if ((*(void *)(v185 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53))
      {
        uint64_t v54 = ~v52;
        while (1)
        {
          v47(v23, *(void *)(v186 + 48) + v53 * v46, v10);
          sub_1002F14AC(&qword_100479518, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
          char v55 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v39 = (uint64_t (*)(char *, uint64_t))*v188;
          uint64_t v50 = ((uint64_t (*)(char *, uint64_t))*v188)(v23, v10);
          if (v55) {
            break;
          }
          unint64_t v53 = (v53 + 1) & v54;
          if (((*(void *)(v185 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53) & 1) == 0) {
            goto LABEL_33;
          }
        }
        uint64_t v36 = (char *)v49;
        goto LABEL_6;
      }
    }
LABEL_33:
    uint64_t v56 = *(void *)((char *)v177 + v176);
    unint64_t v57 = (*(uint64_t (**)(uint64_t))(*(void *)v56 + 112))(v50);
    if (v57 >> 62) {
      uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v36 = (char *)v49;
    swift_bridgeObjectRelease();
    if (v58)
    {
      uint64_t v39 = (uint64_t (*)(char *, uint64_t))*v188;
LABEL_6:
      v39(v36, v10);
      uint64_t v28 = (uint64_t)v178;
      uint64_t v29 = v179;
      goto LABEL_7;
    }
    uint64_t v59 = v49;
    uint64_t v60 = *v168;
    uint64_t v61 = v169;
    (*v168)(v23, v169, v10);
    char v62 = static RoutingSessionConfiguration.ItemType.== infix(_:_:)();
    v172 = *v188;
    v172((uint64_t)v23, v10);
    if (v62)
    {
      uint64_t v63 = (uint64_t)v162;
      v60(v162, v61, v10);
      uint64_t v64 = *v179;
      if (!*(void *)(*v179 + 16)) {
        goto LABEL_106;
      }
      swift_bridgeObjectRetain();
      unint64_t v65 = sub_1002EFE2C(v63);
      if ((v66 & 1) == 0) {
        goto LABEL_109;
      }
      uint64_t v67 = *(void *)(*(void *)(v64 + 56) + 8 * v65);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v68 = ((uint64_t (*)(uint64_t, uint64_t))v172)(v63, v10);
      uint64_t v69 = v166;
      (*(void (**)(uint64_t))(*(void *)v67 + 200))(v68);
      id v70 = v161;
      uint64_t v71 = v167;
      v163 = *v164;
      v163(v161, v165, v167);
      sub_1002F14AC(&qword_100478DA8, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
      char v72 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v73 = *v160;
      (*v160)(v70, v71);
      v73(v69, v71);
      uint64_t v28 = (uint64_t)v178;
      if (v72)
      {
        uint64_t v36 = (char *)v49;
        v172(v49, v10);
        swift_release();
      }
      else
      {
        uint64_t v159 = v67;
        uint64_t v84 = sub_1001A69C4();
        uint64_t v85 = v154;
        uint64_t v86 = v158;
        (*v156)(v154, v84, v158);
        uint64_t v87 = Logger.logObject.getter();
        os_log_type_t v88 = static os_log_type_t.default.getter();
        uint64_t v89 = v49;
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v90 = swift_slowAlloc();
          uint64_t v192 = swift_slowAlloc();
          *(_DWORD *)uint64_t v90 = v152;
          uint64_t v91 = _typeName(_:qualified:)();
          *(void *)(v90 + 4) = sub_10018A9E0(v91, v92, &v192);
          uint64_t v28 = (uint64_t)v178;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v87, v88, "[%s] updateWithItemTypes - disable routing mode for .standard", (uint8_t *)v90, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*v157)(v85, v86);
        id v93 = v172;
        id v94 = v166;
        v163(v166, v165, v167);
        (*(void (**)(char *))(*(void *)v159 + 208))(v94);
        swift_release();
        uint64_t v36 = (char *)v89;
        v93(v89, v10);
      }
      unint64_t v34 = v183;
      unint64_t v37 = v184;
      uint64_t v29 = v179;
    }
    else
    {
      uint64_t v74 = v179;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v75 = sub_1002EFE2C(v49);
      char v77 = v76;
      swift_bridgeObjectRelease();
      if (v77)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v79 = *v74;
        v191 = (void *)*v74;
        *uint64_t v74 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1002F1AE4();
          uint64_t v79 = (uint64_t)v191;
        }
        id v80 = v172;
        v172(*(void *)(v79 + 48) + v75 * v46, v10);
        uint64_t v81 = (uint64_t)v191;
        uint64_t v82 = *(void *)(v191[7] + 8 * v75);
        sub_1002F0E9C(v75, (uint64_t)v191);
        *uint64_t v74 = v81;
        swift_bridgeObjectRelease();
        swift_endAccess();
        (*(void (**)(uint64_t, _UNKNOWN **))(*(void *)v56 + 208))(v82, &off_100420FA8);
        swift_release();
        id v83 = v155;
        v80((uint64_t)v155, v10);
        uint64_t v28 = (uint64_t)v178;
        uint64_t v29 = v74;
        uint64_t v36 = v83;
LABEL_7:
        unint64_t v34 = v183;
        unint64_t v37 = v184;
      }
      else
      {
        swift_endAccess();
        v172(v59, v10);
        uint64_t v29 = v74;
        unint64_t v34 = v183;
        unint64_t v37 = v184;
        uint64_t v36 = (char *)v59;
        uint64_t v28 = (uint64_t)v178;
      }
    }
  }
  int64_t v41 = v37 + 1;
  if (__OFADD__(v37, 1)) {
    goto LABEL_103;
  }
  if (v41 >= v171) {
    goto LABEL_52;
  }
  unint64_t v42 = *(void *)(v170 + 8 * v41);
  int64_t v43 = v37 + 1;
  if (v42) {
    goto LABEL_27;
  }
  int64_t v43 = v37 + 2;
  if ((uint64_t)(v37 + 2) >= v171) {
    goto LABEL_52;
  }
  unint64_t v42 = *(void *)(v170 + 8 * v43);
  if (v42) {
    goto LABEL_27;
  }
  int64_t v43 = v37 + 3;
  if ((uint64_t)(v37 + 3) >= v171) {
    goto LABEL_52;
  }
  unint64_t v42 = *(void *)(v170 + 8 * v43);
  if (v42) {
    goto LABEL_27;
  }
  int64_t v43 = v37 + 4;
  if ((uint64_t)(v37 + 4) >= v171) {
    goto LABEL_52;
  }
  unint64_t v42 = *(void *)(v170 + 8 * v43);
  if (v42) {
    goto LABEL_27;
  }
  int64_t v43 = v37 + 5;
  if ((uint64_t)(v37 + 5) >= v171) {
    goto LABEL_52;
  }
  unint64_t v42 = *(void *)(v170 + 8 * v43);
  if (v42)
  {
LABEL_27:
    uint64_t v183 = (v42 - 1) & v42;
    unint64_t v184 = v43;
    unint64_t v40 = __clz(__rbit64(v42)) + (v43 << 6);
    goto LABEL_28;
  }
  unint64_t v44 = v37 + 6;
  if ((uint64_t)(v37 + 6) >= v171) {
    goto LABEL_52;
  }
  unint64_t v42 = *(void *)(v170 + 8 * v44);
  if (v42)
  {
    int64_t v43 = v37 + 6;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v43 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      goto LABEL_108;
    }
    if (v43 >= v171) {
      break;
    }
    unint64_t v42 = *(void *)(v170 + 8 * v43);
    ++v44;
    if (v42) {
      goto LABEL_27;
    }
  }
LABEL_52:
  swift_release();
  uint64_t v95 = 1 << *(unsigned char *)(v186 + 32);
  uint64_t v96 = -1;
  if (v95 < 64) {
    uint64_t v96 = ~(-1 << v95);
  }
  unint64_t v97 = v96 & *(void *)(v186 + 56);
  v174 = (char *)((unint64_t)(v95 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v98 = 0;
  uint64_t v99 = v180;
  if (v97) {
    goto LABEL_58;
  }
  while (2)
  {
    while (2)
    {
      uint64_t v104 = v98 + 1;
      if (__OFADD__(v98, 1)) {
        goto LABEL_104;
      }
      if (v104 >= (uint64_t)v174) {
        goto LABEL_88;
      }
      unint64_t v105 = *(void *)(v185 + 8 * v104);
      ++v98;
      if (v105) {
        goto LABEL_72;
      }
      uint64_t v98 = v104 + 1;
      if (v104 + 1 >= (uint64_t)v174) {
        goto LABEL_88;
      }
      unint64_t v105 = *(void *)(v185 + 8 * v98);
      if (v105) {
        goto LABEL_72;
      }
      uint64_t v98 = v104 + 2;
      if (v104 + 2 >= (uint64_t)v174) {
        goto LABEL_88;
      }
      unint64_t v105 = *(void *)(v185 + 8 * v98);
      if (v105) {
        goto LABEL_72;
      }
      uint64_t v106 = v104 + 3;
      if (v106 >= (uint64_t)v174)
      {
LABEL_88:
        swift_release();
        if (*(void *)(*(void *)((char *)v177 + v150) + 16))
        {
          uint64_t v131 = v177;
          swift_beginAccess();
          uint64_t v132 = v131[2];
          if ((v132 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v133 = __CocoaSet.count.getter();
            swift_bridgeObjectRelease();
            if (v133) {
              goto LABEL_91;
            }
          }
          else if (*(void *)(v132 + 16))
          {
            goto LABEL_91;
          }
          sub_1002CBB90();
          return swift_bridgeObjectRelease();
        }
LABEL_91:
        if (!*(void *)(*v29 + 16))
        {
          v134 = v177;
          swift_beginAccess();
          uint64_t v135 = v134[2];
          if ((v135 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v136 = __CocoaSet.count.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v136 = *(void *)(v135 + 16);
          }
          uint64_t v137 = v158;
          v138 = v149;
          if (v136)
          {
            uint64_t v139 = sub_1001A69C4();
            (*v156)(v138, v139, v137);
            v140 = Logger.logObject.getter();
            os_log_type_t v141 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v140, v141))
            {
              v142 = (uint8_t *)swift_slowAlloc();
              uint64_t v190 = swift_slowAlloc();
              *(_DWORD *)v142 = v152;
              uint64_t v143 = _typeName(_:qualified:)();
              uint64_t v189 = sub_10018A9E0(v143, v144, &v190);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v140, v141, "[%s] updateWithItemTypes - uninstall notification observers", v142, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }

            (*v157)(v138, v137);
            v145 = v177;
            v177[2] = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            swift_beginAccess();
            uint64_t v146 = v145[3];
            v145[3] = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            uint64_t v175 = v146;
          }
        }
        return swift_bridgeObjectRelease();
      }
      unint64_t v105 = *(void *)(v185 + 8 * v106);
      if (!v105)
      {
        while (1)
        {
          uint64_t v98 = v106 + 1;
          if (__OFADD__(v106, 1)) {
            goto LABEL_107;
          }
          if (v98 >= (uint64_t)v174) {
            goto LABEL_88;
          }
          unint64_t v105 = *(void *)(v185 + 8 * v98);
          ++v106;
          if (v105) {
            goto LABEL_72;
          }
        }
      }
      uint64_t v98 = v106;
LABEL_72:
      unint64_t v97 = (v105 - 1) & v105;
      unint64_t v103 = __clz(__rbit64(v105)) + (v98 << 6);
LABEL_73:
      uint64_t v107 = *(void *)(v186 + 48);
      uint64_t v108 = v182;
      uint64_t v183 = *(void *)(v182 + 72);
      id v109 = *(void (**)(char *, unint64_t, uint64_t))(v182 + 16);
      uint64_t v110 = v173;
      v109(v173, v107 + v183 * v103, v10);
      (*(void (**)(uint64_t, char *, uint64_t))(v108 + 32))(v28, v110, v10);
      if (*(void *)(*v29 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1002EFE2C(v28);
        char v112 = v111;
        swift_bridgeObjectRelease();
        if (v112)
        {
          (*v188)(v28, v10);
          if (!v97) {
            continue;
          }
          goto LABEL_58;
        }
      }
      break;
    }
    unint64_t v184 = v97;
    v109((char *)v99, v28, v10);
    type metadata accessor for RoutingItemDataSource(0);
    v109(v23, v28, v10);
    uint64_t v113 = (uint64_t)v177;
    uint64_t v114 = *(void *)((char *)v177 + v176);
    swift_retain();
    id v115 = sub_1001A8C14();
    swift_unknownObjectRetain();
    uint64_t v116 = sub_1001A8C40(v23, v114, v113, (uint64_t)&off_100427F88, v115);
    swift_beginAccess();
    int v117 = swift_isUniquelyReferenced_nonNull_native();
    v191 = (void *)*v29;
    uint64_t v118 = (uint64_t)v191;
    *uint64_t v29 = 0x8000000000000000;
    unint64_t v120 = sub_1002EFE2C(v99);
    uint64_t v121 = *(void *)(v118 + 16);
    BOOL v122 = (v119 & 1) == 0;
    uint64_t v123 = v121 + v122;
    if (!__OFADD__(v121, v122))
    {
      char v124 = v119;
      if (*(void *)(v118 + 24) >= v123)
      {
        if (v117)
        {
          uint64_t v127 = v191;
          if ((v119 & 1) == 0) {
            goto LABEL_84;
          }
        }
        else
        {
          sub_1002F1AE4();
          uint64_t v127 = v191;
          if ((v124 & 1) == 0) {
            goto LABEL_84;
          }
        }
      }
      else
      {
        sub_1002F0770(v123, v117);
        unint64_t v125 = sub_1002EFE2C(v180);
        if ((v124 & 1) != (v126 & 1)) {
          goto LABEL_110;
        }
        unint64_t v120 = v125;
        uint64_t v127 = v191;
        if ((v124 & 1) == 0)
        {
LABEL_84:
          v127[(v120 >> 6) + 8] |= 1 << v120;
          v109((char *)(v127[6] + v120 * v183), v180, v10);
          *(void *)(v127[7] + 8 * v120) = v116;
          uint64_t v128 = v127[2];
          BOOL v129 = __OFADD__(v128, 1);
          uint64_t v130 = v128 + 1;
          if (v129) {
            goto LABEL_105;
          }
          v127[2] = v130;
          goto LABEL_57;
        }
      }
      uint64_t v100 = v127[7];
      swift_release();
      *(void *)(v100 + 8 * v120) = v116;
LABEL_57:
      uint64_t v29 = v179;
      uint64_t *v179 = (uint64_t)v127;
      swift_bridgeObjectRelease();
      v101 = (uint64_t (*)(char *, uint64_t))*v188;
      (*v188)(v180, v10);
      swift_endAccess();
      uint64_t v28 = (uint64_t)v178;
      v101(v178, v10);
      unint64_t v97 = v184;
      if (!v184) {
        continue;
      }
LABEL_58:
      unint64_t v102 = __clz(__rbit64(v97));
      v97 &= v97 - 1;
      unint64_t v103 = v102 | (v98 << 6);
      goto LABEL_73;
    }
    break;
  }
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_110:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1002C1B5C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1002EFE2C(a1);
    if (v6)
    {
      uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
      swift_retain();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1002C1BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for RoutingMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (*(void *)(*v9 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1002EFE2C(a2);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
      (*(void (**)(char *))(*(void *)v13 + 208))(v8);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1002C1D6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002C1D8C((unsigned int *)&enum case for RoutingSessionConfiguration.Attribution.none(_:), (uint64_t (*)(void))&type metadata accessor for RoutingSessionConfiguration.Attribution, a1);
}

uint64_t sub_1002C1D8C@<X0>(unsigned int *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a3, v4, v5);
}

uint64_t sub_1002C1DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v67 = a3;
  uint64_t v6 = *v4;
  uint64_t v7 = type metadata accessor for RoutingSessionConfiguration.Attribution();
  uint64_t v64 = *(void *)(v7 - 8);
  uint64_t v65 = v7;
  __chkstk_darwin(v7);
  uint64_t v63 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for RoutingEvent();
  __chkstk_darwin(v9 - 8);
  char v66 = &v55[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for RoutingInteraction();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v61 = v14;
  char v62 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v16 = &v55[-v15];
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = &v55[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = RoutingInteraction.identifier.getter();
  unint64_t v22 = v21;
  uint64_t v23 = sub_1001A69C4();
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v60 = v17;
  v24(v20, v23, v17);
  uint64_t v73 = v12;
  uint64_t v74 = v11;
  uint64_t v25 = a1;
  uint64_t v71 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v72 = v12 + 16;
  v71(v16, a1, v11);
  unint64_t v70 = v22;
  swift_bridgeObjectRetain_n();
  unint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  int v28 = v27;
  BOOL v29 = os_log_type_enabled(v26, v27);
  uint64_t v69 = v25;
  uint64_t v59 = v6;
  if (v29)
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    v76[0] = v58;
    *(_DWORD *)uint64_t v30 = 136315650;
    os_log_t v57 = v26;
    uint64_t v31 = _typeName(_:qualified:)();
    uint64_t v75 = sub_10018A9E0(v31, v32, v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    int v56 = v28;
    unint64_t v33 = v70;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_10018A9E0(v68, v33, v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 22) = 2080;
    sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    uint64_t v34 = v74;
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v75 = sub_10018A9E0(v35, v36, v76);
    uint64_t v25 = v69;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v16, v34);
    unint64_t v26 = v57;
    _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v56, "[%s] handleInteractionForConfiguration<%s> - interaction: %s", (uint8_t *)v30, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v16, v74);
  }

  uint64_t v37 = (*(uint64_t (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v60);
  long long v38 = (void *)(*(uint64_t (**)(uint64_t))(*v4 + 280))(v37);
  uint64_t v39 = (uint64_t)v62;
  uint64_t v40 = v74;
  v71(v62, v25, v74);
  int64_t v41 = v4;
  uint64_t v42 = v73;
  unint64_t v43 = (*(unsigned __int8 *)(v73 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  unint64_t v44 = (v61 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v38;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v42 + 32))(v46 + v43, v39, v40);
  *(void *)(v46 + v44) = v41;
  id v47 = (void *)(v46 + v45);
  unint64_t v48 = v70;
  *id v47 = v68;
  v47[1] = v48;
  *(void *)(v46 + ((v45 + 23) & 0xFFFFFFFFFFFFFFF8)) = v59;
  sub_100013A80(&qword_100478F20);
  swift_allocObject();
  id v49 = v38;
  swift_retain();
  uint64_t v50 = Future.init(_:)();
  uint64_t v51 = v69;
  v71((unsigned char *)v39, v69, v40);
  uint64_t v52 = (uint64_t)v63;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v64 + 16))(v63, v67, v65);
  swift_retain();
  unint64_t v53 = v66;
  sub_100185A64(v39, v52, v50, (uint64_t)v66);
  (*(void (**)(unsigned char *))(**(void **)((char *)v41
                                                + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline)
                                  + 216))(v53);
  sub_1002C4EEC(v51);

  sub_1002F5F00((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for RoutingEvent);
  return v50;
}

uint64_t sub_1002C24E0(void (*a1)(void **), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v286 = a8;
  v295 = a7;
  uint64_t v287 = a6;
  uint64_t v298 = a5;
  uint64_t v265 = type metadata accessor for RoutingInteraction();
  uint64_t v264 = *(void *)(v265 - 8);
  __chkstk_darwin(v265);
  v267 = (char *)&v263 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v273 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v272 = *(void *)(v273 - 8);
  __chkstk_darwin(v273);
  v271 = (char *)&v263 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v280 = type metadata accessor for RoutingControl.Target();
  uint64_t v279 = *(void *)(v280 - 8);
  __chkstk_darwin(v280);
  v278 = (char *)&v263 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v282 = (void *)type metadata accessor for RoutingControl.RoutingControlType();
  uint64_t v281 = *(v282 - 1);
  __chkstk_darwin(v282);
  uint64_t v16 = (char *)&v263 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = type metadata accessor for RoutingControl();
  v283 = *(objc_class **)(v285 - 8);
  uint64_t v17 = __chkstk_darwin(v285);
  v266 = (char *)&v263 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v284 = (char *)&v263 - v19;
  uint64_t v20 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v20 - 8);
  uint64_t v276 = (uint64_t)&v263 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v275 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v274 = *(void *)(v275 - 8);
  uint64_t v22 = __chkstk_darwin(v275);
  uint64_t v24 = (char **)((char *)&v263 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v269 = (uint64_t)&v263 - v25;
  uint64_t v294 = type metadata accessor for Logger();
  uint64_t v292 = *(void *)(v294 - 8);
  uint64_t v26 = __chkstk_darwin(v294);
  v270 = (char *)&v263 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  v268 = (char *)&v263 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v277 = (char *)&v263 - v31;
  __chkstk_darwin(v30);
  v293 = (char *)&v263 - v32;
  v291 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v290 = *(v291 - 1);
  __chkstk_darwin(v291);
  os_log_t v289 = (os_log_t)((char *)&v263 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (uint64_t)&v263 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v40 = (uint64_t *)((char *)&v263 - v39);
  uint64_t v41 = swift_allocObject();
  v288 = a1;
  *(void *)(v41 + 16) = a1;
  *(void *)(v41 + 24) = a2;
  uint64_t v42 = (char *)v41;
  unint64_t v43 = (void *)swift_allocObject();
  v43[2] = a3;
  v43[3] = sub_1002F7740;
  uint64_t v296 = a2;
  v297 = v43;
  v43[4] = v42;
  swift_retain_n();
  swift_retain();
  unint64_t v44 = a3;
  uint64_t v299 = a4;
  RoutingInteraction.action.getter();
  int v45 = (*(uint64_t (**)(uint64_t *, uint64_t))(v35 + 88))(v40, v34);
  if (v45 == enum case for RoutingInteraction.Action.add(_:)
    || v45 == enum case for RoutingInteraction.Action.remove(_:)
    || v45 == enum case for RoutingInteraction.Action.set(_:))
  {
    uint64_t v46 = v44;
    (*(void (**)(uint64_t *, uint64_t))(v35 + 96))(v40, v34);
    uint64_t v48 = v40[2];
    uint64_t v47 = v40[3];
    uint64_t v49 = *v40;
    uint64_t v50 = v40[1];
    uint64_t v51 = sub_1002A0458();
    if (v48 == *(void *)v51 && v47 == *((void *)v51 + 1))
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = (uint64_t)v295;
    }
    else
    {
      char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v53 = v298;
      uint64_t v35 = (uint64_t)v295;
      if ((v52 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v307 = type metadata accessor for HostedRoutingSessionDataSource();
        v308 = &off_100427F98;
        v304 = (void *)v53;
        goto LABEL_19;
      }
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v54 = swift_bridgeObjectRetain();
    uint64_t v55 = sub_1002F40B8(v54, v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v55)
    {
      swift_release();
      swift_release();
      uint64_t v56 = sub_1001A69C4();
      uint64_t v57 = v292;
      uint64_t v59 = v293;
      uint64_t v58 = v294;
      (*(void (**)(char *, uint64_t, uint64_t))(v292 + 16))(v293, v56, v294);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      uint64_t v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = v57;
        uint64_t v63 = swift_slowAlloc();
        v304 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136315650;
        uint64_t v64 = _typeName(_:qualified:)();
        uint64_t v300 = sub_10018A9E0(v64, v65, (uint64_t *)&v304);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v63 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v300 = sub_10018A9E0(v287, v35, (uint64_t *)&v304);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v63 + 22) = 2080;
        uint64_t v300 = v55;
        type metadata accessor for RoutingItemDataSource(0);
        sub_1002F14AC(&qword_10047CED8, (void (*)(uint64_t))type metadata accessor for RoutingItemDataSource);
        uint64_t v66 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v300 = sub_10018A9E0(v66, v67, (uint64_t *)&v304);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "[%s] handleInteractionForConfiguration<%s> - delegating to data source: %s", (uint8_t *)v63, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v62 + 8))(v293, v294);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
      }
      id v94 = v297;
      uint64_t v307 = type metadata accessor for RoutingItemDataSource(0);
      v308 = &off_100420FB8;
      v304 = (void *)v55;
      goto LABEL_91;
    }
    uint64_t v80 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v81 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v80 - 8) + 104))(v82, enum case for InternalRoutingError.itemNotFound(_:), v80);
    uint64_t v83 = MRDFastSyncGroupSessionState.rawValue.getter(v81, 0, 0, 4);
    uint64_t v34 = v84;
    uint64_t v86 = v85;
    uint64_t v38 = (uint64_t)v87;
    os_log_t v88 = v289;
    uint64_t v89 = v46;
    v289->isa = v46;
    uint64_t v90 = v290;
    uint64_t v91 = v291;
    (*(void (**)(os_log_t, void, void *))(v290 + 104))(v88, enum case for DispatchPredicate.onQueue(_:), v291);
    unint64_t v92 = v89;
    LOBYTE(v89) = _dispatchPreconditionTest(_:)();
    (*(void (**)(os_log_t, void *))(v90 + 8))(v88, v91);
    if (v89)
    {
      v304 = (void *)v83;
      unint64_t v305 = v34;
      uint64_t v306 = v86;
      LOWORD(v307) = v38;
      v288(&v304);
      swift_release();
      swift_release();
      swift_release();
      swift_errorRelease();
      return sub_1001859D4(v34, v86, v38);
    }
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  if (v45 != enum case for RoutingInteraction.Action.setActiveSession(_:))
  {
    if (v45 == enum case for RoutingInteraction.Action.setActiveItem(_:))
    {
      swift_release();
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v35 + 96))(v40, v34);
      swift_bridgeObjectRelease();
      uint64_t v68 = sub_1001E78B8();
      uint64_t v70 = v69;
      uint64_t v71 = v298;
      uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(**(void **)(v298
                                                                           + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore)
                                                             + 280);
      swift_retain();
      v72(v68, v70, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v73 = v71 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v74 = *(void *)(v73 + 8);
        uint64_t ObjectType = swift_getObjectType();
        char v76 = sub_1002A0458();
        uint64_t v77 = *(void *)v76;
        uint64_t v78 = *((void *)v76 + 1);
        uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 32);
        swift_bridgeObjectRetain();
        v79(v71, v77, v78, v68, v70, ObjectType, v74);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v94 = v297;
      uint64_t v307 = type metadata accessor for HostedRoutingSessionDataSource();
      v308 = &off_100427F98;
      v304 = (void *)v71;
      swift_retain();
      goto LABEL_91;
    }
    if (v45 == enum case for RoutingInteraction.Action.handoff(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v35 + 96))(v40, v34);
      uint64_t v95 = *(char **)(*v40 + 16);
      uint64_t v96 = *(char **)(*v40 + 24);
      uint64_t v285 = *v40;
      unint64_t v97 = *(char **)(v285 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v98 = sub_1002A0458();
      uint64_t v99 = (char *)*((void *)v98 + 1);
      BOOL v142 = v95 == *(char **)v98;
      v293 = v95;
      if (v142 && v96 == v99 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_release();
        swift_release();
        sub_10018FE08(0, &qword_100478950);
        id v100 = sub_1002FF8A8();
        id v101 = [self localOrigin];
        RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter();
        id v102 = objc_allocWithZone((Class)MRPlayerPath);
        NSString v103 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v104 = [v102 initWithOrigin:v101 bundleIdentifier:v103 player:0];

        id v105 = [v100 resolveExistingPlayerPath:v104];
        uint64_t v106 = v298;
        unint64_t v107 = (unint64_t)v295;
        if (v105)
        {
          if ([v105 isResolved])
          {
            uint64_t v108 = sub_1001A69C4();
            uint64_t v109 = v292;
            uint64_t v110 = v277;
            (*(void (**)(char *, uint64_t, uint64_t))(v292 + 16))(v277, v108, v294);
            swift_bridgeObjectRetain_n();
            id v111 = v105;
            char v112 = Logger.logObject.getter();
            os_log_type_t v113 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v112, v113))
            {
              uint64_t v114 = swift_slowAlloc();
              v291 = (void *)swift_slowAlloc();
              uint64_t v296 = swift_slowAlloc();
              v304 = (void *)v296;
              *(_DWORD *)uint64_t v114 = 136315650;
              uint64_t v115 = _typeName(_:qualified:)();
              v284 = v97;
              *(void *)&long long v301 = sub_10018A9E0(v115, v116, (uint64_t *)&v304);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v114 + 12) = 2080;
              swift_bridgeObjectRetain();
              *(void *)&long long v301 = sub_10018A9E0(v287, v107, (uint64_t *)&v304);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v114 + 22) = 2112;
              *(void *)&long long v301 = v111;
              id v117 = v111;
              uint64_t v106 = v298;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              void *v291 = v105;

              _os_log_impl((void *)&_mh_execute_header, v112, v113, "[%s] handleInteractionForConfiguration<%s> - inject source player path: %@ into handoff context", (uint8_t *)v114, 0x20u);
              sub_100013A80((uint64_t *)&unk_10047B850);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v292 + 8))(v277, v294);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v294);
            }
            id v175 = v111;
            dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.setter();
          }
        }
        uint64_t v176 = sub_1001E78B8();
        uint64_t v178 = v177;
        v179 = *(void (**)(uint64_t, uint64_t, uint64_t))(**(void **)(v106
                                                                              + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore)
                                                                + 280);
        swift_retain();
        v179(v176, v178, v299);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v180 = v106 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v181 = *(void *)(v180 + 8);
          uint64_t v182 = swift_getObjectType();
          (*(void (**)(uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v181 + 32))(v106, v293, v96, v176, v178, v182, v181);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        id v94 = v297;
        goto LABEL_67;
      }
      v282 = v98;
      v283 = v44;
      v284 = v97;
      uint64_t v106 = v298;
      uint64_t v137 = (*(uint64_t (**)(void))(*(void *)v298 + 328))();
      uint64_t v34 = v137;
      uint64_t v138 = *(void *)(v137 + 16);
      unint64_t v139 = (unint64_t)v295;
      if (v138)
      {
        uint64_t v140 = v274;
        uint64_t v141 = v137 + ((*(unsigned __int8 *)(v274 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v274 + 80));
        uint64_t v38 = *(void *)(v274 + 72);
        while (1)
        {
          sub_1002F2874(v141, (uint64_t)v24, type metadata accessor for HostedRoutingSourceSession);
          BOOL v142 = *v24 == v293 && v24[1] == v96;
          if (v142 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          sub_1002F5F00((uint64_t)v24, type metadata accessor for HostedRoutingSourceSession);
          v141 += v38;
          if (!--v138)
          {
            uint64_t v143 = 1;
            uint64_t v144 = v276;
            goto LABEL_70;
          }
        }
        uint64_t v144 = v276;
        sub_1002F39C4((uint64_t)v24, v276, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v143 = 0;
      }
      else
      {
        uint64_t v143 = 1;
        uint64_t v144 = v276;
        uint64_t v140 = v274;
      }
LABEL_70:
      uint64_t v183 = v275;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v140 + 56))(v144, v143, 1, v275);
      swift_bridgeObjectRelease();
      unint64_t v184 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
      uint64_t v35 = v140 + 48;
      if (v184(v144, 1, v183) == 1)
      {
        sub_100009A08(v144, &qword_100479588);
        uint64_t v185 = type metadata accessor for InternalRoutingError();
        sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
        uint64_t v186 = swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v185 - 8) + 104))(v187, enum case for InternalRoutingError.sessionNotFound(_:), v185);
        uint64_t v188 = MRDFastSyncGroupSessionState.rawValue.getter(v186, v293, v96, 2);
        uint64_t v34 = v189;
        uint64_t v191 = v190;
        uint64_t v38 = (uint64_t)v192;
        os_log_t v193 = v289;
        v194 = v283;
        v289->isa = v283;
        uint64_t v195 = v290;
        v196 = v291;
        (*(void (**)(os_log_t, void, void *))(v290 + 104))(v193, enum case for DispatchPredicate.onQueue(_:), v291);
        v197 = v194;
        LOBYTE(v194) = _dispatchPreconditionTest(_:)();
        (*(void (**)(os_log_t, void *))(v195 + 8))(v193, v196);
        if (v194)
        {
          v304 = (void *)v188;
          unint64_t v305 = v34;
          uint64_t v306 = v191;
          LOWORD(v307) = v38;
          v288(&v304);
          swift_release();
          swift_release();
          swift_release();
          swift_errorRelease();
          sub_1001859D4(v34, v191, v38);
          swift_release();
          return swift_release();
        }
        goto LABEL_105;
      }
      swift_release();
      swift_release();
      uint64_t v35 = v269;
      sub_1002F39C4(v144, v269, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v198 = *(void *)(v35 + 24);
      if (!v198)
      {
LABEL_107:
        __break(1u);
        goto LABEL_108;
      }
      uint64_t v199 = *(void *)(v35 + 16);
      v200 = (uint64_t *)(v106 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
      swift_beginAccess();
      uint64_t v201 = *v200;
      if (*(void *)(v201 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v202 = sub_100013660(v199, v198);
        if (v203)
        {
          uint64_t v204 = *(void *)(*(void *)(v201 + 56) + 8 * v202);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(unsigned char *)(v204 + 16) == 2)
          {
            id v205 = [*(id *)(v204 + 64) origin];
            if (v205)
            {
              v206 = v205;
              sub_10018FE08(0, &qword_100478950);
              id v207 = sub_1002FF8A8();
              id v208 = v206;
              RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter();
              id v209 = objc_allocWithZone((Class)MRPlayerPath);
              NSString v210 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v211 = [v209 initWithOrigin:v208 bundleIdentifier:v210 player:0];

              id v212 = [v207 resolveExistingPlayerPath:v211];
              if (v212)
              {
                if ([v212 isResolved])
                {
                  uint64_t v213 = sub_1001A69C4();
                  uint64_t v214 = v292;
                  v215 = v268;
                  uint64_t v216 = v294;
                  (*(void (**)(char *, uint64_t, uint64_t))(v292 + 16))(v268, v213, v294);
                  swift_bridgeObjectRetain_n();
                  id v217 = v212;
                  v218 = Logger.logObject.getter();
                  os_log_type_t v219 = static os_log_type_t.default.getter();
                  LODWORD(v296) = v219;
                  if (os_log_type_enabled(v218, v219))
                  {
                    uint64_t v220 = swift_slowAlloc();
                    uint64_t v290 = swift_slowAlloc();
                    v291 = (void *)swift_slowAlloc();
                    v304 = v291;
                    *(_DWORD *)uint64_t v220 = 136315650;
                    uint64_t v221 = _typeName(_:qualified:)();
                    os_log_t v289 = v218;
                    id v222 = v217;
                    uint64_t v300 = sub_10018A9E0(v221, v223, (uint64_t *)&v304);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v220 + 12) = 2080;
                    swift_bridgeObjectRetain();
                    uint64_t v300 = sub_10018A9E0(v287, v139, (uint64_t *)&v304);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v220 + 22) = 2112;
                    uint64_t v300 = (uint64_t)v217;
                    id v224 = v217;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *(void *)uint64_t v290 = v212;

                    id v217 = v222;
                    os_log_t v225 = v289;
                    _os_log_impl((void *)&_mh_execute_header, v289, (os_log_type_t)v296, "[%s] handleInteractionForConfiguration<%s> - inject source player path: %@ into handoff context", (uint8_t *)v220, 0x20u);
                    sub_100013A80((uint64_t *)&unk_10047B850);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    (*(void (**)(char *, uint64_t))(v292 + 8))(v268, v294);
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                    (*(void (**)(char *, uint64_t))(v214 + 8))(v215, v216);
                  }
                  id v244 = v217;
                  dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.setter();

                  swift_release();
                  uint64_t v106 = v298;
                  goto LABEL_99;
                }
              }
              swift_release();

LABEL_99:
              uint64_t v35 = v269;
              goto LABEL_100;
            }
          }
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
LABEL_100:
      uint64_t v245 = v106 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v246 = *(void *)(v245 + 8);
        uint64_t v247 = swift_getObjectType();
        uint64_t v248 = *v282;
        uint64_t v249 = v282[1];
        v250 = *(void (**)(uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v246 + 32);
        swift_bridgeObjectRetain();
        v250(v106, v293, v96, v248, v249, v247, v246);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1002F5F00(v35, type metadata accessor for HostedRoutingSourceSession);
      }
      else
      {
        sub_1002F5F00(v35, type metadata accessor for HostedRoutingSourceSession);
        swift_bridgeObjectRelease();
      }
      id v94 = v297;
LABEL_67:
      uint64_t v307 = type metadata accessor for HostedRoutingSessionDataSource();
      v308 = &off_100427F98;
      swift_retain();
      swift_release();
      swift_release();
      v304 = (void *)v106;
      goto LABEL_91;
    }
    v293 = v42;
    if (v45 != enum case for RoutingInteraction.Action.control(_:))
    {
LABEL_108:
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t, uint64_t))(v264 + 16))(v267, v299, v265);
      v304 = 0;
      unint64_t v305 = 0xE000000000000000;
      _StringGuts.grow(_:)(78);
      v251._countAndFlagsBits = 91;
      v251._object = (void *)0xE100000000000000;
      String.append(_:)(v251);
      v252._countAndFlagsBits = _typeName(_:qualified:)();
      String.append(_:)(v252);
      swift_bridgeObjectRelease();
      v253._object = (void *)0x80000001003BA5C0;
      v253._countAndFlagsBits = 0xD000000000000024;
      String.append(_:)(v253);
      v254._countAndFlagsBits = v287;
      v254._object = v295;
      String.append(_:)(v254);
      v255._countAndFlagsBits = 0xD000000000000023;
      v255._object = (void *)0x80000001003BA5F0;
      String.append(_:)(v255);
      RoutingInteraction.action.getter();
      sub_1002F14AC(&qword_100477FF0, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action);
      v256._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v256);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v34);
LABEL_110:
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    (*(void (**)(uint64_t *, uint64_t))(v35 + 96))(v40, v34);
    uint64_t v118 = *v40;
    uint64_t v119 = swift_projectBox();
    unint64_t v120 = v283;
    uint64_t v121 = (void (*)(char *, uint64_t, uint64_t))*((void *)v283 + 2);
    BOOL v122 = v284;
    uint64_t v123 = v285;
    v121(v284, v119, v285);
    RoutingControl.type.getter();
    uint64_t v124 = v281;
    unint64_t v125 = v282;
    if ((*(unsigned int (**)(char *, void *))(v281 + 88))(v16, v282) == enum case for RoutingControl.RoutingControlType.absoluteVolume(_:))
    {
      char v126 = (char *)v118;
      uint64_t v127 = v278;
      RoutingControl.target.getter();
      uint64_t v128 = v279;
      uint64_t v129 = v280;
      int v130 = (*(uint64_t (**)(char *, uint64_t))(v279 + 88))(v127, v280);
      uint64_t v131 = v298;
      if (v130 == enum case for RoutingControl.Target.session(_:))
      {
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v128 + 96))(v127, v129);
        uint64_t v133 = *(void *)v127;
        uint64_t v132 = *((void *)v127 + 1);
        v134 = sub_1002A0458();
        id v94 = v297;
        if (v133 == *(void *)v134 && v132 == *((void *)v134 + 1))
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v151 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v151 & 1) == 0)
          {
            uint64_t v302 = type metadata accessor for HostedRoutingSessionDataSource();
            v303 = &off_100427F98;
            *(void *)&long long v301 = v131;
            v241 = (void (*)(char *, uint64_t))*((void *)v120 + 1);
            swift_retain();
            v241(v122, v285);
            goto LABEL_86;
          }
        }
        uint64_t v152 = v272;
        uint64_t v153 = v271;
        uint64_t v154 = v273;
        (*(void (**)(char *, void, uint64_t))(v272 + 104))(v271, enum case for RoutingSessionConfiguration.ItemType.standard(_:), v273);
        uint64_t v155 = (*(uint64_t (**)(char *))(*(void *)v131 + 656))(v153);
        uint64_t v157 = v156;
        (*(void (**)(char *, uint64_t))(v152 + 8))(v153, v154);
        uint64_t v302 = swift_getObjectType();
        v303 = *(_UNKNOWN ***)(v157 + 16);
        *(void *)&long long v301 = v155;
        (*((void (**)(char *, uint64_t))v120 + 1))(v122, v285);
LABEL_86:
        sub_100276570(&v301, (uint64_t)&v304);
        goto LABEL_90;
      }
      if (v130 != enum case for RoutingControl.Target.item(_:))
      {
        swift_release();
        swift_release();
        v121(v266, (uint64_t)v284, v285);
        v304 = 0;
        unint64_t v305 = 0xE000000000000000;
        _StringGuts.grow(_:)(77);
        v257._countAndFlagsBits = 91;
        v257._object = (void *)0xE100000000000000;
        String.append(_:)(v257);
        v258._countAndFlagsBits = _typeName(_:qualified:)();
        String.append(_:)(v258);
        swift_bridgeObjectRelease();
        v259._object = (void *)0x80000001003BA5C0;
        v259._countAndFlagsBits = 0xD000000000000024;
        String.append(_:)(v259);
        v260._countAndFlagsBits = v287;
        v260._object = v295;
        String.append(_:)(v260);
        v261._countAndFlagsBits = 0xD000000000000022;
        v261._object = (void *)0x80000001003BA620;
        String.append(_:)(v261);
        sub_1002F14AC(&qword_100478970, (void (*)(uint64_t))&type metadata accessor for RoutingControl);
        v262._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v262);
        swift_bridgeObjectRelease();
        goto LABEL_110;
      }
      v145 = v44;
      (*(void (**)(char *, uint64_t))(v279 + 96))(v278, v280);
      uint64_t v146 = sub_10029F394();
      uint64_t v148 = v147;
      v149 = sub_1002A0458();
      unint64_t v150 = (unint64_t)v295;
      uint64_t v38 = (uint64_t)v126;
      if (v146 == *(void *)v149 && v148 == *((void *)v149 + 1))
      {
        swift_bridgeObjectRelease();
        uint64_t v123 = v285;
LABEL_57:
        uint64_t v159 = sub_10029F468();
        uint64_t v161 = v160;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v162 = swift_bridgeObjectRetain();
        uint64_t v163 = sub_1002F40B8(v162, v159, v161);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        if (!v163)
        {
          uint64_t v226 = type metadata accessor for InternalRoutingError();
          sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
          uint64_t v227 = swift_allocError();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v226 - 8) + 104))(v228, enum case for InternalRoutingError.itemNotFound(_:), v226);
          uint64_t v229 = MRDFastSyncGroupSessionState.rawValue.getter(v227, 0, 0, 4);
          uint64_t v231 = v230;
          uint64_t v35 = v232;
          unsigned __int8 v234 = v233;
          os_log_t v235 = v289;
          v236 = v145;
          v289->isa = v145;
          uint64_t v237 = v290;
          v238 = v291;
          (*(void (**)(os_log_t, void, void *))(v290 + 104))(v235, enum case for DispatchPredicate.onQueue(_:), v291);
          v239 = v236;
          LOBYTE(v236) = _dispatchPreconditionTest(_:)();
          v240 = *(void (**)(os_log_t, void *))(v237 + 8);
          uint64_t v34 = v237 + 8;
          v240(v235, v238);
          if (v236)
          {
            v304 = (void *)v229;
            unint64_t v305 = v231;
            uint64_t v306 = v35;
            LOWORD(v307) = v234;
            v288(&v304);
            swift_release();
            swift_errorRelease();
            sub_1001859D4(v231, v35, v234);
            swift_release();
            swift_release();
            (*((void (**)(char *, uint64_t))v120 + 1))(v284, v285);
            return swift_release();
          }
          goto LABEL_106;
        }
        swift_release();
        swift_release();
        uint64_t v164 = sub_1001A69C4();
        uint64_t v165 = v292;
        v166 = v270;
        uint64_t v167 = v294;
        (*(void (**)(char *, uint64_t, uint64_t))(v292 + 16))(v270, v164, v294);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        v168 = Logger.logObject.getter();
        os_log_type_t v169 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v168, v169))
        {
          uint64_t v170 = swift_slowAlloc();
          v304 = (void *)swift_slowAlloc();
          uint64_t v298 = v38;
          *(_DWORD *)uint64_t v170 = 136315650;
          uint64_t v171 = _typeName(_:qualified:)();
          *(void *)&long long v301 = sub_10018A9E0(v171, v172, (uint64_t *)&v304);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v170 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(void *)&long long v301 = sub_10018A9E0(v287, v150, (uint64_t *)&v304);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v170 + 22) = 2080;
          *(void *)&long long v301 = v163;
          type metadata accessor for RoutingItemDataSource(0);
          sub_1002F14AC(&qword_10047CED8, (void (*)(uint64_t))type metadata accessor for RoutingItemDataSource);
          uint64_t v173 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)&long long v301 = sub_10018A9E0(v173, v174, (uint64_t *)&v304);
          uint64_t v123 = v285;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v168, v169, "[%s] handleInteractionForConfiguration<%s> - delegating to data source: %s", (uint8_t *)v170, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v165 + 8))(v270, v294);
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v165 + 8))(v166, v167);
        }
        id v94 = v297;
        uint64_t v302 = type metadata accessor for RoutingItemDataSource(0);
        v303 = &off_100420FB8;
        *(void *)&long long v301 = v163;
        (*((void (**)(char *, uint64_t))v283 + 1))(v284, v123);
        sub_100276570(&v301, (uint64_t)&v304);
LABEL_90:
        swift_release();
        goto LABEL_91;
      }
      char v158 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v123 = v285;
      if (v158) {
        goto LABEL_57;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v302 = type metadata accessor for HostedRoutingSessionDataSource();
      v303 = &off_100427F98;
      *(void *)&long long v301 = v131;
      uint64_t v135 = (void (*)(char *, uint64_t))*((void *)v120 + 1);
      swift_retain();
      uint64_t v136 = v284;
    }
    else
    {
      swift_release();
      swift_release();
      (*(void (**)(char *, void *))(v124 + 8))(v16, v125);
      uint64_t v302 = type metadata accessor for HostedRoutingSessionDataSource();
      v303 = &off_100427F98;
      *(void *)&long long v301 = v298;
      uint64_t v135 = (void (*)(char *, uint64_t))*((void *)v120 + 1);
      swift_retain();
      uint64_t v136 = v122;
    }
    v135(v136, v123);
    sub_100276570(&v301, (uint64_t)&v304);
    swift_release();
    id v94 = v297;
    goto LABEL_91;
  }
  swift_release();
  swift_release();
  (*(void (**)(uint64_t *, uint64_t))(v35 + 96))(v40, v34);
  swift_bridgeObjectRelease();
  uint64_t v307 = type metadata accessor for HostedRoutingSessionDataSource();
  v308 = &off_100427F98;
  v304 = (void *)v298;
LABEL_19:
  swift_retain();
  id v94 = v297;
LABEL_91:
  uint64_t v242 = v307;
  v243 = v308;
  sub_1001BDB5C(&v304, v307);
  ((void (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned __int8), void *, uint64_t, _UNKNOWN **))v243[1])(v299, sub_1002F7800, v94, v242, v243);
  swift_release();
  return sub_10018FD5C((uint64_t)&v304);
}

uint64_t sub_1002C4DA0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, void *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v15 = a5;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v16 = a5;
  LOBYTE(a5) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (a5) {
    return a6(a1, a2, a3, a4);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002C4EEC(uint64_t a1)
{
  uint64_t v91 = type metadata accessor for RoutingControl.Target();
  uint64_t v110 = *(void *)(v91 - 8);
  uint64_t v2 = __chkstk_darwin(v91);
  uint64_t v90 = &v76[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v89 = &v76[-v4];
  uint64_t v98 = type metadata accessor for RoutingInteraction();
  uint64_t v83 = *(void *)(v98 - 8);
  uint64_t v5 = __chkstk_darwin(v98);
  uint64_t v87 = &v76[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  os_log_type_t v113 = &v76[-v7];
  uint64_t v8 = type metadata accessor for RoutingControl.RoutingControlType();
  uint64_t v112 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  id v100 = &v76[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v12 = &v76[-v11];
  uint64_t v13 = type metadata accessor for RoutingControl();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  id v101 = &v76[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v18 = &v76[-v17];
  uint64_t v19 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  id v105 = (uint64_t *)&v76[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t *)&v76[-v23];
  uint64_t v114 = a1;
  RoutingInteraction.action.getter();
  NSString v103 = *(uint64_t (**)(uint64_t *, uint64_t))(v20 + 88);
  uint64_t v104 = v20 + 88;
  int v102 = v103(v24, v19);
  if (v102 != enum case for RoutingInteraction.Action.control(_:)) {
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v20 + 8))(v24, v19);
  }
  uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v20 + 96);
  uint64_t v99 = v20 + 96;
  unint64_t v97 = (void (*)(uint64_t *, uint64_t))v25;
  v25(v24, v19);
  uint64_t v26 = *v24;
  uint64_t v27 = swift_projectBox();
  uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v96 = v14 + 16;
  uint64_t v95 = v28;
  v28(v18, v27, v13);
  RoutingControl.type.getter();
  uint64_t v29 = v112;
  uint64_t v30 = *(uint64_t (**)(unsigned char *, uint64_t))(v112 + 88);
  uint64_t v94 = v112 + 88;
  id v93 = v30;
  int v92 = v30(v12, v8);
  if (v92 != enum case for RoutingControl.RoutingControlType.absoluteVolume(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v18, v13);
    (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v12, v8);
    return swift_release();
  }
  uint64_t v88 = v8;
  uint64_t v81 = v18;
  uint64_t v31 = v111;
  unint64_t v32 = (*(uint64_t (**)(void))(**(void **)&v111[OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline]
                             + 112))();
  unint64_t v33 = v32;
  if (v32 >> 62) {
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t result = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v35 = v98;
  if (!result)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v81, v13);
    return swift_release();
  }
  if (result >= 1)
  {
    uint64_t v36 = 0;
    uint64_t v78 = (uint64_t *)&v31[OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_pendingInteractions];
    unint64_t v106 = v33 & 0xC000000000000001;
    id v111 = (char *)(v83 + 8);
    uint64_t v84 = (void (**)(uint64_t *, uint64_t))(v20 + 8);
    uint64_t v85 = (void (**)(unsigned char *, uint64_t))(v14 + 8);
    uint64_t v80 = (void (**)(unsigned char *, uint64_t))(v112 + 8);
    uint64_t v79 = (void (**)(unsigned char *, uint64_t))(v110 + 8);
    unsigned int v77 = enum case for InternalRoutingError.replacedBySubsequentInteraction(_:);
    uint64_t v112 = v13;
    uint64_t v110 = v14;
    unint64_t v108 = v33;
    uint64_t v86 = v19;
    uint64_t v109 = v26;
    uint64_t v107 = result;
    while (1)
    {
      if (v106)
      {
        uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v37 = *(void *)(v33 + 8 * v36 + 32);
        swift_retain();
      }
      uint64_t v38 = *(void (**)(void))(*(void *)v37 + 176);
      uint64_t v39 = v113;
      v38();
      char v40 = static RoutingInteraction.== infix(_:_:)();
      uint64_t v41 = *(void (**)(unint64_t, uint64_t))v111;
      uint64_t v42 = (*(uint64_t (**)(unsigned char *, uint64_t))v111)(v39, v35);
      if (v40) {
        break;
      }
      unint64_t v43 = v105;
      (*(void (**)(uint64_t))(*(void *)v37 + 168))(v42);
      int v44 = v103(v43, v19);
      if (v44 != v102)
      {
        swift_release();
        (*v84)(v43, v19);
        goto LABEL_9;
      }
      v97(v43, v19);
      uint64_t v45 = swift_projectBox();
      uint64_t v46 = v101;
      uint64_t v47 = v112;
      v95(v101, v45, v112);
      swift_release();
      uint64_t v48 = v100;
      RoutingControl.type.getter();
      uint64_t v49 = v88;
      int v50 = v93(v48, v88);
      if (v50 == v92)
      {
        uint64_t v51 = v89;
        RoutingControl.target.getter();
        char v52 = v90;
        RoutingControl.target.getter();
        LODWORD(v82) = static RoutingControl.Target.== infix(_:_:)();
        uint64_t v53 = (uint64_t (*)(unsigned char *, uint64_t))*v79;
        uint64_t v54 = v52;
        uint64_t v55 = v91;
        (*v79)(v54, v91);
        uint64_t v56 = v53(v51, v55);
        if (v82)
        {
          uint64_t v57 = (uint64_t)v87;
          ((void (*)(uint64_t))v38)(v56);
          uint64_t v58 = v78;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          unint64_t v59 = sub_1001B5DEC(v57);
          char v61 = v60;
          swift_bridgeObjectRelease();
          uint64_t v35 = v98;
          uint64_t v19 = v86;
          if (v61)
          {
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v63 = *v58;
            uint64_t v117 = *v58;
            uint64_t *v58 = 0x8000000000000000;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1001B725C();
              uint64_t v63 = v117;
            }
            v41(*(void *)(v63 + 48) + *(void *)(v83 + 72) * v59, v35);
            uint64_t v64 = v117;
            uint64_t v82 = *(void (**)(void *))(*(void *)(v117 + 56) + 16 * v59);
            sub_1001B6960(v59, v117);
            uint64_t *v58 = v64;
            swift_bridgeObjectRelease();
            v41((unint64_t)v87, v35);
            swift_endAccess();
            uint64_t v65 = type metadata accessor for InternalRoutingError();
            sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
            uint64_t v66 = swift_allocError();
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v65 - 8) + 104))(v67, v77, v65);
            uint64_t v68 = MRDFastSyncGroupSessionState.rawValue.getter(v66, 0, 0, 4);
            uint64_t v70 = v69;
            uint64_t v72 = v71;
            unsigned __int8 v74 = v73;
            v115[0] = v68;
            v115[1] = v69;
            v115[2] = v71;
            unsigned __int8 v116 = v73;
            v82(v115);
            swift_release();
            swift_errorRelease();
            sub_1001859D4(v70, v72, v74);
            swift_release();
            uint64_t v13 = v112;
            (*v85)(v101, v112);
          }
          else
          {
            v41(v57, v98);
            swift_endAccess();
            uint64_t v13 = v112;
            (*v85)(v101, v112);
            swift_release();
          }
          goto LABEL_10;
        }
        uint64_t v75 = v46;
        uint64_t v13 = v112;
        (*v85)(v75, v112);
        swift_release();
        uint64_t v35 = v98;
      }
      else
      {
        (*v85)(v46, v47);
        swift_release();
        (*v80)(v48, v49);
        uint64_t v13 = v47;
      }
      uint64_t v19 = v86;
LABEL_10:
      ++v36;
      unint64_t v33 = v108;
      uint64_t v14 = v110;
      if (v107 == v36) {
        goto LABEL_29;
      }
    }
    swift_release();
LABEL_9:
    uint64_t v13 = v112;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002C5A90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    uint64_t v17 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v39 = v20 + 4;
      uint64_t v21 = _typeName(_:qualified:)();
      uint64_t v40 = sub_10018A9E0(v21, v22, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%s] updateActiveSessionElementsWithDeviceIdentifier - set to nil for nil ASE", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v23 = (void *)(v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
    uint64_t v24 = *(void *)(v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
    uint64_t v25 = *(void *)(v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 8);
    uint64_t v26 = *(void **)(v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16);
    v23[1] = 0;
    v23[2] = 0;
    *uint64_t v23 = 0;
    sub_1002F2830(v24, v25, (uint64_t)v26);
    sub_1002F16C8(v24, v25, (uint64_t)v26);
    sub_1002BF4F0(v24, v25, v26);
    return sub_1002F16C8(v24, v25, (uint64_t)v26);
  }
  uint64_t v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16);
  if (!v11)
  {
    swift_bridgeObjectRetain();
LABEL_26:
    sub_100013A80(&qword_100478690);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1003C58B0;
    *(void *)(v32 + 32) = a1;
    *(void *)(v32 + 40) = a2;
    uint64_t v33 = *v10;
    uint64_t v34 = v10[1];
    uint64_t v35 = (void *)v10[2];
    *uint64_t v10 = 0;
    v10[1] = 0;
    v10[2] = v32;
    sub_1002F2830(v33, v34, (uint64_t)v35);
    sub_1002F16C8(v33, v34, (uint64_t)v35);
    sub_1002BF4F0(v33, v34, v35);
    uint64_t v36 = sub_1002F16C8(v33, v34, (uint64_t)v35);
    uint64_t v37 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 328))(v36);
    sub_1002CAFCC(v37);
LABEL_27:
    return swift_bridgeObjectRelease();
  }
  uint64_t v13 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v39 = (uint8_t *)v11[2];
  if (!v39) {
    goto LABEL_25;
  }
  BOOL v14 = v11[4] == a1 && v11[5] == a2;
  if (v14 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = v13;
LABEL_10:
    sub_1002F2830(v16, v12, (uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (v39 == (uint8_t *)1)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    sub_1002F2830(v13, v12, (uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v27 = v11 + 7;
  uint64_t v28 = 1;
  while (1)
  {
    uint64_t v29 = v13;
    uint64_t v30 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    BOOL v31 = *(v27 - 1) == a1 && *v27 == a2;
    if (v31 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = v29;
      goto LABEL_10;
    }
    v27 += 2;
    ++v28;
    BOOL v14 = v30 == (void)v39;
    uint64_t v13 = v29;
    if (v14) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1002C5F2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v114 - v8;
  uint64_t v10 = sub_100013A80(&qword_100479588);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v114 - v14;
  uint64_t v16 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v114 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v114 - v24;
  uint64_t result = __chkstk_darwin(v23);
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_supportActiveSession) != 1) {
    return result;
  }
  uint64_t v126 = result;
  uint64_t v127 = v31;
  unint64_t v120 = v9;
  uint64_t v121 = v4;
  uint64_t v117 = (uint64_t *)v29;
  uint64_t v118 = v7;
  uint64_t v32 = (void *)((char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v33 = *(void *)((char *)v1
                  + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                  + 16);
  if (!v33)
  {
LABEL_39:
    NSString v103 = sub_1002A0458();
    uint64_t v104 = *(void *)v103;
    uint64_t v105 = *((void *)v103 + 1);
    unint64_t v106 = *(uint64_t (**)(uint64_t, uint64_t))(*v1 + 552);
    swift_bridgeObjectRetain();
    return v106(v104, v105);
  }
  uint64_t v34 = v3;
  uint64_t v35 = v30;
  uint64_t v115 = (uint64_t *)v27;
  uint64_t v119 = (uint64_t *)((char *)&v114 - v28);
  uint64_t v124 = v13;
  uint64_t v125 = v2;
  uint64_t v36 = *v32;
  unint64_t v37 = v32[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1002F16C8(v36, v37, v33);
  BOOL v122 = v35;
  uint64_t v123 = v34;
  if (v37)
  {
    uint64_t v39 = (*(uint64_t (**)(uint64_t))(*v1 + 328))(v38);
    uint64_t v40 = *(void *)(v39 + 16);
    if (v40)
    {
      unsigned __int8 v116 = v1;
      uint64_t v41 = v39 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
      uint64_t v42 = *(void *)(v127 + 72);
      while (1)
      {
        sub_1002F2874(v41, (uint64_t)v25, type metadata accessor for HostedRoutingSourceSession);
        if (sub_1002A01FC(*((void *)v25 + 2), *((void *)v25 + 3), v36, v37)) {
          break;
        }
        sub_1002F5F00((uint64_t)v25, type metadata accessor for HostedRoutingSourceSession);
        v41 += v42;
        if (!--v40)
        {
          uint64_t v43 = 1;
          goto LABEL_11;
        }
      }
      sub_1002F39C4((uint64_t)v25, (uint64_t)v15, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v43 = 0;
LABEL_11:
      uint64_t v1 = v116;
    }
    else
    {
      uint64_t v43 = 1;
    }
    uint64_t v35 = v122;
    uint64_t v45 = v126;
    uint64_t v44 = v127;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v15, v43, 1, v126);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v15, 1, v45) == 1)
    {
      swift_bridgeObjectRelease();
      sub_100009A08((uint64_t)v15, &qword_100479588);
      uint64_t v34 = v123;
      goto LABEL_21;
    }
    sub_1002F39C4((uint64_t)v15, (uint64_t)v119, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v46 = (void *)((char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
    swift_beginAccess();
    uint64_t v47 = *v46;
    uint64_t v34 = v123;
    if (*(void *)(v47 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v48 = sub_100013660(v36, v37);
      if (v49)
      {
        uint64_t v50 = *(void *)(*(void *)(v47 + 56) + 8 * v48);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(v50 + 16) == 2)
        {
          uint64_t v51 = sub_1001A69C4();
          char v52 = v120;
          uint64_t v53 = v121;
          (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v120, v51, v34);
          uint64_t v54 = v115;
          sub_1002F2874((uint64_t)v119, (uint64_t)v115, type metadata accessor for HostedRoutingSourceSession);
          swift_bridgeObjectRetain();
          uint64_t v55 = Logger.logObject.getter();
          os_log_type_t v56 = static os_log_type_t.debug.getter();
          int v57 = v56;
          if (os_log_type_enabled(v55, v56))
          {
            uint64_t v58 = swift_slowAlloc();
            uint64_t v126 = swift_slowAlloc();
            v130[0] = v126;
            *(_DWORD *)uint64_t v58 = 136315650;
            LODWORD(v124) = v57;
            uint64_t v59 = _typeName(_:qualified:)();
            unsigned __int8 v116 = v1;
            uint64_t v129 = sub_10018A9E0(v59, v60, v130);
            uint64_t v127 = v50;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v58 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v129 = sub_10018A9E0(v36, v37, v130);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v58 + 22) = 2080;
            uint64_t v61 = *v54;
            unint64_t v62 = v54[1];
            swift_bridgeObjectRetain();
            uint64_t v129 = sub_10018A9E0(v61, v62, v130);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v1 = v116;
            swift_bridgeObjectRelease();
            sub_1002F5F00((uint64_t)v54, type metadata accessor for HostedRoutingSourceSession);
            _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v124, "[%s] updateActiveSessionIdentifierIfNeeded - matched session elements groupIdentifier: %s to session: %s", (uint8_t *)v58, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v53 + 8))(v120, v34);
          }
          else
          {
            swift_bridgeObjectRelease_n();
            sub_1002F5F00((uint64_t)v54, type metadata accessor for HostedRoutingSourceSession);

            (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v34);
          }
          uint64_t v107 = v119;
          uint64_t v108 = *v119;
          uint64_t v109 = v119[1];
          uint64_t v110 = *(void (**)(uint64_t, uint64_t))(*v1 + 552);
          swift_bridgeObjectRetain();
          v110(v108, v109);
          swift_release();
          return sub_1002F5F00((uint64_t)v107, type metadata accessor for HostedRoutingSourceSession);
        }
        sub_1002F5F00((uint64_t)v119, type metadata accessor for HostedRoutingSourceSession);
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_21;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1002F5F00((uint64_t)v119, type metadata accessor for HostedRoutingSourceSession);
    swift_bridgeObjectRelease();
  }
LABEL_21:
  uint64_t v63 = v32[2];
  uint64_t v64 = (uint64_t)v124;
  if (!v63) {
    goto LABEL_39;
  }
  uint64_t v66 = *v32;
  uint64_t v65 = v32[1];
  sub_1002F2830(*v32, v65, v32[2]);
  swift_bridgeObjectRetain();
  sub_1002F16C8(v66, v65, v63);
  uint64_t v67 = swift_bridgeObjectRetain();
  uint64_t v68 = sub_10000B4EC(v67);
  unint64_t v120 = (char *)v63;
  uint64_t v69 = swift_bridgeObjectRelease();
  uint64_t v70 = (*(uint64_t (**)(uint64_t))(*v1 + 328))(v69);
  uint64_t v71 = *(void *)(v70 + 16);
  if (v71)
  {
    unsigned __int8 v116 = v1;
    uint64_t v72 = v70 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
    uint64_t v73 = *(void *)(v127 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1002F2874(v72, (uint64_t)v20, type metadata accessor for HostedRoutingSourceSession);
      swift_bridgeObjectRetain();
      uint64_t v74 = swift_bridgeObjectRetain();
      uint64_t v75 = sub_1002F3708(v74, v68);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v76 = v75[2];
      swift_bridgeObjectRelease();
      if (v76) {
        break;
      }
      sub_1002F5F00((uint64_t)v20, type metadata accessor for HostedRoutingSourceSession);
      v72 += v73;
      if (!--v71)
      {
        swift_bridgeObjectRelease();
        uint64_t v77 = 1;
        uint64_t v1 = v116;
        uint64_t v35 = v122;
        uint64_t v78 = v123;
        uint64_t v64 = (uint64_t)v124;
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v64 = (uint64_t)v124;
    sub_1002F39C4((uint64_t)v20, (uint64_t)v124, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v77 = 0;
    uint64_t v1 = v116;
    uint64_t v35 = v122;
    uint64_t v78 = v123;
  }
  else
  {
    uint64_t v78 = v34;
    uint64_t v77 = 1;
  }
LABEL_29:
  uint64_t v80 = v126;
  uint64_t v79 = v127;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56))(v64, v77, 1, v126);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v64, 1, v80) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100009A08(v64, &qword_100479588);
    goto LABEL_39;
  }
  sub_1002F39C4(v64, (uint64_t)v35, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v81 = v35[3];
  if (!v81
    || (uint64_t v82 = v35[2],
        uint64_t v83 = (void *)((char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints),
        swift_beginAccess(),
        uint64_t v84 = *v83,
        !*(void *)(v84 + 16)))
  {
LABEL_38:
    sub_1002F5F00((uint64_t)v35, type metadata accessor for HostedRoutingSourceSession);
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v85 = sub_100013660(v82, v81);
  if ((v86 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  uint64_t v87 = *(void *)(*(void *)(v84 + 56) + 8 * v85);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v87 + 16) != 2)
  {
    sub_1002F5F00((uint64_t)v35, type metadata accessor for HostedRoutingSourceSession);
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_39;
  }
  uint64_t v88 = sub_1001A69C4();
  uint64_t v89 = v121;
  uint64_t v90 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v118, v88, v78);
  uint64_t v91 = v117;
  sub_1002F2874((uint64_t)v35, (uint64_t)v117, type metadata accessor for HostedRoutingSourceSession);
  swift_bridgeObjectRetain();
  int v92 = Logger.logObject.getter();
  os_log_type_t v93 = static os_log_type_t.debug.getter();
  LODWORD(v127) = v93;
  if (os_log_type_enabled(v92, v93))
  {
    uint64_t v94 = swift_slowAlloc();
    uint64_t v126 = swift_slowAlloc();
    uint64_t v129 = v126;
    *(_DWORD *)uint64_t v94 = 136315650;
    unsigned __int8 v116 = v1;
    uint64_t v95 = _typeName(_:qualified:)();
    uint64_t v128 = sub_10018A9E0(v95, v96, &v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v94 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v97 = Array.description.getter();
    unint64_t v99 = v98;
    swift_bridgeObjectRelease();
    uint64_t v100 = v97;
    uint64_t v35 = v122;
    uint64_t v128 = sub_10018A9E0(v100, v99, &v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v94 + 22) = 2080;
    uint64_t v101 = *v91;
    unint64_t v102 = v91[1];
    swift_bridgeObjectRetain();
    uint64_t v128 = sub_10018A9E0(v101, v102, &v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v1 = v116;
    swift_bridgeObjectRelease();
    sub_1002F5F00((uint64_t)v91, type metadata accessor for HostedRoutingSourceSession);
    _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v127, "[%s] updateActiveSessionIdentifierIfNeeded - matched session elements device identifiers: %s to session: %s", (uint8_t *)v94, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v121 + 8))(v118, v123);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1002F5F00((uint64_t)v91, type metadata accessor for HostedRoutingSourceSession);

    (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v78);
  }
  uint64_t v111 = *v35;
  uint64_t v112 = v35[1];
  os_log_type_t v113 = *(void (**)(uint64_t, uint64_t))(*v1 + 552);
  swift_bridgeObjectRetain();
  v113(v111, v112);
  swift_release();
  return sub_1002F5F00((uint64_t)v35, type metadata accessor for HostedRoutingSourceSession);
}

void sub_1002C6DDC()
{
  uint64_t v118 = *v0;
  uint64_t v113 = type metadata accessor for RoutingMode();
  int64_t v1 = *(void *)(v113 - 8);
  uint64_t v2 = __chkstk_darwin(v113);
  uint64_t v112 = &v106[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v111 = &v106[-v4];
  uint64_t v130 = type metadata accessor for Logger();
  int64_t v5 = *(void *)(v130 - 8);
  uint64_t v6 = __chkstk_darwin(v130);
  uint64_t v8 = (uint64_t)&v106[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v106[-v9];
  uint64_t v119 = v0;
  id v11 = sub_1002BC8B8();
  id v12 = [v11 availableEndpoints];

  if (!v12) {
    goto LABEL_117;
  }
  sub_10018FE08(0, &qword_10047C9D0);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v14 = sub_1001A69C4();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v127 = v14;
  int64_t v126 = v5 + 16;
  uint64_t v125 = v15;
  ((void (*)(unsigned char *))v15)(v10);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  unint64_t v120 = (uint64_t *)v8;
  unint64_t v128 = v13;
  int64_t v129 = v1;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v132 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v20 = _typeName(_:qualified:)();
    int64_t v21 = v5;
    uint64_t v134 = sub_10018A9E0(v20, v22, &v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v23 = Array.description.getter();
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v134 = sub_10018A9E0(v23, v25, &v132);
    uint64_t v8 = (uint64_t)v120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    int64_t v5 = v21;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%s] updateEndpoints - endpoints: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v13 = v128;
    swift_slowDealloc();

    uint64_t v124 = *(void (**)(unsigned char *, uint64_t))(v21 + 8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v124 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  }
  v124(v10, v130);
  unint64_t v26 = (unint64_t)&type metadata for Any;
  uint64_t v135 = &_swiftEmptySetSingleton;
  if (v13 >> 62) {
    goto LABEL_115;
  }
  uint64_t v27 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v121 = v27;
    if (v27)
    {
      int64_t v28 = v5;
      int64_t v5 = v13 & 0xC000000000000001;
      uint64_t v115 = (void *)((char *)v119 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
      swift_beginAccess();
      int v107 = 0;
      unint64_t v29 = 0;
      uint64_t v122 = v13 & 0xFFFFFFFFFFFFFF8;
      unsigned int v110 = enum case for RoutingMode.disabled(_:);
      uint64_t v109 = (void (**)(unsigned char *, void, uint64_t))(v129 + 104);
      uint64_t v108 = (void (**)(unsigned char *, uint64_t))(v129 + 8);
      int64_t v123 = v28 + 8;
      uint64_t v30 = &selRef_initWithName_fromMessage_withDelegate_;
      *(void *)&long long v31 = 136315394;
      long long v117 = v31;
      unint64_t v116 = v26 + 8;
      uint64_t v32 = v121;
      int64_t v129 = v13 & 0xC000000000000001;
      while (1)
      {
        while (1)
        {
          if (v5)
          {
            id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v29 >= *(void *)(v122 + 16)) {
              goto LABEL_113;
            }
            id v33 = *(id *)(v13 + 8 * v29 + 32);
          }
          uint64_t v34 = v33;
          unint64_t v26 = v29 + 1;
          if (__OFADD__(v29, 1))
          {
            __break(1u);
            goto LABEL_112;
          }
          if (![v33 v30[212]]) {
            break;
          }

LABEL_10:
          ++v29;
          if (v26 == v32) {
            goto LABEL_48;
          }
        }
        id v35 = [v34 outputDevices];
        if (!v35) {
          goto LABEL_41;
        }
        uint64_t v36 = v35;
        sub_10018FE08(0, (unint64_t *)&qword_100478370);
        unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v37 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v66)
          {
LABEL_40:
            swift_bridgeObjectRelease();
LABEL_41:
            v125(v8, v127, v130);
            id v67 = v34;
            uint64_t v68 = Logger.logObject.getter();
            os_log_type_t v69 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v68, v69))
            {
              uint64_t v70 = swift_slowAlloc();
              uint64_t v71 = (void *)swift_slowAlloc();
              uint64_t v132 = swift_slowAlloc();
              *(_DWORD *)uint64_t v70 = v117;
              uint64_t v72 = _typeName(_:qualified:)();
              *(void *)(v70 + 4) = sub_10018A9E0(v72, v73, &v132);
              uint64_t v32 = v121;
              swift_bridgeObjectRelease();
              *(_WORD *)(v70 + 12) = 2112;
              *(void *)(v70 + 14) = v67;
              *uint64_t v71 = v67;

              _os_log_impl((void *)&_mh_execute_header, v68, v69, "[%s] updateEndpoints - endpoint: %@ has no output device with a groupID", (uint8_t *)v70, 0x16u);
              sub_100013A80((uint64_t *)&unk_10047B850);
              swift_arrayDestroy();
              uint64_t v8 = (uint64_t)v120;
              swift_slowDealloc();
              swift_arrayDestroy();
              unint64_t v13 = v128;
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            v124((unsigned char *)v8, v130);
LABEL_45:
            int64_t v5 = v129;
            uint64_t v30 = &selRef_initWithName_fromMessage_withDelegate_;
            goto LABEL_10;
          }
        }
        else if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_40;
        }
        if ((v37 & 0xC000000000000001) != 0)
        {
          id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_114;
          }
          id v38 = *(id *)(v37 + 32);
        }
        uint64_t v39 = v38;
        swift_bridgeObjectRelease();
        id v40 = [v39 groupID];

        if (!v40) {
          goto LABEL_41;
        }
        Swift::Int v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        Swift::Int v43 = v42;

        swift_bridgeObjectRetain();
        sub_10000DDD8(&v132, v41, v43);
        uint64_t v44 = swift_bridgeObjectRelease();
        uint64_t v45 = *v115;
        if (!*(void *)(*v115 + 16)) {
          goto LABEL_30;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v46 = sub_100013660(v41, v43);
        if ((v47 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v44 = swift_bridgeObjectRelease();
LABEL_30:
          Swift::Int v114 = v41;
          char v52 = v111;
          (*(void (**)(uint64_t))(*v119 + 304))(v44);
          uint64_t v53 = v112;
          uint64_t v54 = v113;
          (*v109)(v112, v110, v113);
          sub_1002F14AC(&qword_100478DA8, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
          char v55 = dispatch thunk of static Equatable.== infix(_:_:)();
          os_log_type_t v56 = *v108;
          (*v108)(v53, v54);
          uint64_t v57 = v54;
          uint64_t v8 = (uint64_t)v120;
          v56(v52, v57);
          uint64_t v32 = v121;
          if ((v55 & 1) == 0
            || (id v58 = [v34 externalDevice], v58, v58)
            && ([v34 isConnected] & 1) != 0)
          {
            type metadata accessor for HostedRoutingSessionDataSource.EndpointEntry();
            uint64_t v59 = swift_allocObject();
            *(unsigned char *)(v59 + 16) = 0;
            *(void *)(v59 + 24) = 0;
            swift_bridgeObjectRetain();
            id v60 = v34;
            *(void *)(v59 + 48) = sub_1001E78B8();
            *(void *)(v59 + 56) = v61;
            *(unsigned char *)(v59 + 80) = 1;
            *(void *)(v59 + 64) = v60;
            *(void *)(v59 + 72) = v60;
            uint64_t v62 = v114;
            *(void *)(v59 + 32) = v114;
            *(void *)(v59 + 40) = v43;
            uint64_t v63 = v115;
            swift_beginAccess();
            id v64 = v60;
            swift_retain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v133 = *v63;
            *uint64_t v63 = 0x8000000000000000;
            sub_1002F1194(v59, v62, v43, isUniquelyReferenced_nonNull_native);
            *uint64_t v63 = v133;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            sub_1002C7E2C(v59);
            swift_release();
          }
          else
          {

            swift_bridgeObjectRelease();
          }
          unint64_t v13 = v128;
          goto LABEL_45;
        }
        uint64_t v48 = *(void *)(*(void *)(v45 + 56) + 8 * v46);
        swift_retain();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_1002BD508(v34);
        char v50 = v49;

        if ((v50 & 1) == 0)
        {
          swift_release();
          unint64_t v13 = v128;
          uint64_t v32 = v121;
          uint64_t v30 = &selRef_initWithName_fromMessage_withDelegate_;
          goto LABEL_10;
        }
        int v51 = *(unsigned __int8 *)(v48 + 16);
        swift_release();
        uint64_t v32 = v121;
        if (v51 != 2)
        {
          unint64_t v13 = v128;
          uint64_t v30 = &selRef_initWithName_fromMessage_withDelegate_;
          goto LABEL_10;
        }
        int v107 = 1;
        ++v29;
        unint64_t v13 = v128;
        uint64_t v30 = &selRef_initWithName_fromMessage_withDelegate_;
        if (v26 == v121) {
          goto LABEL_48;
        }
      }
    }
    int v107 = 0;
LABEL_48:
    swift_bridgeObjectRelease();
    uint64_t v74 = (char *)v119 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints;
    swift_beginAccess();
    int64_t v126 = (int64_t)v74;
    uint64_t v75 = *(void *)v74;
    uint64_t v76 = *(void *)v74 + 64;
    uint64_t v77 = 1 << *(unsigned char *)(*(void *)v74 + 32);
    uint64_t v78 = v77 < 64 ? ~(-1 << v77) : -1;
    unint64_t v79 = v78 & *(void *)(*(void *)v74 + 64);
    int64_t v129 = (unint64_t)(v77 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    LODWORD(v127) = 0;
    int64_t v5 = 0;
    unint64_t v128 = v76;
    while (1)
    {
      unint64_t v13 = (unint64_t)v135;
      uint64_t v130 = (uint64_t)v135 + 56;
      if (!v79) {
        break;
      }
      while (1)
      {
        while (1)
        {
          unint64_t v80 = __clz(__rbit64(v79));
          v79 &= v79 - 1;
          unint64_t v81 = v80 | (v5 << 6);
LABEL_75:
          unint64_t v85 = (uint64_t *)(*(void *)(v75 + 48) + 16 * v81);
          uint64_t v87 = *v85;
          uint64_t v86 = v85[1];
          if (!*(void *)(v13 + 16))
          {
            swift_bridgeObjectRetain();
LABEL_100:
            unint64_t v99 = (uint64_t *)v126;
            goto LABEL_102;
          }
          Hasher.init(_seed:)();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          String.hash(into:)();
          Swift::Int v88 = Hasher._finalize()();
          uint64_t v8 = -1 << *(unsigned char *)(v13 + 32);
          unint64_t v26 = v88 & ~v8;
          if (((*(void *)(v130 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_100;
          }
          uint64_t v89 = *(void *)(v13 + 48);
          uint64_t v90 = (void *)(v89 + 16 * v26);
          BOOL v91 = *v90 == v87 && v90[1] == v86;
          if (!v91 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v79) {
            goto LABEL_57;
          }
        }
        uint64_t v92 = v75;
        unint64_t v93 = ~v8;
        unint64_t v26 = (v26 + 1) & ~v8;
        if (((*(void *)(v130 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
          goto LABEL_101;
        }
        uint64_t v94 = (void *)(v89 + 16 * v26);
        BOOL v95 = *v94 == v87 && v94[1] == v86;
        if (!v95 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          break;
        }
LABEL_88:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v75 = v92;
        uint64_t v76 = v128;
        if (!v79) {
          goto LABEL_57;
        }
      }
      for (unint64_t i = v26 + 1; ; unint64_t i = v8 + 1)
      {
        uint64_t v8 = i & v93;
        if (((*(void *)(v130 + (((i & v93) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v93)) & 1) == 0) {
          break;
        }
        uint64_t v97 = (void *)(v89 + 16 * v8);
        BOOL v98 = *v97 == v87 && v97[1] == v86;
        if (v98 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_88;
        }
      }
LABEL_101:
      swift_bridgeObjectRelease();
      uint64_t v75 = v92;
      unint64_t v99 = (uint64_t *)v126;
      uint64_t v76 = v128;
LABEL_102:
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v8 = (uint64_t)v99;
      unint64_t v100 = sub_100013660(v87, v86);
      char v102 = v101;
      swift_bridgeObjectRelease();
      if (v102)
      {
        char v103 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v104 = *(void *)v8;
        uint64_t v131 = *(void *)v8;
        *(void *)uint64_t v8 = 0x8000000000000000;
        if ((v103 & 1) == 0)
        {
          sub_1002F192C();
          uint64_t v104 = v131;
        }
        swift_bridgeObjectRelease();
        sub_1001F1A4C(v100, v104);
        *(void *)uint64_t v8 = v104;
        swift_release();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_endAccess();
      LODWORD(v127) = 1;
    }
LABEL_57:
    int64_t v82 = v5 + 1;
    if (!__OFADD__(v5, 1)) {
      break;
    }
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v82 >= v129) {
    goto LABEL_106;
  }
  unint64_t v83 = *(void *)(v76 + 8 * v82);
  ++v5;
  if (v83)
  {
LABEL_74:
    unint64_t v79 = (v83 - 1) & v83;
    unint64_t v81 = __clz(__rbit64(v83)) + (v5 << 6);
    goto LABEL_75;
  }
  int64_t v5 = v82 + 1;
  if (v82 + 1 >= v129)
  {
LABEL_106:
    swift_release();
    swift_bridgeObjectRelease();
    if ((v107 | v127))
    {
      uint64_t v105 = "updateEndpoints - removed mapped endpoint entry";
      if (v107) {
        uint64_t v105 = "updateEndpoints - updated mapped endpoint entry";
      }
      sub_1002CA8DC(0xD00000000000002FLL, (unint64_t)(v105 - 32) | 0x8000000000000000);
    }
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v83 = *(void *)(v76 + 8 * v5);
  if (v83) {
    goto LABEL_74;
  }
  int64_t v5 = v82 + 2;
  if (v82 + 2 >= v129) {
    goto LABEL_106;
  }
  unint64_t v83 = *(void *)(v76 + 8 * v5);
  if (v83) {
    goto LABEL_74;
  }
  int64_t v5 = v82 + 3;
  if (v82 + 3 >= v129) {
    goto LABEL_106;
  }
  unint64_t v83 = *(void *)(v76 + 8 * v5);
  if (v83) {
    goto LABEL_74;
  }
  int64_t v5 = v82 + 4;
  if (v82 + 4 >= v129) {
    goto LABEL_106;
  }
  unint64_t v83 = *(void *)(v76 + 8 * v5);
  if (v83) {
    goto LABEL_74;
  }
  int64_t v84 = v82 + 5;
  if (v84 >= v129) {
    goto LABEL_106;
  }
  unint64_t v83 = *(void *)(v76 + 8 * v84);
  if (v83)
  {
    int64_t v5 = v84;
    goto LABEL_74;
  }
  while (1)
  {
    int64_t v5 = v84 + 1;
    if (__OFADD__(v84, 1)) {
      break;
    }
    if (v5 >= v129) {
      goto LABEL_106;
    }
    unint64_t v83 = *(void *)(v76 + 8 * v5);
    ++v84;
    if (v83) {
      goto LABEL_74;
    }
  }
  __break(1u);
LABEL_117:
  __break(1u);
}

void sub_1002C7E2C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for RoutingMode();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  __chkstk_darwin(v5);
  uint64_t v54 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(a1 + 40);
  uint64_t v58 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 48);
  unint64_t v12 = *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v14, v7);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  uint64_t v57 = v10;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v51 = v7;
    uint64_t v19 = v18;
    uint64_t v49 = swift_slowAlloc();
    aBlock[0] = v49;
    *(_DWORD *)uint64_t v19 = 136316162;
    os_log_t v48 = v15;
    uint64_t v20 = _typeName(_:qualified:)();
    uint64_t v50 = v8;
    uint64_t v59 = sub_10018A9E0(v20, v21, aBlock);
    uint64_t v52 = v4;
    uint64_t v53 = aBlock;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_10018A9E0(v13, v12, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 22) = 2080;
    id v22 = [*(id *)(a1 + 64) uniqueIdentifier];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v46 = v13;
    uint64_t v24 = v23;
    int v47 = v17;
    unint64_t v26 = v25;

    uint64_t v59 = sub_10018A9E0(v24, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    uint64_t v27 = v58;
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_10018A9E0(v27, v11, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v28 = swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 42) = 2080;
    unint64_t v29 = v54;
    (*(void (**)(uint64_t))(*v2 + 304))(v28);
    sub_1002F14AC(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
    uint64_t v30 = v56;
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v33 = v32;
    uint64_t v34 = v29;
    uint64_t v35 = v46;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v34, v30);
    uint64_t v59 = sub_10018A9E0(v31, v33, aBlock);
    uint64_t v4 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v36 = v48;
    _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v47, "[%s] connectToEntry<%s> - connect to endpoint: %s with groupID: %s, routingMode: %s", (uint8_t *)v19, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v50 + 8))(v57, v51);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v57, v7);
    uint64_t v35 = v13;
  }
  *(unsigned char *)(a1 + 16) = 1;
  unint64_t v37 = *(void **)(a1 + 64);
  id v38 = objc_allocWithZone((Class)MRRequestDetails);
  id v39 = v37;
  NSString v40 = String._bridgeToObjectiveC()();
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v38 initWithName:v40 requestID:0 reason:v41 userInitiated:0];

  Swift::Int v43 = (void *)swift_allocObject();
  v43[2] = v2;
  v43[3] = v35;
  v43[4] = v12;
  v43[5] = a1;
  v43[6] = v58;
  v43[7] = v11;
  v43[8] = v4;
  aBlock[4] = (uint64_t)sub_1002F3054;
  aBlock[5] = (uint64_t)v43;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001872F8;
  aBlock[3] = (uint64_t)&unk_1004281A8;
  uint64_t v44 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v39 connectToExternalDeviceWithOptions:0 details:v42 completion:v44];

  _Block_release(v44);
}

uint64_t sub_1002C84F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v63 = a8;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v69 = *(void *)(v15 - 8);
  uint64_t v70 = v15;
  __chkstk_darwin(v15);
  uint64_t v68 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v67 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v65 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v66 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  id v64 = (char *)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 280))(v20);
  uint64_t v23 = (void *)v22;
  if (a1)
  {
    uint64_t v59 = a6;
    id v60 = (void *)v22;
    uint64_t v61 = v19;
    uint64_t v24 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v24, v70);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v28 = swift_slowAlloc();
      unint64_t v62 = a7;
      uint64_t v29 = v28;
      uint64_t v30 = (void *)swift_slowAlloc();
      v54[1] = v30;
      uint64_t v57 = (void **)swift_slowAlloc();
      long long aBlock = v57;
      *(_DWORD *)uint64_t v29 = 136316162;
      int v56 = v27;
      uint64_t v31 = _typeName(_:qualified:)();
      uint64_t v58 = v17;
      uint64_t v71 = (void *)sub_10018A9E0(v31, v32, (uint64_t *)&aBlock);
      os_log_t v55 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v71 = (void *)sub_10018A9E0(a3, a4, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 22) = 2112;
      swift_errorRetain();
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v71 = (void *)v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v30 = v33;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v29 + 32) = 2080;
      v54[0] = v29 + 34;
      id v34 = objc_msgSend(*(id *)(a5 + 64), "uniqueIdentifier", v29 + 34);
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v36;

      uint64_t v38 = v35;
      uint64_t v17 = v58;
      uint64_t v71 = (void *)sub_10018A9E0(v38, v37, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 42) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v39 = v59;
      uint64_t v71 = (void *)sub_10018A9E0(v59, v62, (uint64_t *)&aBlock);
      uint64_t v40 = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      os_log_t v41 = v55;
      _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v56, "[%s] connectToEntry<%s> - error: %@ connecting to endpoint: %s with groupID: %s", (uint8_t *)v29, 0x34u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a7 = v62;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      swift_bridgeObjectRelease_n();
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
      uint64_t v39 = v59;
      uint64_t v40 = v63;
    }
    os_log_t v48 = (void *)swift_allocObject();
    v48[2] = a2;
    v48[3] = a5;
    v48[4] = a3;
    v48[5] = a4;
    v48[6] = v39;
    v48[7] = a7;
    v48[8] = v40;
    uint64_t v76 = sub_1002F34A8;
    uint64_t v77 = v48;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v73 = 1107296256;
    uint64_t v74 = sub_100006760;
    uint64_t v75 = &unk_100428248;
    uint64_t v49 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v50 = v64;
    static DispatchQoS.unspecified.getter();
    uint64_t v71 = _swiftEmptyArrayStorage;
    sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100013A80((uint64_t *)&unk_100479AE0);
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    uint64_t v51 = v65;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v52 = v60;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v49);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v51, v17);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v50, v61);
  }
  else
  {
    id v42 = (void *)swift_allocObject();
    v42[2] = a2;
    v42[3] = a6;
    v42[4] = a7;
    v42[5] = a5;
    v42[6] = v23;
    v42[7] = a3;
    v42[8] = a4;
    uint64_t v76 = sub_1002F30C0;
    uint64_t v77 = v42;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v73 = 1107296256;
    uint64_t v74 = sub_100006760;
    uint64_t v75 = &unk_1004281F8;
    Swift::Int v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v44 = v23;
    swift_bridgeObjectRetain();
    uint64_t v45 = v64;
    static DispatchQoS.unspecified.getter();
    uint64_t v71 = _swiftEmptyArrayStorage;
    sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v46 = v65;
    sub_100013A80((uint64_t *)&unk_100479AE0);
    uint64_t v47 = v66;
    sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v43);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v17);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v19);
  }
  return swift_release();
}

uint64_t sub_1002C8E44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v61 = a7;
  uint64_t v70 = a6;
  uint64_t v63 = a5;
  uint64_t v62 = a3;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v75 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v69 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v68 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v67 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchTime();
  uint64_t v72 = *(void *)(v14 - 8);
  uint64_t v73 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v65 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v71 = (char *)&v58 - v17;
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = 0x403E000000000000;
  uint64_t v23 = *(void *)(a2 + 32);
  uint64_t v22 = *(void *)(a2 + 40);
  uint64_t v66 = a2;
  uint64_t v64 = a1;
  uint64_t v24 = (uint64_t *)(a1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_failedEndpointReconnectIntervals);
  swift_beginAccess();
  uint64_t v25 = *v24;
  if (!*(void *)(*v24 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_100013660(v23, v22);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = *v24;
    *uint64_t v24 = 0x8000000000000000;
    sub_1002F170C(v23, v22, isUniquelyReferenced_nonNull_native, 30.0);
    *uint64_t v24 = v79;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_8;
  }
  double v28 = *(double *)(*(void *)(v25 + 56) + 8 * v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v29 = v28 * 4.0;
  if (v28 * 4.0 <= 1800.0) {
    double v29 = 1800.0;
  }
  uint64_t v80 = *(void *)&v29;
LABEL_8:
  uint64_t v31 = sub_1001A69C4();
  uint64_t v32 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v31, v18);
  uint64_t v33 = v80;
  unint64_t v34 = a4;
  swift_bridgeObjectRetain_n();
  unint64_t v35 = v70;
  swift_bridgeObjectRetain_n();
  unint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v76 = v10;
  uint64_t v74 = v12;
  if (v38)
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v60 = v32;
    uint64_t v40 = v39;
    uint64_t v59 = swift_slowAlloc();
    aBlock[0] = v59;
    *(_DWORD *)uint64_t v40 = 136315906;
    uint64_t v41 = _typeName(_:qualified:)();
    uint64_t v79 = sub_10018A9E0(v41, v42, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_10018A9E0(v62, v34, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_10018A9E0(v63, v35, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 32) = 2048;
    uint64_t v79 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "[%s] connectToEntry<%s> - pause reconnection attempts for groupID: %s for: %fs", (uint8_t *)v40, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v43 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v60);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v43 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v32);
  }
  id v44 = v69;
  uint64_t v45 = v68;
  uint64_t v46 = v67;
  uint64_t v47 = v66;
  uint64_t v48 = v64;
  uint64_t v49 = v65;
  uint64_t v70 = (*(uint64_t (**)(uint64_t))(*(void *)v64 + 280))(v43);
  static DispatchTime.now()();
  swift_beginAccess();
  uint64_t v50 = v71;
  + infix(_:_:)();
  uint64_t v72 = *(void *)(v72 + 8);
  uint64_t v51 = v49;
  uint64_t v52 = v73;
  ((void (*)(char *, uint64_t))v72)(v51, v73);
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v48;
  *(void *)(v53 + 24) = v47;
  aBlock[4] = (uint64_t)sub_1002F3500;
  aBlock[5] = v53;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100006760;
  aBlock[3] = (uint64_t)&unk_100428298;
  uint64_t v54 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v77 = _swiftEmptyArrayStorage;
  sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  uint64_t v55 = v76;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  int v56 = (void *)v70;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v54);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v44, v55);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v74);
  ((void (*)(char *, uint64_t))v72)(v50, v52);
  return swift_release();
}

uint64_t sub_1002C96E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)Notification.name.getter();
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a3;
  v17[3] = a4;
  v17[4] = v14;
  v17[5] = v16;
  aBlock[4] = sub_1002F35FC;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100428388;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v23 = _swiftEmptyArrayStorage;
  sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
  return swift_release();
}

uint64_t sub_1002C99C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1002C9ABC(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v41 = *(void *)(v45 - 8);
  uint64_t v9 = __chkstk_darwin(v45);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = a1[4];
  uint64_t v15 = a1[5];
  uint64_t v46 = v1;
  uint64_t v16 = (uint64_t *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *v16;
  if (*(void *)(*v16 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_100013660(v14, v15);
    if (v20)
    {
      uint64_t v39 = v6;
      uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(v21 + 48);
      uint64_t v24 = *(void **)(v21 + 56);
      uint64_t v25 = (void *)a1[7];
      uint64_t v40 = a1[6];
      BOOL v26 = v23 == v40 && v24 == v25;
      if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v38 = v22;
        sub_1002F02A8(v14, v15);
        swift_endAccess();
        swift_bridgeObjectRelease();
        uint64_t v27 = swift_release();
        uint64_t v28 = v46;
        double v29 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v46 + 280))(v27);
        static DispatchTime.now()();
        + infix(_:_:)();
        os_log_type_t v37 = v25;
        uint64_t v41 = *(void *)(v41 + 8);
        ((void (*)(char *, uint64_t))v41)(v11, v45);
        uint64_t v51 = sub_1002F7A30;
        uint64_t v52 = v28;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        uint64_t v49 = sub_100006760;
        uint64_t v50 = &unk_100428158;
        uint64_t v30 = _Block_copy(&aBlock);
        swift_retain();
        static DispatchQoS.unspecified.getter();
        uint64_t v47 = _swiftEmptyArrayStorage;
        sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100013A80((uint64_t *)&unk_100479AE0);
        sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
        uint64_t v31 = v44;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v31);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v42);
        ((void (*)(char *, uint64_t))v41)(v13, v45);
        swift_release();
        *(void *)&long long aBlock = 0;
        *((void *)&aBlock + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(35);
        swift_bridgeObjectRelease();
        strcpy((char *)&aBlock, "removeEntry<");
        BYTE13(aBlock) = 0;
        HIWORD(aBlock) = -5120;
        uint64_t v32 = v37;
        swift_bridgeObjectRetain();
        v33._countAndFlagsBits = v40;
        v33._object = v32;
        String.append(_:)(v33);
        swift_bridgeObjectRelease();
        v34._object = (void *)0x80000001003BA220;
        v34._countAndFlagsBits = 0xD000000000000013;
        String.append(_:)(v34);
        v35._countAndFlagsBits = sub_1002BDC70();
        String.append(_:)(v35);
        swift_bridgeObjectRelease();
        sub_1002CA8DC(aBlock, *((unint64_t *)&aBlock + 1));
        swift_release();
        return swift_bridgeObjectRelease();
      }
      else
      {
        return swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1002CA060()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v56 - v7;
  uint64_t v9 = type metadata accessor for RoutingMode();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v63 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v56 - v14;
  uint64_t v61 = *(void (**)(void))(v1 + 304);
  uint64_t v62 = v1 + 304;
  ((void (*)(uint64_t))v61)(v13);
  uint64_t v64 = v10;
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v9);
  if (v16 == enum case for RoutingMode.disabled(_:) || v16 == enum case for RoutingMode.prewarm(_:))
  {
    id v18 = sub_1002BC8B8();
    unsigned int v19 = [v18 discoveryMode];

    if (v19 == 2)
    {
      uint64_t v20 = sub_1001A69C4();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v20, v2);
      swift_retain_n();
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      int v23 = v22;
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v60 = v2;
        uint64_t v25 = v3;
        uint64_t v26 = v24;
        uint64_t v59 = swift_slowAlloc();
        uint64_t v66 = v59;
        *(_DWORD *)uint64_t v26 = 136315394;
        int v58 = v23;
        uint64_t v27 = _typeName(_:qualified:)();
        uint64_t v65 = sub_10018A9E0(v27, v28, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v29 = swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2080;
        uint64_t v57 = v26 + 14;
        uint64_t v30 = v63;
        ((void (*)(uint64_t))v61)(v29);
        sub_1002F14AC(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
        uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v33 = v32;
        (*(void (**)(char *, uint64_t))(v64 + 8))(v30, v9);
        uint64_t v65 = sub_10018A9E0(v31, v33, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v58, "[%s] updateDiscovery - disable for routing mode: %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v60);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      id v51 = sub_1002BC8B8();
      [v51 setDiscoveryMode:0];
      goto LABEL_21;
    }
  }
  else
  {
    if (v16 != enum case for RoutingMode.localNetwork(_:) && v16 != enum case for RoutingMode.detailed(_:))
    {
      uint64_t v66 = 0;
      unint64_t v67 = 0xE000000000000000;
      _StringGuts.grow(_:)(47);
      swift_bridgeObjectRelease();
      uint64_t v66 = 91;
      unint64_t v67 = 0xE100000000000000;
      v52._countAndFlagsBits = _typeName(_:qualified:)();
      String.append(_:)(v52);
      swift_bridgeObjectRelease();
      v53._object = (void *)0x80000001003BA6C0;
      v53._countAndFlagsBits = 0xD00000000000002ALL;
      String.append(_:)(v53);
      uint64_t v54 = v63;
      v61();
      sub_1002F14AC(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
      v55._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v54, v9);
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return;
    }
    id v35 = sub_1002BC8B8();
    unsigned int v36 = [v35 discoveryMode];

    if (!v36)
    {
      uint64_t v37 = sub_1001A69C4();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v37, v2);
      swift_retain_n();
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      int v40 = v39;
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v60 = v2;
        uint64_t v42 = v3;
        uint64_t v43 = v41;
        uint64_t v59 = swift_slowAlloc();
        uint64_t v66 = v59;
        *(_DWORD *)uint64_t v43 = 136315394;
        int v58 = v40;
        uint64_t v44 = _typeName(_:qualified:)();
        uint64_t v65 = sub_10018A9E0(v44, v45, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v46 = swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2080;
        uint64_t v57 = v43 + 14;
        uint64_t v47 = v63;
        ((void (*)(uint64_t))v61)(v46);
        sub_1002F14AC(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
        uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v50 = v49;
        (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v9);
        uint64_t v65 = sub_10018A9E0(v48, v50, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v58, "[%s] updateDiscovery - enable for routing mode: %s", (uint8_t *)v43, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v60);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      }
      id v51 = sub_1002BC8B8();
      [v51 setDiscoveryMode:2];
LABEL_21:
    }
  }
  sub_1002C6DDC();
}

uint64_t sub_1002CA8DC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v52 = *v2;
  uint64_t v6 = sub_100013A80(&qword_10047CE80);
  uint64_t v54 = *(void *)(v6 - 8);
  Swift::String v55 = (char *)v6;
  __chkstk_darwin(v6);
  Swift::String v53 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = sub_1001A69C4();
  uint64_t v47 = *(void (**)(char *))(v9 + 16);
  uint64_t v48 = v15;
  uint64_t v50 = v9 + 16;
  v47(v14);
  swift_bridgeObjectRetain_n();
  int v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  int v18 = v17;
  BOOL v19 = os_log_type_enabled(v16, v17);
  uint64_t v46 = a1;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v51 = v8;
    uint64_t v21 = v20;
    unint64_t v49 = (void (*)(char *, uint64_t))swift_slowAlloc();
    v58[0] = (uint64_t)v49;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v44 = v21 + 4;
    uint64_t v22 = _typeName(_:qualified:)();
    int v45 = v18;
    v57[0] = sub_10018A9E0(v22, v23, v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain();
    v57[0] = sub_10018A9E0(a1, a2, v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v45, "[%s] updateSessionsIfNeeded - reason: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v8 = v51;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v49 = *(void (**)(char *, uint64_t))(v9 + 8);
  v49(v14, v8);
  swift_beginAccess();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_1002F2C0C(v24, (void (*)(uint64_t, uint64_t, uint64_t))sub_1002F28DC);
  swift_bridgeObjectRelease();
  v57[0] = (uint64_t)v25;
  swift_getKeyPath();
  uint64_t v26 = v53;
  KeyPathComparator.init<A>(_:order:)();
  sub_100013A80(&qword_10047CE88);
  sub_1000155BC(&qword_10047CE90, &qword_10047CE88);
  sub_1000155BC(&qword_10047CE98, &qword_10047CE80);
  uint64_t v27 = v55;
  uint64_t v28 = Sequence.sorted<A>(using:)();
  (*(void (**)(char *, char *))(v54 + 8))(v26, v27);
  uint64_t v29 = swift_bridgeObjectRelease();
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(*v3 + 328))(v29);
  char v31 = sub_1002D5A40(v28, v30);
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    ((void (*)(char *, uint64_t, uint64_t))v47)(v12, v48, v8);
    swift_bridgeObjectRetain_n();
    unint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v51 = v8;
      uint64_t v35 = v34;
      uint64_t v36 = swift_slowAlloc();
      Swift::String v55 = v12;
      v57[0] = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v37 = _typeName(_:qualified:)();
      uint64_t v54 = v9;
      uint64_t v56 = sub_10018A9E0(v37, v38, v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_10018A9E0(v46, a2, v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%s] updateSessionsIfNeeded - updated because: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      os_log_type_t v39 = v55;
      uint64_t v40 = v51;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      os_log_type_t v39 = v12;
      uint64_t v40 = v8;
    }
    v49(v39, v40);
    uint64_t v41 = *(void (**)(uint64_t))(*v3 + 336);
    uint64_t v42 = swift_bridgeObjectRetain();
    v41(v42);
    sub_1002CAFCC(v28);
  }
  return swift_bridgeObjectRelease();
}

id sub_1002CAFCC(uint64_t a1)
{
  uint64_t v122 = a1;
  uint64_t v2 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v123 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v106 - v6;
  uint64_t v8 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v113 = *(void *)(v118 - 8);
  uint64_t v11 = __chkstk_darwin(v118);
  uint64_t v126 = (uint64_t)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)__chkstk_darwin(v11);
  uint64_t v125 = (uint64_t)&v106 - v14;
  uint64_t v112 = v1;
  uint64_t v15 = (uint64_t *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16);
  if (!v16) {
    return result;
  }
  uint64_t v17 = *v15;
  uint64_t v18 = v15[1];
  uint64_t v111 = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  id result = (id)sub_1002F16C8(v17, v18, v16);
  if (v18)
  {
    BOOL v19 = (uint64_t *)(v112 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
    swift_beginAccess();
    uint64_t v20 = *v19;
    if (*(void *)(v20 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_100013660(v17, v18);
      if (v22)
      {
        uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(v23 + 16) == 2)
        {
          uint64_t v25 = *(void *)(v23 + 32);
          uint64_t v24 = *(void *)(v23 + 40);
          if (*(unsigned char *)(v23 + 80))
          {
            uint64_t v26 = *(void **)(v23 + 64);
            swift_bridgeObjectRetain();
            id v27 = [v26 resolvedOutputDevices];
          }
          else
          {
            BOOL v98 = *(void **)(v23 + 72);
            swift_bridgeObjectRetain();
            id v27 = [v98 outputDevices];
          }
          id v99 = v27;
          if (v99)
          {
            sub_10018FE08(0, (unint64_t *)&qword_100478370);
            unint64_t v100 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
          }
          else
          {
            unint64_t v100 = _swiftEmptyArrayStorage;
          }
          char v101 = sub_1002BDAD8((unint64_t)v100);
          swift_bridgeObjectRelease();
          char v102 = v111;
          uint64_t v103 = *v111;
          uint64_t v104 = v111[1];
          uint64_t v105 = (void *)v111[2];
          *uint64_t v111 = v25;
          v102[1] = v24;
          v102[2] = (uint64_t)v101;
          sub_1002F2830(v103, v104, (uint64_t)v105);
          sub_1002F16C8(v103, v104, (uint64_t)v105);
          sub_1002BF4F0(v103, v104, v105);
          sub_1002F16C8(v103, v104, (uint64_t)v105);
          return (id)swift_release();
        }
        id result = (id)swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        id result = (id)swift_bridgeObjectRelease();
      }
    }
    else
    {
      id result = (id)swift_bridgeObjectRelease();
    }
  }
  uint64_t v28 = v111[2];
  if (!v28) {
    return result;
  }
  uint64_t v121 = v111[2];
  uint64_t v30 = *v111;
  uint64_t v29 = v111[1];
  sub_1002F2830(*v111, v29, v28);
  swift_bridgeObjectRetain();
  uint64_t v31 = v29;
  uint64_t v32 = v121;
  sub_1002F16C8(v30, v31, v121);
  uint64_t v117 = *(void *)(v32 + 16);
  if (!v117) {
    return (id)swift_bridgeObjectRelease();
  }
  uint64_t v128 = *(void *)(v122 + 16);
  uint64_t v116 = v32 + 32;
  unsigned int v110 = (uint64_t *)(v112 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  id result = (id)swift_beginAccess();
  unint64_t v33 = 0;
  uint64_t v115 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56);
  Swift::Int v114 = (unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
  uint64_t v119 = v10;
  while (v33 < *(void *)(v32 + 16))
  {
    unint64_t v127 = v33;
    uint64_t v34 = (uint64_t *)(v116 + 16 * v33);
    uint64_t v35 = v34[1];
    if (v128)
    {
      uint64_t v36 = *v34;
      uint64_t v37 = v113;
      unint64_t v38 = v122 + ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v39 = 0;
      uint64_t v40 = *(void *)(v37 + 72);
      uint64_t v41 = v126;
      unint64_t v124 = v38;
      uint64_t v120 = v40;
      while (1)
      {
        sub_1002F2874(v38 + v40 * v39, v41, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v42 = *(void *)(v41 + 32);
        uint64_t v43 = *(void *)(v42 + 16);
        if (v43) {
          break;
        }
LABEL_19:
        ++v39;
        sub_1002F5F00(v41, type metadata accessor for HostedRoutingSourceSession);
        if (v39 == v128)
        {
          swift_bridgeObjectRelease();
          uint64_t v48 = 1;
          uint64_t v10 = v119;
          goto LABEL_27;
        }
      }
      uint64_t v44 = v123;
      uint64_t v45 = v42 + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
      swift_bridgeObjectRetain_n();
      uint64_t v46 = *(void *)(v44 + 72);
      while (1)
      {
        sub_1002F2874(v45, (uint64_t)v7, type metadata accessor for HostedRoutingItem);
        char v47 = sub_10029F88C(v36, v35);
        sub_1002F5F00((uint64_t)v7, type metadata accessor for HostedRoutingItem);
        if (v47) {
          break;
        }
        v45 += v46;
        if (!--v43)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v41 = v126;
          unint64_t v38 = v124;
          uint64_t v40 = v120;
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v10 = v119;
      sub_1002F39C4(v126, (uint64_t)v119, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v48 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = 1;
    }
LABEL_27:
    uint64_t v49 = v118;
    (*v115)(v10, v48, 1, v118);
    swift_bridgeObjectRelease();
    if ((*v114)(v10, 1, v49) != 1)
    {
      uint64_t v50 = v125;
      id result = (id)sub_1002F39C4((uint64_t)v10, v125, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v51 = *(void *)(v50 + 24);
      if (!v51) {
        goto LABEL_79;
      }
      uint64_t v52 = *v110;
      if (*(void *)(*v110 + 16))
      {
        uint64_t v53 = *(void *)(v125 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v54 = sub_100013660(v53, v51);
        if (v55)
        {
          uint64_t v56 = *(void *)(*(void *)(v52 + 56) + 8 * v54);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(unsigned char *)(v56 + 16) == 2)
          {
            uint64_t v57 = *(void *)(v56 + 40);
            uint64_t v108 = *(void *)(v56 + 32);
            char v58 = *(unsigned char *)(v56 + 80);
            uint64_t v107 = v57;
            if (v58)
            {
              uint64_t v59 = *(void **)(v56 + 64);
              swift_bridgeObjectRetain();
              id v60 = [v59 resolvedOutputDevices];
            }
            else
            {
              uint64_t v76 = *(void **)(v56 + 72);
              swift_bridgeObjectRetain();
              id v60 = [v76 outputDevices];
            }
            id v77 = v60;
            if (v77)
            {
              sub_10018FE08(0, (unint64_t *)&qword_100478370);
              unint64_t v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              if (!(v78 >> 62)) {
                goto LABEL_51;
              }
LABEL_69:
              swift_bridgeObjectRetain();
              uint64_t v79 = _CocoaArrayWrapper.endIndex.getter();
            }
            else
            {
              unint64_t v78 = (unint64_t)_swiftEmptyArrayStorage;
              if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
                goto LABEL_69;
              }
LABEL_51:
              uint64_t v79 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
            }
            uint64_t v109 = v56;
            if (v79)
            {
              unint64_t v124 = v78 & 0xC000000000000001;
              uint64_t v80 = 4;
              unint64_t v81 = _swiftEmptyArrayStorage;
              uint64_t v120 = v79;
              while (1)
              {
                id result = v124
                       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
                       : *(id *)(v78 + 8 * v80);
                int64_t v82 = result;
                uint64_t v83 = v80 - 3;
                if (__OFADD__(v80 - 4, 1)) {
                  break;
                }
                id v84 = [result uid];
                if (v84)
                {
                  unint64_t v85 = v84;
                  unint64_t v86 = v78;
                  uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v89 = v88;

                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    unint64_t v81 = sub_100229FF0(0, v81[2] + 1, 1, v81);
                  }
                  unint64_t v91 = v81[2];
                  unint64_t v90 = v81[3];
                  if (v91 >= v90 >> 1) {
                    unint64_t v81 = sub_100229FF0((void *)(v90 > 1), v91 + 1, 1, v81);
                  }
                  v81[2] = v91 + 1;
                  uint64_t v92 = &v81[2 * v91];
                  v92[4] = v87;
                  v92[5] = v89;
                  unint64_t v78 = v86;
                  uint64_t v79 = v120;
                }
                else
                {
                }
                ++v80;
                if (v83 == v79) {
                  goto LABEL_67;
                }
              }
              __break(1u);
              break;
            }
            unint64_t v81 = _swiftEmptyArrayStorage;
LABEL_67:
            swift_bridgeObjectRelease_n();
            unint64_t v93 = v111;
            uint64_t v94 = *v111;
            uint64_t v95 = v111[1];
            unint64_t v96 = (void *)v111[2];
            uint64_t v97 = v107;
            *uint64_t v111 = v108;
            v93[1] = v97;
            v93[2] = (uint64_t)v81;
            sub_1002F2830(v94, v95, (uint64_t)v96);
            sub_1002F16C8(v94, v95, (uint64_t)v96);
            sub_1002BF4F0(v94, v95, v96);
            sub_1002F16C8(v94, v95, (uint64_t)v96);
            swift_release();
LABEL_46:
            uint64_t v10 = v119;
            id result = (id)sub_1002F5F00(v125, type metadata accessor for HostedRoutingSourceSession);
            goto LABEL_15;
          }
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      unint64_t v61 = *(void *)(v125 + 32);
      int64_t v62 = *(void *)(v61 + 16);
      if (v62)
      {
        int64_t v129 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_100014688(0, v62, 0);
        uint64_t v63 = *(unsigned __int8 *)(v123 + 80);
        unint64_t v124 = v61;
        uint64_t v64 = v61 + ((v63 + 32) & ~v63);
        uint64_t v65 = *(void *)(v123 + 72);
        uint64_t v66 = v129;
        do
        {
          sub_1002F2874(v64, (uint64_t)v5, type metadata accessor for HostedRoutingItem);
          uint64_t v68 = *v5;
          uint64_t v67 = v5[1];
          swift_bridgeObjectRetain();
          sub_1002F5F00((uint64_t)v5, type metadata accessor for HostedRoutingItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100014688(0, v66[2] + 1, 1);
            uint64_t v66 = v129;
          }
          unint64_t v70 = v66[2];
          unint64_t v69 = v66[3];
          if (v70 >= v69 >> 1)
          {
            sub_100014688(v69 > 1, v70 + 1, 1);
            uint64_t v66 = v129;
          }
          v66[2] = v70 + 1;
          uint64_t v71 = &v66[2 * v70];
          v71[4] = v68;
          v71[5] = v67;
          v64 += v65;
          --v62;
        }
        while (v62);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v66 = _swiftEmptyArrayStorage;
      }
      uint64_t v72 = v111;
      uint64_t v73 = *v111;
      uint64_t v74 = v111[1];
      uint64_t v75 = (void *)v111[2];
      *uint64_t v111 = 0;
      v72[1] = 0;
      v72[2] = (uint64_t)v66;
      sub_1002F2830(v73, v74, (uint64_t)v75);
      sub_1002F16C8(v73, v74, (uint64_t)v75);
      sub_1002BF4F0(v73, v74, v75);
      sub_1002F16C8(v73, v74, (uint64_t)v75);
      goto LABEL_46;
    }
    id result = (id)sub_100009A08((uint64_t)v10, &qword_100479588);
LABEL_15:
    uint64_t v32 = v121;
    unint64_t v33 = v127 + 1;
    if (v127 + 1 == v117) {
      return (id)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_1002CBB90()
{
  uint64_t v1 = v0;
  uint64_t v66 = *v0;
  uint64_t v2 = sub_100013A80(&qword_100478278);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NSNotificationCenter.Publisher();
  id v60 = *(void (***)(char *, uint64_t))(v5 - 8);
  __chkstk_darwin(v5);
  char v58 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100013A80((uint64_t *)&unk_10047BF40);
  uint64_t v59 = *(void (***)(char *, uint64_t))(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v1 + 2;
  uint64_t result = swift_beginAccess();
  uint64_t v15 = v1[2];
  if ((v15 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = __CocoaSet.count.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v16) {
      return result;
    }
  }
  else if (*(void *)(v15 + 16))
  {
    return result;
  }
  uint64_t v17 = sub_1001A69C4();
  uint64_t v18 = (void *)v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v17, v10);
  BOOL v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  int v21 = v20;
  BOOL v22 = os_log_type_enabled(v19, v20);
  uint64_t v56 = v4;
  uint64_t v67 = v5;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    LODWORD(v64) = v21;
    uint64_t v24 = (uint8_t *)v23;
    v70[0] = (id)swift_slowAlloc();
    id v65 = v18;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v63 = (uint64_t)(v24 + 4);
    uint64_t v25 = _typeName(_:qualified:)();
    uint64_t v69 = sub_10018A9E0(v25, v26, (uint64_t *)v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v64, "[%s] installNotificationObservers - installing", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, id))(v11 + 8))(v13, v65);
  }
  else
  {

    (*(void (**)(char *, void *))(v11 + 8))(v13, v18);
  }
  char v55 = v9;
  uint64_t v66 = v7;
  if (qword_1004839D0 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_1004839D8;
  uint64_t v28 = *(void *)(qword_1004839D8 + 16);
  uint64_t v29 = &selRef_anyObject;
  uint64_t v68 = v1;
  if (v28)
  {
    id v65 = self;
    uint64_t v30 = *(uint64_t (**)(void))(*v1 + 280);
    uint64_t v63 = *v1 + 280;
    uint64_t v64 = v30;
    unint64_t v61 = v59 + 1;
    int64_t v62 = (uint64_t (*)(void))(v60 + 1);
    swift_bridgeObjectRetain();
    v54[1] = v27;
    uint64_t v31 = v27 + 40;
    unint64_t v33 = v55;
    uint64_t v32 = (uint64_t)v56;
    uint64_t v34 = v58;
    do
    {
      swift_bridgeObjectRetain();
      id v35 = [v65 defaultCenter];
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSNotificationCenter.publisher(for:object:)();

      v70[0] = (id)v64();
      uint64_t v37 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v32, 1, 1, v37);
      sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
      sub_1002F14AC((unint64_t *)&unk_10047BF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      sub_1001BB4CC();
      uint64_t v38 = v67;
      Publisher.receive<A>(on:options:)();
      sub_100009A08(v32, &qword_100478278);

      (*(void (**)(char *, uint64_t))v62)(v34, v38);
      swift_allocObject();
      swift_weakInit();
      sub_1000155BC((unint64_t *)&qword_10047BF60, (uint64_t *)&unk_10047BF40);
      uint64_t v39 = v66;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*v61)(v33, v39);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      uint64_t v29 = &selRef_anyObject;
      swift_release();
      v31 += 16;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    uint64_t v1 = v68;
  }
  if (qword_1004839E0 != -1) {
    swift_once();
  }
  id v65 = (id)qword_1004839E8;
  uint64_t v40 = *(void *)(qword_1004839E8 + 16);
  if (v40)
  {
    uint64_t v41 = (uint64_t (*)(void))self;
    uint64_t v42 = (uint64_t (**)(void))*v1;
    uint64_t v63 = (uint64_t)(v1 + 3);
    uint64_t v64 = v41;
    v42 += 35;
    uint64_t v43 = *v42;
    unint64_t v61 = (void (**)(char *, uint64_t))v42;
    int64_t v62 = v43;
    ++v59;
    ++v60;
    swift_bridgeObjectRetain();
    uint64_t v44 = 0;
    uint64_t v46 = v55;
    uint64_t v45 = (uint64_t)v56;
    char v47 = v58;
    do
    {
      uint64_t v48 = (void *)*((void *)v65 + v44++ + 4);
      id v49 = v48;
      id v50 = [v64 v29[395]];
      NSNotificationCenter.publisher(for:object:)();

      v70[0] = (id)v62();
      uint64_t v51 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v45, 1, 1, v51);
      sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
      sub_1002F14AC((unint64_t *)&unk_10047BF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      sub_1001BB4CC();
      uint64_t v52 = v67;
      Publisher.receive<A>(on:options:)();
      sub_100009A08(v45, &qword_100478278);

      (*v60)(v47, v52);
      swift_allocObject();
      swift_weakInit();
      sub_1000155BC((unint64_t *)&qword_10047BF60, (uint64_t *)&unk_10047BF40);
      uint64_t v53 = v66;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*v59)(v46, v53);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();

      uint64_t v29 = &selRef_anyObject;
      swift_release();
    }
    while (v40 != v44);
    swift_bridgeObjectRelease();
  }
  return sub_1002CA8DC(0xD000000000000023, 0x80000001003BA650);
}

uint64_t sub_1002CC580(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_100013A80((uint64_t *)&unk_10047BC50);
  __chkstk_darwin(v5 - 8);
  uint64_t v38 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RoutingInteraction();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v15 = (*(uint64_t (**)(uint64_t))(v4 + 280))(v13);
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v11);
  char v16 = _dispatchPreconditionTest(_:)();
  uint64_t v17 = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v15, v11);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_1001A6B94();
    uint64_t v27 = v38;
    sub_1001E71E8(v26, v38, (uint64_t *)&unk_10047BC50);
    uint64_t v28 = type metadata accessor for Logger();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      sub_100009A08(v27, (uint64_t *)&unk_10047BC50);
    }
    else
    {
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        v40[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 136315138;
        uint64_t v33 = _typeName(_:qualified:)();
        uint64_t v39 = sub_10018A9E0(v33, v34, v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%s] timelineDidUpdate - update item types to process deferred data source removals", v32, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v27 = v38;
        swift_slowDealloc();
      }

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    }
    id v35 = *(void (**)(uint64_t))(*v2 + 648);
    uint64_t v36 = swift_bridgeObjectRetain();
    v35(v36);
    return swift_bridgeObjectRelease();
  }
  unint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 112))(v17);
  a1 = v18;
  if (v18 >> 62) {
    goto LABEL_12;
  }
  uint64_t result = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!result) {
    goto LABEL_13;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v20 = v21;
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v20 = *(void *)(a1 + 32);
    uint64_t v21 = swift_retain();
  }
  (*(void (**)(uint64_t))(*(void *)v20 + 176))(v21);
  swift_beginAccess();
  uint64_t v22 = sub_1001B5BF8((uint64_t)v10);
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_endAccess();
  if (v22)
  {
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v22;
    *(void *)(v25 + 24) = v24;
    sub_1002CCAF8(v20, v25);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1002CCAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v147 = a2;
  uint64_t v148 = *v2;
  uint64_t v133 = type metadata accessor for RoutingControl();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v131 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = type metadata accessor for RoutingInteraction.Action();
  uint64_t v137 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v134 = (uint64_t *)((char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = type metadata accessor for RoutingInteraction();
  uint64_t v140 = *(void *)(v146 - 8);
  uint64_t v6 = __chkstk_darwin(v146);
  uint64_t v130 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v136 = (unint64_t)&v130 - v9;
  __chkstk_darwin(v8);
  uint64_t v135 = (char *)&v130 - v10;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v150 = *(void *)(v11 - 8);
  char v151 = (void (*)(char *, uint64_t))v11;
  __chkstk_darwin(v11);
  v149 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v155 = *(void *)(v158 - 8);
  uint64_t v13 = v155;
  BOOL v142 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 64);
  uint64_t v14 = __chkstk_darwin(v158);
  uint64_t v152 = (char **)((char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v141 = (char *)&v130 - v17;
  __chkstk_darwin(v16);
  BOOL v19 = (char **)((char *)&v130 - v18);
  uint64_t v20 = type metadata accessor for ContinuousClock();
  uint64_t v156 = *(void *)(v20 - 8);
  uint64_t v21 = v156;
  uint64_t v22 = *(void *)(v156 + 64);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v130 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v130 - v28;
  uint64_t v143 = a1;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(v27);
  uint64_t v153 = v31;
  uint64_t v154 = v30;
  ContinuousClock.init()();
  ContinuousClock.now.getter();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  unint64_t v139 = v29;
  uint64_t v157 = v20;
  v32(v26, v29, v20);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  unint64_t v34 = v141;
  uint64_t v138 = v19;
  id v35 = (char *)v19;
  uint64_t v36 = v158;
  v33(v141, v35, v158);
  uint64_t v144 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32(v144, v26, v20);
  v33((char *)v152, v34, v36);
  uint64_t v37 = v155;
  uint64_t v38 = v156;
  unint64_t v39 = (*(unsigned __int8 *)(v156 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80);
  unint64_t v40 = (v22 + *(unsigned __int8 *)(v155 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80);
  unint64_t v41 = ((unint64_t)v142 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject();
  uint64_t v44 = (char *)v43 + v39;
  uint64_t v45 = v148;
  uint64_t v46 = v26;
  uint64_t v47 = v158;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v44, v46, v157);
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))((char *)v43 + v40, v34, v47);
  uint64_t v48 = (void *)((char *)v43 + v41);
  unint64_t v49 = (unint64_t)v153;
  void *v48 = v154;
  v48[1] = v49;
  id v50 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, char))((char *)v43 + v42);
  uint64_t v51 = v147;
  void *v50 = sub_1001B9830;
  v50[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))v51;
  BOOL v142 = v43;
  *(void *)((char *)v43 + ((v42 + 23) & 0xFFFFFFFFFFFFFFF8)) = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v52 = sub_1001A69C4();
  (*(void (**)(char *, uint64_t, void (*)(char *, uint64_t)))(v150 + 16))(v149, v52, v151);
  swift_bridgeObjectRetain_n();
  uint64_t v53 = v143;
  swift_retain_n();
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled((os_log_t)v54, v55))
  {
    uint64_t v56 = swift_slowAlloc();
    uint64_t v141 = (char *)swift_slowAlloc();
    uint64_t v160 = (uint64_t)v141;
    *(_DWORD *)uint64_t v56 = 136315650;
    uint64_t v57 = _typeName(_:qualified:)();
    uint64_t v159 = sub_10018A9E0(v57, v58, &v160);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v159 = sub_10018A9E0(v154, v49, &v160);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v59 = swift_bridgeObjectRelease_n();
    *(_WORD *)(v56 + 22) = 2080;
    uint64_t v60 = v53;
    unint64_t v61 = v135;
    (*(void (**)(uint64_t))(*(void *)v53 + 176))(v59);
    sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    uint64_t v62 = v146;
    uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v65 = v64;
    (*(void (**)(char *, uint64_t))(v140 + 8))(v61, v62);
    uint64_t v159 = sub_10018A9E0(v63, v65, &v160);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v54, v55, "[%s] handleEvent<%s> - interaction: %s", (uint8_t *)v56, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v47 = v158;
    swift_slowDealloc();

    uint64_t v66 = v60;
  }
  else
  {

    uint64_t v66 = v53;
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v67 = (*(uint64_t (**)(char *, void))(v150 + 8))(v149, v151);
  uint64_t v68 = (*(uint64_t (**)(uint64_t))(*(void *)v66 + 128))(v67);
  uint64_t v73 = v155;
  uint64_t v72 = v156;
  uint64_t v74 = v145;
  if (v68)
  {
    uint64_t v75 = v157;
    uint64_t v76 = v154;
    if (v68 == 2)
    {
      uint64_t v77 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v78 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v77 - 8) + 104))(v79, enum case for InternalRoutingError.cancelled(_:), v77);
      uint64_t v80 = MRDFastSyncGroupSessionState.rawValue.getter(v78, 0, 0, 4);
      uint64_t v82 = v81;
      uint64_t v84 = v83;
      unsigned __int8 v86 = v85;
      uint64_t v87 = (uint64_t)v144;
      uint64_t v88 = v152;
      sub_1002CDEAC(v80, v81, v83, v85, (uint64_t)v144, (uint64_t)v152, v76, (unint64_t)v153, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001B9830, v147);
      swift_release();
      swift_errorRelease();
      sub_1001859D4(v82, v84, v86);
      swift_bridgeObjectRelease();
      uint64_t v89 = *(void (**)(char **, uint64_t))(v73 + 8);
      uint64_t v90 = v158;
      v89(v88, v158);
      unint64_t v91 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v91(v87, v75);
      v89(v138, v90);
      return ((uint64_t (*)(char *, uint64_t))v91)(v139, v75);
    }
    uint64_t v120 = v158;
    uint64_t v121 = v155;
    if (v68 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v121 = v73 + 8;
      (*(void (**)(char **, uint64_t))(v73 + 8))(v152, v120);
      (*(void (**)(char *, uint64_t))(v156 + 8))(v144, v75);
      __break(1u);
    }
    uint64_t v122 = v69;
    unsigned __int8 v123 = v71;
    uint64_t v124 = v70;
    swift_bridgeObjectRelease();
    swift_errorRelease();
    sub_1001859D4(v122, v124, v123);
    (*(void (**)(char **, uint64_t))(v121 + 8))(v152, v120);
    (*(void (**)(char *, uint64_t))(v156 + 8))(v144, v75);
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v93 = v155 + 8;
  uint64_t v94 = *(char ***)(v155 + 8);
  ((void (*)(char **, uint64_t))v94)(v152, v47);
  uint64_t v97 = *(uint64_t (**)(char *, uint64_t))(v72 + 8);
  uint64_t v95 = v72 + 8;
  unint64_t v96 = v97;
  uint64_t v98 = v97(v144, v157);
  uint64_t v99 = v136;
  (*(void (**)(uint64_t))(*(void *)v66 + 176))(v98);
  unint64_t v100 = v134;
  RoutingInteraction.action.getter();
  char v101 = v100;
  uint64_t v102 = v137;
  int v103 = (*(uint64_t (**)(uint64_t *, uint64_t))(v137 + 88))(v101, v74);
  if (v103 == enum case for RoutingInteraction.Action.add(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v102 + 96))(v101, v74);
    sub_1002CE820(*v101, v101[1], v101[2], v101[3], v99, (uint64_t)v142, (void *)1, (uint64_t)&unk_1004284B0, (uint64_t)sub_1002F3BF4, qword_1004284C8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v99, v146);
    ((void (*)(char **, uint64_t))v94)(v138, v47);
    return v96(v139, v157);
  }
  uint64_t v152 = v94;
  uint64_t v54 = v140;
  if (v103 == enum case for RoutingInteraction.Action.remove(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v102 + 96))(v101, v74);
    uint64_t v104 = v96;
    uint64_t v105 = v99;
    sub_1002CE820(*v101, v101[1], v101[2], v101[3], v99, (uint64_t)v142, (void *)2, (uint64_t)&unk_100428618, (uint64_t)sub_1002F4368, qword_100428630);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v105, v146);
    ((void (*)(char **, uint64_t))v152)(v138, v47);
    return v104(v139, v157);
  }
  if (v103 == enum case for RoutingInteraction.Action.set(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v102 + 96))(v101, v74);
    uint64_t v104 = v96;
    uint64_t v105 = v99;
    sub_1002CE820(*v101, v101[1], v101[2], v101[3], v99, (uint64_t)v142, (void *)3, (uint64_t)&unk_100428690, (uint64_t)sub_1002F44AC, qword_1004286A8);
    goto LABEL_13;
  }
  if (v103 == enum case for RoutingInteraction.Action.setActiveSession(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v102 + 96))(v101, v74);
    sub_1002CF170(*v101, v101[1], (void (*)(uint64_t))sub_1002F3AA4, (uint64_t)v142);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v99, v146);
    ((void (*)(char **, uint64_t))v152)(v138, v47);
    return v96(v139, v157);
  }
  uint64_t v106 = v146;
  if (v103 == enum case for RoutingInteraction.Action.setActiveItem(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v137 + 96))(v101, v74);
    sub_1002CF88C(*v101, v101[1], v99, 1, (void (*)(void))sub_1002F3AA4, (uint64_t)v142);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v99, v106);
    ((void (*)(char **, uint64_t))v152)(v138, v47);
    return v96(v139, v157);
  }
  char v151 = (void (*)(char *, uint64_t))v96;
  if (v103 == enum case for RoutingInteraction.Action.handoff(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v137 + 96))(v101, v74);
    uint64_t v107 = v99;
    uint64_t v108 = (void *)*v101;
    uint64_t v109 = *(void *)(*v101 + 16);
    uint64_t v154 = *(void *)(*v101 + 24);
    uint64_t v155 = v93;
    uint64_t v156 = v95;
    uint64_t v110 = v108[4];
    unint64_t v111 = v108[5];
    uint64_t v112 = v108[6];
    swift_retain();
    uint64_t v113 = RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter();
    sub_1002D1124(v113, v114, v109, v154, v110, v111, v112, v107, (uint64_t)v142);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v107, v146);
    ((void (*)(char **, uint64_t))v152)(v138, v158);
    v151(v139, v157);
    return swift_release();
  }
  if (v103 == enum case for RoutingInteraction.Action.control(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v137 + 96))(v101, v74);
    uint64_t v156 = *v101;
    uint64_t v115 = swift_projectBox();
    uint64_t v116 = v132;
    uint64_t v117 = (uint64_t)v131;
    uint64_t v118 = v133;
    (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v131, v115, v133);
    unint64_t v119 = v136;
    sub_1002D2268(v117, v136, v142);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v117, v118);
    (*(void (**)(unint64_t, uint64_t))(v54 + 8))(v119, v146);
    ((void (*)(char **, uint64_t))v152)(v138, v47);
    v151(v139, v157);
    return swift_release();
  }
LABEL_25:
  (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v130, v136, v146);
  uint64_t v160 = 0;
  unint64_t v161 = 0xE000000000000000;
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease();
  uint64_t v160 = 91;
  unint64_t v161 = 0xE100000000000000;
  v125._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v125);
  swift_bridgeObjectRelease();
  v126._countAndFlagsBits = 0x656C646E6168205DLL;
  v126._object = (void *)0xEE003C746E657645;
  String.append(_:)(v126);
  v127._countAndFlagsBits = v154;
  v127._object = v153;
  String.append(_:)(v127);
  swift_bridgeObjectRelease();
  v128._object = (void *)0x80000001003BA320;
  v128._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v128);
  sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
  v129._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v129);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002CDEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10)
{
  uint64_t v54 = a7;
  uint64_t v68 = a6;
  uint64_t v72 = a9;
  uint64_t v73 = a10;
  uint64_t v15 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  __chkstk_darwin(v15);
  unint64_t v64 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v59 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v56 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v61 = *(void *)(v19 - 8);
  uint64_t v62 = v19;
  __chkstk_darwin(v19);
  uint64_t v57 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v70 = *(void *)(v25 - 8);
  uint64_t v71 = v25;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  ContinuousClock.now.getter();
  uint64_t v69 = v27;
  uint64_t v28 = ContinuousClock.Instant.duration(to:)();
  uint64_t v55 = v29;
  uint64_t v30 = sub_1001A69C4();
  uint64_t v68 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v30, v21);
  swift_bridgeObjectRetain();
  sub_1001BB2C8(a1, a2, a3, a4);
  swift_bridgeObjectRetain();
  sub_1001BB2C8(a1, a2, a3, a4);
  os_log_type_t v31 = Logger.logObject.getter();
  int v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, (os_log_type_t)v32))
  {
    uint64_t v50 = v28;
    os_log_t v51 = v31;
    uint64_t v52 = v24;
    uint64_t v53 = v21;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v79 = v48;
    *(_DWORD *)uint64_t v33 = 136315906;
    uint64_t v34 = _typeName(_:qualified:)();
    uint64_t v74 = sub_10018A9E0(v34, v35, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_10018A9E0(v54, a8, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 22) = 2080;
    int v49 = v32;
    if (a1)
    {
      uint64_t v74 = 0;
      unint64_t v75 = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      strcpy((char *)v78, " with error: ");
      HIWORD(v78[1]) = -4864;
      uint64_t v74 = a1;
      unint64_t v75 = a2;
      uint64_t v76 = a3;
      char v77 = a4;
      swift_errorRetain();
      sub_100185894(a2, a3, a4);
      sub_1001BB378();
      v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      sub_1001859D4(a2, a3, a4);
      v37._countAndFlagsBits = 32;
      v37._object = (void *)0xE100000000000000;
      String.append(_:)(v37);
      uint64_t v38 = v78[0];
      unint64_t v39 = v78[1];
    }
    else
    {
      unint64_t v39 = 0xE100000000000000;
      uint64_t v38 = 32;
    }
    uint64_t v74 = sub_10018A9E0(v38, v39, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001BB320(a1, a2, a3, a4);
    sub_1001BB320(a1, a2, a3, a4);
    *(_WORD *)(v33 + 32) = 2080;
    uint64_t v54 = v33 + 34;
    sub_100013A80(&qword_100478D50);
    type metadata accessor for Duration.UnitsFormatStyle.Unit();
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1003C5BA0;
    static Duration.UnitsFormatStyle.Unit.seconds.getter();
    static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
    sub_1001BAA1C(v40);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v41 = v56;
    static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter();
    unint64_t v42 = v59;
    static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
    uint64_t v43 = v64;
    static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
    uint64_t v44 = v57;
    static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v67);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v65);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v60);
    sub_1002F14AC(&qword_100478D58, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
    uint64_t v45 = v62;
    Duration.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v45);
    uint64_t v74 = sub_10018A9E0(v74, v75, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v46 = v51;
    _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v49, "[%s] handleEvent<%s> - finished%sin: %s", (uint8_t *)v33, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v68 + 8))(v52, v53);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1001BB320(a1, a2, a3, a4);
    sub_1001BB320(a1, a2, a3, a4);

    (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v21);
  }
  v72(a1, a2, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v69, v71);
}

uint64_t sub_1002CE820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v95 = a8;
  id v92 = a7;
  uint64_t v11 = v10;
  uint64_t v103 = a6;
  uint64_t v97 = a5;
  uint64_t v98 = a1;
  uint64_t v100 = a2;
  uint64_t v99 = type metadata accessor for RoutingInteraction();
  uint64_t v96 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v93 = v14;
  uint64_t v94 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (uint64_t *)((char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v102 = (uint64_t)&v88 - v24;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(*v10 + 328))(v23);
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    char v101 = v10;
    uint64_t v27 = v25 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v28 = *(void *)(v19 + 72);
    while (1)
    {
      sub_1002F2874(v27, (uint64_t)v22, type metadata accessor for HostedRoutingSourceSession);
      BOOL v29 = *v22 == a3 && v22[1] == a4;
      if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      sub_1002F5F00((uint64_t)v22, type metadata accessor for HostedRoutingSourceSession);
      v27 += v28;
      if (!--v26)
      {
        uint64_t v30 = 1;
        uint64_t v11 = v101;
        goto LABEL_12;
      }
    }
    sub_1002F39C4((uint64_t)v22, (uint64_t)v17, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v30 = 0;
    uint64_t v11 = v101;
  }
  else
  {
    uint64_t v30 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, v30, 1, v18);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_100009A08((uint64_t)v17, &qword_100479588);
    uint64_t v31 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v32 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, enum case for InternalRoutingError.sessionNotFound(_:), v31);
    swift_bridgeObjectRetain();
    uint64_t v34 = MRDFastSyncGroupSessionState.rawValue.getter(v32, a3, a4, 2);
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    unsigned __int8 v40 = v39;
    sub_1002F3AA4(v34, v35, v37, v39);
    swift_errorRelease();
    return sub_1001859D4(v36, v38, v40);
  }
  uint64_t v42 = v102;
  uint64_t result = sub_1002F39C4((uint64_t)v17, v102, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v43 = *(void *)(v42 + 24);
  if (!v43)
  {
    __break(1u);
    return result;
  }
  uint64_t v44 = *(void *)(v42 + 16);
  uint64_t v45 = (void *)((char *)v11 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess();
  uint64_t v46 = *v45;
  if (!*(void *)(v46 + 16)) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v47 = sub_100013660(v44, v43);
  if ((v48 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v78 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v79 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v78 - 8) + 104))(v80, enum case for InternalRoutingError.sessionNotFound(_:), v78);
    swift_bridgeObjectRetain();
    uint64_t v81 = MRDFastSyncGroupSessionState.rawValue.getter(v79, a3, a4, 2);
    uint64_t v83 = v82;
    uint64_t v85 = v84;
    unsigned __int8 v87 = v86;
    sub_1002F3AA4(v81, v82, v84, v86);
    swift_errorRelease();
    sub_1001859D4(v83, v85, v87);
    uint64_t v77 = v42;
    return sub_1002F5F00(v77, type metadata accessor for HostedRoutingSourceSession);
  }
  uint64_t v49 = *(void *)(*(void *)(v46 + 56) + 8 * v47);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v49 + 16) != 2)
  {
    swift_release();
    goto LABEL_21;
  }
  char v101 = a10;
  uint64_t v91 = a9;
  id v90 = MRRequestDetailsInitiatorRoutePicker;
  RoutingInteraction.identifier.getter();
  sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
  dispatch thunk of CustomStringConvertible.description.getter();
  id v50 = objc_allocWithZone((Class)MRRequestDetails);
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v53 = v50;
  uint64_t v54 = v90;
  id v55 = [v53 initWithInitiator:v90 requestID:v51 reason:v52 userInitiated:1];

  sub_100013A80(&qword_100478690);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_1003C58B0;
  uint64_t v57 = v100;
  *(void *)(v56 + 32) = v98;
  *(void *)(v56 + 40) = v57;
  id v58 = objc_allocWithZone((Class)MRGroupTopologyModificationRequest);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v92 = [v58 initWithRequestDetails:v55 type:v92 outputDeviceUIDs:isa];

  uint64_t v60 = *(void **)(v49 + 64);
  uint64_t v61 = *v11;
  id v90 = (id)v49;
  uint64_t v62 = v11;
  uint64_t v63 = *(uint64_t (**)(void))(v61 + 280);
  id v89 = v60;
  uint64_t v88 = v63();
  uint64_t v64 = v96;
  uint64_t v65 = v94;
  uint64_t v66 = v99;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v94, v97, v99);
  unint64_t v67 = (*(unsigned __int8 *)(v64 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  unint64_t v68 = (v93 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = (char *)swift_allocObject();
  uint64_t v70 = v103;
  *((void *)v69 + 2) = sub_1002F3AA4;
  *((void *)v69 + 3) = v70;
  uint64_t v71 = v100;
  *((void *)v69 + 4) = v98;
  *((void *)v69 + 5) = v71;
  *((void *)v69 + 6) = v62;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v69[v67], v65, v66);
  uint64_t v72 = &v69[v68];
  *(void *)uint64_t v72 = a3;
  *((void *)v72 + 1) = a4;
  aBlock[4] = v91;
  aBlock[5] = v69;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001872F8;
  aBlock[3] = v101;
  uint64_t v73 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  id v74 = v89;
  unint64_t v75 = v92;
  uint64_t v76 = (void *)v88;
  [v89 modifyTopologyWithRequest:v92 withReplyQueue:v88 completion:v73];
  _Block_release(v73);
  swift_release();

  uint64_t v77 = v102;
  return sub_1002F5F00(v77, type metadata accessor for HostedRoutingSourceSession);
}

uint64_t sub_1002CF170(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v75 = a4;
  uint64_t v76 = a3;
  uint64_t v8 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v73 - v16;
  uint64_t v18 = sub_1002A0458();
  BOOL v19 = *(void *)v18 == a1 && *((void *)v18 + 1) == a2;
  if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    id v74 = v17;
    uint64_t v25 = (*(uint64_t (**)(void))(*(void *)v4 + 328))();
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      uint64_t v27 = *(unsigned __int8 *)(v12 + 80);
      uint64_t v73 = v25;
      uint64_t v28 = v25 + ((v27 + 32) & ~v27);
      uint64_t v29 = *(void *)(v12 + 72);
      while (1)
      {
        sub_1002F2874(v28, (uint64_t)v15, type metadata accessor for HostedRoutingSourceSession);
        BOOL v30 = *v15 == a1 && v15[1] == a2;
        if (v30 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
        sub_1002F5F00((uint64_t)v15, type metadata accessor for HostedRoutingSourceSession);
        v28 += v29;
        if (!--v26)
        {
          uint64_t v31 = 1;
          goto LABEL_19;
        }
      }
      sub_1002F39C4((uint64_t)v15, (uint64_t)v10, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v31 = 0;
    }
    else
    {
      uint64_t v31 = 1;
    }
LABEL_19:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v31, 1, v11);
    swift_bridgeObjectRelease();
    int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    uint64_t v33 = (uint64_t)v74;
    if (v32 == 1)
    {
      sub_100009A08((uint64_t)v10, &qword_100479588);
      uint64_t v34 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v35 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, enum case for InternalRoutingError.sessionNotFound(_:), v34);
      swift_bridgeObjectRetain();
      uint64_t v37 = MRDFastSyncGroupSessionState.rawValue.getter(v35, a1, a2, 2);
      uint64_t v39 = v38;
      uint64_t v41 = v40;
      unsigned __int8 v43 = v42;
      v76(v37);
      swift_errorRelease();
      return sub_1001859D4(v39, v41, v43);
    }
    uint64_t result = sub_1002F39C4((uint64_t)v10, (uint64_t)v74, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v44 = *(void *)(v33 + 24);
    if (!v44)
    {
      __break(1u);
      return result;
    }
    uint64_t v45 = *(void *)(v33 + 16);
    uint64_t v46 = (uint64_t *)(v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
    swift_beginAccess();
    uint64_t v47 = *v46;
    if (*(void *)(v47 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v48 = sub_100013660(v45, v44);
      if (v49)
      {
        uint64_t v50 = *(void *)(*(void *)(v47 + 56) + 8 * v48);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(v50 + 16) == 2)
        {
          uint64_t v52 = *(void *)(v50 + 32);
          uint64_t v51 = *(void *)(v50 + 40);
          if (*(unsigned char *)(v50 + 80))
          {
            uint64_t v53 = *(void **)(v50 + 64);
            swift_bridgeObjectRetain();
            id v54 = [v53 resolvedOutputDevices];
          }
          else
          {
            uint64_t v65 = *(void **)(v50 + 72);
            swift_bridgeObjectRetain();
            id v54 = [v65 outputDevices];
          }
          id v66 = v54;
          if (v66)
          {
            sub_10018FE08(0, (unint64_t *)&qword_100478370);
            unint64_t v67 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
          }
          else
          {
            unint64_t v67 = _swiftEmptyArrayStorage;
          }
          unint64_t v68 = sub_1002BDAD8((unint64_t)v67);
          swift_bridgeObjectRelease();
          uint64_t v69 = (void *)(v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
          uint64_t v70 = *(void *)(v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
          uint64_t v71 = *(void *)(v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 8);
          uint64_t v72 = *(void **)(v5
                           + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                           + 16);
          void *v69 = v52;
          v69[1] = v51;
          v69[2] = v68;
          sub_1002F2830(v70, v71, (uint64_t)v72);
          sub_1002F16C8(v70, v71, (uint64_t)v72);
          sub_1002BF4F0(v70, v71, v72);
          sub_1002F16C8(v70, v71, (uint64_t)v72);
          ((void (*)(void, void, void, void))v76)(0, 0, 0, 0);
          swift_release();
          return sub_1002F5F00(v33, type metadata accessor for HostedRoutingSourceSession);
        }
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v55 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v56 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v55 - 8) + 104))(v57, enum case for InternalRoutingError.sessionNotFound(_:), v55);
    swift_bridgeObjectRetain();
    uint64_t v58 = MRDFastSyncGroupSessionState.rawValue.getter(v56, a1, a2, 2);
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    unsigned __int8 v64 = v63;
    v76(v58);
    swift_errorRelease();
    sub_1001859D4(v60, v62, v64);
    return sub_1002F5F00(v33, type metadata accessor for HostedRoutingSourceSession);
  }
  uint64_t v20 = (void *)(v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v21 = *(void *)(v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v22 = *(void *)(v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 8);
  uint64_t v23 = *(void **)(v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16);
  v20[1] = 0;
  v20[2] = 0;
  *uint64_t v20 = 0;
  sub_1002F2830(v21, v22, (uint64_t)v23);
  sub_1002F16C8(v21, v22, (uint64_t)v23);
  sub_1002BF4F0(v21, v22, v23);
  sub_1002F16C8(v21, v22, (uint64_t)v23);
  return ((uint64_t (*)(void, void, void, void))v76)(0, 0, 0, 0);
}

void sub_1002CF88C(uint64_t a1, unint64_t a2, uint64_t a3, int a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v195 = a6;
  v194 = a5;
  int v187 = a4;
  uint64_t v10 = *v6;
  uint64_t v193 = type metadata accessor for RoutingInteraction();
  uint64_t v190 = *(void *)(v193 - 8);
  uint64_t v11 = __chkstk_darwin(v193);
  uint64_t v185 = (char *)&v178 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v182 = (char *)&v178 - v14;
  uint64_t v184 = v15;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v178 - v16;
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v191 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v189 = (char *)&v178 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v183 = (char *)&v178 - v22;
  __chkstk_darwin(v21);
  v179 = (char *)&v178 - v23;
  uint64_t v24 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v24 - 8);
  uint64_t v197 = (uint64_t)&v178 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v26 = *(void *)(v196 - 8);
  uint64_t v27 = __chkstk_darwin(v196);
  uint64_t v201 = (char *)&v178 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  BOOL v30 = (char *)&v178 - v29;
  uint64_t v31 = RoutingInteraction.identifier.getter();
  unint64_t v200 = v32;
  uint64_t v33 = *(uint64_t (**)(void))(*v6 + 328);
  uint64_t v188 = v6;
  uint64_t v34 = v31;
  uint64_t v35 = v33();
  uint64_t v36 = *(void *)(v35 + 16);
  uint64_t v192 = a3;
  uint64_t v202 = v34;
  unint64_t v204 = a2;
  uint64_t v205 = v36;
  uint64_t v199 = v30;
  uint64_t v198 = v10;
  uint64_t v203 = a1;
  if (v36)
  {
    uint64_t v186 = v18;
    uint64_t v208 = v35 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    v206 = v216;
    uint64_t v181 = v26;
    uint64_t v207 = *(void *)(v26 + 72);
    uint64_t v180 = v35;
    swift_bridgeObjectRetain();
    uint64_t v37 = 0;
    uint64_t v38 = (uint64_t)v201;
    uint64_t isa = (uint64_t)v17;
    while (1)
    {
      sub_1002F2874(v208 + v207 * v37, v38, type metadata accessor for HostedRoutingSourceSession);
      int64_t v39 = *(void *)(*(void *)(v38 + 32) + 16);
      if (v39)
      {
        aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
        uint64_t v40 = (void *)swift_bridgeObjectRetain();
        sub_100014688(0, v39, 0);
        uint64_t v41 = (char *)aBlock[0];
        uint64_t v42 = *(void *)(type metadata accessor for HostedRoutingItem(0) - 8);
        uint64_t v43 = *(unsigned __int8 *)(v42 + 80);
        uint64_t v44 = *(void *)(v42 + 72);
        NSString v210 = v40;
        uint64_t v45 = (void *)((char *)v40 + ((v43 + 32) & ~v43) + 8);
        do
        {
          uint64_t v47 = *(v45 - 1);
          uint64_t v46 = *v45;
          aBlock[0] = (uint64_t)v41;
          unint64_t v49 = *((void *)v41 + 2);
          unint64_t v48 = *((void *)v41 + 3);
          swift_bridgeObjectRetain();
          if (v49 >= v48 >> 1)
          {
            sub_100014688(v48 > 1, v49 + 1, 1);
            uint64_t v41 = (char *)aBlock[0];
          }
          uint64_t v45 = (uint64_t *)((char *)v45 + v44);
          *((void *)v41 + 2) = v49 + 1;
          uint64_t v50 = &v41[16 * v49];
          *((void *)v50 + 4) = v47;
          *((void *)v50 + 5) = v46;
          --v39;
        }
        while (v39);
        swift_bridgeObjectRelease();
        uint64_t v34 = v202;
        a2 = v204;
        a1 = v203;
        uint64_t v38 = (uint64_t)v201;
      }
      else
      {
        uint64_t v41 = (char *)_swiftEmptyArrayStorage;
      }
      v216[0] = a1;
      v216[1] = a2;
      uint64_t v17 = (char *)isa;
      if (*((void *)v41 + 2) == 1)
      {
        if (v41 == &v215) {
          break;
        }
        BOOL v51 = *((void *)v41 + 4) == a1 && *((void *)v41 + 5) == a2;
        if (v51 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
      }
      swift_bridgeObjectRetain();
      swift_arrayDestroy();
      ++v37;
      swift_bridgeObjectRelease();
      sub_1002F5F00(v38, type metadata accessor for HostedRoutingSourceSession);
      if (v37 == v205)
      {
        swift_bridgeObjectRelease();
        uint64_t v53 = 1;
        BOOL v30 = v199;
        uint64_t v52 = v186;
        uint64_t v54 = v197;
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRetain();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = v197;
    sub_1002F39C4(v38, v197, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v53 = 0;
    BOOL v30 = v199;
    uint64_t v52 = v186;
LABEL_22:
    uint64_t v55 = v196;
    uint64_t v26 = v181;
  }
  else
  {
    uint64_t v52 = v18;
    uint64_t v53 = 1;
    uint64_t v54 = v197;
    uint64_t v55 = v196;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v54, v53, 1, v55);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v54, 1, v55) != 1)
  {
    uint64_t v70 = sub_1002F39C4(v54, (uint64_t)v30, type metadata accessor for HostedRoutingSourceSession);
    if (sub_1002A0454(v70))
    {
      uint64_t v71 = sub_1001A69C4();
      uint64_t v72 = v191;
      uint64_t v73 = v183;
      (*(void (**)(char *, uint64_t, uint64_t))(v191 + 16))(v183, v71, v52);
      uint64_t v74 = v190;
      uint64_t v75 = v182;
      uint64_t v76 = v193;
      (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v182, v192, v193);
      unint64_t v77 = v200;
      swift_bridgeObjectRetain();
      uint64_t v78 = Logger.logObject.getter();
      os_log_type_t v79 = static os_log_type_t.error.getter();
      LODWORD(v210) = v79;
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v80 = swift_slowAlloc();
        uint64_t isa = swift_slowAlloc();
        aBlock[0] = isa;
        *(_DWORD *)uint64_t v80 = 136315650;
        uint64_t v81 = _typeName(_:qualified:)();
        uint64_t v211 = sub_10018A9E0(v81, v82, aBlock);
        uint64_t v186 = v52;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v80 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v211 = sub_10018A9E0(v34, v77, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v80 + 22) = 2080;
        sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        uint64_t v83 = v182;
        uint64_t v84 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v211 = sub_10018A9E0(v84, v85, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v83, v76);
        _os_log_impl((void *)&_mh_execute_header, v78, (os_log_type_t)v210, "[%s] handleSetActiveItem<%s> - interaction: %s is invalid for a picked item on the local session", (uint8_t *)v80, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v72 + 8))(v183, v186);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);

        (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v52);
      }
      uint64_t v133 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v134 = swift_allocError();
      uint64_t v136 = v135;
      uint64_t v137 = (unsigned int *)&enum case for InternalRoutingError.invalidAction(_:);
    }
    else
    {
      uint64_t v105 = (void *)*((void *)v30 + 3);
      if (v105)
      {
        uint64_t v106 = v17;
        uint64_t v107 = v52;
        uint64_t v108 = *((void *)v30 + 2);
        uint64_t v109 = v188;
        uint64_t v110 = (uint64_t *)((char *)v188 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
        swift_beginAccess();
        uint64_t v111 = *v110;
        if (*(void *)(*v110 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v112 = sub_100013660(v108, (uint64_t)v105);
          if (v113)
          {
            uint64_t v114 = *(unsigned char **)(*(void *)(v111 + 56) + 8 * v112);
            swift_retain();
            swift_bridgeObjectRelease();
            if (v114[16] == 2)
            {
              NSString v210 = v114;
              uint64_t v115 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore;
              uint64_t v116 = v192;
              uint64_t v117 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v109
                                                                     + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore)
                                                       + 264);
              swift_retain();
              uint64_t v118 = v117(v116);
              uint64_t v120 = v119;
              swift_release();
              if (v120)
              {
                swift_bridgeObjectRelease();
                uint64_t v121 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, void *))(**(void **)((char *)v109 + v115)
                                                                                        + 288);
                swift_retain();
                v121(v118, v120, v116, v108, v105);
                uint64_t v122 = v188;
                swift_release();
                uint64_t v211 = 0;
                unint64_t v212 = 0xE000000000000000;
                _StringGuts.grow(_:)(87);
                v123._countAndFlagsBits = 0xD00000000000001DLL;
                v123._object = (void *)0x80000001003BA3B0;
                String.append(_:)(v123);
                v124._countAndFlagsBits = v108;
                v124._object = v105;
                String.append(_:)(v124);
                swift_bridgeObjectRelease();
                v125._countAndFlagsBits = 0xD000000000000022;
                v125._object = (void *)0x80000001003BA3D0;
                String.append(_:)(v125);
                v126._countAndFlagsBits = v118;
                v126._object = v120;
                String.append(_:)(v126);
                swift_bridgeObjectRelease();
                v127._object = (void *)0x80000001003BA400;
                v127._countAndFlagsBits = 0xD000000000000012;
                String.append(_:)(v127);
                sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
                v128._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
                String.append(_:)(v128);
                swift_bridgeObjectRelease();
                sub_1002CA8DC(v211, v212);
                swift_bridgeObjectRelease();
                if (v187)
                {
                  uint64_t v130 = v210[4];
                  uint64_t v129 = v210[5];
                  if (v210[10])
                  {
                    uint64_t v131 = (void *)v210[8];
                    swift_bridgeObjectRetain();
                    id v132 = [v131 resolvedOutputDevices];
                  }
                  else
                  {
                    uint64_t v170 = (void *)v210[9];
                    swift_bridgeObjectRetain();
                    id v132 = [v170 outputDevices];
                  }
                  id v171 = v132;
                  if (v171)
                  {
                    sub_10018FE08(0, (unint64_t *)&qword_100478370);
                    unint64_t v172 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
                  }
                  else
                  {
                    unint64_t v172 = _swiftEmptyArrayStorage;
                  }
                  uint64_t v173 = sub_1002BDAD8((unint64_t)v172);
                  swift_bridgeObjectRelease();
                  unint64_t v174 = (uint64_t *)((char *)v122
                                   + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
                  uint64_t v175 = *(uint64_t *)((char *)v122
                                    + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
                  uint64_t v176 = *(uint64_t *)((char *)v122
                                    + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                                    + 8);
                  uint64_t v177 = *(void **)((char *)v122
                                    + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                                    + 16);
                  void *v174 = v130;
                  v174[1] = v129;
                  v174[2] = v173;
                  sub_1002F2830(v175, v176, (uint64_t)v177);
                  sub_1002F16C8(v175, v176, (uint64_t)v177);
                  sub_1002BF4F0(v175, v176, v177);
                  sub_1002F16C8(v175, v176, (uint64_t)v177);
                }
                ((void (*)(void, void, void, void))v194)(0, 0, 0, 0);
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v145 = sub_1001A69C4();
                uint64_t v146 = v191;
                uint64_t v147 = v179;
                uint64_t v148 = v107;
                (*(void (**)(char *, uint64_t, uint64_t))(v191 + 16))(v179, v145, v107);
                uint64_t v149 = v190;
                uint64_t v150 = v193;
                (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v106, v116, v193);
                unint64_t v151 = v200;
                swift_bridgeObjectRetain();
                uint64_t v152 = Logger.logObject.getter();
                os_log_type_t v153 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v152, v153))
                {
                  uint64_t v154 = swift_slowAlloc();
                  uint64_t v186 = v148;
                  uint64_t v155 = v154;
                  uint64_t v208 = swift_slowAlloc();
                  uint64_t v211 = v208;
                  *(_DWORD *)uint64_t v155 = 136315650;
                  uint64_t v156 = _typeName(_:qualified:)();
                  uint64_t v213 = sub_10018A9E0(v156, v157, &v211);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v155 + 12) = 2080;
                  swift_bridgeObjectRetain();
                  uint64_t v213 = sub_10018A9E0(v202, v151, &v211);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v155 + 22) = 2080;
                  sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
                  uint64_t v158 = v193;
                  uint64_t v159 = dispatch thunk of CustomStringConvertible.description.getter();
                  uint64_t v213 = sub_10018A9E0(v159, v160, &v211);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  (*(void (**)(char *, uint64_t))(v149 + 8))(v106, v158);
                  _os_log_impl((void *)&_mh_execute_header, v152, v153, "[%s] handleSetActiveItem<%s> - no prewarmed identifier found for interaction: %s. Failing", (uint8_t *)v155, 0x20u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  (*(void (**)(char *, uint64_t))(v191 + 8))(v147, v186);
                }
                else
                {
                  swift_bridgeObjectRelease_n();
                  (*(void (**)(char *, uint64_t))(v149 + 8))(v106, v150);

                  (*(void (**)(char *, uint64_t))(v146 + 8))(v147, v148);
                }
                uint64_t v161 = type metadata accessor for InternalRoutingError();
                sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
                uint64_t v162 = swift_allocError();
                (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v161 - 8) + 104))(v163, enum case for InternalRoutingError.sessionNotFound(_:), v161);
                MRDFastSyncGroupSessionState.rawValue.getter(v162, 1, 0, 4);
                uint64_t v165 = v164;
                uint64_t v167 = v166;
                unsigned __int8 v169 = v168;
                v194();
                swift_errorRelease();
                sub_1001859D4(v165, v167, v169);
              }
              swift_release();
              goto LABEL_45;
            }
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v133 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v134 = swift_allocError();
      uint64_t v136 = v138;
      uint64_t v137 = (unsigned int *)&enum case for InternalRoutingError.sessionNotFound(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v133 - 8) + 104))(v136, *v137, v133);
    MRDFastSyncGroupSessionState.rawValue.getter(v134, 0, 0, 4);
    uint64_t v140 = v139;
    uint64_t v142 = v141;
    unsigned __int8 v144 = v143;
    v194();
    swift_errorRelease();
    sub_1001859D4(v140, v142, v144);
LABEL_45:
    sub_1002F5F00((uint64_t)v199, type metadata accessor for HostedRoutingSourceSession);
    return;
  }
  sub_100009A08(v54, &qword_100479588);
  uint64_t v56 = sub_1001A69C4();
  uint64_t v57 = v191;
  uint64_t v58 = v189;
  (*(void (**)(char *, uint64_t, uint64_t))(v191 + 16))(v189, v56, v52);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v59 = Logger.logObject.getter();
  uint64_t v60 = v52;
  os_log_type_t v61 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v59, v61))
  {
    uint64_t v62 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v62 = 136315650;
    uint64_t v63 = _typeName(_:qualified:)();
    uint64_t v211 = sub_10018A9E0(v63, v64, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 12) = 2080;
    unint64_t v65 = v200;
    swift_bridgeObjectRetain();
    uint64_t v211 = sub_10018A9E0(v202, v65, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v62 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v66 = v203;
    uint64_t v211 = sub_10018A9E0(v203, v204, aBlock);
    a2 = v204;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v59, v61, "[%s] handleSetActiveItem<%s> - creating endpoint for item: %s to set as active session", (uint8_t *)v62, 0x20u);
    swift_arrayDestroy();
    uint64_t v67 = v60;
    uint64_t v68 = v192;
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v57 + 8))(v189, v67);
    uint64_t v69 = v193;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v52);
    uint64_t v69 = v193;
    uint64_t v66 = v203;
    uint64_t v68 = v192;
  }
  NSString v210 = self;
  sub_100013A80(&qword_100478690);
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_1003C58B0;
  *(void *)(v86 + 32) = v66;
  *(void *)(v86 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t isa = (uint64_t)Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  RoutingInteraction.identifier.getter();
  uint64_t v87 = v68;
  RoutingInteraction.description.getter();
  id v88 = objc_allocWithZone((Class)MRRequestDetails);
  NSString v89 = String._bridgeToObjectiveC()();
  NSString v90 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v91 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v92 = [v88 initWithName:v89 requestID:v90 reason:v91 userInitiated:1];

  uint64_t v93 = v190;
  uint64_t v94 = v185;
  (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v185, v87, v69);
  unint64_t v95 = (*(unsigned __int8 *)(v93 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
  unint64_t v96 = (v95 + v184 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v97 = (v95 + v184 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v98 = (char *)swift_allocObject();
  uint64_t v99 = v202;
  *((void *)v98 + 2) = v188;
  *((void *)v98 + 3) = v99;
  uint64_t v100 = v194;
  *((void *)v98 + 4) = v200;
  *((void *)v98 + 5) = v100;
  *((void *)v98 + 6) = v195;
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(&v98[v95], v94, v69);
  char v101 = &v98[v96];
  unint64_t v102 = v204;
  *(void *)char v101 = v203;
  *((void *)v101 + 1) = v102;
  v101[16] = v187 & 1;
  *(void *)&v98[v97] = v198;
  aBlock[4] = (uint64_t)sub_1002F47C8;
  aBlock[5] = (uint64_t)v98;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002DA178;
  aBlock[3] = (uint64_t)&unk_100428720;
  uint64_t v103 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v104 = (void *)isa;
  [v210 createEndpointWithOutputDeviceUIDs:isa timeout:v92 details:v103 completion:8.0];
  _Block_release(v103);
}

uint64_t sub_1002D1124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v152 = a2;
  uint64_t v153 = a7;
  unint64_t v158 = a6;
  uint64_t v159 = a5;
  uint64_t v151 = a1;
  uint64_t v163 = a9;
  uint64_t v156 = *v9;
  uint64_t v157 = type metadata accessor for Logger();
  uint64_t v154 = *(void *)(v157 - 8);
  uint64_t v13 = __chkstk_darwin(v157);
  uint64_t v148 = (char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v150 = (char *)&v144 - v15;
  uint64_t v161 = type metadata accessor for RoutingInteraction();
  uint64_t v16 = *(void *)(v161 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = __chkstk_darwin(v161);
  uint64_t v19 = (char *)&v144 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v147 = (char *)&v144 - v21;
  __chkstk_darwin(v20);
  unint64_t v160 = (char *)&v144 - v22;
  uint64_t v23 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v144 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = type metadata accessor for HostedRoutingSourceSession(0);
  unint64_t v149 = *(void *)(v145 - 8);
  uint64_t v26 = *(void *)(v149 + 64);
  uint64_t v27 = __chkstk_darwin(v145);
  uint64_t v144 = (uint64_t)&v144 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v27);
  BOOL v30 = (uint64_t *)((char *)&v144 - v29);
  __chkstk_darwin(v28);
  uint64_t v146 = (uint64_t)&v144 - v31;
  uint64_t v164 = a8;
  uint64_t v155 = RoutingInteraction.identifier.getter();
  unint64_t v33 = v32;
  uint64_t v34 = sub_1002A0458();
  if (*(void *)v34 == a3 && *((void *)v34 + 1) == a4
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || ((uint64_t v55 = sub_10029EEA0(), *v55 != v159) || v55[1] != v158)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (*(void *)v34 == a3 && *((void *)v34 + 1) == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      unint64_t v149 = v33;
      uint64_t v35 = v162;
      uint64_t v36 = *(uint64_t (**)(uint64_t))(**(void **)&v162[OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore]
                                              + 264);
      swift_retain();
      uint64_t v37 = v164;
      uint64_t v38 = v36(v164);
      uint64_t v40 = v39;
      swift_release();
      uint64_t v41 = v16;
      uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v16 + 16);
      if (v40)
      {
        type metadata accessor for Preferences();
        LODWORD(v157) = static Preferences.deferHandoffActiveSessionChange.getter();
        uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
        uint64_t v154 = v38;
        uint64_t v44 = v161;
        uint64_t v45 = v163;
        v43(v160, v37, v161);
        unint64_t v46 = (*(unsigned __int8 *)(v41 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
        unint64_t v47 = (v17 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v49 = (char *)swift_allocObject();
        *((void *)v49 + 2) = sub_1002F3AA4;
        *((void *)v49 + 3) = v45;
        uint64_t v50 = v154;
        *((void *)v49 + 4) = v35;
        *((void *)v49 + 5) = v50;
        uint64_t v51 = v155;
        *((void *)v49 + 6) = v40;
        *((void *)v49 + 7) = v51;
        *((void *)v49 + 8) = v149;
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v49[v46], v160, v44);
        uint64_t v52 = &v49[v47];
        uint64_t v53 = v152;
        *(void *)uint64_t v52 = v151;
        *((void *)v52 + 1) = v53;
        *(void *)&v49[v48] = v153;
        *(void *)&v49[(v48 + 15) & 0xFFFFFFFFFFFFFFF8] = v156;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1002CF88C(v159, v158, v164, (v157 & 1) == 0, (void (*)(void))sub_1002F4F14, (uint64_t)v49);
        return swift_release();
      }
      uint64_t v159 = v41;
      uint64_t v64 = sub_1001A69C4();
      uint64_t v65 = v154;
      uint64_t v66 = v150;
      uint64_t v67 = v157;
      (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v150, v64, v157);
      uint64_t v68 = v147;
      uint64_t v69 = v161;
      (*v42)(v147, v37, v161);
      unint64_t v70 = v149;
      swift_bridgeObjectRetain();
      uint64_t v71 = Logger.logObject.getter();
      uint64_t v72 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v71, (os_log_type_t)v72))
      {
        uint64_t v73 = swift_slowAlloc();
        uint64_t v164 = swift_slowAlloc();
        v165[0] = v164;
        *(_DWORD *)uint64_t v73 = 136315650;
        uint64_t v74 = _typeName(_:qualified:)();
        uint64_t v166 = sub_10018A9E0(v74, v75, v165);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v73 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v166 = sub_10018A9E0(v155, v70, v165);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v73 + 22) = 2080;
        sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v166 = sub_10018A9E0(v76, v77, v165);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v159 + 8))(v68, v69);
        _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v72, "[%s] handleHandoffFromApplication<%s> - no prewarmed identifier found for interaction: %s -> failing", (uint8_t *)v73, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v65 + 8))(v150, v157);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v159 + 8))(v68, v69);

        (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
      }
      uint64_t v92 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v93 = swift_allocError();
      uint64_t v95 = v94;
      unint64_t v96 = (unsigned int *)&enum case for InternalRoutingError.sessionNotFound(_:);
    }
    else
    {
      uint64_t v78 = sub_1001A69C4();
      uint64_t v79 = v154;
      uint64_t v80 = v148;
      uint64_t v81 = v157;
      (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v148, v78, v157);
      uint64_t v82 = v161;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v164, v161);
      swift_bridgeObjectRetain();
      uint64_t v83 = Logger.logObject.getter();
      os_log_type_t v84 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = swift_slowAlloc();
        uint64_t v86 = swift_slowAlloc();
        uint64_t v162 = v19;
        uint64_t v164 = v86;
        v165[0] = v86;
        *(_DWORD *)uint64_t v85 = 136315650;
        uint64_t v87 = _typeName(_:qualified:)();
        uint64_t v166 = sub_10018A9E0(v87, v88, v165);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v85 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v166 = sub_10018A9E0(v155, v33, v165);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v85 + 22) = 2080;
        sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        NSString v89 = v162;
        uint64_t v90 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v166 = sub_10018A9E0(v90, v91, v165);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v89, v82);
        _os_log_impl((void *)&_mh_execute_header, v83, v84, "[%s] handleHandoffFromApplication<%s> - handoff interaction: %s doesn't match any supported direction", (uint8_t *)v85, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v79 + 8))(v148, v157);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v82);

        (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v81);
      }
      uint64_t v92 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v93 = swift_allocError();
      uint64_t v95 = v97;
      unint64_t v96 = (unsigned int *)&enum case for InternalRoutingError.invalidAction(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v92 - 8) + 104))(v95, *v96, v92);
    uint64_t v98 = v93;
    uint64_t v99 = 1;
    uint64_t v100 = 0;
    uint64_t v101 = 4;
    goto LABEL_30;
  }
  uint64_t v159 = v16;
  uint64_t v56 = swift_bridgeObjectRelease();
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(*(void *)v162 + 328))(v56);
  uint64_t v58 = *(void *)(v57 + 16);
  if (v58)
  {
    uint64_t v59 = *(unsigned __int8 *)(v149 + 80);
    unint64_t v158 = v57;
    uint64_t v60 = v57 + ((v59 + 32) & ~v59);
    uint64_t v61 = *(void *)(v149 + 72);
    while (1)
    {
      sub_1002F2874(v60, (uint64_t)v30, type metadata accessor for HostedRoutingSourceSession);
      BOOL v62 = *v30 == a3 && v30[1] == a4;
      if (v62 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      sub_1002F5F00((uint64_t)v30, type metadata accessor for HostedRoutingSourceSession);
      v60 += v61;
      if (!--v58)
      {
        uint64_t v63 = 1;
        goto LABEL_34;
      }
    }
    sub_1002F39C4((uint64_t)v30, (uint64_t)v25, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v63 = 0;
  }
  else
  {
    uint64_t v63 = 1;
  }
LABEL_34:
  unint64_t v109 = v149;
  uint64_t v110 = v145;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v149 + 56))(v25, v63, 1, v145);
  swift_bridgeObjectRelease();
  int v111 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 48))(v25, 1, v110);
  uint64_t v112 = v159;
  uint64_t v113 = v146;
  if (v111 == 1)
  {
    sub_100009A08((uint64_t)v25, &qword_100479588);
    uint64_t v114 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v115 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v114 - 8) + 104))(v116, enum case for InternalRoutingError.sessionNotFound(_:), v114);
    swift_bridgeObjectRetain();
    uint64_t v98 = v115;
    uint64_t v99 = a3;
    uint64_t v100 = a4;
    uint64_t v101 = 2;
LABEL_30:
    uint64_t v102 = MRDFastSyncGroupSessionState.rawValue.getter(v98, v99, v100, v101);
    uint64_t v104 = v103;
    uint64_t v106 = v105;
    unsigned __int8 v108 = v107;
    sub_1002F3AA4(v102, v103, v105, v107);
    swift_errorRelease();
    return sub_1001859D4(v104, v106, v108);
  }
  uint64_t result = sub_1002F39C4((uint64_t)v25, v146, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v117 = *(void *)(v113 + 24);
  if (v117)
  {
    uint64_t v118 = *(void *)(v113 + 16);
    unint64_t v119 = &v162[OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints];
    swift_beginAccess();
    uint64_t v120 = *(void *)v119;
    if (*(void *)(v120 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v121 = sub_100013660(v118, v117);
      if (v122)
      {
        uint64_t v123 = *(void *)(*(void *)(v120 + 56) + 8 * v121);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(v123 + 16) == 2)
        {
          unint64_t v124 = *(void *)v34;
          uint64_t v157 = *((void *)v34 + 1);
          unint64_t v158 = v124;
          uint64_t v156 = type metadata accessor for HostedRoutingSourceSession;
          uint64_t v125 = v144;
          sub_1002F2874(v113, v144, type metadata accessor for HostedRoutingSourceSession);
          uint64_t v126 = v161;
          (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v160, v164, v161);
          unint64_t v127 = (*(unsigned __int8 *)(v149 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
          unint64_t v128 = (v26 + v127 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v129 = (*(unsigned __int8 *)(v112 + 80) + v128 + 8) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
          uint64_t v130 = (char *)swift_allocObject();
          id v132 = v162;
          uint64_t v131 = v163;
          *((void *)v130 + 2) = sub_1002F3AA4;
          *((void *)v130 + 3) = v131;
          *((void *)v130 + 4) = v132;
          sub_1002F39C4(v125, (uint64_t)&v130[v127], v156);
          *(void *)&v130[v128] = v153;
          (*(void (**)(char *, char *, uint64_t))(v112 + 32))(&v130[v129], v160, v126);
          uint64_t v133 = v157;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1002CF170(v158, v133, (void (*)(uint64_t))sub_1002F53C0, (uint64_t)v130);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          return sub_1002F5F00(v146, type metadata accessor for HostedRoutingSourceSession);
        }
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v134 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v135 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v134 - 8) + 104))(v136, enum case for InternalRoutingError.sessionNotFound(_:), v134);
    swift_bridgeObjectRetain();
    uint64_t v137 = MRDFastSyncGroupSessionState.rawValue.getter(v135, a3, a4, 2);
    uint64_t v139 = v138;
    uint64_t v141 = v140;
    unsigned __int8 v143 = v142;
    sub_1002F3AA4(v137, v138, v140, v142);
    swift_errorRelease();
    sub_1001859D4(v139, v141, v143);
    return sub_1002F5F00(v113, type metadata accessor for HostedRoutingSourceSession);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D2268(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))
{
  uint64_t v120 = a1;
  uint64_t v116 = *v3;
  uint64_t v112 = type metadata accessor for RoutingInteraction();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v109 = v6;
  uint64_t v110 = (char *)v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for RoutingControl.RoutingControlType();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v8 = (void *)((char *)v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for RoutingControl();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v107 = (char *)v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v113 = (char *)v101 - v14;
  uint64_t v108 = v15;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v101 - v16;
  uint64_t v18 = sub_100013A80((uint64_t *)&unk_10047BC50);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v114 = a2;
  uint64_t v115 = RoutingInteraction.identifier.getter();
  uint64_t v22 = v21;
  uint64_t v23 = sub_1001A6B94();
  sub_1001E71E8(v23, (uint64_t)v20, (uint64_t *)&unk_10047BC50);
  uint64_t v24 = type metadata accessor for Logger();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24) == 1)
  {
    uint64_t v26 = v9;
    sub_100009A08((uint64_t)v20, (uint64_t *)&unk_10047BC50);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v17, v120, v9);
    swift_bridgeObjectRetain_n();
    uint64_t v106 = v10;
    unint64_t v27 = (unint64_t)v22;
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v105 = a3;
      uint64_t v32 = v31;
      uint64_t v104 = swift_slowAlloc();
      uint64_t v123 = v104;
      *(_DWORD *)uint64_t v32 = 136315650;
      os_log_t v103 = v28;
      v101[1] = v32 + 4;
      uint64_t v33 = _typeName(_:qualified:)();
      int v102 = v30;
      uint64_t v121 = sub_10018A9E0(v33, v34, &v123);
      v101[2] = &v122;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v121 = sub_10018A9E0(v115, v27, &v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v22 = (void *)v27;
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 22) = 2080;
      sub_1002F14AC(&qword_100478970, (void (*)(uint64_t))&type metadata accessor for RoutingControl);
      uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v121 = sub_10018A9E0(v35, v36, &v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v10 = v106;
      uint64_t v37 = v17;
      uint64_t v26 = v9;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v37, v9);
      os_log_t v38 = v103;
      _os_log_impl((void *)&_mh_execute_header, v103, (os_log_type_t)v102, "[%s] handleControl<%s> - handle interaction with: %s", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a3 = v105;
      swift_slowDealloc();
    }
    else
    {
      uint64_t v22 = (void *)v27;
      swift_bridgeObjectRelease_n();

      uint64_t v10 = v106;
      uint64_t v39 = v17;
      uint64_t v26 = v9;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v39, v9);
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v24);
  }
  RoutingControl.type.getter();
  uint64_t v40 = v118;
  uint64_t v41 = v119;
  int v42 = (*(uint64_t (**)(uint64_t *, uint64_t))(v118 + 88))(v8, v119);
  if (v42 == enum case for RoutingControl.RoutingControlType.skipForward(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v40 + 96))(v8, v41);
    uint64_t v43 = *v8;
    sub_100013A80((uint64_t *)&unk_100479EF0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
    if (kMRMediaRemoteOptionSkipInterval)
    {
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v45;
      *(void *)(inited + 72) = &type metadata for Double;
      *(void *)(inited + 48) = v43;
      unint64_t v46 = sub_1001FA360(inited);
      uint64_t v47 = v120;
      int v48 = 17;
LABEL_13:
      sub_1002E2A10(v47, v48, v46, (void (*)(void))sub_1002F3AA4, (uint64_t)a3);
      return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v42 == enum case for RoutingControl.RoutingControlType.skipBackward(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v40 + 96))(v8, v41);
    uint64_t v49 = *v8;
    sub_100013A80((uint64_t *)&unk_100479EF0);
    uint64_t v50 = swift_initStackObject();
    *(_OWORD *)(v50 + 16) = xmmword_1003C58B0;
    if (kMRMediaRemoteOptionSkipInterval)
    {
      *(void *)(v50 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v50 + 40) = v51;
      *(void *)(v50 + 72) = &type metadata for Double;
      *(void *)(v50 + 48) = v49;
      unint64_t v46 = sub_1001FA360(v50);
      uint64_t v47 = v120;
      int v48 = 18;
      goto LABEL_13;
    }
    goto LABEL_37;
  }
  if (v42 == enum case for RoutingControl.RoutingControlType.absoluteVolume(_:)) {
    goto LABEL_16;
  }
  if (v42 == enum case for RoutingControl.RoutingControlType.relativeVolume(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v40 + 96))(v8, v41);
    uint64_t v53 = type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType();
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v53 - 8) + 8))(v8, v53);
    return sub_1002E3D1C(v120, v114, a3);
  }
  if (v42 == enum case for RoutingControl.RoutingControlType.previousTrack(_:))
  {
    swift_bridgeObjectRelease();
    unint64_t v46 = sub_1001FA360((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v47 = v120;
    int v48 = 5;
    goto LABEL_13;
  }
  if (v42 == enum case for RoutingControl.RoutingControlType.nextTrack(_:))
  {
    swift_bridgeObjectRelease();
    unint64_t v46 = sub_1001FA360((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v47 = v120;
    int v48 = 4;
    goto LABEL_13;
  }
  if (v42 == enum case for RoutingControl.RoutingControlType.play(_:))
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = v111;
    uint64_t v55 = v110;
    uint64_t v56 = v112;
    (*(void (**)(char *, unint64_t, uint64_t))(v111 + 16))(v110, v114, v112);
    uint64_t v57 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v113, v120, v26);
    unint64_t v58 = (*(unsigned __int8 *)(v54 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    unint64_t v59 = (v109 + *(unsigned __int8 *)(v10 + 80) + v58) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v60 = v10;
    uint64_t v61 = (char *)swift_allocObject();
    *((void *)v61 + 2) = sub_1002F3AA4;
    *((void *)v61 + 3) = a3;
    *((void *)v61 + 4) = v117;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v61[v58], v55, v56);
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(&v61[v59], v113, v57);
    swift_retain();
    swift_retain();
    unint64_t v62 = sub_1001FA360((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v63 = (void (*)(void))sub_1002F6CB0;
    uint64_t v64 = v120;
    int v65 = 0;
LABEL_28:
    sub_1002E2A10(v64, v65, v62, v63, (uint64_t)v61);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v66 = v26;
  if (v42 == enum case for RoutingControl.RoutingControlType.pause(_:))
  {
    swift_bridgeObjectRelease();
    uint64_t v67 = v111;
    uint64_t v68 = v110;
    uint64_t v69 = v112;
    (*(void (**)(char *, unint64_t, uint64_t))(v111 + 16))(v110, v114, v112);
    unint64_t v70 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v113, v120, v26);
    unint64_t v71 = (*(unsigned __int8 *)(v67 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    unint64_t v72 = (v109 + *(unsigned __int8 *)(v10 + 80) + v71) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v73 = (char *)swift_allocObject();
    uint64_t v119 = v66;
    uint64_t v74 = v10;
    uint64_t v61 = v73;
    *((void *)v73 + 2) = sub_1002F3AA4;
    *((void *)v73 + 3) = a3;
    *((void *)v73 + 4) = v117;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(&v73[v71], v68, v69);
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v61[v72], v70, v119);
    swift_retain();
    swift_retain();
    unint64_t v62 = sub_1001FA360((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v63 = (void (*)(void))sub_1002F6B2C;
    uint64_t v64 = v120;
    int v65 = 1;
    goto LABEL_28;
  }
  if (v42 == enum case for RoutingControl.RoutingControlType.rewind(_:))
  {
LABEL_38:
    uint64_t v123 = 0;
    unint64_t v124 = 0xE000000000000000;
    _StringGuts.grow(_:)(81);
    v91._countAndFlagsBits = 91;
    v91._object = (void *)0xE100000000000000;
    String.append(_:)(v91);
    v92._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v92);
    swift_bridgeObjectRelease();
    v93._object = (void *)0x80000001003BA4E0;
    v93._countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v93);
    v94._countAndFlagsBits = v115;
    v94._object = v22;
    String.append(_:)(v94);
    v95._countAndFlagsBits = 0xD00000000000003CLL;
    v95._object = (void *)0x80000001003BA550;
    String.append(_:)(v95);
    goto LABEL_40;
  }
  if (v42 == enum case for RoutingControl.RoutingControlType.fastForward(_:))
  {
    uint64_t v123 = 0;
    unint64_t v124 = 0xE000000000000000;
    _StringGuts.grow(_:)(86);
    v96._countAndFlagsBits = 91;
    v96._object = (void *)0xE100000000000000;
    String.append(_:)(v96);
    v97._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v97);
    swift_bridgeObjectRelease();
    v98._object = (void *)0x80000001003BA4E0;
    v98._countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v98);
    v99._countAndFlagsBits = v115;
    v99._object = v22;
    String.append(_:)(v99);
    v100._countAndFlagsBits = 0xD000000000000041;
    v100._object = (void *)0x80000001003BA500;
    String.append(_:)(v100);
    goto LABEL_40;
  }
  if (v42 == enum case for RoutingControl.RoutingControlType.tvRemote(_:)
    || v42 == enum case for RoutingControl.RoutingControlType.favorite(_:))
  {
    swift_bridgeObjectRelease();
    uint64_t v75 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v76 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v75 - 8) + 104))(v77, enum case for InternalRoutingError.notImplemented(_:), v75);
    uint64_t v78 = MRDFastSyncGroupSessionState.rawValue.getter(v76, 0, 0, 4);
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    unsigned __int8 v84 = v83;
    sub_1002F3AA4(v78, v79, v81, v83);
    swift_errorRelease();
    return sub_1001859D4(v80, v82, v84);
  }
  if (v42 == enum case for RoutingControl.RoutingControlType.mute(_:))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return sub_1002E3D1C(v120, v114, a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v107, v120, v26);
  uint64_t v123 = 0;
  unint64_t v124 = 0xE000000000000000;
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  uint64_t v123 = 91;
  unint64_t v124 = 0xE100000000000000;
  v85._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v85);
  swift_bridgeObjectRelease();
  v86._object = (void *)0x80000001003BA4E0;
  v86._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v86);
  v87._countAndFlagsBits = v115;
  v87._object = v22;
  String.append(_:)(v87);
  v88._countAndFlagsBits = 0x746E6F63202D203ELL;
  v88._object = (void *)0xED0000203A6C6F72;
  String.append(_:)(v88);
  sub_1002F14AC(&qword_100478970, (void (*)(uint64_t))&type metadata accessor for RoutingControl);
  v89._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v89);
  swift_bridgeObjectRelease();
  v90._countAndFlagsBits = 0x6E616820746F6E20;
  v90._object = (void *)0xED00002E64656C64;
  String.append(_:)(v90);
LABEL_40:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002D32DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t v8 = sub_1001B5D04(a2, a3);
    swift_endAccess();
    if (v8)
    {
      uint64_t v9 = sub_1001924CC(v8);
      a4(v9);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1002D33AC(uint64_t a1, void (*a2)(void, void, void, void), uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v133 = a5;
  uint64_t v121 = a4;
  uint64_t v134 = a3;
  uint64_t v119 = a2;
  uint64_t v123 = *v5;
  uint64_t v118 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v116 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for DispatchQoS();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v113 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for DispatchTime();
  uint64_t v112 = *(void *)(v127 - 8);
  uint64_t v9 = __chkstk_darwin(v127);
  uint64_t v109 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v111 = (char *)&v102 - v11;
  uint64_t v12 = type metadata accessor for RoutingInteraction();
  uint64_t v124 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v131 = *(void *)(v19 - 8);
  uint64_t v132 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v136 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v126 = (char *)&v102 - v23;
  uint64_t v108 = v24;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v102 - v25;
  uint64_t v27 = type metadata accessor for ContinuousClock();
  uint64_t v129 = *(void *)(v27 - 8);
  uint64_t v130 = v27;
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v135 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v125 = (char *)&v102 - v31;
  uint64_t v107 = v32;
  __chkstk_darwin(v30);
  unint64_t v34 = (char *)&v102 - v33;
  uint64_t v122 = RoutingInteraction.identifier.getter();
  unint64_t v36 = v35;
  ContinuousClock.init()();
  unint64_t v128 = v34;
  ContinuousClock.now.getter();
  uint64_t v37 = sub_1001A69C4();
  uint64_t v105 = v16;
  os_log_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v106 = v15;
  v38(v18, v37, v15);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 16);
  uint64_t v103 = v12;
  v39(v14, a1, v12);
  unint64_t v137 = v36;
  swift_bridgeObjectRetain_n();
  uint64_t v104 = v18;
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v120 = v26;
  if (v42)
  {
    uint64_t v43 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136315650;
    uint64_t v44 = _typeName(_:qualified:)();
    uint64_t v138 = (void *)sub_10018A9E0(v44, v45, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    unint64_t v46 = v137;
    swift_bridgeObjectRetain();
    uint64_t v138 = (void *)sub_10018A9E0(v122, v46, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v43 + 22) = 2080;
    sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    uint64_t v47 = v103;
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v138 = (void *)sub_10018A9E0(v48, v49, aBlock);
    uint64_t v26 = v120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v14, v47);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "[%s] waitForSessionStability<%s> - interaction: %s", (uint8_t *)v43, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v14, v103);
  }

  (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v106);
  uint64_t v50 = v129;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v129 + 16);
  uint64_t v52 = v125;
  uint64_t v53 = v130;
  v51(v125, v128, v130);
  uint64_t v54 = v131;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
  uint64_t v56 = v126;
  uint64_t v57 = v26;
  uint64_t v58 = v132;
  v55(v126, v57, v132);
  v51(v135, v52, v53);
  v55(v136, v56, v58);
  unint64_t v59 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v60 = (v107 + *(unsigned __int8 *)(v54 + 80) + v59) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v61 = (v108 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v62 = (v61 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v63 + v59, v125, v53);
  (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v63 + v60, v126, v58);
  uint64_t v64 = (void *)(v63 + v61);
  unint64_t v65 = v137;
  *uint64_t v64 = v122;
  v64[1] = v65;
  uint64_t v66 = (void *)(v63 + v62);
  uint64_t v67 = v134;
  *uint64_t v66 = v119;
  v66[1] = v67;
  *(void *)(v63 + ((v62 + 23) & 0xFFFFFFFFFFFFFFF8)) = v123;
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v68 = sub_1001E78B8();
  uint64_t v70 = v69;
  uint64_t v71 = swift_allocObject();
  uint64_t v107 = v71 + 16;
  uint64_t v72 = v110;
  swift_weakInit();
  uint64_t v73 = (void *)swift_allocObject();
  uint64_t v74 = v121;
  v73[2] = v71;
  v73[3] = v74;
  v73[4] = v133;
  v73[5] = v68;
  v73[6] = v70;
  v73[7] = sub_1002F3DCC;
  v73[8] = v63;
  uint64_t v75 = swift_allocObject();
  uint64_t v126 = (char *)v75;
  *(void *)(v75 + 16) = sub_1002F3DCC;
  *(void *)(v75 + 24) = v63;
  uint64_t v76 = swift_allocObject();
  *(void *)(v76 + 16) = sub_1002F3F3C;
  *(void *)(v76 + 24) = v73;
  uint64_t v77 = (void **)(v72 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  uint64_t v124 = v63;
  swift_retain_n();
  uint64_t v108 = v71;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v138 = *v77;
  void *v77 = (void *)0x8000000000000000;
  uint64_t v79 = v76;
  uint64_t v80 = v68;
  sub_1001B79E4((uint64_t)sub_1001BA8E4, v79, v68, v70, isUniquelyReferenced_nonNull_native);
  void *v77 = v138;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = swift_endAccess();
  uint64_t v106 = (*(uint64_t (**)(uint64_t))(*(void *)v72 + 280))(v81);
  uint64_t v82 = v109;
  static DispatchTime.now()();
  uint64_t v83 = v111;
  + infix(_:_:)();
  uint64_t v112 = *(void *)(v112 + 8);
  ((void (*)(char *, uint64_t))v112)(v82, v127);
  uint64_t v84 = swift_allocObject();
  swift_weakInit();
  Swift::String v85 = (void *)swift_allocObject();
  v85[2] = v84;
  v85[3] = v80;
  uint64_t v110 = v80;
  v85[4] = v70;
  v85[5] = sub_1001BA8B8;
  v85[6] = v126;
  aBlock[4] = (uint64_t)sub_1002F40B4;
  aBlock[5] = (uint64_t)v85;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100006760;
  aBlock[3] = (uint64_t)&unk_1004285E0;
  Swift::String v86 = _Block_copy(aBlock);
  uint64_t v125 = (char *)v70;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  Swift::String v87 = v113;
  static DispatchQoS.unspecified.getter();
  uint64_t v138 = _swiftEmptyArrayStorage;
  sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  Swift::String v88 = v116;
  uint64_t v89 = v118;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  Swift::String v90 = (void *)v106;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v86);

  (*(void (**)(char *, uint64_t))(v117 + 8))(v88, v89);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v87, v115);
  ((void (*)(char *, uint64_t))v112)(v83, v127);
  swift_release();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(void))(*(void *)Strong + 328))();
    char v92 = v121();
    swift_bridgeObjectRelease();
    uint64_t v93 = v134;
    unint64_t v94 = v137;
    if (v92)
    {
      swift_beginAccess();
      uint64_t v95 = (uint64_t)v125;
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_1001B5D04(v110, v95);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1001924CC(v96);
      sub_1002D4394(0, (uint64_t)v135, (uint64_t)v136, v122, v94, v119, v93, v123);
    }
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v97 = v130;
  Swift::String v98 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
  v98((uint64_t)v135, v130);
  uint64_t v99 = v132;
  Swift::String v100 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
  v100((uint64_t)v136, v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v100((uint64_t)v120, v99);
  v98((uint64_t)v128, v97);
  return swift_release();
}

uint64_t sub_1002D4394(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(void, void, void, void), uint64_t a7, uint64_t a8)
{
  uint64_t v61 = a8;
  uint64_t v62 = a4;
  uint64_t v76 = a7;
  uint64_t v77 = a6;
  uint64_t v10 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  uint64_t v70 = *(void *)(v10 - 8);
  uint64_t v71 = v10;
  __chkstk_darwin(v10);
  uint64_t v66 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v68 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  uint64_t v64 = *(void *)(v15 - 8);
  uint64_t v65 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v72 = *(void *)(v18 - 8);
  uint64_t v73 = v18;
  __chkstk_darwin(v18);
  uint64_t v69 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for Logger();
  uint64_t v20 = *(void *)(v78 - 8);
  uint64_t v21 = __chkstk_darwin(v78);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v57 - v24;
  uint64_t v26 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v74 = *(void *)(v26 - 8);
  uint64_t v75 = v26;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  ContinuousClock.now.getter();
  uint64_t v63 = ContinuousClock.Instant.duration(to:)();
  uint64_t v30 = v29;
  uint64_t v31 = sub_1001A69C4();
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  if (a1)
  {
    v32(v25, v31, v78);
    swift_bridgeObjectRetain_n();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      LODWORD(v60) = v35;
      uint64_t v37 = v36;
      uint64_t v59 = swift_slowAlloc();
      v81[0] = v59;
      *(_DWORD *)uint64_t v37 = 136315650;
      uint64_t v38 = _typeName(_:qualified:)();
      uint64_t v61 = v30;
      uint64_t v79 = sub_10018A9E0(v38, v39, v81);
      os_log_t v58 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v79 = sub_10018A9E0(v62, a5, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v62 = v37 + 24;
      sub_100013A80(&qword_100478D50);
      type metadata accessor for Duration.UnitsFormatStyle.Unit();
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_1003C5BA0;
      static Duration.UnitsFormatStyle.Unit.seconds.getter();
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
      sub_1001BAA1C(v40);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter();
      static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
      os_log_type_t v41 = v66;
      static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
      BOOL v42 = v69;
      static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v41, v71);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v68);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v65);
      sub_1002F14AC(&qword_100478D58, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
      uint64_t v43 = v73;
      Duration.formatted<A>(_:)();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v42, v43);
      uint64_t v79 = sub_10018A9E0(v79, v80, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_t v44 = v58;
      _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v60, "[%s] waitForSessionStability<%s> - timed out after: %s", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v78);
  }
  else
  {
    v32(v23, v31, v78);
    swift_bridgeObjectRetain_n();
    unint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    int v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      v81[0] = v60;
      *(_DWORD *)uint64_t v48 = 136315650;
      LODWORD(v59) = v47;
      uint64_t v49 = _typeName(_:qualified:)();
      uint64_t v61 = v30;
      uint64_t v79 = sub_10018A9E0(v49, v50, v81);
      os_log_t v58 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v79 = sub_10018A9E0(v62, a5, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v48 + 22) = 2080;
      uint64_t v62 = v48 + 24;
      sub_100013A80(&qword_100478D50);
      type metadata accessor for Duration.UnitsFormatStyle.Unit();
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_1003C5BA0;
      static Duration.UnitsFormatStyle.Unit.seconds.getter();
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
      sub_1001BAA1C(v51);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter();
      static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
      uint64_t v52 = v66;
      static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
      uint64_t v53 = v69;
      static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v52, v71);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v68);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v65);
      sub_1002F14AC(&qword_100478D58, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
      uint64_t v54 = v73;
      Duration.formatted<A>(_:)();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v53, v54);
      uint64_t v79 = sub_10018A9E0(v79, v80, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_t v55 = v58;
      _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v59, "[%s] waitForSessionStability<%s> - stable after: %s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v78);
  }
  v77(0, 0, 0, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v28, v75);
}

uint64_t sub_1002D4ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for HostedRoutingSourceSession(0) - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return 0;
  }
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v29 = *(void *)(v11 + 72);
  uint64_t v30 = v15;
  v28[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  while (1)
  {
    uint64_t v17 = (void *)(v30 + v29 * v16);
    if (*v17 == a2 && v17[1] == a3) {
      break;
    }
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1002F2874((uint64_t)v17, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    if (v19) {
      goto LABEL_11;
    }
LABEL_3:
    ++v16;
    sub_1002F5F00((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    if (v16 == v14)
    {
      uint64_t v26 = 0;
      goto LABEL_21;
    }
  }
  sub_1002F2874(v30 + v29 * v16, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
LABEL_11:
  uint64_t v20 = *((void *)v13 + 4);
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21) {
    goto LABEL_3;
  }
  uint64_t v22 = *(void *)(type metadata accessor for HostedRoutingItem(0) - 8);
  uint64_t v23 = *(void *)(v22 + 72);
  uint64_t v24 = (void *)(v20
                 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))
                 + 8);
  while (1)
  {
    BOOL v25 = *(v24 - 1) == a4 && *v24 == a5;
    if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      break;
    }
    uint64_t v24 = (void *)((char *)v24 + v23);
    if (!--v21) {
      goto LABEL_3;
    }
  }
  sub_1002F5F00((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v26 = 1;
LABEL_21:
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1002D5144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for HostedRoutingSourceSession(0) - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return 0;
  }
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v29 = *(void *)(v11 + 72);
  uint64_t v30 = v15;
  v28[1] = a1;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v14; ++i)
  {
    uint64_t v17 = (void *)(v30 + v29 * i);
    if (*v17 == a2 && v17[1] == a3)
    {
      sub_1002F2874(v30 + v29 * i, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1002F2874((uint64_t)v17, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
      if ((v19 & 1) == 0) {
        goto LABEL_3;
      }
    }
    uint64_t v20 = *((void *)v13 + 4);
    uint64_t v21 = *(void *)(v20 + 16);
    if (!v21)
    {
LABEL_19:
      sub_1002F5F00((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v26 = 1;
      goto LABEL_20;
    }
    uint64_t v22 = *(void *)(type metadata accessor for HostedRoutingItem(0) - 8);
    uint64_t v23 = *(void *)(v22 + 72);
    uint64_t v24 = (void *)(v20
                   + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))
                   + 8);
    while (1)
    {
      BOOL v25 = *(v24 - 1) == a4 && *v24 == a5;
      if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      uint64_t v24 = (void *)((char *)v24 + v23);
      if (!--v21) {
        goto LABEL_19;
      }
    }
LABEL_3:
    sub_1002F5F00((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
  }
  uint64_t v26 = 0;
LABEL_20:
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1002D53B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for HostedRoutingSourceSession(0) - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *(void *)(a1 + 16);
  if (!v45) {
    return 0;
  }
  uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v43 = *(void *)(v11 + 72);
  uint64_t v44 = v14;
  uint64_t v35 = a1;
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  long long v41 = xmmword_1003C58B0;
  unint64_t v39 = v13;
  uint64_t v40 = a5;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v36 = a2;
  while (1)
  {
    uint64_t v16 = (void *)(v44 + v43 * v15);
    if (*v16 == a2 && v16[1] == a3)
    {
      sub_1002F2874(v44 + v43 * v15, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    }
    else
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1002F2874((uint64_t)v16, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
      if ((v18 & 1) == 0) {
        goto LABEL_4;
      }
    }
    uint64_t v19 = *((void *)v13 + 4);
    int64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      os_log_type_t v46 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100014688(0, v20, 0);
      uint64_t v21 = v46;
      uint64_t v22 = *(void *)(type metadata accessor for HostedRoutingItem(0) - 8);
      uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
      uint64_t v24 = *(void *)(v22 + 72);
      uint64_t v42 = v19;
      BOOL v25 = (uint64_t *)(v19 + ((v23 + 32) & ~v23) + 8);
      do
      {
        uint64_t v27 = *(v25 - 1);
        uint64_t v26 = *v25;
        os_log_type_t v46 = v21;
        unint64_t v28 = v21[2];
        unint64_t v29 = v21[3];
        swift_bridgeObjectRetain();
        if (v28 >= v29 >> 1)
        {
          sub_100014688(v29 > 1, v28 + 1, 1);
          uint64_t v21 = v46;
        }
        BOOL v25 = (uint64_t *)((char *)v25 + v24);
        v21[2] = v28 + 1;
        uint64_t v30 = &v21[2 * v28];
        v30[4] = v27;
        v30[5] = v26;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
      uint64_t v13 = v39;
      a5 = v40;
      a3 = v37;
      a4 = v38;
      a2 = v36;
    }
    else
    {
      uint64_t v21 = _swiftEmptyArrayStorage;
    }
    sub_100013A80(&qword_100478690);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v41;
    *(void *)(inited + 32) = a4;
    *(void *)(inited + 40) = a5;
    if (v21[2] == 1)
    {
      if (v21 == (void *)inited) {
        break;
      }
      BOOL v32 = v21[4] == a4 && v21[5] == a5;
      if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    ++v15;
    sub_1002F5F00((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    if (v15 == v45)
    {
      uint64_t v33 = 0;
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1002F5F00((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v33 = 1;
LABEL_30:
  swift_bridgeObjectRelease();
  return v33;
}

id sub_1002D5754(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    uint64_t v13 = v12;
    sub_10018FE08(0, (unint64_t *)&qword_100478370);
    char v14 = static NSObject.== infix(_:_:)();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        uint64_t v21 = v20;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      BOOL v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        uint64_t v27 = *v25++;
        uint64_t v26 = v27;
        unint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D5A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1002F2874(a1 + v12, (uint64_t)v10, type metadata accessor for HostedRoutingSourceSession);
        sub_1002F2874(a2 + v12, (uint64_t)v7, type metadata accessor for HostedRoutingSourceSession);
        sub_1002F14AC(&qword_10047C5C0, (void (*)(uint64_t))type metadata accessor for HostedRoutingSourceSession);
        char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_1002F5F00((uint64_t)v7, type metadata accessor for HostedRoutingSourceSession);
        sub_1002F5F00((uint64_t)v10, type metadata accessor for HostedRoutingSourceSession);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1002D5C24(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v41 = a6;
  uint64_t v42 = a7;
  v38[2] = a5;
  uint64_t v39 = a4;
  v38[1] = a2;
  uint64_t v40 = a1;
  uint64_t v46 = a12;
  int v45 = a11;
  uint64_t v43 = a9;
  uint64_t v44 = a10;
  uint64_t v50 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v53 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v51 = *(void *)(v17 - 8);
  uint64_t v52 = v17;
  __chkstk_darwin(v17);
  int v47 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for RoutingInteraction();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 280))(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), a8, v19);
  unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v24 = (v23 + v21 + 31) & 0xFFFFFFFFFFFFFFF8;
  BOOL v25 = (char *)swift_allocObject();
  uint64_t v26 = v39;
  *((void *)v25 + 2) = a2;
  *((void *)v25 + 3) = v26;
  unint64_t v28 = v40;
  uint64_t v27 = v41;
  *((void *)v25 + 4) = a5;
  *((void *)v25 + 5) = v27;
  *((void *)v25 + 6) = v42;
  *((void *)v25 + 7) = v28;
  *((void *)v25 + 8) = a3;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v25[v23], (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v19);
  uint64_t v29 = &v25[(v23 + v21 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v30 = v44;
  *(void *)uint64_t v29 = v43;
  *((void *)v29 + 1) = v30;
  v29[16] = v45;
  *(void *)&v25[v24] = v46;
  aBlock[4] = sub_1002F49B0;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100428770;
  uint64_t v31 = _Block_copy(aBlock);
  swift_errorRetain();
  id v32 = v28;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v33 = v47;
  static DispatchQoS.unspecified.getter();
  uint64_t v54 = _swiftEmptyArrayStorage;
  sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  uint64_t v35 = v49;
  uint64_t v34 = v50;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v36 = (void *)v48;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v34);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v52);
  return swift_release();
}

uint64_t sub_1002D60B0(void *a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5, void (*a6)(char *, uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, char *a12)
{
  os_log_t v289 = (void (*)(void))a4;
  uint64_t v288 = a2;
  uint64_t v287 = a12;
  uint64_t v272 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v271 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  uint64_t v269 = (char *)&v253 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = type metadata accessor for DispatchQoS();
  uint64_t v268 = *(void *)(v270 - 8);
  __chkstk_darwin(v270);
  v267 = (char *)&v253 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v274 = type metadata accessor for DispatchTime();
  uint64_t v266 = *(void *)(v274 - 8);
  uint64_t v20 = __chkstk_darwin(v274);
  uint64_t v265 = (char *)&v253 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v273 = (char *)&v253 - v22;
  uint64_t v286 = type metadata accessor for RoutingInteraction();
  uint64_t v285 = *(void *)(v286 - 8);
  uint64_t v23 = __chkstk_darwin(v286);
  uint64_t v264 = (char *)&v253 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v275 = (char *)&v253 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  Swift::String v262 = (char *)&v253 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v282 = (uint64_t)&v253 - v30;
  uint64_t v263 = v31;
  __chkstk_darwin(v29);
  uint64_t v276 = (uint64_t *)((char *)&v253 - v32);
  uint64_t v291 = type metadata accessor for Logger();
  uint64_t v33 = *(void **)(v291 - 8);
  uint64_t v34 = __chkstk_darwin(v291);
  Swift::String v261 = (char *)&v253 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  Swift::String v260 = (char *)&v253 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  Swift::String v259 = (char *)&v253 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  v283 = (char *)&v253 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v280 = (char *)&v253 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v253 - v45;
  __chkstk_darwin(v44);
  uint64_t v48 = (char *)&v253 - v47;
  id v292 = a1;
  uint64_t v290 = a5;
  if (!a1)
  {
LABEL_4:
    uint64_t v55 = sub_1001A69C4();
    uint64_t v56 = (void (*)(void))v33[2];
    v277 = (void (*)(char *, char *, uint64_t))v55;
    uint64_t v57 = v291;
    uint64_t v279 = (uint64_t)(v33 + 2);
    v278 = (void (*)(char *, void, uint64_t))v56;
    v56(v46);
    os_log_t v58 = a6;
    uint64_t v59 = a6;
    swift_bridgeObjectRetain_n();
    uint64_t v60 = v59;
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    BOOL v63 = os_log_type_enabled(v61, v62);
    id v292 = v60;
    v284 = v33;
    uint64_t v281 = v58;
    if (v63)
    {
      uint64_t v257 = a8;
      uint64_t v256 = a7;
      uint64_t v64 = swift_slowAlloc();
      uint64_t v65 = (void *)swift_slowAlloc();
      uint64_t v255 = swift_slowAlloc();
      long long aBlock = (char *)v255;
      *(_DWORD *)uint64_t v64 = 136315650;
      uint64_t v66 = _typeName(_:qualified:)();
      uint64_t v303 = sub_10018A9E0(v66, v67, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v64 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v303 = sub_10018A9E0(v288, a3, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v258 = a3;
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v64 + 22) = 2112;
      if (v58)
      {
        id v68 = v292;
        uint64_t v303 = (uint64_t)v292;
        id v69 = v292;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        uint64_t v303 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v68 = v292;
      }
      *uint64_t v65 = v281;

      _os_log_impl((void *)&_mh_execute_header, v61, v62, "[%s] handleSetActiveItem<%s> - created endpoint: %@", (uint8_t *)v64, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v70 = (void (*)(char *, uint64_t))v284[1];
      uint64_t v57 = v291;
      v70(v46, v291);
      a3 = v258;
      a7 = v256;
      a8 = v257;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v70 = (void (*)(char *, uint64_t))v33[1];
      v70(v46, v57);
    }
    uint64_t v91 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore;
    char v92 = *(uint64_t (**)(uint64_t))(**(void **)(a7
                                                          + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore)
                                            + 264);
    swift_retain();
    uint64_t v93 = v92(a8);
    uint64_t v95 = v94;
    swift_release();
    if (!v95)
    {
      uint64_t v281 = v70;
      v179 = v280;
      v278(v280, v277, v57);
      uint64_t v180 = v285;
      uint64_t v181 = v276;
      uint64_t v182 = v286;
      (*(void (**)(void *, uint64_t, uint64_t))(v285 + 16))(v276, a8, v286);
      swift_bridgeObjectRetain_n();
      uint64_t v183 = v57;
      uint64_t v184 = Logger.logObject.getter();
      os_log_type_t v185 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v184, v185))
      {
        unint64_t v186 = a3;
        uint64_t v187 = swift_slowAlloc();
        long long aBlock = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v187 = 136315650;
        uint64_t v188 = _typeName(_:qualified:)();
        uint64_t v303 = sub_10018A9E0(v188, v189, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v187 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v303 = sub_10018A9E0(v288, v186, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v187 + 22) = 2080;
        sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        uint64_t v190 = v286;
        uint64_t v191 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v303 = sub_10018A9E0(v191, v192, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(void *, uint64_t))(v180 + 8))(v181, v190);
        _os_log_impl((void *)&_mh_execute_header, v184, v185, "[%s] handleSetActiveItem<%s> - no prewarmed identifier found for interaction: %s. Failing", (uint8_t *)v187, 0x20u);
        swift_arrayDestroy();
        uint64_t v177 = v289;
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v178 = (id *)&v303;
        goto LABEL_32;
      }
      swift_bridgeObjectRelease_n();
      (*(void (**)(void *, uint64_t))(v180 + 8))(v181, v182);

      v281(v179, v183);
LABEL_35:
      uint64_t v177 = v289;
      goto LABEL_36;
    }
    if (v281)
    {
      id v96 = [v292 outputDevices];
      if (v96)
      {
        uint64_t v97 = v96;
        sub_10018FE08(0, (unint64_t *)&qword_100478370);
        unint64_t v98 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v98 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v252 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v252) {
            goto LABEL_19;
          }
        }
        else if (*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_19:
          uint64_t v255 = v93;
          if ((v98 & 0xC000000000000001) != 0)
          {
            uint64_t v99 = (void *)a3;
            id v100 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              __break(1u);
            }
            uint64_t v99 = (void *)a3;
            id v100 = *(id *)(v98 + 32);
          }
          uint64_t v101 = v100;
          swift_bridgeObjectRelease();
          id v102 = [v101 groupID];

          if (v102)
          {
            uint64_t v280 = v95;
            uint64_t v282 = a9;
            uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v105 = v104;

            uint64_t v295 = v103;
            unint64_t v296 = v105;
            id v106 = v292;
            id v107 = [v292 designatedGroupLeader];
            uint64_t v257 = a8;
            v283 = (char *)a10;
            if (!v107)
            {
LABEL_26:
              LODWORD(v279) = a11;
              uint64_t v109 = *(void *)(a7 + v91);
              swift_beginAccess();
              uint64_t v110 = v295;
              unint64_t v111 = v296;
              uint64_t v112 = v285;
              uint64_t v113 = a7;
              uint64_t v114 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, unint64_t))(*(void *)v109 + 288);
              swift_retain();
              swift_bridgeObjectRetain();
              v114(v255, v280, a8, v110, v111);
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              long long aBlock = 0;
              unint64_t v298 = 0xE000000000000000;
              _StringGuts.grow(_:)(56);
              v115._object = (void *)0x80000001003BA420;
              v115._countAndFlagsBits = 0xD000000000000014;
              String.append(_:)(v115);
              v116._countAndFlagsBits = v288;
              unint64_t v258 = (unint64_t)v99;
              v116._object = v99;
              String.append(_:)(v116);
              v117._countAndFlagsBits = 0xD000000000000022;
              v117._object = (void *)0x80000001003BA440;
              String.append(_:)(v117);
              uint64_t v256 = v113;
              sub_1002CA8DC((uint64_t)aBlock, v298);
              swift_bridgeObjectRelease();
              uint64_t v291 = sub_1001E78B8();
              uint64_t v281 = v118;
              id v292 = (id)swift_allocObject();
              swift_weakInit();
              uint64_t v119 = v112;
              uint64_t v120 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
              uint64_t v121 = v262;
              uint64_t v122 = v286;
              v120(v262, a8, v286);
              v120(v275, (uint64_t)v121, v122);
              uint64_t v123 = *(unsigned __int8 *)(v112 + 80);
              uint64_t v124 = (v123 + 88) & ~v123;
              uint64_t v125 = v263;
              uint64_t v126 = v124 + v263;
              v278 = (void (*)(char *, void, uint64_t))(v123 | 7);
              unint64_t v127 = (v124 + v263) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v128 = (void *)swift_allocObject();
              uint64_t v276 = (void *)((char *)v128 + v127);
              uint64_t v129 = v291;
              v128[2] = v292;
              v128[3] = v129;
              uint64_t v130 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v289;
              v128[4] = v281;
              v128[5] = v130;
              uint64_t v131 = v282;
              v128[6] = v290;
              v128[7] = v131;
              uint64_t v132 = v288;
              v128[8] = v283;
              v128[9] = v132;
              v128[10] = v258;
              uint64_t v133 = v128;
              v284 = v128;
              v277 = *(void (**)(char *, char *, uint64_t))(v119 + 32);
              uint64_t v134 = v121;
              uint64_t v135 = v286;
              v277((char *)v128 + v124, v134, v286);
              LODWORD(v280) = v279 & 1;
              *((unsigned char *)v133 + v126) = v279 & 1;
              uint64_t v136 = v287;
              v276[1] = v287;
              unint64_t v137 = v264;
              v120(v264, v257, v135);
              uint64_t v138 = (v123 + 32) & ~v123;
              unint64_t v139 = (v125 + v138 + 7) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v140 = swift_allocObject();
              *(void *)(v140 + 16) = v132;
              *(void *)(v140 + 24) = v258;
              v277((char *)(v140 + v138), v137, v135);
              uint64_t v141 = (void (**)(void))(v140 + v139);
              uint64_t v142 = v290;
              *uint64_t v141 = v289;
              v141[1] = (void (*)(void))v142;
              *(void *)(v140 + ((v139 + 23) & 0xFFFFFFFFFFFFFFF8)) = v136;
              uint64_t v143 = swift_allocObject();
              uint64_t v144 = v284;
              *(void *)(v143 + 16) = sub_1002F4B5C;
              *(void *)(v143 + 24) = v144;
              uint64_t v145 = v256;
              uint64_t v146 = (void **)(v256
                               + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers);
              swift_beginAccess();
              swift_bridgeObjectRetain_n();
              uint64_t v147 = (uint64_t)v281;
              swift_bridgeObjectRetain_n();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain_n();
              swift_retain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v294 = *v146;
              *uint64_t v146 = (void *)0x8000000000000000;
              uint64_t v149 = v291;
              sub_1001B79E4((uint64_t)sub_10023A22C, v143, v291, v147, isUniquelyReferenced_nonNull_native);
              *uint64_t v146 = v294;
              uint64_t v150 = v147;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v151 = swift_endAccess();
              v277 = (void (*)(char *, char *, uint64_t))(*(uint64_t (**)(uint64_t))(*(void *)v145 + 280))(v151);
              uint64_t v152 = v265;
              static DispatchTime.now()();
              + infix(_:_:)();
              v278 = *(void (**)(char *, void, uint64_t))(v266 + 8);
              ((void (*)(char *, uint64_t))v278)(v152, v274);
              uint64_t v153 = swift_allocObject();
              swift_weakInit();
              uint64_t v154 = (void *)swift_allocObject();
              v154[2] = v153;
              v154[3] = v149;
              uint64_t v155 = v150;
              v154[4] = v150;
              v154[5] = sub_1002F4CFC;
              uint64_t v279 = v140;
              v154[6] = v140;
              long long v301 = sub_1002F40B4;
              uint64_t v302 = v154;
              long long aBlock = (char *)_NSConcreteStackBlock;
              unint64_t v298 = 1107296256;
              uint64_t v299 = sub_100006760;
              uint64_t v300 = &unk_100428838;
              uint64_t v156 = _Block_copy(&aBlock);
              swift_bridgeObjectRetain();
              swift_retain();
              swift_retain();
              uint64_t v157 = v267;
              static DispatchQoS.unspecified.getter();
              uint64_t v294 = _swiftEmptyArrayStorage;
              sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
              sub_100013A80((uint64_t *)&unk_100479AE0);
              sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
              unint64_t v158 = v269;
              uint64_t v159 = v272;
              dispatch thunk of SetAlgebra.init<A>(_:)();
              unint64_t v160 = v273;
              uint64_t v161 = v277;
              OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
              _Block_release(v156);

              (*(void (**)(char *, uint64_t))(v271 + 8))(v158, v159);
              (*(void (**)(char *, uint64_t))(v268 + 8))(v157, v270);
              ((void (*)(char *, uint64_t))v278)(v160, v274);
              swift_release();
              swift_release();
              uint64_t v162 = (uint64_t)v275;
              sub_1002D87A4((uint64_t)v292, v291, v155, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v289, v290, v282, (uint64_t)v283, v288, v258, (uint64_t)v275, (char)v280, v287);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              (*(void (**)(uint64_t, uint64_t))(v285 + 8))(v162, v286);
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
            uint64_t v108 = v107;
            if ([v107 supportsMultiplayer])
            {
LABEL_25:

              goto LABEL_26;
            }
            uint64_t v276 = v108;
            uint64_t v281 = v70;
            id v202 = [v106 origin];
            if (v202)
            {
              uint64_t v203 = v202;
              id v204 = [self server];
              id v205 = [v204 nowPlayingServer];

              id v206 = [v205 originClientForOrigin:v203];
              if (v206
                && (id v207 = [v206 deviceInfo], v206,
                                                                                                 v207))
              {
                id v208 = [v207 senderDefaultGroupUID];
                if (v208)
                {
                  id v209 = v208;
                  uint64_t v256 = a7;
                  uint64_t v210 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v212 = v211;

                  if (v210 == v103 && v212 == v105)
                  {
                    unint64_t v213 = (unint64_t)v99;
                  }
                  else
                  {
                    unint64_t v213 = (unint64_t)v99;
                    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                    {
                      uint64_t v232 = v259;
                      uint64_t v231 = v291;
                      v278(v259, v277, v291);
                      swift_bridgeObjectRetain_n();
                      swift_bridgeObjectRetain_n();
                      unsigned __int8 v233 = Logger.logObject.getter();
                      os_log_type_t v234 = static os_log_type_t.default.getter();
                      int v235 = v234;
                      if (os_log_type_enabled(v233, v234))
                      {
                        uint64_t v236 = swift_slowAlloc();
                        Swift::String v261 = (char *)swift_slowAlloc();
                        long long aBlock = v261;
                        *(_DWORD *)uint64_t v236 = 136315906;
                        unint64_t v258 = v213;
                        uint64_t v237 = _typeName(_:qualified:)();
                        int v254 = v235;
                        uint64_t v303 = sub_10018A9E0(v237, v238, (uint64_t *)&aBlock);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        swift_bridgeObjectRelease();
                        *(_WORD *)(v236 + 12) = 2080;
                        swift_bridgeObjectRetain();
                        uint64_t v303 = sub_10018A9E0(v288, v258, (uint64_t *)&aBlock);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        swift_bridgeObjectRelease_n();
                        *(_WORD *)(v236 + 22) = 2080;
                        uint64_t v253 = v236 + 24;
                        swift_beginAccess();
                        uint64_t v239 = v295;
                        unint64_t v240 = v296;
                        swift_bridgeObjectRetain();
                        uint64_t v303 = sub_10018A9E0(v239, v240, (uint64_t *)&aBlock);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        swift_bridgeObjectRelease();
                        *(_WORD *)(v236 + 32) = 2080;
                        swift_bridgeObjectRetain();
                        uint64_t v303 = sub_10018A9E0(v210, v212, (uint64_t *)&aBlock);
                        unint64_t v213 = v258;
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        swift_bridgeObjectRelease_n();
                        _os_log_impl((void *)&_mh_execute_header, v233, (os_log_type_t)v254, "[%s] handleSetActiveItem<%s> - switch groupIdentifier: %s with defaultGroupIdentifier: %s", (uint8_t *)v236, 0x2Au);
                        swift_arrayDestroy();
                        swift_slowDealloc();
                        uint64_t v231 = v291;
                        swift_slowDealloc();

                        v241 = v259;
                      }
                      else
                      {

                        swift_bridgeObjectRelease_n();
                        swift_bridgeObjectRelease_n();
                        v241 = v232;
                      }
                      v281(v241, v231);
                      swift_beginAccess();
                      uint64_t v295 = v210;
                      unint64_t v296 = v212;
                      goto LABEL_60;
                    }
                  }
                  uint64_t v231 = v291;
LABEL_60:
                  swift_bridgeObjectRelease();
                  uint64_t v242 = v260;
                  v278(v260, v277, v231);
                  swift_bridgeObjectRetain_n();
                  v243 = Logger.logObject.getter();
                  os_log_type_t v244 = static os_log_type_t.default.getter();
                  if (os_log_type_enabled(v243, v244))
                  {
                    uint64_t v245 = swift_slowAlloc();
                    uint64_t v279 = swift_slowAlloc();
                    long long aBlock = (char *)v279;
                    *(_DWORD *)uint64_t v245 = 136315394;
                    uint64_t v246 = _typeName(_:qualified:)();
                    uint64_t v303 = sub_10018A9E0(v246, v247, (uint64_t *)&aBlock);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v245 + 12) = 2080;
                    swift_bridgeObjectRetain();
                    uint64_t v303 = sub_10018A9E0(v288, v213, (uint64_t *)&aBlock);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    uint64_t v99 = (void *)v213;
                    swift_bridgeObjectRelease_n();
                    _os_log_impl((void *)&_mh_execute_header, v243, v244, "[%s] handleSetActiveItem<%s> - remove item from parent group", (uint8_t *)v245, 0x16u);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    uint64_t v248 = v260;
                    uint64_t v249 = v291;
                  }
                  else
                  {

                    uint64_t v99 = (void *)v213;
                    swift_bridgeObjectRelease_n();
                    uint64_t v248 = v242;
                    uint64_t v249 = v231;
                  }
                  v281(v248, v249);
                  a7 = v256;
                  NSString v250 = String._bridgeToObjectiveC()();
                  long long v301 = (uint64_t (*)())MRDFastSyncGroupSessionState.rawValue.getter;
                  uint64_t v302 = 0;
                  long long aBlock = (char *)_NSConcreteStackBlock;
                  unint64_t v298 = 1107296256;
                  uint64_t v299 = sub_1001872F8;
                  uint64_t v300 = &unk_100428860;
                  Swift::String v251 = _Block_copy(&aBlock);
                  [v292 removeOutputDeviceFromParentGroup:v250 queue:0 completion:v251];

                  _Block_release(v251);
                  uint64_t v108 = v250;
                  a8 = v257;
                  goto LABEL_25;
                }
              }
              else
              {
                id v207 = v203;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v214 = v261;
            uint64_t v215 = v291;
            v278(v261, v277, v291);
            swift_bridgeObjectRetain_n();
            uint64_t v216 = Logger.logObject.getter();
            os_log_type_t v217 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v216, v217))
            {
              uint64_t v218 = swift_slowAlloc();
              long long aBlock = (char *)swift_slowAlloc();
              *(_DWORD *)uint64_t v218 = 136315394;
              uint64_t v219 = _typeName(_:qualified:)();
              uint64_t v303 = sub_10018A9E0(v219, v220, (uint64_t *)&aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v218 + 12) = 2080;
              swift_bridgeObjectRetain();
              uint64_t v303 = sub_10018A9E0(v288, (unint64_t)v99, (uint64_t *)&aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v216, v217, "[%s] handleSetActiveItem<%s> - no default group identifier for non-multiplayer device", (uint8_t *)v218, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            v281(v214, v215);
            uint64_t v221 = v289;
            uint64_t v222 = type metadata accessor for InternalRoutingError();
            sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
            uint64_t v223 = swift_allocError();
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v222 - 8) + 104))(v224, enum case for InternalRoutingError.sessionNotFound(_:), v222);
            MRDFastSyncGroupSessionState.rawValue.getter(v223, 1, 0, 4);
            uint64_t v226 = v225;
            uint64_t v228 = v227;
            unsigned __int8 v230 = v229;
            v221();
            swift_errorRelease();
            sub_1001859D4(v226, v228, v230);

            return swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          a3 = (unint64_t)v99;
          uint64_t v57 = v291;
          goto LABEL_28;
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
LABEL_28:
    uint64_t v163 = (uint64_t)v283;
    v278(v283, v277, v57);
    uint64_t v164 = v285;
    uint64_t v165 = v282;
    uint64_t v166 = v286;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v285 + 16))(v282, a8, v286);
    swift_bridgeObjectRetain_n();
    uint64_t v167 = Logger.logObject.getter();
    uint64_t v168 = v57;
    os_log_type_t v169 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v167, v169))
    {
      uint64_t v170 = swift_slowAlloc();
      long long aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v170 = 136315650;
      uint64_t v171 = _typeName(_:qualified:)();
      uint64_t v303 = sub_10018A9E0(v171, v172, (uint64_t *)&aBlock);
      uint64_t v281 = v70;
      uint64_t v173 = v164;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v170 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v303 = sub_10018A9E0(v288, a3, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v170 + 22) = 2080;
      sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      uint64_t v174 = v282;
      uint64_t v175 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v303 = sub_10018A9E0(v175, v176, (uint64_t *)&aBlock);
      uint64_t v177 = v289;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v174, v166);
      _os_log_impl((void *)&_mh_execute_header, v167, v169, "[%s] handleSetActiveItem<%s> - formed endpoint for interaction: %s has no group identifier. Failing", (uint8_t *)v170, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v178 = (id *)&v304;
LABEL_32:
      v281((char *)*(v178 - 32), v291);
LABEL_36:
      uint64_t v193 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v194 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v193 - 8) + 104))(v195, enum case for InternalRoutingError.sessionNotFound(_:), v193);
      MRDFastSyncGroupSessionState.rawValue.getter(v194, 1, 0, 4);
      uint64_t v197 = v196;
      uint64_t v199 = v198;
      unsigned __int8 v201 = v200;
      v177();
      swift_errorRelease();
      return sub_1001859D4(v197, v199, v201);
    }
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v165, v166);

    v70((char *)v163, v168);
    goto LABEL_35;
  }
  uint64_t v279 = (uint64_t)v46;
  unint64_t v49 = a3;
  uint64_t v50 = (void (*)(void, void))a6;
  uint64_t v51 = a8;
  uint64_t v52 = a7;
  uint64_t v53 = v33;
  swift_getErrorValue();
  uint64_t v54 = v293;
  swift_errorRetain();
  if (sub_10024FC34(v54))
  {
    swift_errorRelease();
    a7 = v52;
    a8 = v51;
    a6 = (void (*)(char *, uint64_t))v50;
    a3 = v49;
    uint64_t v46 = (char *)v279;
    goto LABEL_4;
  }
  uint64_t v71 = sub_1001A69C4();
  uint64_t v72 = v48;
  uint64_t v73 = v48;
  uint64_t v74 = v291;
  ((void (*)(char *, uint64_t, uint64_t))v33[2])(v73, v71, v291);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  uint64_t v75 = Logger.logObject.getter();
  unint64_t v76 = v49;
  os_log_type_t v77 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v75, v77))
  {
    uint64_t v78 = swift_slowAlloc();
    uint64_t v285 = swift_slowAlloc();
    uint64_t v286 = swift_slowAlloc();
    long long aBlock = (char *)v286;
    *(_DWORD *)uint64_t v78 = 136315650;
    uint64_t v79 = _typeName(_:qualified:)();
    uint64_t v303 = sub_10018A9E0(v79, v80, (uint64_t *)&aBlock);
    uint64_t v287 = v72;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v78 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v303 = sub_10018A9E0(v288, v76, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v78 + 22) = 2112;
    swift_errorRetain();
    uint64_t v81 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v303 = v81;
    uint64_t v82 = v289;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)uint64_t v285 = v81;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v75, v77, "[%s] handleSetActiveItem<%s> - create endpoint failed with error: %@", (uint8_t *)v78, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(char *, uint64_t))v53[1])(v287, v74);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    ((void (*)(char *, uint64_t))v53[1])(v72, v74);
    uint64_t v82 = v289;
  }
  id v83 = v292;
  swift_errorRetain();
  MRDFastSyncGroupSessionState.rawValue.getter(v83, 0, 0, 4);
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  unsigned __int8 v89 = v88;
  v82();
  swift_errorRelease();
  sub_1001859D4(v85, v87, v89);
  return swift_errorRelease();
}

uint64_t sub_1002D87A4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, char a11, char *a12)
{
  uint64_t v156 = a8;
  uint64_t v161 = a5;
  uint64_t v162 = a4;
  uint64_t v160 = a3;
  uint64_t v159 = a2;
  uint64_t v14 = type metadata accessor for RoutingInteraction();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v157 = (char *)v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v155 = (char *)v151 - v19;
  __chkstk_darwin(v18);
  uint64_t v153 = (char *)v151 - v20;
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v158 = (char *)v151 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)v151 - v26;
  __chkstk_darwin(v25);
  uint64_t v154 = (char *)v151 - v28;
  uint64_t v29 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v29 - 8);
  uint64_t v166 = (uint64_t)v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v167 = *(void *)(v165 - 8);
  uint64_t v31 = __chkstk_darwin(v165);
  uint64_t v33 = (char *)v151 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)v151 - v34;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v37 = result;
    uint64_t v164 = v35;
    uint64_t v38 = (*(uint64_t (**)(void))(*(void *)result + 328))();
    uint64_t v174 = *(void *)(v38 + 16);
    uint64_t v163 = v37;
    uint64_t v152 = v22;
    if (v174)
    {
      uint64_t v178 = (char *)(v38
                    + ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80)));
      uint64_t v175 = v184;
      uint64_t v177 = *(void *)(v167 + 72);
      v151[1] = v38;
      swift_bridgeObjectRetain();
      uint64_t v39 = 0;
      uint64_t v171 = v21;
      uint64_t v170 = v15;
      uint64_t v173 = v14;
      unint64_t v172 = v27;
      uint64_t v169 = a7;
      uint64_t v168 = a6;
      unint64_t v176 = v33;
      while (1)
      {
        sub_1002F2874((uint64_t)&v178[v177 * v39], (uint64_t)v33, type metadata accessor for HostedRoutingSourceSession);
        int64_t v40 = *(void *)(*((void *)v33 + 4) + 16);
        if (v40)
        {
          uint64_t v182 = (char *)_swiftEmptyArrayStorage;
          uint64_t v41 = swift_bridgeObjectRetain();
          sub_100014688(0, v40, 0);
          uint64_t v42 = v182;
          uint64_t v43 = *(void *)(type metadata accessor for HostedRoutingItem(0) - 8);
          uint64_t v44 = *(unsigned __int8 *)(v43 + 80);
          uint64_t v45 = *(void *)(v43 + 72);
          v179 = (char *)v41;
          uint64_t v46 = (uint64_t *)(v41 + ((v44 + 32) & ~v44) + 8);
          do
          {
            uint64_t v48 = *(v46 - 1);
            uint64_t v47 = *v46;
            uint64_t v182 = v42;
            unint64_t v49 = *((void *)v42 + 2);
            unint64_t v50 = *((void *)v42 + 3);
            swift_bridgeObjectRetain();
            if (v49 >= v50 >> 1)
            {
              sub_100014688(v50 > 1, v49 + 1, 1);
              uint64_t v42 = v182;
            }
            uint64_t v46 = (uint64_t *)((char *)v46 + v45);
            *((void *)v42 + 2) = v49 + 1;
            uint64_t v51 = &v42[16 * v49];
            *((void *)v51 + 4) = v48;
            *((void *)v51 + 5) = v47;
            --v40;
          }
          while (v40);
          swift_bridgeObjectRelease();
          uint64_t v21 = v171;
          uint64_t v15 = v170;
          uint64_t v14 = v173;
          uint64_t v27 = v172;
          a7 = v169;
          a6 = v168;
        }
        else
        {
          uint64_t v42 = (char *)_swiftEmptyArrayStorage;
        }
        uint64_t v33 = v176;
        v184[0] = a6;
        v184[1] = a7;
        if (*((void *)v42 + 2) == 1)
        {
          if (v42 == &v183) {
            break;
          }
          BOOL v52 = *((void *)v42 + 4) == a6 && *((void *)v42 + 5) == a7;
          if (v52 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
        }
        swift_bridgeObjectRetain();
        swift_arrayDestroy();
        ++v39;
        swift_bridgeObjectRelease();
        sub_1002F5F00((uint64_t)v33, type metadata accessor for HostedRoutingSourceSession);
        if (v39 == v174)
        {
          swift_bridgeObjectRelease();
          uint64_t v53 = 1;
          uint64_t v54 = (uint64_t)v164;
          uint64_t v55 = v166;
          uint64_t v56 = v165;
          goto LABEL_23;
        }
      }
      uint64_t v56 = v165;
      swift_bridgeObjectRetain();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v55 = v166;
      sub_1002F39C4((uint64_t)v33, v166, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v53 = 0;
      uint64_t v54 = (uint64_t)v164;
    }
    else
    {
      uint64_t v53 = 1;
      uint64_t v54 = (uint64_t)v164;
      uint64_t v55 = v166;
      uint64_t v56 = v165;
    }
LABEL_23:
    uint64_t v57 = v167;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v167 + 56))(v55, v53, 1, v56);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56) == 1)
    {
      swift_release();
      return sub_100009A08(v55, &qword_100479588);
    }
    uint64_t v58 = sub_1002F39C4(v55, v54, type metadata accessor for HostedRoutingSourceSession);
    if (sub_1002A0454(v58))
    {
      uint64_t v59 = sub_1001A69C4();
      uint64_t v60 = v152;
      uint64_t v61 = v158;
      (*(void (**)(char *, uint64_t, uint64_t))(v152 + 16))(v158, v59, v21);
      os_log_type_t v62 = v157;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v157, a10, v14);
      swift_bridgeObjectRetain_n();
      BOOL v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.error.getter();
      int v65 = v64;
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v66 = swift_slowAlloc();
        v179 = (char *)swift_slowAlloc();
        uint64_t v182 = v179;
        *(_DWORD *)uint64_t v66 = 136315650;
        uint64_t v67 = _typeName(_:qualified:)();
        uint64_t v173 = v14;
        uint64_t v181 = (void *)sub_10018A9E0(v67, v68, (uint64_t *)&v182);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v66 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v181 = (void *)sub_10018A9E0(v156, a9, (uint64_t *)&v182);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v66 + 22) = 2080;
        sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        id v69 = v157;
        LODWORD(v178) = v65;
        uint64_t v70 = v173;
        uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v181 = (void *)sub_10018A9E0(v71, v72, (uint64_t *)&v182);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v69, v70);
        _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v178, "[%s] handleSetActiveItem<%s> - interaction: %s is an illogical action for a picked item on the local session", (uint8_t *)v66, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v60 + 8))(v158, v21);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v62, v14);

        (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v21);
      }
      uint64_t v86 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v87 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v86 - 8) + 104))(v88, enum case for InternalRoutingError.invalidAction(_:), v86);
      uint64_t v89 = MRDFastSyncGroupSessionState.rawValue.getter(v87, 1, 0, 4);
      uint64_t v91 = v90;
      uint64_t v93 = v92;
      uint64_t v95 = v94;
      swift_beginAccess();
      uint64_t v96 = v160;
      swift_bridgeObjectRetain();
      uint64_t v97 = sub_1001B5D04(v159, v96);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1001924CC(v97);
      v162(v89, v91, v93, v95);
      swift_errorRelease();
      sub_1001859D4(v91, v93, v95);
LABEL_37:
      swift_release();
LABEL_42:
      uint64_t v112 = (uint64_t)v164;
      return sub_1002F5F00(v112, type metadata accessor for HostedRoutingSourceSession);
    }
    v179 = a12;
    uint64_t v73 = v27;
    uint64_t v74 = *(void *)(v54 + 24);
    if (!v74)
    {
      uint64_t v98 = sub_1001A69C4();
      uint64_t v99 = v152;
      id v100 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v152 + 16))(v154, v98, v21);
      uint64_t v101 = v153;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v153, a10, v14);
      swift_bridgeObjectRetain_n();
      id v102 = Logger.logObject.getter();
      os_log_type_t v103 = static os_log_type_t.debug.getter();
      int v104 = v103;
      if (os_log_type_enabled(v102, v103))
      {
        uint64_t v105 = swift_slowAlloc();
        uint64_t v178 = (char *)swift_slowAlloc();
        uint64_t v182 = v178;
        *(_DWORD *)uint64_t v105 = 136315650;
        uint64_t v106 = _typeName(_:qualified:)();
        uint64_t v173 = v14;
        uint64_t v181 = (void *)sub_10018A9E0(v106, v107, (uint64_t *)&v182);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v105 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v181 = (void *)sub_10018A9E0(v156, a9, (uint64_t *)&v182);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v105 + 22) = 2080;
        sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
        uint64_t v108 = v153;
        LODWORD(v179) = v104;
        uint64_t v109 = v173;
        uint64_t v110 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v181 = (void *)sub_10018A9E0(v110, v111, (uint64_t *)&v182);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v108, v109);
        _os_log_impl((void *)&_mh_execute_header, v102, (os_log_type_t)v179, "[%s] handleSetActiveItem<%s> - session is not endpoint sourced. Continuing to wait to handle interaction: %s", (uint8_t *)v105, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_release();
        (*(void (**)(char *, uint64_t))(v99 + 8))(v154, v21);
      }
      else
      {

        swift_release();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v101, v14);
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v21);
      }
      goto LABEL_42;
    }
    uint64_t v75 = *(void *)(v54 + 16);
    unint64_t v76 = (uint64_t *)(v163 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
    swift_beginAccess();
    uint64_t v77 = *v76;
    uint64_t v78 = v152;
    if (*(void *)(v77 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v79 = sub_100013660(v75, v74);
      if (v80)
      {
        uint64_t v81 = *(void *)(*(void *)(v77 + 56) + 8 * v79);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(v81 + 16) == 2)
        {
          if (a11)
          {
            uint64_t v82 = *(void *)(v81 + 32);
            uint64_t v83 = *(void *)(v81 + 40);
            if (*(unsigned char *)(v81 + 80))
            {
              uint64_t v84 = *(void **)(v81 + 64);
              swift_bridgeObjectRetain();
              id v85 = [v84 resolvedOutputDevices];
            }
            else
            {
              uint64_t v141 = *(void **)(v81 + 72);
              swift_bridgeObjectRetain();
              id v85 = [v141 outputDevices];
            }
            id v142 = v85;
            if (v142)
            {
              sub_10018FE08(0, (unint64_t *)&qword_100478370);
              uint64_t v143 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
            }
            else
            {
              uint64_t v143 = _swiftEmptyArrayStorage;
            }
            uint64_t v144 = sub_1002BDAD8((unint64_t)v143);
            swift_bridgeObjectRelease();
            uint64_t v145 = (void *)(v163 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
            uint64_t v146 = *(void *)(v163
                             + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
            uint64_t v147 = *(void *)(v163
                             + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                             + 8);
            uint64_t v148 = *(void **)(v163
                              + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                              + 16);
            void *v145 = v82;
            v145[1] = v83;
            v145[2] = v144;
            sub_1002F2830(v146, v147, (uint64_t)v148);
            sub_1002F16C8(v146, v147, (uint64_t)v148);
            sub_1002BF4F0(v146, v147, v148);
            sub_1002F16C8(v146, v147, (uint64_t)v148);
          }
          swift_beginAccess();
          uint64_t v149 = v160;
          swift_bridgeObjectRetain();
          uint64_t v150 = sub_1001B5D04(v159, v149);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_1001924CC(v150);
          v162(0, 0, 0, 0);
          swift_release();
          goto LABEL_37;
        }
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v113 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v73, v113, v21);
    uint64_t v114 = v155;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v155, a10, v14);
    swift_bridgeObjectRetain_n();
    Swift::String v115 = Logger.logObject.getter();
    os_log_type_t v116 = static os_log_type_t.error.getter();
    int v117 = v116;
    if (os_log_type_enabled(v115, v116))
    {
      uint64_t v118 = swift_slowAlloc();
      unint64_t v172 = v73;
      uint64_t v119 = v118;
      uint64_t v178 = (char *)swift_slowAlloc();
      uint64_t v181 = v178;
      *(_DWORD *)uint64_t v119 = 136315650;
      uint64_t v120 = _typeName(_:qualified:)();
      uint64_t v173 = v14;
      uint64_t v180 = sub_10018A9E0(v120, v121, (uint64_t *)&v181);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v119 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v180 = sub_10018A9E0(v156, a9, (uint64_t *)&v181);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v119 + 22) = 2080;
      sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
      uint64_t v122 = v155;
      LODWORD(v179) = v117;
      uint64_t v123 = v173;
      uint64_t v124 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v180 = sub_10018A9E0(v124, v125, (uint64_t *)&v181);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v122, v123);
      _os_log_impl((void *)&_mh_execute_header, v115, (os_log_type_t)v179, "[%s] handleSetActiveItem<%s> - endpoint sourced session has no connected endpoint, Failing interaction: %s", (uint8_t *)v119, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v78 + 8))(v172, v21);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v114, v14);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v73, v21);
    }
    uint64_t v126 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v127 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v126 - 8) + 104))(v128, enum case for InternalRoutingError.sessionNotFound(_:), v126);
    uint64_t v129 = v164;
    uint64_t v130 = *v164;
    uint64_t v131 = v164[1];
    swift_bridgeObjectRetain();
    uint64_t v132 = MRDFastSyncGroupSessionState.rawValue.getter(v127, v130, v131, 2);
    uint64_t v134 = v133;
    uint64_t v136 = v135;
    uint64_t v138 = v137;
    swift_beginAccess();
    uint64_t v139 = v160;
    swift_bridgeObjectRetain();
    uint64_t v140 = sub_1001B5D04(v159, v139);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1001924CC(v140);
    v162(v132, v134, v136, v138);
    swift_errorRelease();
    sub_1001859D4(v134, v136, v138);
    swift_release();
    uint64_t v112 = (uint64_t)v129;
    return sub_1002F5F00(v112, type metadata accessor for HostedRoutingSourceSession);
  }
  return result;
}

uint64_t sub_1002D9CC8(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, void (*a6)(void))
{
  uint64_t v43 = a6;
  uint64_t v44 = a1;
  uint64_t v45 = a5;
  uint64_t v9 = type metadata accessor for RoutingInteraction();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_1001A69C4();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    os_log_t v40 = v18;
    uint64_t v22 = v21;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v47 = v41;
    *(_DWORD *)uint64_t v22 = 136315650;
    int v39 = v20;
    uint64_t v23 = _typeName(_:qualified:)();
    uint64_t v42 = v13;
    uint64_t v46 = sub_10018A9E0(v23, v24, &v47);
    uint64_t v43 = a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_10018A9E0(v44, a2, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 22) = 2080;
    sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v46 = sub_10018A9E0(v25, v26, &v47);
    a4 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    os_log_t v27 = v40;
    _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v39, "[%s] handleSetActiveItem<%s> - interaction: %s hit timeout", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v42);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);

    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
  }
  uint64_t v28 = type metadata accessor for InternalRoutingError();
  sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
  uint64_t v29 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, enum case for InternalRoutingError.timedOut(_:), v28);
  MRDFastSyncGroupSessionState.rawValue.getter(v29, 1, 0, 4);
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  unsigned __int8 v36 = v35;
  a4();
  swift_errorRelease();
  return sub_1001859D4(v32, v34, v36);
}

void sub_1002DA178(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(void *, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(a2, a3, a4);
  swift_release();
}

void sub_1002DA220(uint64_t *a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v346 = a5;
  v347 = a4;
  uint64_t v359 = a2;
  v358 = a1;
  uint64_t v356 = *v5;
  v354 = (void *)type metadata accessor for Features.MediaRemote();
  v353 = (void (**)(void, void, void))*(v354 - 1);
  __chkstk_darwin(v354);
  v352 = (char *)&v327 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RoutingInteraction();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v327 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v338 = type metadata accessor for HostedRoutingSourceSession(0);
  __chkstk_darwin(v338);
  uint64_t v13 = (char *)&v327 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void **)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  v337 = (char *)&v327 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v339 = (char *)&v327 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v335 = (char *)&v327 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v333 = (char *)&v327 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v332 = (char *)&v327 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v334 = (char *)&v327 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v331 = (char *)&v327 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v329 = (char *)&v327 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v330 = (char *)&v327 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v328 = (char *)&v327 - v35;
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v327 - v36;
  uint64_t v345 = RoutingInteraction.identifier.getter();
  unint64_t v39 = v38;
  uint64_t v40 = sub_1001A69C4();
  v357 = v15;
  uint64_t v41 = v15;
  uint64_t v42 = v358;
  uint64_t v43 = (void (*)(char *, uint64_t, uint64_t))v41[2];
  uint64_t v341 = v40;
  v343 = v41 + 2;
  v342 = v43;
  ((void (*)(char *))v43)(v37);
  v348 = v13;
  sub_1002F2874((uint64_t)v42, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
  v350 = (char *)v9;
  uint64_t v44 = *(void (**)(char *, void *, uint64_t))(v9 + 16);
  id v336 = a3;
  uint64_t v351 = v8;
  v44(v11, a3, v8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v349 = v37;
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.default.getter();
  BOOL v47 = os_log_type_enabled(v45, v46);
  unint64_t v355 = v39;
  if (v47)
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v344 = v14;
    uint64_t v49 = v48;
    uint64_t v327 = swift_slowAlloc();
    long long aBlock = (char *)v327;
    *(_DWORD *)uint64_t v49 = 136316162;
    uint64_t v50 = _typeName(_:qualified:)();
    *(void *)&long long v363 = sub_10018A9E0(v50, v51, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v363 = sub_10018A9E0(v345, v39, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v49 + 22) = 2080;
    sub_1002F14AC(&qword_100479590, (void (*)(uint64_t))type metadata accessor for HostedRoutingSourceSession);
    uint64_t v52 = (uint64_t)v348;
    uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v363 = sub_10018A9E0(v53, v54, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002F5F00(v52, type metadata accessor for HostedRoutingSourceSession);
    *(_WORD *)(v49 + 32) = 2080;
    uint64_t v55 = (void (*)(void, void))v359;
    *(void *)&long long v363 = v359;
    type metadata accessor for RoutingInteraction.Action.HandoffContext();
    sub_1002F14AC(&qword_10047CEB0, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action.HandoffContext);
    uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v363 = sub_10018A9E0(v56, v57, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 42) = 2080;
    sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    uint64_t v58 = v351;
    uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v363 = sub_10018A9E0(v59, v60, (uint64_t *)&aBlock);
    uint64_t v61 = v358;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v350 + 1))(v11, v58);
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "[%s] pullContentFromSession<%s> - session: %s, context: %s, for: %s", (uint8_t *)v49, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v14 = v344;
    swift_slowDealloc();

    os_log_type_t v62 = (void (*)(id, uint64_t))v357[1];
    v62(v349, v14);
    BOOL v63 = v55;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1002F5F00((uint64_t)v348, type metadata accessor for HostedRoutingSourceSession);
    BOOL v63 = (void (*)(void, void))v359;
    swift_release_n();
    (*((void (**)(char *, uint64_t))v350 + 1))(v11, v351);

    os_log_type_t v62 = (void (*)(id, uint64_t))v357[1];
    v62(v349, v14);
    uint64_t v61 = v42;
  }
  os_log_type_t v64 = v353;
  int v65 = v352;
  uint64_t v66 = v354;
  ((void (**)(char *, void, void *))v353)[13](v352, enum case for Features.MediaRemote.cayenneNewMusicHandoff(_:), v354);
  char v67 = Features.MediaRemote.isEnabled.getter();
  ((void (*)(char *, void *))v64[1])(v65, v66);
  if (v67)
  {
    sub_10018FE08(0, &qword_10047AC18);
    uint64_t v68 = RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter();
    char v70 = sub_10030B17C(v68, v69);
    swift_bridgeObjectRelease();
    if (v70)
    {
      swift_bridgeObjectRelease();
      sub_1002E7230(v61, v63, (uint64_t)v336, v347, v346);
      return;
    }
  }
  uint64_t v71 = v61[3];
  unint64_t v72 = v355;
  if (!v71)
  {
    id v102 = v337;
    v342(v337, v341, v14);
    swift_bridgeObjectRetain();
    os_log_type_t v103 = Logger.logObject.getter();
    os_log_type_t v104 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v103, v104))
    {
      uint64_t v105 = swift_slowAlloc();
      uint64_t v106 = swift_slowAlloc();
      v354 = v62;
      long long aBlock = (char *)v106;
      *(_DWORD *)uint64_t v105 = 136315394;
      uint64_t v344 = v14;
      uint64_t v107 = _typeName(_:qualified:)();
      *(void *)&long long v363 = sub_10018A9E0(v107, v108, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v105 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0(v345, v72, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v103, v104, "[%s] pullContentFromSession<%s> - failing because source session is not endpoint sourced", (uint8_t *)v105, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v354)(v337, v344);
LABEL_35:
      uint64_t v113 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v114 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v113 - 8) + 104))(v115, enum case for InternalRoutingError.sessionNotFound(_:), v113);
      uint64_t v116 = *v61;
      uint64_t v117 = v61[1];
      swift_bridgeObjectRetain();
      MRDFastSyncGroupSessionState.rawValue.getter(v114, v116, v117, 2);
      uint64_t v119 = v118;
      uint64_t v121 = v120;
      LOBYTE(v114) = v122;
      v347();
      swift_errorRelease();
      sub_1001859D4(v119, v121, v114);
      return;
    }
LABEL_34:

    swift_bridgeObjectRelease_n();
    v62(v102, v14);
    goto LABEL_35;
  }
  uint64_t v73 = v61[2];
  uint64_t v74 = (uint64_t *)(v340 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess();
  uint64_t v75 = *v74;
  if (!*(void *)(v75 + 16))
  {
LABEL_32:
    id v102 = v339;
    v342(v339, v341, v14);
    swift_bridgeObjectRetain();
    os_log_type_t v103 = Logger.logObject.getter();
    os_log_type_t v109 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v103, v109))
    {
      uint64_t v110 = swift_slowAlloc();
      long long aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v110 = 136315394;
      uint64_t v344 = v14;
      uint64_t v111 = _typeName(_:qualified:)();
      *(void *)&long long v363 = sub_10018A9E0(v111, v112, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v110 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0(v345, v72, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v103, v109, "[%s] pullContentFromSession<%s> - failing because no connected entry for endpoint-sourced session", (uint8_t *)v110, 0x16u);
      swift_arrayDestroy();
      uint64_t v61 = v358;
      swift_slowDealloc();
      swift_slowDealloc();

      v62(v339, v344);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v76 = sub_100013660(v73, v71);
  if ((v77 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  uint64_t v78 = *(void *)(*(void *)(v75 + 56) + 8 * v76);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v78 + 16) != 2)
  {
    swift_release();
    goto LABEL_32;
  }
  unint64_t v79 = (char *)[*(id *)(v78 + 64) origin];
  if (!v79)
  {
    uint64_t v123 = v335;
    v342(v335, v341, v14);
    unint64_t v124 = v355;
    swift_bridgeObjectRetain();
    unint64_t v125 = Logger.logObject.getter();
    os_log_type_t v126 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v125, v126))
    {
      uint64_t v127 = swift_slowAlloc();
      long long aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v127 = 136315394;
      uint64_t v344 = v14;
      uint64_t v128 = _typeName(_:qualified:)();
      *(void *)&long long v363 = sub_10018A9E0(v128, v129, (uint64_t *)&aBlock);
      v354 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v127 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0(v345, v124, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v125, v126, "[%s] pullContentFromSession<%s> - failing because no origin for endpoint-sourced session", (uint8_t *)v127, 0x16u);
      swift_arrayDestroy();
      uint64_t v61 = v358;
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v354)(v335, v344);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v62(v123, v14);
    }
    uint64_t v144 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v145 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v144 - 8) + 104))(v146, enum case for InternalRoutingError.sessionNotFound(_:), v144);
    uint64_t v147 = *v61;
    uint64_t v148 = v61[1];
    swift_bridgeObjectRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(v145, v147, v148, 2);
    uint64_t v150 = v149;
    uint64_t v152 = v151;
    LOBYTE(v145) = v153;
    v347();
    swift_errorRelease();
    sub_1001859D4(v150, v152, v145);
    swift_release();
    return;
  }
  char v80 = v79;
  v354 = v62;
  uint64_t v344 = v14;
  uint64_t v81 = self;
  id v82 = [v81 server];
  id v83 = [v82 nowPlayingServer];

  id v84 = [v83 originClientForOrigin:v80];
  if (!v84)
  {
    uint64_t v130 = v333;
    uint64_t v131 = v344;
    v342(v333, v341, v344);
    uint64_t v132 = v80;
    unint64_t v133 = v355;
    swift_bridgeObjectRetain();
    uint64_t v134 = v132;
    uint64_t v135 = Logger.logObject.getter();
    os_log_type_t v136 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v135, v136))
    {
      uint64_t v137 = swift_slowAlloc();
      v353 = (void (**)(void, void, void))swift_slowAlloc();
      uint64_t v359 = swift_slowAlloc();
      long long aBlock = (char *)v359;
      *(_DWORD *)uint64_t v137 = 136315650;
      uint64_t v351 = v78;
      uint64_t v138 = _typeName(_:qualified:)();
      uint64_t v139 = v134;
      *(void *)&long long v363 = sub_10018A9E0(v138, v140, (uint64_t *)&aBlock);
      v352 = v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v137 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0(v345, v133, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v137 + 22) = 2112;
      *(void *)&long long v363 = v134;
      uint64_t v141 = v134;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v353 = (void (*)(void, void, void))v352;

      uint64_t v134 = v139;
      _os_log_impl((void *)&_mh_execute_header, v135, v136, "[%s] pullContentFromSession<%s> - failing because no source origin client found for: %@", (uint8_t *)v137, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      uint64_t v61 = v358;
      swift_slowDealloc();
      swift_slowDealloc();

      id v142 = v130;
      uint64_t v143 = v344;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      id v142 = v130;
      uint64_t v143 = v131;
    }
    ((void (*)(char *, uint64_t))v354)(v142, v143);
    uint64_t v171 = v347;
    uint64_t v172 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v173 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v172 - 8) + 104))(v174, enum case for InternalRoutingError.sessionNotFound(_:), v172);
    uint64_t v175 = *v61;
    uint64_t v176 = v61[1];
    swift_bridgeObjectRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(v173, v175, v176, 2);
    uint64_t v178 = v177;
    uint64_t v180 = v179;
    unsigned __int8 v182 = v181;
    v171();
    swift_errorRelease();
    sub_1001859D4(v178, v180, v182);
    swift_release();

    return;
  }
  uint64_t v85 = RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter();
  unint64_t v87 = v86;
  v350 = (char *)v85;
  NSString v88 = String._bridgeToObjectiveC()();
  uint64_t v89 = (void (**)(void, void, void))v84;
  uint64_t v90 = v88;
  v353 = v89;
  id v91 = [v89 existingNowPlayingClientForDisplayID:v88];

  if (!v91)
  {
    uint64_t v163 = v332;
    uint64_t v164 = v344;
    v342(v332, v341, v344);
    unint64_t v165 = v355;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v166 = Logger.logObject.getter();
    os_log_type_t v167 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v166, v167))
    {
      uint64_t v168 = swift_slowAlloc();
      long long aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v168 = 136315650;
      uint64_t v169 = _typeName(_:qualified:)();
      v352 = v80;
      *(void *)&long long v363 = sub_10018A9E0(v169, v170, (uint64_t *)&aBlock);
      uint64_t v351 = v78;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v168 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0(v345, v165, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v168 + 22) = 2080;
      char v80 = v352;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0((uint64_t)v350, v87, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v166, v167, "[%s] pullContentFromSession<%s> - failing because no source client found for: %s", (uint8_t *)v168, 0x20u);
      swift_arrayDestroy();
      uint64_t v61 = v358;
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v354)(v332, v344);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      ((void (*)(char *, uint64_t))v354)(v163, v164);
    }
    uint64_t v183 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v184 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v183 - 8) + 104))(v185, enum case for InternalRoutingError.unsupportedOperation(_:), v183);
    uint64_t v186 = *v61;
    uint64_t v187 = v61[1];
    swift_bridgeObjectRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(v184, v186, v187, 2);
    uint64_t v189 = v188;
    uint64_t v191 = v190;
    LOBYTE(v184) = v192;
    v347();
    swift_errorRelease();
    sub_1001859D4(v189, v191, v184);
    swift_release();

    uint64_t v193 = &v366;
    goto LABEL_82;
  }
  id v349 = v91;
  id v92 = [v91 activePlayerClient];
  if (!v92) {
    goto LABEL_42;
  }
  uint64_t v93 = v92;
  id v94 = [v92 supportedRemoteControlCommands];

  if (!v94
    || (uint64_t v95 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v94,
        unint64_t v96 = (unint64_t)sub_1001D2430(v95),
        uint64_t v61 = v358,
        swift_bridgeObjectRelease(),
        !v96))
  {
LABEL_42:
    uint64_t v154 = v334;
    uint64_t v155 = v344;
    v342(v334, v341, v344);
    unint64_t v156 = v355;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v157 = Logger.logObject.getter();
    os_log_type_t v158 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v157, v158))
    {
      uint64_t v159 = swift_slowAlloc();
      long long aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v159 = 136315650;
      uint64_t v160 = _typeName(_:qualified:)();
      v352 = v80;
      *(void *)&long long v363 = sub_10018A9E0(v160, v161, (uint64_t *)&aBlock);
      uint64_t v351 = v78;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v159 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0(v345, v156, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v159 + 22) = 2080;
      char v80 = v352;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0((uint64_t)v350, v87, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v157, v158, "[%s] pullContentFromSession<%s> - failing because no source supported commands found for: %s", (uint8_t *)v159, 0x20u);
      swift_arrayDestroy();
      uint64_t v61 = v358;
      swift_slowDealloc();
      swift_slowDealloc();

      p_long long aBlock = (uint64_t *)&aBlock;
LABEL_79:
      ((void (*)(void, uint64_t))v354)(*(p_aBlock - 32), v344);
LABEL_81:
      uint64_t v221 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v222 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v221 - 8) + 104))(v223, enum case for InternalRoutingError.unsupportedOperation(_:), v221);
      uint64_t v224 = *v61;
      uint64_t v225 = v61[1];
      swift_bridgeObjectRetain();
      MRDFastSyncGroupSessionState.rawValue.getter(v222, v224, v225, 2);
      uint64_t v227 = v226;
      uint64_t v229 = v228;
      LOBYTE(v222) = v230;
      v347();
      swift_errorRelease();
      sub_1001859D4(v227, v229, v222);
      swift_release();

      uint64_t v193 = &v365;
LABEL_82:

      return;
    }
LABEL_80:

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    ((void (*)(char *, uint64_t))v354)(v154, v155);
    goto LABEL_81;
  }
  if (v96 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v97 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v97 = *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v351 = v78;
  v352 = v80;
  if (!v97)
  {
    swift_bridgeObjectRelease_n();
LABEL_77:
    uint64_t v154 = v331;
    uint64_t v155 = v344;
    v342(v331, v341, v344);
    unint64_t v216 = v355;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v157 = Logger.logObject.getter();
    os_log_type_t v217 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v157, v217))
    {
      uint64_t v218 = swift_slowAlloc();
      long long aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v218 = 136315650;
      uint64_t v219 = _typeName(_:qualified:)();
      *(void *)&long long v363 = sub_10018A9E0(v219, v220, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v218 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0(v345, v216, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v218 + 22) = 2080;
      char v80 = v352;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0((uint64_t)v350, v87, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v157, v217, "[%s] pullContentFromSession<%s> - failing because no source supported types found for: %s", (uint8_t *)v218, 0x20u);
      swift_arrayDestroy();
      uint64_t v61 = v358;
      swift_slowDealloc();
      swift_slowDealloc();

      p_long long aBlock = &v360;
      goto LABEL_79;
    }
    goto LABEL_80;
  }
  v348 = (char *)v87;
  uint64_t v98 = 4;
  while (1)
  {
    if ((v96 & 0xC000000000000001) != 0) {
      id v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v99 = *(id *)(v96 + 8 * v98);
    }
    id v100 = v99;
    uint64_t v101 = v98 - 3;
    if (__OFADD__(v98 - 4, 1))
    {
      __break(1u);
LABEL_97:
      long long v363 = 0u;
      long long v364 = 0u;
LABEL_98:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100009A08((uint64_t)&v363, &qword_100479F50);
LABEL_126:
      uint64_t v304 = v344;
      unint64_t v305 = (void (*)(char *, uint64_t))v354;
      uint64_t v306 = v330;
      unint64_t v307 = (unint64_t)v348;
      v342(v330, v341, v344);
      unint64_t v308 = v355;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v309 = Logger.logObject.getter();
      os_log_type_t v310 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v309, v310))
      {
        uint64_t v311 = swift_slowAlloc();
        long long aBlock = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v311 = 136315650;
        uint64_t v312 = _typeName(_:qualified:)();
        *(void *)&long long v363 = sub_10018A9E0(v312, v313, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v311 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&long long v363 = sub_10018A9E0(v345, v308, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v311 + 22) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&long long v363 = sub_10018A9E0((uint64_t)v350, v307, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v309, v310, "[%s] pullContentFromSession<%s> - failing because no destination supported types found for: %s", (uint8_t *)v311, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v314 = v330;
        uint64_t v315 = v344;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v314 = v306;
        uint64_t v315 = v304;
      }
      v305(v314, v315);
LABEL_130:
      uint64_t v316 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v317 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v316 - 8) + 104))(v318, enum case for InternalRoutingError.unsupportedOperation(_:), v316);
      uint64_t v319 = *v358;
      uint64_t v320 = v358[1];
      swift_bridgeObjectRetain();
      MRDFastSyncGroupSessionState.rawValue.getter(v317, v319, v320, 2);
      uint64_t v322 = v321;
      uint64_t v324 = v323;
      unsigned __int8 v326 = v325;
      v347();
      swift_release();

      swift_errorRelease();
      sub_1001859D4(v322, v324, v326);
      uint64_t v193 = v362;
      goto LABEL_82;
    }
    if ([v99 command] == 133) {
      break;
    }

    ++v98;
    if (v101 == v97)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v61 = v358;
      char v80 = v352;
LABEL_76:
      unint64_t v87 = (unint64_t)v348;
      goto LABEL_77;
    }
  }
  swift_bridgeObjectRelease_n();
  id v194 = [v100 options];
  if (!v194)
  {
    long long v363 = 0u;
    long long v364 = 0u;
    uint64_t v61 = v358;
    char v80 = v352;
LABEL_74:

    sub_100009A08((uint64_t)&v363, &qword_100479F50);
    goto LABEL_76;
  }
  uint64_t v195 = v194;
  uint64_t v196 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v197 = kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  uint64_t v360 = kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  v339 = (char *)kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  uint64_t v198 = sub_100013A80(&qword_100479570);
  unint64_t v338 = sub_1001E70CC();
  AnyHashable.init<A>(_:)();
  uint64_t v61 = v358;
  char v80 = v352;
  if (*(void *)(v196 + 16) && (unint64_t v199 = sub_10018C3C4((uint64_t)&aBlock), (v200 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v196 + 56) + 32 * v199, (uint64_t)&v363);
  }
  else
  {
    long long v363 = 0u;
    long long v364 = 0u;
  }
  sub_10018FFC8((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v364 + 1)) {
    goto LABEL_74;
  }
  uint64_t v201 = sub_100013A80(&qword_10047A080);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_76;
  }
  v333 = (char *)v201;
  v334 = (char *)v198;
  v337 = aBlock;
  sub_10018FE08(0, &qword_10047AC18);
  uint64_t v202 = (uint64_t)v350;
  if (sub_10030B17C((uint64_t)v350, (uint64_t)v348))
  {
    uint64_t v203 = sub_10030B054();
    swift_beginAccess();
    uint64_t v202 = *v203;
  }
  swift_bridgeObjectRetain();
  if (sub_10030B194((uint64_t)v350, (uint64_t)v348))
  {
    swift_bridgeObjectRelease();
    id v204 = sub_10030B130();
    swift_beginAccess();
    uint64_t v202 = *v204;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  id v205 = [v81 server];
  id v206 = [v205 nowPlayingServer];

  id v207 = (char *)[v206 localOriginClient];
  v332 = (char *)v202;
  NSString v208 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v335 = v207;
  id v209 = [v207 defaultSupportedCommandsForClient:v208];

  uint64_t v210 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v211 = (unint64_t)sub_1001D2430(v210);
  swift_bridgeObjectRelease();
  id v336 = v100;
  if (!v211)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v231 = v329;
    v342(v329, v341, v344);
    unint64_t v232 = v355;
    swift_bridgeObjectRetain();
    unint64_t v233 = (unint64_t)v348;
    swift_bridgeObjectRetain();
    os_log_type_t v234 = Logger.logObject.getter();
    os_log_type_t v235 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v234, v235))
    {
      uint64_t v236 = swift_slowAlloc();
      long long aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v236 = 136315650;
      uint64_t v237 = _typeName(_:qualified:)();
      *(void *)&long long v363 = sub_10018A9E0(v237, v238, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v236 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0(v345, v232, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v236 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0((uint64_t)v350, v233, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v234, v235, "[%s] pullContentFromSession<%s> - failing because no destination supported commands found for: %s", (uint8_t *)v236, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    ((void (*)(char *, uint64_t))v354)(v231, v344);
    goto LABEL_130;
  }
  if (v211 >> 62)
  {
LABEL_124:
    swift_bridgeObjectRetain();
    uint64_t v212 = _CocoaArrayWrapper.endIndex.getter();
    if (v212) {
      goto LABEL_65;
    }
    goto LABEL_125;
  }
  uint64_t v212 = *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v212)
  {
LABEL_125:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_126;
  }
LABEL_65:
  uint64_t v213 = 4;
  while (1)
  {
    if ((v211 & 0xC000000000000001) != 0) {
      id v214 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v214 = *(id *)(v211 + 8 * v213);
    }
    uint64_t v81 = v214;
    uint64_t v215 = v213 - 3;
    if (__OFADD__(v213 - 4, 1))
    {
      __break(1u);
      goto LABEL_124;
    }
    if ([v214 command] == 133) {
      break;
    }

    ++v213;
    if (v215 == v212) {
      goto LABEL_125;
    }
  }
  swift_bridgeObjectRelease_n();
  id v239 = [v81 options];
  if (!v239) {
    goto LABEL_97;
  }
  unint64_t v240 = v239;
  uint64_t v241 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  v362[5] = v197;
  uint64_t v242 = v339;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v241 + 16) && (unint64_t v243 = sub_10018C3C4((uint64_t)&aBlock), (v244 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v241 + 56) + 32 * v243, (uint64_t)&v363);
  }
  else
  {
    long long v363 = 0u;
    long long v364 = 0u;
  }
  sub_10018FFC8((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v364 + 1)) {
    goto LABEL_98;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_126;
  }
  swift_bridgeObjectRelease();
  v350 = aBlock;
  uint64_t v245 = *((void *)v337 + 2);
  if (v245)
  {
    uint64_t v246 = 0;
    v348 = v337 + 32;
    uint64_t v247 = *((void *)v350 + 2);
    v339 = v350 + 56;
    while (1)
    {
      if (v247)
      {
        uint64_t v248 = &v348[16 * v246];
        uint64_t v250 = *(void *)v248;
        uint64_t v249 = *((void *)v248 + 1);
        BOOL v251 = *((void *)v350 + 4) == *(void *)v248 && *((void *)v350 + 5) == v249;
        if (v251 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_117:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v256 = [objc_allocWithZone((Class)MRPlaybackSessionRequest) init];
          uint64_t v257 = v345;
          unint64_t v258 = v355;
          NSString v259 = String._bridgeToObjectiveC()();
          [v256 setRequestIdentifier:v259];

          NSString v260 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v358 = (uint64_t *)v256;
          [v256 setType:v260];

          id v261 = [objc_allocWithZone((Class)MRPlaybackSessionMigrateRequest) init];
          NSString v262 = String._bridgeToObjectiveC()();
          [v261 setRequestID:v262];

          [v261 setPlaybackSessionRequest:v256];
          [v261 setEndpointOptions:0];
          objc_msgSend(v261, "setPlayerOptions:", (unint64_t)objc_msgSend(v261, "playerOptions") | 8);
          id v263 = [v349 activePlayerPath];
          id v264 = [self localOrigin];
          id v265 = objc_allocWithZone((Class)MRPlayerPath);
          NSString v266 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v357 = [v265 initWithOrigin:v264 bundleIdentifier:v266 player:0];

          uint64_t v267 = v340;
          uint64_t v268 = (void *)(*(uint64_t (**)(void))(*(void *)v340 + 280))();
          uint64_t v269 = (void *)swift_allocObject();
          v269[2] = v257;
          v269[3] = v258;
          uint64_t v270 = v347;
          v269[4] = v261;
          v269[5] = v270;
          v269[6] = v346;
          v269[7] = v263;
          uint64_t v271 = v359;
          v269[8] = v268;
          v269[9] = v271;
          uint64_t v272 = v356;
          v269[10] = v267;
          v269[11] = v272;
          v362[3] = sub_1002F5584;
          v362[4] = v269;
          long long aBlock = (char *)_NSConcreteStackBlock;
          v362[0] = 1107296256;
          v362[1] = sub_1001872F8;
          v362[2] = &unk_100428900;
          uint64_t v273 = _Block_copy(&aBlock);
          id v274 = v261;
          id v275 = v263;
          id v276 = v268;
          swift_retain();
          id v277 = v274;
          id v278 = v275;
          id v279 = v276;
          uint64_t v280 = v357;
          swift_retain();
          swift_retain();
          swift_release();
          MRMediaRemotePlaybackSessionMigrateForPlayer();
          swift_release();

          _Block_release(v273);
          return;
        }
        if (v247 != 1) {
          break;
        }
      }
LABEL_99:
      if (++v246 == v245) {
        goto LABEL_118;
      }
    }
    uint64_t v252 = v339;
    uint64_t v253 = 1;
    while (1)
    {
      uint64_t v254 = v253 + 1;
      if (__OFADD__(v253, 1)) {
        break;
      }
      BOOL v255 = *(v252 - 1) == v250 && *v252 == v249;
      if (v255 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_117;
      }
      v252 += 2;
      ++v253;
      if (v254 == v247) {
        goto LABEL_99;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_118:
    swift_bridgeObjectRelease();
    v342(v328, v341, v344);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v281 = Logger.logObject.getter();
    os_log_type_t v282 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v281, v282))
    {
      uint64_t v283 = swift_slowAlloc();
      long long aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v283 = 136315906;
      uint64_t v284 = _typeName(_:qualified:)();
      *(void *)&long long v363 = sub_10018A9E0(v284, v285, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v283 + 12) = 2080;
      unint64_t v286 = v355;
      swift_bridgeObjectRetain();
      *(void *)&long long v363 = sub_10018A9E0(v345, v286, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v283 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v287 = Array.description.getter();
      unint64_t v289 = v288;
      swift_bridgeObjectRelease();
      *(void *)&long long v363 = sub_10018A9E0(v287, v289, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v283 + 32) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v290 = Array.description.getter();
      unint64_t v292 = v291;
      swift_bridgeObjectRelease();
      *(void *)&long long v363 = sub_10018A9E0(v290, v292, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v281, v282, "[%s] pullContentFromSession<%s> - failing because no matching supported types found between source: %s, dest: %s", (uint8_t *)v283, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    ((void (*)(char *, uint64_t))v354)(v328, v344);
    uint64_t v293 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v294 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v293 - 8) + 104))(v295, enum case for InternalRoutingError.unsupportedOperation(_:), v293);
    uint64_t v296 = *v358;
    uint64_t v297 = v358[1];
    swift_bridgeObjectRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(v294, v296, v297, 2);
    uint64_t v299 = v298;
    uint64_t v301 = v300;
    unsigned __int8 v303 = v302;
    v347();
    swift_release();

    swift_errorRelease();
    sub_1001859D4(v299, v301, v303);
  }
}

uint64_t sub_1002DD7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void), uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, NSObject *a15, uint64_t a16)
{
  uint64_t v152 = a7;
  char v153 = a5;
  uint64_t v154 = a6;
  uint64_t v146 = a16;
  uint64_t v147 = a8;
  uint64_t v140 = a14;
  uint64_t v141 = a15;
  uint64_t v139 = a13;
  unint64_t v148 = a11;
  uint64_t v143 = a10;
  unint64_t v149 = a9;
  uint64_t v150 = a12;
  uint64_t v144 = type metadata accessor for RoutingInteraction();
  uint64_t v142 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v145 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v151 = *(uint64_t (**)(uint64_t))(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v131 - v25;
  uint64_t v27 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v36 = (uint64_t *)((char *)&v131 - v35);
  uint64_t v37 = __chkstk_darwin(v34);
  if (a1)
  {
    sub_1001BB2C8(a1, a2, a3, a4);
    swift_errorRetain();
    sub_100185894(a2, a3, a4);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v153)(a1, a2, a3, a4);
    sub_1001BB320(a1, a2, a3, a4);
    swift_errorRelease();
    return sub_1001859D4(a2, a3, a4);
  }
  uint64_t v135 = v29;
  uint64_t v138 = v41;
  uint64_t v131 = v40;
  uint64_t v137 = v37;
  unint64_t v43 = v149;
  uint64_t v132 = v39;
  uint64_t v134 = v26;
  unint64_t v133 = v24;
  os_log_type_t v136 = (uint64_t *)((char *)&v131 - v38);
  uint64_t v44 = v21;
  uint64_t v45 = (*(uint64_t (**)(void))(*(void *)v152 + 328))();
  uint64_t v46 = *(void *)(v45 + 16);
  if (v46)
  {
    uint64_t v47 = v45 + ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80));
    uint64_t v48 = *(void *)(v138 + 72);
    uint64_t v49 = v150;
    unint64_t v50 = v43;
    uint64_t v51 = v147;
    while (1)
    {
      sub_1002F2874(v47, (uint64_t)v36, type metadata accessor for HostedRoutingSourceSession);
      BOOL v52 = *v36 == v51 && v36[1] == v50;
      if (v52 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      sub_1002F5F00((uint64_t)v36, type metadata accessor for HostedRoutingSourceSession);
      v47 += v48;
      if (!--v46)
      {
        uint64_t v53 = 1;
        goto LABEL_16;
      }
    }
    uint64_t v54 = (uint64_t)v135;
    sub_1002F39C4((uint64_t)v36, (uint64_t)v135, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v53 = 0;
  }
  else
  {
    uint64_t v53 = 1;
    uint64_t v49 = v150;
    unint64_t v50 = v43;
LABEL_16:
    uint64_t v54 = (uint64_t)v135;
  }
  uint64_t v55 = v138;
  uint64_t v56 = v137;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v138 + 56))(v54, v53, 1, v137);
  swift_bridgeObjectRelease();
  int v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v54, 1, v56);
  uint64_t v58 = v21;
  uint64_t v59 = v136;
  if (v57 != 1)
  {
    sub_1002F39C4(v54, (uint64_t)v136, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v81 = v59[3];
    id v82 = v151;
    unint64_t v83 = v148;
    if (v81)
    {
      uint64_t v84 = v59[2];
      uint64_t v85 = (uint64_t *)(v152 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
      swift_beginAccess();
      uint64_t v86 = *v85;
      if (*(void *)(v86 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v87 = sub_100013660(v84, v81);
        if (v88)
        {
          uint64_t v89 = *(void *)(*(void *)(v86 + 56) + 8 * v87);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(unsigned char *)(v89 + 16) == 2)
          {
            uint64_t v151 = type metadata accessor for HostedRoutingSourceSession;
            uint64_t v90 = v131;
            sub_1002F2874((uint64_t)v59, v131, type metadata accessor for HostedRoutingSourceSession);
            unint64_t v91 = (*(unsigned __int8 *)(v138 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
            unint64_t v92 = (v31 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v93 = (v92 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v94 = (v93 + 23) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v95 = swift_allocObject();
            sub_1002F39C4(v90, v95 + v91, v151);
            *(void *)(v95 + v92) = v152;
            unint64_t v96 = (void *)(v95 + v93);
            *unint64_t v96 = v143;
            v96[1] = v83;
            uint64_t v97 = (void (**)(void))(v95 + v94);
            uint64_t v98 = v154;
            *uint64_t v97 = v153;
            v97[1] = v98;
            *(void *)(v95 + ((v94 + 23) & 0xFFFFFFFFFFFFFFF8)) = v146;
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            sub_1002DEC60(v139, v140, v59, v141, v150, v95);
            swift_release();
            swift_release();
            return sub_1002F5F00((uint64_t)v59, type metadata accessor for HostedRoutingSourceSession);
          }
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
    }
    uint64_t v109 = sub_1001A69C4();
    uint64_t v110 = v133;
    (*((void (**)(char *, uint64_t, uint64_t))v82 + 2))(v133, v109, v58);
    uint64_t v111 = v132;
    sub_1002F2874((uint64_t)v59, v132, type metadata accessor for HostedRoutingSourceSession);
    swift_bridgeObjectRetain_n();
    unint64_t v112 = Logger.logObject.getter();
    os_log_type_t v113 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v112, v113))
    {
      uint64_t v114 = swift_slowAlloc();
      uint64_t v150 = swift_slowAlloc();
      v157[0] = v150;
      *(_DWORD *)uint64_t v114 = 136315650;
      uint64_t v115 = _typeName(_:qualified:)();
      uint64_t v156 = sub_10018A9E0(v115, v116, v157);
      uint64_t v152 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v114 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v156 = sub_10018A9E0(v143, v83, v157);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v114 + 22) = 2080;
      sub_1002F14AC(&qword_100479590, (void (*)(uint64_t))type metadata accessor for HostedRoutingSourceSession);
      uint64_t v117 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v156 = sub_10018A9E0(v117, v118, v157);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002F5F00(v111, type metadata accessor for HostedRoutingSourceSession);
      _os_log_impl((void *)&_mh_execute_header, v112, v113, "[%s] handleHandoffFromApplication<%s> - destination session: %s is not backed by connected endpoint -> failing", (uint8_t *)v114, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*((void (**)(char *, uint64_t))v82 + 1))(v133, v152);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1002F5F00(v111, type metadata accessor for HostedRoutingSourceSession);

      (*((void (**)(char *, uint64_t))v82 + 1))(v110, v58);
    }
    uint64_t v119 = v153;
    uint64_t v120 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v121 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v120 - 8) + 104))(v122, enum case for InternalRoutingError.sessionNotFound(_:), v120);
    uint64_t v123 = *v59;
    uint64_t v124 = v59[1];
    swift_bridgeObjectRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(v121, v123, v124, 2);
    uint64_t v126 = v125;
    uint64_t v128 = v127;
    unsigned __int8 v130 = v129;
    v119();
    swift_errorRelease();
    sub_1001859D4(v126, v128, v130);
    return sub_1002F5F00((uint64_t)v59, type metadata accessor for HostedRoutingSourceSession);
  }
  sub_100009A08(v54, &qword_100479588);
  uint64_t v60 = sub_1001A69C4();
  uint64_t v61 = v151;
  os_log_type_t v62 = v134;
  (*((void (**)(char *, uint64_t, uint64_t))v151 + 2))(v134, v60, v44);
  unint64_t v63 = v50;
  uint64_t v64 = v142;
  int v65 = v145;
  uint64_t v66 = v49;
  uint64_t v67 = v144;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v145, v66, v144);
  unint64_t v68 = v148;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v69 = Logger.logObject.getter();
  os_log_type_t v70 = static os_log_type_t.error.getter();
  int v71 = v70;
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v72 = swift_slowAlloc();
    LODWORD(v150) = v71;
    uint64_t v73 = v72;
    uint64_t v74 = swift_slowAlloc();
    uint64_t v152 = v58;
    v155[0] = v74;
    *(_DWORD *)uint64_t v73 = 136315906;
    uint64_t v75 = _typeName(_:qualified:)();
    v157[0] = sub_10018A9E0(v75, v76, v155);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 12) = 2080;
    swift_bridgeObjectRetain();
    v157[0] = sub_10018A9E0(v143, v68, v155);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v73 + 22) = 2080;
    swift_bridgeObjectRetain();
    v157[0] = sub_10018A9E0(v147, v63, v155);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v73 + 32) = 2080;
    sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    uint64_t v77 = v144;
    uint64_t v78 = v145;
    uint64_t v79 = dispatch thunk of CustomStringConvertible.description.getter();
    v157[0] = sub_10018A9E0(v79, v80, v155);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v78, v77);
    _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v150, "[%s] handleHandoffFromApplication<%s> - no session found for prewarmed identifier: %s to continue interaction: %s -> failing", (uint8_t *)v73, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(char *, uint64_t))v151 + 1))(v134, v152);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v67);

    (*((void (**)(char *, uint64_t))v61 + 1))(v62, v58);
  }
  id v99 = v153;
  uint64_t v100 = type metadata accessor for InternalRoutingError();
  sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
  uint64_t v101 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v100 - 8) + 104))(v102, enum case for InternalRoutingError.sessionNotFound(_:), v100);
  MRDFastSyncGroupSessionState.rawValue.getter(v101, 1, 0, 4);
  uint64_t v104 = v103;
  uint64_t v106 = v105;
  unsigned __int8 v108 = v107;
  v99();
  swift_errorRelease();
  return sub_1001859D4(v104, v106, v108);
}

uint64_t sub_1002DE690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10)
{
  uint64_t v64 = a7;
  unint64_t v65 = a8;
  os_log_t v67 = a5;
  uint64_t v68 = a6;
  uint64_t v69 = a3;
  uint64_t v13 = a9;
  uint64_t v14 = type metadata accessor for HostedRoutingSourceSession(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v66 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Preferences();
  char active = static Preferences.deferHandoffActiveSessionChange.getter();
  uint64_t v21 = v69;
  if ((active & 1) == 0) {
    return v13(a1, a2, v21, a4);
  }
  v58[1] = v14;
  uint64_t v59 = a2;
  uint64_t v60 = a1;
  uint64_t v61 = a9;
  uint64_t v62 = a10;
  unsigned int v63 = a4;
  uint64_t v22 = v66;
  Class isa = v67[3].isa;
  uint64_t v24 = v17;
  uint64_t v25 = v68;
  os_log_t v26 = v67;
  if (!isa
    || (Class v27 = v67[2].isa,
        uint64_t v28 = (uint64_t *)(v68 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints),
        swift_beginAccess(),
        uint64_t v29 = *v28,
        !*(void *)(v29 + 16)))
  {
LABEL_10:
    uint64_t v37 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v19, v37, v24);
    sub_1002F2874((uint64_t)v26, (uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
    unint64_t v38 = v65;
    swift_bridgeObjectRetain_n();
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    int v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      os_log_t v67 = v39;
      LODWORD(v68) = v41;
      uint64_t v42 = swift_slowAlloc();
      v71[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315650;
      uint64_t v43 = _typeName(_:qualified:)();
      uint64_t v70 = sub_10018A9E0(v43, v44, v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_10018A9E0(v64, v38, v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v42 + 22) = 2080;
      sub_1002F14AC(&qword_100479590, (void (*)(uint64_t))type metadata accessor for HostedRoutingSourceSession);
      uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v70 = sub_10018A9E0(v45, v46, v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002F5F00((uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
      os_log_t v47 = v67;
      _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v68, "[%s] handleHandoffFromApplication<%s> - entry lost for destination session: %s, will not perform deferred update of active session elements", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1002F5F00((uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v24);
    a4 = v63;
    uint64_t v21 = v69;
    uint64_t v13 = v61;
    a2 = v59;
    a1 = v60;
    return v13(a1, a2, v21, a4);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v30 = sub_100013660((uint64_t)v27, (uint64_t)isa);
  if ((v31 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v32 = *(void *)(*(void *)(v29 + 56) + 8 * v30);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v32 + 16) != 2)
  {
    swift_release();
    goto LABEL_10;
  }
  uint64_t v34 = *(void *)(v32 + 32);
  uint64_t v33 = *(void *)(v32 + 40);
  if (*(unsigned char *)(v32 + 80))
  {
    uint64_t v35 = *(void **)(v32 + 64);
    swift_bridgeObjectRetain();
    id v36 = [v35 resolvedOutputDevices];
  }
  else
  {
    uint64_t v49 = *(void **)(v32 + 72);
    swift_bridgeObjectRetain();
    id v36 = [v49 outputDevices];
  }
  id v50 = v36;
  uint64_t v51 = v69;
  if (v50)
  {
    sub_10018FE08(0, (unint64_t *)&qword_100478370);
    BOOL v52 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    BOOL v52 = _swiftEmptyArrayStorage;
  }
  uint64_t v53 = sub_1002BDAD8((unint64_t)v52);
  swift_bridgeObjectRelease();
  uint64_t v54 = (void *)(v25 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v55 = *(void *)(v25 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v56 = *(void *)(v25 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 8);
  int v57 = *(void **)(v25 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16);
  void *v54 = v34;
  v54[1] = v33;
  void v54[2] = v53;
  sub_1002F2830(v55, v56, (uint64_t)v57);
  sub_1002F16C8(v55, v56, (uint64_t)v57);
  sub_1002BF4F0(v55, v56, v57);
  sub_1002F16C8(v55, v56, (uint64_t)v57);
  swift_release();
  return v61(v60, v59, v51, v63);
}

void sub_1002DEC60(uint64_t a1, uint64_t a2, uint64_t *a3, NSObject *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v431 = a6;
  v444 = a4;
  uint64_t v440 = a2;
  uint64_t v446 = a1;
  uint64_t v442 = *v6;
  v435 = (void *)type metadata accessor for Features.MediaRemote();
  v434 = (void (**)(void, void, void))*(v435 - 1);
  __chkstk_darwin(v435);
  v433 = (char *)&v406 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RoutingInteraction();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  v412 = (char *)&v406 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v411 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v406 - v14;
  uint64_t v16 = (void *)type metadata accessor for Logger();
  uint64_t v17 = (void *)*(v16 - 1);
  uint64_t v18 = __chkstk_darwin(v16);
  v423 = (os_log_t *)((char *)&v406 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v18);
  v426 = (char *)&v406 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v421 = (char *)&v406 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v419 = (char *)&v406 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v420 = (char *)&v406 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v418 = (char *)&v406 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v417 = (char *)&v406 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v416 = (char *)&v406 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v415 = (char *)&v406 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  v414 = (char *)&v406 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  v413 = (char *)&v406 - v39;
  __chkstk_darwin(v38);
  int v41 = (void (*)(id, id))((char *)&v406 - v40);
  uint64_t v42 = a5;
  uint64_t v43 = RoutingInteraction.identifier.getter();
  unint64_t v45 = v44;
  uint64_t v425 = *a3;
  v445 = a3;
  unint64_t v46 = a3[1];
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_1001A69C4();
  uint64_t v48 = (void (*)(char *, uint64_t, id))v17[2];
  uint64_t v428 = v47;
  id v441 = v16;
  uint64_t v49 = v15;
  uint64_t v50 = v42;
  v430 = v17 + 2;
  v429 = v48;
  ((void (*)(void (*)(id, id)))v48)(v41);
  uint64_t v436 = v11;
  uint64_t v51 = v11;
  BOOL v52 = v444;
  uint64_t v53 = *(void (**)(char *, uint64_t, void *))(v51 + 16);
  v437 = (void *)v10;
  uint64_t v54 = v10;
  uint64_t v55 = v440;
  uint64_t v410 = v51 + 16;
  v409 = v53;
  v53(v49, v42, (void *)v54);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v432 = v41;
  uint64_t v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.default.getter();
  int v58 = v57;
  BOOL v59 = os_log_type_enabled(v56, v57);
  v443 = v17;
  unint64_t v439 = v45;
  uint64_t v424 = v43;
  uint64_t v422 = v50;
  uint64_t v438 = v46;
  if (v59)
  {
    uint64_t v60 = swift_slowAlloc();
    int v407 = v58;
    uint64_t v61 = v60;
    uint64_t v408 = swift_slowAlloc();
    aBlock[0] = v408;
    *(_DWORD *)uint64_t v61 = 136316418;
    uint64_t v62 = _typeName(_:qualified:)();
    *(void *)&long long v449 = sub_10018A9E0(v62, v63, aBlock);
    os_log_t v406 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v61 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v449 = sub_10018A9E0(v43, v45, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v61 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v449 = sub_10018A9E0(v446, v55, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v61 + 32) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v449 = sub_10018A9E0(v425, v46, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v61 + 42) = 2080;
    *(void *)&long long v449 = v52;
    type metadata accessor for RoutingInteraction.Action.HandoffContext();
    sub_1002F14AC(&qword_10047CEB0, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action.HandoffContext);
    uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v449 = sub_10018A9E0(v64, v65, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v61 + 52) = 2080;
    sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    uint64_t v66 = v437;
    uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v449 = sub_10018A9E0(v67, v68, aBlock);
    uint64_t v69 = v446;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void *))(v436 + 8))(v49, v66);
    os_log_t v70 = v406;
    _os_log_impl((void *)&_mh_execute_header, v406, (os_log_type_t)v407, "[%s] handoffFromApplication<%s> - bundle: %s to session: %s, context: %s, for: %s", (uint8_t *)v61, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    int v71 = v443;
    swift_slowDealloc();

    uint64_t v72 = (void (*)(id, id))v71[1];
    id v73 = v441;
    v72(v432, v441);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, void *))(v436 + 8))(v49, v437);

    uint64_t v72 = (void (*)(id, id))v17[1];
    id v73 = v441;
    v72(v432, v441);
    uint64_t v69 = v446;
  }
  uint64_t v74 = v434;
  uint64_t v75 = v433;
  unint64_t v76 = v435;
  ((void (**)(char *, void, void *))v434)[13](v433, enum case for Features.MediaRemote.cayenneNewMusicHandoff(_:), v435);
  char v77 = Features.MediaRemote.isEnabled.getter();
  ((void (*)(char *, void *))v74[1])(v75, v76);
  if (v77)
  {
    sub_10018FE08(0, &qword_10047AC18);
    if (sub_10030B17C(v69, v55))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1002EC42C(v69, v55, v445, v444, v422, v431);
      return;
    }
  }
  uint64_t v78 = v445;
  uint64_t v79 = v445[3];
  if (!v79)
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v108 = v423;
    v429((char *)v423, v428, v73);
    unint64_t v109 = v439;
    swift_bridgeObjectRetain();
    uint64_t v110 = Logger.logObject.getter();
    uint64_t v111 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v110, (os_log_type_t)v111))
    {
      uint64_t v112 = swift_slowAlloc();
      uint64_t v113 = swift_slowAlloc();
      v432 = v72;
      aBlock[0] = v113;
      *(_DWORD *)uint64_t v112 = 136315394;
      uint64_t v114 = _typeName(_:qualified:)();
      *(void *)&long long v449 = sub_10018A9E0(v114, v115, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v112 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v449 = sub_10018A9E0(v424, v109, aBlock);
      uint64_t v78 = v445;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v110, (os_log_type_t)v111, "[%s] handoffFromApplication<%s> - failing because sessions are not both endpoint sourced", (uint8_t *)v112, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v432(v108, v73);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v72(v108, v73);
    }
    uint64_t v116 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v117 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v116 - 8) + 104))(v118, enum case for InternalRoutingError.sessionNotFound(_:), v116);
    uint64_t v119 = *v78;
    uint64_t v120 = v78[1];
    swift_bridgeObjectRetain();
    uint64_t v121 = MRDFastSyncGroupSessionState.rawValue.getter(v117, v119, v120, 2);
    uint64_t v125 = v122;
    uint64_t v126 = v123;
    unsigned __int8 v127 = v124;
    goto LABEL_37;
  }
  uint64_t v80 = v445[2];
  uint64_t v81 = (uint64_t *)(v427 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess();
  uint64_t v82 = *v81;
  if (!*(void *)(*v81 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t v128 = v426;
    v429(v426, v428, v73);
    unint64_t v129 = v439;
    swift_bridgeObjectRetain();
    unsigned __int8 v130 = Logger.logObject.getter();
    os_log_type_t v131 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v130, v131))
    {
      uint64_t v132 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v132 = 136315394;
      uint64_t v133 = _typeName(_:qualified:)();
      *(void *)&long long v449 = sub_10018A9E0(v133, v134, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v132 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v449 = sub_10018A9E0(v424, v129, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v130, v131, "[%s] handoffFromApplication<%s> - failing because no connected entry for endpoint sourced sessions", (uint8_t *)v132, 0x16u);
      swift_arrayDestroy();
      uint64_t v78 = v445;
      swift_slowDealloc();
      swift_slowDealloc();

      v72(v426, v73);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v72(v128, v73);
    }
    uint64_t v135 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v136 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v135 - 8) + 104))(v137, enum case for InternalRoutingError.sessionNotFound(_:), v135);
    uint64_t v138 = *v78;
    uint64_t v139 = v78[1];
    swift_bridgeObjectRetain();
    uint64_t v121 = MRDFastSyncGroupSessionState.rawValue.getter(v136, v138, v139, 2);
    uint64_t v125 = v122;
    uint64_t v126 = v123;
    unsigned __int8 v127 = v124;
LABEL_37:
    sub_1002F6340(v121, v122, v123, v124);
LABEL_38:
    swift_errorRelease();
    uint64_t v140 = v125;
    uint64_t v141 = v126;
    unsigned __int8 v142 = v127;
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v83 = sub_100013660(v80, v79);
  if ((v84 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  v432 = v72;
  uint64_t v85 = *(id **)(*(void *)(v82 + 56) + 8 * v83);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((unsigned char *)v85 + 16) != 2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v72 = v432;
    goto LABEL_33;
  }
  uint64_t v86 = [v85[8] origin];
  if (!v86)
  {
    swift_bridgeObjectRelease();
    uint64_t v143 = v421;
    v429(v421, v428, v73);
    swift_retain_n();
    unint64_t v144 = v439;
    swift_bridgeObjectRetain();
    uint64_t v145 = Logger.logObject.getter();
    os_log_type_t v146 = static os_log_type_t.error.getter();
    int v147 = v146;
    if (os_log_type_enabled(v145, v146))
    {
      uint64_t v148 = swift_slowAlloc();
      uint64_t v446 = swift_slowAlloc();
      aBlock[0] = v446;
      *(_DWORD *)uint64_t v148 = 136315650;
      LODWORD(v444) = v147;
      uint64_t v149 = _typeName(_:qualified:)();
      *(void *)&long long v449 = sub_10018A9E0(v149, v150, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v148 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v449 = sub_10018A9E0(v424, v144, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v148 + 22) = 2080;
      swift_retain();
      uint64_t v151 = sub_1002BDC70();
      unint64_t v153 = v152;
      swift_release();
      *(void *)&long long v449 = sub_10018A9E0(v151, v153, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      uint64_t v154 = v445;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v145, (os_log_type_t)v444, "[%s] handoffFromApplication<%s> - failing because no destination origin for entry: %s", (uint8_t *)v148, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v432(v143, v73);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      v432(v143, v73);
      uint64_t v154 = v445;
    }
    uint64_t v171 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v172 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v171 - 8) + 104))(v173, enum case for InternalRoutingError.sessionNotFound(_:), v171);
    uint64_t v174 = *v154;
    uint64_t v175 = v154[1];
    swift_bridgeObjectRetain();
    uint64_t v176 = MRDFastSyncGroupSessionState.rawValue.getter(v172, v174, v175, 2);
    uint64_t v178 = v177;
    uint64_t v180 = v179;
    LOBYTE(v172) = v181;
    sub_1002F6340(v176, v177, v179, v181);
    swift_errorRelease();
    sub_1001859D4(v178, v180, v172);
    swift_release();
    return;
  }
  v435 = v86;
  unint64_t v87 = self;
  char v88 = &selRef_removePendingPlaybackSessionMigrateEvent_;
  id v89 = [v87 server];
  id v90 = [v89 nowPlayingServer];

  id v91 = [v90 localOriginClient];
  NSString v92 = String._bridgeToObjectiveC()();
  id v93 = [v91 existingNowPlayingClientForDisplayID:v92];

  if (!v93)
  {
    swift_bridgeObjectRelease();
    uint64_t v163 = v419;
    id v164 = v441;
    v429(v419, v428, v441);
    swift_bridgeObjectRetain_n();
    unint64_t v165 = v439;
    swift_bridgeObjectRetain();
    uint64_t v166 = Logger.logObject.getter();
    os_log_type_t v167 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v166, v167))
    {
      uint64_t v168 = swift_slowAlloc();
      v444 = swift_slowAlloc();
      aBlock[0] = (uint64_t)v444;
      *(_DWORD *)uint64_t v168 = 136315650;
      uint64_t v169 = _typeName(_:qualified:)();
      *(void *)&long long v449 = sub_10018A9E0(v169, v170, aBlock);
      v433 = (char *)v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v168 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v449 = sub_10018A9E0(v424, v165, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v168 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v449 = sub_10018A9E0(v446, v55, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v166, v167, "[%s] handoffFromApplication<%s> - failing because no source client found for: %s", (uint8_t *)v168, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v432(v163, v164);
    uint64_t v195 = v445;
    uint64_t v196 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v197 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v196 - 8) + 104))(v198, enum case for InternalRoutingError.noActivePlayer(_:), v196);
    uint64_t v199 = *v195;
    uint64_t v200 = v195[1];
    swift_bridgeObjectRetain();
    uint64_t v201 = MRDFastSyncGroupSessionState.rawValue.getter(v197, v199, v200, 2);
    uint64_t v203 = v202;
    uint64_t v205 = v204;
    unsigned __int8 v207 = v206;
    sub_1002F6340(v201, v202, v204, v206);
    swift_errorRelease();
    sub_1001859D4(v203, v205, v207);
    swift_release();
    NSString v208 = &v452;
    goto LABEL_142;
  }
  id v94 = [v93 activePlayerClient];
  v434 = (void (**)(void, void, void))v93;
  if (!v94
    || (uint64_t v95 = v94,
        id v96 = [v94 supportedRemoteControlCommands],
        v95,
        !v96)
    || (uint64_t v97 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v96,
        unint64_t v98 = (unint64_t)sub_1001D2430(v97),
        swift_bridgeObjectRelease(),
        !v98))
  {
    swift_bridgeObjectRelease();
    uint64_t v155 = v420;
    id v156 = v441;
    v429(v420, v428, v441);
    swift_bridgeObjectRetain_n();
    unint64_t v157 = v439;
    swift_bridgeObjectRetain();
    os_log_type_t v158 = Logger.logObject.getter();
    os_log_type_t v159 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v158, v159))
    {
      uint64_t v160 = swift_slowAlloc();
      v444 = swift_slowAlloc();
      aBlock[0] = (uint64_t)v444;
      *(_DWORD *)uint64_t v160 = 136315650;
      uint64_t v161 = _typeName(_:qualified:)();
      *(void *)&long long v449 = sub_10018A9E0(v161, v162, aBlock);
      v433 = (char *)v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v160 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v449 = sub_10018A9E0(v424, v157, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v160 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v449 = sub_10018A9E0(v446, v55, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v158, v159, "[%s] handoffFromApplication<%s> - failing because no source supported commands found for: %s", (uint8_t *)v160, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v432(v155, v156);
    unsigned __int8 v182 = v445;
    uint64_t v183 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v184 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v183 - 8) + 104))(v185, enum case for InternalRoutingError.unsupportedOperation(_:), v183);
    uint64_t v186 = *v182;
    uint64_t v187 = v182[1];
    swift_bridgeObjectRetain();
    uint64_t v188 = MRDFastSyncGroupSessionState.rawValue.getter(v184, v186, v187, 2);
    uint64_t v190 = v189;
    uint64_t v192 = v191;
    unsigned __int8 v194 = v193;
    sub_1002F6340(v188, v189, v191, v193);
    swift_errorRelease();
    sub_1001859D4(v190, v192, v194);
LABEL_141:
    swift_release();

    NSString v208 = &v451;
LABEL_142:

    return;
  }
  v433 = (char *)v85;
  if (v98 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v99 = _CocoaArrayWrapper.endIndex.getter();
    if (v99) {
      goto LABEL_18;
    }
    goto LABEL_136;
  }
  uint64_t v99 = *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v99)
  {
LABEL_136:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    unint64_t v105 = v439;
    unsigned __int8 v107 = (void (*)(char *, id))v432;
    uint64_t v104 = v445;
    uint64_t v229 = v429;
    uint64_t v230 = v428;
    unint64_t v106 = v55;
LABEL_137:
    v337 = v418;
    id v338 = v441;
    v229(v418, v230, v441);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v339 = Logger.logObject.getter();
    os_log_type_t v340 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v339, v340))
    {
      uint64_t v341 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v341 = 136315650;
      uint64_t v342 = _typeName(_:qualified:)();
      *(void *)&long long v449 = sub_10018A9E0(v342, v343, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v341 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v449 = sub_10018A9E0(v424, v105, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v341 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v449 = sub_10018A9E0(v446, v106, aBlock);
      uint64_t v104 = v445;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v339, v340, "[%s] handoffFromApplication<%s> - failing because no source supported types found for: %s", (uint8_t *)v341, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v107(v418, v441);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v107(v337, v338);
    }
    uint64_t v344 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v345 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v344 - 8) + 104))(v346, enum case for InternalRoutingError.unsupportedOperation(_:), v344);
    uint64_t v347 = *v104;
    uint64_t v348 = v104[1];
    swift_bridgeObjectRetain();
    uint64_t v349 = MRDFastSyncGroupSessionState.rawValue.getter(v345, v347, v348, 2);
    uint64_t v351 = v350;
    uint64_t v353 = v352;
    unsigned __int8 v355 = v354;
    sub_1002F6340(v349, v350, v352, v354);
    swift_errorRelease();
    sub_1001859D4(v351, v353, v355);
    goto LABEL_141;
  }
LABEL_18:
  uint64_t v100 = 4;
  while (1)
  {
    if ((v98 & 0xC000000000000001) != 0) {
      uint64_t v101 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v101 = (char *)*(id *)(v98 + 8 * v100);
    }
    uint64_t v102 = v101;
    uint64_t v103 = v100 - 3;
    if (__OFADD__(v100 - 4, 1))
    {
      __break(1u);
LABEL_99:
      swift_bridgeObjectRelease_n();
      id v298 = [v88 options];
      if (v298)
      {
        uint64_t v299 = v298;
        uint64_t v300 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v448 = v103;
        uint64_t v301 = v421;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v300 + 16) && (unint64_t v302 = sub_10018C3C4((uint64_t)aBlock), (v303 & 1) != 0))
        {
          sub_10018FDAC(*(void *)(v300 + 56) + 32 * v302, (uint64_t)&v449);
        }
        else
        {
          long long v449 = 0u;
          long long v450 = 0u;
        }
        sub_10018FFC8((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        if (*((void *)&v450 + 1))
        {
          if (swift_dynamicCast())
          {
            v423 = (void *)aBlock[0];
            uint64_t v313 = *((void *)v420 + 2);
            if (v313)
            {
              uint64_t v314 = 0;
              v421 = v420 + 32;
              uint64_t v315 = v423[2];
              v418 = (char *)(v423 + 7);
              while (1)
              {
                if (v315)
                {
                  v329 = &v421[16 * v314];
                  uint64_t v331 = *(void *)v329;
                  uint64_t v330 = *((void *)v329 + 1);
                  BOOL v332 = v423[4] == *(void *)v329 && v423[5] == v330;
                  if (v332 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
LABEL_143:
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    id v356 = [objc_allocWithZone((Class)MRPlaybackSessionRequest) init];
                    NSString v357 = String._bridgeToObjectiveC()();
                    [v356 setRequestIdentifier:v357];

                    NSString v358 = String._bridgeToObjectiveC()();
                    swift_bridgeObjectRelease();
                    v443 = v356;
                    [v356 setType:v358];

                    uint64_t v359 = (uint64_t *)[objc_allocWithZone((Class)MRPlaybackSessionMigrateRequest) init];
                    v445 = v359;
                    NSString v360 = String._bridgeToObjectiveC()();
                    [v359 setRequestID:v360];

                    [v359 setPlaybackSessionRequest:v356];
                    [v359 setEndpointOptions:0];
                    objc_msgSend(v359, "setPlayerOptions:", (unint64_t)objc_msgSend(v359, "playerOptions") | 8);
                    v432 = (void (*)(id, id))[v434 activePlayerPath];
                    id v361 = objc_allocWithZone((Class)MRPlayerPath);
                    v362 = v435;
                    NSString v363 = String._bridgeToObjectiveC()();
                    swift_bridgeObjectRelease();
                    id v441 = v362;
                    v435 = [v361 initWithOrigin:v362 bundleIdentifier:v363 player:0];

                    uint64_t v364 = v427;
                    uint64_t v365 = (void *)(*(uint64_t (**)(void))(*(void *)v427 + 280))();
                    uint64_t v366 = v412;
                    v367 = v437;
                    v409(v412, v422, v437);
                    uint64_t v368 = v436;
                    unint64_t v369 = (*(unsigned __int8 *)(v436 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v436 + 80);
                    unint64_t v370 = (v411 + v369 + 7) & 0xFFFFFFFFFFFFFFF8;
                    v371 = (char *)swift_allocObject();
                    unint64_t v372 = v439;
                    *((void *)v371 + 2) = v424;
                    *((void *)v371 + 3) = v372;
                    *((void *)v371 + 4) = v445;
                    *((void *)v371 + 5) = sub_1002F6340;
                    uint64_t v373 = v425;
                    *((void *)v371 + 6) = v431;
                    *((void *)v371 + 7) = v373;
                    uint64_t v374 = v446;
                    *((void *)v371 + 8) = v438;
                    *((void *)v371 + 9) = v374;
                    *((void *)v371 + 10) = v440;
                    *((void *)v371 + 11) = v365;
                    *((void *)v371 + 12) = v364;
                    (*(void (**)(char *, char *, void *))(v368 + 32))(&v371[v369], v366, v367);
                    *(void *)&v371[v370] = v444;
                    *(void *)&v371[(v370 + 15) & 0xFFFFFFFFFFFFFFF8] = v442;
                    aBlock[4] = (uint64_t)sub_1002F6554;
                    aBlock[5] = (uint64_t)v371;
                    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
                    aBlock[1] = 1107296256;
                    aBlock[2] = (uint64_t)sub_1001872F8;
                    aBlock[3] = (uint64_t)&unk_100428BA8;
                    v375 = _Block_copy(aBlock);
                    v376 = v445;
                    id v377 = v365;
                    swift_bridgeObjectRetain();
                    swift_retain();
                    v378 = v376;
                    id v379 = v377;
                    v380 = v432;
                    v381 = v435;
                    swift_retain();
                    swift_retain();
                    swift_release();
                    MRMediaRemotePlaybackSessionMigrateForPlayer();
                    swift_release();

                    _Block_release(v375);
                    return;
                  }
                  if (v315 != 1) {
                    break;
                  }
                }
LABEL_117:
                if (++v314 == v313) {
                  goto LABEL_144;
                }
              }
              v333 = v418;
              uint64_t v334 = 1;
              while (1)
              {
                uint64_t v335 = v334 + 1;
                if (__OFADD__(v334, 1)) {
                  break;
                }
                BOOL v336 = *(v333 - 1) == v331 && *v333 == v330;
                if (v336 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                  goto LABEL_143;
                }
                v333 += 2;
                ++v334;
                if (v335 == v315) {
                  goto LABEL_117;
                }
              }
              __break(1u);
            }
            else
            {
LABEL_144:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v429(v413, v428, v441);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v382 = Logger.logObject.getter();
              os_log_type_t v383 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v382, v383))
              {
                uint64_t v384 = swift_slowAlloc();
                aBlock[0] = swift_slowAlloc();
                *(_DWORD *)uint64_t v384 = 136315906;
                uint64_t v385 = _typeName(_:qualified:)();
                *(void *)&long long v449 = sub_10018A9E0(v385, v386, aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                *(_WORD *)(v384 + 12) = 2080;
                unint64_t v387 = v439;
                swift_bridgeObjectRetain();
                *(void *)&long long v449 = sub_10018A9E0(v424, v387, aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v384 + 22) = 2080;
                swift_bridgeObjectRetain();
                uint64_t v388 = Array.description.getter();
                unint64_t v390 = v389;
                swift_bridgeObjectRelease();
                *(void *)&long long v449 = sub_10018A9E0(v388, v390, aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v384 + 32) = 2080;
                swift_bridgeObjectRetain();
                uint64_t v391 = Array.description.getter();
                unint64_t v393 = v392;
                swift_bridgeObjectRelease();
                *(void *)&long long v449 = sub_10018A9E0(v391, v393, aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v382, v383, "[%s] handoffFromApplication<%s> - failing because no matching supported types found between source: %s, dest: %s", (uint8_t *)v384, 0x2Au);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {

                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
              }
              v432(v413, v441);
              uint64_t v394 = type metadata accessor for InternalRoutingError();
              sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
              uint64_t v395 = swift_allocError();
              (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v394 - 8) + 104))(v396, enum case for InternalRoutingError.unsupportedOperation(_:), v394);
              uint64_t v397 = *v445;
              uint64_t v398 = v445[1];
              swift_bridgeObjectRetain();
              uint64_t v399 = MRDFastSyncGroupSessionState.rawValue.getter(v395, v397, v398, 2);
              uint64_t v401 = v400;
              uint64_t v403 = v402;
              unsigned __int8 v405 = v404;
              sub_1002F6340(v399, v400, v402, v404);
              swift_release();

              swift_errorRelease();
              sub_1001859D4(v401, v403, v405);
            }
            return;
          }
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
LABEL_88:
          swift_bridgeObjectRelease();
LABEL_112:
          uint64_t v316 = v414;
          v429(v414, v428, v441);
          unint64_t v317 = v440;
          swift_bridgeObjectRetain_n();
          unint64_t v318 = v439;
          swift_bridgeObjectRetain();
          uint64_t v319 = Logger.logObject.getter();
          os_log_type_t v320 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v319, v320))
          {
            uint64_t v321 = swift_slowAlloc();
            aBlock[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v321 = 136315650;
            uint64_t v322 = _typeName(_:qualified:)();
            *(void *)&long long v449 = sub_10018A9E0(v322, v323, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v321 + 12) = 2080;
            swift_bridgeObjectRetain();
            *(void *)&long long v449 = sub_10018A9E0(v424, v318, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v321 + 22) = 2080;
            swift_bridgeObjectRetain();
            *(void *)&long long v449 = sub_10018A9E0(v446, v317, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v319, v320, "[%s] handoffFromApplication<%s> - failing because no destination supported types found for: %s", (uint8_t *)v321, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          v432(v316, v441);
          uint64_t v324 = type metadata accessor for InternalRoutingError();
          sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
          uint64_t v325 = swift_allocError();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v324 - 8) + 104))(v326, enum case for InternalRoutingError.unsupportedOperation(_:), v324);
          uint64_t v327 = *v445;
          uint64_t v328 = v445[1];
          swift_bridgeObjectRetain();
          uint64_t v309 = MRDFastSyncGroupSessionState.rawValue.getter(v325, v327, v328, 2);
          uint64_t v125 = v310;
          uint64_t v126 = v311;
          unsigned __int8 v127 = v312;
LABEL_116:
          sub_1002F6340(v309, v310, v311, v312);
          swift_release();

          goto LABEL_38;
        }
      }
      else
      {
        long long v449 = 0u;
        long long v450 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_100009A08((uint64_t)&v449, &qword_100479F50);
      goto LABEL_112;
    }
    if ([v101 command] == 133) {
      break;
    }

    ++v100;
    if (v103 == v99)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v104 = v445;
      unint64_t v105 = v439;
      unint64_t v106 = v440;
      unsigned __int8 v107 = (void (*)(char *, id))v432;
LABEL_69:
      uint64_t v229 = v429;
      uint64_t v230 = v428;
      goto LABEL_137;
    }
  }
  swift_bridgeObjectRelease_n();
  id v209 = [v102 options];
  v426 = v102;
  if (!v209)
  {
    long long v449 = 0u;
    long long v450 = 0u;
    unint64_t v105 = v439;
    unsigned __int8 v107 = (void (*)(char *, id))v432;
LABEL_66:
    swift_bridgeObjectRelease();

    sub_100009A08((uint64_t)&v449, &qword_100479F50);
LABEL_68:
    uint64_t v104 = v445;
    unint64_t v106 = v440;
    goto LABEL_69;
  }
  uint64_t v210 = v209;
  uint64_t v211 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v103 = kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  uint64_t v448 = kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  v421 = (char *)kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  uint64_t v212 = sub_100013A80(&qword_100479570);
  sub_1001E70CC();
  v423 = (void *)v212;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v211 + 16))
  {
    unint64_t v213 = sub_10018C3C4((uint64_t)aBlock);
    unsigned __int8 v107 = (void (*)(char *, id))v432;
    if (v214)
    {
      sub_10018FDAC(*(void *)(v211 + 56) + 32 * v213, (uint64_t)&v449);
    }
    else
    {
      long long v449 = 0u;
      long long v450 = 0u;
    }
    unint64_t v105 = v439;
  }
  else
  {
    long long v449 = 0u;
    long long v450 = 0u;
    unint64_t v105 = v439;
    unsigned __int8 v107 = (void (*)(char *, id))v432;
  }
  sub_10018FFC8((uint64_t)aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v450 + 1)) {
    goto LABEL_66;
  }
  uint64_t v215 = sub_100013A80(&qword_10047A080);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    goto LABEL_68;
  }
  v418 = (char *)v215;
  uint64_t v216 = aBlock[0];
  id v217 = [v87 server];
  id v218 = [v217 nowPlayingServer];

  id v219 = v435;
  unint64_t v220 = (char *)[v218 originClientForOrigin:v435];

  if (!v220)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v231 = v417;
    id v232 = v441;
    v429(v417, v428, v441);
    id v233 = v219;
    unint64_t v234 = v439;
    swift_bridgeObjectRetain();
    id v235 = v233;
    uint64_t v236 = Logger.logObject.getter();
    os_log_type_t v237 = static os_log_type_t.error.getter();
    BOOL v238 = os_log_type_enabled(v236, v237);
    id v239 = v426;
    if (v238)
    {
      uint64_t v240 = swift_slowAlloc();
      uint64_t v241 = (void *)swift_slowAlloc();
      uint64_t v446 = swift_slowAlloc();
      aBlock[0] = v446;
      *(_DWORD *)uint64_t v240 = 136315650;
      uint64_t v242 = _typeName(_:qualified:)();
      *(void *)&long long v449 = sub_10018A9E0(v242, v243, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v240 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v449 = sub_10018A9E0(v424, v234, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v240 + 22) = 2112;
      *(void *)&long long v449 = v235;
      id v244 = v235;
      id v239 = v426;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v241 = v435;

      _os_log_impl((void *)&_mh_execute_header, v236, v237, "[%s] handoffFromApplication<%s> - failing because no destination origin client found for: %@", (uint8_t *)v240, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v432(v417, v441);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v107(v231, v232);
    }
    uint64_t v256 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v257 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v256 - 8) + 104))(v258, enum case for InternalRoutingError.sessionNotFound(_:), v256);
    uint64_t v259 = *v445;
    uint64_t v260 = v445[1];
    swift_bridgeObjectRetain();
    uint64_t v261 = MRDFastSyncGroupSessionState.rawValue.getter(v257, v259, v260, 2);
    uint64_t v263 = v262;
    uint64_t v265 = v264;
    unsigned __int8 v267 = v266;
    sub_1002F6340(v261, v262, v264, v266);
    swift_errorRelease();
    sub_1001859D4(v263, v265, v267);
    swift_release();

    return;
  }
  v420 = (char *)v216;
  sub_10018FE08(0, &qword_10047AC18);
  uint64_t v221 = v446;
  uint64_t v222 = v440;
  char v223 = sub_10030B17C(v446, v440);
  v419 = v220;
  if ((v223 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v228 = (char *)v222;
LABEL_73:
    if ((sub_10030B194(v221, v222) & 1) == 0)
    {
      if (!v228) {
        goto LABEL_94;
      }
      goto LABEL_77;
    }
LABEL_74:
    swift_bridgeObjectRelease();
    id v245 = [v220 deviceInfo];
    id v246 = [v245 systemPodcastApplication];

    if (!v246) {
      goto LABEL_94;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v228 = v247;

LABEL_77:
    v417 = v228;
    NSString v248 = String._bridgeToObjectiveC()();
    id v249 = [v220 defaultSupportedCommandsForClient:v248];

    uint64_t v250 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v251 = (unint64_t)sub_1001D2430(v250);
    swift_bridgeObjectRelease();
    if (!v251)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v429(v415, v428, v441);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v268 = Logger.logObject.getter();
      os_log_type_t v269 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v268, v269))
      {
        uint64_t v270 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v270 = 136315650;
        uint64_t v271 = _typeName(_:qualified:)();
        *(void *)&long long v449 = sub_10018A9E0(v271, v272, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v270 + 12) = 2080;
        unint64_t v273 = v439;
        swift_bridgeObjectRetain();
        *(void *)&long long v449 = sub_10018A9E0(v424, v273, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v270 + 22) = 2080;
        unint64_t v274 = v440;
        swift_bridgeObjectRetain();
        *(void *)&long long v449 = sub_10018A9E0(v446, v274, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v268, v269, "[%s] handoffFromApplication<%s> - failing because no destination supported commands found for: %s", (uint8_t *)v270, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v107(v415, v441);
      uint64_t v304 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v305 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v304 - 8) + 104))(v306, enum case for InternalRoutingError.unsupportedOperation(_:), v304);
      uint64_t v307 = *v445;
      uint64_t v308 = v445[1];
      swift_bridgeObjectRetain();
      uint64_t v309 = MRDFastSyncGroupSessionState.rawValue.getter(v305, v307, v308, 2);
      uint64_t v125 = v310;
      uint64_t v126 = v311;
      unsigned __int8 v127 = v312;
      goto LABEL_116;
    }
    if (v251 >> 62) {
      goto LABEL_149;
    }
    uint64_t v252 = *(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v252; uint64_t v252 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v253 = 4;
      while (1)
      {
        uint64_t v254 = (v251 & 0xC000000000000001) != 0
             ? (char **)specialized _ArrayBuffer._getElementSlowPath(_:)()
             : (char **)*(id *)(v251 + 8 * v253);
        char v88 = v254;
        uint64_t v255 = v253 - 3;
        if (__OFADD__(v253 - 4, 1)) {
          break;
        }
        if ([v254 command] == 133) {
          goto LABEL_99;
        }

        ++v253;
        if (v255 == v252) {
          goto LABEL_87;
        }
      }
      __break(1u);
LABEL_149:
      swift_bridgeObjectRetain();
    }
LABEL_87:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_88;
  }
  id v224 = [v220 deviceInfo];
  id v225 = [v224 systemMediaApplication];

  if (v225)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v227 = v226;

    uint64_t v228 = v227;
    uint64_t v222 = v440;
    goto LABEL_73;
  }
  if (sub_10030B194(v221, v440)) {
    goto LABEL_74;
  }
LABEL_94:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v275 = v416;
  v429(v416, v428, v441);
  unint64_t v276 = v440;
  swift_bridgeObjectRetain_n();
  id v277 = v220;
  unint64_t v278 = v439;
  swift_bridgeObjectRetain();
  v444 = v277;
  id v279 = Logger.logObject.getter();
  os_log_type_t v280 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v279, v280))
  {
    uint64_t v281 = swift_slowAlloc();
    v437 = (void *)swift_slowAlloc();
    uint64_t v438 = swift_slowAlloc();
    aBlock[0] = v438;
    *(_DWORD *)uint64_t v281 = 136315906;
    uint64_t v282 = _typeName(_:qualified:)();
    *(void *)&long long v449 = sub_10018A9E0(v282, v283, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v281 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v449 = sub_10018A9E0(v424, v278, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v281 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v449 = sub_10018A9E0(v446, v276, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v281 + 32) = 2112;
    *(void *)&long long v449 = v444;
    uint64_t v284 = v444;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v437 = v419;

    _os_log_impl((void *)&_mh_execute_header, v279, v280, "[%s] handoffFromApplication<%s> - failing because unable to localize client: %s for destination origin client: %@", (uint8_t *)v281, 0x2Au);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    unint64_t v285 = v444;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v432(v275, v441);
  uint64_t v286 = type metadata accessor for InternalRoutingError();
  sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
  uint64_t v287 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v286 - 8) + 104))(v288, enum case for InternalRoutingError.unsupportedOperation(_:), v286);
  uint64_t v289 = *v445;
  uint64_t v290 = v445[1];
  swift_bridgeObjectRetain();
  uint64_t v291 = MRDFastSyncGroupSessionState.rawValue.getter(v287, v289, v290, 2);
  uint64_t v293 = v292;
  uint64_t v295 = v294;
  unsigned __int8 v297 = v296;
  sub_1002F6340(v291, v292, v294, v296);
  swift_release();

  swift_errorRelease();
  uint64_t v140 = v293;
  uint64_t v141 = v295;
  unsigned __int8 v142 = v297;
LABEL_39:
  sub_1001859D4(v140, v141, v142);
}

void sub_1002E2A10(uint64_t a1, int a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v113 = a4;
  uint64_t v114 = a5;
  LODWORD(v110) = a2;
  uint64_t v7 = type metadata accessor for RoutingControl();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v109 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = a3;
  swift_bridgeObjectRetain();
  uint64_t v17 = RoutingControl.sessionIdentifier.getter();
  uint64_t v19 = v18;
  uint64_t v20 = sub_1002A0458();
  if (v17 == *(void *)v20 && v19 == *((void *)v20 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t v22 = swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    uint64_t v107 = v9;
    uint64_t v104 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v105 = v8;
    uint64_t v58 = a1;
    uint64_t v59 = (*(uint64_t (**)(uint64_t))(*(void *)v111 + 328))(v22);
    uint64_t v60 = *(void *)(v59 + 16);
    if (v60)
    {
      uint64_t v108 = v7;
      uint64_t v61 = v59 + ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80));
      uint64_t v62 = *(void *)(v109 + 72);
      uint64_t v106 = v59;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1002F2874(v61, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v64 = *v13;
        uint64_t v63 = v13[1];
        if (v64 == RoutingControl.sessionIdentifier.getter() && v63 == v65) {
          break;
        }
        char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v67) {
          goto LABEL_20;
        }
        sub_1002F5F00((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
        v61 += v62;
        if (!--v60)
        {
          swift_bridgeObjectRelease();
          uint64_t v68 = 1;
          uint64_t v69 = v113;
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease();
LABEL_20:
      uint64_t v69 = v113;
      swift_bridgeObjectRelease();
      sub_1002F39C4((uint64_t)v13, (uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v68 = 0;
LABEL_21:
      a1 = v58;
      uint64_t v7 = v108;
    }
    else
    {
      uint64_t v68 = 1;
      a1 = v58;
      uint64_t v69 = v113;
    }
    uint64_t v70 = v109;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v16, v68, 1, v11);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v16, 1, v11) == 1)
    {
      swift_bridgeObjectRelease();
      sub_100009A08((uint64_t)v16, &qword_100479588);
LABEL_38:
      uint64_t v84 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v85 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v84 - 8) + 104))(v86, enum case for InternalRoutingError.sessionNotFound(_:), v84);
      uint64_t v87 = RoutingControl.sessionIdentifier.getter();
      MRDFastSyncGroupSessionState.rawValue.getter(v85, v87, v88, 2);
      uint64_t v90 = v89;
      uint64_t v92 = v91;
      unsigned __int8 v94 = v93;
      v69();
LABEL_43:
      swift_errorRelease();
      sub_1001859D4(v90, v92, v94);
      return;
    }
    uint64_t v25 = (id *)*((void *)v16 + 2);
    uint64_t v71 = *((void *)v16 + 3);
    swift_bridgeObjectRetain();
    id v27 = (id)sub_1002F5F00((uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
    if (!v71) {
      goto LABEL_45;
    }
    uint64_t v72 = (uint64_t *)(v111 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
    swift_beginAccess();
    uint64_t v73 = *v72;
    if (*(void *)(v73 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v74 = sub_100013660((uint64_t)v25, v71);
      if (v75)
      {
        uint64_t v25 = *(id **)(*(void *)(v73 + 56) + 8 * v74);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v76 = [v25[8] origin];
        if (v76)
        {
          char v77 = v76;
          if (*((unsigned char *)v25 + 16) == 2)
          {
            uint64_t v78 = v7;
            id v79 = [self server];
            id v80 = [v79 nowPlayingServer];

            id v81 = [v80 originClientForOrigin:v77];
            if (v81
              && (id v82 = [v81 activeNowPlayingClient],
                  v81,
                  v82)
              && (id v83 = [v82 activePlayerClient],
                  v82,
                  v83))
            {
              id v26 = [v83 playerPath];
              swift_release();

              uint64_t v7 = v78;
              uint64_t v8 = v105;
              uint64_t v10 = v104;
              uint64_t v9 = v107;
              if (v26) {
                goto LABEL_6;
              }
            }
            else
            {
              swift_release();
            }
            goto LABEL_42;
          }
          swift_release();
        }
        else
        {
          swift_release();
        }
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_37:
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
LABEL_5:
  id v23 = [self server];
  id v24 = [v23 nowPlayingServer];

  uint64_t v25 = (id *)[v24 localActivePlayerClient];
  id v26 = [v25 playerPath];

  if (!v26)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    uint64_t v95 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v96 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v95 - 8) + 104))(v97, enum case for InternalRoutingError.noActivePlayer(_:), v95);
    uint64_t v98 = RoutingControl.sessionIdentifier.getter();
    MRDFastSyncGroupSessionState.rawValue.getter(v96, v98, v99, 2);
    uint64_t v90 = v100;
    uint64_t v92 = v101;
    unsigned __int8 v94 = v102;
    v113();
    goto LABEL_43;
  }
LABEL_6:
  uint64_t v107 = v9;
  uint64_t v108 = v7;
  id v27 = (id)kMRMediaRemoteOptionCommandID;
  if (kMRMediaRemoteOptionCommandID)
  {
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;
    uint64_t v25 = (id *)v26;
    uint64_t v31 = RoutingControl.identifier.getter();
    uint64_t v118 = &type metadata for String;
    *(void *)&long long aBlock = v31;
    *((void *)&aBlock + 1) = v32;
    sub_10018FF5C(&aBlock, v121);
    uint64_t v33 = v112;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v115 = v33;
    sub_1002490A8(v121, v28, v30, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = self;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(void *)&long long aBlock = 0;
    id v37 = [v35 dataWithPropertyList:isa format:200 options:0 error:&aBlock];

    id v27 = (id)aBlock;
    if (v37)
    {
      uint64_t v38 = a1;
      swift_bridgeObjectRelease();
      uint64_t v39 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v112 = v39;
      unint64_t v41 = v40;

      id v42 = objc_allocWithZone((Class)MRDRemoteControlCommand);
      uint64_t v43 = v25;
      sub_10018FE44(v39, v41);
      NSString v44 = String._bridgeToObjectiveC()();
      Class v45 = Data._bridgeToObjectiveC()().super.isa;
      sub_10018FE9C(v39, v41);
      id v110 = [v42 initWithCommandType:v110 playerPath:v43 unresolvedPlayerPath:v43 senderAppDisplayID:v44 optionsData:v45];

      unint64_t v46 = (void *)(*(uint64_t (**)(void))(*(void *)v111 + 280))();
      id v47 = [self server];
      id v48 = [v47 remoteControlServer];

      uint64_t v49 = v10;
      uint64_t v50 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v38, v108);
      unint64_t v51 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      BOOL v52 = (char *)swift_allocObject();
      uint64_t v53 = v113;
      uint64_t v54 = v114;
      *((void *)v52 + 2) = v46;
      *((void *)v52 + 3) = v53;
      *((void *)v52 + 4) = v54;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v52[v51], v49, v50);
      uint64_t v119 = sub_1002F6F38;
      uint64_t v120 = v52;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v117 = sub_1002E645C;
      uint64_t v118 = &unk_100428E00;
      uint64_t v55 = _Block_copy(&aBlock);
      id v56 = v46;
      swift_retain();
      swift_release();
      os_log_type_t v57 = v110;
      [v48 sendRemoteControlCommand:v110 completion:v55];

      sub_10018FE9C(v112, v41);
      _Block_release(v55);

      return;
    }
    goto LABEL_46;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t v103 = v27;

  _convertNSErrorToError(_:)();
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

uint64_t sub_1002E3668(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HostedRoutingSourceSession(0) - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  uint64_t v8 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  do
  {
    uint64_t v10 = *v7;
    uint64_t v9 = v7[1];
    if (v10 == RoutingControl.sessionIdentifier.getter() && v9 == v11)
    {
      swift_bridgeObjectRelease();
      sub_1002F2874((uint64_t)v7, (uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
    }
    else
    {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      sub_1002F2874((uint64_t)v7, (uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
      if ((v13 & 1) == 0)
      {
        sub_1002F5F00((uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
        goto LABEL_4;
      }
    }
    char v14 = sub_1002A0464();
    sub_1002F5F00((uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
    if (v14)
    {
      uint64_t v15 = 1;
      goto LABEL_16;
    }
LABEL_4:
    uint64_t v7 = (uint64_t *)((char *)v7 + v8);
    --v6;
  }
  while (v6);
  uint64_t v15 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1002E384C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(void))
{
  uint64_t v23 = a8;
  uint64_t v24 = a7;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v22 = a11;
  uint64_t v15 = type metadata accessor for RoutingControl();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  if (a1)
  {
    swift_errorRetain();
    sub_100185894(a2, a3, a4);
    v25(a1, a2, a3, a4);
    return sub_1001BB320(a1, a2, a3, a4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a9, v15);
    unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v20 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v20 + v19, (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
    sub_1002D33AC(v23, v25, v26, v22, v20);
    return swift_release();
  }
}

uint64_t sub_1002E3A20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HostedRoutingSourceSession(0) - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  uint64_t v8 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  do
  {
    uint64_t v10 = *v7;
    uint64_t v9 = v7[1];
    if (v10 == RoutingControl.sessionIdentifier.getter() && v9 == v11)
    {
      swift_bridgeObjectRelease();
      sub_1002F2874((uint64_t)v7, (uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
    }
    else
    {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      sub_1002F2874((uint64_t)v7, (uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
      if ((v13 & 1) == 0)
      {
        sub_1002F5F00((uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
        goto LABEL_4;
      }
    }
    char v14 = sub_1002A0464();
    sub_1002F5F00((uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
    if ((v14 & 1) == 0)
    {
      uint64_t v15 = 1;
      goto LABEL_16;
    }
LABEL_4:
    uint64_t v7 = (uint64_t *)((char *)v7 + v8);
    --v6;
  }
  while (v6);
  uint64_t v15 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1002E3C04(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100013A80(&qword_10047CEC8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (void *)*(v4 - 2);
    uint64_t v5 = *(v4 - 1);
    unint64_t v7 = *v4;
    id v8 = v6;
    sub_10018FE44(v5, v7);
    unint64_t result = sub_1002EFF00(v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    uint64_t v11 = (uint64_t *)(v2[7] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1002E3D1C(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))
{
  BOOL v238 = a3;
  unint64_t v225 = a2;
  uint64_t v5 = *v3;
  uint64_t v6 = sub_100013A80(&qword_100479588);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v219 = (uint64_t)&v210 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v222 = (uint64_t)&v210 - v9;
  uint64_t v223 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v230 = *(void *)(v223 - 8);
  uint64_t v10 = __chkstk_darwin(v223);
  unint64_t v220 = (char *)&v210 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v218 = (uint64_t)&v210 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v210 - v15;
  __chkstk_darwin(v14);
  uint64_t v221 = (uint64_t)&v210 - v17;
  uint64_t v228 = type metadata accessor for RoutingControl.Target();
  uint64_t v227 = *(void *)(v228 - 8);
  uint64_t v18 = __chkstk_darwin(v228);
  uint64_t v216 = (char *)&v210 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v226 = (char *)&v210 - v20;
  uint64_t v239 = type metadata accessor for RoutingControl();
  uint64_t v232 = *(void *)(v239 - 8);
  uint64_t v21 = *(void *)(v232 + 64);
  uint64_t v22 = __chkstk_darwin(v239);
  char v214 = (char *)&v210 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v215 = (char *)&v210 - v24;
  __chkstk_darwin(v23);
  uint64_t v236 = (char *)&v210 - v25;
  uint64_t v235 = type metadata accessor for RoutingInteraction();
  uint64_t v224 = *(void *)(v235 - 8);
  uint64_t v26 = *(void *)(v224 + 64);
  __chkstk_darwin(v235);
  uint64_t v27 = type metadata accessor for RoutingControl.RoutingControlType();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (int *)((char *)&v210 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v237 = v5;
  uint64_t v32 = *(uint64_t (**)(uint64_t))(v5 + 280);
  uint64_t v229 = v3;
  id v231 = (id)v32(v29);
  uint64_t v33 = RoutingControl.identifier.getter();
  id v233 = v34;
  uint64_t v234 = v33;
  RoutingControl.type.getter();
  int v35 = (*(uint64_t (**)(int *, uint64_t))(v28 + 88))(v31, v27);
  if (v35 != enum case for RoutingControl.RoutingControlType.absoluteVolume(_:))
  {
    uint64_t v74 = v234;
    if (v35 == enum case for RoutingControl.RoutingControlType.relativeVolume(_:))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(int *, uint64_t))(v28 + 96))(v31, v27);
      uint64_t v75 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v76 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v75 - 8) + 104))(v77, enum case for InternalRoutingError.notImplemented(_:), v75);
      uint64_t v78 = MRDFastSyncGroupSessionState.rawValue.getter(v76, 0, 0, 4);
      uint64_t v80 = v79;
      uint64_t v82 = v81;
      unsigned __int8 v84 = v83;
      sub_1002F3AA4(v78, v79, v81, v83);

      swift_errorRelease();
      sub_1001859D4(v80, v82, v84);
      uint64_t v85 = type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType();
      return (*(uint64_t (**)(int *, uint64_t))(*(void *)(v85 - 8) + 8))(v31, v85);
    }
    uint64_t v101 = v233;
    if (v35 == enum case for RoutingControl.RoutingControlType.mute(_:))
    {
      swift_bridgeObjectRelease();
      uint64_t v102 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v103 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v102 - 8) + 104))(v104, enum case for InternalRoutingError.notImplemented(_:), v102);
      uint64_t v105 = MRDFastSyncGroupSessionState.rawValue.getter(v103, 0, 0, 4);
      uint64_t v107 = v106;
      uint64_t v109 = v108;
      unsigned __int8 v111 = v110;
      sub_1002F3AA4(v105, v106, v108, v110);
LABEL_47:

      swift_errorRelease();
      return sub_1001859D4(v107, v109, v111);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v232 + 16))(v214, a1, v239);
    long long aBlock = 0;
    unint64_t v241 = 0xE000000000000000;
    _StringGuts.grow(_:)(58);
    v204._countAndFlagsBits = 91;
    v204._object = (void *)0xE100000000000000;
    String.append(_:)(v204);
    v205._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v205);
    swift_bridgeObjectRelease();
    v206._countAndFlagsBits = 0xD000000000000016;
    v206._object = (void *)0x80000001003B4AE0;
    String.append(_:)(v206);
    v207._countAndFlagsBits = v74;
    v207._object = v101;
    String.append(_:)(v207);
    v208._countAndFlagsBits = 0xD00000000000001DLL;
    v208._object = (void *)0x80000001003B4B00;
    String.append(_:)(v208);
    sub_1002F14AC(&qword_100478970, (void (*)(uint64_t))&type metadata accessor for RoutingControl);
    v209._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v209);
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  char v214 = v16;
  (*(void (**)(int *, uint64_t))(v28 + 96))(v31, v27);
  int v36 = *v31;
  uint64_t v37 = v224;
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v224 + 16);
  unint64_t v213 = (char *)&v210 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38(v213, v225, v235);
  uint64_t v39 = v232;
  unint64_t v40 = *(void (**)(char *, uint64_t))(v232 + 16);
  uint64_t v217 = a1;
  uint64_t v41 = v239;
  uint64_t v212 = v232 + 16;
  uint64_t v211 = v40;
  ((void (*)(char *, uint64_t, uint64_t))v40)(v236, a1, v239);
  unint64_t v42 = (*(unsigned __int8 *)(v37 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v43 = (v26 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (*(unsigned __int8 *)(v39 + 80) + v43 + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v45 = (v21 + v44 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v46 = (v45 + 11) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v225 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v47 = swift_allocObject();
  id v48 = v229;
  *(void *)(v47 + 16) = v229;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v47 + v42, v213, v235);
  uint64_t v49 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + v43);
  uint64_t v50 = v238;
  *uint64_t v49 = sub_1002F3AA4;
  v49[1] = v50;
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v47 + v44, v236, v41);
  *(_DWORD *)(v47 + v45) = v36;
  unint64_t v51 = (uint64_t *)(v47 + v46);
  BOOL v52 = v233;
  uint64_t v53 = v234;
  uint64_t *v51 = v234;
  v51[1] = (uint64_t)v52;
  uint64_t v236 = (char *)v47;
  *(void *)(v47 + v225) = v237;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v54 = v226;
  uint64_t v55 = v217;
  RoutingControl.target.getter();
  uint64_t v56 = v227;
  os_log_type_t v57 = (void *)v228;
  int v58 = (*(uint64_t (**)(char *, uint64_t))(v227 + 88))(v54, v228);
  uint64_t v59 = v50;
  uint64_t v60 = v55;
  uint64_t v61 = v48;
  uint64_t v62 = v56;
  if (v58 == enum case for RoutingControl.Target.session(_:))
  {
    uint64_t v53 = v60;
    swift_bridgeObjectRelease();
    uint64_t v62 = v56 + 96;
    (*(void (**)(char *, void *))(v56 + 96))(v54, v57);
    BOOL v52 = *(void **)v54;
    uint64_t v63 = (void *)*((void *)v54 + 1);
    uint64_t v64 = sub_1002A0458();
    if (v52 == *(void **)v64 && v63 == *((void **)v64 + 1)) {
      goto LABEL_65;
    }
    char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v66 = v222;
    char v67 = v214;
    if ((v65 & 1) == 0)
    {
      uint64_t v68 = (*(uint64_t (**)(void))(*v61 + 328))();
      uint64_t v69 = *(void *)(v68 + 16);
      if (v69)
      {
        uint64_t v70 = v68 + ((*(unsigned __int8 *)(v230 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80));
        uint64_t v71 = *(void *)(v230 + 72);
        while (1)
        {
          sub_1002F2874(v70, (uint64_t)v67, type metadata accessor for HostedRoutingSourceSession);
          BOOL v72 = *(void **)v67 == v52 && *((void *)v67 + 1) == (void)v63;
          if (v72 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          sub_1002F5F00((uint64_t)v67, type metadata accessor for HostedRoutingSourceSession);
          v70 += v71;
          if (!--v69)
          {
            uint64_t v73 = 1;
            uint64_t v66 = v222;
            goto LABEL_35;
          }
        }
        uint64_t v66 = v222;
        sub_1002F39C4((uint64_t)v67, v222, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v73 = 0;
      }
      else
      {
        uint64_t v73 = 1;
      }
LABEL_35:
      uint64_t v112 = v230;
      os_log_type_t v57 = (void *)v223;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v230 + 56))(v66, v73, 1, v223);
      swift_bridgeObjectRelease();
      int v113 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(v112 + 48))(v66, 1, v57);
      uint64_t v62 = v221;
      if (v113 == 1)
      {
        sub_100009A08(v66, &qword_100479588);
        uint64_t v114 = type metadata accessor for InternalRoutingError();
        sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
        uint64_t v115 = swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v114 - 8) + 104))(v116, enum case for InternalRoutingError.sessionNotFound(_:), v114);
        uint64_t v117 = v115;
        uint64_t v118 = v52;
        uint64_t v119 = v63;
LABEL_46:
        uint64_t v148 = MRDFastSyncGroupSessionState.rawValue.getter(v117, v118, v119, 2);
        uint64_t v107 = v149;
        uint64_t v109 = v150;
        unsigned __int8 v111 = v151;
        sub_1002F3AA4(v148, v149, v150, v151);
        swift_release();
        goto LABEL_47;
      }
      sub_1002F39C4(v66, v221, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v120 = *(void *)(v62 + 24);
      if (v120)
      {
        uint64_t v121 = *(void *)(v62 + 16);
        uint64_t v122 = (uint64_t *)((char *)v61 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
        swift_beginAccess();
        uint64_t v123 = *v122;
        if (*(void *)(v123 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v124 = sub_100013660(v121, v120);
          if (v125)
          {
            uint64_t v126 = *(void *)(*(void *)(v123 + 56) + 8 * v124);
            swift_retain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(unsigned char *)(v126 + 16) == 2)
            {
              id v127 = *(id *)(v126 + 64);
              RoutingControl.identifier.getter();
              long long aBlock = 0;
              unint64_t v241 = 0xE000000000000000;
              _StringGuts.grow(_:)(23);
              swift_bridgeObjectRelease();
              uint64_t v128 = v59;
              long long aBlock = (void **)0xD000000000000014;
              unint64_t v241 = 0x80000001003B4B40;
              v129._countAndFlagsBits = (uint64_t)v52;
              v129._object = v63;
              String.append(_:)(v129);
              swift_bridgeObjectRelease();
              v130._countAndFlagsBits = 62;
              v130._object = (void *)0xE100000000000000;
              String.append(_:)(v130);
              id v131 = objc_allocWithZone((Class)MRRequestDetails);
              NSString v132 = String._bridgeToObjectiveC()();
              NSString v133 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              NSString v134 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v135 = [v131 initWithName:v132 requestID:v133 reason:v134];

              uint64_t v136 = (void *)swift_allocObject();
              id v137 = v231;
              v136[2] = v231;
              v136[3] = sub_1002F3AA4;
              v136[4] = v128;
              v136[5] = sub_1002F7370;
              v136[6] = v236;
              id v244 = sub_1002F74A0;
              id v245 = v136;
              long long aBlock = _NSConcreteStackBlock;
              unint64_t v241 = 1107296256;
              uint64_t v242 = sub_1001872F8;
              unint64_t v243 = &unk_100428F18;
              uint64_t v138 = _Block_copy(&aBlock);
              id v139 = v137;
              swift_retain();
              id v140 = v139;
              swift_retain();
              swift_release();
              LODWORD(v141) = v36;
              [v127 setVolume:v135 details:v140 queue:v138 completion:v141];
              _Block_release(v138);
              swift_release();
              swift_release();

              unsigned __int8 v142 = &v247;
LABEL_61:
              uint64_t v186 = *(v142 - 32);
              return sub_1002F5F00(v186, type metadata accessor for HostedRoutingSourceSession);
            }
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v176 = type metadata accessor for InternalRoutingError();
        sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
        uint64_t v177 = swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v176 - 8) + 104))(v178, enum case for InternalRoutingError.sessionNotFound(_:), v176);
        uint64_t v179 = MRDFastSyncGroupSessionState.rawValue.getter(v177, v52, v63, 2);
        uint64_t v181 = v180;
        uint64_t v183 = v182;
        unsigned __int8 v185 = v184;
        sub_1002F3AA4(v179, v180, v182, v184);
        swift_errorRelease();
        sub_1001859D4(v181, v183, v185);

        swift_release();
        uint64_t v186 = v62;
        return sub_1002F5F00(v186, type metadata accessor for HostedRoutingSourceSession);
      }
      goto LABEL_67;
    }
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v58 == enum case for RoutingControl.Target.item(_:))
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = v56 + 96;
    (*(void (**)(char *, void *))(v56 + 96))(v54, v57);
    os_log_type_t v57 = *(void **)v54;
    uint64_t v87 = (void *)*((void *)v54 + 1);
    uint64_t v53 = sub_10029F394();
    uint64_t v89 = v88;
    uint64_t v235 = sub_10029F468();
    uint64_t v91 = v90;
    uint64_t v92 = sub_1002A0458();
    BOOL v52 = v220;
    if (v53 == *(void *)v92 && v89 == *((void **)v92 + 1)) {
      goto LABEL_66;
    }
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      goto LABEL_64;
    }
    uint64_t v239 = v91;
    uint64_t v237 = (uint64_t)v57;
    unsigned __int8 v93 = v61;
    uint64_t v94 = (*(uint64_t (**)(void))(*v61 + 328))();
    uint64_t v95 = *(void *)(v94 + 16);
    if (v95)
    {
      uint64_t v96 = v59;
      uint64_t v97 = v94 + ((*(unsigned __int8 *)(v230 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80));
      uint64_t v98 = *(void *)(v230 + 72);
      while (1)
      {
        sub_1002F2874(v97, (uint64_t)v52, type metadata accessor for HostedRoutingSourceSession);
        BOOL v99 = *v52 == v53 && v52[1] == (void)v89;
        if (v99 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
        sub_1002F5F00((uint64_t)v52, type metadata accessor for HostedRoutingSourceSession);
        v97 += v98;
        if (!--v95)
        {
          uint64_t v100 = 1;
          uint64_t v59 = v96;
          goto LABEL_43;
        }
      }
      uint64_t v62 = v219;
      sub_1002F39C4((uint64_t)v52, v219, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v100 = 0;
      uint64_t v59 = v96;
    }
    else
    {
      uint64_t v100 = 1;
LABEL_43:
      uint64_t v62 = v219;
    }
    uint64_t v143 = v230;
    os_log_type_t v57 = (void *)v223;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v230 + 56))(v62, v100, 1, v223);
    swift_bridgeObjectRelease();
    unint64_t v144 = *(unsigned int (**)(uint64_t, uint64_t, void *))(v143 + 48);
    BOOL v52 = (void *)(v143 + 48);
    if (v144(v62, 1, v57) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100009A08(v62, &qword_100479588);
      uint64_t v145 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v146 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v145 - 8) + 104))(v147, enum case for InternalRoutingError.sessionNotFound(_:), v145);
      uint64_t v117 = v146;
      uint64_t v118 = (void *)v53;
      uint64_t v119 = v89;
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    uint64_t v152 = v218;
    sub_1002F39C4(v62, v218, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v153 = *(void *)(v152 + 24);
    if (!v153) {
      goto LABEL_68;
    }
    uint64_t v154 = *(void *)(v152 + 16);
    uint64_t v155 = (uint64_t *)((char *)v93 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
    swift_beginAccess();
    uint64_t v156 = *v155;
    if (*(void *)(v156 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v157 = sub_100013660(v154, v153);
      if (v158)
      {
        uint64_t v159 = *(void *)(*(void *)(v156 + 56) + 8 * v157);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(v159 + 16) == 2)
        {
          id v160 = *(id *)(v159 + 64);
          NSString v161 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          RoutingControl.identifier.getter();
          unint64_t v162 = v59;
          long long aBlock = 0;
          unint64_t v241 = 0xE000000000000000;
          _StringGuts.grow(_:)(23);
          swift_bridgeObjectRelease();
          long long aBlock = (void **)0xD000000000000014;
          unint64_t v241 = 0x80000001003B4B40;
          v163._countAndFlagsBits = v237;
          v163._object = v87;
          String.append(_:)(v163);
          swift_bridgeObjectRelease();
          v164._countAndFlagsBits = 62;
          v164._object = (void *)0xE100000000000000;
          String.append(_:)(v164);
          id v165 = objc_allocWithZone((Class)MRRequestDetails);
          NSString v166 = String._bridgeToObjectiveC()();
          NSString v167 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          NSString v168 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v169 = [v165 initWithName:v166 requestID:v167 reason:v168];

          unint64_t v170 = (void *)swift_allocObject();
          id v171 = v231;
          v170[2] = v231;
          v170[3] = sub_1002F3AA4;
          v170[4] = v162;
          v170[5] = sub_1002F7370;
          v170[6] = v236;
          id v244 = sub_1002F74A0;
          id v245 = v170;
          long long aBlock = _NSConcreteStackBlock;
          unint64_t v241 = 1107296256;
          uint64_t v242 = sub_1001872F8;
          unint64_t v243 = &unk_100428EC8;
          uint64_t v172 = _Block_copy(&aBlock);
          id v173 = v171;
          swift_retain();
          id v174 = v173;
          swift_retain();
          swift_release();
          LODWORD(v175) = v36;
          [v160 setOutputDeviceVolume:v161 outputDevice:v169 details:v174 queue:v172 completion:v175];
          _Block_release(v172);
          swift_release();
          swift_release();

LABEL_60:
          unsigned __int8 v142 = &v246;
          goto LABEL_61;
        }
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v187 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v188 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v187 - 8) + 104))(v189, enum case for InternalRoutingError.sessionNotFound(_:), v187);
    uint64_t v190 = MRDFastSyncGroupSessionState.rawValue.getter(v188, v237, v87, 2);
    uint64_t v192 = v191;
    uint64_t v194 = v193;
    unsigned __int8 v196 = v195;
    sub_1002F3AA4(v190, v191, v193, v195);
    swift_errorRelease();
    sub_1001859D4(v192, v194, v196);

    swift_release();
    goto LABEL_60;
  }
LABEL_69:
  v211(v215, v217);
  long long aBlock = 0;
  unint64_t v241 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v197._countAndFlagsBits = 91;
  v197._object = (void *)0xE100000000000000;
  String.append(_:)(v197);
  v198._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v198);
  swift_bridgeObjectRelease();
  v199._countAndFlagsBits = 0xD000000000000016;
  v199._object = (void *)0x80000001003B4AE0;
  String.append(_:)(v199);
  v200._countAndFlagsBits = v53;
  v200._object = v52;
  String.append(_:)(v200);
  v201._countAndFlagsBits = 0xD00000000000001CLL;
  v201._object = (void *)0x80000001003B4B20;
  String.append(_:)(v201);
  uint64_t v202 = v216;
  RoutingControl.target.getter();
  sub_1002F14AC(&qword_100478D80, (void (*)(uint64_t))&type metadata accessor for RoutingControl.Target);
  v203._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v203);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void *))(v62 + 8))(v202, v57);
LABEL_71:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002E56BC(uint64_t a1, uint64_t a2, void (*a3)(void, void, void, void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9)
{
  uint64_t v24 = a8;
  uint64_t v25 = a2;
  uint64_t v27 = a1;
  uint64_t v28 = a4;
  uint64_t v26 = a3;
  uint64_t v13 = type metadata accessor for RoutingControl();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + v17 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v19 = (v18 + 11) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v20 + v17, v16, v13);
  *(float *)(v20 + v18) = a9;
  uint64_t v21 = (void *)(v20 + v19);
  void *v21 = a6;
  v21[1] = a7;
  *(void *)(v20 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8)) = v24;
  swift_bridgeObjectRetain();
  sub_1002D33AC(v25, v26, v28, (uint64_t (*)(void))sub_1002F75CC, v20);
  return swift_release();
}

uint64_t sub_1002E5864(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, float a6)
{
  uint64_t v52 = a5;
  v53._countAndFlagsBits = a3;
  v53._object = a4;
  uint64_t v55 = type metadata accessor for RoutingControl();
  uint64_t v51 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v56 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v50 - v17;
  uint64_t v19 = type metadata accessor for RoutingControl.Target();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  RoutingControl.target.getter();
  int v23 = (*(uint64_t (**)(uint64_t *, uint64_t))(v20 + 88))(v22, v19);
  if (v23 != enum case for RoutingControl.Target.session(_:))
  {
    if (v23 != enum case for RoutingControl.Target.item(_:))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v54, a2, v55);
      uint64_t v57 = 0;
      unint64_t v58 = 0xE000000000000000;
      _StringGuts.grow(_:)(61);
      v45._countAndFlagsBits = 91;
      v45._object = (void *)0xE100000000000000;
      String.append(_:)(v45);
      v46._countAndFlagsBits = _typeName(_:qualified:)();
      String.append(_:)(v46);
      swift_bridgeObjectRelease();
      v47._object = (void *)0x80000001003B4AE0;
      v47._countAndFlagsBits = 0xD000000000000016;
      String.append(_:)(v47);
      String.append(_:)(v53);
      v48._countAndFlagsBits = 0xD000000000000020;
      v48._object = (void *)0x80000001003BA590;
      String.append(_:)(v48);
      sub_1002F14AC(&qword_100478970, (void (*)(uint64_t))&type metadata accessor for RoutingControl);
      v49._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v49);
      swift_bridgeObjectRelease();
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    (*(void (**)(uint64_t *, uint64_t))(v20 + 96))(v22, v19);
    uint64_t v28 = *v22;
    uint64_t v27 = v22[1];
    if (*a1 == sub_10029F394() && a1[1] == v29)
    {
      swift_bridgeObjectRelease();
      sub_1002F2874((uint64_t)a1, (uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
    }
    else
    {
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      sub_1002F2874((uint64_t)a1, (uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v26 = 0;
      if ((v31 & 1) == 0) {
        goto LABEL_34;
      }
    }
    uint64_t v35 = *((void *)v16 + 4);
    uint64_t v36 = *(void *)(v35 + 16);
    if (!v36)
    {
      uint64_t v26 = 0;
      goto LABEL_34;
    }
    uint64_t v37 = v35 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
    uint64_t v38 = *(void *)(v56 + 72);
    uint64_t v56 = *((void *)v16 + 4);
    swift_bridgeObjectRetain();
    while (sub_10029F540() != v28 || v39 != v27)
    {
      char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      sub_1002F2874(v37, (uint64_t)v12, type metadata accessor for HostedRoutingItem);
      if (v40) {
        goto LABEL_27;
      }
      sub_1002F5F00((uint64_t)v12, type metadata accessor for HostedRoutingItem);
LABEL_22:
      v37 += v38;
      if (!--v36)
      {
        uint64_t v26 = 0;
LABEL_33:
        swift_bridgeObjectRelease();
LABEL_34:
        sub_1002F5F00((uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
        swift_bridgeObjectRelease();
        return v26;
      }
    }
    swift_bridgeObjectRelease();
    sub_1002F2874(v37, (uint64_t)v12, type metadata accessor for HostedRoutingItem);
LABEL_27:
    uint64_t v41 = &v12[*(int *)(v10 + 48)];
    float v42 = *(float *)v41;
    char v43 = v41[4];
    sub_1002F5F00((uint64_t)v12, type metadata accessor for HostedRoutingItem);
    if ((v43 & 1) == 0 && v42 == a6)
    {
      uint64_t v26 = 1;
      goto LABEL_33;
    }
    goto LABEL_22;
  }
  (*(void (**)(uint64_t *, uint64_t))(v20 + 96))(v22, v19);
  if (*a1 == *v22 && a1[1] == v22[1])
  {
    swift_bridgeObjectRelease();
    sub_1002F2874((uint64_t)a1, (uint64_t)v18, type metadata accessor for HostedRoutingSourceSession);
  }
  else
  {
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    sub_1002F2874((uint64_t)a1, (uint64_t)v18, type metadata accessor for HostedRoutingSourceSession);
    if ((v25 & 1) == 0)
    {
      sub_1002F5F00((uint64_t)v18, type metadata accessor for HostedRoutingSourceSession);
      return 0;
    }
  }
  uint64_t v32 = &v18[*(int *)(v13 + 48)];
  float v33 = *(float *)v32;
  char v34 = v32[4];
  sub_1002F5F00((uint64_t)v18, type metadata accessor for HostedRoutingSourceSession);
  return (v34 & 1) == 0 && v33 == a6;
}

uint64_t sub_1002E5F2C(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v12 = a2;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v13 = a2;
  LOBYTE(a2) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (a2)
  {
    if (a1)
    {
      swift_errorRetain();
      swift_errorRetain();
      MRDFastSyncGroupSessionState.rawValue.getter(a1, 0, 0, 4);
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      unsigned __int8 v20 = v19;
      a3();
      swift_errorRelease();
      sub_1001859D4(v16, v18, v20);
      return swift_errorRelease();
    }
    else
    {
      return a5(result);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E60C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v30 = a2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v10 - 8);
  uint64_t v28 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RoutingControl();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  uint64_t v19 = v25;
  uint64_t v20 = v26;
  *((void *)v18 + 2) = a1;
  *((void *)v18 + 3) = v19;
  *((void *)v18 + 4) = v20;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v18[v17], v16, v13);
  aBlock[4] = sub_1002F7088;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100428E50;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = a1;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  char v31 = _swiftEmptyArrayStorage;
  sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
  return swift_release();
}

void sub_1002E645C(uint64_t a1, void *a2)
{
}

void sub_1002E6464(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1002E64D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(v14, a2);
    (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v12 + 16))(v3, a3, v9, ObjectType, v12);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t sub_1002E6634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for RoutingInteraction();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_pendingInteractions);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v12;
  *uint64_t v12 = 0x8000000000000000;
  sub_1001B782C((uint64_t)sub_1001B9920, v11, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v12 = v15;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_endAccess();
}

uint64_t sub_1002E67C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E6634(a1, a2, a3);
}

void sub_1002E67EC()
{
  uint64_t v1 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  id v4 = (char *)v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RoutingMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v85 = 0xD00000000000002BLL;
  unint64_t v86 = 0x80000001003B9EE0;
  v84._uint64_t countAndFlagsBits = 0;
  v84._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  uint64_t v9 = swift_bridgeObjectRelease();
  strcpy((char *)&v84, "Routing Mode: ");
  HIBYTE(v84._object) = -18;
  (*(void (**)(uint64_t))(*(void *)v0 + 304))(v9);
  sub_1002F14AC(&qword_100478960, (void (*)(uint64_t))&type metadata accessor for RoutingMode);
  v10._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11._uint64_t countAndFlagsBits = 10;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  String.append(_:)(v84);
  swift_bridgeObjectRelease();
  strcpy((char *)&v84, "Timeline:\n");
  BYTE3(v84._object) = 0;
  HIDWORD(v84._object) = -369098752;
  v12._uint64_t countAndFlagsBits = sub_100245840();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  String.append(_:)(v84);
  uint64_t v13 = swift_bridgeObjectRelease();
  strcpy((char *)&v84, "\nSessions:\n");
  HIDWORD(v84._object) = -352321536;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 328))(v13);
  int64_t v15 = *(void *)(v14 + 16);
  uint64_t v79 = v0;
  if (v15)
  {
    v81._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
    sub_100014688(0, v15, 0);
    uint64_t v16 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v78 = v14;
    uint64_t v17 = v14 + ((v16 + 32) & ~v16);
    uint64_t v18 = *(void *)(v2 + 72);
    do
    {
      sub_1002F2874(v17, (uint64_t)v4, type metadata accessor for HostedRoutingSourceSession);
      v83._uint64_t countAndFlagsBits = 538976288;
      v83._object = (void *)0xE400000000000000;
      v19._uint64_t countAndFlagsBits = sub_1002A4278();
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = v83._countAndFlagsBits;
      object = v83._object;
      sub_1002F5F00((uint64_t)v4, type metadata accessor for HostedRoutingSourceSession);
      id v22 = (void *)v81._countAndFlagsBits;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100014688(0, v22[2] + 1, 1);
        id v22 = (void *)v81._countAndFlagsBits;
      }
      unint64_t v24 = v22[2];
      unint64_t v23 = v22[3];
      if (v24 >= v23 >> 1)
      {
        sub_100014688(v23 > 1, v24 + 1, 1);
        id v22 = (void *)v81._countAndFlagsBits;
      }
      v22[2] = v24 + 1;
      uint64_t v25 = &v22[2 * v24];
      v25[4] = countAndFlagsBits;
      v25[5] = object;
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v22 = _swiftEmptyArrayStorage;
  }
  v83._uint64_t countAndFlagsBits = (uint64_t)v22;
  uint64_t v26 = sub_100013A80(&qword_10047A080);
  uint64_t v27 = sub_1000155BC((unint64_t *)&qword_1004789C0, &qword_10047A080);
  uint64_t v28 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = v28;
  v31._object = v30;
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = 10;
  v32._object = (void *)0xE100000000000000;
  String.append(_:)(v32);
  String.append(_:)(v84);
  swift_bridgeObjectRelease();
  v84._uint64_t countAndFlagsBits = 0;
  v84._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  v83._uint64_t countAndFlagsBits = 0xD000000000000013;
  v83._object = (void *)0x80000001003B9F10;
  swift_beginAccess();
  uint64_t v33 = swift_bridgeObjectRetain();
  char v34 = sub_1002BBEC8(v33);
  uint64_t v78 = 0;
  swift_bridgeObjectRelease();
  v81._uint64_t countAndFlagsBits = (uint64_t)v34;
  uint64_t v35 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  v38._uint64_t countAndFlagsBits = v35;
  v38._object = v37;
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  v39._uint64_t countAndFlagsBits = 10;
  v39._object = (void *)0xE100000000000000;
  String.append(_:)(v39);
  String.append(_:)(v83);
  swift_bridgeObjectRelease();
  v83._uint64_t countAndFlagsBits = 0;
  v83._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  v83._uint64_t countAndFlagsBits = 0xD000000000000016;
  v83._object = (void *)0x80000001003B9F30;
  id v40 = sub_1002BC8B8();
  id v41 = [v40 availableEndpoints];

  if (!v41) {
    goto LABEL_26;
  }
  sub_10018FE08(0, &qword_10047C9D0);
  unint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v43) {
      goto LABEL_13;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    Swift::String v45 = _swiftEmptyArrayStorage;
LABEL_24:
    v81._uint64_t countAndFlagsBits = (uint64_t)v45;
    uint64_t v58 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v60 = v59;
    swift_bridgeObjectRelease();
    v61._uint64_t countAndFlagsBits = v58;
    v61._object = v60;
    String.append(_:)(v61);
    swift_bridgeObjectRelease();
    v62._uint64_t countAndFlagsBits = 10;
    v62._object = (void *)0xE100000000000000;
    String.append(_:)(v62);
    String.append(_:)(v83);
    swift_bridgeObjectRelease();
    v83._uint64_t countAndFlagsBits = 0;
    v83._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(26);
    swift_bridgeObjectRelease();
    v81._uint64_t countAndFlagsBits = 0xD000000000000017;
    v81._object = (void *)0x80000001003B48F0;
    swift_beginAccess();
    uint64_t v63 = swift_bridgeObjectRetain();
    uint64_t v64 = sub_1002BC10C(v63);
    swift_bridgeObjectRelease();
    v82._uint64_t countAndFlagsBits = v64;
    uint64_t v65 = BidirectionalCollection<>.joined(separator:)();
    char v67 = v66;
    swift_bridgeObjectRelease();
    v68._uint64_t countAndFlagsBits = v65;
    v68._object = v67;
    String.append(_:)(v68);
    swift_bridgeObjectRelease();
    v69._uint64_t countAndFlagsBits = 10;
    v69._object = (void *)0xE100000000000000;
    String.append(_:)(v69);
    String.append(_:)(v81);
    swift_bridgeObjectRelease();
    v81._uint64_t countAndFlagsBits = 0;
    v81._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    v82._uint64_t countAndFlagsBits = 0xD000000000000014;
    v82._object = (void *)0x80000001003B9F50;
    swift_beginAccess();
    uint64_t v70 = swift_bridgeObjectRetain();
    uint64_t v71 = sub_1002BC4D4(v70);
    swift_bridgeObjectRelease();
    uint64_t v80 = v71;
    uint64_t v72 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v74 = v73;
    swift_bridgeObjectRelease();
    v75._uint64_t countAndFlagsBits = v72;
    v75._object = v74;
    String.append(_:)(v75);
    swift_bridgeObjectRelease();
    v76._uint64_t countAndFlagsBits = 10;
    v76._object = (void *)0xE100000000000000;
    String.append(_:)(v76);
    String.append(_:)(v82);
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v43) {
    goto LABEL_23;
  }
LABEL_13:
  v82._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
  sub_100014688(0, v43 & ~(v43 >> 63), 0);
  if ((v43 & 0x8000000000000000) == 0)
  {
    v77[1] = v27;
    v77[2] = v26;
    uint64_t v44 = 0;
    Swift::String v45 = (void *)v82._countAndFlagsBits;
    do
    {
      if ((v42 & 0xC000000000000001) != 0) {
        id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v46 = *(id *)(v42 + 8 * v44 + 32);
      }
      Swift::String v47 = v46;
      v81._uint64_t countAndFlagsBits = 538976288;
      v81._object = (void *)0xE400000000000000;
      id v48 = [v46 description];
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v51 = v50;

      v52._uint64_t countAndFlagsBits = v49;
      v52._object = v51;
      String.append(_:)(v52);

      swift_bridgeObjectRelease();
      uint64_t v53 = v81._countAndFlagsBits;
      uint64_t v54 = v81._object;
      v82._uint64_t countAndFlagsBits = (uint64_t)v45;
      unint64_t v56 = v45[2];
      unint64_t v55 = v45[3];
      if (v56 >= v55 >> 1)
      {
        sub_100014688(v55 > 1, v56 + 1, 1);
        Swift::String v45 = (void *)v82._countAndFlagsBits;
      }
      ++v44;
      v45[2] = v56 + 1;
      uint64_t v57 = &v45[2 * v56];
      v57[4] = v53;
      v57[5] = v54;
    }
    while (v43 != v44);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_1002E720C()
{
}

void sub_1002E7230(uint64_t *a1, void (*a2)(void, void), uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v170 = a5;
  id v169 = a4;
  uint64_t v172 = a2;
  double v175 = a1;
  uint64_t v174 = *v5;
  uint64_t v7 = type metadata accessor for RoutingInteraction();
  uint64_t v8 = *(void **)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v10 = &v152[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v157 = type metadata accessor for HostedRoutingSourceSession(0);
  __chkstk_darwin(v157);
  Swift::String v12 = &v152[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  char v158 = &v152[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v15);
  id v160 = &v152[-v18];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v156 = &v152[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v155 = &v152[-v22];
  __chkstk_darwin(v21);
  unint64_t v24 = &v152[-v23];
  uint64_t v171 = RoutingInteraction.identifier.getter();
  unint64_t v26 = v25;
  uint64_t v27 = sub_1001A69C4();
  uint64_t v176 = v14;
  uint64_t v28 = v14;
  uint64_t v29 = v175;
  uint64_t v30 = *(void (**)(void))(v28 + 16);
  uint64_t v161 = v27;
  uint64_t v173 = v13;
  uint64_t v163 = v28 + 16;
  unint64_t v162 = (void (*)(unsigned char *, uint64_t, uint64_t))v30;
  v30(v24);
  Swift::String v164 = v12;
  sub_1002F2874((uint64_t)v29, (uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
  NSString v166 = (void (**)(void, void))v8;
  Swift::String v31 = (void (*)(unsigned char *, uint64_t, uint64_t))v8[2];
  id v165 = v10;
  uint64_t v167 = v7;
  v31(v10, a3, v7);
  swift_bridgeObjectRetain_n();
  Swift::String v32 = v172;
  swift_retain_n();
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  int v35 = v34;
  BOOL v36 = os_log_type_enabled(v33, v34);
  unint64_t v168 = v26;
  if (v36)
  {
    uint64_t v37 = swift_slowAlloc();
    int v153 = v35;
    uint64_t v38 = v37;
    uint64_t v154 = swift_slowAlloc();
    aBlock[0] = v154;
    *(_DWORD *)uint64_t v38 = 136316162;
    uint64_t v39 = _typeName(_:qualified:)();
    uint64_t v179 = sub_10018A9E0(v39, v40, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v179 = sub_10018A9E0(v171, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v38 + 22) = 2080;
    sub_1002F14AC(&qword_100479590, (void (*)(uint64_t))type metadata accessor for HostedRoutingSourceSession);
    uint64_t v41 = (uint64_t)v164;
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v179 = sub_10018A9E0(v42, v43, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002F5F00(v41, type metadata accessor for HostedRoutingSourceSession);
    *(_WORD *)(v38 + 32) = 2080;
    uint64_t v179 = (uint64_t)v32;
    type metadata accessor for RoutingInteraction.Action.HandoffContext();
    sub_1002F14AC(&qword_10047CEB0, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action.HandoffContext);
    uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v179 = sub_10018A9E0(v44, v45, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 42) = 2080;
    sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    id v46 = v165;
    uint64_t v47 = v167;
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v179 = sub_10018A9E0(v48, v49, aBlock);
    uint64_t v29 = v175;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (**)(id, uint64_t))v166)[1](v46, v47);
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v153, "[%s] pullContentFromSession_new<%s> - session: %s, context: %s, for: %s", (uint8_t *)v38, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1002F5F00((uint64_t)v164, type metadata accessor for HostedRoutingSourceSession);
    swift_release_n();
    ((void (**)(id, uint64_t))v166)[1](v165, v167);
  }

  uint64_t v50 = *(void (**)(unsigned char *, uint64_t))(v176 + 8);
  uint64_t v51 = v173;
  v50(v24, v173);
  uint64_t v52 = v29[3];
  if (!v52)
  {
    unint64_t v85 = v158;
    v162(v158, v161, v51);
    unint64_t v86 = v168;
    swift_bridgeObjectRetain();
    uint64_t v87 = Logger.logObject.getter();
    os_log_type_t v88 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 136315394;
      uint64_t v172 = (void (*)(void, void))v50;
      uint64_t v90 = _typeName(_:qualified:)();
      uint64_t v179 = sub_10018A9E0(v90, v91, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v89 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v179 = sub_10018A9E0(v171, v86, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "[%s] pullContentFromSession_new<%s> - failing because source session is not endpoint sourced", (uint8_t *)v89, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v172(v158, v51);
LABEL_23:
      uint64_t v96 = v169;
      uint64_t v97 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v98 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v97 - 8) + 104))(v99, enum case for InternalRoutingError.sessionNotFound(_:), v97);
      uint64_t v100 = *v29;
      uint64_t v101 = v29[1];
      swift_bridgeObjectRetain();
      MRDFastSyncGroupSessionState.rawValue.getter(v98, v100, v101, 2);
      uint64_t v103 = v102;
      uint64_t v105 = v104;
      unsigned __int8 v107 = v106;
      v96();
      swift_errorRelease();
      sub_1001859D4(v103, v105, v107);
      return;
    }
LABEL_22:

    swift_bridgeObjectRelease_n();
    v50(v85, v51);
    goto LABEL_23;
  }
  uint64_t v53 = v29[2];
  uint64_t v54 = (uint64_t *)(v159 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess();
  uint64_t v55 = *v54;
  unint64_t v56 = v168;
  uint64_t v57 = v174;
  if (!*(void *)(v55 + 16))
  {
LABEL_20:
    unint64_t v85 = v160;
    v162(v160, v161, v51);
    swift_bridgeObjectRetain();
    uint64_t v87 = Logger.logObject.getter();
    os_log_type_t v92 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v87, v92))
    {
      uint64_t v93 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v93 = 136315394;
      uint64_t v94 = _typeName(_:qualified:)();
      uint64_t v177 = sub_10018A9E0(v94, v95, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v177 = sub_10018A9E0(v171, v56, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v87, v92, "[%s] pullContentFromSession_new<%s> - failing because no connected entry for endpoint-sourced session", (uint8_t *)v93, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v50(v160, v173);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v58 = sub_100013660(v53, v52);
  if ((v59 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v60 = *(void *)(*(void *)(v55 + 56) + 8 * v58);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v60 + 16) != 2)
  {
    swift_release();
    goto LABEL_20;
  }
  id v61 = [*(id *)(v60 + 64) origin];
  id v62 = [self server];
  id v63 = [v62 nowPlayingServer];

  uint64_t v64 = (void (**)(void, void))v61;
  id v65 = [v63 originClientForOrigin:v61];

  if (v65)
  {
    NSString v166 = v64;
    uint64_t v66 = v65;
    uint64_t v67 = RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter();
    unint64_t v69 = v68;
    NSString v70 = String._bridgeToObjectiveC()();
    id v165 = v66;
    id v71 = [v66 existingNowPlayingClientForDisplayID:v70];

    if (v71)
    {
      uint64_t v167 = v60;
      sub_10018FE08(0, &qword_10047AC18);
      if (sub_10030B17C(v67, v69))
      {
        sub_10030B054();
        swift_beginAccess();
      }
      swift_bridgeObjectRetain();
      char v72 = sub_10030B194(v67, v69);
      swift_bridgeObjectRelease();
      uint64_t v73 = v171;
      if (v72)
      {
        swift_bridgeObjectRelease();
        sub_10030B130();
        swift_beginAccess();
        swift_bridgeObjectRetain();
      }
      id v74 = [self localOrigin];
      id v75 = objc_allocWithZone((Class)MRPlayerPath);
      NSString v76 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v77 = [v75 initWithOrigin:v74 bundleIdentifier:v76 player:0];

      uint64_t v78 = (void *)(*(uint64_t (**)(void))(*(void *)v159 + 280))();
      sub_10018FE08(0, &qword_100478950);
      id v79 = sub_1002FF8A8();
      if (dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.getter())
      {
        self;
        uint64_t v80 = (void *)swift_dynamicCastObjCClassUnconditional();
        Swift::String v81 = (void *)swift_allocObject();
        uint64_t v81[2] = v73;
        v81[3] = v56;
        uint64_t v82 = v170;
        v81[4] = v169;
        v81[5] = v82;
        v81[6] = v78;
        v81[7] = v57;
        aBlock[4] = (uint64_t)sub_1002F560C;
        aBlock[5] = (uint64_t)v81;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1002EC3A0;
        aBlock[3] = (uint64_t)&unk_100428950;
        Swift::String v83 = _Block_copy(aBlock);
        swift_retain();
        id v84 = v78;
        swift_release();
        [v79 beginMusicHandoffSessionWithSource:v80 destination:v77 completion:v83];
        swift_release();

        _Block_release(v83);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      uint64_t v172 = (void (*)(void, void))v50;
      uint64_t v120 = v155;
      v162(v155, v161, v51);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v121 = Logger.logObject.getter();
      os_log_type_t v122 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v121, v122))
      {
        uint64_t v123 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v123 = 136315650;
        uint64_t v124 = _typeName(_:qualified:)();
        uint64_t v167 = v60;
        uint64_t v177 = sub_10018A9E0(v124, v125, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v123 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v177 = sub_10018A9E0(v171, v56, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v123 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v177 = sub_10018A9E0(v67, v69, aBlock);
        uint64_t v29 = v175;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v121, v122, "[%s] pullContentFromSession_new<%s> - failing because no source client found for: %s", (uint8_t *)v123, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v126 = v155;
        uint64_t v127 = v173;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        uint64_t v126 = v120;
        uint64_t v127 = v51;
      }
      v172(v126, v127);
      id v140 = v169;
      uint64_t v141 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v142 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v141 - 8) + 104))(v143, enum case for InternalRoutingError.unsupportedOperation(_:), v141);
      uint64_t v144 = *v29;
      uint64_t v145 = v29[1];
      swift_bridgeObjectRetain();
      MRDFastSyncGroupSessionState.rawValue.getter(v142, v144, v145, 2);
      uint64_t v147 = v146;
      uint64_t v149 = v148;
      unsigned __int8 v151 = v150;
      v140();
      swift_errorRelease();
      sub_1001859D4(v147, v149, v151);
      swift_release();
    }
  }
  else
  {
    uint64_t v172 = (void (*)(void, void))v50;
    uint64_t v108 = v156;
    v162(v156, v161, v51);
    uint64_t v109 = v64;
    swift_bridgeObjectRetain();
    uint64_t v110 = v109;
    unsigned __int8 v111 = Logger.logObject.getter();
    os_log_type_t v112 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v111, v112))
    {
      uint64_t v113 = swift_slowAlloc();
      uint64_t v114 = (void *)swift_slowAlloc();
      NSString v166 = (void (**)(void, void))swift_slowAlloc();
      aBlock[0] = (uint64_t)v166;
      *(_DWORD *)uint64_t v113 = 136315650;
      uint64_t v115 = _typeName(_:qualified:)();
      uint64_t v167 = v60;
      uint64_t v177 = sub_10018A9E0(v115, v116, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v113 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v177 = sub_10018A9E0(v171, v56, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v113 + 22) = 2112;
      uint64_t v177 = (uint64_t)v110;
      uint64_t v117 = v110;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v114 = v110;

      _os_log_impl((void *)&_mh_execute_header, v111, v112, "[%s] pullContentFromSession_new<%s> - failing because no source origin client found for: %@", (uint8_t *)v113, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v118 = v156;
      uint64_t v119 = v173;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v118 = v108;
      uint64_t v119 = v51;
    }
    v172(v118, v119);
    uint64_t v128 = v169;
    uint64_t v129 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v130 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v129 - 8) + 104))(v131, enum case for InternalRoutingError.sessionNotFound(_:), v129);
    uint64_t v132 = *v175;
    uint64_t v133 = v175[1];
    swift_bridgeObjectRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(v130, v132, v133, 2);
    uint64_t v135 = v134;
    uint64_t v137 = v136;
    unsigned __int8 v139 = v138;
    v128();
    swift_errorRelease();
    sub_1001859D4(v135, v137, v139);
    swift_release();
  }
}

uint64_t sub_1002E88F8(void *a1, uint64_t a2, unint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(void), void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  id v192 = a8;
  uint64_t v191 = a7;
  uint64_t v209 = a6;
  unint64_t v208 = (unint64_t)a5;
  uint64_t v218 = a1;
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v186 = (char *)&v169 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v185 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v184 = (char *)&v169 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for DispatchTime();
  uint64_t v210 = *(void *)(v199 - 8);
  uint64_t v19 = __chkstk_darwin(v199);
  uint64_t v183 = (char *)&v169 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  Swift::String v198 = (char *)&v169 - v21;
  uint64_t v22 = sub_100013A80(&qword_100478278);
  __chkstk_darwin(v22 - 8);
  uint64_t v176 = (char *)&v169 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  double v175 = (char *)&v169 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = (void *)sub_100013A80((uint64_t *)&unk_10047BF40);
  uint64_t v181 = *(v182 - 1);
  __chkstk_darwin(v182);
  uint64_t v179 = (char *)&v169 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v204 = *(void *)(v212 - 8);
  uint64_t v26 = __chkstk_darwin(v212);
  Swift::String v197 = (char *)&v169 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v202 = (uint64_t)&v169 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  Swift::String v200 = (char *)&v169 - v31;
  uint64_t v195 = v32;
  __chkstk_darwin(v30);
  char v214 = (char *)&v169 - v33;
  uint64_t v211 = type metadata accessor for ContinuousClock();
  uint64_t v203 = *(void *)(v211 - 8);
  uint64_t v34 = __chkstk_darwin(v211);
  uint64_t v180 = (char *)&v169 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  Swift::String v201 = (char *)&v169 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v194 = (char *)&v169 - v39;
  uint64_t v193 = v40;
  __chkstk_darwin(v38);
  uint64_t v216 = (char *)&v169 - v41;
  uint64_t v42 = type metadata accessor for Logger();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v205 = (uint64_t)&v169 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v190 = (char *)&v169 - v47;
  __chkstk_darwin(v46);
  unint64_t v49 = (char *)&v169 - v48;
  uint64_t v50 = sub_1001A6A14();
  uint64_t v213 = v43;
  uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
  uint64_t v207 = v43 + 16;
  Swift::String v206 = v51;
  v51((uint64_t)v49, v50, v42);
  swift_bridgeObjectRetain_n();
  id v52 = a4;
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.default.getter();
  LODWORD(v196) = v54;
  BOOL v55 = os_log_type_enabled(v53, v54);
  uint64_t v215 = a2;
  uint64_t v217 = a11;
  uint64_t v189 = v14;
  uint64_t v188 = v15;
  uint64_t v187 = v17;
  if (v55)
  {
    uint64_t v56 = swift_slowAlloc();
    unint64_t v219 = a3;
    uint64_t v57 = v56;
    uint64_t v174 = (void *)swift_slowAlloc();
    aBlock[0] = v174;
    *(_DWORD *)uint64_t v57 = 136315650;
    uint64_t v58 = _typeName(_:qualified:)();
    uint64_t v222 = sub_10018A9E0(v58, v59, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v222 = sub_10018A9E0(a2, v219, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v57 + 22) = 2080;
    id v60 = [v52 report];
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v63 = v62;

    uint64_t v222 = sub_10018A9E0(v61, v63, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v196, "[%s] pullContentFromSession<%s> - report: %s", (uint8_t *)v57, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v219;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v64 = *(void (**)(char *, uint64_t))(v213 + 8);
  v64(v49, v42);
  id v65 = v218;
  if (v218)
  {
    swift_errorRetain();
    uint64_t v66 = sub_1001A69C4();
    uint64_t v67 = v205;
    v206(v205, v66, v42);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    unint64_t v68 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      unsigned __int8 v196 = (void (*)(uint64_t, uint64_t))v64;
      uint64_t v71 = v70;
      char v72 = (void *)swift_slowAlloc();
      aBlock[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = 136315650;
      uint64_t v73 = _typeName(_:qualified:)();
      uint64_t v222 = sub_10018A9E0(v73, v74, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v222 = sub_10018A9E0(v215, a3, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v71 + 22) = 2112;
      swift_errorRetain();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v222 = v75;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v72 = v75;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "[%s] pullContentFromSession<%s> - failed with error: %@.", (uint8_t *)v71, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      id v65 = v218;
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v196(v205, v42);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      v64((char *)v67, v42);
    }
    uint64_t v94 = (void (*)(void))v208;
    swift_errorRetain();
    unint64_t v95 = sub_1002A0458();
    uint64_t v96 = *(void *)v95;
    uint64_t v97 = *((void *)v95 + 1);
    swift_bridgeObjectRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(v65, v96, v97, 2);
    uint64_t v99 = v98;
    uint64_t v101 = v100;
    unsigned __int8 v103 = v102;
    v94();
    swift_errorRelease();
    sub_1001859D4(v99, v101, v103);
    return swift_errorRelease();
  }
  else
  {
    unsigned __int8 v196 = (void (*)(uint64_t, uint64_t))v64;
    uint64_t v205 = a9;
    NSString v76 = (void *)swift_allocObject();
    uint64_t v77 = v209;
    uint64_t v76[2] = v208;
    v76[3] = v77;
    uint64_t v78 = v191;
    uint64_t v79 = v215;
    unsigned char v76[4] = v191;
    v76[5] = v79;
    uint64_t v80 = v192;
    v76[6] = a3;
    v76[7] = v80;
    v76[8] = v217;
    swift_bridgeObjectRetain();
    swift_retain();
    Swift::String v81 = v78;
    id v192 = v80;
    ContinuousClock.init()();
    ContinuousClock.now.getter();
    uint64_t v82 = sub_1001A69C4();
    Swift::String v83 = v190;
    v206((uint64_t)v190, v82, v42);
    swift_bridgeObjectRetain_n();
    id v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.default.getter();
    BOOL v86 = os_log_type_enabled(v84, v85);
    uint64_t v218 = v76;
    unint64_t v219 = a3;
    if (v86)
    {
      uint64_t v87 = swift_slowAlloc();
      aBlock[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v87 = 136315394;
      uint64_t v88 = _typeName(_:qualified:)();
      uint64_t v222 = sub_10018A9E0(v88, v89, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v87 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v222 = sub_10018A9E0(v215, a3, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v84, v85, "[%s] pullContentFromSession<%s> - wait for stability", (uint8_t *)v87, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v196((uint64_t)v83, v42);
    uint64_t v91 = v211;
    uint64_t v90 = v212;
    uint64_t v92 = v204;
    uint64_t v93 = v203;
    uint64_t v105 = swift_allocObject();
    uint64_t v209 = v105;
    *(void *)(v105 + 16) = 0;
    uint64_t v171 = v105 + 16;
    unsigned __int8 v106 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
    unsigned __int8 v107 = v194;
    v106(v194, v216, v91);
    uint64_t v108 = *(void (**)(void))(v92 + 16);
    uint64_t v109 = v200;
    v108();
    uint64_t v207 = v93 + 16;
    Swift::String v206 = (void (*)(uint64_t, uint64_t, uint64_t))v106;
    v106(v201, v107, v91);
    unsigned __int8 v196 = (void (*)(uint64_t, uint64_t))(v92 + 16);
    uint64_t v191 = v108;
    ((void (*)(uint64_t, char *, uint64_t))v108)(v202, v109, v90);
    uint64_t v110 = *(unsigned __int8 *)(v93 + 80);
    uint64_t v111 = (v110 + 32) & ~v110;
    uint64_t v112 = *(unsigned __int8 *)(v92 + 80);
    uint64_t v190 = (char *)(v193 + v112);
    uint64_t v113 = (v193 + v112 + v111) & ~v112;
    uint64_t v193 = v110;
    uint64_t v170 = v112;
    uint64_t v173 = v195 + 7;
    unint64_t v114 = (v195 + 7 + v113) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v115 = (v114 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v208 = (v115 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v195 = v110 | v112 | 7;
    uint64_t v116 = swift_allocObject();
    uint64_t v117 = v91;
    uint64_t v118 = v116;
    uint64_t v119 = v209;
    *(void *)(v116 + 16) = v205;
    *(void *)(v116 + 24) = v119;
    uint64_t v120 = *(void (**)(void, void, void))(v93 + 32);
    uint64_t v194 = (char *)(v93 + 32);
    uint64_t v174 = v120;
    v120(v116 + v111, v107, v117);
    uint64_t v121 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
    os_log_type_t v122 = v200;
    Swift::String v200 = (char *)(v92 + 32);
    uint64_t v172 = v121;
    v121((char *)(v118 + v113), v122, v212);
    uint64_t v123 = (void *)(v118 + v114);
    unint64_t v125 = (uint64_t (*)())v218;
    unint64_t v124 = v219;
    void *v123 = v215;
    v123[1] = v124;
    uint64_t v126 = (uint64_t (**)())(v118 + v115);
    *uint64_t v126 = sub_1002F5924;
    v126[1] = v125;
    uint64_t v213 = v118;
    *(void *)(v118 + v208) = v217;
    uint64_t v127 = self;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v128 = [v127 defaultCenter];
    if (kMRMediaRemoteNowPlayingInfoDidChangeNotification)
    {
      uint64_t v129 = v128;
      uint64_t v130 = v193;
      uint64_t v169 = ~v193;
      unint64_t v208 = ~v170;
      id v131 = kMRMediaRemoteNowPlayingInfoDidChangeNotification;
      uint64_t v132 = v175;
      NSNotificationCenter.publisher(for:object:)();

      aBlock[0] = (id)(*(uint64_t (**)(void))(*(void *)a10 + 280))();
      uint64_t v133 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      uint64_t v134 = (uint64_t)v176;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v176, 1, 1, v133);
      sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
      sub_1002F14AC((unint64_t *)&unk_10047BF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      sub_1001BB4CC();
      uint64_t v135 = v179;
      uint64_t v136 = v178;
      Publisher.receive<A>(on:options:)();
      sub_100009A08(v134, &qword_100478278);

      (*(void (**)(char *, uint64_t))(v177 + 8))(v132, v136);
      uint64_t v137 = swift_allocObject();
      uint64_t v138 = v213;
      *(void *)(v137 + 16) = sub_1002F5B30;
      *(void *)(v137 + 24) = v138;
      sub_1000155BC((unint64_t *)&qword_10047BF60, (uint64_t *)&unk_10047BF40);
      swift_retain();
      unsigned __int8 v139 = v182;
      uint64_t v140 = Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, void *))(v181 + 8))(v135, v139);
      swift_beginAccess();
      v119[2].Class isa = (Class)v140;
      swift_release();
      uint64_t v141 = v183;
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v142 = *(void **)(v210 + 8);
      v210 += 8;
      uint64_t v182 = v142;
      ((void (*)(char *, uint64_t))v142)(v141, v199);
      uint64_t v143 = v180;
      uint64_t v144 = v211;
      v206((uint64_t)v180, (uint64_t)v216, v211);
      uint64_t v145 = v212;
      ((void (*)(char *, char *, uint64_t))v191)(v197, v214, v212);
      uint64_t v146 = (v130 + 24) & v169;
      unint64_t v147 = (unint64_t)&v190[v146] & v208;
      unint64_t v148 = (v173 + v147) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v149 = (v148 + 23) & 0xFFFFFFFFFFFFFFF8;
      unsigned __int8 v150 = (char *)swift_allocObject();
      *((void *)v150 + 2) = v119;
      ((void (*)(char *, char *, uint64_t))v174)(&v150[v146], v143, v144);
      v172(&v150[v147], v197, v145);
      unsigned __int8 v151 = &v150[v148];
      unint64_t v152 = v219;
      *(void *)unsigned __int8 v151 = v215;
      *((void *)v151 + 1) = v152;
      int v153 = (uint64_t (**)())&v150[v149];
      unint64_t v208 = (unint64_t)sub_1002F5924;
      uint64_t v154 = (uint64_t)v218;
      *int v153 = sub_1002F5924;
      v153[1] = (uint64_t (*)())v154;
      *(void *)&v150[(v149 + 23) & 0xFFFFFFFFFFFFFFF8] = v217;
      aBlock[4] = sub_1002F5DE4;
      aBlock[5] = v150;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_100006760;
      aBlock[3] = &unk_100428A90;
      uint64_t v155 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      uint64_t v156 = v119;
      swift_retain();
      swift_retain();
      uint64_t v157 = v184;
      static DispatchQoS.unspecified.getter();
      unint64_t v220 = _swiftEmptyArrayStorage;
      sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100013A80((uint64_t *)&unk_100479AE0);
      sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
      char v158 = v186;
      uint64_t v159 = v189;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v160 = v198;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v155);
      (*(void (**)(char *, uint64_t))(v188 + 8))(v158, v159);
      (*(void (**)(char *, uint64_t))(v185 + 8))(v157, v187);
      ((void (*)(char *, uint64_t))v182)(v160, v199);
      swift_release();
      uint64_t v161 = v156;
      uint64_t v162 = (uint64_t)v201;
      uint64_t v163 = v202;
      sub_1002EA788(v205, v161, (uint64_t)v201, v202, v215, v152, (void (*)(uint64_t))v208, v154);
      swift_release();
      swift_release();
      swift_release();
      Swift::String v164 = *(void (**)(uint64_t, uint64_t))(v204 + 8);
      uint64_t v165 = v212;
      v164(v163, v212);
      NSString v166 = *(void (**)(uint64_t, uint64_t))(v203 + 8);
      uint64_t v167 = v162;
      uint64_t v168 = v211;
      v166(v167, v211);
      v164((uint64_t)v214, v165);
      v166((uint64_t)v216, v168);
      return swift_release();
    }
    else
    {
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v202, v212);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v203 + 8))(v201, v211);
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1002EA130(void (*a1)(void, void, void, void), uint64_t a2, void *a3, uint64_t a4, unint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v62 = a7;
  uint64_t v58 = a6;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v61 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v60 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(0, 0, 0, 0);
  MRSystemAppPlaybackQueueCreate();
  uint64_t ExternalRepresentation = MRSystemAppPlaybackQueueCreateExternalRepresentation();
  if (!ExternalRepresentation) {
    __break(1u);
  }
  uint64_t v14 = (void *)ExternalRepresentation;
  uint64_t v59 = v11;
  uint64_t v57 = a4;
  uint64_t v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  uint64_t v18 = self;
  sub_100013A80(&qword_10047CEC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
  uint64_t v20 = (void *)kMRMediaRemoteOptionSystemAppPlaybackQueueData;
  *(void *)(inited + 32) = kMRMediaRemoteOptionSystemAppPlaybackQueueData;
  *(void *)(inited + 40) = v15;
  *(void *)(inited + 48) = v17;
  id v21 = v20;
  sub_10018FE44(v15, v17);
  sub_1002E3C04(inited);
  sub_100013A80(&qword_100479570);
  sub_1001E70CC();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v23 = [v18 dataWithPropertyList:isa format:200 options:0 error:aBlock];

  id v24 = aBlock[0];
  if (v23)
  {
    uint64_t v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;

    id v28 = objc_allocWithZone((Class)MRDRemoteControlCommand);
    id v29 = a3;
    sub_10018FE44(v25, v27);
    NSString v30 = String._bridgeToObjectiveC()();
    Class v31 = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v56 = v25;
    uint64_t v32 = v25;
    unint64_t v33 = v27;
    sub_10018FE9C(v32, v27);
    id v55 = [v28 initWithCommandType:122 playerPath:v29 unresolvedPlayerPath:v29 senderAppDisplayID:v30 optionsData:v31];

    uint64_t v34 = sub_1001A69C4();
    uint64_t v36 = v60;
    uint64_t v35 = v61;
    uint64_t v37 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v34, v59);
    swift_bridgeObjectRetain_n();
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      os_log_type_t v54 = (void *)swift_slowAlloc();
      aBlock[0] = v54;
      *(_DWORD *)uint64_t v40 = 136315394;
      uint64_t v41 = _typeName(_:qualified:)();
      uint64_t v63 = sub_10018A9E0(v41, v42, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v43 = v57;
      uint64_t v63 = sub_10018A9E0(v57, a5, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "[%s] pullContentFromSession<%s> - clearing source queue.", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v59);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
      uint64_t v43 = v57;
    }
    id v44 = [self server];
    id v45 = [v44 remoteControlServer];

    uint64_t v46 = (void *)swift_allocObject();
    uint64_t v47 = v58;
    v46[2] = v58;
    v46[3] = v43;
    uint64_t v48 = v62;
    v46[4] = a5;
    v46[5] = v48;
    aBlock[4] = sub_1002F5F7C;
    aBlock[5] = v46;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1002E645C;
    aBlock[3] = &unk_100428AE0;
    unint64_t v49 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v50 = v47;
    swift_release();
    uint64_t v51 = v55;
    [v45 sendRemoteControlCommand:v55 completion:v49];
    _Block_release(v49);

    sub_10018FE9C(v56, v33);
    return sub_10018FE9C(v15, v17);
  }
  else
  {
    uint64_t v53 = v24;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EA788(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v82 = a8;
  Swift::String v83 = a7;
  unint64_t v80 = a6;
  uint64_t v71 = a5;
  uint64_t v85 = a3;
  uint64_t v86 = a4;
  os_log_t v84 = a2;
  uint64_t v88 = a1;
  uint64_t v8 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  uint64_t v78 = *(void *)(v8 - 8);
  uint64_t v79 = v8;
  __chkstk_darwin(v8);
  NSString v76 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  uint64_t v75 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v73 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  uint64_t v72 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v74 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v87 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v81 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100013A80(&qword_1004794C0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018FE08(0, &qword_100478950);
  id v26 = sub_1002FF8A8();
  sub_1002FF908(v25);

  uint64_t v27 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v25, 1, v27) == 1)
  {
    sub_100009A08((uint64_t)v25, &qword_1004794C0);
    sub_1002ACEF4();
    return swift_bridgeObjectRelease();
  }
  id v65 = v13;
  uint64_t v66 = v16;
  uint64_t v67 = v11;
  uint64_t v68 = v14;
  os_log_type_t v69 = v19;
  uint64_t v28 = v87;
  uint64_t v70 = v22;
  id v30 = *(id *)v25;
  uint64_t v29 = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  sub_1002F5F00((uint64_t)v25, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
  id v31 = sub_1002ACEF4();
  if (!v29) {
    return swift_bridgeObjectRelease();
  }
  if (v30 == v31 && v29 == v32)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_t v33 = v84;
  }
  else
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    os_log_t v33 = v84;
    if ((v35 & 1) == 0) {
      return result;
    }
  }
  uint64_t v36 = v33 + 2;
  uint64_t result = swift_beginAccess();
  if (v36->isa)
  {
    uint64_t v37 = v70;
    ContinuousClock.now.getter();
    uint64_t v38 = ContinuousClock.Instant.duration(to:)();
    uint64_t v88 = v39;
    uint64_t v40 = sub_1001A69C4();
    uint64_t v41 = v28;
    unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    uint64_t v43 = v69;
    uint64_t v44 = v17;
    v42(v69, v40, v17);
    unint64_t v45 = v80;
    swift_bridgeObjectRetain_n();
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    int v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v86 = v44;
      uint64_t v49 = swift_slowAlloc();
      os_log_t v84 = v46;
      uint64_t v50 = v49;
      uint64_t v85 = swift_slowAlloc();
      v89[0] = v85;
      *(_DWORD *)uint64_t v50 = 136315650;
      int v64 = v48;
      uint64_t v51 = _typeName(_:qualified:)();
      uint64_t v90 = sub_10018A9E0(v51, v52, v89);
      uint64_t v63 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_10018A9E0(v71, v45, v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v50 + 22) = 2080;
      unint64_t v80 = v50 + 24;
      sub_100013A80(&qword_100478D50);
      type metadata accessor for Duration.UnitsFormatStyle.Unit();
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_1003C5BA0;
      static Duration.UnitsFormatStyle.Unit.seconds.getter();
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
      sub_1001BAA1C(v53);
      swift_setDeallocating();
      uint64_t v37 = v70;
      swift_arrayDestroy();
      swift_deallocClassInstance();
      os_log_type_t v54 = v65;
      static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter();
      id v55 = v73;
      static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
      uint64_t v56 = v76;
      static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
      uint64_t v57 = v66;
      static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v56, v79);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v55, v77);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v54, v67);
      sub_1002F14AC(&qword_100478D58, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
      uint64_t v58 = v68;
      Duration.formatted<A>(_:)();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v57, v58);
      uint64_t v90 = sub_10018A9E0(v90, v91, v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_t v59 = v84;
      _os_log_impl((void *)&_mh_execute_header, v84, (os_log_type_t)v64, "[%s] pullContentFromSession<%s> - stable after: %s", (uint8_t *)v50, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v87 + 8))(v43, v86);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v44);
    }
    id v60 = v83;
    uint64_t v61 = v81;
    swift_beginAccess();
    if (v36->isa)
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    swift_beginAccess();
    v36->Class isa = 0;
    uint64_t v62 = swift_release();
    v60(v62);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v37, v20);
  }
  return result;
}

uint64_t sub_1002EB1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v48 = a8;
  uint64_t v62 = a7;
  uint64_t v63 = a6;
  uint64_t v11 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  uint64_t v58 = *(void *)(v11 - 8);
  uint64_t v59 = v11;
  __chkstk_darwin(v11);
  uint64_t v56 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v51 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v53 = *(void *)(v16 - 8);
  uint64_t v54 = v16;
  __chkstk_darwin(v16);
  uint64_t v49 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for Logger();
  uint64_t v18 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v60 = *(void *)(v21 - 8);
  uint64_t v61 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 16))
  {
    ContinuousClock.now.getter();
    uint64_t v26 = ContinuousClock.Instant.duration(to:)();
    uint64_t v47 = v27;
    uint64_t v28 = sub_1001A69C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v28, v64);
    swift_bridgeObjectRetain_n();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      int v46 = v31;
      uint64_t v33 = v32;
      uint64_t v45 = swift_slowAlloc();
      v65[0] = v45;
      *(_DWORD *)uint64_t v33 = 136315650;
      os_log_t v44 = v29;
      uint64_t v34 = _typeName(_:qualified:)();
      uint64_t v43 = v26;
      uint64_t v66 = sub_10018A9E0(v34, v35, v65);
      uint64_t v48 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_10018A9E0(a4, a5, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 22) = 2080;
      sub_100013A80(&qword_100478D50);
      type metadata accessor for Duration.UnitsFormatStyle.Unit();
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1003C5BA0;
      static Duration.UnitsFormatStyle.Unit.seconds.getter();
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
      sub_1001BAA1C(v36);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter();
      uint64_t v37 = v51;
      static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
      uint64_t v38 = v56;
      static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
      uint64_t v39 = v49;
      static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v59);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v37, v57);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v52);
      sub_1002F14AC(&qword_100478D58, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
      uint64_t v40 = v54;
      Duration.formatted<A>(_:)();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v40);
      uint64_t v66 = sub_10018A9E0(v66, v67, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_t v41 = v44;
      _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v46, "[%s] pullContentFromSession<%s> - timed out waiting for stability after: %s", (uint8_t *)v33, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v64);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v64);
    }
    swift_beginAccess();
    if (*v24)
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    swift_beginAccess();
    *uint64_t v24 = 0;
    uint64_t v42 = swift_release();
    v63(v42);
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v23, v61);
  }
  return result;
}

uint64_t sub_1002EB9D0(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v85 = a8;
  uint64_t v86 = a3;
  id v81 = a1;
  uint64_t v82 = a7;
  uint64_t v88 = a5;
  uint64_t v89 = a6;
  unint64_t v87 = a4;
  uint64_t v9 = sub_100013A80(&qword_100478278);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v70[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v83 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = &v70[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_100013A80((uint64_t *)&unk_10047BF40);
  uint64_t v84 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = &v70[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = &v70[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  uint64_t v24 = &v70[-v23];
  if (a2)
  {
    uint64_t v25 = a2;
    swift_errorRetain();
    uint64_t v26 = sub_1001A69C4();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 16))(v22, v26, v18);
    unint64_t v27 = v87;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v80 = v18;
      uint64_t v31 = v30;
      uint64_t v32 = (void *)swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      uint64_t v91 = v84;
      *(_DWORD *)uint64_t v31 = 136315650;
      uint64_t v33 = _typeName(_:qualified:)();
      uint64_t v79 = v19;
      uint64_t v90 = sub_10018A9E0(v33, v34, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_10018A9E0(v86, v27, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 22) = 2112;
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v90 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v32 = v35;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%s] pullContentFromSession_new<%s> - failed to begin session with error: %@", (uint8_t *)v31, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v22, v80);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v22, v18);
    }
    swift_errorRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(v25, 1, 0, 4);
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    unsigned __int8 v55 = v54;
    v88();
    swift_errorRelease();
    sub_1001859D4(v51, v53, v55);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v75 = v14;
    uint64_t v76 = v12;
    uint64_t v77 = v11;
    uint64_t v78 = v17;
    uint64_t v36 = sub_1001A69C4();
    uint64_t v37 = v19;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 16))(v24, v36, v18);
    id v38 = v81;
    id v39 = v81;
    unint64_t v40 = v87;
    swift_bridgeObjectRetain_n();
    uint64_t v41 = v18;
    id v42 = v39;
    uint64_t v43 = Logger.logObject.getter();
    int v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      int v71 = v44;
      os_log_t v74 = v43;
      uint64_t v79 = v37;
      uint64_t v80 = v41;
      uint64_t v45 = swift_slowAlloc();
      uint64_t v72 = (void *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v91 = v73;
      *(_DWORD *)uint64_t v45 = 136315650;
      uint64_t v46 = _typeName(_:qualified:)();
      uint64_t v90 = sub_10018A9E0(v46, v47, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_10018A9E0(v86, v40, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 22) = 2112;
      uint64_t v48 = v83;
      if (v38)
      {
        uint64_t v90 = (uint64_t)v42;
        id v49 = v42;
      }
      else
      {
        uint64_t v90 = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v57 = v15;
      void *v72 = v38;

      os_log_t v62 = v74;
      _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v71, "[%s] pullContentFromSession_new<%s> - began session: %@", (uint8_t *)v45, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v24, v80);
      uint64_t v61 = v89;
      uint64_t v58 = v84;
      uint64_t v60 = (uint64_t)v77;
      uint64_t v59 = v78;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v24, v41);
      uint64_t v57 = v15;
      uint64_t v48 = v83;
      uint64_t v58 = v84;
      uint64_t v60 = (uint64_t)v77;
      uint64_t v59 = v78;
      uint64_t v61 = v89;
    }
    uint64_t v63 = v75;
    uint64_t v64 = v82;
    id v65 = [self defaultCenter];
    NSNotificationCenter.publisher(for:object:)();

    uint64_t v91 = v64;
    uint64_t v66 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v60, 1, 1, v66);
    sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
    sub_1002F14AC((unint64_t *)&unk_10047BF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
    sub_1001BB4CC();
    uint64_t v67 = v76;
    Publisher.receive<A>(on:options:)();
    sub_100009A08(v60, &qword_100478278);
    (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v63, v67);
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = v88;
    *(void *)(v68 + 24) = v61;
    uint64_t v69 = sub_1000155BC((unint64_t *)&qword_10047BF60, (uint64_t *)&unk_10047BF40);
    swift_retain();
    sub_100185438((uint64_t)sub_1002F561C, v68, v57, v69);
    swift_release();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v58 + 8))(v59, v57);
  }
}

void sub_1002EC3A0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1002EC42C(uint64_t a1, unint64_t a2, uint64_t *a3, NSObject *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v170 = a6;
  uint64_t v167 = a5;
  uint64_t v174 = a4;
  unint64_t v165 = a2;
  uint64_t v159 = a1;
  uint64_t v175 = *v6;
  uint64_t v8 = type metadata accessor for RoutingInteraction();
  uint64_t v178 = *(void *)(v8 - 8);
  uint64_t v179 = (void (*)(void, void))v8;
  __chkstk_darwin(v8);
  uint64_t v10 = &v152[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  char v158 = &v152[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v13);
  id v160 = &v152[-v16];
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v157 = &v152[-v18];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v156 = &v152[-v20];
  __chkstk_darwin(v19);
  uint64_t v22 = &v152[-v21];
  uint64_t v171 = RoutingInteraction.identifier.getter();
  unint64_t v24 = v23;
  unint64_t v25 = a3[1];
  uint64_t v176 = *a3;
  uint64_t v168 = a3;
  uint64_t v26 = *(uint64_t (**)(uint64_t))(*v6 + 280);
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v161 = v6;
  uint64_t v28 = (void *)v26(v27);
  uint64_t v29 = sub_1001A69C4();
  uint64_t v173 = v12;
  uint64_t v30 = *(void (**)(void))(v12 + 16);
  uint64_t v162 = v29;
  uint64_t v177 = v11;
  uint64_t v164 = v12 + 16;
  uint64_t v163 = (void (*)(unsigned char *, uint64_t, uint64_t))v30;
  v30(v22);
  uint64_t v31 = *(void (**)(unsigned char *, uint64_t, void (*)(void, void)))(v178 + 16);
  NSString v166 = v10;
  uint64_t v32 = v174;
  v31(v10, v167, v179);
  swift_bridgeObjectRetain_n();
  unint64_t v33 = v24;
  swift_bridgeObjectRetain_n();
  unint64_t v34 = v165;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v167 = (uint64_t)v22;
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  int v37 = v36;
  BOOL v38 = os_log_type_enabled(v35, v36);
  uint64_t v172 = v28;
  unint64_t v169 = v25;
  if (v38)
  {
    uint64_t v39 = swift_slowAlloc();
    os_log_t v154 = v35;
    uint64_t v40 = v39;
    uint64_t v155 = swift_slowAlloc();
    aBlock[0] = v155;
    *(_DWORD *)uint64_t v40 = 136316418;
    uint64_t v41 = _typeName(_:qualified:)();
    uint64_t v182 = sub_10018A9E0(v41, v42, aBlock);
    int v153 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v182 = sub_10018A9E0(v171, v24, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v182 = sub_10018A9E0(v159, v34, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v182 = sub_10018A9E0(v176, v25, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 42) = 2080;
    uint64_t v182 = (uint64_t)v32;
    type metadata accessor for RoutingInteraction.Action.HandoffContext();
    sub_1002F14AC(&qword_10047CEB0, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action.HandoffContext);
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v182 = sub_10018A9E0(v43, v44, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 52) = 2080;
    sub_1002F14AC(&qword_100478968, (void (*)(uint64_t))&type metadata accessor for RoutingInteraction);
    uint64_t v45 = v166;
    uint64_t v46 = v179;
    uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v182 = sub_10018A9E0(v47, v48, aBlock);
    uint64_t v28 = v172;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, void))(v178 + 8))(v45, v46);
    os_log_t v49 = v154;
    _os_log_impl((void *)&_mh_execute_header, v154, (os_log_type_t)v153, "[%s] handoffFromApplication_new<%s> - bundle: %s to session: %s, context: %s, for: %s", (uint8_t *)v40, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(void *, void))(v178 + 8))(v166, v179);
  }
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v173 + 8);
  uint64_t v51 = v177;
  v50(v167, v177);
  unint64_t v52 = v33;
  uint64_t v53 = v168[3];
  if (!v53)
  {
    uint64_t v80 = v158;
    v163(v158, v162, v51);
    swift_bridgeObjectRetain();
    id v81 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      uint64_t v179 = v50;
      aBlock[0] = v84;
      *(_DWORD *)uint64_t v83 = 136315394;
      uint64_t v85 = _typeName(_:qualified:)();
      uint64_t v182 = sub_10018A9E0(v85, v86, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v83 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v182 = sub_10018A9E0(v171, v52, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "[%s] handoffFromApplication_new<%s> - failing because sessions are not both endpoint sourced", (uint8_t *)v83, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v28 = v172;
      unint64_t v87 = v80;
LABEL_19:
      v179(v87, v177);
LABEL_22:
      uint64_t v96 = v176;
      uint64_t v97 = type metadata accessor for InternalRoutingError();
      sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
      uint64_t v98 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v97 - 8) + 104))(v99, enum case for InternalRoutingError.sessionNotFound(_:), v97);
      uint64_t v100 = MRDFastSyncGroupSessionState.rawValue.getter(v98, v96, v169, 2);
      uint64_t v102 = v101;
      uint64_t v104 = v103;
      unsigned __int8 v106 = v105;
      sub_1002F6340(v100, v101, v103, v105);
      swift_errorRelease();
      sub_1001859D4(v102, v104, v106);
      id v72 = v28;
      goto LABEL_23;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v88 = v80;
LABEL_21:
    v50((uint64_t)v88, v51);
    goto LABEL_22;
  }
  uint64_t v54 = v168[2];
  unsigned __int8 v55 = (uint64_t *)((char *)v161 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess();
  uint64_t v56 = *v55;
  if (!*(void *)(v56 + 16))
  {
LABEL_17:
    uint64_t v89 = v160;
    v163(v160, v162, v51);
    swift_bridgeObjectRetain();
    uint64_t v90 = Logger.logObject.getter();
    os_log_type_t v91 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      uint64_t v179 = v50;
      aBlock[0] = v93;
      *(_DWORD *)uint64_t v92 = 136315394;
      uint64_t v94 = _typeName(_:qualified:)();
      uint64_t v181 = sub_10018A9E0(v94, v95, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v181 = sub_10018A9E0(v171, v33, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v90, v91, "[%s] handoffFromApplication_new<%s> - failing because no connected entry for endpoint sourced sessions", (uint8_t *)v92, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v28 = v172;
      unint64_t v87 = v89;
      goto LABEL_19;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v88 = v89;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v57 = sub_100013660(v54, v53);
  if ((v58 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v59 = *(void *)(*(void *)(v56 + 56) + 8 * v57);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v59 + 16) != 2)
  {
    swift_release();
    uint64_t v51 = v177;
    goto LABEL_17;
  }
  uint64_t v179 = v50;
  id v60 = [*(id *)(v59 + 64) origin];
  id v61 = [self server];
  id v62 = [v61 nowPlayingServer];

  id v63 = [v62 originClientForOrigin:v60];
  uint64_t v178 = v59;
  if (!v63)
  {
    unsigned __int8 v107 = v157;
    uint64_t v108 = v177;
    v163(v157, v162, v177);
    id v109 = v60;
    swift_bridgeObjectRetain();
    id v72 = v109;
    uint64_t v110 = Logger.logObject.getter();
    uint64_t v111 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v110, (os_log_type_t)v111))
    {
      uint64_t v112 = swift_slowAlloc();
      uint64_t v113 = (void *)swift_slowAlloc();
      uint64_t v174 = swift_slowAlloc();
      aBlock[0] = (uint64_t)v174;
      *(_DWORD *)uint64_t v112 = 136315650;
      uint64_t v114 = _typeName(_:qualified:)();
      uint64_t v181 = sub_10018A9E0(v114, v115, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v112 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v181 = sub_10018A9E0(v171, v33, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v112 + 22) = 2112;
      uint64_t v181 = (uint64_t)v72;
      uint64_t v116 = v108;
      id v117 = v72;
      uint64_t v28 = v172;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v113 = v72;

      _os_log_impl((void *)&_mh_execute_header, v110, (os_log_type_t)v111, "[%s] handoffFromApplication_new<%s> - failing because no destination origin client found for: %@", (uint8_t *)v112, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v118 = v157;
      uint64_t v119 = v116;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v118 = v107;
      uint64_t v119 = v108;
    }
    v179(v118, v119);
    uint64_t v130 = v176;
    uint64_t v131 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v132 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v131 - 8) + 104))(v133, enum case for InternalRoutingError.sessionNotFound(_:), v131);
    uint64_t v134 = MRDFastSyncGroupSessionState.rawValue.getter(v132, v130, v169, 2);
    uint64_t v136 = v135;
    uint64_t v138 = v137;
    unsigned __int8 v140 = v139;
    sub_1002F6340(v134, v135, v137, v139);
    swift_errorRelease();
    sub_1001859D4(v136, v138, v140);

    swift_release();
    goto LABEL_23;
  }
  id v64 = [v63 deviceInfo];
  id v65 = [v64 systemMediaApplication];

  if (!v65)
  {
    uint64_t v120 = v156;
    v163(v156, v162, v177);
    swift_bridgeObjectRetain_n();
    id v121 = v63;
    swift_bridgeObjectRetain();
    id v72 = v121;
    os_log_type_t v122 = Logger.logObject.getter();
    os_log_type_t v123 = static os_log_type_t.error.getter();
    uint64_t v174 = v122;
    LODWORD(v168) = v123;
    if (os_log_type_enabled(v122, v123))
    {
      uint64_t v124 = swift_slowAlloc();
      NSString v166 = (void *)swift_slowAlloc();
      uint64_t v167 = swift_slowAlloc();
      aBlock[0] = v167;
      *(_DWORD *)uint64_t v124 = 136315906;
      uint64_t v125 = _typeName(_:qualified:)();
      uint64_t v181 = sub_10018A9E0(v125, v126, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v124 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v181 = sub_10018A9E0(v171, v33, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v124 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v181 = sub_10018A9E0(v159, v34, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v124 + 32) = 2112;
      uint64_t v181 = (uint64_t)v72;
      id v127 = v72;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v166 = v63;

      uint64_t v28 = v172;
      id v128 = v174;
      _os_log_impl((void *)&_mh_execute_header, v174, (os_log_type_t)v168, "[%s] handoffFromApplication_new<%s> - failing because unable to localize client: %s for destination origin client: %@", (uint8_t *)v124, 0x2Au);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v129 = v156;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v129 = v120;
    }
    v179(v129, v177);
    uint64_t v141 = v176;
    uint64_t v142 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v143 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v142 - 8) + 104))(v144, enum case for InternalRoutingError.unsupportedOperation(_:), v142);
    uint64_t v145 = MRDFastSyncGroupSessionState.rawValue.getter(v143, v141, v169, 2);
    uint64_t v147 = v146;
    uint64_t v149 = v148;
    unsigned __int8 v151 = v150;
    sub_1002F6340(v145, v146, v148, v150);
    swift_errorRelease();
    sub_1001859D4(v147, v149, v151);

    swift_release();
    goto LABEL_23;
  }
  uint64_t v66 = v171;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v67 = objc_allocWithZone((Class)MRPlayerPath);
  id v68 = v60;
  NSString v69 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v70 = [v67 initWithOrigin:v68 bundleIdentifier:v69 player:0];

  sub_10018FE08(0, &qword_100478950);
  id v71 = sub_1002FF8A8();
  if (dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.getter())
  {
    self;
    id v72 = (id)swift_dynamicCastObjCClassUnconditional();
    uint64_t v73 = (void *)swift_allocObject();
    v73[2] = v66;
    v73[3] = v33;
    uint64_t v74 = v170;
    v73[4] = sub_1002F6340;
    v73[5] = v74;
    unint64_t v75 = v169;
    v73[6] = v176;
    v73[7] = v75;
    uint64_t v76 = v172;
    uint64_t v77 = v175;
    v73[8] = v172;
    v73[9] = v77;
    aBlock[4] = (uint64_t)sub_1002F664C;
    aBlock[5] = (uint64_t)v73;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1002EC3A0;
    aBlock[3] = (uint64_t)&unk_100428BF8;
    uint64_t v78 = _Block_copy(aBlock);
    swift_retain();
    id v79 = v76;
    swift_release();
    [v71 beginMusicHandoffSessionWithSource:v72 destination:v70 completion:v78];
    _Block_release(v78);

    swift_release();
LABEL_23:

    return;
  }
  __break(1u);
}

uint64_t sub_1002EDA0C(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v76 = a7;
  uint64_t v77 = a8;
  uint64_t v78 = a6;
  unint64_t v75 = a5;
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  id v79 = (char *)v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v24 = (char *)v67 - v23;
  uint64_t v25 = sub_1001A6A14();
  id v71 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v71(v24, v25, v19);
  swift_bridgeObjectRetain_n();
  id v26 = a4;
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  uint64_t v74 = v27;
  int v68 = v28;
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v72 = a15;
  uint64_t v73 = a2;
  if (v29)
  {
    uint64_t v30 = swift_slowAlloc();
    v67[1] = v20 + 16;
    uint64_t v31 = v30;
    v67[0] = swift_slowAlloc();
    v82[0] = v67[0];
    *(_DWORD *)uint64_t v31 = 136315650;
    uint64_t v69 = v20;
    uint64_t v80 = a3;
    uint64_t v32 = _typeName(_:qualified:)();
    uint64_t v81 = sub_10018A9E0(v32, v33, v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v70 = v19;
    uint64_t v34 = a1;
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v81 = sub_10018A9E0(a2, v80, v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 22) = 2080;
    id v35 = [v26 report];
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v38 = v37;

    uint64_t v39 = v36;
    a1 = v34;
    uint64_t v19 = v70;
    uint64_t v81 = sub_10018A9E0(v39, v38, v82);
    uint64_t v20 = v69;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a3 = v80;
    swift_bridgeObjectRelease();
    uint64_t v40 = v74;
    _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v68, "[%s] handoffFromApplication<%s> - report: %s", (uint8_t *)v31, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v41 = *(void (**)(char *, uint64_t))(v20 + 8);
  v41(v24, v19);
  if (a1)
  {
    swift_errorRetain();
    uint64_t v42 = sub_1001A69C4();
    v71(v79, v42, v19);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v70 = v19;
      uint64_t v47 = (void *)v46;
      uint64_t v80 = swift_slowAlloc();
      v82[0] = v80;
      *(_DWORD *)uint64_t v45 = 136315650;
      uint64_t v48 = _typeName(_:qualified:)();
      uint64_t v69 = v20;
      uint64_t v81 = sub_10018A9E0(v48, v49, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v81 = sub_10018A9E0(v73, a3, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 22) = 2112;
      swift_errorRetain();
      uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v81 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v47 = v50;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "[%s] handoffFromApplication<%s> - failed with error: %@.", (uint8_t *)v45, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v51 = v70;
      unint64_t v52 = v79;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      unint64_t v52 = v79;
      uint64_t v51 = v19;
    }
    v41(v52, v51);
    uint64_t v60 = v77;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(a1, v76, v60, 2);
    uint64_t v62 = v61;
    uint64_t v64 = v63;
    unsigned __int8 v66 = v65;
    v75();
    swift_errorRelease();
    sub_1001859D4(v62, v64, v66);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v53 = (void *)swift_allocObject();
    uint64_t v54 = v78;
    v53[2] = v75;
    v53[3] = v54;
    v53[4] = a9;
    v53[5] = a10;
    v53[6] = v73;
    v53[7] = a3;
    uint64_t v55 = v72;
    v53[8] = a11;
    v53[9] = v55;
    uint64_t v56 = (void *)swift_allocObject();
    uint64_t v57 = v77;
    v56[2] = v76;
    v56[3] = v57;
    v56[4] = a14;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    id v58 = a11;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1002D33AC(a13, (void (*)(void, void, void, void))sub_1002F6A00, (uint64_t)v53, (uint64_t (*)(void))sub_1002F6A78, (uint64_t)v56);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1002EE12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, void *a11, uint64_t a12)
{
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v72 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v71 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5(a1, a2, a3, a4);
  MRSystemAppPlaybackQueueCreate();
  uint64_t ExternalRepresentation = MRSystemAppPlaybackQueueCreateExternalRepresentation();
  if (!ExternalRepresentation) {
    __break(1u);
  }
  uint64_t v20 = (void *)ExternalRepresentation;
  uint64_t v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v23 = v22;

  id v24 = [self localOrigin];
  id v25 = objc_allocWithZone((Class)MRPlayerPath);
  swift_bridgeObjectRetain();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = [v25 initWithOrigin:v24 bundleIdentifier:v26 player:0];

  os_log_type_t v28 = self;
  sub_100013A80(&qword_10047CEC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
  uint64_t v30 = (void *)kMRMediaRemoteOptionSystemAppPlaybackQueueData;
  *(void *)(inited + 32) = kMRMediaRemoteOptionSystemAppPlaybackQueueData;
  *(void *)(inited + 40) = v21;
  *(void *)(inited + 48) = v23;
  id v31 = v30;
  uint64_t v68 = v21;
  sub_10018FE44(v21, v23);
  sub_1002E3C04(inited);
  sub_100013A80(&qword_100479570);
  sub_1001E70CC();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v33 = [v28 dataWithPropertyList:isa format:200 options:0 error:aBlock];

  id v34 = aBlock[0];
  if (v33)
  {
    uint64_t v69 = a11;
    uint64_t v70 = a12;
    uint64_t v66 = a9;
    uint64_t v35 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v37 = v36;

    id v38 = objc_allocWithZone((Class)MRDRemoteControlCommand);
    id v39 = v27;
    sub_10018FE44(v35, v37);
    NSString v40 = String._bridgeToObjectiveC()();
    Class v41 = Data._bridgeToObjectiveC()().super.isa;
    sub_10018FE9C(v35, v37);
    id v67 = [v38 initWithCommandType:122 playerPath:v39 unresolvedPlayerPath:v39 senderAppDisplayID:v40 optionsData:v41];

    uint64_t v42 = sub_1001A69C4();
    os_log_type_t v44 = v71;
    uint64_t v43 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v71, v42, v17);
    unint64_t v73 = a10;
    swift_bridgeObjectRetain_n();
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v64 = v17;
      uint64_t v48 = v47;
      uint64_t v63 = (void *)swift_slowAlloc();
      aBlock[0] = v63;
      *(_DWORD *)uint64_t v48 = 136315394;
      uint64_t v49 = _typeName(_:qualified:)();
      uint64_t v74 = sub_10018A9E0(v49, v50, (uint64_t *)aBlock);
      unint64_t v65 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      unint64_t v51 = v73;
      swift_bridgeObjectRetain();
      uint64_t v52 = v66;
      uint64_t v74 = sub_10018A9E0(v66, v51, (uint64_t *)aBlock);
      unint64_t v37 = v65;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "[%s] handoffFromApplication<%s> - clearing source queue.", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v64);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v17);
      uint64_t v52 = v66;
    }
    id v53 = [self server];
    id v54 = [v53 remoteControlServer];

    uint64_t v55 = (void *)swift_allocObject();
    uint64_t v57 = v69;
    uint64_t v56 = v70;
    v55[2] = v69;
    v55[3] = v52;
    unsigned char v55[4] = v73;
    v55[5] = v56;
    aBlock[4] = sub_1002F6AA0;
    aBlock[5] = v55;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1002E645C;
    aBlock[3] = &unk_100428CC0;
    id v58 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v59 = v57;
    swift_release();
    uint64_t v60 = v67;
    [v54 sendRemoteControlCommand:v67 completion:v58];
    _Block_release(v58);

    sub_10018FE9C(v35, v37);
    return sub_10018FE9C(v68, v23);
  }
  else
  {
    uint64_t v62 = v34;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EE818(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v27 = a2;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DispatchQoS();
  uint64_t v16 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a1;
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = a5;
  aBlock[4] = v24;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006760;
  aBlock[3] = v25;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = a1;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  os_log_type_t v28 = _swiftEmptyArrayStorage;
  sub_1002F14AC((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1000155BC((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v26);
  return swift_release();
}

id sub_1002EEADC(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  id result = (id)__chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id result = [a1 error];
    if (result)
    {
      uint64_t v14 = result;
      uint64_t v15 = sub_1001A69C4();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v15, v9);
      swift_bridgeObjectRetain_n();
      id v16 = v14;
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.error.getter();
      int v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v27 = a2;
        uint64_t v21 = v20;
        uint64_t v30 = (void *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t v33 = v31;
        *(_DWORD *)uint64_t v21 = 136315650;
        int v29 = v19;
        uint64_t v22 = _typeName(_:qualified:)();
        uint64_t v32 = sub_10018A9E0(v22, v23, &v33);
        os_log_type_t v28 = a5;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_10018A9E0(v27, a3, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v21 + 22) = 2112;
        id v24 = v16;
        uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v32 = v25;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v30 = v25;

        _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v29, v28, (uint8_t *)v21, 0x20u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  return result;
}

uint64_t sub_1002EEE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100013A80(&qword_1004794C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (void **)((char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for HostedRoutingSourceSession(0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return 0;
  }
  uint64_t v14 = (void *)(a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));
  uint64_t v29 = *(void *)(v10 + 72);
  v27[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v28 = a2;
  while (1)
  {
    if (*v14 == a2 && v14[1] == a3)
    {
      sub_1002F2874((uint64_t)v14, (uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1002F2874((uint64_t)v14, (uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
      if ((v16 & 1) == 0)
      {
        sub_1002F5F00((uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
        goto LABEL_4;
      }
    }
    sub_1001E71E8((uint64_t)&v12[*(int *)(v9 + 28)], (uint64_t)v8, &qword_1004794C0);
    uint64_t v17 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v8, 1, v17) == 1)
    {
      sub_100009A08((uint64_t)v8, &qword_1004794C0);
      sub_1002ACEF4();
LABEL_20:
      sub_1002F5F00((uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    uint64_t v18 = a3;
    uint64_t v19 = v9;
    id v20 = *v8;
    uint64_t v21 = v8[1];
    swift_bridgeObjectRetain();
    sub_1002F5F00((uint64_t)v8, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
    id v22 = sub_1002ACEF4();
    if (!v21)
    {
      uint64_t v9 = v19;
      a3 = v18;
      a2 = v28;
      goto LABEL_20;
    }
    if (v20 == v22 && v21 == v23) {
      break;
    }
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    sub_1002F5F00((uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
    swift_bridgeObjectRelease();
    uint64_t v9 = v19;
    a3 = v18;
    a2 = v28;
    if (v24) {
      goto LABEL_24;
    }
LABEL_4:
    uint64_t v14 = (void *)((char *)v14 + v29);
    if (!--v13)
    {
      uint64_t v25 = 0;
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  sub_1002F5F00((uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
  swift_bridgeObjectRelease();
LABEL_24:
  uint64_t v25 = 1;
LABEL_25:
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1002EF198(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v91 = a8;
  uint64_t v92 = a7;
  uint64_t v93 = a6;
  uint64_t v89 = a3;
  unint64_t v90 = a4;
  uint64_t v85 = a1;
  uint64_t v88 = a10;
  uint64_t v12 = sub_100013A80(&qword_100478278);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v72[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v86 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = &v72[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_100013A80((uint64_t *)&unk_10047BF40);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = &v72[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v94 = &v72[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  if (a2)
  {
    uint64_t v27 = a5;
    swift_errorRetain();
    uint64_t v28 = sub_1001A69C4();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v23 + 16))(v94, v28, v22);
    unint64_t v29 = v90;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v85 = (void *)swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      uint64_t v96 = v86;
      *(_DWORD *)uint64_t v32 = 136315650;
      uint64_t v84 = v23;
      uint64_t v33 = _typeName(_:qualified:)();
      uint64_t v95 = sub_10018A9E0(v33, v34, &v96);
      unint64_t v87 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v95 = sub_10018A9E0(v89, v29, &v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 22) = 2112;
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v95 = v35;
      unint64_t v36 = v87;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v85 = v35;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%s] handoffFromApplication_new<%s> - failed to begin session with error: %@", (uint8_t *)v32, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v94, v22);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v94, v22);
      unint64_t v36 = v27;
    }
    swift_errorRetain();
    uint64_t v52 = v91;
    swift_bridgeObjectRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(a2, v92, v52, 2);
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    unsigned __int8 v58 = v57;
    v36();
    swift_errorRelease();
    sub_1001859D4(v54, v56, v58);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v79 = v15;
    uint64_t v80 = v17;
    uint64_t v81 = v14;
    os_log_type_t v82 = v21;
    uint64_t v83 = v19;
    uint64_t v94 = (unsigned char *)v18;
    unint64_t v87 = a5;
    uint64_t v37 = a9;
    id v38 = &v72[-v26];
    uint64_t v39 = sub_1001A69C4();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v23 + 16))(v38, v39, v22);
    NSString v40 = v85;
    Class v41 = v85;
    unint64_t v42 = v90;
    swift_bridgeObjectRetain_n();
    uint64_t v43 = v41;
    os_log_type_t v44 = Logger.logObject.getter();
    int v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, (os_log_type_t)v45))
    {
      int v73 = v45;
      os_log_t v75 = v44;
      uint64_t v76 = v38;
      uint64_t v77 = a9;
      uint64_t v78 = v22;
      uint64_t v84 = v23;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = (void *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v96 = v74;
      *(_DWORD *)uint64_t v46 = 136315650;
      uint64_t v48 = _typeName(_:qualified:)();
      uint64_t v95 = sub_10018A9E0(v48, v49, &v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v95 = sub_10018A9E0(v89, v42, &v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 22) = 2112;
      uint64_t v50 = (uint64_t)v81;
      if (v40)
      {
        uint64_t v95 = (uint64_t)v43;
        unint64_t v51 = v43;
      }
      else
      {
        uint64_t v95 = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v61 = (uint64_t)v94;
      uint64_t v62 = v82;
      *uint64_t v47 = v40;

      os_log_t v66 = v75;
      _os_log_impl((void *)&_mh_execute_header, v75, (os_log_type_t)v73, "[%s] handoffFromApplication_new<%s> - began session: %@", (uint8_t *)v46, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v76, v78);
      uint64_t v60 = v93;
      uint64_t v63 = v79;
      uint64_t v64 = v80;
      uint64_t v65 = v86;
      uint64_t v37 = v77;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v38, v22);
      uint64_t v60 = v93;
      uint64_t v61 = (uint64_t)v94;
      uint64_t v50 = (uint64_t)v81;
      uint64_t v62 = v82;
      uint64_t v63 = v79;
      uint64_t v64 = v80;
      uint64_t v65 = v86;
    }
    id v67 = [self defaultCenter];
    NSNotificationCenter.publisher(for:object:)();

    uint64_t v96 = v37;
    uint64_t v68 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v50, 1, 1, v68);
    sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
    sub_1002F14AC((unint64_t *)&unk_10047BF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
    sub_1001BB4CC();
    Publisher.receive<A>(on:options:)();
    sub_100009A08(v50, &qword_100478278);
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v64, v63);
    uint64_t v69 = (void *)swift_allocObject();
    v69[2] = v87;
    uint64_t v69[3] = v60;
    uint64_t v70 = v91;
    v69[4] = v92;
    v69[5] = v70;
    uint64_t v71 = sub_1000155BC((unint64_t *)&qword_10047BF60, (uint64_t *)&unk_10047BF40);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100185438((uint64_t)sub_1002F66E0, (uint64_t)v69, v61, v71);
    swift_release();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v83 + 8))(v62, v61);
  }
}

uint64_t sub_1002EFBC4(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100013A80(&qword_100478F38);
  uint64_t v10 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1002F2AB4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

unint64_t sub_1002EFE2C(uint64_t a1)
{
  type metadata accessor for RoutingSessionConfiguration.ItemType();
  sub_1002F14AC(&qword_100479510, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1002EFFE8(a1, v2, (uint64_t (*)(void))&type metadata accessor for RoutingSessionConfiguration.ItemType, &qword_100479518, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType, (uint64_t)&protocol conformance descriptor for RoutingSessionConfiguration.ItemType);
}

unint64_t sub_1002EFF00(void *a1)
{
  Hasher.init(_seed:)();
  if (a1)
  {
    Hasher._combine(_:)(1u);
    type metadata accessor for CFString(0);
    sub_1002F14AC(&qword_10047CED0, type metadata accessor for CFString);
    id v2 = a1;
    _CFObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Swift::Int v3 = Hasher._finalize()();

  return sub_1002F0188((uint64_t)a1, v3);
}

unint64_t sub_1002EFFE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    unint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    BOOL v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_1002F14AC(v23, v24);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1002F0188(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = v2;
    uint64_t v8 = ~v4;
    do
    {
      uint64_t v9 = *(void **)(*(void *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        if (a1)
        {
          type metadata accessor for CFString(0);
          sub_1002F14AC(&qword_10047CED0, type metadata accessor for CFString);
          id v10 = v9;
          char v11 = static _CFObject.== infix(_:_:)();

          if (v11) {
            return v5;
          }
        }
      }
      else if (!a1)
      {
        return v5;
      }
      unint64_t v5 = (v5 + 1) & v8;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_1002F02A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100013660(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002F192C();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1001F1A4C(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1002F0378(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100013660(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002F2680();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1001F1A4C(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1002F0458(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100013A80(&qword_10047CEA0);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1002F0770(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100013A80((uint64_t *)&unk_10047CEE0);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  unint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  NSString v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_1002F14AC(&qword_100479510, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1002F0B94(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100013A80(&qword_10047CEA8);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1002F0E9C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1002F14AC(&qword_100479510, (void (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            unint64_t v23 = (void *)(v22 + 8 * a1);
            unint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *unint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *int64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1002F1194(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100013660(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1002F192C();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1002F0458(v15, a4 & 1);
  unint64_t v21 = sub_100013660(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1002F1304(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1002EFE2C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1002F1AE4();
    goto LABEL_7;
  }
  sub_1002F0770(v17, a3 & 1);
  unint64_t v23 = sub_1002EFE2C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1002F1874(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1002F14AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1002F14F4()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_14;
  }
  uint64_t v1 = v0;
  if (!kMRMediaRemoteActiveEndpointTypeUserInfoKey)
  {
    __break(1u);
    goto LABEL_19;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10018C3C4((uint64_t)v11), (v3 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10018FFC8((uint64_t)v11);
  if (!*((void *)&v13 + 1))
  {
LABEL_14:
    sub_100009A08((uint64_t)&v12, &qword_100479F50);
    return;
  }
  if ((swift_dynamicCast() & 1) == 0 || v11[0]) {
    return;
  }
  id v4 = [self server];
  id v5 = [v4 routingServer];

  id v6 = [v5 systemEndpointController];
  if (!v6)
  {
LABEL_19:
    __break(1u);
    return;
  }
  id v7 = [v6 activeOutputDeviceUID:0];

  if (v7)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  sub_1002C5A90(v8, v10);
  swift_bridgeObjectRelease();
}

uint64_t sub_1002F16C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1002F170C(uint64_t a1, uint64_t a2, char a3, double a4)
{
  id v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100013660(a1, a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1002F2680();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_1002F0B94(result, a3 & 1);
  uint64_t result = sub_100013660(a1, a2);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v20 = a1;
  v20[1] = a2;
  *(double *)(v18[7] + 8 * v12) = a4;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1002F1874(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_1002F192C()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_10047CEA0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002F1AE4()
{
  uint64_t v1 = type metadata accessor for RoutingSessionConfiguration.ItemType();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100013A80((uint64_t *)&unk_10047CEE0);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1002F1D7C()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_1002F1E80(void (*a1)(void **), uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = *(void **)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + v7);
  uint64_t v11 = *(void *)(v2 + v8);
  uint64_t v12 = *(void **)(v2 + v8 + 8);
  uint64_t v13 = *(void *)(v2 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_1002C24E0(a1, a2, v9, v2 + v6, v10, v11, v12, v13);
}

uint64_t sub_1002F1F4C()
{
  return type metadata accessor for HostedRoutingSessionDataSource();
}

uint64_t type metadata accessor for HostedRoutingSessionDataSource()
{
  uint64_t result = qword_100483A58;
  if (!qword_100483A58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002F1FA0()
{
  uint64_t result = type metadata accessor for RoutingMode();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t type metadata accessor for HostedRoutingSessionDataSource.EndpointEntry()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for HostedRoutingSessionDataSource.EndpointEntry.DataSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002F218CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HostedRoutingSessionDataSource.EndpointEntry.DataSource()
{
  return &type metadata for HostedRoutingSessionDataSource.EndpointEntry.DataSource;
}

uint64_t getEnumTagSinglePayload for HostedRoutingSessionDataSource.EndpointEntry.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HostedRoutingSessionDataSource.EndpointEntry.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002F2320);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HostedRoutingSessionDataSource.EndpointEntry.State()
{
  return &type metadata for HostedRoutingSessionDataSource.EndpointEntry.State;
}

uint64_t destroy for HostedRoutingSessionDataSource.SessionElements()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s12mediaremoted30HostedRoutingSessionDataSourceC15SessionElementsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HostedRoutingSessionDataSource.SessionElements(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HostedRoutingSessionDataSource.SessionElements(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HostedRoutingSessionDataSource.SessionElements(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HostedRoutingSessionDataSource.SessionElements(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HostedRoutingSessionDataSource.SessionElements()
{
  return &type metadata for HostedRoutingSessionDataSource.SessionElements;
}

unint64_t sub_1002F2524()
{
  unint64_t result = qword_100483AF0;
  if (!qword_100483AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100483AF0);
  }
  return result;
}

unint64_t sub_1002F257C()
{
  unint64_t result = qword_100483C00[0];
  if (!qword_100483C00[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100483C00);
  }
  return result;
}

unint64_t sub_1002F25D4()
{
  unint64_t result = qword_100483D90[0];
  if (!qword_100483D90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100483D90);
  }
  return result;
}

unint64_t sub_1002F262C()
{
  unint64_t result = qword_100483FA0[0];
  if (!qword_100483FA0[0])
  {
    type metadata accessor for HostedRoutingSessionDataSource.EndpointEntry();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100483FA0);
  }
  return result;
}

void *sub_1002F2680()
{
  unint64_t v1 = v0;
  sub_100013A80(&qword_10047CEA8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1002F2830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1002F2874(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002F28DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(unsigned char *)(a3 + 16) == 2)
  {
    int64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v4
                                                                  + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore)
                                                    + 256);
    swift_retain();
    uint64_t v10 = v9(a1, a2);
    uint64_t v12 = v11;
    swift_release();
    int64_t v13 = *(void **)(a3 + 64);
    if (*(unsigned char *)(a3 + 80))
    {
      id v14 = [v13 resolvedOutputDevices];
    }
    else
    {
      uint64_t v20 = *(void **)(a3 + 72);
      id v21 = v13;
      id v14 = [v20 outputDevices];
    }
    id v22 = v14;
    if (v22)
    {
      sub_10018FE08(0, (unint64_t *)&qword_100478370);
      unint64_t v23 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      unint64_t v23 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    sub_1002A05C4(v10, v12, v13, (unint64_t)v23, a1, a2, a4);
    uint64_t v24 = type metadata accessor for HostedRoutingSourceSession(0);
    uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
    uint64_t v17 = v24;
    uint64_t v18 = a4;
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v15 = type metadata accessor for HostedRoutingSourceSession(0);
    uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a4;
    uint64_t v19 = 1;
  }

  return v16(v18, v19, 1, v17);
}

uint64_t sub_1002F2AB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1002F2C0C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_100013A80(&qword_100479588);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v35 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v33 = (uint64_t)&v32 - v10;
  uint64_t v34 = v9;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v37 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v38 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v36 = _swiftEmptyArrayStorage;
  if (!v14) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v17 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_retain();
    v39(v21, v22, v23);
    swift_release();
    swift_bridgeObjectRelease();
    if ((*v15)(v5, 1, v6) == 1)
    {
      uint64_t result = (void *)sub_100009A08((uint64_t)v5, &qword_100479588);
      if (v14) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v27 = v33;
      sub_1002F39C4((uint64_t)v5, v33, type metadata accessor for HostedRoutingSourceSession);
      sub_1002F39C4(v27, v35, type metadata accessor for HostedRoutingSourceSession);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v36 = (void *)sub_1002EFBC4(0, v36[2] + 1, 1, (unint64_t)v36);
      }
      unint64_t v29 = v36[2];
      unint64_t v28 = v36[3];
      if (v29 >= v28 >> 1) {
        uint64_t v36 = (void *)sub_1002EFBC4(v28 > 1, v29 + 1, 1, (unint64_t)v36);
      }
      uint64_t v30 = v35;
      unint64_t v31 = v36;
      v36[2] = v29 + 1;
      uint64_t result = (void *)sub_1002F39C4(v30, (uint64_t)v31+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v29, type metadata accessor for HostedRoutingSourceSession);
      if (v14) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v24 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v24 >= v38) {
      goto LABEL_29;
    }
    unint64_t v25 = *(void *)(v37 + 8 * v24);
    ++v17;
    if (!v25)
    {
      int64_t v17 = v24 + 1;
      if (v24 + 1 >= v38) {
        goto LABEL_29;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v17);
      if (!v25)
      {
        int64_t v17 = v24 + 2;
        if (v24 + 2 >= v38) {
          goto LABEL_29;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v17);
        if (!v25)
        {
          int64_t v17 = v24 + 3;
          if (v24 + 3 >= v38) {
            goto LABEL_29;
          }
          unint64_t v25 = *(void *)(v37 + 8 * v17);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v14 = (v25 - 1) & v25;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v38)
  {
LABEL_29:
    swift_release();
    return v36;
  }
  unint64_t v25 = *(void *)(v37 + 8 * v26);
  if (v25)
  {
    int64_t v17 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v17 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v17 >= v38) {
      goto LABEL_29;
    }
    unint64_t v25 = *(void *)(v37 + 8 * v17);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1002F3004()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002F3054(uint64_t a1)
{
  return sub_1002C84F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_1002F3068()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002F30C0()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = (void *)v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = (void *)v0[8];
  uint64_t v7 = (uint64_t *)(v0[2] + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *v7;
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_100013660(v1, v3);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v13 = *(void *)(v2 + 48) == *(void *)(v12 + 48) && *(void *)(v2 + 56) == *(void *)(v12 + 56);
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        aBlock._uint64_t countAndFlagsBits = v5;
        unint64_t v14 = self;
        id v15 = [v14 defaultCenter];
        uint64_t v16 = *(void **)(v2 + 64);
        uint64_t v17 = swift_allocObject();
        swift_weakInit();
        uint64_t v18 = swift_allocObject();
        swift_weakInit();
        uint64_t v19 = (void *)swift_allocObject();
        v19[2] = v4;
        v19[3] = v17;
        v19[4] = v18;
        uint64_t v33 = sub_1002F35A8;
        uint64_t v34 = v19;
        aBlock._object = _NSConcreteStackBlock;
        unint64_t v30 = 1107296256;
        unint64_t v31 = sub_1002C99C8;
        uint64_t v32 = &unk_100428338;
        uint64_t v20 = _Block_copy(&aBlock._object);
        id v21 = v16;
        id v22 = v4;
        swift_release();
        id v23 = [v15 addObserverForName:0 object:v21 queue:0 usingBlock:v20];
        _Block_release(v20);

        if ([*(id *)(v2 + 64) isConnected])
        {
          *(unsigned char *)(v2 + 16) = 2;
          *(void *)(v2 + 24) = v23;
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          uint64_t v24 = *(void *)(v2 + 32);
          uint64_t v25 = *(void *)(v2 + 40);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_1002F0378(v24, v25);
          swift_endAccess();
          swift_bridgeObjectRelease();
          aBlock._object = 0;
          unint64_t v30 = 0xE000000000000000;
          _StringGuts.grow(_:)(39);
          swift_bridgeObjectRelease();
          aBlock._object = (void *)0x547463656E6E6F63;
          unint64_t v30 = 0xEF3C7972746E456FLL;
          v26._uint64_t countAndFlagsBits = aBlock._countAndFlagsBits;
          v26._object = v6;
          String.append(_:)(v26);
          v27._object = (void *)0x80000001003BA260;
          v27._uint64_t countAndFlagsBits = 0xD000000000000016;
          String.append(_:)(v27);
          sub_1002CA8DC((uint64_t)aBlock._object, v30);
          swift_bridgeObjectRelease();
        }
        else
        {
          id v28 = [v14 defaultCenter];
          [v28 removeObserver:v23];

          sub_1002C9ABC((void *)v2);
        }
        swift_unknownObjectRelease();
      }
      return swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1002F3458()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002F34A8()
{
  return sub_1002F593C(sub_1002C8E44);
}

uint64_t sub_1002F34C0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F3500()
{
  return sub_1002C9ABC(*(void **)(v0 + 24));
}

uint64_t sub_1002F3528()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F3560()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002F35A8(uint64_t a1)
{
  return sub_1002C96E0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1002F35B4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002F35FC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  unint64_t v2 = *(void *)(v0 + 40);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong) {
      return swift_release();
    }
    uint64_t v5 = (void *)Strong;
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v1 && v6 == v2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0) {
        goto LABEL_12;
      }
    }
    sub_1002C9ABC(v5);
LABEL_12:
    sub_1002CA8DC(v1, v2);
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_1002F3708(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v4 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v26 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v24 - v8;
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t result = _swiftEmptyArrayStorage;
  id v28 = _swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v24 = v2;
    uint64_t v15 = *(void *)(v10 + 72);
    unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = a1 + v25;
    while (1)
    {
      sub_1002F2874(v16, (uint64_t)v12, type metadata accessor for HostedRoutingItem);
      int v17 = v12[*(int *)(v4 + 36)];
      sub_1002F2874((uint64_t)v12, (uint64_t)v9, type metadata accessor for HostedRoutingItem);
      if (v17 == 1)
      {
        uint64_t v18 = sub_10029F540();
        char v20 = sub_10018835C(v18, v19, v27);
        swift_bridgeObjectRelease();
        sub_1002F5F00((uint64_t)v9, type metadata accessor for HostedRoutingItem);
        if (v20)
        {
          sub_1002F39C4((uint64_t)v12, v26, type metadata accessor for HostedRoutingItem);
          id v21 = v28;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1001E1F90(0, v21[2] + 1, 1);
            id v21 = v28;
          }
          unint64_t v23 = v21[2];
          unint64_t v22 = v21[3];
          if (v23 >= v22 >> 1)
          {
            sub_1001E1F90(v22 > 1, v23 + 1, 1);
            id v21 = v28;
          }
          void v21[2] = v23 + 1;
          sub_1002F39C4(v26, (uint64_t)v21 + v25 + v23 * v15, type metadata accessor for HostedRoutingItem);
          goto LABEL_5;
        }
      }
      else
      {
        sub_1002F5F00((uint64_t)v9, type metadata accessor for HostedRoutingItem);
      }
      sub_1002F5F00((uint64_t)v12, type metadata accessor for HostedRoutingItem);
LABEL_5:
      v16 += v15;
      if (!--v14) {
        return v28;
      }
    }
  }
  return result;
}

uint64_t sub_1002F39C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002F3A2C()
{
  return sub_1002BD098(v0, (uint64_t)sub_1002F7A30, (uint64_t)&unk_100428450);
}

uint64_t sub_1002F3A64()
{
  return sub_1002BD098(v0, (uint64_t)sub_1002F3A9C, (uint64_t)&unk_100428428);
}

uint64_t sub_1002F3AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for ContinuousClock() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(type metadata accessor for ContinuousClock.Instant() - 8);
  unint64_t v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v14 = (*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1002CDEAC(a1, a2, a3, a4, v4 + v10, v4 + v13, *(void *)(v4 + v14), *(void *)(v4 + v14 + 8), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1002F3BF4(uint64_t a1)
{
  return sub_1002F44CC(a1, (uint64_t)&unk_100428500, (uint64_t (*)(void))sub_1002F3C2C);
}

uint64_t sub_1002F3C14()
{
  return sub_1002F6698((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1002F3C2C(uint64_t a1)
{
  return sub_1002D4ED4(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1002F3C3C()
{
  uint64_t v1 = type metadata accessor for ContinuousClock();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = (((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v12);
}

uint64_t sub_1002F3DCC(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ContinuousClock() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for ContinuousClock.Instant() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v1 + v8);
  unint64_t v11 = *(void *)(v1 + v8 + 8);
  uint64_t v12 = *(void (**)(void, void, void, void))(v1 + v9);
  uint64_t v13 = *(void *)(v1 + v9 + 8);
  uint64_t v14 = *(void *)(v1 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_1002D4394(a1, v1 + v4, v1 + v7, v10, v11, v12, v13, v14);
}

uint64_t sub_1002F3EEC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002F3F3C()
{
  uint64_t v1 = (uint64_t (*)(void))v0[3];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  unint64_t v4 = (void (*)(void))v0[7];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(void))(*(void *)result + 328))();
    char v6 = v1();
    swift_bridgeObjectRelease();
    if (v6)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1001B5D04(v2, v3);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1001924CC(v7);
      v4(0);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1002F4078()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F40B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v27 = result;
  while (1)
  {
LABEL_4:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v10++, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_35;
    }
    unint64_t v14 = *(void *)(v26 + 8 * v10);
    if (!v14)
    {
      int64_t v15 = v10 + 1;
      if (v10 + 1 >= v28) {
        goto LABEL_35;
      }
      unint64_t v14 = *(void *)(v26 + 8 * v15);
      if (v14) {
        goto LABEL_15;
      }
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v28) {
        goto LABEL_35;
      }
      unint64_t v14 = *(void *)(v26 + 8 * v15);
      if (v14) {
        goto LABEL_15;
      }
      int64_t v15 = v10 + 3;
      if (v10 + 3 >= v28) {
        goto LABEL_35;
      }
      unint64_t v14 = *(void *)(v26 + 8 * v15);
      if (v14)
      {
LABEL_15:
        int64_t v10 = v15;
      }
      else
      {
        int64_t v25 = v10 + 4;
        if (v10 + 4 >= v28)
        {
LABEL_35:
          swift_release();
          return 0;
        }
        unint64_t v14 = *(void *)(v26 + 8 * v25);
        for (v10 += 4; !v14; ++v25)
        {
          int64_t v10 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            goto LABEL_37;
          }
          if (v10 >= v28) {
            goto LABEL_35;
          }
          unint64_t v14 = *(void *)(v26 + 8 * v10);
        }
      }
    }
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_17:
    uint64_t v16 = *(void *)(*(void *)(v5 + 56) + 8 * v12);
    int v17 = *(uint64_t (**)(uint64_t))(*(void *)v16 + 224);
    uint64_t v18 = swift_retain();
    uint64_t v19 = v17(v18);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = *(void *)(type metadata accessor for HostedRoutingItem(0) - 8);
      uint64_t v22 = *(void *)(v21 + 72);
      unint64_t v23 = (void *)(v19
                     + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
                     + 8);
      while (1)
      {
        BOOL v24 = *(v23 - 1) == a2 && *v23 == a3;
        if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
        unint64_t v23 = (void *)((char *)v23 + v22);
        if (!--v20)
        {
          swift_release();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v5 = v27;
          goto LABEL_4;
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      return v16;
    }
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1002F4368(uint64_t a1)
{
  return sub_1002F44CC(a1, (uint64_t)&unk_100428668, (uint64_t (*)(void))sub_1002F43A0);
}

uint64_t sub_1002F4388()
{
  return sub_1002F6698((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1002F43A0(uint64_t a1)
{
  return sub_1002D5144(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1002F43B0()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002F44AC(uint64_t a1)
{
  return sub_1002F44CC(a1, (uint64_t)&unk_1004286E0, (uint64_t (*)(void))sub_1002F46B8);
}

uint64_t sub_1002F44CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = v3;
  uint64_t v7 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (void (*)(void))v3[2];
  uint64_t v10 = v5[4];
  uint64_t v23 = v5[3];
  uint64_t v11 = v5[5];
  unint64_t v12 = (void *)((char *)v5 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  if (!a1) {
    goto LABEL_4;
  }
  swift_getErrorValue();
  swift_errorRetain();
  if (sub_10024FC34(v24))
  {
    swift_errorRelease();
LABEL_4:
    int64_t v15 = (void *)swift_allocObject();
    v15[2] = v14;
    v15[3] = v13;
    v15[4] = v10;
    v15[5] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1002D33AC((uint64_t)v5 + v8, (void (*)(void, void, void, void))v9, v23, a3, (uint64_t)v15);
    return swift_release();
  }
  swift_errorRetain();
  swift_bridgeObjectRetain();
  MRDFastSyncGroupSessionState.rawValue.getter(a1, v10, v11, 1);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  unsigned __int8 v22 = v21;
  v9();
  swift_errorRelease();
  sub_1001859D4(v18, v20, v22);
  return swift_errorRelease();
}

uint64_t sub_1002F46A0()
{
  return sub_1002F6698((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1002F46B8(uint64_t a1)
{
  return sub_1002D53B0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1002F46C4()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002F47C8(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  return sub_1002D5C24(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], (uint64_t)v2 + v6, *(uint64_t *)((char *)v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t *)((char *)v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *((unsigned char *)v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(uint64_t *)((char *)v2 + ((v7 + 31) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1002F489C()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002F49B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  return sub_1002D60B0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 40), *(void *)(v0 + 48), *(void (**)(char *, uint64_t))(v0 + 56), *(void *)(v0 + 64), v0 + v2, *(void *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(char **)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1002F4A68()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 88) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002F4B5C()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1002D87A4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), v0 + v2, *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64)), *(char **)(((v2 + *(void *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 8));
}

uint64_t sub_1002F4C08()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002F4CFC()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  unint64_t v5 = *(void *)(v0 + 24);
  unint64_t v6 = *(void (**)(void))(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);
  unint64_t v8 = *(void (**)(void))(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_1002D9CC8(v4, v5, v0 + v2, v6, v7, v8);
}

uint64_t sub_1002F4DA0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002F4DE8()
{
  return sub_1002D32DC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1002F4DF8()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002F4F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1002DD7F4(a1, a2, a3, a4, *(void (**)(void))(v4 + 16), *(void (**)(void))(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), v4 + v10, *(void *)(v4 + v11), *(void *)(v4 + v11 + 8), *(NSObject **)(v4 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1002F5010()
{
  uint64_t v1 = (int *)type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v24 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v25 = type metadata accessor for RoutingInteraction();
  uint64_t v4 = *(void *)(v25 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = *(void *)(v4 + 64);
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001DDF44(*(void *)(v7 + 32), *(unsigned int *)(v7 + 40), *(unsigned char *)(v7 + 44));
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + *(int *)(v8 + 36);
    uint64_t v10 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = v7 + *(int *)(v8 + 40);
    uint64_t v12 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v6 + v1[8];
  uint64_t v14 = type metadata accessor for RoutingControls();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v6 + v1[14];
  uint64_t v16 = type metadata accessor for RoutingSession.HostInfo();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  uint64_t v18 = v2 | v5 | 7;
  unint64_t v19 = (((v24 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5;
  uint64_t v20 = v6 + v1[15];
  uint64_t v21 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v19, v25);

  return _swift_deallocObject(v0, v19 + v23, v18);
}

void sub_1002F53C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0) - 8);
  uint64_t v10 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  uint64_t v11 = *(void (**)(void))(v4 + 16);
  if (a1)
  {
    swift_errorRetain();
    sub_100185894(a2, a3, a4);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11)(a1, a2, a3, a4);
    sub_1001BB320(a1, a2, a3, a4);
  }
  else
  {
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    unint64_t v13 = (*(void *)(v9 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    sub_1002DA220((uint64_t *)(v4 + v12), *(void *)(v4 + v13), (void *)(v4 + ((*(unsigned __int8 *)(v10 + 80) + v13 + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))), v11, *(void *)(v4 + 24));
  }
}

uint64_t sub_1002F551C()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1002F5584(void *a1)
{
  return sub_1002E88F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(void *)(v1 + 48), *(void (**)(void))(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_1002F55C4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002F560C(void *a1, uint64_t a2)
{
  return sub_1002EB9D0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

void sub_1002F561C()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v3 = v2;
  *(void *)&long long v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *((void *)&v21 + 1) = v4;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v5 = sub_10018C3C4((uint64_t)v20), (v6 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v3 + 56) + 32 * v5, (uint64_t)&v18);
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1)) {
    goto LABEL_12;
  }
  sub_10018FFC8((uint64_t)v20);
  swift_bridgeObjectRelease();
  sub_10018FF5C(&v18, &v21);
  sub_10018FE08(0, &qword_10047CEB8);
  swift_dynamicCast();
  if ([v17 type] == (id)1)
  {
    ((void (*)(void, void, void, void))v1)(0, 0, 0, 0);
  }
  else
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = 0xD00000000000001CLL;
    *(void *)(v7 + 24) = 0x80000001003BA4A0;
    uint64_t v8 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v9 = swift_allocError();
    *uint64_t v10 = v7;
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, enum case for InternalRoutingError.external(_:), v8);
    MRDFastSyncGroupSessionState.rawValue.getter(v9, 1, 0, 4);
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    unsigned __int8 v16 = v15;
    v1();

    swift_errorRelease();
    sub_1001859D4(v12, v14, v16);
  }
}

uint64_t sub_1002F589C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F58D4()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002F5924()
{
  return sub_1002F593C((uint64_t (*)(void, void, void, void, void, void, void))sub_1002EA130);
}

uint64_t sub_1002F593C(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1002F5958()
{
  swift_release();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F5990()
{
  uint64_t v1 = type metadata accessor for ContinuousClock();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = ((((((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v10, v12);
}

uint64_t sub_1002F5B30()
{
  uint64_t v1 = *(void *)(type metadata accessor for ContinuousClock() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for ContinuousClock.Instant() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1002EA788(*(void *)(v0 + 16), *(NSObject **)(v0 + 24), v0 + v2, v0 + v5, *(void *)(v0 + v6), *(void *)(v0 + v6 + 8), *(void (**)(uint64_t))(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1002F5C4C()
{
  uint64_t v1 = type metadata accessor for ContinuousClock();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = ((((((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v10, v12);
}

uint64_t sub_1002F5DE4()
{
  uint64_t v1 = *(void *)(type metadata accessor for ContinuousClock() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for ContinuousClock.Instant() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + v6);
  unint64_t v10 = *(void *)(v0 + v6 + 8);
  uint64_t v11 = *(void (**)(uint64_t))(v0 + v7);
  uint64_t v12 = *(void *)(v0 + v7 + 8);
  uint64_t v13 = *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_1002EB1A0(v8, v0 + v2, v0 + v5, v9, v10, v11, v12, v13);
}

uint64_t sub_1002F5F00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002F5F60()
{
  return sub_1002F77A4((void (*)(void))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_1002F5F7C(void *a1)
{
  return sub_1002EE818(a1, v1[2], v1[3], v1[4], v1[5], (uint64_t)&unk_100428B18, (uint64_t)sub_1002F5FDC, (uint64_t)&unk_100428B30);
}

uint64_t sub_1002F5FC0()
{
  return sub_1002F77A4((void (*)(void))&_swift_bridgeObjectRelease, 48);
}

id sub_1002F5FDC()
{
  return sub_1002EEADC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), "[%s] pullContentFromSession<%s> - failed to clear source queue with error: %@.");
}

uint64_t sub_1002F6004()
{
  uint64_t v1 = (int *)type metadata accessor for HostedRoutingSourceSession(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001DDF44(*(void *)(v6 + 32), *(unsigned int *)(v6 + 40), *(unsigned char *)(v6 + 44));
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(v7 + 36);
    uint64_t v9 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = v6 + *(int *)(v7 + 40);
    uint64_t v11 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = v5 + v1[8];
  uint64_t v13 = type metadata accessor for RoutingControls();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v5 + v1[14];
  uint64_t v15 = type metadata accessor for RoutingSession.HostInfo();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v17 = v5 + v1[15];
  uint64_t v18 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((((((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8, v2 | 7);
}

uint64_t sub_1002F6340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1002DE690(a1, a2, a3, a4, (v4 + v10), *(void *)(v4 + v11), *(void *)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4+ ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1002F6434()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 104) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002F6554(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1002EDA0C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void (**)(void))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void **)(v1 + 88), *(void *)(v1 + 96), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1002F6620()
{
  return sub_1002F6998((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1002F664C(void *a1, uint64_t a2)
{
  return sub_1002EF198(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72));
}

uint64_t sub_1002F6680()
{
  return sub_1002F6698((void (*)(void))&_swift_release);
}

uint64_t sub_1002F6698(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, 48, 7);
}

void sub_1002F66E0()
{
  uint64_t v1 = (void (*)(void))v0[2];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = Notification.userInfo.getter();
  if (!v4)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v5 = v4;
  *(void *)&long long v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *((void *)&v22 + 1) = v6;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v5 + 16) && (unint64_t v7 = sub_10018C3C4((uint64_t)v21), (v8 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v5 + 56) + 32 * v7, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v20 + 1)) {
    goto LABEL_12;
  }
  sub_10018FFC8((uint64_t)v21);
  swift_bridgeObjectRelease();
  sub_10018FF5C(&v19, &v22);
  sub_10018FE08(0, &qword_10047CEB8);
  swift_dynamicCast();
  if ([v18 type] == (id)1)
  {
    ((void (*)(void, void, void, void))v1)(0, 0, 0, 0);
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0xD00000000000001CLL;
    *(void *)(v9 + 24) = 0x80000001003BA4A0;
    uint64_t v10 = type metadata accessor for InternalRoutingError();
    sub_1002F14AC(&qword_100478978, (void (*)(uint64_t))&type metadata accessor for InternalRoutingError);
    uint64_t v11 = swift_allocError();
    *uint64_t v12 = v9;
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v10 - 8) + 104))(v12, enum case for InternalRoutingError.external(_:), v10);
    swift_bridgeObjectRetain();
    MRDFastSyncGroupSessionState.rawValue.getter(v11, v2, v3, 2);
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    LOBYTE(v11) = v17;
    v1();

    swift_errorRelease();
    sub_1001859D4(v14, v16, v11);
  }
}

uint64_t sub_1002F696C()
{
  return sub_1002F6998((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1002F6998(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 24));
  a2(*(void *)(v2 + 40));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v2, 80, 7);
}

uint64_t sub_1002F6A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002EE12C(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void **)(v4 + 64), *(void *)(v4 + 72));
}

uint64_t sub_1002F6A38()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002F6A78(uint64_t a1)
{
  return sub_1002EEE10(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002F6A84()
{
  return sub_1002F77A4((void (*)(void))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_1002F6AA0(void *a1)
{
  return sub_1002EE818(a1, v1[2], v1[3], v1[4], v1[5], (uint64_t)&unk_100428CF8, (uint64_t)sub_1002F6B00, (uint64_t)&unk_100428D10);
}

uint64_t sub_1002F6AE4()
{
  return sub_1002F77A4((void (*)(void))&_swift_bridgeObjectRelease, 48);
}

id sub_1002F6B00()
{
  return sub_1002EEADC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), "[%s] handoffFromApplication<%s> - failed to clear source queue with error: %@.");
}

uint64_t sub_1002F6B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002F6CD0(a1, a2, a3, a4, (uint64_t)&unk_100428DC0, (uint64_t (*)(void))sub_1002F6E98);
}

uint64_t sub_1002F6B50()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for RoutingControl();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1002F6CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002F6CD0(a1, a2, a3, a4, (uint64_t)&unk_100428D98, (uint64_t (*)(void))sub_1002F6DEC);
}

uint64_t sub_1002F6CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v13 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = *(void *)(v13 + 64);
  uint64_t v16 = *(void *)(type metadata accessor for RoutingControl() - 8);
  return sub_1002E384C(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), v6 + v14, v6 + ((v14 + v15 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), a5, a6);
}

uint64_t sub_1002F6DEC(uint64_t a1)
{
  return sub_1002F6EB0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1002E3668);
}

uint64_t sub_1002F6E08()
{
  uint64_t v1 = type metadata accessor for RoutingControl();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002F6E98(uint64_t a1)
{
  return sub_1002F6EB0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1002E3A20);
}

uint64_t sub_1002F6EB0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for RoutingControl() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_1002F6F38(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RoutingControl() - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1002E60C8(a1, v4, v5, v6, v7);
}

uint64_t sub_1002F6FB4()
{
  uint64_t v1 = type metadata accessor for RoutingControl();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1002F7088()
{
  type metadata accessor for RoutingControl();
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void (**)(void))(v0 + 24);
  if (v1 && (id v3 = [v1 error]) != 0)
  {
    id v12 = v3;
    uint64_t v4 = RoutingControl.sessionIdentifier.getter();
    MRDFastSyncGroupSessionState.rawValue.getter(v12, v4, v5, 2);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    unsigned __int8 v11 = v10;
    v2();
    swift_errorRelease();
    sub_1001859D4(v7, v9, v11);
  }
  else
  {
    ((void (*)(void, void, void, void))v2)(0, 0, 0, 0);
  }
}

uint64_t sub_1002F71CC()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for RoutingControl();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 16) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = ((((((*(void *)(v7 + 64) + v9 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v10, v12);
}

uint64_t sub_1002F7370()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingInteraction() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(type metadata accessor for RoutingControl() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v7 = (v6 + 11) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void (**)(void, void, void, void))(v0 + v3);
  uint64_t v10 = *(void *)(v0 + v3 + 8);
  float v11 = *(float *)(v0 + v6);
  uint64_t v12 = *(void *)(v0 + v7);
  uint64_t v13 = *(void *)(v0 + v7 + 8);
  uint64_t v14 = *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_1002E56BC(v8, v0 + v2, v9, v10, v0 + v5, v12, v13, v14, v11);
}

uint64_t sub_1002F74A8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002F74F0(uint64_t a1)
{
  return sub_1002E5F2C(a1, *(void **)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(uint64_t (**)(uint64_t))(v1 + 40));
}

uint64_t sub_1002F7514()
{
  uint64_t v1 = type metadata accessor for RoutingControl();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002F75CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RoutingControl() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = (v4 + 16) & ~v4;
    unint64_t v8 = (v5 + v7 + 3) & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v9 = (v8 + 11) & 0xFFFFFFFFFFFFFFF8;
    float v10 = *(float *)(v1 + v8);
    uint64_t v11 = v1 + v7;
    uint64_t v12 = *(void *)(v1 + v9);
    uint64_t v13 = *(void **)(v1 + v9 + 8);
    uint64_t v14 = *(void *)(v1 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v15 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0) - 8);
    uint64_t v16 = (void *)(a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)));
    uint64_t v17 = *(void *)(v15 + 72);
    swift_bridgeObjectRetain();
    uint64_t v18 = v6 - 1;
    do
    {
      uint64_t v19 = v18;
      LOBYTE(v6) = sub_1002E5864(v16, v11, v12, v13, v14, v10);
      if (v6) {
        break;
      }
      uint64_t v18 = v19 - 1;
      uint64_t v16 = (void *)((char *)v16 + v17);
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  return v6 & 1;
}

uint64_t sub_1002F7740(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v5 = *(uint64_t (**)(void *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  __int16 v8 = a4 & 0x1FF;
  return v5(v7);
}

uint64_t sub_1002F7788()
{
  return sub_1002F77A4((void (*)(void))&_swift_release, 40);
}

uint64_t sub_1002F77A4(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_1002F7800(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  return sub_1002C4DA0(a1, a2, a3, a4, *(void **)(v4 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 24));
}

uint64_t sub_1002F7810()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)Notification.name.getter();
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v4 = v3;

    sub_1002CA8DC(v2, v4);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void **sub_1002F78A4(void **result)
{
  if (*(void *)(v1 + 24))
  {
    uint64_t v2 = *result;
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v2 containsUID:v3];

    return (void **)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F7A34()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10019001C(v0, qword_1004841C8);
  sub_10018A9A8(v0, (uint64_t)qword_1004841C8);
  id v1 = (id)*sub_1001A6778();
  return Logger.init(_:)();
}

unint64_t sub_1002F7A90(uint64_t a1)
{
  uint64_t v2 = sub_100013A80((uint64_t *)&unk_10047CF60);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100013A80(&qword_10047CF48);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  unint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1002FB618(v12, (uint64_t)v5);
    unint64_t result = sub_1001929C0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = (void *)(v7[7] + 16 * v16);
    uint64_t v20 = *((void *)v9 + 1);
    *uint64_t v19 = *(void *)v9;
    v19[1] = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1002F7D40(uint64_t a1@<X0>, void *a2@<X8>)
{
  _StringGuts.grow(_:)(37);
  v4._uint64_t countAndFlagsBits = 60;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 8250;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  _print_unlocked<A, B>(_:_:)();
  v7._uint64_t countAndFlagsBits = 0x747265737361200ALL;
  v7._object = (void *)0xED00003D736E6F69;
  String.append(_:)(v7);
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1002F800C(v8);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = (id)MRCreateIndentedDebugDescriptionFromDictionary();

  if (v10)
  {
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    v14._uint64_t countAndFlagsBits = v11;
    v14._object = v13;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = 0x76726573626F200ALL;
    v15._object = (void *)0xEC0000003D737265;
    String.append(_:)(v15);
    id v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                + OBJC_IVAR___MRDGroupSessionAssertionManager_observers), "allObjects"));
    sub_100013A80(&qword_10047CF40);
    unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1002F85F8(v17);
    swift_bridgeObjectRelease();
    Class v18 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v19 = (id)MRCreateIndentedDebugDescriptionFromArray();

    if (v19)
    {
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      BOOL v22 = v21;

      v23._uint64_t countAndFlagsBits = v20;
      v23._object = v22;
      String.append(_:)(v23);
      swift_bridgeObjectRelease();
      v24._uint64_t countAndFlagsBits = 62;
      v24._object = (void *)0xE100000000000000;
      String.append(_:)(v24);
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002F7FE0(void *a1@<X8>)
{
  sub_1002F7D40(*(void *)(v1 + 16), a1);
}

uint64_t sub_1002F800C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v52 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100013A80((uint64_t *)&unk_10047CF50);
  uint64_t v5 = __chkstk_darwin(v51);
  Swift::String v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v43 - v8;
  uint64_t v53 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_100013A80(&qword_100479F70);
    id v10 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    id v10 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)(v53 + 64);
  uint64_t v45 = v53 + 64;
  uint64_t v12 = -1 << *(unsigned char *)(v53 + 32);
  if (-v12 < 64) {
    uint64_t v13 = ~(-1 << -(char)v12);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v11;
  uint64_t v43 = -1 << *(unsigned char *)(v53 + 32);
  int64_t v44 = (unint64_t)(63 - v12) >> 6;
  uint64_t v50 = v3 + 16;
  unint64_t v49 = &v58;
  uint64_t v48 = v3 + 32;
  uint64_t v47 = &v62;
  Swift::String v15 = (char *)(v10 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v54 = 0;
  int v46 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v54 << 6);
      goto LABEL_28;
    }
    int64_t v21 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v44) {
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v45 + 8 * v21);
    int64_t v23 = v54 + 1;
    if (!v22)
    {
      int64_t v23 = v54 + 2;
      if (v54 + 2 >= v44) {
        goto LABEL_37;
      }
      unint64_t v22 = *(void *)(v45 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v54 + 3;
        if (v54 + 3 >= v44) {
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v45 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v54 + 4;
          if (v54 + 4 >= v44) {
            goto LABEL_37;
          }
          unint64_t v22 = *(void *)(v45 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
    int64_t v54 = v23;
LABEL_28:
    uint64_t v25 = v53;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v9, *(void *)(v53 + 48) + *(void *)(v3 + 72) * v20, v2);
    uint64_t v26 = (uint64_t *)(*(void *)(v25 + 56) + 16 * v20);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    uint64_t v29 = v51;
    unint64_t v30 = &v9[*(int *)(v51 + 48)];
    *(void *)unint64_t v30 = v27;
    *((void *)v30 + 1) = v28;
    sub_1002FB5B0((uint64_t)v9, (uint64_t)v7);
    unint64_t v31 = &v7[*(int *)(v29 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v52, v7, v2);
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)&long long v63 = *(void *)v31;
    *((void *)&v63 + 1) = v32;
    uint64_t v33 = v49;
    swift_dynamicCast();
    long long v59 = v55;
    long long v60 = v56;
    uint64_t v61 = v57;
    uint64_t v34 = v33;
    uint64_t v35 = v47;
    sub_10018FF5C(v34, v47);
    long long v55 = v59;
    long long v56 = v60;
    uint64_t v57 = v61;
    sub_10018FF5C(v35, &v63);
    sub_10018FF5C(&v63, &v59);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v10[5]);
    uint64_t v36 = -1 << *((unsigned char *)v10 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)&v15[8 * (v37 >> 6)]) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v37) & ~*(void *)&v15[8 * (v37 >> 6)])) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)&v15[8 * v38];
      }
      while (v42 == -1);
      unint64_t v17 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)&v15[(v17 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v17;
    uint64_t v18 = v10[6] + 40 * v17;
    *(_OWORD *)uint64_t v18 = v55;
    *(_OWORD *)(v18 + 16) = v56;
    *(void *)(v18 + 32) = v57;
    uint64_t result = (uint64_t)sub_10018FF5C(&v59, (_OWORD *)(v10[7] + 32 * v17));
    ++v10[2];
  }
  int64_t v24 = v54 + 5;
  if (v54 + 5 >= v44)
  {
LABEL_37:
    swift_release();
    sub_10018F864();
    return (uint64_t)v10;
  }
  unint64_t v22 = *(void *)(v45 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v54 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v44) {
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v45 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1002F85F8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001A13FC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      uint64_t v3 = v12;
      do
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_100013A80(&qword_10047CF40);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001A13FC(0, v3[2] + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_1001A13FC(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v12;
        }
        ++v5;
        v3[2] = v7 + 1;
        sub_10018FF5C(v11, &v3[4 * v7 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v8 = a1 + 32;
      uint64_t v3 = v12;
      do
      {
        swift_unknownObjectRetain();
        sub_100013A80(&qword_10047CF40);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001A13FC(0, v3[2] + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v10 = v3[2];
        unint64_t v9 = v3[3];
        if (v10 >= v9 >> 1)
        {
          sub_1001A13FC(v9 > 1, v10 + 1, 1);
          uint64_t v3 = v12;
        }
        v3[2] = v10 + 1;
        sub_10018FF5C(v11, &v3[4 * v10 + 4]);
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002F88C4()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + OBJC_IVAR___MRDGroupSessionAssertionManager_lock) + 16);
  os_unfair_lock_lock(v1);
  sub_1002FAE70(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1002F8940(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  unint64_t v8 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)aBlock - v9;
  sub_1002F8E28(a1, a2, (uint64_t)aBlock - v9);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, v8, v4);
  id v14 = objc_allocWithZone((Class)MRGroupSessionAssertion);
  aBlock[4] = sub_1002FAF8C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100429008;
  Swift::String v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v16 = [v14 initWithCancellationHandler:v15];
  _Block_release(v15);
  uint64_t result = swift_release();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return (uint64_t)v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002F8C00()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + OBJC_IVAR___MRDGroupSessionAssertionManager_lock) + 16);
  os_unfair_lock_lock(v1);
  sub_100013CA8();
  os_unfair_lock_unlock(v1);
}

void sub_1002F8D14()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + OBJC_IVAR___MRDGroupSessionAssertionManager_lock) + 16);
  os_unfair_lock_lock(v1);
  sub_100013C90();
  os_unfair_lock_unlock(v1);
}

void sub_1002F8E28(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_getObjectType();
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  unint64_t v12 = *(os_unfair_lock_s **)(v4 + OBJC_IVAR___MRDGroupSessionAssertionManager_lock);
  uint64_t v27 = v4;
  uint64_t v28 = a3;
  uint64_t v23 = a1;
  uint64_t v29 = a1;
  unint64_t v30 = a2;
  int64_t v24 = sub_1002FB53C;
  uint64_t v25 = &v26;
  uint64_t v13 = v12 + 4;
  os_unfair_lock_lock(v12 + 4);
  sub_1002FAE70(v32);
  os_unfair_lock_unlock(v13);
  if (LOBYTE(v32[0]) == 1) {
    sub_1002F997C();
  }
  if (qword_1004841C0 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10018A9A8(v14, (uint64_t)qword_1004841C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  swift_bridgeObjectRetain_n();
  Swift::String v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v32[0] = v22;
    *(_DWORD *)uint64_t v17 = 136315650;
    uint64_t v18 = _typeName(_:qualified:)();
    uint64_t v31 = sub_10018A9E0(v18, v19, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    sub_100015BB8(&qword_100478700, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v31 = sub_10018A9E0(v20, v21, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(_WORD *)(v17 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_10018A9E0(v23, a2, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%s] Began assertion: %{public}s because: %{public}s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1002F91E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, BOOL *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t *)(a1 + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions);
  swift_beginAccess();
  BOOL v15 = *(void *)(*v14 + 16) == 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v14;
  uint64_t *v14 = 0x8000000000000000;
  sub_1002FA9C8(a3, a4, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  uint64_t *v14 = v19;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t result = swift_endAccess();
  *a5 = v15;
  return result;
}

void sub_1002F9388(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR___MRDGroupSessionAssertionManager_lock);
  uint64_t v34 = v1;
  uint64_t v38 = v1;
  uint64_t v39 = a1;
  uint64_t v35 = sub_1002FB34C;
  uint64_t v36 = &v37;
  uint64_t v11 = v10 + 4;
  os_unfair_lock_lock(v10 + 4);
  sub_1002FB3E4((uint64_t)v41);
  os_unfair_lock_unlock(v11);
  int v12 = LOBYTE(v41[0]);
  unint64_t v13 = v42;
  if (v42)
  {
    uint64_t v32 = v41[1];
    if (qword_1004841C0 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10018A9A8(v14, (uint64_t)qword_1004841C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
    swift_bridgeObjectRetain();
    BOOL v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      v41[0] = v31;
      *(_DWORD *)uint64_t v17 = 136315650;
      uint64_t v18 = _typeName(_:qualified:)();
      int v33 = v12;
      uint64_t v40 = sub_10018A9E0(v18, v19, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      sub_100015BB8(&qword_100478700, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v40 = sub_10018A9E0(v20, v21, v41);
      int v22 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      *(_WORD *)(v17 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_10018A9E0(v32, v13, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%s] Ended assertion: %{public}s with reason: %{public}s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!v22) {
        return;
      }
LABEL_15:
      sub_1002F997C();
      return;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);

    swift_bridgeObjectRelease_n();
    if (v12) {
      goto LABEL_15;
    }
  }
  else
  {
    int v33 = LOBYTE(v41[0]);
    if (qword_1004841C0 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_10018A9A8(v23, (uint64_t)qword_1004841C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
    int64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      v41[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v27 = _typeName(_:qualified:)();
      uint64_t v40 = sub_10018A9E0(v27, v28, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      sub_100015BB8(&qword_100478700, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v40 = sub_10018A9E0(v29, v30, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%s] Attempted to end unknown assertion: %{public}s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }

    if (v33) {
      goto LABEL_15;
    }
  }
}

uint64_t sub_1002F997C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v39 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(os_unfair_lock_s **)&v0[OBJC_IVAR___MRDGroupSessionAssertionManager_lock];
  int64_t v44 = v0;
  BOOL v41 = sub_1002FB090;
  unint64_t v42 = &v43;
  uint64_t v11 = v10 + 4;
  os_unfair_lock_lock(v10 + 4);
  sub_1002FB114((uint64_t)&aBlock);
  os_unfair_lock_unlock(v11);
  int v12 = aBlock;
  uint64_t v36 = (void *)v47;
  if (qword_1004841C0 != -1) {
    swift_once();
  }
  int v35 = v12;
  uint64_t v13 = sub_10018A9A8(v6, (uint64_t)qword_1004841C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v31 = (void **)swift_slowAlloc();
    Swift::String aBlock = v31;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v32 = v1;
    uint64_t v17 = _typeName(_:qualified:)();
    uint64_t v34 = v2;
    uint64_t v45 = (void *)sub_10018A9E0(v17, v18, (uint64_t *)&aBlock);
    uint64_t v33 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    char v19 = v35;
    if (v35) {
      uint64_t v20 = 0x7265737361207369;
    }
    else {
      uint64_t v20 = 0x6573736120746F6ELL;
    }
    if (v35) {
      unint64_t v21 = 0xEC000000676E6974;
    }
    else {
      unint64_t v21 = 0xED0000676E697472;
    }
    uint64_t v45 = (void *)sub_10018A9E0(v20, v21, (uint64_t *)&aBlock);
    uint64_t v3 = v33;
    uint64_t v2 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v1 = v32;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%s] Notifying observers: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v19 = v35;
  }
  id v22 = (id)MRGroupSessionSubsystemGetNotificationQueue();
  uint64_t v23 = swift_allocObject();
  int64_t v24 = v36;
  *(void *)(v23 + 16) = v36;
  *(unsigned char *)(v23 + 24) = v19;
  *(void *)(v23 + 32) = v1;
  uint64_t v50 = sub_1002FB1A0;
  uint64_t v51 = v23;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v47 = 1107296256;
  uint64_t v48 = sub_100006760;
  unint64_t v49 = &unk_100429058;
  os_log_type_t v25 = _Block_copy(&aBlock);
  id v26 = v24;
  id v27 = v1;
  unint64_t v28 = v37;
  static DispatchQoS.unspecified.getter();
  uint64_t v45 = _swiftEmptyArrayStorage;
  sub_100015BB8((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_1002FB2F0();
  uint64_t v29 = v39;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v29, v2);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v40);
  return swift_release();
}

id sub_1002F9F80()
{
  uint64_t v1 = OBJC_IVAR___MRDGroupSessionAssertionManager_observers;
  uint64_t v2 = self;
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 weakObjectsHashTable];
  uint64_t v4 = OBJC_IVAR___MRDGroupSessionAssertionManager_assertions;
  *(void *)&v3[v4] = sub_1002F7A90((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = OBJC_IVAR___MRDGroupSessionAssertionManager_lock;
  sub_100013A80(&qword_10047CEF0);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(void *)&v3[v5] = v6;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for GroupSessionAssertionManager();
  return objc_msgSendSuper2(&v8, "init");
}

id sub_1002FA068()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupSessionAssertionManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002FA184(uint64_t a1)
{
  objc_super v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1001929C0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *objc_super v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002FAB80();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_1002FA6D0(v4, v7);
  *objc_super v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1002FA290(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100013A80(&qword_10047CF48);
  int v47 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  unint64_t v49 = v8;
  uint64_t v50 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  char v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  BOOL v41 = v2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  int64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    int64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      uint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      uint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v32;
      uint64_t v30 = v32[1];
      swift_bridgeObjectRetain();
    }
    sub_100015BB8(&qword_100478480, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    uint64_t v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
    *uint64_t v20 = v31;
    v20[1] = v30;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

unint64_t sub_1002FA6D0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_100015BB8(&qword_100478480, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            int64_t v23 = (_OWORD *)(v22 + 16 * a1);
            int64_t v24 = (_OWORD *)(v22 + 16 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *int64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    unint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *unint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1002FA9C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v28 = a2;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v4;
  unint64_t v15 = sub_1001929C0(a3);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = *v5;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = (uint64_t *)(v21[7] + 16 * v15);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v24 = v28;
      uint64_t *v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1002FAB80();
    goto LABEL_7;
  }
  sub_1002FA290(v18, a4 & 1);
  unint64_t v25 = sub_1001929C0(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v15 = v25;
  uint64_t v21 = *v5;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_1001934A4(v15, (uint64_t)v12, a1, v28, v21);
}

void *sub_1002FAB80()
{
  uint64_t v38 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  unint64_t v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100013A80(&qword_10047CF48);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v40 = v4;
  if (!v5)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v30 = v40;
    BOOL v29 = v32;
LABEL_25:
    *BOOL v29 = v30;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v40;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v39 = v3;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v35 = v1 + 32;
  uint64_t v36 = v1 + 16;
  char v14 = v37;
  uint64_t v13 = v38;
  uint64_t v15 = v40;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v9 << 6);
      uint64_t v18 = v39;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v18 = v39;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v14, *(void *)(v18 + 48) + v19, v13);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 16 * v17;
    uint64_t v22 = (uint64_t *)(v20 + 16 * v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v15 + 48) + v19, v14, v13);
    unint64_t v25 = (void *)(*(void *)(v15 + 56) + v21);
    *unint64_t v25 = v23;
    v25[1] = v24;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    BOOL v29 = v32;
    uint64_t v30 = v40;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1002FAE58@<X0>(BOOL *a1@<X8>)
{
  return sub_1002FB470(a1);
}

void *sub_1002FAE70@<X0>(unsigned char *a1@<X8>)
{
  return sub_1002FB56C(a1);
}

uint64_t sub_1002FAE88()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002FAEC0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1002FAF8C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID() - 8) + 80);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_1002F9388(v0 + ((v1 + 24) & ~v1));
  }
}

id sub_1002FB02C()
{
  return sub_1002FB430((SEL *)&selRef_addObject_);
}

id sub_1002FB04C()
{
  return sub_1002FB430((SEL *)&selRef_removeObject_);
}

uint64_t type metadata accessor for GroupSessionAssertionManager()
{
  return self;
}

id sub_1002FB090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions;
  swift_beginAccess();
  *(unsigned char *)a1 = *(void *)(*(void *)v4 + 16) != 0;
  uint64_t v5 = *(void **)(v3 + OBJC_IVAR___MRDGroupSessionAssertionManager_observers);
  *(void *)(a1 + 8) = v5;
  return v5;
}

void *sub_1002FB114@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(void *(**)(void *__return_ptr))(v1 + 16))(v6);
  if (!v2)
  {
    uint64_t v5 = v6[1];
    *(unsigned char *)a1 = v6[0];
    *(void *)(a1 + 8) = v5;
  }
  return result;
}

uint64_t sub_1002FB160()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1002FB1A0()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  id v3 = [*(id *)(v0 + 16) allObjects];
  sub_100013A80(&qword_10047CF40);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v5) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_13;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v6 = 0;
  do
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v7 = *(void **)(v4 + 8 * v6 + 32);
      swift_unknownObjectRetain();
    }
    ++v6;
    if (v1) {
      unint64_t v8 = &selRef_groupSessionAssertionManagerDidAssert_;
    }
    else {
      unint64_t v8 = &selRef_groupSessionAssertionManagerDidUnassert_;
    }
    objc_msgSend(v7, *v8, v2);
    swift_unknownObjectRelease();
  }
  while (v5 != v6);
LABEL_13:

  swift_bridgeObjectRelease();
}

unint64_t sub_1002FB2F0()
{
  unint64_t result = qword_10047AE30;
  if (!qword_10047AE30)
  {
    sub_10018F8A4((uint64_t *)&unk_100479AE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047AE30);
  }
  return result;
}

uint64_t sub_1002FB34C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v3 + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions;
  swift_beginAccess();
  uint64_t v6 = sub_1002FA184(v4);
  uint64_t v8 = v7;
  uint64_t result = swift_endAccess();
  *(unsigned char *)a1 = *(void *)(*(void *)v5 + 16) == 0;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v8;
  return result;
}

__n128 sub_1002FB3E4@<Q0>(uint64_t a1@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
  {
    __n128 result = v6;
    *(unsigned char *)a1 = v5;
    *(__n128 *)(a1 + 8) = result;
  }
  return result;
}

id sub_1002FB430(SEL *a1)
{
  return objc_msgSend(*(id *)(*(void *)(v1 + 16) + OBJC_IVAR___MRDGroupSessionAssertionManager_observers), *a1, *(void *)(v1 + 24));
}

uint64_t sub_1002FB470@<X0>(BOOL *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16) + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions;
  uint64_t result = swift_beginAccess();
  *a1 = *(void *)(*(void *)v3 + 16) != 0;
  return result;
}

void *sub_1002FB4E0@<X0>(void *a1@<X8>)
{
  return sub_1002FB4F8(a1);
}

void *sub_1002FB4F8@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(void *__return_ptr))(v1 + 16))(v6);
  if (!v2)
  {
    uint64_t v5 = v6[1];
    *a1 = v6[0];
    a1[1] = v5;
  }
  return result;
}

uint64_t sub_1002FB53C@<X0>(BOOL *a1@<X8>)
{
  return sub_1002F91E8(v1[2], v1[3], v1[4], v1[5], a1);
}

void *sub_1002FB56C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1002FB5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80((uint64_t *)&unk_10047CF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002FB618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80((uint64_t *)&unk_10047CF60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1002FB688(void *a1@<X8>)
{
}

uint64_t sub_1002FB6A0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10019001C(v0, qword_1004841E8);
  sub_10018A9A8(v0, (uint64_t)qword_1004841E8);
  id v1 = (id)*sub_1001A6778();
  return Logger.init(_:)();
}

id sub_1002FB6FC()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for GroupSessionHomeObserver()) init];
  qword_1004862C0 = (uint64_t)result;
  return result;
}

uint64_t *sub_1002FB72C()
{
  if (qword_100484200 != -1) {
    swift_once();
  }
  return &qword_1004862C0;
}

uint64_t sub_1002FB7D4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = sub_10018FE08(0, &qword_10047D040);
  *uint64_t v3 = v1;
  v3[1] = sub_100013F84;
  return withCheckedContinuation<A>(isolation:function:_:)(a1, 0, 0, 0xD000000000000018, 0x80000001003CA420, sub_1002FB8C4, 0, v4);
}

void sub_1002FB8C4(uint64_t a1)
{
  uint64_t v31 = sub_100013A80(&qword_10047D048);
  uint64_t v2 = *(void *)(v31 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v31);
  uint64_t v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v29 - 8);
  uint64_t v5 = __chkstk_darwin(v29);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int64_t v9 = (char *)&v27 - v8;
  if (qword_1004841E0 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10018A9A8(v10, (uint64_t)qword_1004841E8);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v28 = a1;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v27 = v3;
    aBlock[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v32 = sub_10018A9E0(0xD000000000000018, 0x80000001003CA420, aBlock);
    a1 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%s] - Initializing HMHomeManager", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v3 = v27;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v15 = [objc_allocWithZone((Class)HMHomeManager) initWithOptions:9];
  static Date.now.getter();
  Date.addingTimeInterval(_:)();
  unint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  unint64_t v17 = v7;
  uint64_t v18 = v29;
  v16(v17, v29);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  v16(v9, v18);
  uint64_t v21 = v30;
  uint64_t v20 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v30, a1, v31);
  unint64_t v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v23 + v22, v21, v20);
  *(void *)(v23 + ((v3 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v15;
  aBlock[4] = (uint64_t)sub_1002FF454;
  aBlock[5] = v23;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001872F8;
  aBlock[3] = (uint64_t)&unk_1004291B8;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = v15;
  swift_release();
  id v26 = [v25 _refreshBeforeDate:isa completionHandler:v24];
  _Block_release(v24);

  swift_unknownObjectRelease();
}

uint64_t sub_1002FBD10()
{
  v1[9] = v0;
  v1[10] = swift_getObjectType();
  uint64_t v2 = type metadata accessor for UUID();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_1002FBE38, 0, 0);
}

uint64_t sub_1002FBE38()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)(*(void *)(v0 + 72)
                                                                 + OBJC_IVAR___MRDGroupSessionHomeObserver_managerWrapper)
                                                   + 176)
                                       + **(int **)(**(void **)(*(void *)(v0 + 72)
                                                                + OBJC_IVAR___MRDGroupSessionHomeObserver_managerWrapper)
                                                  + 176));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  void *v1 = v0;
  v1[1] = sub_1002FBF50;
  return v3(v0 + 48);
}

uint64_t sub_1002FBF50()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002FC04C, 0, 0);
}

uint64_t sub_1002FC04C()
{
  uint64_t v71 = v0;
  uint64_t v2 = v0 + 6;
  uint64_t v1 = (void *)v0[6];
  id v3 = [v1 homes];

  sub_10018FE08(0, &qword_10047CF98);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v67 = _swiftEmptyArrayStorage;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v62 = v0;
    if (v5) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease_n();
    os_log_type_t v12 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v62 = v0;
  if (!v5) {
    goto LABEL_17;
  }
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_48;
  }
  long long v63 = v0 + 6;
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    id v9 = [v7 users];
    sub_10018FE08(0, &qword_10047D010);
    uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v68 = v10;
    id v11 = [v8 currentUser];
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if ([v8 owner])
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }

    sub_1002FD920(v68);
  }
  swift_bridgeObjectRelease_n();
  os_log_type_t v12 = v67;
  uint64_t v0 = v62;
  uint64_t v2 = v63;
LABEL_18:
  uint64_t v13 = sub_1002FEFB0((unint64_t)v12);
  swift_bridgeObjectRelease();
  if (qword_1004841E0 != -1) {
    swift_once();
  }
  uint64_t v14 = v0[15];
  uint64_t v15 = v0[16];
  uint64_t v16 = v0[14];
  uint64_t v17 = sub_10018A9A8(v16, (uint64_t)qword_1004841E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v17, v16);
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v18, v19))
  {
    uint64_t v25 = v0[15];
    uint64_t v24 = v0[16];
    uint64_t v26 = v0[14];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
LABEL_44:
    swift_task_dealloc();
    swift_task_dealloc();
    long long v56 = (uint64_t (*)(uint64_t))v0[1];
    return v56(v13);
  }
  uint64_t v20 = swift_slowAlloc();
  uint64_t v66 = swift_slowAlloc();
  *(_DWORD *)uint64_t v20 = 136315394;
  uint64_t v21 = _typeName(_:qualified:)();
  v0[7] = sub_10018A9E0(v21, v22, &v66);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v20 + 12) = 2080;
  unint64_t v64 = v13 & 0xC000000000000001;
  long long v60 = (uint8_t *)v20;
  os_log_type_t v59 = v19;
  if ((v13 & 0xC000000000000001) != 0) {
    uint64_t v23 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v23 = *(void *)(v13 + 16);
  }
  if (!v23)
  {
    uint64_t v30 = v13;
LABEL_43:
    uint64_t v51 = v0[15];
    uint64_t v65 = v0[16];
    uint64_t v52 = v0[14];
    uint64_t v53 = Array.description.getter();
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    v62[8] = sub_10018A9E0(v53, v55, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v0 = v62;
    swift_bridgeObjectRelease();
    uint64_t v13 = v30;
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v59, "[%s - Known users: %s]", v60, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v65, v52);
    goto LABEL_44;
  }
  id v67 = _swiftEmptyArrayStorage;
  sub_1002FE7D4(0, v23 & ~(v23 >> 63), 0);
  if (v64)
  {
    uint64_t v27 = __CocoaSet.startIndex.getter();
    char v29 = 1;
  }
  else
  {
    uint64_t v27 = sub_10018DCC8(v13);
    char v29 = v31 & 1;
  }
  unint64_t v68 = v27;
  uint64_t v69 = v28;
  char v70 = v29;
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v58 = v18;
    uint64_t v32 = v0[12];
    uint64_t v61 = v2 - 4;
    do
    {
      while (1)
      {
        int64_t v40 = v68;
        uint64_t v39 = v69;
        sub_1002FED38(v68, v69, v70, v13);
        id v42 = v41;
        id v43 = [v42 uniqueIdentifier];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        int64_t v44 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1002FE7D4(0, v44[2] + 1, 1);
          int64_t v44 = v67;
        }
        unint64_t v46 = v44[2];
        unint64_t v45 = v44[3];
        if (v46 >= v45 >> 1)
        {
          sub_1002FE7D4(v45 > 1, v46 + 1, 1);
          int64_t v44 = v67;
        }
        uint64_t v47 = v0[13];
        uint64_t v48 = v0[11];
        v44[2] = v46 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 32))((unint64_t)v44+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v46, v47, v48);
        id v67 = v44;
        char v49 = v70;
        if (v64) {
          break;
        }
        int64_t v33 = sub_100013AC4(v40, v39, v70, v13);
        uint64_t v34 = v13;
        uint64_t v36 = v35;
        char v38 = v37;
        sub_100015510(v40, v39, v49);
        unint64_t v68 = v33;
        uint64_t v69 = v36;
        uint64_t v13 = v34;
        uint64_t v0 = v62;
        char v70 = v38 & 1;
        if (!--v23) {
          goto LABEL_42;
        }
      }
      if ((v70 & 1) == 0) {
        goto LABEL_49;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_100013A80(&qword_10047D008);
      uint64_t v50 = (void (*)(void *, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v50(v61, 0);
      --v23;
    }
    while (v23);
LABEL_42:
    uint64_t v30 = v13;
    sub_100015510(v68, v69, v70);
    uint64_t v18 = v58;
    goto LABEL_43;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1002FC83C(uint64_t a1)
{
  uint64_t v36 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v37 = a1 & 0xC000000000000001;
  uint64_t v34 = a1;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v6 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  if (v6)
  {
    id v42 = _swiftEmptyArrayStorage;
    sub_100014688(0, v6 & ~(v6 >> 63), 0);
    if (v37)
    {
      uint64_t result = __CocoaSet.startIndex.getter();
      char v9 = 1;
    }
    else
    {
      uint64_t result = sub_10018DCC8(v34);
      char v9 = v10 & 1;
    }
    uint64_t v39 = result;
    uint64_t v40 = v8;
    char v41 = v9;
    if (v6 < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
    }
    else
    {
      uint64_t v33 = v1;
      id v11 = (void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v12 = v34;
      uint64_t v13 = v34 & 0xFFFFFFFFFFFFFF8;
      if (v34 < 0) {
        uint64_t v13 = v34;
      }
      uint64_t v35 = v13;
      do
      {
        while (1)
        {
          sub_1002FED38(v39, v40, v41, v12);
          id v23 = v22;
          id v24 = [v23 uniqueIdentifier];
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v25 = UUID.uuidString.getter();
          uint64_t v27 = v26;
          (*v11)(v5, v36);

          uint64_t v28 = v42;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = sub_100014688(0, v28[2] + 1, 1);
            uint64_t v28 = v42;
          }
          unint64_t v30 = v28[2];
          unint64_t v29 = v28[3];
          if (v30 >= v29 >> 1)
          {
            uint64_t result = sub_100014688(v29 > 1, v30 + 1, 1);
            uint64_t v28 = v42;
          }
          void v28[2] = v30 + 1;
          char v31 = &v28[2 * v30];
          v31[4] = v25;
          v31[5] = v27;
          if (v37) {
            break;
          }
          uint64_t v14 = v39;
          uint64_t v15 = v40;
          char v16 = v41;
          int64_t v17 = sub_100013AC4(v39, v40, v41, v12);
          uint64_t v19 = v18;
          char v21 = v20;
          sub_100015510(v14, v15, v16);
          uint64_t v39 = v17;
          uint64_t v40 = v19;
          uint64_t v12 = v34;
          char v41 = v21 & 1;
          if (!--v6) {
            goto LABEL_22;
          }
        }
        if ((v41 & 1) == 0) {
          goto LABEL_25;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100013A80(&qword_10047D008);
        uint64_t v32 = (void (*)(char *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v32(v38, 0);
        --v6;
      }
      while (v6);
LABEL_22:
      sub_100015510(v39, v40, v41);
      return (uint64_t)v42;
    }
  }
  return result;
}

uint64_t sub_1002FCB7C(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v25 = type metadata accessor for UUID();
  unint64_t v4 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    if (!v7) {
      return (uint64_t)v8;
    }
    uint64_t v26 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100014688(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v26;
    v21[1] = v2;
    unint64_t v22 = a1 & 0xC000000000000001;
    id v11 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v23 = v7;
    unint64_t v24 = a1;
    while (v7 != v10)
    {
      if (v22) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      id v13 = v12;
      id v14 = [v13 currentUser];
      id v15 = [v14 uniqueIdentifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v2 = UUID.uuidString.getter();
      uint64_t v17 = v16;
      (*v11)(v6, v25);

      uint64_t v26 = v8;
      unint64_t v19 = v8[2];
      unint64_t v18 = v8[3];
      unint64_t v4 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_100014688(v18 > 1, v19 + 1, 1);
        uint64_t v8 = v26;
      }
      ++v10;
      v8[2] = v4;
      char v20 = &v8[2 * v19];
      v20[4] = v2;
      v20[5] = v17;
      uint64_t v7 = v23;
      a1 = v24;
      if (v23 == v10) {
        return (uint64_t)v8;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1002FCF30(const void *a1, void *a2)
{
  v2[3] = a2;
  v2[4] = _Block_copy(a1);
  a2;
  unint64_t v4 = (void *)swift_task_alloc();
  v2[5] = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_1002FCFD8;
  return sub_1002FBD10();
}

uint64_t sub_1002FCFD8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002FD0D8, 0, 0);
}

uint64_t sub_1002FD0D8()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = (void (**)(void, void))v0[4];
  uint64_t v3 = sub_1002FC83C(v0[6]);
  swift_bridgeObjectRelease();
  sub_10000B4EC(v3);
  swift_bridgeObjectRelease();

  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  ((void (**)(void, Class))v1)[2](v1, isa);

  _Block_release(v1);
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1002FD1C0()
{
  *(void *)(v1 + 32) = v0;
  return _swift_task_switch(sub_1002FD1E0, 0, 0);
}

uint64_t sub_1002FD1E0()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)(*(void *)(v0 + 32)
                                                                 + OBJC_IVAR___MRDGroupSessionHomeObserver_managerWrapper)
                                                   + 176)
                                       + **(int **)(**(void **)(*(void *)(v0 + 32)
                                                                + OBJC_IVAR___MRDGroupSessionHomeObserver_managerWrapper)
                                                  + 176));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_1002FD2F8;
  return v3(v0 + 16);
}

uint64_t sub_1002FD2F8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002FD3F4, 0, 0);
}

uint64_t sub_1002FD3F4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = [v1 homes];

  sub_10018FE08(0, &qword_10047CF98);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v4 = sub_1002FCB7C(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10000B4EC(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v5);
}

uint64_t sub_1002FD644(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002FD708;
  v5[4] = v4;
  return _swift_task_switch(sub_1002FD1E0, 0, 0);
}

uint64_t sub_1002FD708()
{
  uint64_t v1 = *(void (***)(void, void))(*v0 + 24);
  id v2 = *(void **)(*v0 + 16);
  uint64_t v6 = *v0;
  swift_task_dealloc();

  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  ((void (**)(void, Class))v1)[2](v1, isa);

  _Block_release(v1);
  id v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1002FD920(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    uint64_t *v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1002FEA34(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1002FDAEC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_10018FE08(0, &qword_10047D010);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_1002FDD8C(v7, result + 1);
    uint64_t v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_1002FDF84();
      uint64_t v23 = v28;
    }
    else
    {
      uint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_1001F1428((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_10018FE08(0, &qword_10047D010);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        char v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_1002FE224((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

Swift::Int sub_1002FDD8C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100013A80(&qword_10047D028);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_10018FE08(0, &qword_10047D010);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1002FDF84();
          uint64_t v2 = v14;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_1002FDF84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013A80(&qword_10047D028);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

void sub_1002FE224(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1002FDF84();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1002FE3AC();
      goto LABEL_14;
    }
    sub_1002FE558();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_10018FE08(0, &qword_10047D010);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = static NSObject.== infix(_:_:)();

    if (v12)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = static NSObject.== infix(_:_:)();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

id sub_1002FE3AC()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_10047D028);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1002FE558()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013A80(&qword_10047D028);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = NSObject._rawHashValue(seed:)(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1002FE7D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1002FE7F4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1002FE7F4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100013A80(&qword_10047D018);
  uint64_t v10 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int64_t v18 = (char *)v13 + v17;
  Swift::Int v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002FEA34(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1002FF350();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100013A80(&qword_10047D030);
          unint64_t v12 = sub_1002FEC48(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10018FE08(0, &qword_10047D010);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void (*sub_1002FEC48(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1002FECB0(v6, a2, a3);
  return sub_100246E28;
}

void (*sub_1002FECB0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1002FED30;
  }
  __break(1u);
  return result;
}

void sub_1002FED30(id *a1)
{
}

void sub_1002FED38(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_10018FE08(0, &qword_10047D010);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_10018FE08(0, &qword_10047D010);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = static NSObject.== infix(_:_:)();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  id v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_1002FEFB0(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_10018FE08(0, &qword_10047D010);
  sub_1002FF2E8();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        unint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1002FDAEC(&v9, v6);
      }
    }
    else
    {
      Swift::Int v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1002FDAEC(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for GroupSessionHomeObserver()
{
  return self;
}

ValueMetadata *type metadata accessor for GroupSessionHomeObserver.Timeout()
{
  return &type metadata for GroupSessionHomeObserver.Timeout;
}

uint64_t sub_1002FF13C()
{
  unint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10000D170;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_10047CFC8 + dword_10047CFC8);
  return v5(v2, v3);
}

uint64_t sub_1002FF1F4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002FF234()
{
  unint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100013F84;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_10047CFE8 + dword_10047CFE8);
  return v5(v2, v3);
}

unint64_t sub_1002FF2E8()
{
  unint64_t result = qword_10047D020;
  if (!qword_10047D020)
  {
    sub_10018FE08(255, &qword_10047D010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D020);
  }
  return result;
}

unint64_t sub_1002FF350()
{
  unint64_t result = qword_10047D038;
  if (!qword_10047D038)
  {
    sub_10018F8A4(&qword_10047D030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D038);
  }
  return result;
}

uint64_t sub_1002FF3AC()
{
  uint64_t v1 = sub_100013A80(&qword_10047D048);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1002FF454(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100013A80(&qword_10047D048) - 8);
  uint64_t v4 = *(void **)(v1
                + ((*(void *)(v3 + 64)
                  + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                  + 7) & 0xFFFFFFFFFFFFFFF8));
  if (!a1)
  {
    if (qword_1004841E0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10018A9A8(v10, (uint64_t)qword_1004841E8);
    unint64_t v6 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v6, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)id v12 = 136315138;
      sub_10018A9E0(0xD000000000000018, 0x80000001003CA420, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v6, v11, "[%s] - Refreshed HMHomeManager", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    goto LABEL_11;
  }
  swift_errorRetain();
  if (qword_1004841E0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10018A9A8(v5, (uint64_t)qword_1004841E8);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v6, v7))
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
LABEL_11:

    goto LABEL_12;
  }
  uint64_t v8 = swift_slowAlloc();
  id v9 = (void *)swift_slowAlloc();
  uint64_t v16 = swift_slowAlloc();
  *(_DWORD *)uint64_t v8 = 136315650;
  sub_10018A9E0(0xD000000000000018, 0x80000001003CA420, &v16);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v8 + 12) = 2048;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v8 + 22) = 2112;
  swift_errorRetain();
  uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *id v9 = v15;
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%s] - Failed to populate HMHomeManager within %f: %@", (uint8_t *)v8, 0x20u);
  sub_100013A80((uint64_t *)&unk_10047B850);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  swift_errorRelease();
LABEL_12:
  uint64_t v16 = (uint64_t)v4;
  id v13 = v4;
  sub_100013A80(&qword_10047D048);
  return CheckedContinuation.resume(returning:)();
}

id sub_1002FF8A8()
{
  id v0 = [self server];
  id v1 = [v0 nowPlayingServer];

  return v1;
}

void sub_1002FF908(char *a1@<X8>)
{
  id v3 = [v1 localOriginClient];
  id v6 = v3;
  id v4 = [v6 activeNowPlayingClient];
  id v5 = [v4 activePlayerClient];

  sub_1002A0D30(v3, v5, a1);
}

void *sub_1002FF9B4()
{
  return sub_1002FF9CC((SEL *)&selRef_systemMediaApplication);
}

void *sub_1002FF9C0()
{
  return sub_1002FF9CC((SEL *)&selRef_systemPodcastApplication);
}

void *sub_1002FF9CC(SEL *a1)
{
  id v3 = [v1 deviceInfo];
  id v4 = [v3 *a1];

  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  id v5 = [v1 defaultSupportedCommandsForClient:v4];

  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = (unint64_t)sub_1001D2430(v6);
  swift_bridgeObjectRelease();
  if (!v7) {
    return _swiftEmptyArrayStorage;
  }
  if (v7 >> 62) {
    goto LABEL_25;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    return _swiftEmptyArrayStorage;
  }
LABEL_5:
  uint64_t v9 = 4;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v7 + 8 * v9);
    }
    os_log_type_t v11 = v10;
    uint64_t v12 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      if (!v8) {
        goto LABEL_12;
      }
      goto LABEL_5;
    }
    if ([v10 command] == 133) {
      break;
    }

    ++v9;
    if (v12 == v8) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease_n();
  id v13 = [v11 options];
  if (!v13)
  {

    long long v21 = 0u;
    long long v22 = 0u;
LABEL_22:
    sub_100194AE4((uint64_t)&v21);
    return _swiftEmptyArrayStorage;
  }
  id v14 = v13;
  uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  id v16 = kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  sub_100013A80(&qword_100479570);
  sub_1001E70CC();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v15 + 16) && (unint64_t v17 = sub_10018C3C4((uint64_t)v20), (v18 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v15 + 56) + 32 * v17, (uint64_t)&v21);
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }

  sub_10018FFC8((uint64_t)v20);
  swift_bridgeObjectRelease();
  if (!*((void *)&v22 + 1)) {
    goto LABEL_22;
  }
  sub_100013A80(&qword_10047A080);
  if (!swift_dynamicCast()) {
    return _swiftEmptyArrayStorage;
  }
  return (void *)v20[0];
}

uint64_t sub_1002FFC6C()
{
  id v1 = [v0 timeSincePlaying];
  v2.n128_f64[0] = -v2.n128_f64[0];

  return Date.init(timeIntervalSinceNow:)(v1, v2);
}

void *sub_1002FFCB4()
{
  id v1 = [v0 supportedRemoteControlCommands];
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  __n128 v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v4 = (unint64_t)sub_1001D2430(v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  if (v4 >> 62) {
    goto LABEL_25;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    return _swiftEmptyArrayStorage;
  }
LABEL_5:
  uint64_t v6 = 4;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * v6);
    }
    uint64_t v8 = v7;
    uint64_t v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (!v5) {
        goto LABEL_12;
      }
      goto LABEL_5;
    }
    if ([v7 command] == 133) {
      break;
    }

    ++v6;
    if (v9 == v5) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease_n();
  id v10 = [v8 options];
  if (!v10)
  {

    long long v18 = 0u;
    long long v19 = 0u;
LABEL_22:
    sub_100194AE4((uint64_t)&v18);
    return _swiftEmptyArrayStorage;
  }
  os_log_type_t v11 = v10;
  uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  id v13 = kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  sub_100013A80(&qword_100479570);
  sub_1001E70CC();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v12 + 16) && (unint64_t v14 = sub_10018C3C4((uint64_t)v17), (v15 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(v12 + 56) + 32 * v14, (uint64_t)&v18);
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }

  sub_10018FFC8((uint64_t)v17);
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1)) {
    goto LABEL_22;
  }
  sub_100013A80(&qword_10047A080);
  if (!swift_dynamicCast()) {
    return _swiftEmptyArrayStorage;
  }
  return (void *)v17[0];
}

uint64_t sub_1002FFF10(uint64_t a1)
{
  uint64_t v31 = type metadata accessor for HostedRoutingItem(0);
  uint64_t v2 = *(void *)(v31 - 8);
  uint64_t v3 = __chkstk_darwin(v31);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v29 - v6;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8)
  {
LABEL_13:
    id v24 = sub_100300968((uint64_t)v9);
    swift_bridgeObjectRelease();
    id v25 = [self symbolNameForComposition:v24];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v14;
  }
  if (v8 != 1)
  {
    uint64_t v32 = _swiftEmptyArrayStorage;
    sub_100300830(0, v8, 0);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v16 = *(void *)(v2 + 72);
    uint64_t v9 = v32;
    uint64_t v30 = v16;
    do
    {
      sub_1001B9A9C(v15, (uint64_t)v5);
      unint64_t v17 = &v5[*(int *)(v31 + 56)];
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *((void *)v17 + 1);
      unsigned __int16 v20 = *((_WORD *)v17 + 8);
      sub_1001B9E5C(*(void *)v17, v19, v20);
      sub_1001B9E00((uint64_t)v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100300830(0, v9[2] + 1, 1);
        uint64_t v16 = v30;
        uint64_t v9 = v32;
      }
      unint64_t v22 = v9[2];
      unint64_t v21 = v9[3];
      if (v22 >= v21 >> 1)
      {
        sub_100300830((char *)(v21 > 1), v22 + 1, 1);
        uint64_t v16 = v30;
        uint64_t v9 = v32;
      }
      v9[2] = v22 + 1;
      unint64_t v23 = &v9[3 * v22];
      v23[4] = v18;
      v23[5] = v19;
      *((_WORD *)v23 + 24) = v20;
      v15 += v16;
      --v8;
    }
    while (v8);
    goto LABEL_13;
  }
  sub_1001B9A9C(a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), (uint64_t)&v29 - v6);
  id v10 = &v7[*(int *)(v31 + 56)];
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *((void *)v10 + 1);
  unsigned int v13 = *((unsigned __int16 *)v10 + 8);
  if (((v13 >> 8) & 6 | (v13 >> 7) & 1) == 6 && !(v12 | v11) && v13 == 1536)
  {
    uint64_t v14 = 0xD00000000000001FLL;
  }
  else
  {
    id v26 = sub_100301190(v11, v12, v13);
    id v27 = [self symbolNameForComposition:v26];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_1001B9E00((uint64_t)v7);
  return v14;
}

uint64_t sub_10030020C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v68 = *(void *)(result + 16);
  if (!v68) {
    return result;
  }
  uint64_t v10 = a8;
  uint64_t v11 = a7;
  uint64_t v12 = a6;
  uint64_t v13 = a5;
  uint64_t v14 = a4;
  uint64_t v15 = a3;
  uint64_t v67 = result + 32;
  uint64_t v58 = (uint64_t *)(a3 + 16);
  long long v56 = (uint64_t *)(a5 + 16);
  uint64_t v57 = (uint64_t *)(a4 + 16);
  uint64_t v52 = (uint64_t *)(a7 + 16);
  uint64_t v53 = (uint64_t *)(a6 + 16);
  uint64_t v51 = (uint64_t *)(a8 + 16);
  unint64_t v54 = (void *)(a10 + 16);
  unint64_t v55 = (void *)(a9 + 16);
  os_log_type_t v59 = (uint64_t *)(a2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  uint64_t v64 = v10;
  uint64_t v65 = v15;
  uint64_t v62 = v12;
  uint64_t v63 = v11;
  uint64_t v60 = v14;
  uint64_t v61 = v13;
  while (2)
  {
    uint64_t v74 = v16;
    uint64_t v17 = v67 + 24 * v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    unsigned int v20 = *(unsigned __int16 *)(v17 + 16);
    sub_1001B9E5C(*(void *)v17, v19, v20);
    uint64_t v21 = sub_10029B16C(v18, v19, v20);
    uint64_t v70 = v21;
    uint64_t v71 = v22;
    unsigned __int16 v72 = v23;
    int v24 = v23 >> 11;
    uint64_t v73 = v19;
    unsigned int v75 = v20;
    if (v24 == 10 || (v24 != 9 ? (BOOL v25 = v24 == 8) : (BOOL v25 = 1), v25))
    {
      uint64_t v26 = *(void *)(v21 + 16);
      int64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        swift_bridgeObjectRetain();
        sub_100300830(0, v27, 0);
        uint64_t v28 = (unsigned __int16 *)(v26 + 64);
        do
        {
          uint64_t v30 = *((void *)v28 - 2);
          uint64_t v29 = *((void *)v28 - 1);
          __int16 v31 = *v28;
          sub_1001B9E5C(v30, v29, *v28);
          unint64_t v33 = _swiftEmptyArrayStorage[2];
          unint64_t v32 = _swiftEmptyArrayStorage[3];
          if (v33 >= v32 >> 1) {
            sub_100300830((char *)(v32 > 1), v33 + 1, 1);
          }
          v28 += 20;
          _swiftEmptyArrayStorage[2] = v33 + 1;
          uint64_t v34 = &_swiftEmptyArrayStorage[3 * v33];
          v34[4] = v30;
          v34[5] = v29;
          *((_WORD *)v34 + 24) = v31;
          --v27;
        }
        while (v27);
        swift_bridgeObjectRelease();
        uint64_t v11 = v63;
        uint64_t v10 = v64;
        uint64_t v13 = v61;
        uint64_t v12 = v62;
        uint64_t v14 = v60;
        uint64_t v15 = v65;
      }
      sub_10030020C(_swiftEmptyArrayStorage, a2, v15, v14, v13, v12, v11, v10, a9, a10);
      sub_1001B9958(v18, v73, v75);
      sub_1001B99B8(v70, v71, v72);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    uint64_t v35 = v18;
    uint64_t v38 = sub_10029B16C(v18, v19, v20);
    uint64_t v39 = v36;
    unsigned __int16 v40 = v37;
    if (sub_10029C634(v38, v36, v37))
    {
      sub_1001B99B8(v38, v39, v40);
      char v41 = v59;
      swift_beginAccess();
      uint64_t v42 = *v59 + 1;
      if (*v59 == -1)
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        JUMPOUT(0x10030073CLL);
      }
      goto LABEL_20;
    }
    switch(v40 >> 11)
    {
      case 2:
        sub_1001B99B8(v38, v39, v40);
        char v41 = v56;
        swift_beginAccess();
        uint64_t v42 = *v56 + 1;
        if (*v56 == -1) {
          goto LABEL_65;
        }
        goto LABEL_20;
      case 6:
        sub_1001B99B8(v38, v39, v40);
        char v41 = v58;
        swift_beginAccess();
        uint64_t v42 = *v58 + 1;
        if (*v58 == -1) {
          goto LABEL_67;
        }
        goto LABEL_20;
      case 7:
        sub_1001B99B8(v38, v39, v40);
        char v41 = v57;
        swift_beginAccess();
        uint64_t v42 = *v57 + 1;
        if (*v57 == -1) {
          goto LABEL_68;
        }
        goto LABEL_20;
      case 11:
        sub_1001B99B8(v38, v39, v40);
        char v41 = (uint64_t *)(a9 + 16);
        swift_beginAccess();
        uint64_t v42 = *v55 + 1;
        if (*v55 == -1) {
          goto LABEL_66;
        }
        goto LABEL_20;
      case 17:
        if (v40 == 34816 && v38 == 8 && v39 == 0)
        {
          char v41 = v53;
          swift_beginAccess();
          uint64_t v42 = *v53 + 1;
          if (*v53 == -1) {
            goto LABEL_70;
          }
          goto LABEL_20;
        }
        if (v40 == 34816 && v38 == 9 && v39 == 0)
        {
          char v41 = v52;
          swift_beginAccess();
          uint64_t v42 = *v52 + 1;
          if (*v52 == -1) {
            goto LABEL_71;
          }
          goto LABEL_20;
        }
        if (v40 != 34816 || v38 != 6 || v39 != 0)
        {
LABEL_53:
          char v69 = sub_10029C6F4(v38, v39, v40);
          sub_1001B99B8(v38, v39, v40);
          uint64_t v43 = v35;
          unsigned int v44 = v75;
          if ((v69 & 1) == 0) {
            goto LABEL_22;
          }
          char v41 = (uint64_t *)(a10 + 16);
          swift_beginAccess();
          uint64_t v42 = *v54 + 1;
          if (*v54 == -1) {
            goto LABEL_69;
          }
LABEL_21:
          uint64_t *v41 = v42;
LABEL_22:
          sub_1001B9958(v43, v73, v44);
          sub_1001B99B8(v70, v71, v72);
          uint64_t v15 = v65;
LABEL_4:
          uint64_t v16 = v74 + 1;
          if (v74 + 1 == v68) {
            return swift_bridgeObjectRelease();
          }
          continue;
        }
        char v41 = v51;
        swift_beginAccess();
        uint64_t v42 = *v51 + 1;
        if (*v51 != -1)
        {
LABEL_20:
          uint64_t v43 = v35;
          unsigned int v44 = v75;
          goto LABEL_21;
        }
        __break(1u);
        return swift_bridgeObjectRelease();
      default:
        goto LABEL_53;
    }
  }
}

unint64_t sub_10030077C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (((a3 >> 8) & 6 | (a3 >> 7) & 1) == 6 && !(a2 | a1) && (unsigned __int16)a3 == 1536) {
    return 0xD00000000000001FLL;
  }
  id v4 = sub_100301190(a1, a2, a3);
  id v5 = [self symbolNameForComposition:v4];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

char *sub_100300830(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_100300850(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_100300850(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100013A80(&qword_10047D0E8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

id sub_100300968(uint64_t a1)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  sub_10030020C(a1, v9, v11, v12, v1, v2, v3, v4, v5, v10);
  id v6 = [objc_allocWithZone((Class)MRGroupComposition) init];
  swift_beginAccess();
  [v6 setAtvCount:*(void *)(v12 + 16)];
  swift_beginAccess();
  [v6 setHomePodCount:*(void *)(v11 + 16)];
  swift_beginAccess();
  [v6 setHomePodMiniCount:*(void *)(v9 + 16)];
  swift_beginAccess();
  [v6 setHeadphoneCount:*(void *)(v1 + 16)];
  swift_beginAccess();
  [v6 setSetTopCount:*(void *)(v2 + 16)];
  swift_beginAccess();
  [v6 setTvStickCount:*(void *)(v3 + 16)];
  swift_beginAccess();
  [v6 setTvCount:*(void *)(v4 + 16)];
  swift_beginAccess();
  [v6 setMacCount:*(void *)(v5 + 16)];
  swift_beginAccess();
  [v6 setHifiCount:*(void *)(v10 + 16)];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v6;
}

id sub_100300CD4(uint64_t a1, unsigned __int16 a2)
{
  int v2 = a2 >> 11;
  if (v2 != 10)
  {
    if (v2 == 9)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v59 = *(void *)(v3 + 16);
      if (v59)
      {
        uint64_t v4 = *(void *)(v3 + 48);
        uint64_t v5 = *(void *)(v3 + 56);
        unsigned int v6 = *(unsigned __int16 *)(v3 + 64);
        uint64_t v57 = v3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001B9E5C(v4, v5, v6);
        uint64_t v7 = sub_10029BF88();
        uint64_t v9 = v8;
        unsigned __int16 v11 = v10;
        BOOL v12 = sub_10029C634(v7, v8, v10);
        sub_1001B99B8(v7, v9, v11);
        swift_bridgeObjectRelease();
        sub_1001B9958(v4, v5, v6);
        if (v12)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          id v13 = [self homePodMiniHomeTheaterComposition];
LABEL_30:
          return v13;
        }
        if (v59 != 1)
        {
          uint64_t v35 = (unsigned __int16 *)(v57 + 104);
          uint64_t v36 = 1;
          while (1)
          {
            uint64_t v37 = *((void *)v35 - 2);
            uint64_t v38 = *((void *)v35 - 1);
            unsigned int v39 = *v35;
            uint64_t v40 = v36 + 1;
            if (__OFADD__(v36, 1)) {
              break;
            }
            swift_bridgeObjectRetain();
            sub_1001B9E5C(v37, v38, v39);
            uint64_t v41 = sub_10029BF88();
            uint64_t v43 = v42;
            unsigned __int16 v45 = v44;
            BOOL v61 = sub_10029C634(v41, v42, v44);
            sub_1001B99B8(v41, v43, v45);
            swift_bridgeObjectRelease();
            sub_1001B9958(v37, v38, v39);
            if (v61) {
              goto LABEL_5;
            }
            v35 += 20;
            ++v36;
            if (v40 == v59) {
              goto LABEL_21;
            }
          }
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_21:
        swift_bridgeObjectRelease();
      }
      id v13 = [self homePodHomeTheaterComposition];
      goto LABEL_30;
    }
    if (v2 != 8)
    {
LABEL_35:
      id result = (id)_assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    uint64_t v25 = *(void *)(a1 + 16);
    uint64_t v60 = *(void *)(v25 + 16);
    if (v60)
    {
      uint64_t v26 = *(void *)(v25 + 48);
      uint64_t v27 = *(void *)(v25 + 56);
      unsigned int v28 = *(unsigned __int16 *)(v25 + 64);
      uint64_t v58 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001B9E5C(v26, v27, v28);
      uint64_t v29 = sub_10029BF88();
      uint64_t v31 = v30;
      unsigned __int16 v33 = v32;
      BOOL v34 = sub_10029C634(v29, v30, v32);
      sub_1001B99B8(v29, v31, v33);
      swift_bridgeObjectRelease();
      sub_1001B9958(v26, v27, v28);
      if (v34)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        id v13 = [self homePodMiniStereoPairComposition];
        goto LABEL_30;
      }
      if (v60 != 1)
      {
        unint64_t v46 = (unsigned __int16 *)(v58 + 104);
        uint64_t v47 = 1;
        do
        {
          uint64_t v48 = *((void *)v46 - 2);
          uint64_t v49 = *((void *)v46 - 1);
          unsigned int v50 = *v46;
          uint64_t v51 = v47 + 1;
          if (__OFADD__(v47, 1)) {
            goto LABEL_34;
          }
          swift_bridgeObjectRetain();
          sub_1001B9E5C(v48, v49, v50);
          uint64_t v52 = sub_10029BF88();
          uint64_t v54 = v53;
          unsigned __int16 v56 = v55;
          BOOL v62 = sub_10029C634(v52, v53, v55);
          sub_1001B99B8(v52, v54, v56);
          swift_bridgeObjectRelease();
          sub_1001B9958(v48, v49, v50);
          if (v62) {
            goto LABEL_15;
          }
          v46 += 20;
          ++v47;
        }
        while (v51 != v60);
      }
      swift_bridgeObjectRelease();
    }
    id v13 = [self homePodStereoPairComposition];
    goto LABEL_30;
  }
  uint64_t v14 = *(void *)(a1 + 16);
  int64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    sub_100300830(0, v15, 0);
    uint64_t v16 = (unsigned __int16 *)(v14 + 64);
    do
    {
      uint64_t v17 = *((void *)v16 - 2);
      uint64_t v18 = *((void *)v16 - 1);
      __int16 v19 = *v16;
      sub_1001B9E5C(v17, v18, *v16);
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      unint64_t v20 = _swiftEmptyArrayStorage[3];
      if (v21 >= v20 >> 1) {
        sub_100300830((char *)(v20 > 1), v21 + 1, 1);
      }
      v16 += 20;
      _swiftEmptyArrayStorage[2] = v21 + 1;
      uint64_t v22 = &_swiftEmptyArrayStorage[3 * v21];
      v22[4] = v17;
      v22[5] = v18;
      *((_WORD *)v22 + 24) = v19;
      --v15;
    }
    while (v15);
  }
  id v23 = sub_100300968((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  return v23;
}

id sub_100301190(uint64_t a1, uint64_t a2, unsigned int a3)
{
  id v6 = [objc_allocWithZone((Class)MRGroupComposition) init];
  int v7 = (a3 >> 8) & 6 | (a3 >> 7) & 1;
  if (v7 == 3)
  {
    [v6 setCarplayCount:1];
    return v6;
  }
  uint64_t v8 = sub_10029B16C(a1, a2, a3);
  uint64_t v10 = v9;
  unsigned __int16 v12 = v11;
  if (sub_10029C688(v8, v9, v11))
  {
    [v6 setDisplayCount:1];
    uint64_t v13 = v8;
LABEL_14:
    sub_1001B99B8(v13, v10, v12);
    return v6;
  }
  uint64_t v30 = v8;
  if (v12 >> 11 == 15 && v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = v8;
    NSString v15 = String._bridgeToObjectiveC()();
    sub_1001B99B8(v30, v10, v12);
    [v6 setSoloProductIdentifier:v15];

    [v6 setHeadphoneCount:1];
LABEL_9:
    uint64_t v13 = v14;
    goto LABEL_14;
  }
  if (v7 == 5 || MSVDeviceIsAppleTV())
  {
    [v6 setBuiltInCount:1];
LABEL_13:
    uint64_t v13 = v8;
    goto LABEL_14;
  }
  switch(v12 >> 11)
  {
    case 6:
      uint64_t v14 = v8;
      if (sub_10029C634(v8, v10, v12)) {
        [v6 setHomePodMiniCount:1];
      }
      else {
        [v6 setHomePodCount:1];
      }
      goto LABEL_9;
    case 7:
      [v6 setAtvCount:1];
      goto LABEL_13;
    case 8:
    case 9:
    case 10:
      id v16 = sub_100300CD4(v8, v12);
      uint64_t v24 = v30;
      goto LABEL_92;
    case 11:
      if (v10)
      {
        uint64_t v14 = v8;
        NSString v26 = String._bridgeToObjectiveC()();
      }
      else
      {
        NSString v26 = 0;
        uint64_t v14 = v30;
      }
      [v6 setSoloModelIdentifier:v26];

      [v6 setMacCount:1];
      goto LABEL_9;
    case 12:
      if (v10)
      {
        uint64_t v14 = v8;
        NSString v27 = String._bridgeToObjectiveC()();
      }
      else
      {
        NSString v27 = 0;
        uint64_t v14 = v30;
      }
      [v6 setSoloModelIdentifier:v27];

      [v6 setIPhoneCount:1];
      goto LABEL_9;
    case 14:
      if (v10)
      {
        uint64_t v14 = v8;
        NSString v28 = String._bridgeToObjectiveC()();
      }
      else
      {
        NSString v28 = 0;
        uint64_t v14 = v30;
      }
      [v6 setSoloModelIdentifier:v28];

      [v6 setVisionCount:1];
      goto LABEL_9;
    case 16:
      [v6 setLegacyBeatsCount:1];
      goto LABEL_13;
    case 17:
      if (v12 == 34816 && !(v8 | v10)
        || v12 == 34816 && v8 == 1 && !v10
        || v12 == 34816 && v8 == 2 && !v10
        || v12 == 34816 && v8 == 3 && !v10
        || v12 == 34816 && v8 == 4 && !v10
        || v12 == 34816 && v8 == 5 && !v10)
      {
        goto LABEL_18;
      }
      if (v12 == 34816 && v8 == 6 && !v10)
      {
        [v6 setTvCount:1];
        return v6;
      }
      if (v12 != 34816 || v8 != 7 || v10)
      {
        if (v12 == 34816 && v8 == 8 && !v10)
        {
          [v6 setSetTopCount:1];
        }
        else if (v12 == 34816 && v8 == 9 && !v10)
        {
          [v6 setTvStickCount:1];
        }
        else
        {
          [v6 setHearingDeviceCount:1];
        }
        return v6;
      }
LABEL_18:
      id v16 = [objc_allocWithZone((Class)MRGroupComposition) init];
      uint64_t v18 = sub_10029B16C(a1, a2, a3);
      uint64_t v21 = v18;
      uint64_t v22 = v19;
      unsigned __int16 v23 = v20;
      switch(v7)
      {
        case 0:
LABEL_19:
          [v16 setUnknownCount:1];
          goto LABEL_90;
        case 1:
          if ((v20 & 0xF900) == 0x900) {
LABEL_23:
          }
            [v16 setHifiCount:1];
          else {
LABEL_25:
          }
            [v16 setLofiCount:1];
          goto LABEL_90;
        case 2:
          int v25 = v20 >> 11;
          if (v25 == 2)
          {
            if (v19) {
              NSString v29 = String._bridgeToObjectiveC()();
            }
            else {
              NSString v29 = 0;
            }
            [v16 setSoloProductIdentifier:v29];
          }
          else if (v25 == 17 && v20 == 34816 && v18 == 4 && !v19)
          {
            [v16 setHeadphoneCount:1];
            goto LABEL_91;
          }
          [v16 setBluetoothSpeakerCount:1];
LABEL_90:
          sub_1001B99B8(v21, v22, v23);
LABEL_91:
          uint64_t v24 = v30;
          break;
        case 3:
          [v16 setCarplayCount:1];
          goto LABEL_90;
        default:
          switch(v20 >> 11)
          {
            case 2:
              [v16 setHeadphoneCount:1];
              break;
            case 4:
            case 5:
              if (v18) {
                goto LABEL_23;
              }
              goto LABEL_25;
            case 11:
              [v16 setMacCount:1];
              break;
            case 12:
              [v16 setIPhoneCount:1];
              break;
            case 14:
              [v16 setVisionCount:1];
              break;
            case 17:
              if ((v20 != 34816 || v18 != 2 || v19)
                && (v20 != 34816 || v18 != 3 || v19)
                && (v20 != 34816 || v18 != 6 || v19))
              {
                goto LABEL_19;
              }
              [v16 setTvCount:1];
              break;
            default:
              goto LABEL_19;
          }
          goto LABEL_90;
      }
LABEL_92:
      sub_1001B99B8(v24, v10, v12);

      break;
    default:
      goto LABEL_18;
  }
  return v16;
}

uint64_t type metadata accessor for Symbols()
{
  return self;
}

uint64_t sub_100301864()
{
  return _swift_deallocObject(v0, 24, 7);
}

MRDMediaControlIPCServer __swiftcall MRDMediaControlIPCServer.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return (MRDMediaControlIPCServer)[v0 init];
}

id MRDMediaControlIPCServer.init()()
{
  v1.super_class = (Class)MRDMediaControlIPCServer;
  return objc_msgSendSuper2(&v1, "init");
}

uint64_t sub_100301B14()
{
  id v0 = (void *)*sub_100266CC0();
  type metadata accessor for RoutingSessionServer();
  id v1 = v0;
  OS_dispatch_queue.asyncAndWait<A>(execute:)();

  return v3;
}

uint64_t sub_100301B90()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v1 + 16))
  {
    uint64_t v6 = *(void *)(v1 + 16);
LABEL_5:
    swift_retain();
    return v6;
  }
  int v7 = sub_100266CC0();
  uint64_t v8 = (void *)*v7;
  *uint64_t v5 = *v7;
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v8)
  {
    type metadata accessor for RoutingSessionServer();
    uint64_t v6 = sub_1001BFB04();
    *(void *)(v1 + 16) = v6;
    swift_retain();
    swift_release();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

unint64_t sub_100301CEC()
{
  return 0xD000000000000010;
}

uint64_t sub_100301D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003088DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_100301D44(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_100301D50(uint64_t a1)
{
  unint64_t v2 = sub_1003087E0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100301D8C(uint64_t a1)
{
  unint64_t v2 = sub_1003087E0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100301DC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_100301DF8(uint64_t a1)
{
  unint64_t v2 = sub_100308834();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100301E34(uint64_t a1)
{
  unint64_t v2 = sub_100308834();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100301E70(uint64_t a1)
{
  unint64_t v2 = sub_100308888();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100301EAC(uint64_t a1)
{
  unint64_t v2 = sub_100308888();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100301EE8(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = sub_100013A80(&qword_10047D0F0);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100013A80(&qword_10047D0F8);
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100013A80(&qword_10047D100);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned __int16 v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BDB5C(a1, a1[3]);
  sub_1003087E0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_100308834();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_100308888();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

uint64_t sub_100302198@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1003089C8(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1003021C8(void *a1)
{
  return sub_100301EE8(a1, *v1);
}

__n128 sub_1003021E4@<Q0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  char v3 = *(unsigned char *)(v1 + 48);
  __n128 result = *(__n128 *)(v1 + 16);
  long long v5 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_100302230(uint64_t a1)
{
  swift_beginAccess();
  return sub_100308E18(a1, v1 + 16);
}

uint64_t sub_10030227C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1003022C8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_10030231C())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_100302370()
{
  swift_beginAccess();
  return *(unsigned int *)(v0 + 72) | ((unint64_t)*(unsigned __int8 *)(v0 + 76) << 32);
}

uint64_t sub_1003023B4(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v1 + 72) = a1;
  *(unsigned char *)(v1 + 76) = BYTE4(a1) & 1;
  return result;
}

uint64_t sub_1003023FC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(unsigned char *)(v2 + 48) = 1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(_DWORD *)(v2 + 72) = 0;
  *(unsigned char *)(v2 + 76) = 1;
  *(void *)(v2 + 88) = sub_1001E78B8();
  *(void *)(v2 + 96) = v3;
  *(void *)(v2 + 80) = a1;
  return v2;
}

uint64_t sub_10030245C()
{
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 40;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  uint64_t v3 = v0[11];
  uint64_t v4 = (void *)v0[12];
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x646E7562202D2029;
  v6._object = (void *)0xEC000000203A656CLL;
  String.append(_:)(v6);
  uint64_t v7 = (*(uint64_t (**)(void))(*v0 + 144))();
  if (v8)
  {
    unint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 7104878;
    unint64_t v9 = 0xE300000000000000;
  }
  unint64_t v10 = v9;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0x203A646970202CLL;
  v11._object = (void *)0xE700000000000000;
  String.append(_:)(v11);
  (*(uint64_t (**)(void))(*v0 + 168))();
  v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 62;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  return 60;
}

uint64_t sub_100302638@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for InternalRoutingError();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_100013A80(&qword_10047D110);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (uint64_t *)&v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_100266CC0();
  uint64_t v15 = (void *)*v14;
  uint64_t *v13 = *v14;
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v15)
  {
    uint64_t v17 = XPCReceivedMessage.auditToken.getter();
    sub_100302BC8(v17, v18, v19, v20);
    if (qword_100484210 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  swift_retain();
  sub_10030546C(a1, v3, (uint64_t)v9);
  swift_release();
  uint64_t v21 = type metadata accessor for ReplyMessage();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48))(v9, 1, v21) == 1)
  {
    uint64_t result = sub_100009A08((uint64_t)v9, &qword_10047D110);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(void *)(a2 + 32) = 0;
  }
  else
  {
    *(void *)(a2 + 24) = v21;
    *(void *)(a2 + 32) = sub_100309564(&qword_10047D118, 255, (void (*)(uint64_t))&type metadata accessor for ReplyMessage);
    uint64_t v24 = sub_1001922CC((uint64_t *)a2);
    return (*(uint64_t (**)(uint64_t *, unsigned char *, uint64_t))(v22 + 32))(v24, v9, v21);
  }
  return result;
}

uint64_t sub_1003029CC()
{
  Swift::String v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100266CC0();
  uint64_t v7 = (void *)*v6;
  *Swift::String v5 = *v6;
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (qword_100484210 != -1) {
LABEL_5:
  }
    swift_once();
  swift_beginAccess();
  uint64_t v9 = qword_1004862C8;
  swift_retain();
  uint64_t v12 = sub_100249674();
  sub_100307FA8(v1);
  swift_release();
  *(void *)(v9 + 24) = v12;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)sub_100301B90();
  (*(void (**)(void *, _UNKNOWN **, uint64_t))(v10 + 384))(v1, &off_100429230, 1);
  swift_release();
  return swift_release();
}

uint64_t sub_100302BC8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  (*(void (**)(void *__return_ptr))(*v4 + 120))(v24);
  sub_100308E18((uint64_t)v24, (uint64_t)v25);
  if ((v26 & 1) == 0)
  {
    uint64_t result = sub_100308E80(v25[0], v25[1], v25[2], v25[3], a1, a2, a3, a4);
    if (result) {
      return result;
    }
LABEL_11:
    sub_100309510();
    swift_allocError();
    *uint64_t v19 = 0;
    return swift_willThrow();
  }
  unint64_t v21 = a4;
  *(void *)atoken.val = a1;
  *(void *)&atoken.val[2] = a2;
  unint64_t v9 = HIDWORD(a4);
  *(void *)&atoken.val[4] = a3;
  *(void *)&atoken.val[6] = a4;
  id v10 = (id)MSVBundleIDForAuditToken();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v13 = 0;
  }
  *(void *)atoken.val = a1;
  *(void *)&atoken.val[2] = a2;
  *(void *)&atoken.val[4] = a3;
  atoken.val[6] = v21;
  atoken.val[7] = v9;
  pid_t v15 = audit_token_to_pid(&atoken);
  if (!v13) {
    goto LABEL_11;
  }
  unsigned int v16 = v15;
  (*(void (**)(uint64_t, uint64_t))(*v4 + 152))(v20, v13);
  uint64_t v17 = *(void (**)(void))(*v4 + 176);
  LOBYTE(atoken.val[0]) = 0;
  v17(v16);
  v27[0] = a1;
  v27[1] = a2;
  void v27[2] = a3;
  v27[3] = v21;
  char v28 = 0;
  (*(void (**)(void *))(*v4 + 128))(v27);
  if (qword_100484210 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v18 = qword_1004862C8;
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_100249674();
  sub_1003070D4(&v29, v4);
  swift_release();
  *(void *)(v18 + 24) = v22;
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100302E74()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100302ECC(uint64_t a1)
{
  uint64_t v2 = sub_100013A80(&qword_10047D120);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100013A80(&qword_10047D128);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IPCClientMessage();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001E71E8(a1, (uint64_t)v4, &qword_10047D120);
  sub_1002AC4EC((uint64_t)v4, (uint64_t)v7);
  TransportRoutingSessionUpdateMessage.init(snapshot:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for IPCClientMessage.updateRoutingSnapshot(_:), v8);
  sub_100303850((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100303084(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoutingDialog();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IPCClientMessage();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  PresentDialogMessage.init(dialog:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for IPCClientMessage.presentDialog(_:), v6);
  sub_100303850((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100303220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for IPCClientMessage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100013A80((uint64_t *)&unk_10047D130);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v17 - v12;
  if (a3)
  {
    static InternalRoutingError.wrapping(error:)();
    uint64_t v14 = type metadata accessor for InternalRoutingError();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  }
  else
  {
    uint64_t v15 = type metadata accessor for InternalRoutingError();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 1, v15);
  }
  sub_1001E71E8((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_10047D130);
  swift_bridgeObjectRetain();
  InteractWithItemResultMessage.init(itemIdentifier:error:)();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for IPCClientMessage.interactWithItemResult(_:), v4);
  sub_100303850((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_100009A08((uint64_t)v13, (uint64_t *)&unk_10047D130);
}

uint64_t sub_100303458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoutingControl();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IPCClientMessage();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100013A80((uint64_t *)&unk_10047D130);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v21 - v16;
  if (a2)
  {
    static InternalRoutingError.wrapping(error:)();
    uint64_t v18 = type metadata accessor for InternalRoutingError();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  else
  {
    uint64_t v19 = type metadata accessor for InternalRoutingError();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1001E71E8((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_10047D130);
  InteractWithControlResultMessage.init(control:error:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for IPCClientMessage.interactWithControlResult(_:), v8);
  sub_100303850((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_100009A08((uint64_t)v17, (uint64_t *)&unk_10047D130);
}

uint64_t sub_100303720()
{
  uint64_t v0 = type metadata accessor for IPCClientMessage();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SessionTransitionMessage.init(sourceIdentifier:destinationIdentifier:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for IPCClientMessage.sessionTransition(_:), v0);
  sub_100303850((uint64_t)v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100303850(uint64_t a1)
{
  uint64_t v74 = a1;
  uint64_t v60 = type metadata accessor for ExecutionPriority();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v58 = &v53[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  char v69 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  unsigned int v75 = &v53[-v7];
  uint64_t v8 = type metadata accessor for IPCClientMessage();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v68 = &v53[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = &v53[-v13];
  __chkstk_darwin(v12);
  uint64_t v16 = &v53[-v15];
  uint64_t v71 = sub_100013A80(&qword_10047D420);
  uint64_t v77 = *(void *)(v71 - 8);
  uint64_t v17 = __chkstk_darwin(v71);
  uint64_t v70 = &v53[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v20 = &v53[-v19];
  uint64_t v72 = v9;
  uint64_t v21 = *(void (**)(void, void, void))(v9 + 16);
  uint64_t v64 = v21;
  v21(v16, a1, v8);
  sub_100309564(&qword_10047D428, 255, (void (*)(uint64_t))&type metadata accessor for IPCClientMessage);
  sub_100309564(&qword_10047D430, 255, (void (*)(uint64_t))&type metadata accessor for IPCClientMessage);
  IPCMessage.init(message:)();
  uint64_t v22 = sub_1001A6AF0();
  uint64_t v73 = v4;
  unsigned __int16 v23 = *(void (**)(void, void, void))(v4 + 16);
  uint64_t v76 = v3;
  uint64_t v24 = v71;
  BOOL v61 = v23;
  v23(v75, v22, v3);
  uint64_t v66 = (void (*)(void, void))v14;
  uint64_t v67 = v8;
  uint64_t v65 = v9 + 16;
  v21(v14, v74, v8);
  int v25 = v70;
  uint64_t v26 = v24;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v77 + 16))(v70, v20, v24);
  swift_retain_n();
  NSString v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  int v29 = v28;
  BOOL v30 = os_log_type_enabled(v27, v28);
  uint64_t v62 = v22;
  uint64_t v63 = v4 + 16;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    v80[0] = v56;
    *(_DWORD *)uint64_t v31 = 136315650;
    __int16 v32 = *(uint64_t (**)(uint64_t))(*(void *)v78 + 200);
    uint64_t v57 = v20;
    uint64_t v33 = v26;
    uint64_t v34 = swift_retain();
    os_log_t v55 = v27;
    uint64_t v35 = v32(v34);
    unint64_t v37 = v36;
    swift_release();
    uint64_t v79 = sub_10018A9E0(v35, v37, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    sub_100309564(&qword_10047D440, 255, (void (*)(uint64_t))&type metadata accessor for IPCClientMessage);
    int v54 = v29;
    uint64_t v38 = v66;
    uint64_t v39 = v67;
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v79 = sub_10018A9E0(v40, v41, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v66 = *(void (**)(void, void))(v72 + 8);
    v66(v38, v39);
    *(_WORD *)(v31 + 22) = 2080;
    uint64_t v42 = v58;
    IPCMessage.priority.getter();
    sub_100309564(&qword_10047D448, 255, (void (*)(uint64_t))&type metadata accessor for ExecutionPriority);
    uint64_t v43 = v25;
    uint64_t v44 = v60;
    uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v47 = v46;
    (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v42, v44);
    uint64_t v79 = sub_10018A9E0(v45, v47, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v48 = v33;
    uint64_t v20 = v57;
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void (**)(unsigned char *, uint64_t))(v77 + 8);
    unsigned int v50 = v43;
    uint64_t v26 = v48;
    v49(v50, v48);
    NSString v27 = v55;
    _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v54, "[%s] Send: %s, priority: %s", (uint8_t *)v31, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    uint64_t v51 = v66;
    uint64_t v66 = *(void (**)(void, void))(v72 + 8);
    v66(v51, v67);
    uint64_t v49 = *(void (**)(unsigned char *, uint64_t))(v77 + 8);
    v49(v25, v26);
  }

  (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v75, v76);
  sub_1000155BC(&qword_10047D438, &qword_10047D420);
  dispatch thunk of XPCSession.send<A>(_:)();
  return ((uint64_t (*)(unsigned char *, uint64_t))v49)(v20, v26);
}

uint64_t sub_100304308()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

Swift::Int sub_100304350()
{
  Hasher.init(_seed:)();
  (*(void (**)(unsigned char *))(*(void *)v0 + 232))(v2);
  return Hasher._finalize()();
}

uint64_t sub_1003043B0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 208))();
}

uint64_t sub_1003043F4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216))();
}

uint64_t sub_100304438()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 288))();
}

uint64_t sub_100304484()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 232))();
}

Swift::Int sub_1003044C8()
{
  Hasher.init(_seed:)();
  (*(void (**)(unsigned char *))(**(void **)v0 + 232))(v2);
  return Hasher._finalize()();
}

uint64_t sub_100304528()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 200))();
}

uint64_t sub_10030456C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t sub_100304590()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_1003045B4()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t sub_1003045E0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t sub_10030460C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t sub_100304638(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 88) == *(void *)(*(void *)a2 + 88)
    && *(void *)(*(void *)a1 + 96) == *(void *)(*(void *)a2 + 96))
  {
    return 1;
  }
  else
  {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

void *sub_100304664()
{
  type metadata accessor for MediaControlIPCServer();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1003046D8();
  qword_1004862C8 = v0;
  return result;
}

uint64_t sub_1003046A0()
{
  uint64_t v0 = swift_allocObject();
  sub_1003046D8();
  return v0;
}

void *sub_1003046D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0;
  v1[3] = 0;
  v1[4] = 0;
  uint64_t v6 = sub_1001A6AF0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    v13[1] = v9 + 4;
    uint64_t v10 = _typeName(_:qualified:)();
    v13[2] = sub_10018A9E0(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%s] init", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v1;
}

uint64_t sub_100304904()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for XPCListener.InitializationOptions();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  unint64_t v37 = (char *)v36 - v9;
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v36 - v10;
  uint64_t v12 = sub_1001A6AF0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v40 = v12;
  unint64_t v41 = v13;
  ((void (*)(char *))v13)(v11);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v42 = v4;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v38 = v7;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v39 = v3;
    v44[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    v36[1] = v4 + 16;
    uint64_t v20 = _typeName(_:qualified:)();
    uint64_t v43 = sub_10018A9E0(v20, v21, v44);
    uint64_t v4 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%s] start", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v3 = v39;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v11, v3);
  unsigned __int16 v23 = (void *)*sub_100266CC0();
  *(void *)(swift_allocObject() + 16) = v1;
  id v24 = v23;
  static XPCListener.InitializationOptions.none.getter();
  type metadata accessor for XPCListener();
  swift_allocObject();
  uint64_t v25 = XPCListener.init(service:targetQueue:options:incomingSessionHandler:)();
  uint64_t v26 = v37;
  v41(v37, v40, v3);
  swift_retain_n();
  NSString v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    v44[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v30 = _typeName(_:qualified:)();
    uint64_t v43 = sub_10018A9E0(v30, v31, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v32 = XPCListener.debugDescription.getter();
    uint64_t v43 = sub_10018A9E0(v32, v33, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "[%s] Created XPCListener: %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v34 = v37;
  }
  else
  {

    swift_release_n();
    uint64_t v34 = v26;
  }
  v22(v34, v3);
  *(void *)(v36[2] + 32) = v25;
  return swift_release();
}

uint64_t sub_100305030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100266CC0();
  unint64_t v11 = (void *)*v10;
  *uint64_t v9 = *v10;
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v11)
  {
    uint64_t v14 = sub_1001A6AF0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
    swift_retain_n();
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v24[1] = a1;
      uint64_t v26 = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      v24[0] = v2;
      uint64_t v19 = _typeName(_:qualified:)();
      uint64_t v25 = sub_10018A9E0(v19, v20, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v21 = ObjectIdentifier.debugDescription.getter();
      uint64_t v25 = sub_10018A9E0(v21, v22, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%s] XPCListener incoming request: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, void))(v3 + 8))(v5, v24[0]);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    type metadata accessor for MediaControlIPCServer.XPCClient();
    sub_100309564((unint64_t *)&unk_10047D410, v23, (void (*)(uint64_t))type metadata accessor for MediaControlIPCServer.XPCClient);
    return dispatch thunk of XPCListener.IncomingSessionRequest.accept<A>(_:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003053F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for MediaControlIPCServer.XPCClient();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(unsigned char *)(v4 + 48) = 1;
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 64) = 0;
  *(_DWORD *)(v4 + 72) = 0;
  *(unsigned char *)(v4 + 76) = 1;
  swift_retain();
  uint64_t result = sub_1001E78B8();
  *(void *)(v4 + 88) = result;
  *(void *)(v4 + 96) = v6;
  *(void *)(v4 + 80) = a1;
  *a2 = v4;
  return result;
}

uint64_t sub_10030546C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v204 = a2;
  uint64_t v213 = a3;
  uint64_t v199 = *v3;
  Swift::String v200 = v3;
  uint64_t v5 = type metadata accessor for InternalRoutingError();
  __chkstk_darwin(v5 - 8);
  Swift::String v206 = (char *)v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for SetExpandedSessionsStateMessage();
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  uint64_t v180 = (char *)v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = type metadata accessor for SetUIPresentedStateMessage();
  uint64_t v184 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  uint64_t v183 = (char *)v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = type metadata accessor for RoutingControl();
  uint64_t v172 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  uint64_t v170 = (char *)v155 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = type metadata accessor for InteractWithControlMessage();
  uint64_t v169 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v168 = (char *)v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for RoutingDialog.Action();
  uint64_t v166 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  uint64_t v164 = (char *)v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for InteractWithDialogMessage();
  uint64_t v163 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v162 = (char *)v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = type metadata accessor for InteractWithSessionMessage();
  uint64_t v175 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v174 = (char *)v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = type metadata accessor for InteractWithItemMessage();
  uint64_t v178 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v177 = (char *)v155 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = type metadata accessor for RoutingMode();
  uint64_t v190 = *(void *)(v191 - 8);
  __chkstk_darwin(v191);
  uint64_t v188 = (char *)v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for SetRoutingModeMessage();
  uint64_t v187 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v186 = (char *)v155 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for RoutingSessionConfiguration();
  uint64_t v193 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  id v192 = (char *)v155 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for IPCConnectMessage();
  uint64_t v201 = *(void *)(v18 - 8);
  uint64_t v202 = v18;
  __chkstk_darwin(v18);
  uint64_t v195 = (char *)v155 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = type metadata accessor for ExecutionPriority();
  uint64_t v197 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  unsigned __int8 v196 = (char *)v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v209 = *(void *)(v21 - 8);
  uint64_t v210 = (void (*)(char *, uint64_t))v21;
  __chkstk_darwin(v21);
  unint64_t v208 = (char *)v155 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = type metadata accessor for IPCServerMessage();
  uint64_t v212 = *(void *)(v205 - 8);
  uint64_t v23 = __chkstk_darwin(v205);
  uint64_t v203 = (char *)v155 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  NSString v27 = (char *)v155 - v26;
  __chkstk_darwin(v25);
  uint64_t v207 = (char *)v155 - v28;
  uint64_t v29 = sub_100013A80(&qword_10047D458);
  __chkstk_darwin(v29 - 8);
  unint64_t v31 = (char *)v155 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100013A80(&qword_10047D460);
  uint64_t v214 = *(void *)(v32 - 8);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v35 = (char *)v155 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v211 = (char *)v155 - v36;
  uint64_t v37 = type metadata accessor for DispatchPredicate();
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v40 = (void *)((char *)v155 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v41 = sub_100266CC0();
  uint64_t v42 = (void *)*v41;
  *uint64_t v40 = *v41;
  (*(void (**)(uint64_t *, void, uint64_t))(v38 + 104))(v40, enum case for DispatchPredicate.onQueue(_:), v37);
  id v43 = v42;
  LOBYTE(v42) = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v38 + 8))(v40, v37);
  if ((v42 & 1) == 0)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_1000155BC(&qword_10047D468, &qword_10047D460);
  XPCReceivedMessage.decode<A>(as:)();
  Swift::String v206 = a1;
  uint64_t v44 = v214;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v214 + 56))(v31, 0, 1, v32);
  uint64_t v45 = v211;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v211, v31, v32);
  unint64_t v46 = v207;
  IPCMessage.message.getter();
  uint64_t v47 = sub_1001A6AF0();
  (*(void (**)(char *, uint64_t, void (*)(char *, uint64_t)))(v209 + 16))(v208, v47, v210);
  uint64_t v48 = v212;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v212 + 16);
  uint64_t v50 = v32;
  uint64_t v51 = v44;
  uint64_t v52 = v205;
  uint64_t v161 = v212 + 16;
  id v160 = v49;
  v49(v27, v46, v205);
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v35, v45, v50);
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.info.getter();
  int v55 = v54;
  BOOL v56 = os_log_type_enabled(v53, v54);
  uint64_t v159 = v50;
  if (v56)
  {
    uint64_t v57 = swift_slowAlloc();
    int v157 = v55;
    uint64_t v58 = v57;
    uint64_t v158 = swift_slowAlloc();
    uint64_t v216 = v158;
    *(_DWORD *)uint64_t v58 = 136315906;
    os_log_t v156 = v53;
    uint64_t v59 = _typeName(_:qualified:)();
    uint64_t v215 = sub_10018A9E0(v59, v60, &v216);
    uint64_t v155[3] = &v216;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2080;
    sub_100309564(&qword_10047D478, 255, (void (*)(uint64_t))&type metadata accessor for IPCServerMessage);
    uint64_t v61 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v215 = sub_10018A9E0(v61, v62, &v216);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v199 = *(void (**)(char *, uint64_t))(v212 + 8);
    v199(v27, v52);
    *(_WORD *)(v58 + 22) = 2080;
    v155[1] = v58 + 24;
    uint64_t v63 = v196;
    IPCMessage.priority.getter();
    v155[2] = sub_100309564(&qword_10047D448, 255, (void (*)(uint64_t))&type metadata accessor for ExecutionPriority);
    uint64_t v64 = v198;
    uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v67 = v66;
    uint64_t v68 = *(void (**)(char *, uint64_t))(v197 + 8);
    v68(v63, v64);
    uint64_t v215 = sub_10018A9E0(v65, v67, &v216);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v69 = v50;
    uint64_t v70 = *(void (**)(char *, uint64_t))(v214 + 8);
    v70(v35, v69);
    *(_WORD *)(v58 + 32) = 2080;
    static ExecutionPriority.current.getter();
    uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v73 = v72;
    v68(v63, v64);
    uint64_t v74 = v205;
    uint64_t v215 = sub_10018A9E0(v71, v73, &v216);
    unsigned int v75 = v207;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v76 = v156;
    _os_log_impl((void *)&_mh_execute_header, v156, (os_log_type_t)v157, "[%s] Received message: %s, messagePriority: %s, currentPriority: %s", (uint8_t *)v58, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v77 = v212;
    swift_slowDealloc();

    (*(void (**)(char *, void))(v209 + 8))(v208, v210);
    uint64_t v78 = v204;
    uint64_t v80 = v201;
    uint64_t v79 = v202;
  }
  else
  {
    uint64_t v199 = *(void (**)(char *, uint64_t))(v48 + 8);
    v199(v27, v52);
    uint64_t v81 = v50;
    uint64_t v70 = *(void (**)(char *, uint64_t))(v51 + 8);
    v70(v35, v81);

    (*(void (**)(char *, void))(v209 + 8))(v208, v210);
    uint64_t v78 = v204;
    unsigned int v75 = v46;
    uint64_t v80 = v201;
    uint64_t v79 = v202;
    uint64_t v77 = v48;
    uint64_t v74 = v52;
  }
  XPCReceivedMessage.expectsReply.getter();
  XPCReceivedMessage.isSync.getter();
  os_log_type_t v82 = v203;
  v160(v203, v75, v74);
  int v83 = (*(uint64_t (**)(char *, uint64_t))(v77 + 88))(v82, v74);
  if (v83 == enum case for IPCServerMessage.prototype(_:))
  {
    uint64_t v84 = v199;
    v199(v75, v74);
    v70(v211, v159);
    v84(v82, v74);
LABEL_14:
    uint64_t v103 = v213;
    uint64_t v104 = type metadata accessor for ReplyMessage();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v103, 1, 1, v104);
  }
  if (v83 == enum case for IPCServerMessage.connect(_:))
  {
    uint64_t v210 = v70;
    (*(void (**)(char *, uint64_t))(v77 + 96))(v82, v74);
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v195, v82, v79);
    uint64_t v85 = v78;
    uint64_t v86 = sub_100301B90();
    uint64_t v87 = (*(uint64_t (**)(void))(*(void *)v85 + 144))();
    if (v88)
    {
      uint64_t v89 = v87;
      uint64_t v90 = v88;
      uint64_t v91 = v192;
      IPCConnectMessage.configuration.getter();
      id v92 = sub_1001A8C14();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, char *, id, uint64_t))(*(void *)v86 + 376))(v85, &off_100429230, v89, v90, v91, v92, 1);
      swift_release();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v193 + 8))(v91, v194);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v195, v79);
LABEL_10:
      uint64_t v93 = v207;
      uint64_t v94 = v74;
LABEL_13:
      v199(v93, v94);
      v210(v211, v159);
      goto LABEL_14;
    }
    goto LABEL_30;
  }
  if (v83 == enum case for IPCServerMessage.setRoutingMode(_:))
  {
    (*(void (**)(char *, uint64_t))(v77 + 96))(v82, v74);
    uint64_t v210 = v70;
    uint64_t v95 = v187;
    uint64_t v96 = v74;
    uint64_t v97 = v186;
    uint64_t v98 = v82;
    uint64_t v99 = v189;
    (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v186, v98, v189);
    uint64_t v100 = v78;
    uint64_t v101 = sub_100301B90();
    uint64_t v102 = v188;
    SetRoutingModeMessage.routingMode.getter();
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t))(*(void *)v101 + 424))(v102, v100, &off_100429230, 1);
    swift_release();
    (*(void (**)(char *, uint64_t))(v190 + 8))(v102, v191);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v97, v99);
    uint64_t v93 = v75;
    uint64_t v94 = v96;
    goto LABEL_13;
  }
  if (v83 == enum case for IPCServerMessage.setUIPresented(_:))
  {
    (*(void (**)(char *, uint64_t))(v77 + 96))(v82, v74);
    unsigned __int8 v106 = v75;
    uint64_t v107 = v184;
    uint64_t v108 = v183;
    id v109 = v82;
    uint64_t v110 = v185;
    (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v183, v109, v185);
    uint64_t v111 = v78;
    uint64_t v112 = sub_100301B90();
    char v113 = SetUIPresentedStateMessage.isPresented.getter();
    (*(void (**)(void, uint64_t, _UNKNOWN **, uint64_t))(*(void *)v112 + 432))(v113 & 1, v111, &off_100429230, 1);
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v108, v110);
LABEL_17:
    uint64_t v114 = v106;
LABEL_18:
    v199(v114, v74);
    v70(v211, v159);
    goto LABEL_14;
  }
  if (v83 == enum case for IPCServerMessage.setExpandedSessionIdentifiers(_:))
  {
    (*(void (**)(char *, uint64_t))(v77 + 96))(v82, v74);
    uint64_t v115 = v181;
    uint64_t v116 = v70;
    id v117 = v180;
    uint64_t v118 = v182;
    (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v180, v82, v182);
    uint64_t v119 = v78;
    uint64_t v120 = sub_100301B90();
    uint64_t v121 = SetExpandedSessionsStateMessage.expandedSessionIdentifiers.getter();
    (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t))(*(void *)v120 + 440))(v121, v119, &off_100429230, 1);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v118);
    v199(v207, v74);
    v116(v211, v159);
    goto LABEL_14;
  }
  if (v83 == enum case for IPCServerMessage.interactWithItem(_:))
  {
    os_log_type_t v122 = *(void (**)(char *, uint64_t))(v77 + 96);
    uint64_t v212 = v77 + 96;
    v122(v82, v74);
    os_log_type_t v123 = v82;
    uint64_t v124 = v178;
    uint64_t v125 = v177;
    uint64_t v126 = v179;
    (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v177, v123, v179);
    uint64_t v127 = sub_100301B90();
    uint64_t v128 = InteractWithItemMessage.itemIdentifier.getter();
    (*(void (**)(uint64_t))(*(void *)v127 + 392))(v128);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v125, v126);
    uint64_t v114 = v75;
    goto LABEL_18;
  }
  if (v83 == enum case for IPCServerMessage.interactWithSession(_:))
  {
    uint64_t v129 = *(void (**)(char *, uint64_t))(v77 + 96);
    uint64_t v212 = v77 + 96;
    v129(v82, v74);
    uint64_t v130 = v175;
    uint64_t v131 = v82;
    uint64_t v132 = v174;
    unsigned __int8 v106 = v75;
    uint64_t v133 = v176;
    (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v174, v131, v176);
    uint64_t v134 = sub_100301B90();
    uint64_t v135 = InteractWithSessionMessage.sessionIdentifier.getter();
    (*(void (**)(uint64_t))(*(void *)v134 + 400))(v135);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v132, v133);
    goto LABEL_17;
  }
  uint64_t v210 = v70;
  if (v83 == enum case for IPCServerMessage.interactWithDialog(_:))
  {
    uint64_t v136 = *(void (**)(char *, uint64_t))(v77 + 96);
    uint64_t v212 = v77 + 96;
    v136(v82, v74);
    uint64_t v137 = v163;
    uint64_t v138 = v162;
    uint64_t v139 = v165;
    (*(void (**)(char *, char *, uint64_t))(v163 + 32))(v162, v82, v165);
    uint64_t v140 = v78;
    uint64_t v141 = sub_100301B90();
    uint64_t v142 = InteractWithDialogMessage.dialogIdentifier.getter();
    uint64_t v144 = v143;
    uint64_t v145 = v164;
    InteractWithDialogMessage.action.getter();
    (*(void (**)(uint64_t, uint64_t, char *, uint64_t, _UNKNOWN **, uint64_t))(*(void *)v141 + 408))(v142, v144, v145, v140, &off_100429230, 1);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v166 + 8))(v145, v167);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v139);
    goto LABEL_10;
  }
  if (v83 == enum case for IPCServerMessage.interactWithControl(_:))
  {
    uint64_t v146 = v78;
    (*(void (**)(char *, uint64_t))(v77 + 96))(v82, v74);
    uint64_t v147 = v169;
    uint64_t v148 = v168;
    uint64_t v149 = v82;
    uint64_t v150 = v171;
    (*(void (**)(char *, char *, uint64_t))(v169 + 32))(v168, v149, v171);
    uint64_t v151 = sub_100301B90();
    unint64_t v152 = v170;
    InteractWithControlMessage.control.getter();
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t))(*(void *)v151 + 416))(v152, v146, &off_100429230, 1);
    swift_release();
    (*(void (**)(char *, uint64_t))(v172 + 8))(v152, v173);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v148, v150);
    goto LABEL_10;
  }
LABEL_31:
  uint64_t v216 = 0;
  unint64_t v217 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  uint64_t v216 = 0x206567617373654DLL;
  unint64_t v217 = 0xE800000000000000;
  sub_100309564(&qword_10047D478, 255, (void (*)(uint64_t))&type metadata accessor for IPCServerMessage);
  v153._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v153);
  swift_bridgeObjectRelease();
  v154._uint64_t countAndFlagsBits = 0x6E616820746F6E20;
  v154._object = (void *)0xED00002E64656C64;
  String.append(_:)(v154);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10030708C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1003070D4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = __CocoaSet.member(for:)();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v26[9] = v8;
      type metadata accessor for MediaControlIPCServer.XPCClient();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26[0];
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v19 = sub_10030739C(v7, result + 1);
    v26[0] = v19;
    if (*(void *)(v19 + 24) <= *(void *)(v19 + 16))
    {
      swift_retain();
      sub_1003075C0();
      uint64_t v20 = v26[0];
    }
    else
    {
      uint64_t v20 = v19;
      swift_retain();
    }
    sub_10030789C((uint64_t)a2, v20);
    *uint64_t v3 = v20;
  }
  else
  {
    Hasher.init(_seed:)();
    uint64_t v10 = *(void (**)(void *))(*a2 + 232);
    swift_bridgeObjectRetain();
    v10(v26);
    Swift::Int v11 = Hasher._finalize()();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      uint64_t v14 = *(void *)(v6 + 48);
      uint64_t v15 = *(void *)(v14 + 8 * v13);
      uint64_t v16 = a2[11];
      uint64_t v17 = a2[12];
      BOOL v18 = *(void *)(v15 + 88) == v16 && *(void *)(v15 + 96) == v17;
      if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_13:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*v3 + 48) + 8 * v13);
        swift_retain();
        return 0;
      }
      uint64_t v21 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v21;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        uint64_t v22 = *(void *)(v14 + 8 * v13);
        BOOL v23 = *(void *)(v22 + 88) == v16 && *(void *)(v22 + 96) == v17;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_13;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v25 = swift_retain();
    sub_100307960(v25, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v26[0];
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

Swift::Int sub_10030739C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100013A80(&qword_10047D450);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v17 = v2;
    __CocoaSet.makeIterator()();
    uint64_t v3 = __CocoaSet.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      type metadata accessor for MediaControlIPCServer.XPCClient();
      do
      {
        v16[0] = v4;
        swift_dynamicCast();
        uint64_t v2 = v17;
        if (*(void *)(v17 + 24) <= *(void *)(v17 + 16))
        {
          sub_1003075C0();
          uint64_t v2 = v17;
        }
        uint64_t v5 = v16[9];
        Hasher.init(_seed:)();
        (*(void (**)(void *))(*(void *)v5 + 232))(v16);
        Swift::Int result = Hasher._finalize()();
        uint64_t v7 = v2 + 56;
        uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v9 = result & ~v8;
        unint64_t v10 = v9 >> 6;
        if (((-1 << v9) & ~*(void *)(v2 + 56 + 8 * (v9 >> 6))) != 0)
        {
          unint64_t v11 = __clz(__rbit64((-1 << v9) & ~*(void *)(v2 + 56 + 8 * (v9 >> 6)))) | v9 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v12 = 0;
          unint64_t v13 = (unint64_t)(63 - v8) >> 6;
          do
          {
            if (++v10 == v13 && (v12 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v14 = v10 == v13;
            if (v10 == v13) {
              unint64_t v10 = 0;
            }
            v12 |= v14;
            uint64_t v15 = *(void *)(v7 + 8 * v10);
          }
          while (v15 == -1);
          unint64_t v11 = __clz(__rbit64(~v15)) + (v10 << 6);
        }
        *(void *)(v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        *(void *)(*(void *)(v2 + 48) + 8 * v11) = v5;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaSet.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_1003075C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013A80(&qword_10047D450);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      Hasher.init(_seed:)();
      (*(void (**)(char *))(*(void *)v19 + 232))(v28);
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_10030789C(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  (*(void (**)(unsigned char *))(*(void *)a1 + 232))(v5);
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

Swift::Int sub_100307960(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v5 = (void *)result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1003075C0();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (Swift::Int)sub_100307B20();
      goto LABEL_22;
    }
    sub_100307CCC();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  (*(void (**)(unsigned char *))(*v5 + 232))(v23);
  unint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  uint64_t v10 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for MediaControlIPCServer.XPCClient();
    uint64_t v11 = *(void *)(v8 + 48);
    uint64_t v12 = *(void *)(v11 + 8 * a2);
    uint64_t v13 = v5[11];
    uint64_t v14 = v5[12];
    BOOL v15 = *(void *)(v12 + 88) == v13 && *(void *)(v12 + 96) == v14;
    if (v15 || (unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v16 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(void *)(v10 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v17 = *(void *)(v11 + 8 * a2);
        if (*(void *)(v17 + 88) != v13 || *(void *)(v17 + 96) != v14)
        {
          unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v19 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v19 + 48) + 8 * a2) = v5;
  uint64_t v20 = *(void *)(v19 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v22;
  }
  return result;
}

void *sub_100307B20()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_10047D450);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    unint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100307CCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013A80(&qword_10047D450);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v26 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v27) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v27) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    Hasher.init(_seed:)();
    int64_t v18 = *(void (**)(char *))(*(void *)v17 + 232);
    swift_retain();
    v18(v28);
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v8 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100307FA8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) == 0)
  {
    Hasher.init(_seed:)();
    uint64_t v8 = *(void (**)(void *))(*a1 + 232);
    swift_bridgeObjectRetain();
    v8(v23);
    Swift::Int v9 = Hasher._finalize()();
    uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v11 = v9 & ~v10;
    if ((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
    {
      uint64_t v12 = *(void *)(v4 + 48);
      uint64_t v13 = *(void *)(v12 + 8 * v11);
      uint64_t v14 = a1[11];
      uint64_t v15 = a1[12];
      BOOL v16 = *(void *)(v13 + 88) == v14 && *(void *)(v13 + 96) == v15;
      if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v18 = *v2;
        v23[0] = *v2;
        *uint64_t v2 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_100307B20();
          uint64_t v18 = v23[0];
        }
        uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
        sub_100308364(v11);
        *uint64_t v2 = v23[0];
        goto LABEL_16;
      }
      uint64_t v19 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v19;
        if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          break;
        }
        uint64_t v20 = *(void *)(v12 + 8 * v11);
        BOOL v21 = *(void *)(v20 + 88) == v14 && *(void *)(v20 + 96) == v15;
        if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_13;
        }
      }
    }
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = *v1;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  char v6 = __CocoaSet.contains(_:)();
  swift_release();
  if ((v6 & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v7 = sub_1003081A0(v5, a1);
LABEL_16:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1003081A0(uint64_t a1, void *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = __CocoaSet.count.getter();
  uint64_t v5 = swift_unknownObjectRetain();
  Swift::Int v6 = sub_10030739C(v5, v4);
  Swift::Int v23 = v6;
  Hasher.init(_seed:)();
  uint64_t v7 = *(void (**)(uint64_t *))(*a2 + 232);
  swift_retain();
  v7(&v22);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v6 + 48);
    uint64_t v12 = *(void *)(v11 + 8 * v10);
    uint64_t v13 = a2[11];
    uint64_t v14 = a2[12];
    BOOL v15 = *(void *)(v12 + 88) == v13 && *(void *)(v12 + 96) == v14;
    if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_14:
      swift_release();
      uint64_t v19 = *(void *)(*(void *)(v6 + 48) + 8 * v10);
      sub_100308364(v10);
      BOOL v20 = v13 == *(void *)(v19 + 88) && v14 == *(void *)(v19 + 96);
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        *uint64_t v2 = v23;
        return v19;
      }
      __break(1u);
    }
    else
    {
      uint64_t v16 = ~v9;
      while (1)
      {
        unint64_t v10 = (v10 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          break;
        }
        uint64_t v17 = *(void *)(v11 + 8 * v10);
        BOOL v18 = *(void *)(v17 + 88) == v13 && *(void *)(v17 + 96) == v14;
        if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_14;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_100308364(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        uint64_t v11 = *(void (**)(unsigned char *))(*(void *)v10 + 232);
        swift_retain();
        v11(v20);
        Swift::Int v12 = Hasher._finalize()();
        swift_release();
        unint64_t v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(v3 + 48);
          BOOL v15 = (void *)(v14 + 8 * v2);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v15 >= v16 + 1))
          {
            *BOOL v15 = *v16;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_10030854C(uint64_t isEscapingClosureAtFileLocation)
{
  uint64_t v2 = type metadata accessor for Features.MediaRemote();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Features.MediaRemote.cayenne(_:), v2);
  char v6 = Features.MediaRemote.isEnabled.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v7 = (void *)*sub_100266CC0();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = isEscapingClosureAtFileLocation;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_1003095E4;
    *(void *)(v9 + 24) = v8;
    aBlock[4] = sub_1001BA8E4;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001F4BF0;
    aBlock[3] = &unk_100429490;
    uint64_t v10 = _Block_copy(aBlock);
    id v11 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    Swift::Int v12 = v7;
    swift_release();
    dispatch_sync(v12, v10);

    _Block_release(v10);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }
  if (isEscapingClosureAtFileLocation)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    [(id)isEscapingClosureAtFileLocation setMediaControlDiagnostic:v13];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003087B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100301B90();
  *a1 = result;
  return result;
}

unint64_t sub_1003087E0()
{
  unint64_t result = qword_100484218;
  if (!qword_100484218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100484218);
  }
  return result;
}

unint64_t sub_100308834()
{
  unint64_t result = qword_100484220;
  if (!qword_100484220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100484220);
  }
  return result;
}

unint64_t sub_100308888()
{
  unint64_t result = qword_100484228[0];
  if (!qword_100484228[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100484228);
  }
  return result;
}

uint64_t sub_1003088DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001003BA9F0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001003BAA10)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1003089C8(uint64_t a1)
{
  uint64_t v2 = sub_100013A80(&qword_10047D480);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  __chkstk_darwin(v2);
  char v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100013A80(&qword_10047D488);
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100013A80(&qword_10047D490);
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BDB5C((void *)a1, *(void *)(a1 + 24));
  sub_1003087E0();
  uint64_t v12 = v26;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = type metadata accessor for DecodingError();
    swift_allocError();
    BOOL v18 = v17;
    sub_100013A80(&qword_10047D498);
    *BOOL v18 = &type metadata for MediaControlIPCServer.Errors;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, enum case for DecodingError.typeMismatch(_:), v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    sub_10018FD5C(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_100308834();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_100308888();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  sub_10018FD5C(v26);
  return a1;
}

uint64_t sub_100308E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80(&qword_10047D108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_100308E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  v16[0] = a1;
  v16[1] = a2;
  v16[2] = a3;
  v16[3] = a4;
  v15[0] = a5;
  v15[1] = a6;
  v15[2] = a7;
  v15[3] = a8;
  do
  {
    if (v9 == 32)
    {
      int v10 = 0;
      uint64_t v11 = 32;
    }
    else
    {
      int v10 = *((unsigned __int8 *)v16 + v9);
      uint64_t v11 = v9 + 1;
    }
    BOOL result = v8 == 32;
    if (v8 == 32)
    {
      int v13 = 0;
      uint64_t v14 = 32;
      if (v9 == 32) {
        return result;
      }
    }
    else
    {
      int v13 = *((unsigned __int8 *)v15 + v8);
      uint64_t v14 = v8 + 1;
      if (v9 == 32) {
        return result;
      }
    }
    BOOL result = 0;
    if (v8 == 32) {
      break;
    }
    uint64_t v8 = v14;
    uint64_t v9 = v11;
  }
  while (v10 == v13);
  return result;
}

uint64_t sub_100308F80()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100308F90@<X0>(uint64_t a1@<X8>)
{
  return sub_100305030(a1);
}

unint64_t sub_100308F9C()
{
  unint64_t result = qword_10047D140;
  if (!qword_10047D140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D140);
  }
  return result;
}

uint64_t sub_100308FF0(uint64_t a1, uint64_t a2)
{
  return sub_100309564(&qword_10047D148, a2, (void (*)(uint64_t))type metadata accessor for MediaControlIPCServer.XPCClient);
}

uint64_t type metadata accessor for MediaControlIPCServer.XPCClient()
{
  return self;
}

unint64_t type metadata accessor for MRDMediaControlIPCServer()
{
  unint64_t result = qword_1004846B0[0];
  if (!qword_1004846B0[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1004846B0);
  }
  return result;
}

uint64_t type metadata accessor for MediaControlIPCServer()
{
  return self;
}

ValueMetadata *type metadata accessor for MediaControlIPCServer.Errors()
{
  return &type metadata for MediaControlIPCServer.Errors;
}

__n128 sub_1003090D4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1003090E0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100309100(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t()
{
  if (!qword_10047D408)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_10047D408);
    }
  }
}

unsigned char *_s12mediaremoted21MediaControlIPCServerC6ErrorsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100309250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaControlIPCServer.Errors.CodingKeys()
{
  return &type metadata for MediaControlIPCServer.Errors.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaControlIPCServer.Errors.ValidationFailedCodingKeys()
{
  return &type metadata for MediaControlIPCServer.Errors.ValidationFailedCodingKeys;
}

ValueMetadata *type metadata accessor for MediaControlIPCServer.Errors.MalformedMessageCodingKeys()
{
  return &type metadata for MediaControlIPCServer.Errors.MalformedMessageCodingKeys;
}

unint64_t sub_1003092AC()
{
  unint64_t result = qword_1004849C0[0];
  if (!qword_1004849C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004849C0);
  }
  return result;
}

unint64_t sub_100309304()
{
  unint64_t result = qword_100484AD0;
  if (!qword_100484AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100484AD0);
  }
  return result;
}

unint64_t sub_10030935C()
{
  unint64_t result = qword_100484AD8[0];
  if (!qword_100484AD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100484AD8);
  }
  return result;
}

unint64_t sub_1003093B4()
{
  unint64_t result = qword_100484B60;
  if (!qword_100484B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100484B60);
  }
  return result;
}

unint64_t sub_10030940C()
{
  unint64_t result = qword_100484B68[0];
  if (!qword_100484B68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100484B68);
  }
  return result;
}

unint64_t sub_100309464()
{
  unint64_t result = qword_100484BF0;
  if (!qword_100484BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100484BF0);
  }
  return result;
}

unint64_t sub_1003094BC()
{
  unint64_t result = qword_100484BF8[0];
  if (!qword_100484BF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100484BF8);
  }
  return result;
}

unint64_t sub_100309510()
{
  unint64_t result = qword_10047D470;
  if (!qword_10047D470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D470);
  }
  return result;
}

uint64_t sub_100309564(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003095AC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003095E4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    if (qword_100484210 != -1) {
      swift_once();
    }
    swift_beginAccess();
    swift_retain();
    sub_100301B90();
    swift_release();
    sub_1001DB6AC();
    swift_release();
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 setMediaControlDiagnostic:v2];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003096CC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100309764()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_primaryBundleIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100309828(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_primaryBundleIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_100309888())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10030992C()
{
  uint64_t v1 = v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_recommendationType;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1003099C0(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_recommendationType);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_100309A0C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100309AB0()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isASELocal);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_100309B44(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isASELocal);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_100309B90())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100309C34()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_localOutputContextHasAirPlay);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_100309CC8(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_localOutputContextHasAirPlay);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_100309D14())()
{
  return j__swift_endAccess;
}

uint64_t sub_100309DB8()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isSourceEndpointPlaying);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_100309E4C(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isSourceEndpointPlaying);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_100309E98())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100309F3C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isTargetEndpointPlaying);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_100309FD0(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isTargetEndpointPlaying);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_10030A01C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10030A104()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetNowPlayingBundleIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10030A1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetNowPlayingBundleIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_10030A238())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10030A294()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetEndpointContainsDiscoverableGroupLeader);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_10030A2DC(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetEndpointContainsDiscoverableGroupLeader);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_10030A328())()
{
  return j_j__swift_endAccess;
}

id sub_10030A384(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6, char a7, uint64_t a8, uint64_t a9, char a10)
{
  BOOL v18 = objc_allocWithZone(v10);
  uint64_t v19 = &v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetNowPlayingBundleIdentifier];
  *uint64_t v19 = 0;
  v19[1] = 0;
  BOOL v20 = &v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_primaryBundleIdentifier];
  *BOOL v20 = a1;
  v20[1] = a2;
  *(void *)&v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_recommendationType] = a3;
  v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isASELocal] = a4;
  v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_localOutputContextHasAirPlay] = a5;
  v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isSourceEndpointPlaying] = a6;
  v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isTargetEndpointPlaying] = a7;
  swift_beginAccess();
  *uint64_t v19 = a8;
  v19[1] = a9;
  uint64_t v21 = v18;
  swift_bridgeObjectRelease();
  v21[OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetEndpointContainsDiscoverableGroupLeader] = a10;

  v24.receiver = v21;
  v24.super_class = v10;
  return objc_msgSendSuper2(&v24, "init");
}

id sub_10030A4BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6, char a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v12 = &v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetNowPlayingBundleIdentifier];
  *uint64_t v12 = 0;
  v12[1] = 0;
  int v13 = &v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_primaryBundleIdentifier];
  void *v13 = a1;
  v13[1] = a2;
  *(void *)&v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_recommendationType] = a3;
  v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isASELocal] = a4;
  v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_localOutputContextHasAirPlay] = a5;
  v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isSourceEndpointPlaying] = a6;
  v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isTargetEndpointPlaying] = a7;
  swift_beginAccess();
  *uint64_t v12 = a8;
  v12[1] = a9;
  uint64_t v14 = v10;
  swift_bridgeObjectRelease();
  v14[OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetEndpointContainsDiscoverableGroupLeader] = a10;

  v16.receiver = v14;
  v16.super_class = (Class)type metadata accessor for RouteRecommendationDemotionContext();
  return objc_msgSendSuper2(&v16, "init");
}

uint64_t type metadata accessor for RouteRecommendationDemotionContext()
{
  return self;
}

id sub_10030A6BC()
{
  return sub_10030AF80(type metadata accessor for RouteRecommendationDemotionContext);
}

id sub_10030A7A8()
{
  uint64_t v0 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 0;
  uint64_t v2 = &v1[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
  *uint64_t v2 = 0;
  v2[1] = 0;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, "init");
  qword_1004862D0 = (uint64_t)result;
  return result;
}

id sub_10030A810(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = objc_allocWithZone(v3);
  v7[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = a1;
  uint64_t v8 = &v7[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
  *uint64_t v8 = a2;
  v8[1] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, "init");
}

uint64_t type metadata accessor for RouteRecommendationDemotionPolicy()
{
  return self;
}

id sub_10030A8D4()
{
  return sub_10030AF80(type metadata accessor for RouteRecommendationDemotionPolicy);
}

id sub_10030A900(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_100266824(a1, (uint64_t)v3 + OBJC_IVAR___MRDRouteRecommendationDemotionController_appInFocusMonitor);
  v6.receiver = v3;
  v6.super_class = v1;
  id v4 = objc_msgSendSuper2(&v6, "init");
  sub_10018FD5C(a1);
  return v4;
}

uint64_t type metadata accessor for RouteRecommendationDemotionController()
{
  return self;
}

id sub_10030A998(void *a1)
{
  uint64_t v2 = v1;
  if ((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xA8))() != 1) {
    goto LABEL_22;
  }
  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xC0))() & 1) == 0)
  {
    uint64_t v8 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    uint64_t v9 = objc_allocWithZone(v8);
    v9[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    objc_super v10 = &v9[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    *objc_super v10 = 0xD000000000000010;
    v10[1] = 0x80000001003BAAB0;
    return objc_msgSendSuper2(&v40, "init", v35.receiver, v35.super_class, v36.receiver, v36.super_class, v37.receiver, v37.super_class, v38.receiver, v38.super_class, v39.receiver, v39.super_class, v9, v8);
  }
  if ((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD8))())
  {
    id v4 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    uint64_t v5 = objc_allocWithZone(v4);
    v5[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    objc_super v6 = &v5[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    void *v6 = 0xD00000000000001CLL;
    v6[1] = 0x80000001003BAAD0;
    return objc_msgSendSuper2(&v35, "init", v5, v4, v36.receiver, v36.super_class, v37.receiver, v37.super_class, v38.receiver, v38.super_class, v39.receiver, v39.super_class, v40.receiver, v40.super_class);
  }
  if ((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xF0))())
  {
    uint64_t v11 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    uint64_t v12 = objc_allocWithZone(v11);
    v12[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    int v13 = &v12[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    void *v13 = 0xD000000000000011;
    v13[1] = 0x80000001003BABA0;
    return objc_msgSendSuper2(&v36, "init", v35.receiver, v35.super_class, v12, v11, v37.receiver, v37.super_class, v38.receiver, v38.super_class, v39.receiver, v39.super_class, v40.receiver, v40.super_class);
  }
  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x108))() & 1) == 0) {
    goto LABEL_22;
  }
  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x138))() & 1) == 0)
  {
    uint64_t v22 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    uint64_t v23 = objc_allocWithZone(v22);
    v23[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    objc_super v24 = &v23[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    *objc_super v24 = 0xD00000000000001BLL;
    v24[1] = 0x80000001003BAAF0;
    return objc_msgSendSuper2(&v39, "init", v35.receiver, v35.super_class, v36.receiver, v36.super_class, v37.receiver, v37.super_class, v38.receiver, v38.super_class, v23, v22, v40.receiver, v40.super_class);
  }
  uint64_t v14 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x90);
  uint64_t v15 = v14();
  uint64_t v17 = v16;
  uint64_t v18 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x120))();
  if (!v19)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v15 == v18 && v19 == v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
LABEL_19:
    uint64_t v25 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    uint64_t v26 = objc_allocWithZone(v25);
    v26[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    char v27 = &v26[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    *char v27 = 0xD000000000000042;
    v27[1] = 0x80000001003BAB10;
    return objc_msgSendSuper2(&v38, "init", v35.receiver, v35.super_class, v36.receiver, v36.super_class, v37.receiver, v37.super_class, v26, v25, v39.receiver, v39.super_class, v40.receiver, v40.super_class);
  }
LABEL_21:
  uint64_t v28 = *(void *)(v2 + OBJC_IVAR___MRDRouteRecommendationDemotionController_appInFocusMonitor + 32);
  sub_1001BDB5C((void *)(v2 + OBJC_IVAR___MRDRouteRecommendationDemotionController_appInFocusMonitor), *(void *)(v2 + OBJC_IVAR___MRDRouteRecommendationDemotionController_appInFocusMonitor + 24));
  uint64_t v29 = v14();
  char v30 = (*(uint64_t (**)(uint64_t))(v28 + 8))(v29);
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
  {
    uint64_t v32 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    uint64_t v33 = objc_allocWithZone(v32);
    v33[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    uint64_t v34 = &v33[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    *uint64_t v34 = 0xD000000000000038;
    v34[1] = 0x80000001003BAB60;
    return objc_msgSendSuper2(&v37, "init", v35.receiver, v35.super_class, v36.receiver, v36.super_class, v33, v32, v38.receiver, v38.super_class, v39.receiver, v39.super_class, v40.receiver, v40.super_class);
  }
LABEL_22:
  if (qword_100484C80 != -1) {
    swift_once();
  }
  unint64_t v31 = (void *)qword_1004862D0;

  return v31;
}

id sub_10030AF68()
{
  return sub_10030AF80(type metadata accessor for RouteRecommendationDemotionController);
}

id sub_10030AF80(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

ValueMetadata *type metadata accessor for RouteRecommendationDemotionController.Reason()
{
  return &type metadata for RouteRecommendationDemotionController.Reason;
}

void type metadata accessor for MRRouteRecommendationType()
{
  if (!qword_10047D570)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_10047D570);
    }
  }
}

void sub_10030B030(uint64_t a1)
{
}

uint64_t *sub_10030B054()
{
  if (qword_100484D10 != -1) {
    swift_once();
  }
  return &qword_1004862D8;
}

void sub_10030B0A0(uint64_t a1)
{
}

void sub_10030B0C4(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, void *a4)
{
  objc_super v6 = (void *)a2();
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    *a3 = v8;
    *a4 = v10;
  }
  else
  {
    __break(1u);
  }
}

uint64_t *sub_10030B130()
{
  if (qword_100484D18 != -1) {
    swift_once();
  }
  return &qword_1004862E8;
}

uint64_t sub_10030B17C(uint64_t a1, uint64_t a2)
{
  return sub_10030B1AC(a1, a2, (uint64_t (*)(void))&_MRMediaRemoteApplicationIsSystemMediaApplication);
}

uint64_t sub_10030B194(uint64_t a1, uint64_t a2)
{
  return sub_10030B1AC(a1, a2, (uint64_t (*)(void))&_MRMediaRemoteApplicationIsSystemPodcastApplication);
}

uint64_t sub_10030B1AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t v5 = a3();

  return v5;
}

uint64_t sub_10030B1E8(uint64_t a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  int IsSystemMediaApplication = MRMediaRemoteApplicationIsSystemMediaApplication();

  if (IsSystemMediaApplication)
  {
    if (qword_100484D10 != -1) {
      swift_once();
    }
    NSString v4 = &qword_1004862D8;
LABEL_9:
    swift_beginAccess();
    a1 = *v4;
    goto LABEL_10;
  }
  NSString v5 = String._bridgeToObjectiveC()();
  int IsSystemPodcastApplication = MRMediaRemoteApplicationIsSystemPodcastApplication();

  if (IsSystemPodcastApplication)
  {
    if (qword_100484D18 != -1) {
      swift_once();
    }
    NSString v4 = &qword_1004862E8;
    goto LABEL_9;
  }
LABEL_10:
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10030B2F0()
{
  return &unk_10047D578;
}

void *sub_10030B2FC()
{
  return &unk_10047D588;
}

void *sub_10030B308()
{
  return &unk_10047D598;
}

void *sub_10030B314()
{
  return &unk_10047D5A8;
}

void *sub_10030B320()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_localEndpoint);
  swift_beginAccess();
  NSString v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_10030B370(void *a1)
{
}

uint64_t (*sub_10030B37C())()
{
  return j__swift_endAccess;
}

void *sub_10030B3D8()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint);
  swift_beginAccess();
  NSString v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_10030B428(void *a1)
{
}

void sub_10030B434(void *a1, void *a2)
{
  NSString v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  NSString v5 = *v4;
  *NSString v4 = a1;
}

uint64_t (*sub_10030B484())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10030B4E0()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowRecommendationsOutsideApp);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_10030B528(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowRecommendationsOutsideApp);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_10030B574())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10030B5D0()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowDeltaBanners);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_10030B618(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowDeltaBanners);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_10030B664())()
{
  return j_j__swift_endAccess;
}

id sub_10030B6C0(void *a1, void *a2, char a3, char a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  uint64_t v10 = (void **)&v9[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_localEndpoint];
  *(void *)&v9[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_localEndpoint] = 0;
  uint64_t v11 = (void **)&v9[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint];
  *(void *)&v9[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint] = 0;
  swift_beginAccess();
  uint64_t v12 = *v10;
  *uint64_t v10 = a1;
  int v13 = v9;
  id v14 = a1;

  swift_beginAccess();
  uint64_t v15 = *v11;
  *uint64_t v11 = a2;
  id v16 = a2;

  v13[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowRecommendationsOutsideApp] = a3;
  v13[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowDeltaBanners] = a4;

  v19.receiver = v13;
  v19.super_class = v4;
  id v17 = objc_msgSendSuper2(&v19, "init");

  return v17;
}

id sub_10030B888()
{
  return sub_10030BB58(type metadata accessor for RouteRecommendationSuppressionContext);
}

id sub_10030B96C()
{
  uint64_t v0 = (objc_class *)type metadata accessor for RouteRecommendationSuppressionPolicy();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_shouldSuppress] = 0;
  uint64_t v2 = &v1[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_reason];
  *uint64_t v2 = 0;
  v2[1] = 0;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, "init");
  qword_1004862F8 = (uint64_t)result;
  return result;
}

id sub_10030B9D4(char a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  v7[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_shouldSuppress] = a1;
  uint64_t v8 = &v7[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_reason];
  *uint64_t v8 = a2;
  v8[1] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, "init");
}

uint64_t *sub_10030BA44()
{
  if (qword_100484D20 != -1) {
    swift_once();
  }
  return &qword_1004862F8;
}

id sub_10030BA90(uint64_t a1, uint64_t a2)
{
  objc_super v4 = (objc_class *)type metadata accessor for RouteRecommendationSuppressionPolicy();
  NSString v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_shouldSuppress] = 1;
  objc_super v6 = &v5[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_reason];
  void *v6 = a1;
  v6[1] = a2;
  v8.receiver = v5;
  v8.super_class = v4;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v8, "init");
}

id sub_10030BB40()
{
  return sub_10030BB58(type metadata accessor for RouteRecommendationSuppressionPolicy);
}

id sub_10030BB58(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

void *sub_10030BBA4()
{
  return &unk_1004294F8;
}

const char *sub_10030BBB0()
{
  return "ASE is playing";
}

unint64_t sub_10030BBBC(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = 0x65636976656420;
  v5._object = (void *)0xE700000000000000;
  String.append(_:)(v5);
  return 0xD000000000000024;
}

void *sub_10030BC58()
{
  return &unk_100429508;
}

id sub_10030BC64(void *a1, void *a2, char a3, char a4)
{
  uint64_t v9 = (void **)&v4[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_localEndpoint];
  *(void *)&v4[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_localEndpoint] = 0;
  objc_super v10 = (void **)&v4[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint];
  *(void *)&v4[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint] = 0;
  swift_beginAccess();
  uint64_t v11 = *v9;
  *uint64_t v9 = a1;
  uint64_t v12 = v4;
  id v13 = a1;

  swift_beginAccess();
  id v14 = *v10;
  *objc_super v10 = a2;
  id v15 = a2;

  v12[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowRecommendationsOutsideApp] = a3;
  v12[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowDeltaBanners] = a4;

  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for RouteRecommendationSuppressionContext();
  return objc_msgSendSuper2(&v17, "init");
}

uint64_t type metadata accessor for RouteRecommendationSuppressionContext()
{
  return self;
}

uint64_t type metadata accessor for RouteRecommendationSuppressionPolicy()
{
  return self;
}

ValueMetadata *type metadata accessor for RouteRecommendationSuppressionReason()
{
  return &type metadata for RouteRecommendationSuppressionReason;
}

id sub_10030BDAC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100013A80(&qword_1004786A8);
  sub_10018FE44(a1, a2);
  InvitationRequest.__allocating_init(invitationData:displayName:userInfo:)();
  uint64_t v14 = dispatch thunk of InvitationRequest.invitationUserInfo.getter();
  if (v15 >> 60 == 15)
  {
    sub_10018FE9C(a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v16 = v14;
  unint64_t v17 = v15;
  sub_10018FE44(v14, v15);
  unsigned __int8 v18 = sub_1001A0E04(v16, v17);
  unsigned __int8 v19 = sub_100279918(v18);
  if (!v19)
  {
    sub_10018FE9C(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001A3954(v16, v17);
    swift_release();
    goto LABEL_7;
  }
  unsigned __int8 v20 = v19;
  uint64_t v38 = v16;
  unint64_t v39 = v17;
  dispatch thunk of InvitationRequest.invitationDisplayName.getter();
  id v21 = objc_allocWithZone((Class)MRGroupSessionHostInfo);
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = [v21 initWithRouteType:v20 displayName:v22];

  v24.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  if (a4)
  {
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v25 = 0;
  }
  if (!a6)
  {
    NSString v28 = 0;
    if (a8) {
      goto LABEL_12;
    }
LABEL_14:
    NSString v29 = 0;
    goto LABEL_15;
  }
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a8) {
    goto LABEL_14;
  }
LABEL_12:
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_15:
  id v30 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a9];
  unint64_t v31 = v23;
  id v32 = [v40 initWithHostInfo:v23 invitationData:v24.super.isa sharedSecret:v25 sessionIdentifier:v28 equivalentMediaIdentifier:v29 version:v30];

  uint64_t v33 = self;
  id v26 = v32;
  id v34 = [v33 sharedCenter];
  id v35 = [v34 localActiveUserState];

  if (v35
    && (id v36 = [v35 storefrontCountryCode], v35, v36))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v26 setStorefrontCountryCode:v37];
    sub_10018FE9C(a1, a2);
    swift_release();
    sub_1001A3954(v38, v39);
  }
  else
  {

    swift_release();
    sub_10018FE9C(a1, a2);

    sub_1001A3954(v38, v39);
  }
  return v26;
}

uint64_t ActivityController.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t ActivityController.delegate.setter()
{
  return swift_unknownObjectRelease();
}

void (*ActivityController.delegate.modify(void *a1))(void **a1, char a2)
{
  objc_super v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___MRDUIActivityController_delegate;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_1001F5098;
}

uint64_t static ActivityController.deviceSupportsActivities.getter()
{
  return static ActivityCenter.liveActivitiesSupported.getter() & 1;
}

void *ActivityController.currentActivitiesInfo.getter()
{
  if (qword_100484D30 != -1) {
    swift_once();
  }
  return sub_10030F520();
}

void ActivityController.startNowPlayingActivity(preferredState:suppressedBundleIdentifiers:)(uint64_t a1, uint64_t a2)
{
  objc_super v3 = v2;
  uint64_t v6 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v6 - 8);
  objc_super v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100013A80((uint64_t *)&unk_100479EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C5BA0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v11;
  *(void *)(inited + 120) = sub_100013A80(&qword_10047A080);
  *(void *)(inited + 96) = a2;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1001FA360(inited);
  if (qword_100484D30 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_10030FC6C(0, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
    unint64_t v15 = (void *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    void v15[4] = v13;
    v15[5] = v3;
    id v16 = v3;
    sub_10018A588((uint64_t)v8, (uint64_t)&unk_10047D648, (uint64_t)v15);
    swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    id v17 = (id)*sub_1001A665C();
    os_log(_:dso:log:_:_:)();
  }
}

uint64_t sub_10030C854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = a5;
  return _swift_task_switch(sub_10030C874, 0, 0);
}

uint64_t sub_10030C874()
{
  uint64_t v1 = sub_100013A80(&qword_10047D848);
  v0[5] = v1;
  v0[6] = *(void *)(v1 - 8);
  v0[7] = swift_task_alloc();
  uint64_t v2 = sub_100013A80(&qword_10047D850);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  dispatch thunk of Activity.activityStateUpdates.getter();
  Activity.ActivityStateUpdates.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  sub_100013A80(&qword_10047D858);
  v0[8] = swift_task_alloc();
  unint64_t v5 = sub_100316F64();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  void *v6 = v0;
  v6[1] = sub_10030CA60;
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[5];
  return dispatch thunk of AsyncIteratorProtocol.next()(v7, v8, v5);
}

uint64_t sub_10030CA60()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10030CE58;
  }
  else {
    uint64_t v2 = sub_10030CB74;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10030CB74()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = type metadata accessor for ActivityState();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 40));
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v1, v2);
  uint64_t v5 = swift_task_alloc();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v5, enum case for ActivityState.ended(_:), v2);
  char v6 = static ActivityState.== infix(_:_:)();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v5, v2);
  uint64_t v8 = swift_task_dealloc();
  if (v6)
  {
    uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(v0 + 32)) + 0x58))(v8);
    if (v9)
    {
      [v9 nowPlayingEnded];
      swift_unknownObjectRelease();
    }
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v12 = *(void *)(v0 + 40);
    v7(v4, v2);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    swift_task_dealloc();
    goto LABEL_7;
  }
  v7(v4, v2);
  swift_task_dealloc();
  unint64_t v15 = sub_100316F64();
  id v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v16;
  *id v16 = v0;
  v16[1] = sub_10030CA60;
  uint64_t v17 = *(void *)(v0 + 64);
  uint64_t v18 = *(void *)(v0 + 40);
  return dispatch thunk of AsyncIteratorProtocol.next()(v17, v18, v15);
}

uint64_t sub_10030CE58()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 80);
  sub_100013A80(&qword_100478740);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

Swift::Void __swiftcall ActivityController.endNowPlayingActivity()()
{
}

uint64_t ActivityController.nowPlayingActivityIdentifier.getter()
{
  if (qword_100484D30 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100313AE4(0);
  if (v0[2])
  {
    uint64_t v1 = v0[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRelease();
  return v1;
}

Swift::Void __swiftcall ActivityController.startMirroringActivity()()
{
  if (qword_100484D30 != -1) {
    swift_once();
  }
  unint64_t v0 = sub_1001FA360((uint64_t)_swiftEmptyArrayStorage);
  sub_10030FC6C(1, v0);
  swift_bridgeObjectRelease();

  swift_release();
}

Swift::Void __swiftcall ActivityController.endMirroringActivity()()
{
}

Swift::String_optional __swiftcall ActivityController.startRouteRecommendationActivity(for:relevanceScore:)(Swift::String a1, Swift::Double relevanceScore)
{
  uint64_t v3 = v2;
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v7 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100484D30 != -1) {
    swift_once();
  }
  sub_100013A80((uint64_t *)&unk_100479EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C5BA0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v11;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = countAndFlagsBits;
  *(void *)(inited + 56) = object;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v12;
  *(void *)(inited + 120) = &type metadata for Double;
  *(Swift::Double *)(inited + 96) = relevanceScore;
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1001FA360(inited);
  uint64_t v14 = sub_10030FC6C(2, v13);
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
    id v16 = (void *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    void v16[4] = v14;
    v16[5] = v3;
    swift_retain();
    id v17 = v3;
    sub_10018A588((uint64_t)v9, (uint64_t)&unk_10047D658, (uint64_t)v16);
    swift_release();
    uint64_t v18 = Activity.id.getter();
    unsigned __int8 v20 = v19;
    swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    id v21 = (void *)*sub_1001A665C();
    sub_100013A80(&qword_10047AE40);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1003C58B0;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_100015768();
    *(void *)(v22 + 32) = countAndFlagsBits;
    *(void *)(v22 + 40) = object;
    swift_bridgeObjectRetain();
    id v23 = v21;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
    unsigned __int8 v20 = 0;
  }
  uint64_t v24 = v18;
  NSString v25 = v20;
  result.value._object = v25;
  result.value._uint64_t countAndFlagsBits = v24;
  return result;
}

uint64_t sub_10030D528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = a5;
  return _swift_task_switch(sub_10030D548, 0, 0);
}

uint64_t sub_10030D548()
{
  uint64_t v1 = sub_100013A80(&qword_10047D848);
  v0[5] = v1;
  v0[6] = *(void *)(v1 - 8);
  v0[7] = swift_task_alloc();
  uint64_t v2 = sub_100013A80(&qword_10047D850);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  dispatch thunk of Activity.activityStateUpdates.getter();
  Activity.ActivityStateUpdates.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  sub_100013A80(&qword_10047D858);
  v0[8] = swift_task_alloc();
  unint64_t v5 = sub_100316F64();
  char v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  void *v6 = v0;
  v6[1] = sub_10030D734;
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[5];
  return dispatch thunk of AsyncIteratorProtocol.next()(v7, v8, v5);
}

uint64_t sub_10030D734()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003171C8;
  }
  else {
    uint64_t v2 = sub_10030D848;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10030D848()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = type metadata accessor for ActivityState();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 40));
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v1, v2);
  uint64_t v5 = swift_task_alloc();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v5, enum case for ActivityState.dismissed(_:), v2);
  char v6 = static ActivityState.== infix(_:_:)();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v5, v2);
  uint64_t v8 = swift_task_dealloc();
  if (v6)
  {
    uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(v0 + 32)) + 0x58))(v8);
    if (v9)
    {
      [v9 routeRecommendationDismissed];
      swift_unknownObjectRelease();
    }
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v12 = *(void *)(v0 + 40);
    v7(v4, v2);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    swift_task_dealloc();
    goto LABEL_7;
  }
  v7(v4, v2);
  swift_task_dealloc();
  unint64_t v15 = sub_100316F64();
  id v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v16;
  *id v16 = v0;
  v16[1] = sub_10030D734;
  uint64_t v17 = *(void *)(v0 + 64);
  uint64_t v18 = *(void *)(v0 + 40);
  return dispatch thunk of AsyncIteratorProtocol.next()(v17, v18, v15);
}

Swift::Void __swiftcall ActivityController.setRouteRecommendationRelevanceScore(_:activityIdentifier:)(Swift::Double _, Swift::String activityIdentifier)
{
  object = activityIdentifier._object;
  uint64_t countAndFlagsBits = activityIdentifier._countAndFlagsBits;
  if (qword_100484D30 != -1) {
    swift_once();
  }
  sub_1003133E0(2u, countAndFlagsBits, (uint64_t)object, _);
}

Swift::Void __swiftcall ActivityController.endRouteRecommendationActivity(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  if (qword_100484D30 != -1) {
    swift_once();
  }
  sub_100311E3C(2u, countAndFlagsBits, (uint64_t)object);
}

void ActivityController.startGroupSessionNearbyActivity(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v4 - 8);
  char v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100013A80(&qword_100479F68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v8;
  id v9 = [a1 data];
  uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v12 = v11;

  Swift::String v13 = Data.base64EncodedString(options:)(0);
  sub_10018FE9C(v10, v12);
  *(Swift::String *)(inited + 48) = v13;
  unint64_t v14 = sub_1001FA23C(inited);
  if (qword_100484D30 != -1) {
    swift_once();
  }
  unint64_t v15 = sub_10030E088(v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_10030FC6C(3, v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v17 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = v16;
    v18[5] = v2;
    v18[6] = a1;
    id v19 = v2;
    id v20 = a1;
    sub_10018A588((uint64_t)v6, (uint64_t)&unk_10047D668, (uint64_t)v18);
    swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    id v21 = (id)*sub_1001A665C();
    os_log(_:dso:log:_:_:)();
  }
}

unint64_t sub_10030E088(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_100013A80((uint64_t *)&unk_10047B7F0);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  char v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = (char *)&type metadata for Any + 8;
  unint64_t v11 = &type metadata for String;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_10018F864();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_10018FF5C(v6, v7);
    sub_10018FF5C(v7, v40);
    sub_10018FF5C(v40, &v38);
    unint64_t result = sub_100013660(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      Swift::String v13 = v6;
      uint64_t v14 = v1;
      unint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      unint64_t v11 = v15;
      uint64_t v1 = v14;
      char v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_10018FD5C((uint64_t)v18);
      unint64_t result = (unint64_t)sub_10018FF5C(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v27 = (uint64_t *)(v2[6] + 16 * result);
    *char v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_10018FF5C(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10030E3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_10030E418, 0, 0);
}

uint64_t sub_10030E418()
{
  uint64_t v1 = sub_100013A80(&qword_10047D848);
  v0[6] = v1;
  v0[7] = *(void *)(v1 - 8);
  v0[8] = swift_task_alloc();
  uint64_t v2 = sub_100013A80(&qword_10047D850);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  dispatch thunk of Activity.activityStateUpdates.getter();
  Activity.ActivityStateUpdates.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  sub_100013A80(&qword_10047D858);
  v0[9] = swift_task_alloc();
  unint64_t v5 = sub_100316F64();
  char v6 = (void *)swift_task_alloc();
  v0[10] = v6;
  void *v6 = v0;
  v6[1] = sub_10030E604;
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[6];
  return dispatch thunk of AsyncIteratorProtocol.next()(v7, v8, v5);
}

uint64_t sub_10030E604()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10030EA00;
  }
  else {
    uint64_t v2 = sub_10030E718;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10030E718()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = type metadata accessor for ActivityState();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    Swift::String v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v1, v2);
  uint64_t v5 = swift_task_alloc();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v5, enum case for ActivityState.dismissed(_:), v2);
  char v6 = static ActivityState.== infix(_:_:)();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v5, v2);
  uint64_t v8 = swift_task_dealloc();
  if (v6)
  {
    id v9 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(v0 + 32)) + 0x58))(v8);
    if (v9)
    {
      [v9 nearbyGroupSessionDismissed:*(void *)(v0 + 40)];
      swift_unknownObjectRelease();
    }
    uint64_t v11 = *(void *)(v0 + 56);
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v12 = *(void *)(v0 + 48);
    v7(v4, v2);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    swift_task_dealloc();
    goto LABEL_7;
  }
  v7(v4, v2);
  swift_task_dealloc();
  unint64_t v15 = sub_100316F64();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_10030E604;
  uint64_t v17 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 48);
  return dispatch thunk of AsyncIteratorProtocol.next()(v17, v18, v15);
}

uint64_t sub_10030EA00()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 88);
  sub_100013A80(&qword_100478740);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

Swift::Void __swiftcall ActivityController.endGroupSessionNearbyActivity()()
{
}

Swift::Void __swiftcall ActivityController.endGroupSessionLowPowerPlatterActivity()()
{
}

uint64_t sub_10030EB0C(unsigned __int8 a1)
{
  if (qword_100484D30 != -1) {
    swift_once();
  }
  return sub_1003124D8(a1);
}

void sub_10030EB74(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v4 = qword_100484D30;
  id v5 = a1;
  if (v4 != -1) {
    swift_once();
  }
  sub_1003124D8(a3);
}

Swift::Void __swiftcall ActivityController.clearActivities()()
{
  if (qword_100484D30 != -1) {
    swift_once();
  }
  sub_10030FA6C();
}

id ActivityController.init()()
{
  swift_unknownObjectWeakInit();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityController();
  return objc_msgSendSuper2(&v2, "init");
}

id ActivityController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_10030EE20(char a1)
{
  unint64_t result = 0x6979616C50776F6ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E69726F7272696DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10030EEE4(unsigned __int8 *a1, char *a2)
{
  return sub_10030EEF0(*a1, *a2);
}

uint64_t sub_10030EEF0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA0000000000676ELL;
  unint64_t v3 = 0x6979616C50776F6ELL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6979616C50776F6ELL;
  unint64_t v6 = 0xEA0000000000676ELL;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6E69726F7272696DLL;
      unint64_t v6 = 0xE900000000000067;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000013;
      uint64_t v7 = "routeRecommendation";
      goto LABEL_6;
    case 3:
      unint64_t v6 = 0x80000001003BB220;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000014;
      uint64_t v7 = "groupSessionLowPower";
LABEL_6:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x6E69726F7272696DLL;
      unint64_t v2 = 0xE900000000000067;
      break;
    case 2:
      unint64_t v3 = 0xD000000000000013;
      uint64_t v8 = "routeRecommendation";
      goto LABEL_12;
    case 3:
      unint64_t v2 = 0x80000001003BB220;
      unint64_t v3 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v3 = 0xD000000000000014;
      uint64_t v8 = "groupSessionLowPower";
LABEL_12:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v9 = 1;
  }
  else {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

unint64_t sub_10030F0B8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100316874(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10030F0E8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10030EE20(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_10030F114()
{
  return sub_10030F11C();
}

Swift::Int sub_10030F11C()
{
  return Hasher._finalize()();
}

uint64_t sub_10030F228()
{
  return sub_10030F230();
}

uint64_t sub_10030F230()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10030F328()
{
  return sub_10030F330();
}

Swift::Int sub_10030F330()
{
  return Hasher._finalize()();
}

uint64_t sub_10030F438()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10030F498()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10030F4E8()
{
  type metadata accessor for ActivityStore();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = &_swiftEmptyDictionarySingleton;
  *(void *)(result + 24) = &_swiftEmptyDictionarySingleton;
  qword_100484D38 = result;
  return result;
}

void *sub_10030F520()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v44 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  int64_t v45 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v46 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      uint64_t v9 = (v5 - 1) & v5;
      unint64_t v10 = v8 | (v6 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_61;
    }
    if (v11 >= v45) {
      break;
    }
    unint64_t v12 = *(void *)(v44 + 8 * v11);
    ++v6;
    if (!v12)
    {
      int64_t v6 = v11 + 1;
      if (v11 + 1 >= v45) {
        break;
      }
      unint64_t v12 = *(void *)(v44 + 8 * v6);
      if (!v12)
      {
        int64_t v6 = v11 + 2;
        if (v11 + 2 >= v45) {
          break;
        }
        unint64_t v12 = *(void *)(v44 + 8 * v6);
        if (!v12)
        {
          int64_t v13 = v11 + 3;
          if (v13 >= v45) {
            break;
          }
          unint64_t v12 = *(void *)(v44 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              int64_t v6 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_62;
              }
              if (v6 >= v45) {
                goto LABEL_57;
              }
              unint64_t v12 = *(void *)(v44 + 8 * v6);
              ++v13;
              if (v12) {
                goto LABEL_21;
              }
            }
          }
          int64_t v6 = v13;
        }
      }
    }
LABEL_21:
    uint64_t v9 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v6 << 6);
LABEL_22:
    unint64_t v14 = *(void *)(*(void *)(v46 + 56) + 8 * v10);
    unint64_t v15 = 0xEA0000000000676ELL;
    uint64_t v50 = 0x6979616C50776F6ELL;
    switch(*(unsigned char *)(*(void *)(v46 + 48) + v10))
    {
      case 1:
        unint64_t v15 = 0xE900000000000067;
        unint64_t v16 = 0x6E69726F7272696DLL;
        goto LABEL_28;
      case 2:
        uint64_t v50 = 0xD000000000000013;
        uint64_t v17 = "nowPlaying";
        goto LABEL_26;
      case 3:
        unint64_t v15 = 0x80000001003BB220;
        unint64_t v16 = 0xD000000000000012;
LABEL_28:
        uint64_t v50 = v16;
        break;
      case 4:
        uint64_t v50 = 0xD000000000000014;
        uint64_t v17 = "groupSessionNearby";
LABEL_26:
        unint64_t v15 = (unint64_t)v17 | 0x8000000000000000;
        break;
      default:
        break;
    }
    uint64_t v18 = *((void *)&_swiftEmptyDictionarySingleton + 2);
    swift_bridgeObjectRetain();
    if (v18)
    {
      unint64_t v19 = sub_100013660(v50, v15);
      int64_t v20 = _swiftEmptyArrayStorage;
      if (v21)
      {
        int64_t v20 = *(void **)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 8 * v19);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      int64_t v20 = _swiftEmptyArrayStorage;
    }
    uint64_t v49 = v15;
    swift_bridgeObjectRelease();
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v48 = v9;
      if (!v22)
      {
LABEL_45:
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v48 = v9;
      if (!v22) {
        goto LABEL_45;
      }
    }
    sub_100014688(0, v22 & ~(v22 >> 63), 0);
    if (v22 < 0) {
      goto LABEL_59;
    }
    int64_t v47 = v6;
    uint64_t v23 = 0;
    do
    {
      if ((v14 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v24 = Activity.id.getter();
      uint64_t v26 = v25;
      swift_release();
      unint64_t v28 = _swiftEmptyArrayStorage[2];
      unint64_t v27 = _swiftEmptyArrayStorage[3];
      if (v28 >= v27 >> 1) {
        sub_100014688(v27 > 1, v28 + 1, 1);
      }
      ++v23;
      _swiftEmptyArrayStorage[2] = v28 + 1;
      BOOL v29 = &_swiftEmptyArrayStorage[2 * v28];
      v29[4] = v24;
      v29[5] = v26;
    }
    while (v22 != v23);
    swift_bridgeObjectRelease();
    int64_t v6 = v47;
LABEL_46:
    sub_100314630(_swiftEmptyArrayStorage);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v32 = sub_100013660(v50, v49);
    uint64_t v33 = *((void *)&_swiftEmptyDictionarySingleton + 2);
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x10030FA58);
    }
    char v36 = v31;
    if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v35)
    {
      unint64_t v5 = v48;
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v31) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_10022CA40();
        if (v36) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_10022BF40(v35, isUniquelyReferenced_nonNull_native);
      unint64_t v37 = sub_100013660(v50, v49);
      unint64_t v5 = v48;
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_63;
      }
      unint64_t v32 = v37;
      if (v36)
      {
LABEL_4:
        uint64_t v7 = *((void *)&_swiftEmptyDictionarySingleton + 7);
        swift_bridgeObjectRelease();
        *(void *)(v7 + 8 * v32) = v20;
        goto LABEL_5;
      }
    }
    *((void *)&_swiftEmptyDictionarySingleton + (v32 >> 6) + 8) |= 1 << v32;
    uint64_t v39 = (uint64_t *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + 16 * v32);
    *uint64_t v39 = v50;
    v39[1] = v49;
    *(void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 8 * v32) = v20;
    uint64_t v40 = *((void *)&_swiftEmptyDictionarySingleton + 2);
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v42 = v40 + 1;
    if (v41) {
      goto LABEL_60;
    }
    *((void *)&_swiftEmptyDictionarySingleton + 2) = v42;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_57:
  swift_release();
  return &_swiftEmptyDictionarySingleton;
}

unint64_t sub_10030FA6C()
{
  static os_log_type_t.default.getter();
  unint64_t v12 = sub_1001A665C();
  id v0 = (id)*v12;
  os_log(_:dso:log:_:_:)();

  sub_100013A80(&qword_10047D838);
  unint64_t result = static Activity.activities.getter();
  unint64_t v2 = result;
  if (!(result >> 62))
  {
    uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(v11 + 16) = _swiftEmptyDictionarySingleton;
    return swift_bridgeObjectRelease();
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      ++v4;
      static os_log_type_t.default.getter();
      id v5 = (id)*v12;
      sub_100013A80(&qword_10047AE40);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1003C58B0;
      id v7 = v5;
      uint64_t v8 = Activity.id.getter();
      uint64_t v10 = v9;
      *(void *)(v6 + 56) = &type metadata for String;
      *(void *)(v6 + 64) = sub_100015768();
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 40) = v10;
      os_log(_:dso:log:_:_:)();
      swift_release();

      swift_bridgeObjectRelease();
    }
    while (v3 != v4);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10030FC6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v152 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100013A80(&qword_100479F98);
  __chkstk_darwin(v8 - 8);
  *(void *)&long long v170 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MediaLiveActivityAttributes.ContentState();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v169 = (char *)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v152 - v14;
  uint64_t v16 = type metadata accessor for MediaLiveActivityAttributes();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v171 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = 0;
  if (sub_100313E14(a1))
  {
    unint64_t v152 = v7;
    uint64_t v153 = v2;
    uint64_t v162 = v17;
    uint64_t v167 = v11;
    unint64_t v166 = 0xD000000000000017;
    static os_log_type_t.default.getter();
    id v160 = sub_1001A665C();
    int64_t v20 = (void *)*v160;
    uint64_t v161 = sub_100013A80(&qword_10047AE40);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1003C5BA0;
    unint64_t v22 = 0xEA0000000000676ELL;
    unint64_t v23 = 0x6979616C50776F6ELL;
    uint64_t v24 = (void *)v21;
    switch((char)a1)
    {
      case 1:
        unint64_t v22 = 0xE900000000000067;
        unint64_t v23 = 0x6E69726F7272696DLL;
        break;
      case 2:
        unint64_t v23 = 0xD000000000000013;
        uint64_t v25 = "routeRecommendation";
        goto LABEL_7;
      case 3:
        unint64_t v23 = 0xD000000000000012;
        uint64_t v25 = "groupSessionNearby";
        goto LABEL_7;
      case 4:
        unint64_t v23 = 0xD000000000000014;
        uint64_t v25 = "groupSessionLowPower";
LABEL_7:
        unint64_t v22 = (unint64_t)(v25 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    *(void *)(v21 + 56) = &type metadata for String;
    unint64_t v159 = sub_100015768();
    v24[8] = v159;
    void v24[4] = v23;
    v24[5] = v22;
    v24[12] = sub_100013A80(&qword_10047D810);
    v24[13] = sub_100316AD0();
    v24[9] = a2;
    id v26 = v20;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    uint64_t v27 = sub_100013A80(&qword_10047D888);
    uint64_t v158 = &v152;
    unint64_t v28 = *(void **)(*(void *)(v27 - 8) + 64);
    __chkstk_darwin(v27 - 8);
    uint64_t v29 = type metadata accessor for ActivityPresentationOptions();
    uint64_t v172 = *(void *)(v29 - 8);
    uint64_t v173 = v29;
    uint64_t v30 = *(char ***)(v172 + 56);
    uint64_t v174 = (uint64_t)&v152 - (((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v164 = v30;
    ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v174, 1, 1);
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
    if (*(void *)(a2 + 16))
    {
      uint64_t v34 = v31;
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_100013660(v34, v33);
      if (v36)
      {
        sub_10018FDAC(*(void *)(a2 + 56) + 32 * v35, (uint64_t)&v178);
      }
      else
      {
        long long v178 = 0u;
        long long v179 = 0u;
      }
    }
    else
    {
      long long v178 = 0u;
      long long v179 = 0u;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v179 + 1)) {
      uint64_t v37 = swift_dynamicCast();
    }
    else {
      uint64_t v37 = sub_100009A08((uint64_t)&v178, &qword_100479F50);
    }
    uint64_t v168 = v15;
    uint64_t v165 = v10;
    uint64_t v163 = v16;
    uint64_t v154 = a1;
    switch((char)a1)
    {
      case 1:
        __chkstk_darwin(v37);
        int v157 = v28;
        unint64_t v53 = ((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v55 = v54;
        BOOL v56 = (char *)&v152 - v53;
        sub_100013A80(&qword_10047D890);
        uint64_t v57 = type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination();
        uint64_t v58 = *(void *)(v57 - 8);
        unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = *(_OWORD *)(v55 + 2224);
        (*(void (**)(unint64_t, void, uint64_t))(v58 + 104))(v60 + v59, enum case for ActivityPresentationOptions.ActivityPresentationDestination.systemAperture(_:), v57);
        ActivityPresentationOptions.init(destinations:)();
        uint64_t v61 = v173;
        ((void (*)(char *, void, uint64_t, uint64_t))v164)(v56, 0, 1, v173);
        uint64_t v62 = (uint64_t)v56;
        uint64_t v63 = v174;
        sub_100317060(v62, v174);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v63, 1, v61) == 1) {
          goto LABEL_48;
        }
        ActivityPresentationOptions.isUserDismissalAllowedOnLockScreen.setter();
        uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v66 = v65;
        uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *((void *)&v179 + 1) = &type metadata for String;
        *(void *)&long long v178 = v67;
        *((void *)&v178 + 1) = v68;
        sub_10018FF5C(&v178, &v177);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v176 = a2;
        sub_1002490A8(&v177, v64, v66, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v155 = 0x80000001003BAF40;
        goto LABEL_29;
      case 2:
        id v70 = [self currentSettings];
        if (!v70) {
          goto LABEL_49;
        }
        uint64_t v71 = v70;
        unsigned int v72 = [v70 supportManyRecommendationsPlatters];

        __chkstk_darwin(v73);
        int v157 = v28;
        uint64_t v74 = (char *)&v152 - (((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_100013A80(&qword_10047D890);
        uint64_t v75 = type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination();
        uint64_t v76 = *(void *)(v75 - 8);
        unint64_t v77 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
        uint64_t v78 = swift_allocObject();
        *(_OWORD *)(v78 + 16) = xmmword_1003C58B0;
        (*(void (**)(unint64_t, void, uint64_t))(v76 + 104))(v78 + v77, enum case for ActivityPresentationOptions.ActivityPresentationDestination.lockscreen(_:), v75);
        ActivityPresentationOptions.init(destinations:)();
        uint64_t v79 = v173;
        ((void (*)(char *, void, uint64_t, uint64_t))v164)(v74, 0, 1, v173);
        uint64_t v80 = v174;
        sub_100317060((uint64_t)v74, v174);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v80, 1, v79) == 1) {
          goto LABEL_50;
        }
        unint64_t v81 = 0x80000001003BAF40;
        if (v72) {
          unint64_t v81 = 0x80000001003BAF60;
        }
        unint64_t v155 = v81;
        unint64_t v82 = 0xD000000000000017;
        if (v72) {
          unint64_t v82 = 0xD00000000000001ELL;
        }
        unint64_t v166 = v82;
        ActivityPresentationOptions.isUserDismissalAllowedOnLockScreen.setter();
        uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v85 = v84;
        uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *((void *)&v179 + 1) = &type metadata for String;
        *(void *)&long long v178 = v86;
        *((void *)&v178 + 1) = v87;
        sub_10018FF5C(&v178, &v177);
        char v88 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v176 = a2;
        sub_1002490A8(&v177, v83, v85, v88);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v165;
LABEL_29:
        uint64_t v89 = v168;
        break;
      case 3:
      case 4:
        int v157 = &v152;
        __chkstk_darwin(v37);
        uint64_t v91 = v90;
        sub_100013A80(&qword_10047D890);
        uint64_t v92 = type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination();
        uint64_t v93 = *(void *)(v92 - 8);
        unint64_t v94 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
        uint64_t v95 = swift_allocObject();
        *(_OWORD *)(v95 + 16) = *(_OWORD *)(v91 + 2224);
        (*(void (**)(unint64_t, void, uint64_t))(v93 + 104))(v95 + v94, enum case for ActivityPresentationOptions.ActivityPresentationDestination.lockscreen(_:), v92);
        ActivityPresentationOptions.init(destinations:)();
        uint64_t v96 = v173;
        ((void (*)(char *, void, uint64_t, uint64_t))v164)((char *)&v152 - (((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v173);
        sub_100317060((uint64_t)&v152 - (((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF0), v174);
        uint64_t v89 = v168;
        uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v99 = v98;
        uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *((void *)&v179 + 1) = &type metadata for String;
        *(void *)&long long v178 = v100;
        *((void *)&v178 + 1) = v101;
        sub_10018FF5C(&v178, &v177);
        char v102 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v176 = a2;
        sub_1002490A8(&v177, v97, v99, v102);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v166 = 0xD00000000000001ELL;
        unint64_t v155 = 0x80000001003BAF60;
        goto LABEL_35;
      default:
        id v38 = [self currentSettings];
        if (!v38) {
          goto LABEL_47;
        }
        uint64_t v39 = v38;
        unsigned int v40 = [v38 supportLiveActivityBanner];

        os_log_t v156 = &v152;
        __chkstk_darwin(v41);
        int v157 = v28;
        uint64_t v42 = (char *)&v152 - (((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_100013A80(&qword_10047D890);
        uint64_t v43 = type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination();
        uint64_t v44 = *(void *)(v43 - 8);
        uint64_t v45 = *(void *)(v44 + 72);
        unint64_t v46 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
        int64_t v47 = (void (**)(unint64_t, void, uint64_t))(v44 + 104);
        uint64_t v48 = 2 * v45;
        uint64_t v49 = swift_allocObject();
        if (v40)
        {
          *(_OWORD *)(v49 + 16) = xmmword_1003C7B20;
          unint64_t v50 = v49 + v46;
          uint64_t v51 = *v47;
          (*v47)(v50, enum case for ActivityPresentationOptions.ActivityPresentationDestination.systemAperture(_:), v43);
          v51(v50 + v45, enum case for ActivityPresentationOptions.ActivityPresentationDestination.lockscreen(_:), v43);
          v51(v50 + v48, enum case for ActivityPresentationOptions.ActivityPresentationDestination.banner(_:), v43);
          unint64_t v52 = v50 + 3 * v45;
        }
        else
        {
          *(_OWORD *)(v49 + 16) = xmmword_1003C5F10;
          unint64_t v103 = v49 + v46;
          uint64_t v51 = *v47;
          (*v47)(v103, enum case for ActivityPresentationOptions.ActivityPresentationDestination.systemAperture(_:), v43);
          v51(v103 + v45, enum case for ActivityPresentationOptions.ActivityPresentationDestination.lockscreen(_:), v43);
          unint64_t v52 = v103 + v48;
        }
        v51(v52, enum case for ActivityPresentationOptions.ActivityPresentationDestination.ambient(_:), v43);
        ActivityPresentationOptions.init(destinations:)();
        uint64_t v104 = v173;
        ((void (*)(char *, void, uint64_t, uint64_t))v164)(v42, 0, 1, v173);
        uint64_t v105 = (uint64_t)v42;
        uint64_t v106 = v174;
        sub_100317060(v105, v174);
        int v107 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v106, 1, v104);
        uint64_t v10 = v165;
        uint64_t v89 = v168;
        if (v107 == 1) {
          goto LABEL_51;
        }
        ActivityPresentationOptions.isUserDismissalAllowedOnLockScreen.setter();
        uint64_t v108 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v110 = v109;
        uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *((void *)&v179 + 1) = &type metadata for String;
        *(void *)&long long v178 = v111;
        *((void *)&v178 + 1) = v112;
        sub_10018FF5C(&v178, &v177);
        char v113 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v176 = a2;
        sub_1002490A8(&v177, v108, v110, v113);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v155 = 0x80000001003BAF40;
        break;
    }
    uint64_t v96 = v173;
    unint64_t v28 = v157;
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v114 = v171;
    MediaLiveActivityAttributes.init(attributes:)();
    sub_100313C8C(a2);
    uint64_t v115 = sub_100013A80(&qword_10047D7F0);
    uint64_t v164 = &v152;
    int v157 = (void *)v115;
    os_log_t v156 = *(char ***)(v115 - 8);
    __chkstk_darwin(v115);
    id v117 = (char *)&v152 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v169, v89, v10);
    uint64_t v118 = type metadata accessor for Date();
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v170, 1, 1, v118);
    sub_100316A8C(&qword_10047D7F8);
    sub_100316A8C(&qword_10047D800);
    sub_100316A8C(&qword_10047D808);
    uint64_t v119 = ActivityContent.init(state:staleDate:relevanceScore:)();
    __chkstk_darwin(v119);
    uint64_t v120 = (char *)&v152 - (((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1001E71E8(v174, (uint64_t)v120, &qword_10047D888);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v120, 1, v96) == 1)
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      JUMPOUT(0x100311560);
    }
    sub_100013A80(&qword_10047D838);
    swift_bridgeObjectRelease();
    sub_100013A80(&qword_10047D898);
    uint64_t v121 = *(void *)(type metadata accessor for ActivityContentSource.Request() - 8);
    unint64_t v122 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
    uint64_t v123 = swift_allocObject();
    long long v170 = xmmword_1003C58B0;
    *(_OWORD *)(v123 + 16) = xmmword_1003C58B0;
    uint64_t v124 = (void *)(v123 + v122);
    *uint64_t v124 = 0;
    v124[1] = 0;
    (*(void (**)(void))(v121 + 104))();
    uint64_t v125 = v114;
    uint64_t v19 = static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v172 + 8))(v120, v173);
    uint64_t v126 = Activity.id.getter();
    uint64_t v128 = v127;
    uint64_t v129 = type metadata accessor for TaskPriority();
    uint64_t v130 = (uint64_t)v152;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v152, 1, 1, v129);
    uint64_t v131 = (void *)swift_allocObject();
    v131[2] = 0;
    v131[3] = 0;
    v131[4] = v19;
    swift_retain();
    uint64_t v132 = sub_10018A588(v130, (uint64_t)&unk_10047D8A8, (uint64_t)v131);
    uint64_t v133 = v153;
    swift_beginAccess();
    char v134 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v177 = *(void *)(v133 + 24);
    *(void *)(v133 + 24) = 0x8000000000000000;
    sub_1003151D0(v132, v126, v128, v134);
    *(void *)(v133 + 24) = v177;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v135 = (uint64_t *)(v133 + 16);
    swift_beginAccess();
    uint64_t v136 = *(void *)(v133 + 16);
    if (*(void *)(v136 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v137 = sub_100314288(v154);
      uint64_t v138 = (void **)v160;
      if (v139)
      {
        uint64_t v140 = *(void **)(*(void *)(v136 + 56) + 8 * v137);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v140 = _swiftEmptyArrayStorage;
      }
      uint64_t v141 = v165;
      uint64_t v142 = v163;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v140 = _swiftEmptyArrayStorage;
      uint64_t v141 = v165;
      uint64_t v142 = v163;
      uint64_t v138 = (void **)v160;
    }
    uint64_t v176 = (uint64_t)v140;
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v143 = v176;
    swift_beginAccess();
    char v144 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v175 = *v135;
    *uint64_t v135 = 0x8000000000000000;
    sub_100315098(v143, v154, v144);
    *uint64_t v135 = v175;
    swift_bridgeObjectRelease();
    swift_endAccess();
    static os_log_type_t.default.getter();
    uint64_t v145 = *v138;
    uint64_t v146 = swift_allocObject();
    *(_OWORD *)(v146 + 16) = v170;
    id v147 = v145;
    uint64_t v148 = Activity.id.getter();
    unint64_t v149 = v159;
    *(void *)(v146 + 56) = &type metadata for String;
    *(void *)(v146 + 64) = v149;
    *(void *)(v146 + 32) = v148;
    *(void *)(v146 + 40) = v150;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    ((void (*)(char *, void *))v156[1])(v117, v157);
    (*(void (**)(char *, uint64_t))(v167 + 8))(v168, v141);
    (*(void (**)(char *, uint64_t))(v162 + 8))(v125, v142);
    sub_100009A08(v174, &qword_10047D888);
  }
  return v19;
}

uint64_t sub_10031158C()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_100013F84;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_10030C874, 0, 0);
}

uint64_t sub_100311638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_100311658, 0, 0);
}

uint64_t sub_100311658()
{
  uint64_t v1 = sub_100013A80(&qword_10047D848);
  v0[4] = v1;
  v0[5] = *(void *)(v1 - 8);
  v0[6] = swift_task_alloc();
  uint64_t v2 = sub_100013A80(&qword_10047D850);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  dispatch thunk of Activity.activityStateUpdates.getter();
  Activity.ActivityStateUpdates.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  sub_100013A80(&qword_10047D858);
  v0[7] = swift_task_alloc();
  unint64_t v5 = sub_100316F64();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  void *v6 = v0;
  v6[1] = sub_100311844;
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[4];
  return dispatch thunk of AsyncIteratorProtocol.next()(v7, v8, v5);
}

uint64_t sub_100311844()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100311DB8;
  }
  else {
    uint64_t v2 = sub_100311958;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100311958()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = type metadata accessor for ActivityState();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
    static os_log_type_t.default.getter();
    uint64_t v27 = sub_1001A665C();
    uint64_t v7 = (void *)*v27;
    sub_100013A80(&qword_10047AE40);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1003C5BA0;
    id v28 = v7;
    uint64_t v9 = Activity.id.getter();
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = &type metadata for String;
    unint64_t v12 = sub_100015768();
    *(void *)(v8 + 64) = v12;
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    swift_task_alloc();
    (*(void (**)(void))(v3 + 16))();
    uint64_t v13 = String.init<A>(describing:)();
    uint64_t v15 = v14;
    swift_task_dealloc();
    *(void *)(v8 + 96) = &type metadata for String;
    *(void *)(v8 + 104) = v12;
    *(void *)(v8 + 72) = v13;
    *(void *)(v8 + 80) = v15;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();

    uint64_t v16 = swift_task_alloc();
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v16, enum case for ActivityState.dismissed(_:), v2);
    LOBYTE(v15) = static ActivityState.== infix(_:_:)();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v17(v16, v2);
    swift_task_dealloc();
    if (v15)
    {
      if (static Task<>.isCancelled.getter()) {
        static os_log_type_t.info.getter();
      }
      else {
        static os_log_type_t.default.getter();
      }
      uint64_t v18 = (void *)*v27;
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1003C58B0;
      id v20 = v18;
      uint64_t v21 = Activity.id.getter();
      *(void *)(v19 + 56) = &type metadata for String;
      *(void *)(v19 + 64) = v12;
      *(void *)(v19 + 32) = v21;
      *(void *)(v19 + 40) = v22;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    v17(v6, v2);
    swift_task_dealloc();
    unint64_t v23 = sub_100316F64();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[8] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_100311844;
    uint64_t v25 = v0[7];
    uint64_t v26 = v0[4];
    return dispatch thunk of AsyncIteratorProtocol.next()(v25, v26, v23);
  }
}

uint64_t sub_100311DB8()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 72);
  sub_100013A80(&qword_100478740);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_100311E3C(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v54 = a2;
  uint64_t v7 = (uint64_t *)(v3 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v3 + 16);
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_100314288(a1);
    if (v11)
    {
      unint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v13 = (unint64_t)sub_100315B18(v12, v54, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_100315CCC(v12, v54, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v57 = *v7;
      *uint64_t v7 = 0x8000000000000000;
      sub_100315098((uint64_t)v14, a1, isUniquelyReferenced_nonNull_native);
      *uint64_t v7 = v57;
      swift_bridgeObjectRelease();
      swift_endAccess();
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v16 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v16)
        {
LABEL_5:
          uint64_t v53 = a3;
          if (v16 < 1)
          {
            __break(1u);
            JUMPOUT(0x1003124C4);
          }
          uint64_t v17 = (uint64_t *)(v4 + 24);
          unint64_t v51 = v13 & 0xC000000000000001;
          swift_beginAccess();
          uint64_t v18 = 0;
          long long v50 = xmmword_1003C5BA0;
          uint64_t v49 = a1;
          int64_t v47 = (char *)&type metadata for () + 8;
          unint64_t v46 = "nowPlaying";
          unint64_t v45 = (unint64_t)"routeRecommendation";
          uint64_t v44 = "groupSessionNearby";
          uint64_t v52 = v16;
          unint64_t v48 = v13;
          do
          {
            if (v51) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            uint64_t v27 = v53;
            uint64_t v55 = v18 + 1;
            static os_log_type_t.default.getter();
            id v28 = (void *)*sub_1001A665C();
            sub_100013A80(&qword_10047AE40);
            uint64_t v29 = swift_allocObject();
            *(_OWORD *)(v29 + 16) = v50;
            id v30 = v28;
            uint64_t v31 = Activity.id.getter();
            uint64_t v33 = v32;
            *(void *)(v29 + 56) = &type metadata for String;
            unint64_t v34 = sub_100015768();
            *(void *)(v29 + 64) = v34;
            *(void *)(v29 + 32) = v31;
            *(void *)(v29 + 40) = v33;
            unint64_t v35 = 0xEA0000000000676ELL;
            unint64_t v36 = 0x6979616C50776F6ELL;
            switch(v49)
            {
              case 1:
                unint64_t v35 = 0xE900000000000067;
                unint64_t v36 = 0x6E69726F7272696DLL;
                break;
              case 2:
                unint64_t v36 = 0xD000000000000013;
                uint64_t v37 = &v59;
                goto LABEL_17;
              case 3:
                unint64_t v35 = v45 | 0x8000000000000000;
                unint64_t v36 = 0xD000000000000012;
                break;
              case 4:
                unint64_t v36 = 0xD000000000000014;
                uint64_t v37 = &v58;
LABEL_17:
                unint64_t v35 = *(v37 - 32) | 0x8000000000000000;
                break;
              default:
                break;
            }
            *(void *)(v29 + 96) = &type metadata for String;
            *(void *)(v29 + 104) = v34;
            *(void *)(v29 + 72) = v36;
            *(void *)(v29 + 80) = v35;
            os_log(_:dso:log:_:_:)();

            swift_bridgeObjectRelease();
            if (*(void *)(*v17 + 16))
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_100013660(v54, v27);
              if (v38)
              {
                swift_retain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                Task.cancel()();
                swift_release();
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
            swift_beginAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v39 = sub_100013660(v54, v27);
            char v41 = v40;
            swift_bridgeObjectRelease();
            if (v41)
            {
              int v42 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v43 = *v17;
              uint64_t v56 = *v17;
              *uint64_t v17 = 0x8000000000000000;
              if (!v42)
              {
                sub_1003154E4();
                uint64_t v43 = v56;
              }
              swift_bridgeObjectRelease();
              sub_1001F1A4C(v39, v43);
              *uint64_t v17 = v43;
              swift_bridgeObjectRelease();
            }
            swift_endAccess();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v19 = sub_100013A80(&qword_10047D840);
            __chkstk_darwin(v19 - 8);
            uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v22 = sub_100013A80(&qword_10047D7F0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
            uint64_t v23 = type metadata accessor for ActivityUIDismissalPolicy();
            uint64_t v24 = *(void *)(v23 - 8);
            __chkstk_darwin(v23);
            uint64_t v26 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
            static ActivityUIDismissalPolicy.immediate.getter();
            dispatch thunk of Activity.endSync(_:dismissalPolicy:)();
            swift_release();
            (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
            sub_100009A08((uint64_t)v21, &qword_10047D840);
            uint64_t v18 = v55;
          }
          while (v52 != v55);
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003124D8(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_100314288(a1);
  char v7 = v6;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0) {
    return swift_endAccess();
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v4;
  uint64_t v56 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100315340();
    uint64_t v9 = v56;
  }
  unint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v5);
  sub_100314E00(v5, v9);
  *uint64_t v4 = v9;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
LABEL_6:
      if (v11 < 1)
      {
        __break(1u);
        JUMPOUT(0x100312AD0);
      }
      unint64_t v12 = (uint64_t *)(v2 + 24);
      unint64_t v52 = v10 & 0xC000000000000001;
      swift_beginAccess();
      uint64_t v13 = 0;
      long long v51 = xmmword_1003C5BA0;
      uint64_t v50 = a1;
      int64_t v47 = "nowPlaying";
      unint64_t v48 = (char *)&type metadata for () + 8;
      unint64_t v45 = "groupSessionNearby";
      unint64_t v46 = (unint64_t)"routeRecommendation";
      uint64_t v53 = v11;
      unint64_t v49 = v10;
      while (1)
      {
        if (v52) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_retain();
        }
        uint64_t v54 = v13 + 1;
        static os_log_type_t.default.getter();
        uint64_t v22 = (void *)*sub_1001A665C();
        sub_100013A80(&qword_10047AE40);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v51;
        id v24 = v22;
        uint64_t v25 = Activity.id.getter();
        uint64_t v27 = v26;
        *(void *)(v23 + 56) = &type metadata for String;
        unint64_t v28 = sub_100015768();
        *(void *)(v23 + 64) = v28;
        *(void *)(v23 + 32) = v25;
        *(void *)(v23 + 40) = v27;
        unint64_t v29 = 0xEA0000000000676ELL;
        unint64_t v30 = 0x6979616C50776F6ELL;
        switch(v50)
        {
          case 1:
            unint64_t v29 = 0xE900000000000067;
            unint64_t v30 = 0x6E69726F7272696DLL;
            break;
          case 2:
            unint64_t v30 = 0xD000000000000013;
            uint64_t v31 = v47;
            goto LABEL_18;
          case 3:
            unint64_t v29 = v46 | 0x8000000000000000;
            unint64_t v30 = 0xD000000000000012;
            break;
          case 4:
            unint64_t v30 = 0xD000000000000014;
            uint64_t v31 = v45;
LABEL_18:
            unint64_t v29 = (unint64_t)v31 | 0x8000000000000000;
            break;
          default:
            break;
        }
        *(void *)(v23 + 96) = &type metadata for String;
        *(void *)(v23 + 104) = v28;
        *(void *)(v23 + 72) = v30;
        *(void *)(v23 + 80) = v29;
        os_log(_:dso:log:_:_:)();

        swift_bridgeObjectRelease();
        uint64_t v32 = Activity.id.getter();
        uint64_t v34 = v33;
        if (!*(void *)(*v12 + 16)) {
          goto LABEL_24;
        }
        uint64_t v35 = v32;
        swift_bridgeObjectRetain();
        sub_100013660(v35, v34);
        if ((v36 & 1) == 0) {
          break;
        }
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Task.cancel()();
        swift_release();
LABEL_25:
        uint64_t v37 = Activity.id.getter();
        uint64_t v39 = v38;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v40 = sub_100013660(v37, v39);
        LOBYTE(v37) = v41;
        swift_bridgeObjectRelease();
        if (v37)
        {
          int v42 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v43 = *v12;
          uint64_t v55 = *v12;
          *unint64_t v12 = 0x8000000000000000;
          if (!v42)
          {
            sub_1003154E4();
            uint64_t v43 = v55;
          }
          swift_bridgeObjectRelease();
          sub_1001F1A4C(v40, v43);
          *unint64_t v12 = v43;
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v14 = sub_100013A80(&qword_10047D840);
        __chkstk_darwin(v14 - 8);
        uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v17 = sub_100013A80(&qword_10047D7F0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
        uint64_t v18 = type metadata accessor for ActivityUIDismissalPolicy();
        uint64_t v19 = *(void *)(v18 - 8);
        __chkstk_darwin(v18);
        uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
        static ActivityUIDismissalPolicy.immediate.getter();
        dispatch thunk of Activity.endSync(_:dismissalPolicy:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
        sub_100009A08((uint64_t)v16, &qword_10047D840);
        uint64_t v13 = v54;
        if (v53 == v54) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100312AE4(uint64_t a1, unsigned __int8 a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_100314288(a2);
    if (v7)
    {
      unint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_5;
        }
      }
      else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        if ((v8 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x100312D54);
          }
          uint64_t v9 = *(void *)(v8 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        sub_100312D68(a1, v9);
        return swift_release();
      }
    }
    swift_bridgeObjectRelease();
  }
  static os_log_type_t.error.getter();
  unint64_t v12 = (void *)*sub_1001A665C();
  sub_100013A80(&qword_10047AE40);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1003C58B0;
  unint64_t v14 = 0xEA0000000000676ELL;
  unint64_t v15 = 0x6979616C50776F6ELL;
  uint64_t v16 = v13;
  switch(a2)
  {
    case 1u:
      unint64_t v14 = 0xE900000000000067;
      unint64_t v15 = 0x6E69726F7272696DLL;
      break;
    case 2u:
      unint64_t v15 = 0xD000000000000013;
      uint64_t v17 = "routeRecommendation";
      goto LABEL_17;
    case 3u:
      unint64_t v14 = 0x80000001003BB220;
      unint64_t v15 = 0xD000000000000012;
      break;
    case 4u:
      unint64_t v15 = 0xD000000000000014;
      uint64_t v17 = "groupSessionLowPower";
LABEL_17:
      unint64_t v14 = (unint64_t)(v17 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_100015768();
  *(void *)(v16 + 32) = v15;
  *(void *)(v16 + 40) = v14;
  id v18 = v12;
  os_log(_:dso:log:_:_:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100312D68(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a1;
  uint64_t v4 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v4 - 8);
  unint64_t v45 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100013A80(&qword_100479F98);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v38 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v37 - v9;
  uint64_t v46 = type metadata accessor for MediaLiveActivityAttributes.ContentState();
  uint64_t v48 = *(void *)(v46 - 8);
  uint64_t v11 = __chkstk_darwin(v46);
  uint64_t v37 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v37 - v13;
  uint64_t v43 = (char *)&v37 - v13;
  sub_100313C8C(a1);
  uint64_t v15 = sub_100013A80(&qword_10047D7F0);
  uint64_t v41 = *(void *)(v15 - 8);
  uint64_t v16 = v41;
  uint64_t v17 = *(void *)(v41 + 64);
  __chkstk_darwin(v15);
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = a2;
  dispatch thunk of Activity.content.getter();
  int v42 = v10;
  ActivityContent.staleDate.getter();
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  uint64_t v20 = v19((char *)&v37 - v18, v15);
  uint64_t v44 = v16 + 8;
  __chkstk_darwin(v20);
  unint64_t v40 = v18;
  dispatch thunk of Activity.content.getter();
  ActivityContent.relevanceScore.getter();
  uint64_t v21 = v19((char *)&v37 - v18, v15);
  __chkstk_darwin(v21);
  uint64_t v22 = (char *)&v37 - v18;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v37, v14, v46);
  sub_1001E71E8((uint64_t)v10, v38, &qword_100479F98);
  sub_100316A8C(&qword_10047D7F8);
  sub_100316A8C(&qword_10047D800);
  sub_100316A8C(&qword_10047D808);
  ActivityContent.init(state:staleDate:relevanceScore:)();
  static os_log_type_t.default.getter();
  uint64_t v23 = (void *)*sub_1001A665C();
  sub_100013A80(&qword_10047AE40);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1003C5BA0;
  *(void *)(v24 + 56) = sub_100013A80(&qword_10047D810);
  *(void *)(v24 + 64) = sub_100316AD0();
  *(void *)(v24 + 32) = v39;
  id v25 = v23;
  swift_bridgeObjectRetain();
  uint64_t v26 = Activity.id.getter();
  uint64_t v28 = v27;
  *(void *)(v24 + 96) = &type metadata for String;
  *(void *)(v24 + 104) = sub_100015768();
  *(void *)(v24 + 72) = v26;
  *(void *)(v24 + 80) = v28;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v29 = type metadata accessor for TaskPriority();
  uint64_t v30 = (uint64_t)v45;
  uint64_t v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v45, 1, 1, v29);
  __chkstk_darwin(v31);
  uint64_t v32 = v41;
  uint64_t v33 = (char *)&v37 - v40;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)&v37 - v40, v22, v15);
  unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = (char *)swift_allocObject();
  *((void *)v35 + 2) = 0;
  *((void *)v35 + 3) = 0;
  *((void *)v35 + 4) = v47;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v35[v34], v33, v15);
  swift_retain();
  sub_10018A588(v30, (uint64_t)&unk_10047D828, (uint64_t)v35);
  swift_release();
  v19(v22, v15);
  sub_100009A08((uint64_t)v42, &qword_100479F98);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v43, v46);
}

uint64_t sub_10031332C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of Activity.update(_:)
                                       + async function pointer to dispatch thunk of Activity.update(_:));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100013F84;
  return v9(a5);
}

uint64_t sub_1003133E0(unsigned __int8 a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v9 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v4 + 16);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_100314288(a1);
    if (v14)
    {
      unint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_10031599C(v15, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16)
      {
        uint64_t v17 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = 0;
        *(void *)(v18 + 24) = 0;
        *(void *)(v18 + 32) = v16;
        *(double *)(v18 + 40) = a4;
        sub_10018A588((uint64_t)v11, (uint64_t)&unk_10047D880, v18);
        return swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  static os_log_type_t.error.getter();
  uint64_t v20 = (void *)*sub_1001A665C();
  sub_100013A80(&qword_10047AE40);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1003C58B0;
  *(void *)(v21 + 56) = &type metadata for String;
  *(void *)(v21 + 64) = sub_100015768();
  *(void *)(v21 + 32) = a2;
  *(void *)(v21 + 40) = a3;
  swift_bridgeObjectRetain();
  id v22 = v20;
  os_log(_:dso:log:_:_:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10031361C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(double *)(v5 + 24) = a1;
  *(void *)(v5 + 16) = a5;
  sub_100013A80(&qword_100479F98);
  *(void *)(v5 + 32) = swift_task_alloc();
  *(void *)(v5 + 40) = type metadata accessor for MediaLiveActivityAttributes.ContentState();
  *(void *)(v5 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_1003136E4, 0, 0);
}

uint64_t sub_1003136E4()
{
  uint64_t v1 = sub_100013A80(&qword_10047D7F0);
  v0[7] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_task_alloc();
  v0[8] = v3;
  uint64_t v4 = swift_task_alloc();
  dispatch thunk of Activity.content.getter();
  ActivityContent.state.getter();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[9] = v5;
  v0[10] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v4, v1);
  uint64_t v6 = swift_task_alloc();
  dispatch thunk of Activity.content.getter();
  ActivityContent.staleDate.getter();
  v5(v6, v1);
  sub_100316A8C(&qword_10047D7F8);
  sub_100316A8C(&qword_10047D800);
  sub_100316A8C(&qword_10047D808);
  ActivityContent.init(state:staleDate:relevanceScore:)();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of Activity.update(_:)
                                       + async function pointer to dispatch thunk of Activity.update(_:));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[11] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100313958;
  return v9(v3);
}

uint64_t sub_100313958()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100313A54, 0, 0);
}

uint64_t sub_100313A54()
{
  (*(void (**)(void, void))(v0 + 72))(*(void *)(v0 + 64), *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_100313AE4(unsigned __int8 a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  if (!*(void *)(v3 + 16)) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100314288(a1);
  if ((v5 & 1) == 0) {
    goto LABEL_16;
  }
  unint64_t v6 = *(void *)(*(void *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_5;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_16;
  }
LABEL_5:
  uint64_t result = (void *)sub_100014688(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v10 = Activity.id.getter();
      uint64_t v12 = v11;
      swift_release();
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        sub_100014688(v13 > 1, v14 + 1, 1);
      }
      ++v9;
      _swiftEmptyArrayStorage[2] = v14 + 1;
      unint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
      void v15[4] = v10;
      v15[5] = v12;
    }
    while (v7 != v9);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100313C8C(uint64_t a1)
{
  MediaLiveActivityAttributes.ContentState.init()();
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_100013660(v2, v3), (v5 & 1) == 0))
  {
    long long v11 = 0u;
    long long v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_10018FDAC(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_7:
    sub_100009A08((uint64_t)&v11, &qword_100479F50);
    goto LABEL_8;
  }
  if (swift_dynamicCast()) {
    MediaLiveActivityAttributes.ContentState.rawNowPlayingActivityUIState.setter();
  }
LABEL_8:
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v8 = sub_100013660(v6, v7), (v9 & 1) != 0))
  {
    sub_10018FDAC(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1)) {
    return sub_100009A08((uint64_t)&v11, &qword_100479F50);
  }
  sub_100013A80(&qword_10047A080);
  uint64_t result = swift_dynamicCast();
  if (result) {
    return MediaLiveActivityAttributes.ContentState.suppressedBundleIdentifiers.setter();
  }
  return result;
}

uint64_t sub_100313E14(unsigned __int8 a1)
{
  switch(a1)
  {
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0) {
        goto LABEL_7;
      }
LABEL_4:
      id v3 = [self currentSettings];
      if (!v3)
      {
        __break(1u);
        JUMPOUT(0x100313F70);
      }
      unint64_t v4 = v3;
      unsigned __int8 v5 = [v3 supportManyRecommendationsPlatters];

      if (v5) {
        char v6 = 1;
      }
      else {
LABEL_7:
      }
        char v6 = sub_100313F84(a1) ^ 1;
      return v6 & 1;
  }
}

uint64_t sub_100313F84(unsigned __int8 a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_100314288(a1);
    if (v5)
    {
      unint64_t v6 = *(void *)(*(void *)(v3 + 56) + 8 * v4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v6 >> 62) {
        goto LABEL_18;
      }
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter())
      {
        uint64_t v8 = type metadata accessor for ActivityState();
        v21[1] = v8 - 8;
        unint64_t v22 = v6 & 0xC000000000000001;
        uint64_t v9 = 4;
        v21[0] = v6;
        while (1)
        {
          uint64_t v10 = v9 - 4;
          if (!v22) {
            break;
          }
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_17;
          }
LABEL_11:
          uint64_t v24 = v21;
          uint64_t v13 = *(void *)(v8 - 8);
          uint64_t v14 = *(void *)(v13 + 64);
          __chkstk_darwin(v11);
          uint64_t v15 = dispatch thunk of Activity.activityState.getter();
          uint64_t v23 = v21;
          __chkstk_darwin(v15);
          uint64_t v16 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for ActivityState.dismissed(_:), v8);
          sub_100316A40();
          char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v18 = *(void (**)(char *, uint64_t))(v13 + 8);
          v18(v16, v8);
          v18(v16, v8);
          if (v17)
          {
            swift_release();
            ++v9;
            unint64_t v6 = v21[0];
            if (v12 != v7) {
              continue;
            }
          }
          char v19 = v17 ^ 1;
          goto LABEL_20;
        }
        uint64_t v11 = swift_retain();
        uint64_t v12 = v9 - 3;
        if (!__OFADD__(v10, 1)) {
          goto LABEL_11;
        }
LABEL_17:
        __break(1u);
LABEL_18:
        swift_bridgeObjectRetain();
      }
      char v19 = 0;
LABEL_20:
      swift_bridgeObjectRelease_n();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      char v19 = 0;
    }
  }
  else
  {
    char v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_100314248()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_100314288(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1003143B8(a1, v2);
}

unint64_t sub_1003143B8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEA0000000000676ELL;
      unint64_t v8 = 0x6979616C50776F6ELL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0x6E69726F7272696DLL;
          unint64_t v7 = 0xE900000000000067;
          break;
        case 2:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x80000001003BB200;
          break;
        case 3:
          unint64_t v7 = 0x80000001003BB220;
          unint64_t v8 = 0xD000000000000012;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000014;
          unint64_t v7 = 0x80000001003BB240;
          break;
        default:
          break;
      }
      unint64_t v9 = 0x6979616C50776F6ELL;
      unint64_t v10 = 0xEA0000000000676ELL;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE900000000000067;
          if (v8 == 0x6E69726F7272696DLL) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          unint64_t v10 = 0x80000001003BB200;
          if (v8 != 0xD000000000000013) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          unint64_t v10 = 0x80000001003BB220;
          unint64_t v9 = 0xD000000000000012;
          goto LABEL_14;
        case 4:
          unint64_t v10 = 0x80000001003BB240;
          if (v8 != 0xD000000000000014) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v9) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

void *sub_100314630(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_100229FF0(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10031471C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100013A80(&qword_10047D870);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_41;
  }
  if (v16 >= v32)
  {
    swift_release();
    char v17 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_36:
      uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
      if (v30 >= 64) {
        bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *char v17 = -1 << v30;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    char v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v33 + 8 * v16);
    ++v12;
    if (v18) {
      goto LABEL_21;
    }
    int64_t v12 = v16 + 1;
    if (v16 + 1 >= v32) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v33 + 8 * v12);
    if (v18)
    {
LABEL_21:
      unint64_t v10 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v22 = Hasher._finalize()();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = v22 & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
        if (v29 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v29)) + (v25 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(unsigned char *)(*(void *)(v7 + 48) + v13) = v20;
          *(void *)(*(void *)(v7 + 56) + 8 * v13) = v21;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x100314AD4);
    }
    int64_t v19 = v16 + 2;
    if (v19 < v32)
    {
      unint64_t v18 = *(void *)(v33 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          int64_t v12 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_42;
          }
          if (v12 >= v32) {
            goto LABEL_33;
          }
          unint64_t v18 = *(void *)(v33 + 8 * v12);
          ++v19;
          if (v18) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v19;
      goto LABEL_21;
    }
LABEL_33:
    swift_release();
    if (a2) {
      goto LABEL_36;
    }
  }
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100314AE8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100013A80(&qword_10047D868);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    Swift::Int v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  Swift::Int v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_100314E00(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        uint64_t result = Hasher._finalize()();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          int64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          unint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            void *v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *unint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x100315084);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

uint64_t sub_100315098(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_100314288(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100315340();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_10031471C(result, a3 & 1);
  uint64_t result = sub_100314288(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003151D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100013660(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1003154E4();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100314AE8(v15, a4 & 1);
  unint64_t v21 = sub_100013660(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

void *sub_100315340()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_10047D870);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1003154E4()
{
  uint64_t v1 = v0;
  sub_100013A80(&qword_10047D868);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s12mediaremoted18ActivityControllerC016updateNowPlayingB5State_27suppressedBundleIdentifiersySo05MRNowfB7UIStateV_SaySSGtF_0(uint64_t a1, uint64_t a2)
{
  sub_100013A80((uint64_t *)&unk_100479EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C5BA0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v6;
  *(void *)(inited + 120) = sub_100013A80(&qword_10047A080);
  *(void *)(inited + 96) = a2;
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1001FA360(inited);
  if (qword_100484D30 != -1) {
    swift_once();
  }
  sub_100312AE4(v7, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003157A4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003157EC()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_100013F84;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_10030D548, 0, 0);
}

uint64_t sub_100315898()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003158E8()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_100013F84;
  *(void *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return _swift_task_switch(sub_10030E418, 0, 0);
}

uint64_t sub_10031599C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      do
      {
        uint64_t v8 = v7 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a1 + 8 * v7);
          swift_retain();
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        if (Activity.id.getter() == a2 && v11 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_15:
          swift_bridgeObjectRelease();
          return v9;
        }
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_15;
        }
        swift_release();
        ++v7;
      }
      while (v10 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_100315B18(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_19:
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      for (unint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v8 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_16:
            __break(1u);
            return _swiftEmptyArrayStorage;
          }
        }
        else
        {
          if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_19;
          }
          swift_retain();
          unint64_t v8 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_16;
          }
        }
        if (Activity.id.getter() == a2 && v9 == a3) {
          break;
        }
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v10) {
          goto LABEL_13;
        }
        swift_release();
LABEL_5:
        if (v8 == v6) {
          return _swiftEmptyArrayStorage;
        }
      }
      swift_bridgeObjectRelease();
LABEL_13:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      goto LABEL_5;
    }
  }
  return _swiftEmptyArrayStorage;
}

void *sub_100315CCC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      unint64_t v6 = 0;
      unint64_t v7 = v4 & 0xC000000000000001;
      uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        if (v7)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v9 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
LABEL_17:
            __break(1u);
            return _swiftEmptyArrayStorage;
          }
        }
        else
        {
          if (v6 >= *(void *)(v8 + 16))
          {
            __break(1u);
            goto LABEL_20;
          }
          swift_retain();
          unint64_t v9 = v6 + 1;
          if (__OFADD__(v6, 1)) {
            goto LABEL_17;
          }
        }
        if (Activity.id.getter() == a2 && v10 == a3)
        {
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v11 = v7;
          unint64_t v12 = v4;
          uint64_t v13 = v5;
          char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v14)
          {
            swift_release();
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          uint64_t v5 = v13;
          unint64_t v4 = v12;
          unint64_t v7 = v11;
          uint64_t v8 = v16;
        }
        ++v6;
        if (v9 == v5) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

void _s12mediaremoted18ActivityControllerC032startGroupSessionLowPowerPlatterB0yyF_0()
{
  id v0 = [self server];
  id v1 = [v0 groupSessionServer];

  if (v1)
  {
    id v2 = [v1 sessionManager];

    if (v2)
    {
      id v3 = [v2 session];

      if (v3)
      {
        id v4 = [v3 identifier];
        swift_unknownObjectRelease();
        uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v7 = v6;

        sub_100013A80(&qword_100479F68);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1003C58B0;
        *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(inited + 40) = v9;
        *(void *)(inited + 48) = v5;
        *(void *)(inited + 56) = v7;
        unint64_t v10 = sub_1001FA23C(inited);
        if (qword_100484D30 != -1) {
          swift_once();
        }
        unint64_t v11 = sub_10030E088(v10);
        swift_bridgeObjectRelease();
        sub_10030FC6C(4, v11);
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
  }
}

uint64_t sub_100316030(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t j = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (j << 6); ; unint64_t i = __clz(__rbit64(v14)) + (j << 6))
  {
    uint64_t v16 = *(unsigned __int8 *)(*(void *)(a1 + 48) + i);
    uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    if (a2(v16, v17))
    {
      uint64_t v18 = v16;
      swift_release();
      return v18;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = j + 1;
    if (__OFADD__(j, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++j;
    if (v14) {
      goto LABEL_19;
    }
    int64_t j = v13 + 1;
    if (v13 + 1 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v4 + 8 * j);
    if (v14) {
      goto LABEL_19;
    }
    int64_t j = v13 + 2;
    if (v13 + 2 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v4 + 8 * j);
    if (v14) {
      goto LABEL_19;
    }
    int64_t j = v13 + 3;
    if (v13 + 3 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v4 + 8 * j);
    if (v14) {
      goto LABEL_19;
    }
    int64_t v15 = v13 + 4;
    if (v15 >= v8)
    {
LABEL_24:
      swift_release();
      return 0;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v15);
    for (int64_t j = v15; !v14; ++v15)
    {
      int64_t j = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_27;
      }
      if (j >= v8) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v4 + 8 * j);
    }
LABEL_19:
    unint64_t v7 = (v14 - 1) & v14;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

id _s12mediaremoted18ActivityControllerC010contextForB10IdentifierySo11MRUIContextaSSF_0(uint64_t a1, uint64_t a2)
{
  if (qword_100484D30 != -1) {
    swift_once();
  }
  uint64_t v4 = swift_beginAccess();
  __chkstk_darwin(v4);
  uint64_t v5 = swift_bridgeObjectRetain();
  char v6 = sub_100316030(v5, (uint64_t (*)(uint64_t, uint64_t))sub_100316D90);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_bridgeObjectRelease();
    switch(v6)
    {
      case 1:
        uint64_t v9 = (void **)&MRUIContextScreenMirroring;
        break;
      case 2:
        uint64_t v9 = (void **)&MRUIContextRouteRecommendation;
        break;
      case 3:
        uint64_t v9 = (void **)&MRUIContextGroupSessionNearby;
        break;
      case 4:
        uint64_t v9 = (void **)&MRUIContextGroupSession;
        break;
      default:
        uint64_t v9 = (void **)&MRUIContextNowPlaying;
        break;
    }
    goto LABEL_33;
  }
  static os_log_type_t.error.getter();
  unint64_t v10 = sub_1001A665C();
  unint64_t v11 = (void *)*v10;
  uint64_t v45 = sub_100013A80(&qword_10047AE40);
  uint64_t v12 = swift_allocObject();
  long long v47 = xmmword_1003C58B0;
  *(_OWORD *)(v12 + 16) = xmmword_1003C58B0;
  *(void *)(v12 + 56) = &type metadata for String;
  unint64_t v46 = sub_100015768();
  *(void *)(v12 + 64) = v46;
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  id v13 = v11;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  sub_100013A80(&qword_10047D838);
  unint64_t v14 = static Activity.activities.getter();
  unint64_t v15 = v14;
  if (v14 >> 62)
  {
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if (!v16) {
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v16) {
      goto LABEL_32;
    }
  }
  unint64_t v44 = v15 & 0xC000000000000001;
  if ((v15 & 0xC000000000000001) != 0) {
    goto LABEL_39;
  }
  if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_41:
    __break(1u);
    JUMPOUT(0x10031683CLL);
  }
  swift_retain();
LABEL_11:
  if (Activity.id.getter() == a1 && v17 == a2)
  {
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    static os_log_type_t.error.getter();
    uint64_t v19 = (void *)*v10;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = v47;
    unint64_t v21 = v46;
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = v21;
    *(void *)(v20 + 32) = a1;
    *(void *)(v20 + 40) = a2;
    swift_bridgeObjectRetain();
    id v22 = v19;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    uint64_t v23 = sub_100013A80(&qword_10047D840);
    __chkstk_darwin(v23 - 8);
    BOOL v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v26 = sub_100013A80(&qword_10047D7F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
    uint64_t v27 = type metadata accessor for ActivityUIDismissalPolicy();
    uint64_t v28 = *(void *)(v27 - 8);
    __chkstk_darwin(v27);
    uint64_t v30 = (char *)&v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    static ActivityUIDismissalPolicy.immediate.getter();
    dispatch thunk of Activity.endSync(_:dismissalPolicy:)();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    sub_100009A08((uint64_t)v25, &qword_10047D840);
    id v31 = MRUIContextUnknown;
    swift_release();
    return v31;
  }
  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_19;
  }
  swift_release();
  if (v16 != 1)
  {
    uint64_t v43 = v15 & 0xFFFFFFFFFFFFFF8;
    uint64_t v33 = 5;
    do
    {
      unint64_t v34 = v33 - 4;
      if (v44)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v35 = v33 - 3;
        if (__OFADD__(v34, 1)) {
          goto LABEL_38;
        }
      }
      else
      {
        if (v34 >= *(void *)(v43 + 16)) {
          goto LABEL_41;
        }
        swift_retain();
        uint64_t v35 = v33 - 3;
        if (__OFADD__(v34, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_11;
        }
      }
      if (Activity.id.getter() == a1 && v36 == a2) {
        goto LABEL_13;
      }
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v37) {
        goto LABEL_19;
      }
      swift_release();
      ++v33;
    }
    while (v35 != v16);
  }
LABEL_32:
  swift_bridgeObjectRelease();
  static os_log_type_t.error.getter();
  uint64_t v38 = (void *)*v10;
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v47;
  unint64_t v40 = v46;
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = v40;
  *(void *)(v39 + 32) = a1;
  *(void *)(v39 + 40) = a2;
  swift_bridgeObjectRetain();
  id v41 = v38;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v9 = (void **)&MRUIContextUnknown;
LABEL_33:
  int v42 = *v9;

  return v42;
}

uint64_t type metadata accessor for ActivityController()
{
  return self;
}

unint64_t sub_100316874(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100429538, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

unint64_t sub_1003168C4()
{
  unint64_t result = qword_10047D670;
  if (!qword_10047D670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D670);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActivityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003169E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityType()
{
  return &type metadata for ActivityType;
}

uint64_t type metadata accessor for ActivityStore()
{
  return self;
}

unint64_t sub_100316A40()
{
  unint64_t result = qword_10047D7E8;
  if (!qword_10047D7E8)
  {
    type metadata accessor for ActivityState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D7E8);
  }
  return result;
}

uint64_t sub_100316A8C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MediaLiveActivityAttributes.ContentState();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100316AD0()
{
  unint64_t result = qword_10047D818;
  if (!qword_10047D818)
  {
    sub_10018F8A4(&qword_10047D810);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10047D818);
  }
  return result;
}

uint64_t sub_100316B2C()
{
  uint64_t v1 = sub_100013A80(&qword_10047D7F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100316C04()
{
  uint64_t v2 = *(void *)(sub_100013A80(&qword_10047D7F0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100013F84;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of Activity.update(_:)
                                       + async function pointer to dispatch thunk of Activity.update(_:));
  uint64_t v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_100013F84;
  return v7(v3);
}

unint64_t sub_100316D3C()
{
  unint64_t result = qword_10047D830;
  if (!qword_10047D830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D830);
  }
  return result;
}

unint64_t sub_100316D90(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  LOBYTE(a2) = sub_100316DF0(a2, v5, v4);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_100316DF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      while (1)
      {
        uint64_t v8 = v7 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v9 = v7 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          swift_retain();
          uint64_t v9 = v7 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        if (Activity.id.getter() == a2 && v10 == a3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          char v11 = 1;
          goto LABEL_19;
        }
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_release();
        swift_bridgeObjectRelease();
        if ((v11 & 1) == 0)
        {
          ++v7;
          if (v9 != v6) {
            continue;
          }
        }
        goto LABEL_19;
      }
    }
  }
  char v11 = 0;
LABEL_19:
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_100316F64()
{
  unint64_t result = qword_10047D860;
  if (!qword_10047D860)
  {
    sub_10018F8A4(&qword_10047D848);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D860);
  }
  return result;
}

uint64_t sub_100316FB4()
{
  return sub_1003170D0(48);
}

uint64_t sub_100316FBC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  double v3 = *(double *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100013F84;
  return sub_10031361C(v3, (uint64_t)v4, v5, v6, v2);
}

uint64_t sub_100317060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013A80(&qword_10047D888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003170C8()
{
  return sub_1003170D0(40);
}

uint64_t sub_1003170D0(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10031711C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  double v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *double v3 = v1;
  v3[1] = sub_10000D170;
  v3[3] = v2;
  return _swift_task_switch(sub_100311658, 0, 0);
}

unint64_t sub_1003171CC()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_10031720C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10031B4B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100317234(uint64_t a1)
{
  unint64_t v2 = sub_10031B5C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100317270(uint64_t a1)
{
  unint64_t v2 = sub_10031B5C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003172E8()
{
  return sub_100013F30();
}

uint64_t sub_100317330(uint64_t a1)
{
  return sub_100319BC0(a1, &OBJC_IVAR___MRIRRouteRecommendationContext_candidateResults);
}

uint64_t (*sub_10031733C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1003173A4()
{
  return sub_1003198A0(&OBJC_IVAR___MRIRRouteRecommendationContext_contextIdentifier);
}

uint64_t sub_1003173BC(uint64_t a1, uint64_t a2)
{
  return sub_10031990C(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationContext_contextIdentifier);
}

uint64_t (*sub_1003173C8())()
{
  return j_j__swift_endAccess;
}

id sub_100317424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR___MRIRRouteRecommendationContext_candidateResults] = a1;
  uint64_t v8 = &v7[OBJC_IVAR___MRIRRouteRecommendationContext_contextIdentifier];
  *(void *)uint64_t v8 = a2;
  *((void *)v8 + 1) = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, "init");
}

void *sub_100317558(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_10031759C(a1);
}

void *sub_10031759C(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100013A80(&qword_10047D8C0);
  uint64_t v26 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v27 = a1;
  char v11 = sub_1001BDB5C(a1, v10);
  sub_10031B5C4();
  uint64_t v12 = v2;
  uint64_t v13 = v28;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v13)
  {
    sub_10018FD5C((uint64_t)v27);

    type metadata accessor for RouteRecommendationContext();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v14 = v26;
    sub_100013A80(&qword_10047D8D0);
    char v32 = 0;
    sub_10031B63C(&qword_10047D8D8, &qword_10047D8E0);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(void *)&v12[OBJC_IVAR___MRIRRouteRecommendationContext_candidateResults] = v30;
    LOBYTE(v30) = 1;
    uint64_t v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    if (!v17)
    {
      uint64_t v30 = 760500813;
      unint64_t v31 = 0xE400000000000000;
      char v18 = v6;
      UUID.init()();
      uint64_t v19 = UUID.uuidString.getter();
      unint64_t v21 = v20;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v4);
      v22._uint64_t countAndFlagsBits = v19;
      v22._object = v21;
      String.append(_:)(v22);
      swift_bridgeObjectRelease();
      uint64_t v16 = v30;
      unint64_t v17 = v31;
    }
    uint64_t v23 = (uint64_t *)&v12[OBJC_IVAR___MRIRRouteRecommendationContext_contextIdentifier];
    *uint64_t v23 = v16;
    v23[1] = v17;

    uint64_t v24 = (objc_class *)type metadata accessor for RouteRecommendationContext();
    v29.receiver = v12;
    v29.super_class = v24;
    char v11 = objc_msgSendSuper2(&v29, "init");
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
    sub_10018FD5C((uint64_t)v27);
  }
  return v11;
}

uint64_t sub_100317960(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_100013A80(&qword_10047D8F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001BDB5C(a1, a1[3]);
  sub_10031B5C4();
  uint64_t v9 = dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x60))(v9);
  v12[7] = 0;
  sub_100013A80(&qword_10047D8D0);
  sub_10031B63C(&qword_10047D8F8, &qword_10047D900);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  uint64_t v10 = swift_bridgeObjectRelease();
  if (v2) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
  (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0x78))(v10);
  v12[6] = 1;
  KeyedEncodingContainer.encode(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

id sub_100317BE0()
{
  return sub_10031B384(type metadata accessor for RouteRecommendationContext);
}

uint64_t sub_100317C48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 152))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_100317C84()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xA0))();
}

unint64_t sub_100317CD8(char a1)
{
  unint64_t result = 0x6966697373616C63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0x74616469646E6163;
      break;
    case 3:
      unint64_t result = 0x48676E6974726F73;
      break;
    case 4:
      unint64_t result = 0x6F546C6C61437369;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100317DE4()
{
  return sub_100317CD8(*v0);
}

uint64_t sub_100317DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10031B6D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_100317E14(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100317E20(uint64_t a1)
{
  unint64_t v2 = sub_10031BAE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100317E5C(uint64_t a1)
{
  unint64_t v2 = sub_10031BAE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100317EE0()
{
  uint64_t v1 = v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_100317F74(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_100317FC0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100318028()
{
  return sub_1003198A0(&OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classificationDescription);
}

uint64_t sub_100318040(uint64_t a1, uint64_t a2)
{
  return sub_10031990C(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classificationDescription);
}

uint64_t (*sub_10031804C())()
{
  return j_j__swift_endAccess;
}

id sub_1003180F4()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate);
  swift_beginAccess();
  unint64_t v2 = *v1;

  return v2;
}

void sub_1003181AC(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_100318200())()
{
  return j_j__swift_endAccess;
}

void *sub_1003182A8()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint);
  swift_beginAccess();
  unint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_100318358(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_1003183AC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100318450()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1003184E4(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_100318530())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1003185D4()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_100318668(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_1003186B4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100318758()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1003187EC(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_100318838())()
{
  return j_j__swift_endAccess;
}

id sub_100318894(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6, char a7, char a8)
{
  swift_bridgeObjectRelease();
  unint64_t v15 = (char *)objc_allocWithZone(v8);
  uint64_t v16 = &v15[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classificationDescription];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  unint64_t v17 = (void **)&v15[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint];
  *(void *)&v15[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint] = 0;
  *(void *)&v15[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification] = a1;
  *(void *)&v15[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate] = a4;
  swift_beginAccess();
  char v18 = *v17;
  *unint64_t v17 = a5;
  uint64_t v19 = v15;
  id v20 = a4;
  id v21 = a5;

  v19[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction] = a6;
  v19[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl] = a7;
  v19[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered] = a8;

  v24.receiver = v19;
  v24.super_class = v8;
  id v22 = objc_msgSendSuper2(&v24, "init");

  return v22;
}

id sub_100318A80(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_100318AC4(a1);
}

id sub_100318AC4(void *a1)
{
  uint64_t v4 = sub_100013A80(&qword_10047D940);
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = &v1[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classificationDescription];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v30 = a1;
  unint64_t v31 = (uint64_t *)v7;
  char v32 = (void **)&v1[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint];
  *(void *)&v1[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint] = 0;
  sub_1001BDB5C(a1, a1[3]);
  sub_10031BAE8();
  uint64_t v8 = v1;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    id v10 = v8;
    char v11 = v32;
    sub_10018FD5C((uint64_t)v30);
    swift_bridgeObjectRelease();
    uint64_t v12 = *v11;

    type metadata accessor for RouteRecommendationCandidateResult();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v29;
    char v36 = 0;
    uint64_t v14 = v8;
    *(void *)&v8[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification] = KeyedDecodingContainer.decode(_:forKey:)();
    char v36 = 1;
    uint64_t v15 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v17 = v16;
    char v18 = v31;
    swift_beginAccess();
    *char v18 = v15;
    v18[1] = v17;
    swift_bridgeObjectRelease();
    type metadata accessor for RouteRecommendationCandidate();
    char v35 = 2;
    sub_10031C7E0(&qword_10047D950, (void (*)(void))type metadata accessor for RouteRecommendationCandidate);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v19 = v32;
    *(void *)&v14[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate] = v34;
    LOBYTE(v34) = 3;
    uint64_t v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    id v21 = v6;
    uint64_t v22 = v9;
    uint64_t v23 = v21;
    if (v24) {
      id v25 = 0;
    }
    else {
      id v25 = [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)&v20];
    }
    swift_beginAccess();
    uint64_t v26 = *v19;
    *uint64_t v19 = v25;

    char v35 = 4;
    v14[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)() & 1;
    char v35 = 5;
    v14[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)() & 1;
    char v35 = 6;
    v14[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)() & 1;

    uint64_t v27 = (objc_class *)type metadata accessor for RouteRecommendationCandidateResult();
    v33.receiver = v14;
    v33.super_class = v27;
    id v10 = objc_msgSendSuper2(&v33, "init");
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v4);
    sub_10018FD5C((uint64_t)v30);
  }
  return v10;
}

id sub_100318F98(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(void))
{
  id v8 = a1;
  sub_100319028(a3, a4, a5);

  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t sub_100319028(uint64_t (*a1)(void), unint64_t *a2, void (*a3)(void))
{
  uint64_t v7 = v3;
  uint64_t v8 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v8 - 8);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  uint64_t v26 = (uint64_t)v3;
  NSString v9 = (objc_class *)a1();
  sub_10031C7E0(a2, a3);
  uint64_t v10 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v12 = v11;
  static String.Encoding.utf8.getter();
  uint64_t v13 = String.init(data:encoding:)();
  if (v14)
  {
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    sub_10018FE9C(v10, v12);
  }
  else
  {
    sub_10018FE9C(v10, v12);
    uint64_t v16 = (void *)0xEC00000061746164;
    uint64_t v15 = 0x2064696C61766E69;
  }
  uint64_t v26 = 60;
  unint64_t v27 = 0xE100000000000000;
  v25.receiver = v7;
  v25.super_class = v9;
  id v17 = objc_msgSendSuper2(&v25, "description");
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  v21._uint64_t countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 2622;
  v22._object = (void *)0xE200000000000000;
  String.append(_:)(v22);
  v23._uint64_t countAndFlagsBits = v15;
  v23._object = v16;
  String.append(_:)(v23);
  swift_release();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_100319230(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_100013A80(&qword_10047D958);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BDB5C(a1, a1[3]);
  sub_10031BAE8();
  uint64_t v9 = dispatch thunk of Encoder.container<A>(keyedBy:)();
  (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0x88))(v9);
  char v26 = 0;
  uint64_t v10 = KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0xA0))(v10);
    char v25 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v12 = swift_bridgeObjectRelease();
    uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xB8))(v12);
    v19[1] = v13;
    char v24 = 2;
    type metadata accessor for RouteRecommendationCandidate();
    sub_10031C7E0(&qword_10047D960, (void (*)(void))type metadata accessor for RouteRecommendationCandidate);
    KeyedEncodingContainer.encode<A>(_:forKey:)();

    uint64_t v14 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xD0))();
    uint64_t v15 = v14;
    if (v14)
    {
      [v14 doubleValue];
    }
    char v23 = 3;
    uint64_t v16 = KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0xE8))(v16);
    char v22 = 4;
    uint64_t v17 = KeyedEncodingContainer.encode(_:forKey:)();
    (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0x100))(v17);
    char v21 = 5;
    uint64_t v18 = KeyedEncodingContainer.encode(_:forKey:)();
    (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0x118))(v18);
    char v20 = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_10031969C()
{
  return sub_10031B384(type metadata accessor for RouteRecommendationCandidateResult);
}

uint64_t sub_100319714@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 312))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_100319750()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x140))();
}

uint64_t sub_1003197AC()
{
  if (*v0) {
    return 0x7365646F6ELL;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_1003197E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10031BB60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100319810(uint64_t a1)
{
  unint64_t v2 = sub_10031BC48();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10031984C(uint64_t a1)
{
  unint64_t v2 = sub_10031BC48();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100319894()
{
  return sub_1003198A0(&OBJC_IVAR___MRIRRouteRecommendationCandidate_candidateIdentifier);
}

uint64_t sub_1003198A0(void *a1)
{
  unint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_100319900(uint64_t a1, uint64_t a2)
{
  return sub_10031990C(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationCandidate_candidateIdentifier);
}

uint64_t sub_10031990C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess();
  void *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_100319968())()
{
  return j_j__swift_endAccess;
}

Class sub_100319A00(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), unint64_t *a5, void (*a6)(void))
{
  uint64_t v9 = swift_beginAccess();
  a4(v9);
  sub_10031C7E0(a5, a6);
  swift_bridgeObjectRetain();
  v10.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v10.super.isa;
}

uint64_t sub_100319ABC()
{
  return sub_100013F30();
}

uint64_t sub_100319B04(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(void), void *a7)
{
  a4();
  sub_10031C7E0(a5, a6);
  uint64_t v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = (uint64_t *)(a1 + *a7);
  swift_beginAccess();
  *uint64_t v12 = v11;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100319BB4(uint64_t a1)
{
  return sub_100319BC0(a1, &OBJC_IVAR___MRIRRouteRecommendationCandidate_nodes);
}

uint64_t sub_100319BC0(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  *uint64_t v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_100319C10())()
{
  return j_j__swift_endAccess;
}

id sub_100319C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR___MRIRRouteRecommendationCandidate_candidateIdentifier];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR___MRIRRouteRecommendationCandidate_nodes] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, "init");
}

id sub_100319CDC(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_100319D20(a1);
}

id sub_100319D20(void *a1)
{
  uint64_t v4 = sub_100013A80(&qword_10047D978);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001BDB5C(a1, a1[3]);
  sub_10031BC48();
  uint64_t v8 = v1;
  id v9 = v7;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    sub_10018FD5C((uint64_t)a1);

    type metadata accessor for RouteRecommendationCandidate();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v18;
    uint64_t v10 = v19;
    LOBYTE(v22) = 0;
    uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v14 = (uint64_t *)&v8[OBJC_IVAR___MRIRRouteRecommendationCandidate_candidateIdentifier];
    uint64_t *v14 = v12;
    v14[1] = v15;
    sub_100013A80(&qword_10047D988);
    char v21 = 1;
    sub_10031BCC0(&qword_10047D990, &qword_10047D998);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(void *)&v8[OBJC_IVAR___MRIRRouteRecommendationCandidate_nodes] = v22;

    uint64_t v16 = (objc_class *)type metadata accessor for RouteRecommendationCandidate();
    v20.receiver = v8;
    v20.super_class = v16;
    id v9 = objc_msgSendSuper2(&v20, "init");
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
    sub_10018FD5C((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_100319FB8(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_100013A80(&qword_10047D9A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001BDB5C(a1, a1[3]);
  sub_10031BC48();
  uint64_t v9 = dispatch thunk of Encoder.container<A>(keyedBy:)();
  (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0x60))(v9);
  char v14 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = swift_bridgeObjectRelease();
    uint64_t v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x78))(v11);
    v12[15] = 1;
    sub_100013A80(&qword_10047D988);
    sub_10031BCC0(&qword_10047D9A8, &qword_10047D9B0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

id sub_10031A240()
{
  return sub_10031B384(type metadata accessor for RouteRecommendationCandidate);
}

uint64_t sub_10031A2A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 152))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_10031A2E4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xA0))();
}

unint64_t sub_10031A338()
{
  unint64_t result = 0xD000000000000018;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x746E656449736469;
      break;
    case 3:
      unint64_t result = 0x6C61636F4C7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10031A3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10031BD54(a1, a2);
  *a3 = result;
  return result;
}

void sub_10031A408(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_10031A414(uint64_t a1)
{
  unint64_t v2 = sub_10031BF2C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10031A450(uint64_t a1)
{
  unint64_t v2 = sub_10031BF2C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10031A498()
{
  return sub_1003198A0(&OBJC_IVAR___MRIRRouteRecommendationNode_avOutputDeviceIdentifier);
}

uint64_t sub_10031A4B0(uint64_t a1, uint64_t a2)
{
  return sub_10031990C(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationNode_avOutputDeviceIdentifier);
}

uint64_t (*sub_10031A4BC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10031A524()
{
  return sub_1003198A0(&OBJC_IVAR___MRIRRouteRecommendationNode_rapportIdentifier);
}

uint64_t sub_10031A53C(uint64_t a1, uint64_t a2)
{
  return sub_10031990C(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationNode_rapportIdentifier);
}

uint64_t (*sub_10031A548())()
{
  return j_j__swift_endAccess;
}

id sub_10031A5B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a1 + *a3;
  swift_beginAccess();
  if (*(void *)(v3 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v4 = 0;
  }

  return v4;
}

uint64_t sub_10031A638()
{
  return sub_1003198A0(&OBJC_IVAR___MRIRRouteRecommendationNode_idsIdentifier);
}

uint64_t sub_10031A650(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *uint64_t v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10031A6CC(uint64_t a1, uint64_t a2)
{
  return sub_10031990C(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationNode_idsIdentifier);
}

uint64_t (*sub_10031A6D8())()
{
  return j__swift_endAccess;
}

uint64_t sub_10031A77C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRIRRouteRecommendationNode_isLocal);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_10031A810(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___MRIRRouteRecommendationNode_isLocal);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_10031A85C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10031A960()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x70))();
}

uint64_t sub_10031AA4C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x78))();
}

uint64_t (*sub_10031AA80(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x70))();
  a1[1] = v3;
  return sub_10031AAF8;
}

uint64_t sub_10031AAF8(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = *a1;
  NSString v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *(void *)a1[2]) + 0x78);
  if ((a2 & 1) == 0) {
    return v4(*a1, v2);
  }
  swift_bridgeObjectRetain();
  v4(v3, v2);

  return swift_bridgeObjectRelease();
}

id sub_10031ABB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v12 = (char *)objc_allocWithZone(v7);
  uint64_t v13 = &v12[OBJC_IVAR___MRIRRouteRecommendationNode_avOutputDeviceIdentifier];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  char v14 = &v12[OBJC_IVAR___MRIRRouteRecommendationNode_rapportIdentifier];
  *(void *)char v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v15 = &v12[OBJC_IVAR___MRIRRouteRecommendationNode_idsIdentifier];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  swift_beginAccess();
  *(void *)uint64_t v13 = a1;
  *((void *)v13 + 1) = a2;
  uint64_t v16 = v12;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)char v14 = a3;
  *((void *)v14 + 1) = a4;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)uint64_t v15 = a5;
  *((void *)v15 + 1) = a6;
  swift_bridgeObjectRelease();
  v16[OBJC_IVAR___MRIRRouteRecommendationNode_isLocal] = a7;

  v21.receiver = v16;
  v21.super_class = v7;
  return objc_msgSendSuper2(&v21, "init");
}

id sub_10031ACE4(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_10031AD28(a1);
}

id sub_10031AD28(void *a1)
{
  uint64_t v4 = sub_100013A80(&qword_10047D9D8);
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)&v1[OBJC_IVAR___MRIRRouteRecommendationNode_avOutputDeviceIdentifier];
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = &v1[OBJC_IVAR___MRIRRouteRecommendationNode_rapportIdentifier];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  char v36 = (uint64_t *)v8;
  uint64_t v9 = &v1[OBJC_IVAR___MRIRRouteRecommendationNode_idsIdentifier];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  char v35 = (uint64_t *)v9;
  id v10 = (id)a1[3];
  objc_super v33 = a1;
  sub_1001BDB5C(a1, (uint64_t)v10);
  sub_10031BF2C();
  uint64_t v34 = v1;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v17 = v34;
    sub_10018FD5C((uint64_t)v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    type metadata accessor for RouteRecommendationNode();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v31;
    uint64_t v12 = v32;
    char v40 = 0;
    uint64_t v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v15 = v14;
    swift_beginAccess();
    *uint64_t v7 = v13;
    v7[1] = v15;
    swift_bridgeObjectRelease();
    char v39 = 1;
    uint64_t v16 = v6;
    uint64_t v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v21 = v20;
    uint64_t v22 = v36;
    swift_beginAccess();
    uint64_t *v22 = v19;
    v22[1] = v21;
    swift_bridgeObjectRelease();
    char v38 = 2;
    uint64_t v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v25 = v24;
    char v26 = v35;
    swift_beginAccess();
    *char v26 = v23;
    v26[1] = v25;
    swift_bridgeObjectRelease();
    char v41 = 3;
    char v27 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v28 = v34;
    v34[OBJC_IVAR___MRIRRouteRecommendationNode_isLocal] = v27 & 1;

    uint64_t v29 = (objc_class *)type metadata accessor for RouteRecommendationNode();
    v37.receiver = v28;
    v37.super_class = v29;
    id v10 = objc_msgSendSuper2(&v37, "init");
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v12);
    sub_10018FD5C((uint64_t)v33);
  }
  return v10;
}

uint64_t sub_10031B088(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_100013A80(&qword_10047D9E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001BDB5C(a1, a1[3]);
  sub_10031BF2C();
  uint64_t v9 = dispatch thunk of Encoder.container<A>(keyedBy:)();
  (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0x70))(v9);
  v14[15] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0x88))(v10);
    v14[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v11 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0xA0))(v11);
    v14[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v12 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0xB8))(v12);
    v14[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

id sub_10031B36C()
{
  return sub_10031B384(type metadata accessor for RouteRecommendationNode);
}

id sub_10031B384(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_10031B424@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 240))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_10031B460()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xF8))();
}

uint64_t sub_10031B4B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001003BB8D0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001003B9730)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t type metadata accessor for RouteRecommendationContext()
{
  return self;
}

unint64_t sub_10031B5C4()
{
  unint64_t result = qword_10047D8C8;
  if (!qword_10047D8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D8C8);
  }
  return result;
}

uint64_t type metadata accessor for RouteRecommendationCandidateResult()
{
  return self;
}

uint64_t sub_10031B63C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018F8A4(&qword_10047D8D0);
    sub_10031C7E0(a2, (void (*)(void))type metadata accessor for RouteRecommendationCandidateResult);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10031B6D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6966697373616C63 && a2 == 0xEE006E6F69746163;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001003B9750 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74616469646E6163 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x48676E6974726F73 && a2 == 0xEB00000000746E69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F546C6C61437369 && a2 == 0xEE006E6F69746341 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001003BB940 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001003BB920)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

id sub_10031B9E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6, char a7, char a8)
{
  swift_bridgeObjectRelease();
  uint64_t v15 = &v8[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classificationDescription];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v16 = (void **)&v8[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint];
  *(void *)&v8[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint] = 0;
  *(void *)&v8[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification] = a1;
  *(void *)&v8[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate] = a4;
  swift_beginAccess();
  uint64_t v17 = *v16;
  *uint64_t v16 = a5;
  uint64_t v18 = v8;
  id v19 = a4;
  id v20 = a5;

  v18[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction] = a6;
  v18[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl] = a7;
  v18[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered] = a8;

  v22.receiver = v18;
  v22.super_class = (Class)type metadata accessor for RouteRecommendationCandidateResult();
  return objc_msgSendSuper2(&v22, "init");
}

unint64_t sub_10031BAE8()
{
  unint64_t result = qword_10047D948;
  if (!qword_10047D948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D948);
  }
  return result;
}

uint64_t type metadata accessor for RouteRecommendationCandidate()
{
  return self;
}

uint64_t sub_10031BB60(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001003BB990
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365646F6ELL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_10031BC48()
{
  unint64_t result = qword_10047D980;
  if (!qword_10047D980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D980);
  }
  return result;
}

uint64_t type metadata accessor for RouteRecommendationNode()
{
  return self;
}

uint64_t sub_10031BCC0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018F8A4(&qword_10047D988);
    sub_10031C7E0(a2, (void (*)(void))type metadata accessor for RouteRecommendationNode);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10031BD54(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001003BBA00
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001003BB9E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E656449736469 && a2 == 0xED00007265696669 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61636F4C7369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_10031BF2C()
{
  unint64_t result = qword_10047D9E0;
  if (!qword_10047D9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D9E0);
  }
  return result;
}

unint64_t sub_10031BF84()
{
  unint64_t result = qword_10047D9F0;
  if (!qword_10047D9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D9F0);
  }
  return result;
}

unint64_t sub_10031BFDC()
{
  unint64_t result = qword_10047D9F8;
  if (!qword_10047D9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047D9F8);
  }
  return result;
}

unint64_t sub_10031C034()
{
  unint64_t result = qword_10047DA00;
  if (!qword_10047DA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DA00);
  }
  return result;
}

unint64_t sub_10031C08C()
{
  unint64_t result = qword_10047DA08;
  if (!qword_10047DA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DA08);
  }
  return result;
}

unint64_t sub_10031C0E4()
{
  unint64_t result = qword_10047DA10;
  if (!qword_10047DA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DA10);
  }
  return result;
}

unint64_t sub_10031C13C()
{
  unint64_t result = qword_10047DA18;
  if (!qword_10047DA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DA18);
  }
  return result;
}

unint64_t sub_10031C194()
{
  unint64_t result = qword_10047DA20;
  if (!qword_10047DA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DA20);
  }
  return result;
}

unint64_t sub_10031C1EC()
{
  unint64_t result = qword_10047DA28;
  if (!qword_10047DA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DA28);
  }
  return result;
}

unint64_t sub_10031C244()
{
  unint64_t result = qword_10047DA30;
  if (!qword_10047DA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DA30);
  }
  return result;
}

unint64_t sub_10031C29C()
{
  unint64_t result = qword_10047DA38;
  if (!qword_10047DA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DA38);
  }
  return result;
}

unint64_t sub_10031C2F4()
{
  unint64_t result = qword_10047DA40;
  if (!qword_10047DA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DA40);
  }
  return result;
}

unint64_t sub_10031C34C()
{
  unint64_t result = qword_10047DA48;
  if (!qword_10047DA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DA48);
  }
  return result;
}

ValueMetadata *type metadata accessor for RouteRecommendationContext.CodingKeys()
{
  return &type metadata for RouteRecommendationContext.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RouteRecommendationCandidateResult.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RouteRecommendationCandidateResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10031C510);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RouteRecommendationCandidateResult.CodingKeys()
{
  return &type metadata for RouteRecommendationCandidateResult.CodingKeys;
}

unsigned char *_s12mediaremoted26RouteRecommendationContextC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10031C614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RouteRecommendationCandidate.CodingKeys()
{
  return &type metadata for RouteRecommendationCandidate.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RouteRecommendationNode.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RouteRecommendationNode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10031C7A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RouteRecommendationNode.CodingKeys()
{
  return &type metadata for RouteRecommendationNode.CodingKeys;
}

uint64_t sub_10031C7E0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10031C828@<X0>(uint64_t a1@<X8>)
{
  if ([v1 isAirPlayActive])
  {
    id v3 = [v1 leaderDeviceInfo];
    if (!v3)
    {
      uint64_t v4 = type metadata accessor for RoutingSession.HostInfo();
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
      uint64_t v6 = v4;
      uint64_t v7 = a1;
      uint64_t v8 = 1;
      goto LABEL_10;
    }
  }
  else
  {
    id v3 = v1;
  }
  id v9 = v3;
  id v10 = [objc_allocWithZone((Class)MRDeviceInfoOutputDevice) initWithDeviceInfo:v9];
  id v11 = [v9 name];
  if (v11)
  {
    uint64_t v12 = v11;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for Symbols();
  id v13 = v10;
  uint64_t v14 = sub_100269208();
  uint64_t v16 = v15;
  unsigned int v18 = v17;

  sub_10030077C(v14, v16, v18);
  sub_1001B9958(v14, v16, v18);
  id v19 = [v9 localizedModelName];
  if (v19)
  {
    id v20 = v19;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  RoutingSession.HostInfo.init(name:symbolName:productName:)();

  uint64_t v21 = type metadata accessor for RoutingSession.HostInfo();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v6 = v21;
  uint64_t v7 = a1;
  uint64_t v8 = 0;
LABEL_10:

  return v5(v7, v8, 1, v6);
}

BOOL sub_10031CA3C()
{
  id v1 = [v0 deviceUID];
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

id sub_10031CA84()
{
  id v0 = [self server];
  id v1 = [v0 deviceInfo];

  return v1;
}

uint64_t sub_10031CAE4()
{
  id v0 = [self server];
  id v1 = [v0 deviceInfo];

  id v2 = [v1 deviceUID];
  if (v2)
  {
    id v3 = v2;

    return 0x72656B61657053;
  }
  uint64_t result = MSVCopyLocalizedModelName();
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_10031CBB4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10019001C(v0, qword_100485DC8);
  sub_10018A9A8(v0, (uint64_t)qword_100485DC8);
  id v1 = (id)*sub_1001A6778();
  return Logger.init(_:)();
}

uint64_t type metadata accessor for GroupSessionUIManagerImplementation()
{
  return self;
}

uint64_t type metadata accessor for GroupSessionUIManager()
{
  return self;
}

id sub_10031CCD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupSessionUIManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_10031CD08()
{
  unint64_t result = qword_10047DB10;
  if (!qword_10047DB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10047DB10);
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupSessionUIInteraction()
{
  return &type metadata for GroupSessionUIInteraction;
}

id sub_10031CD6C()
{
  uint64_t v1 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation____lazy_storage___uiController;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation____lazy_storage___uiController))
  {
    id v2 = *(id *)(v0
               + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation____lazy_storage___uiController);
  }
  else
  {
    id v2 = [self groupSessionUIControllerWithDelegate:v0];
    *(void *)(v0 + v1) = v2;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v2;
}

char *sub_10031CDF0()
{
  v35[1] = swift_getObjectType();
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation____lazy_storage___uiController] = 0;
  uint64_t v7 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_bannerCenter;
  id v8 = objc_allocWithZone((Class)MRDBannerCenter);
  id v9 = v0;
  *(void *)&v0[v7] = [v8 init];
  uint64_t v10 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue;
  sub_10018FE08(0, (unint64_t *)&qword_100479FC0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v3);
  static DispatchQoS.unspecified.getter();
  objc_super v37 = _swiftEmptyArrayStorage;
  sub_100015C00((unint64_t *)&qword_10047A1F8, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100013A80(&qword_10047A200);
  sub_100015600((unint64_t *)&qword_10047A208, &qword_10047A200);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&v9[v10] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  id v11 = &v9[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext];
  *(_OWORD *)id v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v9[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_shouldPresentBannerWhenAppropriate] = 1;
  v9[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v9[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_participants] = 0;
  *(void *)&v9[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications] = _swiftEmptyArrayStorage;
  id v12 = objc_allocWithZone((Class)UNUserNotificationCenter);
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 initWithBundleIdentifier:v13];

  *(void *)&v9[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_notificationCenter] = v14;
  id v15 = v14;
  [v15 setWantsNotificationResponsesDelivered];

  uint64_t v16 = (objc_class *)type metadata accessor for GroupSessionUIManagerImplementation();
  v36.receiver = v9;
  v36.super_class = v16;
  unsigned int v17 = (char *)objc_msgSendSuper2(&v36, "init");
  unsigned int v18 = *(void **)&v17[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_notificationCenter];
  id v19 = v17;
  [v18 setDelegate:v19];
  [*(id *)&v19[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_bannerCenter] setDelegate:v19];
  [v18 removeAllPendingNotificationRequests];
  [v18 removeAllDeliveredNotifications];
  id v20 = self;
  id v21 = [v20 defaultCenter];
  objc_super v22 = self;
  uint64_t v23 = v19;
  id v24 = [v22 sharedMonitor];
  [v21 addObserver:v23 selector:"handleDisplayMonitorChangeNotification:" name:@"MRDisplayMonitorLayoutDidChangeNotification" object:v24];

  id v25 = [v20 defaultCenter];
  char v26 = v23;
  id v27 = [v22 sharedMonitor];
  [v25 addObserver:v26 selector:"handleDisplayMonitorChangeNotification:" name:@"MRDisplayMonitorDisplayDidChangeNotification" object:v27];

  if (qword_100485DC0 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10018A9A8(v28, (uint64_t)qword_100485DC8);
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    objc_super v37 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136315138;
    uint64_t v32 = _typeName(_:qualified:)();
    v35[2] = sub_10018A9E0(v32, v33, (uint64_t *)&v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "[%s] Initialized", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v26;
}

id sub_10031D450()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  if (qword_100485DC0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10018A9A8(v2, (uint64_t)qword_100485DC8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = _typeName(_:qualified:)();
    sub_10018A9E0(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%s] Deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v8 = (objc_class *)type metadata accessor for GroupSessionUIManagerImplementation();
  v11.receiver = v1;
  v11.super_class = v8;
  return objc_msgSendSuper2(&v11, "dealloc");
}

id sub_10031D6D0(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong removeObserver:v1];
    os_log_type_t v4 = *(void **)(v1
                  + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_notificationCenter);
    [v4 removeAllPendingNotificationRequests];
    [v4 removeAllDeliveredNotifications];
    swift_unknownObjectRelease();
  }
  swift_unknownObjectWeakAssign();
  id v5 = [a1 participants];
  sub_100013A80(&qword_10047A1C0);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)(v1
            + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_participants) = v6;
  swift_bridgeObjectRelease();

  return [a1 addObserver:v1];
}

uint64_t sub_10031D848(void *a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v4 = v3;
  uint64_t v23 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  objc_super v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  id v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *(void **)&v4[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = v4;
  void v16[4] = v23;
  v16[5] = a3;
  v16[6] = ObjectType;
  aBlock[4] = sub_100325CBC;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100429ED0;
  unsigned int v17 = _Block_copy(aBlock);
  id v18 = v15;
  id v19 = a1;
  id v20 = v4;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v25 = _swiftEmptyArrayStorage;
  sub_100015C00((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_100015600((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
  return swift_release();
}

uint64_t sub_10031DB64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18[0] - 8);
  __chkstk_darwin(v18[0]);
  objc_super v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v2;
  void v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_100325930;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100429DE0;
  id v14 = _Block_copy(aBlock);
  id v15 = v12;
  uint64_t v16 = v2;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_100015C00((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_100015600((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void))(v9 + 8))(v11, v18[0]);
  return swift_release();
}

void sub_10031DE94(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t v73 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(v8 - 1);
  __chkstk_darwin(v8);
  objc_super v11 = (uint64_t *)((char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v5
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  *objc_super v11 = v12;
  (*(void (**)(void *, void, void *))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
LABEL_19:
    uint64_t v43 = type metadata accessor for Logger();
    sub_10018A9A8(v43, (uint64_t)qword_100485DC8);
    swift_bridgeObjectRetain_n();
    unint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    BOOL v46 = os_log_type_enabled(v44, v45);
    uint64_t v69 = ObjectType;
    id v70 = v8;
    if (v46)
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v68 = v4;
      uint64_t v48 = v47;
      uint64_t v67 = swift_slowAlloc();
      uint64_t v75 = v67;
      *(_DWORD *)uint64_t v48 = 136315394;
      uint64_t v49 = _typeName(_:qualified:)();
      uint64_t v74 = sub_10018A9E0(v49, v50, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_10018A9E0(v73, a2, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "[%s] Dismissing for session: %{public}s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    long long v51 = self;
    id v52 = [v51 currentSettings];
    if (v52)
    {
      uint64_t v53 = v52;
      unsigned int v54 = [v52 groupSessionNearbyBanner];

      if (v54
        && v71
        && *(unsigned char *)(v5
                    + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners) == 1)
      {
        uint64_t v55 = v72;
        sub_10032281C(v55);
      }
      id v56 = [v51 currentSettings];
      if (v56)
      {
        uint64_t v57 = v56;
        unsigned int v58 = [v56 groupSessionNearbyLockscreen];

        if (v58)
        {
          uint64_t v59 = Logger.logObject.getter();
          os_log_type_t v60 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v59, v60))
          {
            uint64_t v61 = (uint8_t *)swift_slowAlloc();
            uint64_t v75 = swift_slowAlloc();
            *(_DWORD *)uint64_t v61 = 136315138;
            uint64_t v62 = _typeName(_:qualified:)();
            uint64_t v74 = sub_10018A9E0(v62, v63, &v75);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v59, v60, "[%s] Releasing GroupSessionNearby assertion", v61, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          [sub_10031CD6C() releaseGroupSessionNearbyAssertion];
          swift_unknownObjectRelease();
        }
        uint64_t v64 = *(void **)v3;
        uint64_t v65 = *(void **)(v3 + 8);
        *(_OWORD *)uint64_t v3 = 0u;
        *(_OWORD *)(v3 + 16) = 0u;
        sub_100325888(v64, v65);
        swift_release();

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  uint64_t v3 = v5
     + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext;
  id v14 = *(void **)(v5
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext);
  if (!v14)
  {
    if (qword_100485DC0 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_10018A9A8(v38, (uint64_t)qword_100485DC8);
    objc_super v37 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v37, v39))
    {
      char v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(_DWORD *)char v40 = 136315138;
      uint64_t v41 = _typeName(_:qualified:)();
      uint64_t v74 = sub_10018A9E0(v41, v42, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v39, "[%s] Attempted to dismiss while no discovered session is presented", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(v3 + 24);
  id v71 = *(id *)(v3 + 8);
  unsigned int v72 = v71;
  swift_retain();
  uint64_t v8 = v14;
  id v15 = [v8 identifier];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  if (v16 == v73 && v18 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    if (qword_100485DC0 == -1) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
  char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_18;
  }
  if (qword_100485DC0 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_10018A9A8(v21, (uint64_t)qword_100485DC8);
  swift_bridgeObjectRetain_n();
  uint64_t v22 = v8;
  uint64_t v23 = v72;
  swift_retain_n();
  uint64_t v24 = v22;
  id v25 = v23;
  char v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  int v28 = v27;
  unsigned int v72 = v26;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v29 = swift_slowAlloc();
    LODWORD(v71) = v28;
    uint64_t v30 = v29;
    id v70 = (id)swift_slowAlloc();
    uint64_t v75 = (uint64_t)v70;
    *(_DWORD *)uint64_t v30 = 136315650;
    uint64_t v31 = _typeName(_:qualified:)();
    uint64_t v74 = sub_10018A9E0(v31, v32, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    id v33 = [v24 identifier];
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v36 = v35;

    uint64_t v74 = sub_10018A9E0(v34, v36, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_10018A9E0(v73, a2, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    objc_super v37 = v72;
    _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v71, "[%s] Attempted to dismiss different discovered session. Current: %{public}s, requested: %{public}s", (uint8_t *)v30, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

LABEL_16:
    return;
  }

  swift_bridgeObjectRelease_n();
  swift_release_n();
}

void sub_10031E824(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = (void *)type metadata accessor for UUID();
  uint64_t v10 = (void *)*(v9 - 1);
  __chkstk_darwin(v9);
  uint64_t v108 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100013A80(&qword_10047C4A8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v114 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v116 = (char *)&v101 - v15;
  if (qword_100485DC0 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_10018A9A8(v16, (uint64_t)qword_100485DC8);
  id v18 = a1;
  uint64_t v107 = v17;
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v115 = ObjectType;
  uint64_t v112 = v4;
  uint64_t v113 = a3;
  id v110 = v9;
  uint64_t v111 = a2;
  uint64_t v109 = v10;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v24 = _typeName(_:qualified:)();
    uint64_t v123 = sub_10018A9E0(v24, v25, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2112;
    uint64_t v123 = (uint64_t)v18;
    id v26 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v23 = v18;

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%s] displayJoinRequest: %@", (uint8_t *)v22, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v27 = [v18 identity];
  id v28 = [v27 displayName];

  uint64_t v29 = v116;
  if (v28)
  {
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v106 = v31;
    uint64_t v107 = v30;
    id v32 = [objc_allocWithZone((Class)UNMutableNotificationContent) init];
    [v32 setTitle:v28];

    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = (id)MRLocalizedString();

    if (v34)
    {
      id v102 = v18;
      [v32 setBody:v34];

      NSString v35 = String._bridgeToObjectiveC()();
      id v105 = self;
      id v36 = [v105 iconForApplicationIdentifier:v35];

      [v32 setIcon:v36];
      uint64_t v104 = "N_REQUEST_NOTIFICATION_BODY_IOS";
      URL.init(string:)();
      uint64_t v37 = type metadata accessor for URL();
      uint64_t v38 = *(void *)(v37 - 8);
      unint64_t v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      if (v103(v29, 1, v37) == 1)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      URL._bridgeToObjectiveC()(v39);
      uint64_t v41 = v40;
      unint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
      v42(v29, v37);
      [v32 setDefaultActionURL:v41];

      NSString v43 = String._bridgeToObjectiveC()();
      [v32 setCategoryIdentifier:v43];

      [v32 setShouldBackgroundDefaultAction:1];
      id v44 = [objc_allocWithZone((Class)UNMutableNotificationContent) init];
      NSString v45 = String._bridgeToObjectiveC()();
      NSString v46 = String._bridgeToObjectiveC()();
      id v47 = (id)MRLocalizedStringWithFormat();

      if (!v47)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100013A80(&qword_10047AE40);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1003C58B0;
      *(void *)(v48 + 56) = &type metadata for String;
      *(void *)(v48 + 64) = sub_100015768();
      uint64_t v49 = v106;
      *(void *)(v48 + 32) = v107;
      *(void *)(v48 + 40) = v49;
      String.init(format:_:)();
      swift_bridgeObjectRelease();
      NSString v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v44 setTitle:v50];

      NSString v51 = String._bridgeToObjectiveC()();
      id v52 = [v105 iconForApplicationIdentifier:v51];

      [v44 setIcon:v52];
      uint64_t v53 = v114;
      URL.init(string:)();
      if (v103(v53, 1, v37) == 1)
      {
LABEL_20:
        __break(1u);
        return;
      }
      URL._bridgeToObjectiveC()(v54);
      id v56 = v55;
      v42(v53, v37);
      [v44 setDefaultActionURL:v56];

      NSString v57 = String._bridgeToObjectiveC()();
      [v44 setCategoryIdentifier:v57];

      [v44 setShouldBackgroundDefaultAction:1];
      unsigned int v58 = v108;
      UUID.init()();
      uint64_t v116 = (char *)UUID.uuidString.getter();
      uint64_t v60 = v59;
      id v61 = v110;
      uint64_t v62 = (void (*)(char *, id))v109[1];
      v62(v58, v110);
      swift_bridgeObjectRetain();
      unint64_t v63 = (char *)v32;
      NSString v64 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v65 = self;
      uint64_t v66 = [v65 requestWithIdentifier:v64 content:v63 trigger:0];

      uint64_t v114 = v63;
      uint64_t v109 = v66;
      [v66 setDestinations:3];
      UUID.init()();
      uint64_t v67 = UUID.uuidString.getter();
      uint64_t v69 = v68;
      v62(v58, v61);
      swift_bridgeObjectRetain();
      id v70 = v44;
      NSString v71 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unsigned int v72 = (char *)[v65 requestWithIdentifier:v71 content:v70 trigger:0];

      id v110 = v70;
      uint64_t v108 = v72;
      [v72 setDestinations:8];
      uint64_t v73 = v112;
      uint64_t v74 = *(void **)&v112[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
      uint64_t v75 = (void *)swift_allocObject();
      uint64_t v76 = v102;
      v75[2] = v73;
      v75[3] = v76;
      v75[4] = v116;
      v75[5] = v60;
      v75[6] = v67;
      v75[7] = v69;
      uint64_t v77 = v113;
      v75[8] = v111;
      v75[9] = v77;
      uint64_t v78 = swift_allocObject();
      *(void *)(v78 + 16) = sub_1003252FC;
      *(void *)(v78 + 24) = v75;
      uint64_t v121 = sub_1001BA8E4;
      uint64_t v122 = v78;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v118 = 1107296256;
      uint64_t v119 = sub_1001F4BF0;
      uint64_t v120 = &unk_100429CF0;
      uint64_t v79 = _Block_copy(&aBlock);
      id v80 = v76;
      unint64_t v81 = v74;
      unint64_t v82 = v73;
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_async_and_wait(v81, v79);

      _Block_release(v79);
      LOBYTE(v79) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v79 & 1) == 0)
      {
        uint64_t v83 = *(void **)&v82[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_notificationCenter];
        uint64_t v84 = swift_allocObject();
        uint64_t v85 = v109;
        uint64_t v86 = v115;
        *(void *)(v84 + 16) = v109;
        *(void *)(v84 + 24) = v86;
        uint64_t v121 = sub_1003253C4;
        uint64_t v122 = v84;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v118 = 1107296256;
        uint64_t v119 = sub_1001872F8;
        uint64_t v120 = &unk_100429D40;
        uint64_t v87 = _Block_copy(&aBlock);
        id v88 = v85;
        swift_release();
        [v83 addNotificationRequest:v88 withCompletionHandler:v87];
        _Block_release(v87);
        uint64_t v89 = swift_allocObject();
        uint64_t v90 = v108;
        *(void *)(v89 + 16) = v108;
        *(void *)(v89 + 24) = v86;
        uint64_t v121 = sub_1003253D0;
        uint64_t v122 = v89;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v118 = 1107296256;
        uint64_t v119 = sub_1001872F8;
        uint64_t v120 = &unk_100429D90;
        uint64_t v91 = _Block_copy(&aBlock);
        id v92 = v90;
        swift_release();
        [v83 addNotificationRequest:v92 withCompletionHandler:v91];
        _Block_release(v91);
        swift_release();

        return;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  id v93 = v18;
  unint64_t v94 = Logger.logObject.getter();
  os_log_type_t v95 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v94, v95))
  {
    uint64_t v96 = swift_slowAlloc();
    uint64_t v97 = (void *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v96 = 136315394;
    uint64_t v98 = _typeName(_:qualified:)();
    uint64_t v123 = sub_10018A9E0(v98, v99, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v96 + 12) = 2112;
    id v100 = [v93 identity];
    uint64_t v123 = (uint64_t)v100;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v97 = v100;

    _os_log_impl((void *)&_mh_execute_header, v94, v95, "[%s] Can't display join request for identity: %@ with no displayName", (uint8_t *)v96, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_10031F5F8(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(id, uint64_t, uint64_t))
{
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  id v13 = a3;
  id v14 = a1;
  a7(v13, a6, v12);

  return swift_release();
}

uint64_t sub_10031F6A0(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v18[0] - 8);
  __chkstk_darwin(v18[0]);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = v1;
  v12[4] = ObjectType;
  aBlock[4] = sub_10032506C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100429C78;
  id v13 = _Block_copy(aBlock);
  id v14 = v11;
  id v15 = a1;
  uint64_t v16 = v1;
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_100015C00((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_100015600((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v18[0]);
  return swift_release();
}

uint64_t sub_10031F9D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100013A80(&qword_10047C4A8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [objc_allocWithZone((Class)MRGroupSessionToken) initWithDiscoveredSession:a1];
  id v16 = [v15 joinURLString];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_10031FE38((uint64_t)v14, a2 & 1, a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

uint64_t sub_10031FE38(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  int v29 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v33 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v36 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  id v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v28 = *(id *)&v4[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v5;
  *(unsigned char *)(v19 + 24) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v16, v15, v12);
  os_log_type_t v20 = (uint64_t *)(v19 + v17);
  uint64_t v22 = v31;
  uint64_t v21 = v32;
  *os_log_type_t v20 = v31;
  v20[1] = v21;
  *(void *)(v19 + v18) = ObjectType;
  aBlock[4] = sub_100324C90;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100429B88;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = v28;
  id v25 = v5;
  sub_1002312B4(v22);
  static DispatchQoS.unspecified.getter();
  uint64_t v37 = _swiftEmptyArrayStorage;
  sub_100015C00((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_100015600((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  uint64_t v26 = v33;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  return swift_release();
}

void sub_100320214(char *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v86 = a2;
  uint64_t v79 = a1;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v69 = v12;
  uint64_t v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v84 = *(void *)(v14 - 8);
  uint64_t v85 = v14;
  __chkstk_darwin(v14);
  unint64_t v82 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for DispatchQoS();
  uint64_t v81 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  id v80 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchTimeInterval();
  uint64_t v74 = *(void *)(v17 - 8);
  uint64_t v75 = (void **)v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for DispatchTime();
  uint64_t v77 = *(void *)(v20 - 8);
  uint64_t v78 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v76 = (char *)&v69 - v24;
  if (qword_100485DC0 != -1) {
    swift_once();
  }
  uint64_t v87 = a3;
  uint64_t v88 = v11;
  uint64_t v89 = v10;
  uint64_t v25 = a6;
  uint64_t v26 = type metadata accessor for Logger();
  sub_10018A9A8(v26, (uint64_t)qword_100485DC8);
  id v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v71 = a4;
  uint64_t v72 = a5;
  id v70 = v13;
  uint64_t v90 = v25;
  if (v29)
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v31 = _typeName(_:qualified:)();
    uint64_t v91 = (void *)sub_10018A9E0(v31, v32, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "[%s] Begin banner suppression.", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v33 = v79;
  v79[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners] = 1;
  id v73 = *(id *)&v33[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  static DispatchTime.now()();
  *uint64_t v19 = 15;
  uint64_t v35 = v74;
  uint64_t v34 = v75;
  (*(void (**)(void *, void, void **))(v74 + 104))(v19, enum case for DispatchTimeInterval.seconds(_:), v75);
  uint64_t v36 = v76;
  + infix(_:_:)();
  (*(void (**)(void *, void **))(v35 + 8))(v19, v34);
  uint64_t v37 = v78;
  uint64_t v77 = *(void *)(v77 + 8);
  ((void (*)(char *, uint64_t))v77)(v23, v78);
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = v90;
  *(void *)(v38 + 16) = v33;
  *(void *)(v38 + 24) = v39;
  uint64_t v96 = sub_100324D6C;
  uint64_t v97 = v38;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v93 = 1107296256;
  uint64_t v75 = &v94;
  unint64_t v94 = sub_100006760;
  os_log_type_t v95 = &unk_100429BD8;
  char v40 = _Block_copy(&aBlock);
  uint64_t v41 = v33;
  unint64_t v42 = v80;
  static DispatchQoS.unspecified.getter();
  uint64_t v91 = _swiftEmptyArrayStorage;
  sub_100015C00((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_100015600((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  NSString v43 = v82;
  uint64_t v44 = v85;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  NSString v45 = v73;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v40);

  (*(void (**)(char *, uint64_t))(v84 + 8))(v43, v44);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v42, v83);
  ((void (*)(char *, uint64_t))v77)(v36, v37);
  swift_release();
  sub_100013A80((uint64_t *)&unk_100479EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C7B20;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v47;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(unsigned char *)(inited + 48) = (v86 & 1) == 0;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v48;
  uint64_t v49 = v89;
  *(void *)(inited + 120) = v89;
  NSString v50 = sub_1001922CC((uint64_t *)(inited + 96));
  uint64_t v52 = v87;
  uint64_t v51 = v88;
  uint64_t v53 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v88 + 16);
  v53(v50, v87, v49);
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 136) = v54;
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = 1;
  *(void *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 184) = v55;
  *(void *)(inited + 216) = &type metadata for Bool;
  *(unsigned char *)(inited + 192) = 1;
  unint64_t v56 = sub_1001FA360(inited);
  uint64_t v57 = MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID();
  if (v57)
  {
    unsigned int v58 = (void *)v57;
    sub_100320AF4(v56);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v60 = v70;
    v53((uint64_t *)v70, v52, v49);
    unint64_t v61 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    unint64_t v62 = (v69 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v63 = (v62 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v64 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v64 + v61, v60, v49);
    uint64_t v65 = (uint64_t *)(v64 + v62);
    uint64_t v67 = v71;
    uint64_t v66 = v72;
    *uint64_t v65 = v71;
    v65[1] = v66;
    *(void *)(v64 + v63) = v90;
    uint64_t v96 = sub_100324FC0;
    uint64_t v97 = v64;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v93 = 1107296256;
    unint64_t v94 = sub_1001872F8;
    os_log_type_t v95 = &unk_100429C28;
    uint64_t v68 = _Block_copy(&aBlock);
    sub_1002312B4(v67);
    swift_release();
    sub_100168794(v58, (uint64_t)isa, v68);
    _Block_release(v68);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100320AF4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100013A80(&qword_100479F70);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_10018FDAC(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_10018FF5C(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_10018FF5C(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_10018FF5C(v36, v37);
    sub_10018FF5C(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~v6[v21 >> 6]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~v6[v21 >> 6])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = v6[v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)((char *)v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_10018FF5C(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_10018F864();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_100320EBC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v31 = a3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    if (qword_100485DC0 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10018A9A8(v11, (uint64_t)qword_100485DC8);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      int64_t v15 = (void *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v16 = _typeName(_:qualified:)();
      uint64_t v32 = sub_10018A9E0(v16, v17, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2114;
      swift_errorRetain();
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v32 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *int64_t v15 = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%s] Failed to launch music with error: %{public}@", (uint8_t *)v14, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      if (!v31) {
        return;
      }
LABEL_15:
      v31(a1);
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    if (v31) {
      goto LABEL_15;
    }
  }
  else
  {
    if (qword_100485DC0 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10018A9A8(v19, (uint64_t)qword_100485DC8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v30 = a4;
      uint64_t v23 = v22;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v33 = v29;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v24 = _typeName(_:qualified:)();
      uint64_t v32 = sub_10018A9E0(v24, v25, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2082;
      sub_100015C00(&qword_10047DC88, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v32 = sub_10018A9E0(v26, v27, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%s] Launched music with URL: %{public}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }

    if (v31) {
      goto LABEL_15;
    }
  }
}

void sub_1003213E0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = sub_100013A80(&qword_10047C4A8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  int64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 == 1)
  {
    uint64_t v16 = v4
        + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext;
    unint64_t v17 = *(void **)(v4
                   + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext);
    if (v17)
    {
      uint64_t v39 = ObjectType;
      uint64_t v18 = *(void *)(v16 + 24);
      uint64_t v19 = *(void **)(v16 + 8);
      uint64_t v20 = qword_100485DC0;
      id v21 = v17;
      id v40 = v19;
      uint64_t v41 = v18;
      swift_retain();
      if (v20 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_10018A9A8(v22, (uint64_t)qword_100485DC8);
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v38 = v13;
        unint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        id v37 = v21;
        *(_DWORD *)unint64_t v25 = 136315138;
        uint64_t v36 = v25 + 4;
        uint64_t v26 = _typeName(_:qualified:)();
        uint64_t v42 = sub_10018A9E0(v26, v27, &v43);
        id v21 = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v13 = v38;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%s] Launch Music for banner tap.", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      id v28 = [objc_allocWithZone((Class)MRGroupSessionToken) initWithDiscoveredSession:v21];
      id v29 = [v28 joinURLString];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      URL.init(string:)();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
      {
        __break(1u);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
        sub_10031FE38((uint64_t)v15, 1, 0, 0);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        swift_release();
      }
    }
    else
    {
      if (qword_100485DC0 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_10018A9A8(v30, (uint64_t)qword_100485DC8);
      swift_bridgeObjectRetain_n();
      uint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 136315394;
        uint64_t v34 = _typeName(_:qualified:)();
        uint64_t v42 = sub_10018A9E0(v34, v35, &v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_10018A9E0(a1, a2, &v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "[%s] Got banner tap for request: %{public}s but have no context", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
}

uint64_t sub_10032199C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v2;
  void v13[3] = a1;
  v13[4] = ObjectType;
  aBlock[4] = sub_1003244A4;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006760;
  aBlock[3] = &unk_100429B38;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v12;
  uint64_t v16 = v2;
  id v17 = a1;
  static DispatchQoS.unspecified.getter();
  v19[1] = _swiftEmptyArrayStorage;
  sub_100015C00((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_100015600((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void))(v9 + 8))(v11, v19[0]);
  return swift_release();
}

uint64_t sub_100321D78(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v37 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v34 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100485DC0 != -1) {
    swift_once();
  }
  uint64_t v35 = a2;
  uint64_t v13 = type metadata accessor for Logger();
  sub_10018A9A8(v13, (uint64_t)qword_100485DC8);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = v9;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v32 = v10;
    aBlock[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315650;
    uint64_t v19 = _typeName(_:qualified:)();
    uint64_t v39 = (void *)sub_10018A9E0(v19, v20, aBlock);
    uint64_t v31 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v39 = (void *)sub_10018A9E0(0xD00000000000002ELL, 0x80000001003BBE30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v21 = v35;
    uint64_t v39 = (void *)sub_10018A9E0(v35, a3, aBlock);
    a1 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%s] %s - %s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    uint64_t v10 = v32;
    swift_slowDealloc();
    uint64_t v9 = v33;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v21 = v35;
  }
  uint64_t v22 = *(void **)&v4[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v4;
  v23[3] = v21;
  v23[4] = a3;
  v23[5] = a1;
  v23[6] = ObjectType;
  aBlock[4] = (uint64_t)sub_100323F3C;
  aBlock[5] = (uint64_t)v23;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100006760;
  aBlock[3] = (uint64_t)&unk_100429AE8;
  os_log_type_t v24 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v25 = v22;
  uint64_t v26 = v4;
  unint64_t v27 = v34;
  static DispatchQoS.unspecified.getter();
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_100015C00((unint64_t *)&qword_10047AE20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100013A80((uint64_t *)&unk_100479AE0);
  sub_100015600((unint64_t *)&qword_10047AE30, (uint64_t *)&unk_100479AE0);
  id v28 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v28, v9);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v38);
  return swift_release();
}

void sub_100322274(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = a5;
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v15 = *(void **)(a1
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  uint64_t v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v18 = (uint64_t *)(a1
                  + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications);
  swift_beginAccess();
  uint64_t v19 = sub_100324300(*v18, a2, a3);
  if (v19)
  {
    uint64_t v6 = (void *)v19;
    uint64_t v17 = v20;
    uint64_t v5 = v21;
    if (qword_100485DC0 == -1)
    {
LABEL_4:
      uint64_t v22 = type metadata accessor for Logger();
      sub_10018A9A8(v22, (uint64_t)qword_100485DC8);
      id v23 = v6;
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      id v24 = v23;
      id v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.info.getter();
      int v27 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v28 = swift_slowAlloc();
        id v40 = (void *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        v46[0] = v42;
        *(_DWORD *)uint64_t v28 = 136315650;
        uint64_t v43 = v5;
        uint64_t v29 = _typeName(_:qualified:)();
        int v41 = v27;
        uint64_t v31 = sub_10018A9E0(v29, v30, v46);
        uint64_t v44 = v17;
        uint64_t v45 = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2048;
        uint64_t v45 = a4;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v28 + 22) = 2112;
        uint64_t v45 = (uint64_t)v24;
        id v32 = v24;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v40 = v6;
        swift_release_n();
        swift_bridgeObjectRelease_n();

        _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v41, "[%s] Received notification response: %ld for join request: %@", (uint8_t *)v28, 0x20u);
        sub_100013A80((uint64_t *)&unk_10047B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      sub_100322D38(v24);
      sub_100323168(v24, a4);
      swift_release();
      swift_bridgeObjectRelease();

      return;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  if (qword_100485DC0 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  sub_10018A9A8(v33, (uint64_t)qword_100485DC8);
  swift_bridgeObjectRetain_n();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    v46[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v37 = _typeName(_:qualified:)();
    uint64_t v45 = sub_10018A9E0(v37, v38, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_10018A9E0(a2, a3, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%s] Received response from unknown notification: %{public}s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

id sub_10032281C(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v2
                + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (qword_100485DC0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger();
  sub_10018A9A8(v10, (uint64_t)qword_100485DC8);
  id v11 = a1;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = v2;
    id v16 = (void *)v15;
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v17 = _typeName(_:qualified:)();
    uint64_t v23 = sub_10018A9E0(v17, v18, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2114;
    uint64_t v23 = (uint64_t)v11;
    id v19 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v16 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%s] Dismissing banner: %{public}@", (uint8_t *)v14, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    uint64_t v2 = v22;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return [*(id *)(v2+ OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_bannerCenter) dismissAllBannerRequests];
}

uint64_t sub_100322B48(id a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = (void **)type metadata accessor for DispatchPredicate();
  uint64_t v10 = (uint64_t)*(v9 - 1);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v13 = *(void **)(v4
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, void **))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void **))(v10 + 8))(v12, v9);
  if (v13)
  {
    id v9 = (void **)(v4
                   + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications);
    swift_beginAccess();
    uint64_t v12 = *v9;
    a1 = a1;
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *id v9 = v12;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v12 = sub_1003239F0(0, v12[2] + 1, 1, v12);
  *id v9 = v12;
LABEL_3:
  unint64_t v17 = v12[2];
  unint64_t v16 = v12[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t v12 = sub_1003239F0((void *)(v16 > 1), v17 + 1, 1, v12);
    *id v9 = v12;
  }
  v12[2] = v17 + 1;
  unint64_t v18 = &v12[4 * v17];
  v18[4] = a1;
  v18[5] = a2;
  v18[6] = a3;
  v18[7] = a4;
  return swift_endAccess();
}

void sub_100322D38(void *a1)
{
  id v31 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&ObjectType - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue;
  uint64_t v7 = *(void **)(v1
                + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  *uint64_t v5 = v7;
  uint64_t v8 = enum case for DispatchPredicate.onQueue(_:);
  id v9 = *(void (**)(void *, uint64_t, void *))(v3 + 104);
  v9(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v10 = v7;
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t v12 = *(void (**)(void *, void *))(v3 + 8);
  v12(v5, v2);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  os_log_type_t v13 = *(void **)(v1 + v6);
  *uint64_t v5 = v13;
  v9(v5, v8, v2);
  id v14 = v13;
  char v15 = _dispatchPreconditionTest(_:)();
  v12(v5, v2);
  if ((v15 & 1) == 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  swift_beginAccess();
  uint64_t v2 = v31;
  uint64_t v16 = swift_bridgeObjectRetain();
  id v17 = sub_100323C08(v16, v2);
  swift_bridgeObjectRelease();

  if (v17)
  {
    unint64_t v18 = *(void **)(v1
                   + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_notificationCenter);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "removePendingNotificationRequestsWithIdentifiers:", isa, ObjectType);

    Class v20 = Array._bridgeToObjectiveC()().super.isa;
    [v18 removeDeliveredNotificationsWithIdentifiers:v20];
    swift_release();
    swift_bridgeObjectRelease();

    return;
  }
  if (qword_100485DC0 != -1) {
    goto LABEL_11;
  }
LABEL_6:
  uint64_t v21 = type metadata accessor for Logger();
  sub_10018A9A8(v21, (uint64_t)qword_100485DC8);
  uint64_t v22 = v2;
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    os_log_type_t v26 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v27 = _typeName(_:qualified:)();
    uint64_t v32 = sub_10018A9E0(v27, v28, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2112;
    uint64_t v32 = (uint64_t)v22;
    uint64_t v29 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v26 = v22;

    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%s] Received request to dismiss notifications for unknown request: %@", (uint8_t *)v25, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_100323168(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  uint64_t v6 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(v6 - 1);
  __chkstk_darwin(v6);
  id v9 = (uint64_t *)((char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v10 = *(void **)(v3
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  *id v9 = v10;
  (*(void (**)(void *, void, void *))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v12 = v3
        + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications;
    swift_beginAccess();
    uint64_t v6 = a1;
    uint64_t v13 = swift_bridgeObjectRetain();
    unint64_t v14 = sub_100323DA0(v13, v6);
    char v16 = v15;
    swift_bridgeObjectRelease();

    if (v16)
    {
      if (qword_100485DC0 == -1) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
    if ((v14 & 0x8000000000000000) == 0)
    {
      if (v14 < *(void *)(*(void *)v12 + 16))
      {
        uint64_t v17 = *(void *)v12 + 32 * v14;
        unint64_t v18 = *(void (**)(uint64_t))(v17 + 48);
        id v19 = *(id *)(v17 + 32);
        swift_bridgeObjectRetain();
        swift_retain();
        v18(a2);
        swift_beginAccess();
        Class v20 = (void *)sub_1003238F8(v14);
        swift_endAccess();
        swift_release();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();

        return;
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  swift_once();
LABEL_7:
  uint64_t v21 = type metadata accessor for Logger();
  sub_10018A9A8(v21, (uint64_t)qword_100485DC8);
  uint64_t v22 = v6;
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    os_log_type_t v26 = (void *)swift_slowAlloc();
    v30[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v27 = _typeName(_:qualified:)();
    uint64_t v31 = sub_10018A9E0(v27, v28, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2112;
    uint64_t v31 = (uint64_t)v22;
    uint64_t v29 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v26 = v22;

    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%s] Received request to dismiss notifications for unknown request: %@", (uint8_t *)v25, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t destroy for GroupSessionUIManagerImplementation.NotificationContext(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for GroupSessionUIManagerImplementation.NotificationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GroupSessionUIManagerImplementation.NotificationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GroupSessionUIManagerImplementation.NotificationContext(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for GroupSessionUIManagerImplementation.NotificationContext()
{
  return &type metadata for GroupSessionUIManagerImplementation.NotificationContext;
}

uint64_t destroy for GroupSessionUIManagerImplementation.DiscoveredSessionContext(id *a1)
{
  return swift_release();
}

uint64_t initializeWithCopy for GroupSessionUIManagerImplementation.DiscoveredSessionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  long long v8 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v8;
  *(void *)(a1 + 24) = v4;
  id v5 = v3;
  id v6 = (id)v8;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GroupSessionUIManagerImplementation.DiscoveredSessionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  long long v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  uint64_t v10 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GroupSessionUIManagerImplementation.DiscoveredSessionContext(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  return a1;
}

uint64_t _s12mediaremoted35GroupSessionUIManagerImplementationC24DiscoveredSessionContextVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1003238A8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupSessionUIManagerImplementation.DiscoveredSessionContext()
{
  return &type metadata for GroupSessionUIManagerImplementation.DiscoveredSessionContext;
}

uint64_t sub_1003238F8(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_100323B00(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[4 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 8, 32 * v6);
      v3[2] = v5;
      char *v1 = v3;
      return v8;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1003239F0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100013A80(&qword_10047DC80);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100323B14(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100323B00(void *a1)
{
  return sub_1003239F0(0, a1[2], 0, a1);
}

uint64_t sub_100323B14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_100323C08(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = swift_bridgeObjectRetain() + 56; ; i += 32)
  {
    id v4 = *(id *)(i - 24);
    swift_bridgeObjectRetain();
    swift_retain();
    id v5 = [v4 identifier];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    id v9 = [a2 identifier];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    if (v6 == v10 && v8 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return v4;
    }
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();

    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100323DA0(uint64_t a1, void *a2)
{
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return 0;
  }
  uint64_t v2 = 0;
  for (uint64_t i = a1 + 56; ; i += 32)
  {
    uint64_t v18 = v2;
    id v4 = *(id *)(i - 24);
    swift_bridgeObjectRetain();
    swift_retain();
    id v5 = [v4 identifier];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    id v9 = [a2 identifier];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    if (v6 == v10 && v8 == v12)
    {
      swift_release();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      return v18;
    }
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_release();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      break;
    }
    uint64_t v2 = v18 + 1;
    if (v16 == v18 + 1) {
      return 0;
    }
  }
  return v18;
}

uint64_t sub_100323F34()
{
  return sub_1003258E4(56);
}

void sub_100323F3C()
{
  sub_100322274(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100323F4C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  if (qword_100485DC0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10018A9A8(v6, (uint64_t)qword_100485DC8);
  id v7 = a1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v30 = a2;
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v29 = v3;
    uint64_t v12 = _typeName(_:qualified:)();
    sub_10018A9E0(v12, v13, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    sub_10018A9E0(0xD00000000000003BLL, 0x80000001003BBF20, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 22) = 2112;
    id v14 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[%s] %s - %@", (uint8_t *)v10, 0x20u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    a2 = v30;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v15 = objc_msgSend(v7, "actionIdentifier", v29);
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v20 = 0;
  }
  else
  {
    int v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = ~v21 & 1;
  }
  id v22 = [v7 notification];
  id v23 = [v22 request];

  id v24 = [v23 identifier];
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v27 = v26;

  sub_100321D78(v20, v25, v27);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(*(void *)(a2 + 16) + 16))();
}

uint64_t sub_100324300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    uint64_t v5 = 0;
    uint64_t v19 = a1 + 32;
    while (1)
    {
      uint64_t v6 = v19 + 32 * v5;
      id v7 = *(void **)(v6 + 8);
      uint64_t v8 = v7[2];
      if (v8)
      {
        uint64_t v17 = *(void **)v6;
        BOOL v9 = v7[4] == a2 && v7[5] == a3;
        if (v9 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
        {
LABEL_20:
          id v15 = v17;
          id v16 = v17;
          swift_bridgeObjectRetain();
          swift_retain();
          return (uint64_t)v15;
        }
        if (v8 != 1) {
          break;
        }
      }
LABEL_3:
      if (++v5 == v18) {
        return 0;
      }
    }
    uint64_t v11 = v7 + 7;
    uint64_t v12 = 1;
    while (1)
    {
      uint64_t v13 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        break;
      }
      if (*(v11 - 1) == a2 && *v11 == a3) {
        goto LABEL_20;
      }
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if (result) {
        goto LABEL_20;
      }
      v11 += 2;
      ++v12;
      if (v13 == v8) {
        goto LABEL_3;
      }
    }
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_100324464()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003244A4()
{
  uint64_t v1 = *(void *)(v0 + 16)
     + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext;
  uint64_t v2 = *(void **)v1;
  if (!*(void *)v1)
  {
    if (qword_100485DC0 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10018A9A8(v34, (uint64_t)qword_100485DC8);
    osloga = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(osloga, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v37 = _typeName(_:qualified:)();
      sub_10018A9E0(v37, v38, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, osloga, v35, "[%s] Got dismiss event without discovered session context. Ignoring", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    goto LABEL_23;
  }
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v51 = *(void (**)(uint64_t))(v1 + 16);
  os_log_t oslog = (os_log_t)*(id *)(v1 + 8);
  swift_retain();
  id v4 = v2;
  id v5 = [v4 identifier];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  id v9 = [v3 identifier];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  if (v6 == v10 && v8 == v12)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_16:
    if (qword_100485DC0 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_10018A9A8(v39, (uint64_t)qword_100485DC8);
    id v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315138;
      uint64_t v43 = _typeName(_:qualified:)();
      sub_10018A9E0(v43, v44, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "[%s] Got dismiss event from GroupSessionNearby", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    id v45 = [v4 identifier];
    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v48 = v47;

    sub_10031DE94(v46, v48);
    uint64_t v49 = swift_bridgeObjectRelease();
    v51(v49);

    goto LABEL_21;
  }
  if (qword_100485DC0 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10018A9A8(v15, (uint64_t)qword_100485DC8);
  id v16 = v4;
  uint64_t v17 = oslog;
  swift_retain_n();
  id v18 = v3;
  id v19 = v16;
  uint64_t v20 = v17;
  id v21 = v18;
  osloga = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(osloga, v22))
  {
    os_log_type_t type = v22;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315650;
    uint64_t v24 = _typeName(_:qualified:)();
    sub_10018A9E0(v24, v25, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    id v26 = [v19 identifier];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v28;

    sub_10018A9E0(v27, v29, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    swift_release_n();
    *(_WORD *)(v23 + 22) = 2082;
    id v30 = [v21 identifier];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v33 = v32;

    sub_10018A9E0(v31, v33, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, osloga, type, "[%s] Got dismiss event for different session. Current: %{public}s, received: %{public}s. Ignoring", (uint8_t *)v23, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_21:
    swift_release();
    return;
  }

  swift_release_n();
LABEL_23:
}

uint64_t sub_100324BA4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }

  return _swift_deallocObject(v0, ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

void sub_100324C90()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(char **)(v0 + 16);
  int v5 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);
  uint64_t v8 = *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_100320214(v4, v5, v0 + v2, v6, v7, v8);
}

uint64_t sub_100324D34()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100324D6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners;
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners) == 1)
  {
    if (qword_100485DC0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10018A9A8(v3, (uint64_t)qword_100485DC8);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v7 = _typeName(_:qualified:)();
      sub_10018A9E0(v7, v8, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%s] End banner suppression.", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    *(unsigned char *)(v1 + v2) = 0;
  }
}

uint64_t sub_100324F10()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }

  return _swift_deallocObject(v0, ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

void sub_100324FC0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void (**)(uint64_t))(v1 + v5);
  uint64_t v7 = *(void *)(v1 + v5 + 8);

  sub_100320EBC(a1, v1 + v4, v6, v7);
}

void sub_10032506C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (qword_100485DC0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10018A9A8(v2, (uint64_t)qword_100485DC8);
  id v3 = v1;
  unint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v8 = _typeName(_:qualified:)();
    sub_10018A9E0(v8, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2112;
    id v10 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%s] Dismissing join request: %@", (uint8_t *)v6, 0x16u);
    sub_100013A80((uint64_t *)&unk_10047B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100322D38(v3);
  sub_100323168(v3, 1);
}

uint64_t sub_1003252A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1003252FC()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  sub_100013A80(&qword_100478690);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1003C5BA0;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v2;
  *(void *)(v8 + 48) = v5;
  *(void *)(v8 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100322B48(v1, v8, v7, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003253B4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003253C4(uint64_t a1)
{
}

void sub_1003253D0(uint64_t a1)
{
}

void sub_1003253DC(uint64_t a1, char *a2)
{
  uint64_t v3 = *(void **)(v2 + 16);
  if (a1)
  {
    swift_errorRetain();
    if (qword_100485DC0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10018A9A8(v5, (uint64_t)qword_100485DC8);
    id v6 = v3;
    swift_errorRetain();
    id v7 = v6;
    swift_errorRetain();
    os_log_t oslog = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      format = a2;
      id v10 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315650;
      uint64_t v11 = _typeName(_:qualified:)();
      sub_10018A9E0(v11, v12, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2114;
      id v13 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v10 = v7;

      *(_WORD *)(v9 + 22) = 2114;
      swift_errorRetain();
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v10[1] = v24;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, format, (uint8_t *)v9, 0x20u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_100485DC0 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10018A9A8(v14, (uint64_t)qword_100485DC8);
    id v15 = v3;
    os_log_t oslog = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      id v18 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v19 = _typeName(_:qualified:)();
      sub_10018A9E0(v19, v20, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2114;
      id v21 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v18 = v15;

      _os_log_impl((void *)&_mh_execute_header, oslog, v16, "[%s] Added notification with request: %{public}@", (uint8_t *)v17, 0x16u);
      sub_100013A80((uint64_t *)&unk_10047B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
}

void sub_100325888(void *a1, void *a2)
{
  if (a1)
  {

    swift_release();
  }
}

uint64_t sub_1003258DC()
{
  return sub_1003258E4(40);
}

uint64_t sub_1003258E4(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

void sub_100325930()
{
  sub_10031DE94(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10032595C(id a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  id v3 = *(id *)(v1 + 24);
  uint64_t v4 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners;
  if (*(unsigned char *)(v2
                + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners) == 1)
  {
    if (qword_100485DC0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10018A9A8(v5, (uint64_t)qword_100485DC8);
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v8 = 136315138;
      uint64_t v9 = _typeName(_:qualified:)();
      sub_10018A9E0(v9, v10, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%s] End banner suppression.", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    *(unsigned char *)(v2 + v4) = 0;
  }
  uint64_t v11 = *(void **)(v2
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext);
  if (v11)
  {
    unint64_t v12 = *(void **)(v2
                   + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext
                   + 8);
    id v13 = v11;
    id v14 = v12;
    swift_retain();
    id v15 = v14;
    sub_100325888(v11, v12);
    if (v12)
    {

      if (v3 == v15) {
        a1 = sub_10032281C(v3);
      }
    }
  }
  return sub_10000EB08(a1);
}

uint64_t sub_100325B70()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100325BA8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_100013A80(&qword_100478708);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C5BA0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v3;
  uint64_t v4 = (void *)kMREventNearbyNotificationTypeInAppBanner;
  *(void *)(inited + 48) = kMREventNearbyNotificationTypeInAppBanner;
  *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 64) = v5;
  id v6 = v4;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedChar:", objc_msgSend(v1, "routeType"));
  return sub_10019A6D8(inited);
}

uint64_t sub_100325C74()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100325CBC()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[5];
  uint64_t v74 = v0[4];
  uint64_t v75 = v0[3];
  uint64_t v3 = &selRef_dismissBannerWithIdentifier_;
  id v4 = [v1 hostInfo];
  unsigned int v5 = [v4 isInAppBannerAllowed];

  if (v5)
  {
    uint64_t v6 = v75
       + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext;
    os_log_type_t v7 = *(void **)(v75
                  + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext);
    uint64_t v73 = v2;
    if (v7)
    {
      *(void *)uint64_t v71 = v1;
      os_log_type_t v8 = *(void **)(v6 + 8);
      uint64_t v9 = qword_100485DC0;
      id v10 = v7;
      id v11 = v8;
      swift_retain();
      if (v9 != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      sub_10018A9A8(v12, (uint64_t)qword_100485DC8);
      id v13 = v10;
      id v14 = v11;
      swift_retain_n();
      id v15 = v13;
      id v16 = v14;
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315394;
        uint64_t v20 = _typeName(_:qualified:)();
        sub_10018A9E0(v20, v21, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2082;
        id v22 = [v15 identifier];
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v6;
        unint64_t v26 = v25;

        sub_10018A9E0(v23, v26, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v6 = v24;
        swift_bridgeObjectRelease();

        uint64_t v27 = v16;
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%s] Cancelling sessionID: %{public}s because of new request", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v27 = v16;
        swift_release_n();
      }

      uint64_t v1 = *(void **)v71;
      id v28 = [v15 identifier];
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v31 = v30;

      sub_10031DE94(v29, v31);
      swift_bridgeObjectRelease();

      swift_release();
      uint64_t v3 = &selRef_dismissBannerWithIdentifier_;
    }
    uint64_t v72 = v6;
    if (qword_100485DC0 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_10018A9A8(v32, (uint64_t)qword_100485DC8);
    id v33 = v1;
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136315394;
      uint64_t v37 = _typeName(_:qualified:)();
      sub_10018A9E0(v37, v38, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2082;
      id v39 = [v33 identifier];
      id v40 = v1;
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v43 = v42;

      uint64_t v44 = v41;
      uint64_t v1 = v40;
      sub_10018A9E0(v44, v43, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%s] Displaying for session: %{public}s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v3 = &selRef_dismissBannerWithIdentifier_;
      swift_slowDealloc();
    }
    else
    {
    }
    id v45 = [v33 v3[299]];
    id v46 = [v45 displayName];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v47 = [v33 v3[299]];
    id v48 = [v47 routeType];

    NSString v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v50 = [self requestWithBundleIdentifierAffinity:0 hostDisplayName:v49 routeType:v48];

    uint64_t v51 = *(void **)v72;
    uint64_t v52 = *(void **)(v72 + 8);
    *(void *)uint64_t v72 = v33;
    *(void *)(v72 + 8) = v50;
    *(void *)(v72 + 16) = v74;
    *(void *)(v72 + 24) = v73;
    id v53 = v33;
    id v54 = v50;
    swift_retain();
    sub_100325888(v51, v52);
    sub_10000EB08();
  }
  id v55 = [self currentSettings];
  if (v55)
  {
    unint64_t v56 = v55;
    unsigned int v57 = [v55 groupSessionNearbyLockscreen];

    if (v57)
    {
      id v58 = [v1 v3[299]];
      unsigned int v59 = [v58 isLockScreenAffordanceAllowed];

      if (v59)
      {
        if (qword_100485DC0 != -1) {
          swift_once();
        }
        uint64_t v60 = type metadata accessor for Logger();
        sub_10018A9A8(v60, (uint64_t)qword_100485DC8);
        unint64_t v61 = Logger.logObject.getter();
        os_log_type_t v62 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v61, v62))
        {
          unint64_t v63 = (uint8_t *)swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)unint64_t v63 = 136315138;
          uint64_t v64 = _typeName(_:qualified:)();
          sub_10018A9E0(v64, v65, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v61, v62, "[%s] Acquiring GroupSessionNearby assertion", v63, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        [sub_10031CD6C() acquireGroupSessionNearbyAssertionForSession:v1];
        swift_unknownObjectRelease();
        uint64_t v66 = (void *)kMREventGroupSessionNearbyNotificationDisplayed;
        uint64_t v67 = swift_allocObject();
        *(void *)(v67 + 16) = v1;
        aBlock[4] = (uint64_t)sub_10032659C;
        aBlock[5] = v67;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_10019A7F4;
        aBlock[3] = (uint64_t)&unk_100429F20;
        uint64_t v68 = _Block_copy(aBlock);
        id v69 = v1;
        id v70 = v66;
        swift_release();
        MRAnalyticsSendEvent();
        _Block_release(v68);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_10032659C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_100013A80(&qword_100478708);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003C5BA0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v3;
  id v4 = (void *)kMREventNearbyNotificationTypeLockScreen;
  *(void *)(inited + 48) = kMREventNearbyNotificationTypeLockScreen;
  *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 64) = v5;
  id v6 = v4;
  id v7 = [v1 hostInfo];
  id v8 = [v7 routeType];

  *(void *)(inited + 72) = [objc_allocWithZone((Class)NSNumber) initWithUnsignedChar:v8];
  return sub_10019A6D8(inited);
}

uint64_t sub_100326684()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003266BC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_10032675C()
{
  return NWPathMonitor.start(queue:)();
}

void sub_1003267F4()
{
}

uint64_t sub_10032687C()
{
  return sub_100326A5C(&enum case for NWInterface.InterfaceType.wifi(_:));
}

uint64_t sub_100326894(void *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = type metadata accessor for NWInterface.InterfaceType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NWPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = a1;
  NWPathMonitor.currentPath.getter();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *a3, v5);
  char v14 = NWPath.usesInterfaceType(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

  return v14 & 1;
}

uint64_t sub_100326A50()
{
  return sub_100326A5C(&enum case for NWInterface.InterfaceType.wiredEthernet(_:));
}

uint64_t sub_100326A5C(unsigned int *a1)
{
  uint64_t v2 = type metadata accessor for NWInterface.InterfaceType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NWPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NWPathMonitor.currentPath.getter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *a1, v2);
  char v10 = NWPath.usesInterfaceType(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10 & 1;
}

uint64_t type metadata accessor for NetworkMonitor()
{
  return self;
}

id sub_100326CA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NetworkMonitor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100326CE8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = *v1;
  sub_100013A80(&qword_100478720);
  v2[7] = swift_task_alloc();
  v2[8] = *(void *)(v3 + 80);
  uint64_t v4 = type metadata accessor for Optional();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_100326DF4, v1, 0);
}

uint64_t sub_100326DF4()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6] + *(void *)(*(void *)v0[6] + 104);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  uint64_t v6 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v4) == 1)
  {
    uint64_t v7 = v0[6];
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    uint64_t v8 = *(void *)(*(void *)v7 + 112);
    uint64_t v9 = *(void *)(v7 + v8);
    v0[12] = v9;
    if (v9)
    {
      swift_retain();
      char v10 = (void *)swift_task_alloc();
      v0[13] = v10;
      *char v10 = v0;
      uint64_t v11 = sub_100327134;
    }
    else
    {
      uint64_t v14 = v0[7];
      uint64_t v15 = v0[8];
      uint64_t v16 = v0[6];
      uint64_t v17 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
      type metadata accessor for LazyAsyncWrapper();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v19 = (void *)swift_allocObject();
      void v19[2] = v16;
      v19[3] = WitnessTable;
      v19[4] = v16;
      swift_retain_n();
      uint64_t v9 = sub_100327AF4(v14, (uint64_t)&unk_10047DD90, (uint64_t)v19, v15);
      v0[14] = v9;
      *(void *)(v7 + v8) = v9;
      swift_retain();
      swift_release();
      char v10 = (void *)swift_task_alloc();
      v0[15] = v10;
      *char v10 = v0;
      uint64_t v11 = sub_1003272B8;
    }
    v10[1] = v11;
    uint64_t v20 = v0[8];
    uint64_t v21 = v0[5];
    return Task<>.value.getter(v21, v9, v20);
  }
  else
  {
    (*(void (**)(void, void, void))(v6 + 32))(v0[5], v0[11], v0[8]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_100327134()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  return _swift_task_switch(sub_100327244, v1, 0);
}

uint64_t sub_100327244()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003272B8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  return _swift_task_switch(sub_1003273C8, v1, 0);
}

uint64_t sub_1003273C8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10032743C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  v4[7] = *(void *)(*(void *)a4 + 80);
  uint64_t v6 = type metadata accessor for Optional();
  v4[8] = v6;
  v4[9] = *(void *)(v6 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_100327528, a4, 0);
}

uint64_t sub_100327528()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)(v0[6] + 112) + **(int **)(v0[6] + 112));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  void *v1 = v0;
  v1[1] = sub_1003275FC;
  uint64_t v2 = v0[5];
  return v4(v2);
}

uint64_t sub_1003275FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  return _swift_task_switch(sub_10032770C, v1, 0);
}

uint64_t sub_10032770C()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v1, v0[5], v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v8 = v6 + *(void *)(*(void *)v6 + 104);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v8, v2, v3);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t type metadata accessor for LazyAsyncWrapper()
{
  return sub_1001A65D8();
}

uint64_t sub_1003278A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000D170;
  return sub_10032743C(a1, v5, v6, v4);
}

uint64_t sub_100327948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1001BD848(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_100013A80(&qword_10047DDE0);
  return swift_task_create();
}

uint64_t sub_100327AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TaskPriority();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1001BD848(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  char v10 = (void *)swift_allocObject();
  v10[2] = a4;
  v10[3] = a2;
  v10[4] = a3;
  return swift_task_create();
}

uint64_t sub_100327C98()
{
  sub_100329810();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100327CC4()
{
  return MediaControlActor.unownedExecutor.getter();
}

uint64_t sub_100327CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_100327D30(a1, a2);
  return v4;
}

char *sub_100327D30(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)v2;
  swift_defaultActor_initialize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 56))(&v2[*(void *)(*(void *)v2 + 104)], 1, 1);
  *(void *)&v2[*(void *)(*(void *)v2 + 112)] = 0;
  *((void *)v2 + 14) = a1;
  *((void *)v2 + 15) = a2;
  return v2;
}

uint64_t sub_100327DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_100327E34(a1, a2);
  return v4;
}

char *sub_100327E34(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)v2;
  swift_defaultActor_initialize();
  uint64_t v6 = *(void *)(v5 + 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(&v2[*(void *)(*(void *)v2 + 104)], 1, 1, v6);
  *(void *)&v2[*(void *)(*(void *)v2 + 112)] = 0;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  void v7[3] = a1;
  v7[4] = a2;
  *((void *)v2 + 14) = &unk_10047DDA0;
  *((void *)v2 + 15) = v7;
  return v2;
}

uint64_t sub_100327F18(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  void *v6 = v4;
  v6[1] = sub_10000D170;
  return v8(a1);
}

uint64_t sub_100327FF4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000D170;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  void *v6 = v5;
  v6[1] = sub_10000D170;
  return v8(a1);
}

uint64_t sub_100328118()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = type metadata accessor for Optional();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))((char *)&v8 - v4, 1, 1, v1);
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 104);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v6, v5, v2);
  swift_endAccess();
  *(void *)(v0 + *(void *)(*(void *)v0 + 112)) = 0;
  return swift_release();
}

uint64_t sub_100328280(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = *v1;
  sub_100013A80(&qword_100478720);
  v2[7] = swift_task_alloc();
  uint64_t v4 = *(void *)(v3 + 80);
  v2[8] = v4;
  uint64_t v5 = type metadata accessor for Optional();
  v2[9] = v5;
  v2[10] = *(void *)(v5 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_1003283E0, v1, 0);
}

uint64_t sub_1003283E0()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[6] + *(void *)(*(void *)v0[6] + 104);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v5) == 1)
  {
    uint64_t v7 = v0[6];
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    uint64_t v8 = *(void *)(*(void *)v7 + 112);
    uint64_t v9 = *(void *)(v7 + v8);
    v0[14] = v9;
    if (v9)
    {
      swift_retain();
      char v10 = (void *)swift_task_alloc();
      v0[15] = v10;
      uint64_t v11 = sub_100013A80(&qword_100478740);
      *char v10 = v0;
      uint64_t v12 = sub_100328768;
    }
    else
    {
      uint64_t v19 = v0[7];
      uint64_t v20 = v0[6];
      uint64_t v21 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v19, 1, 1, v21);
      type metadata accessor for LazyThrowingAsyncWrapper();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v23 = (void *)swift_allocObject();
      v23[2] = v20;
      v23[3] = WitnessTable;
      v23[4] = v20;
      swift_retain_n();
      uint64_t v9 = sub_100329694(v19, (uint64_t)&unk_10047DDB8, (uint64_t)v23);
      v0[16] = v9;
      *(void *)(v7 + v8) = v9;
      swift_retain();
      swift_release();
      char v10 = (void *)swift_task_alloc();
      v0[17] = v10;
      uint64_t v11 = sub_100013A80(&qword_100478740);
      *char v10 = v0;
      uint64_t v12 = sub_100328948;
    }
    v10[1] = v12;
    uint64_t v24 = v0[8];
    uint64_t v25 = v0[5];
    return Task.value.getter(v25, v9, v24, v11, &protocol self-conformance witness table for Error);
  }
  else
  {
    uint64_t v13 = v0[13];
    uint64_t v14 = v0[8];
    uint64_t v15 = v0[5];
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[12] + 32);
    v16(v13, v0[11], v14);
    v16(v15, v13, v14);
    (*(void (**)(void, void, uint64_t, void))(v0[12] + 56))(v0[5], 0, 1, v0[8]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_100328768()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_100328B28;
  }
  else
  {
    uint64_t v4 = sub_1003288A0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1003288A0()
{
  swift_release();
  (*(void (**)(void, void, uint64_t, void))(v0[12] + 56))(v0[5], 0, 1, v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100328948()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_100328BD0;
  }
  else
  {
    uint64_t v4 = sub_100328A80;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100328A80()
{
  swift_release();
  (*(void (**)(void, void, uint64_t, void))(v0[12] + 56))(v0[5], 0, 1, v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100328B28()
{
  swift_release();
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[12] + 56))(v0[5], 1, 1, v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100328BD0()
{
  swift_release();
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[12] + 56))(v0[5], 1, 1, v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100328C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  uint64_t v6 = *(void *)(*(void *)a4 + 80);
  v4[7] = v6;
  uint64_t v7 = type metadata accessor for Optional();
  v4[8] = v7;
  v4[9] = *(void *)(v7 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  return _swift_task_switch(sub_100328DC0, a4, 0);
}

uint64_t sub_100328DC0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(int **)(v0[6] + 112);
  uint64_t v3 = swift_allocObject();
  v0[14] = v3;
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  v0[15] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t (*)(), uint64_t))((char *)v2 + *v2);
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100328F14;
  uint64_t v6 = v0[13];
  return v8(v6, sub_1003299EC, v4);
}

uint64_t sub_100328F14()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = sub_1003291E0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 48);
    swift_release();
    swift_release();
    uint64_t v4 = sub_100329044;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100329044()
{
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v11 = v0[13];
  uint64_t v12 = v0[5];
  (*(void (**)(uint64_t))(v1 + 16))(v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v2, 0, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v2, v5);
  uint64_t v8 = v7 + *(void *)(*(void *)v7 + 104);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v8, v3, v5);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v12, v11, v6);
  *(void *)(v7 + *(void *)(*(void *)v7 + 112)) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1003291E0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  swift_release();
  *(void *)(v1 + *(void *)(*(void *)v1 + 112)) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t type metadata accessor for LazyThrowingAsyncWrapper()
{
  return sub_1001A65D8();
}

uint64_t sub_1003292BC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003292FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100013F84;
  return sub_100328C78(a1, v5, v6, v4);
}

uint64_t sub_10032939C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100013A80(&qword_100478720);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a2;
  v8[5] = v7;
  sub_100327948((uint64_t)v5, (uint64_t)&unk_10047DDC8, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1003294F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  return _swift_task_switch(sub_100329514, 0, 0);
}

uint64_t sub_100329514()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    unint64_t v2 = (*(void *)Strong + 184) & 0xFFFFFFFFFFFFLL | 0x99B3000000000000;
    *(void *)(v0 + 64) = *(void *)(*(void *)Strong + 184);
    *(void *)(v0 + 72) = v2;
    return _swift_task_switch(sub_1003295F8, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1003295F8()
{
  (*(void (**)(void))(v0 + 64))();
  swift_release();
  return _swift_task_switch(sub_10032966C, 0, 0);
}

uint64_t sub_10032966C()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100329694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1001BD848(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_100329810()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1003298C8()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10032997C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003299B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003299EC()
{
  return sub_10032939C(*(void *)(v0 + 24), *(void *)(v0 + 16));
}

uint64_t sub_1003299F4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100329A34(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100013F84;
  v5[5] = a1;
  v5[6] = v4;
  return _swift_task_switch(sub_100329514, 0, 0);
}

uint64_t sub_100329AE4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100329BC4;
  return v5(v2 + 32);
}

uint64_t sub_100329BC4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_100329CD8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100013F84;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10047DDD0 + dword_10047DDD0);
  return v6(a1, v4);
}

uint64_t sub_100329D90()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100329DC8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100013F84;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10047DDE8 + dword_10047DDE8);
  return v6(a1, v4);
}

uint64_t type metadata accessor for RouteRecommendationDisplayMonitorSuppressor()
{
  return self;
}

ValueMetadata *type metadata accessor for RuntimeUtils()
{
  return &type metadata for RuntimeUtils;
}

void sub_100329FCC(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = [*(id *)(a1 + 40) name];
  uint64_t v7 = [*(id *)(a1 + 40) requestID];
  uint64_t v8 = +[NSDate date];
  [v8 timeIntervalSinceDate:*(void *)(a1 + 48)];
  int v10 = 138544130;
  uint64_t v11 = v6;
  __int16 v12 = 2114;
  uint64_t v13 = v7;
  __int16 v14 = 2114;
  uint64_t v15 = a2;
  __int16 v16 = 2048;
  uint64_t v17 = v9;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)&v10, 0x2Au);
}

void sub_10032A0D4(uint64_t a1, uint64_t a2, NSObject *a3)
{
  char active = (void *)MRMediaRemoteActiveEndpointTypeCopyDescription();
  int v6 = 138543618;
  uint64_t v7 = active;
  __int16 v8 = 2114;
  uint64_t v9 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "[SystemEndpointController] Reevaluating %{public}@ActiveEndpoint because %{public}@", (uint8_t *)&v6, 0x16u);
}

void sub_10032A180(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[SystemEndpointController] Updating activeEndpointInfo %@", (uint8_t *)&v3, 0xCu);
}

void sub_10032A1FC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[MRDGroupSessionServer] Failed to find WHA endpoint, joining session directly", v1, 2u);
}

void sub_10032A240(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDGroupSessionServer] Found active group session for device: %@, but operation had already timed out", (uint8_t *)&v3, 0xCu);
}

void sub_10032A2BC(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 bundleIdentifier];
  sub_1000221FC();
  sub_100022214((void *)&_mh_execute_header, v3, v4, "[MRDGroupSessionServer] Push eligibility state: %@ to new client: %@", v5, v6, v7, v8, v9);
}

void sub_10032A350(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 bundleIdentifier];
  sub_1000221FC();
  sub_100022214((void *)&_mh_execute_header, v3, v4, "[MRDGroupSessionServer] Push session state: %@ to new client: %@", v5, v6, v7, v8, v9);
}

void sub_10032A3E4(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 localizedFailureReason];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDGroupSessionServer] Cannot present proximity card: %@", (uint8_t *)&v4, 0xCu);
}

void sub_10032A47C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[MRDGroupSessionServer] Accepting connection from client %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032A4F4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[MRDGroupSessionServer] Rejecting connection from unknown client.", v1, 2u);
}

void sub_10032A538(uint64_t a1, void *a2)
{
  int v2 = [a2 connection];
  sub_100025254();
  sub_100022214((void *)&_mh_execute_header, v3, v4, "[MRDGroupSessionClient] connectToSession - initial state %@ to connection: %@", v5, v6, v7, v8, 2u);
}

void sub_10032A5D8(uint64_t a1, void *a2)
{
  int v2 = [a2 connection];
  sub_100025254();
  sub_100022214((void *)&_mh_execute_header, v3, v4, "[MRDGroupSessionClient] connectToSession - placeholder session. Empty state %@ to connection: %@", v5, v6, v7, v8, 2u);
}

void sub_10032A678(void *a1)
{
  uint64_t v1 = [a1 sessionIdentifier];
  sub_100025264((void *)&_mh_execute_header, v2, v3, "[MRDGroupSessionClient] Failed to find session for identifier: %@", v4, v5, v6, v7, 2u);
}

void sub_10032A704(uint64_t a1, void *a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(void *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(void *)(buf + 14) = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[MRDGroupSessionClient] connectToSession - pending session. Empty state %@ to connection: %@", buf, 0x16u);
}

void sub_10032A76C(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDGroupSessionClient] Pending session timed out: %@", (uint8_t *)&v3, 0xCu);
}

void sub_10032A7E8(void *a1)
{
  uint64_t v1 = [a1 sessionIdentifier];
  sub_100025264((void *)&_mh_execute_header, v2, v3, "[MRDGroupSessionClient] Pending session joined after timeout: %@", v4, v5, v6, v7, 2u);
}

void sub_10032A870(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v5 = [a2 sessionIdentifier];
  int v6 = 138412546;
  uint64_t v7 = a1;
  sub_100025254();
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "[MRDGroupSessionClient] Joined remote group session: %@ not matching pending session: %@", (uint8_t *)&v6, 0x16u);
}

void sub_10032A91C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "No cache entry found.", v1, 2u);
}

void sub_10032A960()
{
  sub_1000314EC();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "%@", v1, 0xCu);
}

void sub_10032A9D4()
{
  sub_1000314EC();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%@", v1, 0xCu);
}

void sub_10032AA48(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error for fade out state. Status = %u.", (uint8_t *)v2, 8u);
}

void sub_10032AAC0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Tried to restrict command clients without entitlement. Ignoring.", v1, 2u);
}

void sub_10032AB04(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[MRDRemoteControlServer] handleSendApplicationConnectionMessage - connection: %@ not found, it has likely just invalidated", buf, 0xCu);
}

void sub_10032AB5C(id *a1)
{
  uint64_t v1 = [*a1 commandID];
  sub_1000314EC();
  sub_1000314F8((void *)&_mh_execute_header, v2, v3, "Command <%{public}@> ignored because of pre-processing error %{public}@.", v4, v5, v6, v7, v8);
}

void sub_10032AC00(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 48) displayName];
  sub_1000314EC();
  sub_1000314F8((void *)&_mh_execute_header, v2, v3, "Client %{public}@ failed to reply to command (SendCommandErr = %@)", v4, v5, v6, v7, v8);
}

void sub_10032ACA0()
{
  sub_1000314EC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "No context for context-sensitive command %{public}@", v1, 0xCu);
}

void sub_10032AD14(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint8_t v8 = +[NSDate date];
  [v8 timeIntervalSinceDate:a1[6]];
  int v10 = 138544130;
  uint64_t v11 = v6;
  __int16 v12 = 2114;
  uint64_t v13 = v7;
  __int16 v14 = 2114;
  uint64_t v15 = a2;
  __int16 v16 = 2048;
  uint64_t v17 = v9;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)&v10, 0x2Au);
}

void sub_10032ADF8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[ProximityProvider] invalidated with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032AE70(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[ProximityProvider] Failed to activate with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032AEE8(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 40) requestID];
  uint64_t v3 = +[NSDate date];
  [v3 timeIntervalSinceDate:*(void *)(a1 + 48)];
  sub_10003708C();
  sub_1000370B8((void *)&_mh_execute_header, v4, v5, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v6, v7, v8, v9, v10);
}

void sub_10032AFA8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDUIActivityServer] Error fetching active user: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032B020(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[MRDUIActivityServer] >>>+ clients: %@, routes: %@", (uint8_t *)&v3, 0x16u);
}

void sub_10032B0A8(void *a1, NSObject *a2)
{
  int v3 = [a1 nowPlayingActivityAssertionEndDate];
  int v4 = 138412290;
  __int16 v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[MRDUIActivityServer] Deferring end of now playing activity until: %@", (uint8_t *)&v4, 0xCu);
}

void sub_10032B140(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032B178(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032B1B0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032B1E8(void *a1, NSObject *a2)
{
  int v3 = [a1 userState];
  int v4 = [v3 identifier];
  int v5 = 138412290;
  uint64_t v6 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDMusicUserStateCenter] No identity available for: %@", (uint8_t *)&v5, 0xCu);
}

void sub_10032B298(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = +[NSDate date];
  [v8 timeIntervalSinceDate:a1[7]];
  int v10 = 138544130;
  uint64_t v11 = v6;
  __int16 v12 = 2114;
  uint64_t v13 = v7;
  __int16 v14 = 2114;
  uint64_t v15 = a2;
  __int16 v16 = 2048;
  uint64_t v17 = v9;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)&v10, 0x2Au);
}

uint64_t sub_10032B37C()
{
  uint64_t v0 = abort_report_np();
  return sub_10032B3A4(v0);
}

uint64_t sub_10032B3A4()
{
  uint64_t v0 = abort_report_np();
  return sub_10032B3CC(v0);
}

void sub_10032B3CC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[MRDNowPlayingPlayerClient] Creating playerClient with unexpected pid", v1, 2u);
}

void sub_10032B410(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[MRDIDSService] %@ Error %@ sending message", (uint8_t *)&v3, 0x16u);
}

void sub_10032B498(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[ODDSRouting] Route is not an output device-based route and a route UID is not available. Cannot pick route.", v1, 2u);
}

void sub_10032B4DC(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 40);
  int v4 = 138543618;
  uint64_t v5 = v3;
  __int16 v6 = 2114;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[ODDSRouting] Could not find output device for route %{public}@ - error = %{public}@", (uint8_t *)&v4, 0x16u);
}

void sub_10032B568(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[ProximityController] Now playing request failed: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032B5E0(uint64_t a1, NSObject *a2)
{
  int v4 = [*(id *)(a1 + 32) displayMonitor];
  unsigned int v5 = [v4 displayOn];
  __int16 v6 = [*(id *)(a1 + 32) displayMonitor];
  unsigned int v7 = [v6 lockScreenVisible];
  uint64_t v8 = [*(id *)(a1 + 32) displayMonitor];
  v9[0] = 67109632;
  v9[1] = v5;
  __int16 v10 = 1024;
  unsigned int v11 = v7;
  __int16 v12 = 1024;
  unsigned int v13 = [v8 controlCenterVisible];
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[ProximityController] display: %{BOOL}u, lockscreen: %{BOOL}u, controlcenter: %{BOOL}u", (uint8_t *)v9, 0x14u);
}

void sub_10032B6E0(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDAVOutputContextManager] Failed to create new outputContext for: %@", (uint8_t *)&v3, 0xCu);
}

void sub_10032B75C()
{
  sub_10005E838();
  sub_10005E818((void *)&_mh_execute_header, v0, v1, "[MRDAVOutputContextManager] Returning reserved outputContext %@ for: %@");
}

void sub_10032B7C4(uint64_t a1, uint64_t *a2, NSObject *a3)
{
  unsigned int v5 = *(void **)(*(void *)(*(void *)a1 + 8) + 40);
  __int16 v6 = [v5 outputDevices];
  uint64_t v7 = *a2;
  int v8 = 138412802;
  uint64_t v9 = v5;
  __int16 v10 = 2112;
  unsigned int v11 = v6;
  __int16 v12 = 2112;
  uint64_t v13 = v7;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "[MRDAVOutputContextManager] Returning active outputContext %@ with devices: %@ for: %@", (uint8_t *)&v8, 0x20u);
}

void sub_10032B890(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)int v3 = 138412546;
  *(void *)&v3[4] = a1;
  *(_WORD *)&v3[12] = 2112;
  *(void *)&v3[14] = *(void *)(a2 + 40);
  sub_10005E818((void *)&_mh_execute_header, a2, a3, "[MRDAVOutputContextManager] Ignoring inactiveOutputContexts outputContext %@ because still in use for: %@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16]);
}

void sub_10032B90C(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDAVOutputContextManager] Attempted to process output context with nil contextID: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_10032B984()
{
  sub_10005E838();
  sub_10005E818((void *)&_mh_execute_header, v0, v1, "[MRDAVOutputContextManager] Mapping deviceIDs from %@ to %@");
}

void sub_10032B9EC(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = +[NSDate date];
  [v7 timeIntervalSinceDate:*(void *)(a1 + 48)];
  int v9 = 138544130;
  CFStringRef v10 = @"MRDMRRelayConnectionManager.waitForConnection";
  __int16 v11 = 2114;
  uint64_t v12 = v6;
  __int16 v13 = 2114;
  uint64_t v14 = a2;
  __int16 v15 = 2048;
  uint64_t v16 = v8;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)&v9, 0x2Au);
}

void sub_10032BAD8()
{
  sub_100073758();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDRemoteControlGroupSessionCoordinator] Failed to get origin for ASE endpoint: %@", v2, v3, v4, v5, v6);
}

void sub_10032BB44(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[MRDRemoteControlGroupSessionCoordinator] Failed to start group session. Fast invalidation occurred.", v1, 2u);
}

void sub_10032BB88()
{
  sub_100073758();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDRemoteControlGroupSessionCoordinator] Failed to start group session with error: %{public}@.", v2, v3, v4, v5, v6);
}

void sub_10032BBF4()
{
  sub_100073758();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDRemoteControlGroupSessionCoordinator] Timed out waiting to auto-join remote session: %{public}@", v2, v3, v4, v5, v6);
}

void sub_10032BC60()
{
  sub_100073758();
  __int16 v3 = 2114;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "[MRDRemoteControlGroupSessionCoordinator] Failed to auto-join group session: %{public}@ with error: %{public}@.", v2, 0x16u);
}

void sub_10032BCEC()
{
  sub_100073758();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDRemoteControlGroupSessionCoordinator] Auto-join attempt failed after timeout: %{public}@", v2, v3, v4, v5, v6);
}

void sub_10032BD58()
{
  sub_100073758();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDRemoteControlGroupSessionCoordinator] Leaving auto-joined session because join finished after timeout: %{public}@", v2, v3, v4, v5, v6);
}

void sub_10032BDC4(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[ProximityController] invalidated with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032BE3C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[ProximityController] Failed to activate with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032BEB4(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  [a2 playbackState];
  uint64_t v5 = (void *)MRMediaRemoteCopyPlaybackStateDescription();
  int v6 = 138412546;
  uint64_t v7 = v4;
  __int16 v8 = 2112;
  int v9 = v5;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "[ProximityController] Play state for device %@ = %@", (uint8_t *)&v6, 0x16u);
}

void sub_10032BF6C(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 error];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[ProximityController] Active endpoint update failed with error %@.", (uint8_t *)&v4, 0xCu);
}

void sub_10032C004(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Attempted to enqueue disallowed background task %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032C07C()
{
  sub_1000872F0();
  sub_100087324(v0);
  uint64_t v7 = MRTransactionNameGetDescription();
  sub_1000872D0((void *)&_mh_execute_header, v1, v2, "[MRDTransaction] Dealloc Transaction: %p %@ for playerPath %@", v3, v4, v5, v6, 2u);
}

void sub_10032C124()
{
  sub_1000872F0();
  sub_100087318(v0);
  uint64_t v1 = MRTransactionNameGetDescription();
  sub_1000314F8((void *)&_mh_execute_header, v2, v3, "[MRDTransaction] Canceling %@ transaction for playerPath %@", v4, v5, v6, v7, 2u);
}

void sub_10032C1C4()
{
  sub_1000872F0();
  sub_100087318(v0);
  uint64_t v1 = MRTransactionNameGetDescription();
  sub_1000221FC();
  sub_1000314F8((void *)&_mh_execute_header, v2, v3, "[MRDTransaction] %@ %@ received interrupted/invalid connection", v4, v5, v6, v7, v8);
}

void sub_10032C250(uint64_t a1, void *a2)
{
  sub_100087324(a1);
  int v9 = MRTransactionNameGetDescription();
  [a2 length];
  sub_1000872D0((void *)&_mh_execute_header, v3, v4, "[MRDTransaction] %p %@ received bytes %ld", v5, v6, v7, v8, 2u);
}

void sub_10032C308()
{
  sub_1000872F0();
  sub_100087318(v1);
  uint64_t v2 = MRTransactionNameGetDescription();
  sub_1000221FC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "[MRDTransaction] %p %@ received end signal received", v3, 0x16u);
}

void sub_10032C3A4()
{
  sub_1000872F0();
  sub_100087318(v0);
  uint64_t v1 = MRTransactionNameGetDescription();
  sub_1000221FC();
  sub_1000314F8((void *)&_mh_execute_header, v2, v3, "[MRDTransaction] %p %@ could not extract connection to query", v4, v5, v6, v7, v8);
}

void sub_10032C430()
{
  sub_1000872F0();
  sub_100087318(v0);
  uint64_t v1 = MRTransactionNameGetDescription();
  sub_1000221FC();
  sub_1000314F8((void *)&_mh_execute_header, v2, v3, "[MRDTransaction] %p %@ could not create reply to qeury", v4, v5, v6, v7, v8);
}

void sub_10032C4BC(uint64_t a1)
{
  sub_100087324(a1);
  uint64_t v1 = MRTransactionNameGetDescription();
  sub_1000872FC();
  sub_1000872D0((void *)&_mh_execute_header, v2, v3, "[MRDTransaction] %p %@ querying for %ld bytes", v4, v5, v6, v7, 2u);
}

void sub_10032C55C()
{
  sub_1000872F0();
  sub_100087324(v0);
  uint64_t v1 = MRTransactionNameGetDescription();
  sub_1000872FC();
  sub_1000872D0((void *)&_mh_execute_header, v2, v3, "[MRDTransaction] %p %@ ending with %ld bytes remaining", v4, v5, v6, v7, 2u);
}

void sub_10032C5F4(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = 134218496;
  uint64_t v5 = v3;
  __int16 v6 = 2048;
  uint64_t v7 = a2;
  __int16 v8 = 2048;
  uint64_t v9 = v3 + a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[MRTransactionServer] Memory Usage: %ld + %ld -> %ld", (uint8_t *)&v4, 0x20u);
}

void sub_10032C68C(void *a1)
{
  [a1 name];
  uint64_t v1 = MRTransactionNameGetDescription();
  uint64_t v2 = MRTransactionPacketsGetKeys();
  sub_100089968();
  sub_100022214((void *)&_mh_execute_header, v3, v4, "[MRTransactionServer] %@ received keys %@", v5, v6, v7, v8, v9);
}

void sub_10032C734(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[MRTransactionServer] %@ received ack", (uint8_t *)&v3, 0xCu);
}

void sub_10032C7B0(void *a1, void *a2)
{
  [a1 name];
  int v3 = MRTransactionNameGetDescription();
  uint64_t v4 = [a2 allKeys];
  sub_100089968();
  sub_100022214((void *)&_mh_execute_header, v5, v6, "[MRTransactionServer] %@ received keys %@", v7, v8, v9, v10, v11);
}

void sub_10032C858(uint64_t a1)
{
  uint64_t v2 = +[NSDate date];
  [v2 timeIntervalSinceDate:*(void *)(a1 + 80)];
  sub_1000370B8((void *)&_mh_execute_header, v3, v4, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v5, v6, v7, v8, 2u);
}

void sub_10032C92C(uint64_t a1)
{
  uint64_t v2 = +[NSDate date];
  [v2 timeIntervalSinceDate:*(void *)(a1 + 56)];
  sub_1000370B8((void *)&_mh_execute_header, v3, v4, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v5, v6, v7, v8, 2u);
}

void sub_10032CA00()
{
  sub_10009132C();
  uint64_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 56)];
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, 2u);
}

void sub_10032CACC()
{
  sub_10009132C();
  uint64_t v2 = [(id)sub_100091354(v1) requestID];
  uint64_t v3 = +[NSDate date];
  sub_10009133C(v3, v4);
  sub_10003708C();
  sub_1000370B8((void *)&_mh_execute_header, v5, v6, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v7, v8, v9, v10, v11);
}

void sub_10032CB78(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Cluster requires primary but none was found. Members: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_10032CBF0(uint64_t a1, NSObject *a2)
{
  int v2 = 134217984;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRUIControllerConnection] <%p> No endpoint found. Please check that MediaRemoteUI is installed and registered with launchd.", (uint8_t *)&v2, 0xCu);
}

void sub_10032CC68()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Cannot host session without identity.", v2, v3, v4, v5, v6);
}

void sub_10032CC9C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032CD10()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Cannot start session while already starting/joining another.", v2, v3, v4, v5, v6);
}

void sub_10032CD44()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] NearbyGroupCreate event timed out - Logging failure", v2, v3, v4, v5, v6);
}

void sub_10032CD78()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] MRDNearbyGroup create finished after analytics timed out", v2, v3, v4, v5, v6);
}

void sub_10032CDAC()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Failed to create MRDNearbyGroup: %{public}@.", v2, v3, v4, v5, v6);
}

void sub_10032CE14()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] MRDNearbyInvitation create finished after timed out", v2, v3, v4, v5, v6);
}

void sub_10032CE48()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Failed to create MRDNearbyInvitation: %{public}@.", v2, v3, v4, v5, v6);
}

void sub_10032CEB0()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Cannot leave hosted session %{public}@.", v2, v3, v4, v5, v6);
}

void sub_10032CF18()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Cannot end non-hosted session %{public}@.", v2, v3, v4, v5, v6);
}

void sub_10032CF80()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Failing join request: %{public}@", v2, v3, v4, v5, v6);
}

void sub_10032CFE8()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] No listener available to join", v2, v3, v4, v5, v6);
}

void sub_10032D01C()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Fetch identity error: %{public}@", v2, v3, v4, v5, v6);
}

void sub_10032D084(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032D0F4()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Failed to handle group session event: %@", v2, v3, v4, v5, v6);
}

void sub_10032D15C()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Cannot join session without identity.", v2, v3, v4, v5, v6);
}

void sub_10032D190()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Cannot join session without resolvable identity.", v2, v3, v4, v5, v6);
}

void sub_10032D1C4(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138543362;
  uint64_t v4 = v2;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "[MRDGroupSessionManager] Invalidation received for untracked session: %{public}@.", (uint8_t *)&v3, 0xCu);
}

void sub_10032D240()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Dropping received proxy join request without equivalent WHA identifier: %@", v2, v3, v4, v5, v6);
}

void sub_10032D2A8(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v4 = [*(id *)(a1 + 32) identifier];
  sub_1000314EC();
  __int16 v7 = 2112;
  uint64_t v8 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "[MRDGroupSessionManager] %@ No equivalent WHA endpoint for session: %@", v6, 0x16u);
}

void sub_10032D35C()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDGroupSessionManager] Ignoring HomePod session discovered by default listener", v2, v3, v4, v5, v6);
}

void sub_10032D390(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint8_t v6 = [*(id *)(a1 + 40) requestID];
  __int16 v7 = [*(id *)(*(void *)a2 + 8) error];
  uint64_t v8 = +[NSDate date];
  [v8 timeIntervalSinceDate:*(void *)(a1 + 48)];
  int v10 = 138544130;
  CFStringRef v11 = @"MRDPauseOutputDevicesRequest.pauseOutputDeviceUIDs";
  __int16 v12 = 2114;
  __int16 v13 = v6;
  __int16 v14 = 2114;
  __int16 v15 = v7;
  __int16 v16 = 2048;
  uint64_t v17 = v9;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)&v10, 0x2Au);
}

void sub_10032D4A4()
{
  sub_10009132C();
  uint64_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 56)];
  sub_1000B63B8();
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, 2u);
}

void sub_10032D560()
{
  sub_10009132C();
  uint64_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 48)];
  sub_1000B63B8();
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, 2u);
}

void sub_10032D624()
{
  sub_1000B63D0();
  sub_1000B63E8((void *)&_mh_execute_header, v0, v1, "Device disconnect called with error: %{public}@ for external device: %{public}@");
}

void sub_10032D68C()
{
  sub_10009132C();
  os_log_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 48)];
  sub_1000B63B8();
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, 2u);
}

void sub_10032D750(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Connection error while sending custom data message. %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_10032D7C8()
{
  sub_1000B63D0();
  sub_1000B63E8((void *)&_mh_execute_header, v0, v1, "Connection error while sending ping message for device %{public}@. %{public}@");
}

void sub_10032D830(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Connection error while sending begin lyrics event message. %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_10032D8A8(uint64_t a1)
{
  int v2 = +[NSDate date];
  [v2 timeIntervalSinceDate:*(void *)(a1 + 48)];
  sub_1000B824C();
  sub_1000370B8((void *)&_mh_execute_header, v3, v4, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v5, v6, v7, v8, 2u);
}

void sub_10032D964(uint64_t a1)
{
  int v2 = +[NSDate date];
  [v2 timeIntervalSinceDate:*(void *)(a1 + 48)];
  sub_1000B824C();
  sub_1000370B8((void *)&_mh_execute_header, v3, v4, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v5, v6, v7, v8, 2u);
}

void sub_10032DA20(uint64_t a1, uint64_t a2)
{
  sub_1000C283C(a1, a2);
  int v2 = (void *)MRPairedDeviceCopyDescription();
  sub_100089968();
  sub_100022214((void *)&_mh_execute_header, v3, v4, "[MRDNowPlayingOriginClient] Set: deviceInfo for <%@>:\n %@", v5, v6, v7, v8, v9);
}

void sub_10032DAA8(uint64_t a1, uint64_t a2)
{
  sub_1000C283C(a1, a2);
  int v2 = (void *)MRPairedDeviceCopyDeltaDescription();
  sub_100089968();
  sub_100022214((void *)&_mh_execute_header, v3, v4, "[MRDNowPlayingOriginClient] Set: deviceInfo for <%@>:\n %@", v5, v6, v7, v8, v9);
}

void sub_10032DB34(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032DBA4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032DC14(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032DC80(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = (objc_class *)objc_opt_class();
  uint64_t v4 = NSStringFromClass(v3);
  sub_1000C554C();
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "dropping event of unexpected type (%@): %@", v5, 0x16u);
}

void sub_10032DD24(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = (objc_class *)objc_opt_class();
  uint64_t v4 = NSStringFromClass(v3);
  sub_1000C554C();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDRRC].IRD dropping event of unexpected type (%@): %@", v5, 0x16u);
}

void sub_10032DDC8(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[MRDRRC].IRD couldn't get eligibility of %@: %@", (uint8_t *)&v4, 0x16u);
}

void sub_10032DE54()
{
  sub_10009D09C();
  sub_1000C5564((void *)&_mh_execute_header, v0, v1, "createRunningSession: no service token. Can't configure session.", v2, v3, v4, v5, v6);
}

void sub_10032DE88()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDRRC].IRD createRunningSession: no service token. Can't configure session.", v2, v3, v4, v5, v6);
}

void sub_10032DEBC()
{
  sub_10009D09C();
  sub_1000C5564((void *)&_mh_execute_header, v0, v1, "getSessionWithLatestConfiguration: Session is nil. Cancel running code.", v2, v3, v4, v5, v6);
}

void sub_10032DEF0()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDRRC].IRD getSessionWithLatestConfiguration: Session is nil. Cancel running code.", v2, v3, v4, v5, v6);
}

void sub_10032DF24()
{
  sub_10009D09C();
  sub_1000C5564((void *)&_mh_execute_header, v0, v1, "Session not configured", v2, v3, v4, v5, v6);
}

void sub_10032DF58()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[MRDRRC].IRD Session not configured", v2, v3, v4, v5, v6);
}

void sub_10032DF8C(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error unpicking AirPlay routes. %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_10032E004(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[MRDLockScreenController] Delaying deactivation of lockScreen", v1, 2u);
}

void sub_10032E048(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[MRDLockScreenController] Reevaluating shouldShowLockScreen for reason %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032E0C0(uint64_t a1, NSObject *a2)
{
  int v2 = 134217984;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[MRDCLC] <%p> Cancelling playback timer.", (uint8_t *)&v2, 0xCu);
}

void sub_10032E138()
{
  sub_1000CEE14();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "[MRDCLC] <%p> Scheduling playback timer for %.2lf seconds.", v1, 0x16u);
}

void sub_10032E1AC()
{
  sub_1000CEE14();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "[MRDCLC] <%p> Scheduling continuousPlaybackDetectionTimer for %.2lf seconds.", v1, 0x16u);
}

void sub_10032E220()
{
  sub_10009132C();
  int v2 = [*(id *)(v1 + 48) requestID];
  uint64_t v3 = +[NSDate date];
  [v3 timeIntervalSinceDate:*(void *)(v0 + 56)];
  sub_10003708C();
  sub_1000370B8((void *)&_mh_execute_header, v4, v5, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v6, v7, v8, v9, v10);
}

void sub_10032E2D8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032E348()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] Client not authorized to send message: %lu", v2, v3, v4, v5, v6);
}

void sub_10032E3B0()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] Client not authorized", v2, v3, v4, v5, v6);
}

void sub_10032E3E4()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] Client is incompatible", v2, v3, v4, v5, v6);
}

void sub_10032E418()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] didReceiveClientDidUnregister %@", v2, v3, v4, v5, v6);
}

void sub_10032E480()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] didReceivePlayerDidUnregister %@", v2, v3, v4, v5, v6);
}

void sub_10032E4E8()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] didReceiveNowPlayingClientChange %@", v2, v3, v4, v5, v6);
}

void sub_10032E550()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] didReceiveNowPlayingPlayerChange %@", v2, v3, v4, v5, v6);
}

void sub_10032E5B8(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = (void *)MRMediaRemotePickedRouteVolumeControlCapabilitiesCopyDescription();
  sub_1000314EC();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[ExternalDeviceServer] didReceiveVolumeControlCapabilitiesChange %@", v4, 0xCu);
}

void sub_10032E648()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] didReceiveDefaultSupportedCommandsChange %@", v2, v3, v4, v5, v6);
}

void sub_10032E6B0()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] didReceiveCoalescedNowPlayingStateChange %@", v2, v3, v4, v5, v6);
}

void sub_10032E718()
{
  sub_1000314EC();
  __int16 v3 = 1024;
  int v4 = v0;
  _os_log_debug_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "Device with managedConfigDeviceID, %{public}@, allowed: %d", v2, 0x12u);
}

void sub_10032E7A0()
{
  sub_10009D09C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "No managedConfig allow list found. Allowing all devices", v1, 2u);
}

void sub_10032E7E0()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "Checking if device with managedConfigDeviceID, %{public}@, allowed to connect", v2, v3, v4, v5, v6);
}

void sub_10032E848(id *a1, NSObject *a2)
{
  [*a1 command];
  uint64_t v3 = (void *)MRMediaRemoteCopyCommandDescription();
  sub_1000314EC();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[ExternalDeviceServer] Client not authorized to send command type: %@", v4, 0xCu);
}

void sub_10032E8E0()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] Client not authorized to send command to playerPath: %@", v2, v3, v4, v5, v6);
}

void sub_10032E948()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] Failed to register new virtual touch device", v2, v3, v4, v5, v6);
}

void sub_10032E97C()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] Failed to search for devices pertinent to output context modification: %{public}@", v2, v3, v4, v5, v6);
}

void sub_10032E9E4()
{
  sub_1000EB6C0(__stack_chk_guard);
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] Error setting devices on output context: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_10032EA50()
{
  sub_1000EB6C0(__stack_chk_guard);
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] Error removing devices from output context: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_10032EABC()
{
  sub_1000EB6C0(__stack_chk_guard);
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] Error adding devices to output context: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_10032EB28()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[ExternalDeviceServer] Request group session failed: %@", v2, v3, v4, v5, v6);
}

void sub_10032EB90(id *a1, int a2, NSObject *a3)
{
  uint64_t v5 = [*a1 displayName];
  int v6 = 138543618;
  uint64_t v7 = v5;
  __int16 v8 = 1024;
  int v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "PID Mismatch: Client %{public}@ is trying to make a nowPlayingClient with a different pid %d", (uint8_t *)&v6, 0x12u);
}

void sub_10032EC44(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138543618;
  uint64_t v4 = a1;
  __int16 v5 = 2114;
  uint64_t v6 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Resolving Existing %{public}@ -> %{public}@", (uint8_t *)&v3, 0x16u);
}

void sub_10032ECCC()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "Client not found for video thumbnails request", v2, v3, v4, v5, v6);
}

void sub_10032ED00()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "Client not found for audio amplitude samples request", v2, v3, v4, v5, v6);
}

void sub_10032ED34()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "No client available for lyrics event", v2, v3, v4, v5, v6);
}

void sub_10032ED68()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "Tried to set now playing app without entitlement. Ignoring.", v2, v3, v4, v5, v6);
}

void sub_10032ED9C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[MRCompanionConnectionController] Skipping Attempt to discover and connect to companion because <%@>", (uint8_t *)&v2, 0xCu);
}

void sub_10032EE14(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRCompanionConnectionController] Could not discover companion endpoint with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032EE8C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRCompanionConnectionController] Could not connect to companion with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032EF04()
{
  *(_WORD *)os_log_t v0 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT, "Failed to initialize temporary directory", v0, 2u);
}

void sub_10032EF4C(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to setup AppleLanguagePreferencesChangedNotification handler, status: %d", (uint8_t *)v2, 8u);
}

void sub_10032EFC4(uint8_t *a1, uint64_t a2, void *a3, NSObject *a4)
{
  uint64_t v7 = (void *)MRMediaRemoteCopyReadableDictionaryDescription();
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_debug_impl((void *)&_mh_execute_header, a4, OS_LOG_TYPE_DEBUG, "Custom UserInfo %@", a1, 0xCu);
}

void sub_10032F038(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = (void *)MRMediaRemoteCopyReadableDictionaryDescription();
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "UserInfo %@", (uint8_t *)&v4, 0xCu);
}

void sub_10032F0CC(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Posting Notification %@", (uint8_t *)&v3, 0xCu);
}

void sub_10032F148()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "CompanionLinkClient invalidation", v2, v3, v4, v5, v6);
}

void sub_10032F17C()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "CompanionLinkClient interrupted", v2, v3, v4, v5, v6);
}

void sub_10032F1B0(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error activating CompanionLinkClient %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_10032F228()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "No app bundle ID provided in call to GetMediaAppIsInstalled message", v2, v3, v4, v5, v6);
}

void sub_10032F25C()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "Unable to wake system app [failed to find client]", v2, v3, v4, v5, v6);
}

void sub_10032F290(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to wake system app [failed to launch] %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_10032F308()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "Unable to bless app [bless failed]", v2, v3, v4, v5, v6);
}

void sub_10032F33C()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "Unable to bless app [task assertion failed]", v2, v3, v4, v5, v6);
}

void sub_10032F370()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "dropped request for critical section transition. client missing proper entitlement", v2, v3, v4, v5, v6);
}

void sub_10032F3A4()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "NULL requestID received when requesting the critical section", v2, v3, v4, v5, v6);
}

void sub_10032F3D8()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "Unable to get boot session ID", v2, v3, v4, v5, v6);
}

void sub_10032F40C(uint64_t a1, NSObject *a2, double a3)
{
  int v3 = 134218242;
  double v4 = a3;
  __int16 v5 = 2112;
  uint64_t v6 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Requesting to aquire assertion for %lf > 30 seconds. Assertion will likely only be valid for 30 seconds %@", (uint8_t *)&v3, 0x16u);
}

void sub_10032F490(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to acquire host assertion: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032F508(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to acquire assertion: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10032F580(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = +[NSDate date];
  [v7 timeIntervalSinceDate:*(void *)(a1 + 48)];
  int v9 = 138544130;
  CFStringRef v10 = @"autoConnectToEndpoint";
  __int16 v11 = 2114;
  uint64_t v12 = v6;
  __int16 v13 = 2114;
  uint64_t v14 = a2;
  __int16 v15 = 2048;
  uint64_t v16 = v8;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)&v9, 0x2Au);
}

void sub_10032F66C(unint64_t a1, uint64_t a2, os_log_t log)
{
  if (a1 > 5) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = (uint64_t)*(&off_10041D458 + a1);
  }
  int v4 = 138543618;
  uint64_t v5 = v3;
  __int16 v6 = 2114;
  uint64_t v7 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[MRDElectedPlayerController] Reevaluating electedPlayer event = %{public}@, reason =  %{public}@", (uint8_t *)&v4, 0x16u);
}

void sub_10032F710()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "[MRDUIClient] <%p> Dealloc.", v2, v3, v4, v5, v6);
}

void sub_10032F778(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[MRDUIServer] Rejecting connection from unknown client.", v1, 2u);
}

void sub_10032F7BC()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "[MRDUIServer] Accepting connection from client %@", v2, v3, v4, v5, v6);
}

void sub_10032F824()
{
  sub_1000314EC();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "[MRDUIServer] Rejecting connection from non-entitled client %@.", v1, 0xCu);
}

void sub_10032F898()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "[MRDUIServer] Adding client %@", v2, v3, v4, v5, v6);
}

void sub_10032F900()
{
  sub_1000314EC();
  sub_1000C2820((void *)&_mh_execute_header, v0, v1, "[MRDUIServer] Removing client %@", v2, v3, v4, v5, v6);
}

void sub_10032F968()
{
  sub_10005E838();
  sub_10005E818((void *)&_mh_execute_header, v0, v1, "[MRDITS] <%p> Cancelling idle playback timer of playerPath %@");
}

void sub_10032F9D0()
{
  sub_10005E838();
  sub_10005E818((void *)&_mh_execute_header, v0, v1, "[MRDITS] <%p> Last playing date for %@ is distantPast, setting new timer");
}

void sub_10032FA38()
{
  sub_10005E838();
  sub_10005E818((void *)&_mh_execute_header, v0, v1, "[MRDITS] <%p> Playback state changed to playing for %@, not simplifying topology");
}

void sub_10032FAA0()
{
  sub_10009132C();
  os_log_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 56)];
  sub_1000B63B8();
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, 2u);
}

void sub_10032FB5C(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) name];
  sub_1000314EC();
  __int16 v7 = 2112;
  uint64_t v8 = v4;
  sub_100140A5C((void *)&_mh_execute_header, a2, v5, "[AVRoutingServer] Authorization token failed for %{public}@ : %@", v6);
}

void sub_10032FC08(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032FC78()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[AVRoutingServer] Did not receive any pickable route information from the XPC message.", v2, v3, v4, v5, v6);
}

void sub_10032FCAC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032FD1C()
{
  v2[0] = 138543618;
  sub_100140A38();
  uint64_t v3 = v0;
  sub_100140A5C((void *)&_mh_execute_header, v1, (uint64_t)v1, "[AVRoutingServer] AV reconnaissance session failed to find route with UID %{public}@ -- %{public}@", (uint8_t *)v2);
}

void sub_10032FD98(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10032FE08()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[AVRoutingServer] No passwords to delete", v2, v3, v4, v5, v6);
}

void sub_10032FE3C(id *a1, NSObject *a2)
{
  uint64_t v3 = [*a1 bundleIdentifier];
  v4[0] = 138412546;
  sub_100140A48();
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Missing entitlement %@ for %@. Please file a radar for this process to obtain this entitlement", (uint8_t *)v4, 0x16u);
}

void sub_10032FEE0(id *a1, NSObject *a2)
{
  uint64_t v3 = [*a1 bundleIdentifier];
  v5[0] = 138412546;
  sub_100140A48();
  sub_100140A5C((void *)&_mh_execute_header, a2, v4, "[AVRoutingServer] Missing entitlement %@ for %@.", (uint8_t *)v5);
}

void sub_10032FF7C()
{
  sub_1000314EC();
  __int16 v3 = 2113;
  uint64_t v4 = v0;
  sub_100140A5C((void *)&_mh_execute_header, v1, (uint64_t)v1, "[AVRoutingServer] Could not find endpoints for migration between %{private}@ and %{private}@.", v2);
}

void sub_10032FFF8()
{
  sub_10009132C();
  uint64_t v2 = [*(id *)(v1 + 56) requestID];
  __int16 v3 = +[NSDate date];
  [v3 timeIntervalSinceDate:*(void *)(v0 + 64)];
  sub_10003708C();
  sub_1000370B8((void *)&_mh_execute_header, v4, v5, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v6, v7, v8, v9, v10);
}

void sub_1003300B0()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[AVRoutingServer] Output device connection failure: %{public}@", v2, v3, v4, v5, v6);
}

void sub_100330118()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[AVRoutingServer] Ignoring authorization request because a password dialog is already being shown.", v2, v3, v4, v5, v6);
}

void sub_10033014C()
{
  sub_10009D09C();
  sub_10009D080((void *)&_mh_execute_header, v0, v1, "[AVRoutingServer] Ignoring authorization request because the request to pick indicated that we should ignore authorization failures.", v2, v3, v4, v5, v6);
}

void sub_100330180()
{
  sub_10009132C();
  uint64_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 48)];
  sub_100140A38();
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, 2u);
}

void sub_10033024C()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[AVRoutingServer] Failed to pick route %{public}@", v2, v3, v4, v5, v6);
}

void sub_1003302B4(int *a1, NSObject *a2)
{
  int v2 = *a1;
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[AVRoutingServer] Error getting AirPlay security settings dictionary (OSStatus = %d)", (uint8_t *)v3, 8u);
}

void sub_100330330(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint8_t v6 = [*(id *)(a1 + 32) requestID];
  uint64_t v7 = *(void *)(*(void *)(*(void *)a2 + 8) + 40);
  uint64_t v8 = +[NSDate date];
  [v8 timeIntervalSinceDate:*(void *)(a1 + 40)];
  v11[0] = 138544130;
  sub_100140A38();
  uint64_t v12 = v6;
  __int16 v13 = v9;
  uint64_t v14 = v7;
  __int16 v15 = 2048;
  uint64_t v16 = v10;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)v11, 0x2Au);
}

void sub_100330430(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  uint8_t v6 = [a2 error];
  uint64_t v7 = +[NSDate date];
  [v7 timeIntervalSinceDate:*(void *)(a1 + 40)];
  int v9 = 138544130;
  CFStringRef v10 = @"proactivePrepareForSetQueue";
  __int16 v11 = 2114;
  uint64_t v12 = v5;
  __int16 v13 = 2114;
  uint64_t v14 = v6;
  __int16 v15 = 2048;
  uint64_t v16 = v8;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)&v9, 0x2Au);
}

void sub_10033052C(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = [a2 error];
  uint64_t v8 = [a2 playerPath];
  int v9 = +[NSDate date];
  [v9 timeIntervalSinceDate:*(void *)(a1 + 40)];
  int v11 = 138544386;
  CFStringRef v12 = @"proactivePrepareForSetQueue";
  __int16 v13 = 2114;
  uint64_t v14 = v6;
  __int16 v15 = 2114;
  uint64_t v16 = v7;
  __int16 v17 = 2114;
  os_log_type_t v18 = v8;
  __int16 v19 = 2048;
  uint64_t v20 = v10;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", (uint8_t *)&v11, 0x34u);
}

void sub_100330648()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDApplicationConnection]<%p> handleServerBoundMessage - state: .invalidated -> dropping", v2, v3, v4, v5, v6);
}

void sub_1003306B0()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDApplicationConnection]<%p> handleClientBoundMessage - state: .invalidated -> dropping", v2, v3, v4, v5, v6);
}

void sub_100330718()
{
  sub_1000314EC();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "[MRDApplicationConnection]<%p> handleClientBoundMessage - state: .initial -> dropping", v1, 0xCu);
}

void sub_10033078C()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRDApplicationConnection]<%p> activate - state: .invalidated -> no-op", v2, v3, v4, v5, v6);
}

void sub_1003307F4(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "[MRDGroupSessionPushMessenger] Error retrieving firewall: %{public}@.", (uint8_t *)&v2, 0xCu);
}

void sub_10033086C(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "[MRDGroupSessionPushMessenger] Error updating firewall entries: %{public}@.", (uint8_t *)&v2, 0xCu);
}

void sub_1003308E4(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 bundleIdentifier];
  int v6 = 138543618;
  uint64_t v7 = v5;
  __int16 v8 = 2114;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Error fetching %{public}@ process handle: %{public}@", (uint8_t *)&v6, 0x16u);
}

void sub_100330998(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[VirtualAudioInputServer] Error creating virtual input device. No descriptor data provided.", v1, 2u);
}

void sub_1003309DC(void *a1, NSObject *a2)
{
  int v3 = 134349056;
  id v4 = [a1 count];
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[VirtualAudioInputServer] Notifying %{public}llu endpoints of newly connected device", (uint8_t *)&v3, 0xCu);
}

void sub_100330A68(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[VirtualAudioInputServer] Created new device with descriptor: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_100330AE0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[VirtualAudioInputServer] An unknown device disconnected", v1, 2u);
}

void sub_100330B24()
{
  sub_10014E7E0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "[VirtualAudioInputServer] Couldn't find device with ID %{public}d", v1, 8u);
}

void sub_100330B98(uint8_t *buf, uint64_t a2, os_log_t log)
{
  *(_DWORD *)buf = 134349056;
  *(void *)(buf + 4) = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[VirtualAudioInputServer] Notifying %{public}llu endpoints of disconnected device", buf, 0xCu);
}

void sub_100330BE0()
{
  sub_10014E7E0();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "[VirtualAudioInputServer] Disconnecting virtual device with ID %{public}d", v1, 8u);
}

void sub_100330C54()
{
  sub_10014E7E0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "[VirtualAudioInputServer] Recording state change ignored: unknown device ID %{public}d", v1, 8u);
}

void sub_100330CC8()
{
  sub_10014E7E0();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "[VirtualAudioInputServer] Recording state changed for device with ID %{public}d", v1, 8u);
}

void sub_100330D3C(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDVolumeController] Error setting AVSC isMuted: %@", (uint8_t *)&v3, 0xCu);
}

void sub_100330DB8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Remote alert handle did invalidate with error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100330E30(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to bless client [bless failed] %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_100330EA8(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to bless client [sync task assertion acquisition failed] %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_100330F20(id *a1, NSObject *a2)
{
  uint64_t v3 = [*a1 UUIDString];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Requested to invalidate a critical section assertion, but missing assertion for requestID: %@", (uint8_t *)&v4, 0xCu);
}

void sub_100330FBC(uint64_t a1, void *a2, NSObject *a3)
{
  int v6 = [*(id *)(a1 + 32) commandID];
  uint64_t v7 = [a2 error];
  __int16 v8 = +[NSDate date];
  [v8 timeIntervalSinceDate:*(void *)(a1 + 40)];
  v10[0] = 138544130;
  sub_100156D18();
  __int16 v11 = 2048;
  uint64_t v12 = v9;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)v10, 0x2Au);
}

void sub_1003310B8(uint64_t a1, void *a2, NSObject *a3)
{
  int v6 = [*(id *)(a1 + 32) commandID];
  uint64_t v7 = [a2 error];
  __int16 v8 = [a2 playerPath];
  uint64_t v9 = +[NSDate date];
  [v9 timeIntervalSinceDate:*(void *)(a1 + 40)];
  v12[0] = 138544386;
  sub_100156D18();
  __int16 v13 = v10;
  uint64_t v14 = v8;
  __int16 v15 = 2048;
  uint64_t v16 = v11;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds", (uint8_t *)v12, 0x34u);
}

void sub_1003311D0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Unable to create IOHIDUserDevice", v1, 2u);
}

void sub_100331214(uint64_t a1, uint64_t *a2, os_log_t log)
{
  uint64_t v3 = *a2;
  int v4 = 138412546;
  uint64_t v5 = a1;
  __int16 v6 = 2112;
  uint64_t v7 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[MRDIDSServiceConnection] Remove handler for type=%@, %@", (uint8_t *)&v4, 0x16u);
}

void sub_1003312A0(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = [*(id *)(a1 + 40) requestID];
  __int16 v8 = +[NSDate date];
  [v8 timeIntervalSinceDate:*(void *)(a1 + 48)];
  int v10 = 138544130;
  uint64_t v11 = v6;
  __int16 v12 = 2114;
  __int16 v13 = v7;
  __int16 v14 = 2114;
  uint64_t v15 = a2;
  __int16 v16 = 2048;
  uint64_t v17 = v9;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)&v10, 0x2Au);
}

void sub_100331394()
{
  sub_10009132C();
  uint64_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 56)];
  sub_100162488();
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, v8);
}

void sub_10033143C(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138543362;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[OutputContextModification] Failed to discover all output devices involved in modification: %{public}@", (uint8_t *)&v3, 0xCu);
}

void sub_1003314B8()
{
  sub_10009132C();
  uint64_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 48)];
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, 2u);
}

void sub_10033158C()
{
  sub_10009132C();
  uint64_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 72)];
  sub_100162488();
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, v8);
}

void sub_100331634(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[MRDLockScreenContentController] Starting query.", v1, 2u);
}

void sub_100331678(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[MRDLockScreenContentController] Finished query with error: %@.", (uint8_t *)&v2, 0xCu);
}

void sub_1003316F0(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 8) reason];
  uint64_t v3 = [*(id *)(a1 + 8) requestID];
  uint64_t v4 = +[NSDate date];
  uint64_t v5 = [*(id *)(a1 + 8) startDate];
  [v4 timeIntervalSinceDate:v5];
  sub_100166228();
  sub_100166254((void *)&_mh_execute_header, v6, v7, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v8, v9, v10, v11, v12);
}

void sub_1003317EC(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 8) reason];
  uint64_t v3 = [*(id *)(a1 + 8) requestID];
  uint64_t v4 = +[NSDate date];
  uint64_t v5 = [*(id *)(a1 + 8) startDate];
  [v4 timeIntervalSinceDate:v5];
  sub_100166228();
  sub_100166254((void *)&_mh_execute_header, v6, v7, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v8, v9, v10, v11, v12);
}

void sub_1003318E8()
{
  sub_10009132C();
  uint64_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 56)];
  sub_100162488();
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, v8);
}

void sub_100331994()
{
  sub_10009132C();
  uint64_t v1 = +[NSDate date];
  [v1 timeIntervalSinceDate:*(void *)(v0 + 56)];
  sub_100162488();
  sub_1000370B8((void *)&_mh_execute_header, v2, v3, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v4, v5, v6, v7, v8);
}

void sub_100331A3C(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v6 = [*(id *)(a1 + 40) requestID];
  uint64_t v7 = [a2 error];
  uint8_t v8 = +[NSDate date];
  [v8 timeIntervalSinceDate:*(void *)(a1 + 48)];
  sub_100170034();
  uint8_t v12 = v6;
  __int16 v13 = v9;
  __int16 v14 = v7;
  __int16 v15 = 2048;
  uint64_t v16 = v10;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v11, 0x2Au);
}

void sub_100331B38(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = [*(id *)(a1 + 40) requestID];
  uint64_t v7 = +[NSDate date];
  [v7 timeIntervalSinceDate:*(void *)(a1 + 48)];
  sub_100170034();
  uint64_t v11 = v6;
  __int16 v12 = v8;
  uint64_t v13 = a2;
  __int16 v14 = 2048;
  uint64_t v15 = v9;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v10, 0x2Au);
}

void sub_100331C20()
{
  sub_100172074();
  sub_1000B63E8((void *)&_mh_execute_header, v0, v1, "[MRUIController][D] <%p> postBannerWithConfiguration error: %@");
}

void sub_100331C8C()
{
  sub_100172074();
  sub_1000B63E8((void *)&_mh_execute_header, v0, v1, "[MRUIController][D] <%p> dismissBannerRequest error: %@");
}

void sub_100331CF8()
{
  sub_100172074();
  sub_1000B63E8((void *)&_mh_execute_header, v0, v1, "[MRUIController][D] <%p> dismissAllBanners error: %@");
}

void sub_100331D64()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRUIController][D] <%p> Deallocated while still holding group session low power assertion.", v2, v3, v4, v5, v6);
}

void sub_100331DCC()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRUIController][D] <%p> Deallocated while still holding route recommendation assertion.", v2, v3, v4, v5, v6);
}

void sub_100331E34()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRUIController][D] <%p> Deallocated while still holding screen mirroring assertion.", v2, v3, v4, v5, v6);
}

void sub_100331E9C()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRUIController][D] <%p> Deallocated while still holding quick controls assertion.", v2, v3, v4, v5, v6);
}

void sub_100331F04()
{
  sub_1000314EC();
  sub_10007373C((void *)&_mh_execute_header, v0, v1, "[MRUIController][D] <%p> Deallocated while still holding lock screen assertion.", v2, v3, v4, v5, v6);
}

void sub_100331F6C(uint64_t a1)
{
  uint64_t v2 = +[NSDate date];
  [v2 timeIntervalSinceDate:*(void *)(a1 + 56)];
  sub_100162488();
  sub_1000370B8((void *)&_mh_execute_header, v3, v4, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v5, v6, v7, v8, v9);
}

void sub_10033201C(uint64_t a1)
{
  uint64_t v2 = +[NSDate date];
  [v2 timeIntervalSinceDate:*(void *)(a1 + 64)];
  sub_100162488();
  sub_1000370B8((void *)&_mh_execute_header, v3, v4, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", v5, v6, v7, v8, v9);
}

void sub_1003320CC(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)uint64_t v3 = 134218242;
  *(void *)&v3[4] = *(void *)(a1 + 32);
  *(_WORD *)&v3[12] = 2114;
  *(void *)&v3[14] = a2;
  sub_1000B63E8((void *)&_mh_execute_header, a2, a3, "[MRDGroupSession] <%p> Failed to send message with error: %{public}@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16]);
}

void sub_100332148(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDGroupSession] Attempted to approve unknown participant: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003321C0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[MRDGroupSession] Attempted to deny unknown participant: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100332238()
{
  sub_100172074();
  sub_1000B63E8((void *)&_mh_execute_header, v0, v1, "[MRDGroupSession] <%p> Error exiting low power mode: %@.");
}

void sub_1003322A4()
{
  sub_100172074();
  sub_1000B63E8((void *)&_mh_execute_header, v0, v1, "[MRDGroupSession] <%p> Error entering low power mode: %@. Will not re-attempt to enter low power.");
}

void sub_100332310(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = [*(id *)(a1 + 8) name];
  uint64_t v7 = [*(id *)(a1 + 8) requestID];
  uint64_t v8 = +[NSDate date];
  uint8_t v9 = [*(id *)(a1 + 8) startDate];
  [v8 timeIntervalSinceDate:v9];
  int v11 = 138544130;
  __int16 v12 = v6;
  __int16 v13 = 2114;
  __int16 v14 = v7;
  __int16 v15 = 2114;
  uint64_t v16 = a2;
  __int16 v17 = 2048;
  uint64_t v18 = v10;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds", (uint8_t *)&v11, 0x2Au);
}

uint64_t static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)()
{
  return static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t JSONDecoder.init()()
{
  return JSONDecoder.init()();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t JSONEncoder.init()()
{
  return JSONEncoder.init()();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.name.getter()
{
  return Notification.name.getter();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t __DataStorage.init(bytes:length:)()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

uint64_t type metadata accessor for __DataStorage()
{
  return type metadata accessor for __DataStorage();
}

uint64_t KeyPathComparator.init<A>(_:order:)()
{
  return KeyPathComparator.init<A>(_:order:)();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.description.getter()
{
  return Data.description.getter();
}

uint64_t type metadata accessor for Data.RangeReference()
{
  return type metadata accessor for Data.RangeReference();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

Swift::String __swiftcall Data.base64EncodedString(options:)(NSDataBase64EncodingOptions options)
{
  uint64_t v1 = Data.base64EncodedString(options:)(options);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t static Data._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Data._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.append(_:)()
{
  return Data.append(_:)();
}

uint64_t Data.subdata(in:)()
{
  return Data.subdata(in:)();
}

uint64_t Date.init(timeIntervalSinceReferenceDate:)()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t static Date.distantPast.getter()
{
  return static Date.distantPast.getter();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return Date.addingTimeInterval(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t static Date.== infix(_:_:)()
{
  return static Date.== infix(_:_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t Activity.ActivityStateUpdates.makeAsyncIterator()()
{
  return Activity.ActivityStateUpdates.makeAsyncIterator()();
}

uint64_t static Activity.activities.getter()
{
  return static Activity.activities.getter();
}

uint64_t dispatch thunk of Activity.activityState.getter()
{
  return dispatch thunk of Activity.activityState.getter();
}

uint64_t dispatch thunk of Activity.activityStateUpdates.getter()
{
  return dispatch thunk of Activity.activityStateUpdates.getter();
}

uint64_t Activity.id.getter()
{
  return Activity.id.getter();
}

uint64_t dispatch thunk of Activity.content.getter()
{
  return dispatch thunk of Activity.content.getter();
}

uint64_t dispatch thunk of Activity.endSync(_:dismissalPolicy:)()
{
  return dispatch thunk of Activity.endSync(_:dismissalPolicy:)();
}

uint64_t static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)()
{
  return static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)();
}

uint64_t type metadata accessor for ActivityContentSource.Request()
{
  return type metadata accessor for ActivityContentSource.Request();
}

uint64_t static ActivityUIDismissalPolicy.immediate.getter()
{
  return static ActivityUIDismissalPolicy.immediate.getter();
}

uint64_t type metadata accessor for ActivityUIDismissalPolicy()
{
  return type metadata accessor for ActivityUIDismissalPolicy();
}

uint64_t type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination()
{
  return type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination();
}

uint64_t ActivityPresentationOptions.init(destinations:)()
{
  return ActivityPresentationOptions.init(destinations:)();
}

uint64_t ActivityPresentationOptions.isUserDismissalAllowedOnLockScreen.setter()
{
  return ActivityPresentationOptions.isUserDismissalAllowedOnLockScreen.setter();
}

uint64_t type metadata accessor for ActivityPresentationOptions()
{
  return type metadata accessor for ActivityPresentationOptions();
}

uint64_t static ActivityState.== infix(_:_:)()
{
  return static ActivityState.== infix(_:_:)();
}

uint64_t type metadata accessor for ActivityState()
{
  return type metadata accessor for ActivityState();
}

uint64_t static ActivityCenter.liveActivitiesSupported.getter()
{
  return static ActivityCenter.liveActivitiesSupported.getter();
}

uint64_t type metadata accessor for ActivityCenter()
{
  return type metadata accessor for ActivityCenter();
}

uint64_t ActivityContent.relevanceScore.getter()
{
  return ActivityContent.relevanceScore.getter();
}

uint64_t ActivityContent.init(state:staleDate:relevanceScore:)()
{
  return ActivityContent.init(state:staleDate:relevanceScore:)();
}

uint64_t ActivityContent.state.getter()
{
  return ActivityContent.state.getter();
}

uint64_t ActivityContent.staleDate.getter()
{
  return ActivityContent.staleDate.getter();
}

uint64_t InteractWithControlResultMessage.init(control:error:)()
{
  return InteractWithControlResultMessage.init(control:error:)();
}

uint64_t InteractWithControlMessage.control.getter()
{
  return InteractWithControlMessage.control.getter();
}

uint64_t type metadata accessor for InteractWithControlMessage()
{
  return type metadata accessor for InteractWithControlMessage();
}

uint64_t type metadata accessor for RoutingControl.RoutingControlType()
{
  return type metadata accessor for RoutingControl.RoutingControlType();
}

uint64_t RoutingControl.identifier.getter()
{
  return RoutingControl.identifier.getter();
}

uint64_t RoutingControl.sessionIdentifier.getter()
{
  return RoutingControl.sessionIdentifier.getter();
}

uint64_t RoutingControl.type.getter()
{
  return RoutingControl.type.getter();
}

uint64_t static RoutingControl.Target.== infix(_:_:)()
{
  return static RoutingControl.Target.== infix(_:_:)();
}

uint64_t type metadata accessor for RoutingControl.Target()
{
  return type metadata accessor for RoutingControl.Target();
}

uint64_t RoutingControl.target.getter()
{
  return RoutingControl.target.getter();
}

uint64_t type metadata accessor for RoutingControl()
{
  return type metadata accessor for RoutingControl();
}

uint64_t MediaLiveActivityAttributes.init(attributes:)()
{
  return MediaLiveActivityAttributes.init(attributes:)();
}

uint64_t MediaLiveActivityAttributes.ContentState.rawNowPlayingActivityUIState.setter()
{
  return MediaLiveActivityAttributes.ContentState.rawNowPlayingActivityUIState.setter();
}

uint64_t MediaLiveActivityAttributes.ContentState.suppressedBundleIdentifiers.setter()
{
  return MediaLiveActivityAttributes.ContentState.suppressedBundleIdentifiers.setter();
}

uint64_t MediaLiveActivityAttributes.ContentState.init()()
{
  return MediaLiveActivityAttributes.ContentState.init()();
}

uint64_t type metadata accessor for MediaLiveActivityAttributes.ContentState()
{
  return type metadata accessor for MediaLiveActivityAttributes.ContentState();
}

uint64_t type metadata accessor for MediaLiveActivityAttributes()
{
  return type metadata accessor for MediaLiveActivityAttributes();
}

uint64_t IPCMessage.init(message:)()
{
  return IPCMessage.init(message:)();
}

uint64_t IPCMessage.message.getter()
{
  return IPCMessage.message.getter();
}

uint64_t IPCMessage.priority.getter()
{
  return IPCMessage.priority.getter();
}

uint64_t static Preferences.diagnosticDescription.getter()
{
  return static Preferences.diagnosticDescription.getter();
}

uint64_t static Preferences.sessionItemStabilityInterval.getter()
{
  return static Preferences.sessionItemStabilityInterval.getter();
}

uint64_t static Preferences.sessionRecentActivityInterval.getter()
{
  return static Preferences.sessionRecentActivityInterval.getter();
}

uint64_t static Preferences.deferHandoffActiveSessionChange.getter()
{
  return static Preferences.deferHandoffActiveSessionChange.getter();
}

uint64_t type metadata accessor for Preferences()
{
  return type metadata accessor for Preferences();
}

uint64_t static RoutingItem.Properties.isDisabled.getter()
{
  return static RoutingItem.Properties.isDisabled.getter();
}

uint64_t RoutingItem.Properties.init(rawValue:)()
{
  return RoutingItem.Properties.init(rawValue:)();
}

uint64_t static RoutingItem.Properties.isBuiltIn.getter()
{
  return static RoutingItem.Properties.isBuiltIn.getter();
}

uint64_t static RoutingItem.Properties.isPlaying.getter()
{
  return static RoutingItem.Properties.isPlaying.getter();
}

uint64_t type metadata accessor for RoutingItem.Properties()
{
  return type metadata accessor for RoutingItem.Properties();
}

uint64_t RoutingItem.init(identifier:scopeIdentifier:title:symbolName:selectionIndicator:volume:controls:properties:)()
{
  return RoutingItem.init(identifier:scopeIdentifier:title:symbolName:selectionIndicator:volume:controls:properties:)();
}

uint64_t type metadata accessor for RoutingItem.SelectionIndicator()
{
  return type metadata accessor for RoutingItem.SelectionIndicator();
}

uint64_t type metadata accessor for RoutingItem()
{
  return type metadata accessor for RoutingItem();
}

uint64_t static RoutingMode.== infix(_:_:)()
{
  return static RoutingMode.== infix(_:_:)();
}

uint64_t type metadata accessor for RoutingMode()
{
  return type metadata accessor for RoutingMode();
}

uint64_t dispatch thunk of ArtworkToken.description.getter()
{
  return dispatch thunk of ArtworkToken.description.getter();
}

uint64_t ArtworkToken.__allocating_init(playerPathData:contentItemIdentifier:artworkIdentifier:supportsRemoteArtwork:maxPixelSize:remoteArtworkData:)()
{
  return ArtworkToken.__allocating_init(playerPathData:contentItemIdentifier:artworkIdentifier:supportsRemoteArtwork:maxPixelSize:remoteArtworkData:)();
}

uint64_t type metadata accessor for ArtworkToken()
{
  return type metadata accessor for ArtworkToken();
}

uint64_t ReplyMessage.init(error:)()
{
  return ReplyMessage.init(error:)();
}

uint64_t type metadata accessor for ReplyMessage()
{
  return type metadata accessor for ReplyMessage();
}

uint64_t RoutingDialog.init(identifier:titleText:detailText:actions:)()
{
  return RoutingDialog.init(identifier:titleText:detailText:actions:)();
}

uint64_t RoutingDialog.identifier.getter()
{
  return RoutingDialog.identifier.getter();
}

uint64_t type metadata accessor for RoutingDialog.Action()
{
  return type metadata accessor for RoutingDialog.Action();
}

uint64_t type metadata accessor for RoutingDialog()
{
  return type metadata accessor for RoutingDialog();
}

uint64_t static RoutingSession.Properties.supportsAudioSampling.getter()
{
  return static RoutingSession.Properties.supportsAudioSampling.getter();
}

uint64_t type metadata accessor for RoutingSession.Properties()
{
  return type metadata accessor for RoutingSession.Properties();
}

uint64_t RoutingSession.init(identifier:preferredItems:remainingItems:nowPlayingInfo:lastPlayingSnapshot:limitedRouting:volume:controls:symbolName:hostInfo:properties:)()
{
  return RoutingSession.init(identifier:preferredItems:remainingItems:nowPlayingInfo:lastPlayingSnapshot:limitedRouting:volume:controls:symbolName:hostInfo:properties:)();
}

uint64_t RoutingSession.NowPlayingInfo.TrackInfo.ExtendedInfo.init(storeIdentifier:isrc:)()
{
  return RoutingSession.NowPlayingInfo.TrackInfo.ExtendedInfo.init(storeIdentifier:isrc:)();
}

uint64_t type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo.ExtendedInfo()
{
  return type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo.ExtendedInfo();
}

uint64_t RoutingSession.NowPlayingInfo.TrackInfo.extendedInfo.setter()
{
  return RoutingSession.NowPlayingInfo.TrackInfo.extendedInfo.setter();
}

uint64_t RoutingSession.NowPlayingInfo.TrackInfo.attribution.getter()
{
  return RoutingSession.NowPlayingInfo.TrackInfo.attribution.getter();
}

uint64_t static RoutingSession.NowPlayingInfo.TrackInfo.== infix(_:_:)()
{
  return static RoutingSession.NowPlayingInfo.TrackInfo.== infix(_:_:)();
}

uint64_t RoutingSession.NowPlayingInfo.TrackInfo.init(title:album:artist:composer:station:attribution:extendedInfo:)()
{
  return RoutingSession.NowPlayingInfo.TrackInfo.init(title:album:artist:composer:station:attribution:extendedInfo:)();
}

uint64_t RoutingSession.NowPlayingInfo.TrackInfo.title.getter()
{
  return RoutingSession.NowPlayingInfo.TrackInfo.title.getter();
}

uint64_t RoutingSession.NowPlayingInfo.TrackInfo.artist.getter()
{
  return RoutingSession.NowPlayingInfo.TrackInfo.artist.getter();
}

uint64_t RoutingSession.NowPlayingInfo.TrackInfo.station.getter()
{
  return RoutingSession.NowPlayingInfo.TrackInfo.station.getter();
}

uint64_t RoutingSession.NowPlayingInfo.TrackInfo.composer.getter()
{
  return RoutingSession.NowPlayingInfo.TrackInfo.composer.getter();
}

uint64_t type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo()
{
  return type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo();
}

uint64_t RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackType.DurationInfo.ProgressSnapshot.init(time:date:)()
{
  return RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackType.DurationInfo.ProgressSnapshot.init(time:date:)();
}

uint64_t type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackType.DurationInfo.ProgressSnapshot()
{
  return type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackType.DurationInfo.ProgressSnapshot();
}

uint64_t static RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackType.DurationInfo.empty.getter()
{
  return static RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackType.DurationInfo.empty.getter();
}

uint64_t RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackType.DurationInfo.init(start:end:duration:progressSnapshot:rate:)()
{
  return RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackType.DurationInfo.init(start:end:duration:progressSnapshot:rate:)();
}

uint64_t type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackType()
{
  return type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackType();
}

uint64_t static RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackState.== infix(_:_:)()
{
  return static RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackState.== infix(_:_:)();
}

uint64_t type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackState()
{
  return type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo.PlaybackState();
}

uint64_t RoutingSession.NowPlayingInfo.PlaybackInfo.init(playbackState:playbackType:)()
{
  return RoutingSession.NowPlayingInfo.PlaybackInfo.init(playbackState:playbackType:)();
}

uint64_t RoutingSession.NowPlayingInfo.PlaybackInfo.playbackState.getter()
{
  return RoutingSession.NowPlayingInfo.PlaybackInfo.playbackState.getter();
}

uint64_t RoutingSession.NowPlayingInfo.PlaybackInfo.playbackState.setter()
{
  return RoutingSession.NowPlayingInfo.PlaybackInfo.playbackState.setter();
}

uint64_t static RoutingSession.NowPlayingInfo.PlaybackInfo.== infix(_:_:)()
{
  return static RoutingSession.NowPlayingInfo.PlaybackInfo.== infix(_:_:)();
}

uint64_t type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo()
{
  return type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo();
}

uint64_t RoutingSession.NowPlayingInfo.init(title:subtitle:playbackInfo:trackInfo:artworkToken:applicationBundleIdentifier:playbackProcessIdentifier:)()
{
  return RoutingSession.NowPlayingInfo.init(title:subtitle:playbackInfo:trackInfo:artworkToken:applicationBundleIdentifier:playbackProcessIdentifier:)();
}

uint64_t type metadata accessor for RoutingSession.NowPlayingInfo()
{
  return type metadata accessor for RoutingSession.NowPlayingInfo();
}

uint64_t RoutingSession.HostInfo.init(name:symbolName:productName:)()
{
  return RoutingSession.HostInfo.init(name:symbolName:productName:)();
}

uint64_t type metadata accessor for RoutingSession.HostInfo()
{
  return type metadata accessor for RoutingSession.HostInfo();
}

uint64_t type metadata accessor for RoutingSession()
{
  return type metadata accessor for RoutingSession();
}

uint64_t RoutingControls.SkipForwardControl.init(intervals:preferredInterval:sessionIdentifier:)()
{
  return RoutingControls.SkipForwardControl.init(intervals:preferredInterval:sessionIdentifier:)();
}

uint64_t type metadata accessor for RoutingControls.SkipForwardControl()
{
  return type metadata accessor for RoutingControls.SkipForwardControl();
}

uint64_t RoutingControls.SkipBackwardControl.init(intervals:preferredInterval:sessionIdentifier:)()
{
  return RoutingControls.SkipBackwardControl.init(intervals:preferredInterval:sessionIdentifier:)();
}

uint64_t type metadata accessor for RoutingControls.SkipBackwardControl()
{
  return type metadata accessor for RoutingControls.SkipBackwardControl();
}

uint64_t RoutingControls.PreviousTrackControl.init(sessionIdentifier:)()
{
  return RoutingControls.PreviousTrackControl.init(sessionIdentifier:)();
}

uint64_t type metadata accessor for RoutingControls.PreviousTrackControl()
{
  return type metadata accessor for RoutingControls.PreviousTrackControl();
}

uint64_t RoutingControls.AbsoluteVolumeControl.init(itemIdentifier:)()
{
  return RoutingControls.AbsoluteVolumeControl.init(itemIdentifier:)();
}

uint64_t RoutingControls.AbsoluteVolumeControl.init(sessionIdentifier:)()
{
  return RoutingControls.AbsoluteVolumeControl.init(sessionIdentifier:)();
}

uint64_t type metadata accessor for RoutingControls.AbsoluteVolumeControl()
{
  return type metadata accessor for RoutingControls.AbsoluteVolumeControl();
}

uint64_t type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType()
{
  return type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType();
}

uint64_t RoutingControls.RelativeVolumeControl.init(itemIdentifier:)()
{
  return RoutingControls.RelativeVolumeControl.init(itemIdentifier:)();
}

uint64_t RoutingControls.RelativeVolumeControl.init(sessionIdentifier:)()
{
  return RoutingControls.RelativeVolumeControl.init(sessionIdentifier:)();
}

uint64_t type metadata accessor for RoutingControls.RelativeVolumeControl()
{
  return type metadata accessor for RoutingControls.RelativeVolumeControl();
}

uint64_t RoutingControls.PlayControl.init(sessionIdentifier:)()
{
  return RoutingControls.PlayControl.init(sessionIdentifier:)();
}

uint64_t type metadata accessor for RoutingControls.PlayControl()
{
  return type metadata accessor for RoutingControls.PlayControl();
}

uint64_t RoutingControls.PauseControl.init(sessionIdentifier:)()
{
  return RoutingControls.PauseControl.init(sessionIdentifier:)();
}

uint64_t type metadata accessor for RoutingControls.PauseControl()
{
  return type metadata accessor for RoutingControls.PauseControl();
}

uint64_t RoutingControls.NextTrackControl.init(sessionIdentifier:)()
{
  return RoutingControls.NextTrackControl.init(sessionIdentifier:)();
}

uint64_t type metadata accessor for RoutingControls.NextTrackControl()
{
  return type metadata accessor for RoutingControls.NextTrackControl();
}

uint64_t RoutingControls.skipForward.setter()
{
  return RoutingControls.skipForward.setter();
}

uint64_t RoutingControls.skipBackward.setter()
{
  return RoutingControls.skipBackward.setter();
}

uint64_t RoutingControls.previousTrack.setter()
{
  return RoutingControls.previousTrack.setter();
}

uint64_t RoutingControls.absoluteVolume.setter()
{
  return RoutingControls.absoluteVolume.setter();
}

uint64_t RoutingControls.relativeVolume.setter()
{
  return RoutingControls.relativeVolume.setter();
}

uint64_t static RoutingControls.== infix(_:_:)()
{
  return static RoutingControls.== infix(_:_:)();
}

uint64_t RoutingControls.play.setter()
{
  return RoutingControls.play.setter();
}

uint64_t RoutingControls.pause.setter()
{
  return RoutingControls.pause.setter();
}

uint64_t RoutingControls.nextTrack.setter()
{
  return RoutingControls.nextTrack.setter();
}

uint64_t RoutingControls.init()()
{
  return RoutingControls.init()();
}

uint64_t type metadata accessor for RoutingControls()
{
  return type metadata accessor for RoutingControls();
}

uint64_t type metadata accessor for IPCClientMessage()
{
  return type metadata accessor for IPCClientMessage();
}

uint64_t type metadata accessor for IPCServerMessage()
{
  return type metadata accessor for IPCServerMessage();
}

uint64_t static ExecutionPriority.current.getter()
{
  return static ExecutionPriority.current.getter();
}

uint64_t type metadata accessor for ExecutionPriority()
{
  return type metadata accessor for ExecutionPriority();
}

uint64_t IPCConnectMessage.configuration.getter()
{
  return IPCConnectMessage.configuration.getter();
}

uint64_t type metadata accessor for IPCConnectMessage()
{
  return type metadata accessor for IPCConnectMessage();
}

uint64_t RoutingInteraction.identifier.getter()
{
  return RoutingInteraction.identifier.getter();
}

uint64_t RoutingInteraction.description.getter()
{
  return RoutingInteraction.description.getter();
}

uint64_t static RoutingInteraction.== infix(_:_:)()
{
  return static RoutingInteraction.== infix(_:_:)();
}

uint64_t RoutingInteraction.Action.HandoffContext.mediaTitle.getter()
{
  return RoutingInteraction.Action.HandoffContext.mediaTitle.getter();
}

uint64_t dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.getter()
{
  return dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.getter();
}

uint64_t dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.setter()
{
  return dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.setter();
}

uint64_t RoutingInteraction.Action.HandoffContext.init(sourceBundleIdentifier:mediaTitle:)()
{
  return RoutingInteraction.Action.HandoffContext.init(sourceBundleIdentifier:mediaTitle:)();
}

uint64_t RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter()
{
  return RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter();
}

uint64_t type metadata accessor for RoutingInteraction.Action.HandoffContext()
{
  return type metadata accessor for RoutingInteraction.Action.HandoffContext();
}

uint64_t type metadata accessor for RoutingInteraction.Action()
{
  return type metadata accessor for RoutingInteraction.Action();
}

uint64_t RoutingInteraction.init(action:)()
{
  return RoutingInteraction.init(action:)();
}

uint64_t RoutingInteraction.action.getter()
{
  return RoutingInteraction.action.getter();
}

uint64_t type metadata accessor for RoutingInteraction()
{
  return type metadata accessor for RoutingInteraction();
}

uint64_t static InternalRoutingError.wrapping(error:)()
{
  return static InternalRoutingError.wrapping(error:)();
}

uint64_t type metadata accessor for InternalRoutingError()
{
  return type metadata accessor for InternalRoutingError();
}

uint64_t PresentDialogMessage.init(dialog:)()
{
  return PresentDialogMessage.init(dialog:)();
}

uint64_t SetRoutingModeMessage.routingMode.getter()
{
  return SetRoutingModeMessage.routingMode.getter();
}

uint64_t type metadata accessor for SetRoutingModeMessage()
{
  return type metadata accessor for SetRoutingModeMessage();
}

uint64_t RoutingSessionSnapshot.init(sessions:activeSession:)()
{
  return RoutingSessionSnapshot.init(sessions:activeSession:)();
}

uint64_t type metadata accessor for RoutingSessionSnapshot()
{
  return type metadata accessor for RoutingSessionSnapshot();
}

uint64_t InteractWithItemMessage.itemIdentifier.getter()
{
  return InteractWithItemMessage.itemIdentifier.getter();
}

uint64_t type metadata accessor for InteractWithItemMessage()
{
  return type metadata accessor for InteractWithItemMessage();
}

uint64_t SessionTransitionMessage.init(sourceIdentifier:destinationIdentifier:)()
{
  return SessionTransitionMessage.init(sourceIdentifier:destinationIdentifier:)();
}

uint64_t InteractWithDialogMessage.dialogIdentifier.getter()
{
  return InteractWithDialogMessage.dialogIdentifier.getter();
}

uint64_t InteractWithDialogMessage.action.getter()
{
  return InteractWithDialogMessage.action.getter();
}

uint64_t type metadata accessor for InteractWithDialogMessage()
{
  return type metadata accessor for InteractWithDialogMessage();
}

uint64_t InteractWithSessionMessage.sessionIdentifier.getter()
{
  return InteractWithSessionMessage.sessionIdentifier.getter();
}

uint64_t type metadata accessor for InteractWithSessionMessage()
{
  return type metadata accessor for InteractWithSessionMessage();
}

uint64_t SetUIPresentedStateMessage.isPresented.getter()
{
  return SetUIPresentedStateMessage.isPresented.getter();
}

uint64_t type metadata accessor for SetUIPresentedStateMessage()
{
  return type metadata accessor for SetUIPresentedStateMessage();
}

uint64_t type metadata accessor for RoutingSessionConfiguration.Attribution.AttributionType()
{
  return type metadata accessor for RoutingSessionConfiguration.Attribution.AttributionType();
}

uint64_t type metadata accessor for RoutingSessionConfiguration.Attribution()
{
  return type metadata accessor for RoutingSessionConfiguration.Attribution();
}

uint64_t RoutingSessionConfiguration.attribution.getter()
{
  return RoutingSessionConfiguration.attribution.getter();
}

uint64_t RoutingSessionConfiguration.supportsDialogs.getter()
{
  return RoutingSessionConfiguration.supportsDialogs.getter();
}

uint64_t RoutingSessionConfiguration.filterInactiveSessions.getter()
{
  return RoutingSessionConfiguration.filterInactiveSessions.getter();
}

uint64_t static RoutingSessionConfiguration.NowPlayingInfoProperties.extendedTrackInfo.getter()
{
  return static RoutingSessionConfiguration.NowPlayingInfoProperties.extendedTrackInfo.getter();
}

uint64_t static RoutingSessionConfiguration.NowPlayingInfoProperties.trackInfo.getter()
{
  return static RoutingSessionConfiguration.NowPlayingInfoProperties.trackInfo.getter();
}

uint64_t type metadata accessor for RoutingSessionConfiguration.NowPlayingInfoProperties()
{
  return type metadata accessor for RoutingSessionConfiguration.NowPlayingInfoProperties();
}

uint64_t RoutingSessionConfiguration.nowPlayingInfoProperties.getter()
{
  return RoutingSessionConfiguration.nowPlayingInfoProperties.getter();
}

uint64_t type metadata accessor for RoutingSessionConfiguration.Context()
{
  return type metadata accessor for RoutingSessionConfiguration.Context();
}

uint64_t RoutingSessionConfiguration.context.getter()
{
  return RoutingSessionConfiguration.context.getter();
}

uint64_t static RoutingSessionConfiguration.ItemType.== infix(_:_:)()
{
  return static RoutingSessionConfiguration.ItemType.== infix(_:_:)();
}

uint64_t type metadata accessor for RoutingSessionConfiguration.ItemType()
{
  return type metadata accessor for RoutingSessionConfiguration.ItemType();
}

uint64_t RoutingSessionConfiguration.itemTypes.getter()
{
  return RoutingSessionConfiguration.itemTypes.getter();
}

uint64_t type metadata accessor for RoutingSessionConfiguration()
{
  return type metadata accessor for RoutingSessionConfiguration();
}

uint64_t InteractWithItemResultMessage.init(itemIdentifier:error:)()
{
  return InteractWithItemResultMessage.init(itemIdentifier:error:)();
}

uint64_t SetExpandedSessionsStateMessage.expandedSessionIdentifiers.getter()
{
  return SetExpandedSessionsStateMessage.expandedSessionIdentifiers.getter();
}

uint64_t type metadata accessor for SetExpandedSessionsStateMessage()
{
  return type metadata accessor for SetExpandedSessionsStateMessage();
}

uint64_t TransportRoutingSessionUpdateMessage.init(snapshot:)()
{
  return TransportRoutingSessionUpdateMessage.init(snapshot:)();
}

uint64_t Features.MediaRemote.isEnabled.getter()
{
  return Features.MediaRemote.isEnabled.getter();
}

uint64_t type metadata accessor for Features.MediaRemote()
{
  return type metadata accessor for Features.MediaRemote();
}

uint64_t static _CFObject.== infix(_:_:)()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t _CFObject.hash(into:)()
{
  return _CFObject.hash(into:)();
}

uint64_t _CFObject.hashValue.getter()
{
  return _CFObject.hashValue.getter();
}

uint64_t dispatch thunk of NearbyInvitation.description.getter()
{
  return dispatch thunk of NearbyInvitation.description.getter();
}

uint64_t NearbyInvitation.PendingMember.invitationID.getter()
{
  return NearbyInvitation.PendingMember.invitationID.getter();
}

uint64_t NearbyInvitation.PendingMember.joinRequestUserInfo.getter()
{
  return NearbyInvitation.PendingMember.joinRequestUserInfo.getter();
}

uint64_t dispatch thunk of NearbyInvitation.invitationData.getter()
{
  return dispatch thunk of NearbyInvitation.invitationData.getter();
}

uint64_t dispatch thunk of NearbyInvitation.$pendingMembers.getter()
{
  return dispatch thunk of NearbyInvitation.$pendingMembers.getter();
}

uint64_t NearbyAdvertisement.identifier.getter()
{
  return NearbyAdvertisement.identifier.getter();
}

uint64_t dispatch thunk of NearbyAdvertisement.deviceColor.getter()
{
  return dispatch thunk of NearbyAdvertisement.deviceColor.getter();
}

uint64_t dispatch thunk of NearbyAdvertisement.deviceModel.getter()
{
  return dispatch thunk of NearbyAdvertisement.deviceModel.getter();
}

uint64_t NearbyAdvertisement.displayName.getter()
{
  return NearbyAdvertisement.displayName.getter();
}

uint64_t static NearbyAdvertisement.meContactID.getter()
{
  return static NearbyAdvertisement.meContactID.getter();
}

uint64_t NearbyAdvertisement.userInfo.getter()
{
  return NearbyAdvertisement.userInfo.getter();
}

uint64_t NearbyAdvertisement.contactID.getter()
{
  return NearbyAdvertisement.contactID.getter();
}

uint64_t type metadata accessor for NearbyAdvertisement()
{
  return type metadata accessor for NearbyAdvertisement();
}

uint64_t dispatch thunk of NearbyInvitationScanner.$advertisements.getter()
{
  return dispatch thunk of NearbyInvitationScanner.$advertisements.getter();
}

uint64_t NearbyInvitationScanner.init(provider:configuration:)()
{
  return NearbyInvitationScanner.init(provider:configuration:)();
}

uint64_t NearbyInvitationScanner.init(provider:)()
{
  return NearbyInvitationScanner.init(provider:)();
}

uint64_t NearbyGroupSessionProvider.init(nearbyGroup:activity:)()
{
  return NearbyGroupSessionProvider.init(nearbyGroup:activity:)();
}

uint64_t dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter()
{
  return dispatch thunk of NearbyGroupSessionProvider.nearbyGroup.getter();
}

uint64_t dispatch thunk of NearbyGroupSessionProvider.localMember.getter()
{
  return dispatch thunk of NearbyGroupSessionProvider.localMember.getter();
}

uint64_t dispatch thunk of NearbyGroupSessionProvider.id.getter()
{
  return dispatch thunk of NearbyGroupSessionProvider.id.getter();
}

uint64_t dispatch thunk of NearbyGroupSessionProvider.state.getter()
{
  return dispatch thunk of NearbyGroupSessionProvider.state.getter();
}

uint64_t NearbyInvitationAdvertiser.init(remoteInvitationData:provider:activityType:route:params:)()
{
  return NearbyInvitationAdvertiser.init(remoteInvitationData:provider:activityType:route:params:)();
}

uint64_t NearbyInvitationAdvertiser.init(invitation:provider:activityType:route:params:)()
{
  return NearbyInvitationAdvertiser.init(invitation:provider:activityType:route:params:)();
}

uint64_t NearbyInvitationAdvertiser.PendingMember.identifier.getter()
{
  return NearbyInvitationAdvertiser.PendingMember.identifier.getter();
}

uint64_t NearbyInvitationAdvertiser.PendingMember.displayName.getter()
{
  return NearbyInvitationAdvertiser.PendingMember.displayName.getter();
}

uint64_t NearbyInvitationAdvertiser.PendingMember.contactID.getter()
{
  return NearbyInvitationAdvertiser.PendingMember.contactID.getter();
}

uint64_t type metadata accessor for NearbyInvitationAdvertiser.PendingMember()
{
  return type metadata accessor for NearbyInvitationAdvertiser.PendingMember();
}

uint64_t dispatch thunk of NearbyInvitationAdvertiser.$pendingMembers.getter()
{
  return dispatch thunk of NearbyInvitationAdvertiser.$pendingMembers.getter();
}

uint64_t NearbyInvitationParameters.init(serviceName:browserType:route:)()
{
  return NearbyInvitationParameters.init(serviceName:browserType:route:)();
}

uint64_t type metadata accessor for NearbyInvitationParameters()
{
  return type metadata accessor for NearbyInvitationParameters();
}

uint64_t NearbyGroup.localMemberHandle.getter()
{
  return NearbyGroup.localMemberHandle.getter();
}

uint64_t NearbyGroup.id.getter()
{
  return NearbyGroup.id.getter();
}

uint64_t NearbyGroup.Member.tokenDestination.getter()
{
  return NearbyGroup.Member.tokenDestination.getter();
}

uint64_t NearbyGroup.Member.handle.getter()
{
  return NearbyGroup.Member.handle.getter();
}

uint64_t type metadata accessor for NearbyGroup.Member()
{
  return type metadata accessor for NearbyGroup.Member();
}

uint64_t static NearbyGroup.groups(service:identifier:)()
{
  return static NearbyGroup.groups(service:identifier:)();
}

uint64_t NearbyGroup.members.getter()
{
  return NearbyGroup.members.getter();
}

uint64_t NearbyGroup.$members.getter()
{
  return NearbyGroup.$members.getter();
}

uint64_t type metadata accessor for NearbyGroup()
{
  return type metadata accessor for NearbyGroup();
}

uint64_t InvitationRequest.__allocating_init(invitationData:displayName:userInfo:)()
{
  return InvitationRequest.__allocating_init(invitationData:displayName:userInfo:)();
}

uint64_t dispatch thunk of InvitationRequest.invitationUserInfo.getter()
{
  return dispatch thunk of InvitationRequest.invitationUserInfo.getter();
}

uint64_t dispatch thunk of InvitationRequest.invitationDisplayName.getter()
{
  return dispatch thunk of InvitationRequest.invitationDisplayName.getter();
}

uint64_t InvitationRequest<>.Context.userInfo.getter()
{
  return InvitationRequest<>.Context.userInfo.getter();
}

uint64_t type metadata accessor for InvitationRequest<>.Context()
{
  return type metadata accessor for InvitationRequest<>.Context();
}

uint64_t InvitationJoinResponse.sessionIdentifier.getter()
{
  return InvitationJoinResponse.sessionIdentifier.getter();
}

uint64_t GroupSessionProvider.sessions.getter()
{
  return GroupSessionProvider.sessions.getter();
}

uint64_t static GroupActivityMetadata.ActivityType.generic.getter()
{
  return static GroupActivityMetadata.ActivityType.generic.getter();
}

uint64_t type metadata accessor for GroupActivityMetadata.ActivityType()
{
  return type metadata accessor for GroupActivityMetadata.ActivityType();
}

uint64_t GroupActivityMetadata.supportsContinuationOnTV.setter()
{
  return GroupActivityMetadata.supportsContinuationOnTV.setter();
}

uint64_t GroupActivityMetadata.type.setter()
{
  return GroupActivityMetadata.type.setter();
}

uint64_t GroupActivityMetadata.init()()
{
  return GroupActivityMetadata.init()();
}

uint64_t type metadata accessor for GroupSessionMessenger.DeliveryMode()
{
  return type metadata accessor for GroupSessionMessenger.DeliveryMode();
}

uint64_t GroupSessionMessenger.MessageContext.source.getter()
{
  return GroupSessionMessenger.MessageContext.source.getter();
}

uint64_t type metadata accessor for GroupSessionMessenger.MessageContext()
{
  return type metadata accessor for GroupSessionMessenger.MessageContext();
}

uint64_t GroupSessionMessenger.send(_:to:completion:)()
{
  return GroupSessionMessenger.send(_:to:completion:)();
}

uint64_t GroupSessionMessenger.receive(_:)()
{
  return GroupSessionMessenger.receive(_:)();
}

uint64_t GroupSessionMessenger.init<A>(session:deliveryMode:)()
{
  return GroupSessionMessenger.init<A>(session:deliveryMode:)();
}

uint64_t type metadata accessor for GroupSessionMessenger()
{
  return type metadata accessor for GroupSessionMessenger();
}

uint64_t type metadata accessor for GroupSessionProviderState()
{
  return type metadata accessor for GroupSessionProviderState();
}

uint64_t GroupSession.localParticipant.getter()
{
  return GroupSession.localParticipant.getter();
}

uint64_t GroupSession.activeParticipants.getter()
{
  return GroupSession.activeParticipants.getter();
}

uint64_t GroupSession.$activeParticipants.getter()
{
  return GroupSession.$activeParticipants.getter();
}

Swift::Void __swiftcall GroupSession.end()()
{
}

Swift::Void __swiftcall GroupSession.join()()
{
}

uint64_t GroupSession.state.getter()
{
  return GroupSession.state.getter();
}

uint64_t GroupSession.$state.getter()
{
  return GroupSession.$state.getter();
}

uint64_t GroupSession.Sessions.makeAsyncIterator()()
{
  return GroupSession.Sessions.makeAsyncIterator()();
}

uint64_t static GroupActivity._identifiable(by:)()
{
  return static GroupActivity._identifiable(by:)();
}

uint64_t Participant.id.getter()
{
  return Participant.id.getter();
}

uint64_t Participant.handle.getter()
{
  return Participant.handle.getter();
}

uint64_t type metadata accessor for Participant()
{
  return type metadata accessor for Participant();
}

uint64_t static Participants.only(_:)()
{
  return static Participants.only(_:)();
}

uint64_t type metadata accessor for Participants()
{
  return type metadata accessor for Participants();
}

uint64_t AddressableMember.handle.getter()
{
  return AddressableMember.handle.getter();
}

uint64_t type metadata accessor for AddressableMember()
{
  return type metadata accessor for AddressableMember();
}

uint64_t _HashTable.UnsafeHandle._startIterator(bucket:)()
{
  return _HashTable.UnsafeHandle._startIterator(bucket:)();
}

uint64_t _HashTable.UnsafeHandle.firstOccupiedBucketInChain(with:)()
{
  return _HashTable.UnsafeHandle.firstOccupiedBucketInChain(with:)();
}

uint64_t _HashTable.UnsafeHandle.subscript.setter()
{
  return _HashTable.UnsafeHandle.subscript.setter();
}

uint64_t _HashTable.BucketIterator.currentValue.getter()
{
  return _HashTable.BucketIterator.currentValue.getter();
}

uint64_t _HashTable.BucketIterator.currentValue.setter()
{
  return _HashTable.BucketIterator.currentValue.setter();
}

Swift::Void __swiftcall _HashTable.BucketIterator.advance()()
{
}

uint64_t static _HashTable.maximumCapacity(forScale:)()
{
  return static _HashTable.maximumCapacity(forScale:)();
}

uint64_t static _HashTable.minimumCapacity(forScale:)()
{
  return static _HashTable.minimumCapacity(forScale:)();
}

uint64_t _HashTable.copy()()
{
  return _HashTable.copy()();
}

uint64_t static _HashTable.scale(forCapacity:)()
{
  return static _HashTable.scale(forCapacity:)();
}

uint64_t _HashTable.init(scale:reservedScale:)()
{
  return _HashTable.init(scale:reservedScale:)();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Logger.init(_:)()
{
  return Logger.init(_:)();
}

uint64_t IRMBBundle.bundleIdentifier.getter()
{
  return IRMBBundle.bundleIdentifier.getter();
}

uint64_t IRMBBundle.isEligibleForAutoRoute.getter()
{
  return IRMBBundle.isEligibleForAutoRoute.getter();
}

uint64_t IRMBBundle.isEligibleForCallToAction.getter()
{
  return IRMBBundle.isEligibleForCallToAction.getter();
}

uint64_t IRMBBundle.isEligibleForOneTapSuggestion.getter()
{
  return IRMBBundle.isEligibleForOneTapSuggestion.getter();
}

uint64_t IRMBBundle.mediaType.getter()
{
  return IRMBBundle.mediaType.getter();
}

uint64_t type metadata accessor for IRMBBundle()
{
  return type metadata accessor for IRMBBundle();
}

uint64_t dispatch thunk of XPCSession.send<A>(_:)()
{
  return dispatch thunk of XPCSession.send<A>(_:)();
}

uint64_t XPCListener.debugDescription.getter()
{
  return XPCListener.debugDescription.getter();
}

uint64_t static XPCListener.InitializationOptions.none.getter()
{
  return static XPCListener.InitializationOptions.none.getter();
}

uint64_t type metadata accessor for XPCListener.InitializationOptions()
{
  return type metadata accessor for XPCListener.InitializationOptions();
}

uint64_t dispatch thunk of XPCListener.IncomingSessionRequest.accept<A>(_:)()
{
  return dispatch thunk of XPCListener.IncomingSessionRequest.accept<A>(_:)();
}

uint64_t XPCListener.init(service:targetQueue:options:incomingSessionHandler:)()
{
  return XPCListener.init(service:targetQueue:options:incomingSessionHandler:)();
}

uint64_t type metadata accessor for XPCListener()
{
  return type metadata accessor for XPCListener();
}

uint64_t XPCReceivedMessage.auditToken.getter()
{
  return XPCReceivedMessage.auditToken.getter();
}

uint64_t XPCReceivedMessage.expectsReply.getter()
{
  return XPCReceivedMessage.expectsReply.getter();
}

uint64_t XPCReceivedMessage.decode<A>(as:)()
{
  return XPCReceivedMessage.decode<A>(as:)();
}

uint64_t XPCReceivedMessage.isSync.getter()
{
  return XPCReceivedMessage.isSync.getter();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

Swift::Void __swiftcall AnyCancellable.cancel()()
{
}

uint64_t AsyncPublisher.makeAsyncIterator()()
{
  return AsyncPublisher.makeAsyncIterator()();
}

uint64_t CurrentValueSubject.value.getter()
{
  return CurrentValueSubject.value.getter();
}

uint64_t Future.init(_:)()
{
  return Future.init(_:)();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t Published.projectedValue.setter()
{
  return Published.projectedValue.setter();
}

uint64_t static Published.subscript.modify()
{
  return static Published.subscript.modify();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.sink(receiveCompletion:receiveValue:)()
{
  return Publisher.sink(receiveCompletion:receiveValue:)();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t Publisher<>.removeDuplicates()()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t Publisher<>.values.getter()
{
  return Publisher<>.values.getter();
}

uint64_t type metadata accessor for NWInterface.InterfaceType()
{
  return type metadata accessor for NWInterface.InterfaceType();
}

uint64_t NWPathMonitor.currentPath.getter()
{
  return NWPathMonitor.currentPath.getter();
}

uint64_t NWPathMonitor.start(queue:)()
{
  return NWPathMonitor.start(queue:)();
}

Swift::Void __swiftcall NWPathMonitor.cancel()()
{
}

uint64_t NWPathMonitor.init()()
{
  return NWPathMonitor.init()();
}

uint64_t type metadata accessor for NWPathMonitor()
{
  return type metadata accessor for NWPathMonitor();
}

uint64_t NWPath.usesInterfaceType(_:)()
{
  return NWPath.usesInterfaceType(_:)();
}

uint64_t type metadata accessor for NWPath()
{
  return type metadata accessor for NWPath();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t Curve25519.Signing.PrivateKey.publicKey.getter()
{
  return Curve25519.Signing.PrivateKey.publicKey.getter();
}

uint64_t Curve25519.Signing.PrivateKey.rawRepresentation.getter()
{
  return Curve25519.Signing.PrivateKey.rawRepresentation.getter();
}

uint64_t Curve25519.Signing.PrivateKey.init<A>(rawRepresentation:)()
{
  return Curve25519.Signing.PrivateKey.init<A>(rawRepresentation:)();
}

uint64_t Curve25519.Signing.PrivateKey.signature<A>(for:)()
{
  return Curve25519.Signing.PrivateKey.signature<A>(for:)();
}

uint64_t Curve25519.Signing.PrivateKey.init()()
{
  return Curve25519.Signing.PrivateKey.init()();
}

uint64_t type metadata accessor for Curve25519.Signing.PrivateKey()
{
  return type metadata accessor for Curve25519.Signing.PrivateKey();
}

uint64_t Curve25519.Signing.PublicKey.isValidSignature<A, B>(_:for:)()
{
  return Curve25519.Signing.PublicKey.isValidSignature<A, B>(_:for:)();
}

uint64_t Curve25519.Signing.PublicKey.rawRepresentation.getter()
{
  return Curve25519.Signing.PublicKey.rawRepresentation.getter();
}

uint64_t Curve25519.Signing.PublicKey.init<A>(rawRepresentation:)()
{
  return Curve25519.Signing.PublicKey.init<A>(rawRepresentation:)();
}

uint64_t type metadata accessor for Curve25519.Signing.PublicKey()
{
  return type metadata accessor for Curve25519.Signing.PublicKey();
}

uint64_t SymmetricKey.withUnsafeBytes<A>(_:)()
{
  return SymmetricKey.withUnsafeBytes<A>(_:)();
}

uint64_t SymmetricKey.init(size:)()
{
  return SymmetricKey.init(size:)();
}

uint64_t type metadata accessor for SymmetricKey()
{
  return type metadata accessor for SymmetricKey();
}

uint64_t static SymmetricKeySize.bits256.getter()
{
  return static SymmetricKeySize.bits256.getter();
}

uint64_t type metadata accessor for SymmetricKeySize()
{
  return type metadata accessor for SymmetricKeySize();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t Dictionary.init(dictionaryLiteral:)()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t Dictionary.Keys.description.getter()
{
  return Dictionary.Keys.description.getter();
}

uint64_t type metadata accessor for Dictionary()
{
  return type metadata accessor for Dictionary();
}

uint64_t Dictionary.subscript.getter()
{
  return Dictionary.subscript.getter();
}

uint64_t Dictionary.subscript.setter()
{
  return Dictionary.subscript.setter();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t dispatch thunk of Hashable.hashValue.getter()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t static Comparable.> infix(_:_:)()
{
  return static Comparable.> infix(_:_:)();
}

uint64_t static Comparable.>= infix(_:_:)()
{
  return static Comparable.>= infix(_:_:)();
}

uint64_t static Comparable.<= infix(_:_:)()
{
  return static Comparable.<= infix(_:_:)();
}

uint64_t ObjectIdentifier.debugDescription.getter()
{
  return ObjectIdentifier.debugDescription.getter();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t String.init(data:encoding:)()
{
  return String.init(data:encoding:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(_:offsetBy:)()
{
  return String.index(_:offsetBy:)();
}

Swift::Void __swiftcall String.append(contentsOf:)(Swift::String contentsOf)
{
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t Sequence.sorted<A>(using:)()
{
  return Sequence.sorted<A>(using:)();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._forceBridgeFromObjectiveC(_:result:)()
{
  return static Array._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t type metadata accessor for CheckedContinuation()
{
  return type metadata accessor for CheckedContinuation();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t AsyncStream.makeAsyncIterator()()
{
  return AsyncStream.makeAsyncIterator()();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.isCancelled.getter()
{
  return static Task<>.isCancelled.getter();
}

uint64_t static Task<>.checkCancellation()()
{
  return static Task<>.checkCancellation()();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)Double._bridgeToObjectiveC()();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

uint64_t Float.description.getter()
{
  return Float.description.getter();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Index._asCocoa.modify()
{
  return Set.Index._asCocoa.modify();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t Collection<>.split<A>(separator:maxSplits:omittingEmptySubsequences:)()
{
  return Collection<>.split<A>(separator:maxSplits:omittingEmptySubsequences:)();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.asyncAndWait<A>(execute:)()
{
  return OS_dispatch_queue.asyncAndWait<A>(execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return NSNotificationCenter.publisher(for:object:)();
}

NSNumber __swiftcall NSNumber.init(BOOLeanLiteral:)(Swift::Bool BOOLeanLiteral)
{
  return (NSNumber)NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hashValue.getter()
{
  return NSObject.hashValue.getter();
}

uint64_t OS_os_log.init(subsystem:category:)()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.localizedCaseInsensitiveContains<A>(_:)()
{
  return StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.isSuperset(of:)()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t dispatch thunk of SetAlgebra.intersection(_:)()
{
  return dispatch thunk of SetAlgebra.intersection(_:)();
}

uint64_t dispatch thunk of SetAlgebra.formUnion(_:)()
{
  return dispatch thunk of SetAlgebra.formUnion(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.occupiedBucket(after:)()
{
  return _HashTable.occupiedBucket(after:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.Index.handleBitPattern.getter()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.contains(_:)()
{
  return __CocoaSet.contains(_:)();
}

uint64_t __CocoaSet.formIndex(after:isUnique:)()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t DecodingError.Context.init(codingPath:debugDescription:underlyingError:)()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t type metadata accessor for DecodingError()
{
  return type metadata accessor for DecodingError();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t ContinuousClock.now.getter()
{
  return ContinuousClock.now.getter();
}

uint64_t ContinuousClock.Instant.duration(to:)()
{
  return ContinuousClock.Instant.duration(to:)();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t ContinuousClock.init()()
{
  return ContinuousClock.init()();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t KeyedDecodingContainer.codingPath.getter()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.allKeys.getter()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t _getErrorEmbeddedNSError<A>(_:)()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

Swift::Void __swiftcall DefaultStringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter()
{
  return static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
}

uint64_t type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy()
{
  return type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
}

uint64_t static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter()
{
  return static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
}

uint64_t type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy()
{
  return type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
}

uint64_t static Duration.UnitsFormatStyle.Unit.milliseconds.getter()
{
  return static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
}

uint64_t static Duration.UnitsFormatStyle.Unit.seconds.getter()
{
  return static Duration.UnitsFormatStyle.Unit.seconds.getter();
}

uint64_t type metadata accessor for Duration.UnitsFormatStyle.Unit()
{
  return type metadata accessor for Duration.UnitsFormatStyle.Unit();
}

uint64_t static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter()
{
  return static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter();
}

uint64_t type metadata accessor for Duration.UnitsFormatStyle.UnitWidth()
{
  return type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
}

uint64_t type metadata accessor for Duration.UnitsFormatStyle()
{
  return type metadata accessor for Duration.UnitsFormatStyle();
}

uint64_t Duration.formatted<A>(_:)()
{
  return Duration.formatted<A>(_:)();
}

uint64_t static Duration.seconds(_:)()
{
  return static Duration.seconds(_:)();
}

uint64_t dispatch thunk of OptionSet.init(rawValue:)()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

uint64_t BiomeLibrary()
{
  return _BiomeLibrary();
}

int CC_MD5_Final(unsigned __int8 *md, CC_MD5_CTX *c)
{
  return _CC_MD5_Final(md, c);
}

int CC_MD5_Update(CC_MD5_CTX *c, const void *data, CC_LONG len)
{
  return _CC_MD5_Update(c, data, len);
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return _CC_SHA1_Final(md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return _CC_SHA1_Init(c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return _CC_SHA1_Update(c, data, len);
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return _CC_SHA256_Final(md, c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return _CC_SHA256_Update(c, data, len);
}

int CC_SHA512_Final(unsigned __int8 *md, CC_SHA512_CTX *c)
{
  return _CC_SHA512_Final(md, c);
}

int CC_SHA512_Update(CC_SHA512_CTX *c, const void *data, CC_LONG len)
{
  return _CC_SHA512_Update(c, data, len);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return _CFErrorGetCode(err);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return _CFRunLoopGetMain();
}

CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation)
{
  return _CFStringCreateWithBytes(alloc, bytes, numBytes, encoding, isExternalRepresentation);
}

CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory)
{
  return _CFURLCreateWithFileSystemPath(allocator, filePath, pathStyle, isDirectory);
}

uint64_t HardwareAddressToCString()
{
  return _HardwareAddressToCString();
}

uint64_t IDSCopyIDForDevice()
{
  return _IDSCopyIDForDevice();
}

uint64_t IDSCopyIDForEmailAddress()
{
  return _IDSCopyIDForEmailAddress();
}

uint64_t IDSCopyLocalDeviceUniqueID()
{
  return _IDSCopyLocalDeviceUniqueID();
}

uint64_t IDSCopyTokenAndIDForTokenWithID()
{
  return _IDSCopyTokenAndIDForTokenWithID();
}

IOReturn IOAllowPowerChange(io_connect_t kernelPort, intptr_t notificationID)
{
  return _IOAllowPowerChange(kernelPort, notificationID);
}

uint64_t IOHIDEventCreateKeyboardEvent()
{
  return _IOHIDEventCreateKeyboardEvent();
}

uint64_t IOHIDEventCreateUnicodeEvent()
{
  return _IOHIDEventCreateUnicodeEvent();
}

uint64_t IOHIDEventSystemClientCreate()
{
  return _IOHIDEventSystemClientCreate();
}

uint64_t IOHIDEventSystemClientDispatchEvent()
{
  return _IOHIDEventSystemClientDispatchEvent();
}

uint64_t IOHIDUserDeviceCreate()
{
  return _IOHIDUserDeviceCreate();
}

uint64_t IOHIDUserDeviceHandleReport()
{
  return _IOHIDUserDeviceHandleReport();
}

IOReturn IOHIDUserDeviceHandleReportWithTimeStamp(IOHIDUserDeviceRef device, uint64_t timestamp, const uint8_t *report, CFIndex reportLength)
{
  return _IOHIDUserDeviceHandleReportWithTimeStamp(device, timestamp, report, reportLength);
}

CFRunLoopSourceRef IONotificationPortGetRunLoopSource(IONotificationPortRef notify)
{
  return _IONotificationPortGetRunLoopSource(notify);
}

IOReturn IOPMAssertionCreateWithDescription(CFStringRef AssertionType, CFStringRef Name, CFStringRef Details, CFStringRef HumanReadableReason, CFStringRef LocalizationBundlePath, CFTimeInterval Timeout, CFStringRef TimeoutAction, IOPMAssertionID *AssertionID)
{
  return _IOPMAssertionCreateWithDescription(AssertionType, Name, Details, HumanReadableReason, LocalizationBundlePath, Timeout, TimeoutAction, AssertionID);
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return _IOPMAssertionRelease(AssertionID);
}

io_connect_t IORegisterForSystemPower(void *refcon, IONotificationPortRef *thePortRef, IOServiceInterestCallback callback, io_object_t *notifier)
{
  return _IORegisterForSystemPower(refcon, thePortRef, callback, notifier);
}

uint64_t MCLockdownSetDeviceName()
{
  return _MCLockdownSetDeviceName();
}

uint64_t MGCancelNotifications()
{
  return _MGCancelNotifications();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGRegisterForUpdates()
{
  return _MGRegisterForUpdates();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return _MKBDeviceUnlockedSinceBoot();
}

uint64_t MRAVAirPlaySecuritySettingsCreate()
{
  return _MRAVAirPlaySecuritySettingsCreate();
}

uint64_t MRAVAirPlaySecuritySettingsCreateExternalRepresentation()
{
  return _MRAVAirPlaySecuritySettingsCreateExternalRepresentation();
}

uint64_t MRAVEndpointGetActiveSystemEndpointUID()
{
  return _MRAVEndpointGetActiveSystemEndpointUID();
}

uint64_t MRAVEndpointGetExternalDevice()
{
  return _MRAVEndpointGetExternalDevice();
}

uint64_t MRAVEndpointGetLocalEndpoint()
{
  return _MRAVEndpointGetLocalEndpoint();
}

uint64_t MRAVEndpointResolveActiveSystemEndpointWithTimeout()
{
  return _MRAVEndpointResolveActiveSystemEndpointWithTimeout();
}

uint64_t MRAVEndpointResolveActiveSystemEndpointWithType()
{
  return _MRAVEndpointResolveActiveSystemEndpointWithType();
}

uint64_t MRAVEndpointUpdateActiveSystemEndpointWithReason()
{
  return _MRAVEndpointUpdateActiveSystemEndpointWithReason();
}

uint64_t MRAVOutputContextCopyUniqueIdentifier()
{
  return _MRAVOutputContextCopyUniqueIdentifier();
}

uint64_t MRAVOutputContextGetSharedAudioPresentationContext()
{
  return _MRAVOutputContextGetSharedAudioPresentationContext();
}

uint64_t MRAVOutputDeviceArrayDescription()
{
  return _MRAVOutputDeviceArrayDescription();
}

uint64_t MRAVOutputDeviceSubtypeCopyDescription()
{
  return _MRAVOutputDeviceSubtypeCopyDescription();
}

uint64_t MRAVOutputDeviceTypeCopyDescription()
{
  return _MRAVOutputDeviceTypeCopyDescription();
}

uint64_t MRAddArrayToXPCMessage()
{
  return _MRAddArrayToXPCMessage();
}

uint64_t MRAddClientErrorToXPCMessage()
{
  return _MRAddClientErrorToXPCMessage();
}

uint64_t MRAddClientToXPCMessage()
{
  return _MRAddClientToXPCMessage();
}

uint64_t MRAddCommandResultToXPCMessage()
{
  return _MRAddCommandResultToXPCMessage();
}

uint64_t MRAddContentItemsToUserInfo()
{
  return _MRAddContentItemsToUserInfo();
}

uint64_t MRAddDataToXPCMessage()
{
  return _MRAddDataToXPCMessage();
}

uint64_t MRAddDeviceInfoToUserInfo()
{
  return _MRAddDeviceInfoToUserInfo();
}

uint64_t MRAddDeviceInfoToXPCMessage()
{
  return _MRAddDeviceInfoToXPCMessage();
}

uint64_t MRAddDiagnosticToXPCMessage()
{
  return _MRAddDiagnosticToXPCMessage();
}

uint64_t MRAddDistantEndpointToXPCMessage()
{
  return _MRAddDistantEndpointToXPCMessage();
}

uint64_t MRAddErrorToXPCMessage()
{
  return _MRAddErrorToXPCMessage();
}

uint64_t MRAddOriginToXPCMessage()
{
  return _MRAddOriginToXPCMessage();
}

uint64_t MRAddPlaybackQueueCapabilitiesToXPCMessage()
{
  return _MRAddPlaybackQueueCapabilitiesToXPCMessage();
}

uint64_t MRAddPlaybackQueueRequestToXPCMessage()
{
  return _MRAddPlaybackQueueRequestToXPCMessage();
}

uint64_t MRAddPlayerPathToUserInfo()
{
  return _MRAddPlayerPathToUserInfo();
}

uint64_t MRAddPlayerPathToXPCMessage()
{
  return _MRAddPlayerPathToXPCMessage();
}

uint64_t MRAddPlayerToXPCMessage()
{
  return _MRAddPlayerToXPCMessage();
}

uint64_t MRAddPropertyListToXPCMessage()
{
  return _MRAddPropertyListToXPCMessage();
}

uint64_t MRAddProtobufToXPCMessage()
{
  return _MRAddProtobufToXPCMessage();
}

uint64_t MRAddSupportedCommandsDataToXPCMessage()
{
  return _MRAddSupportedCommandsDataToXPCMessage();
}

uint64_t MRAnalyticsCompositionForDeviceInfo()
{
  return _MRAnalyticsCompositionForDeviceInfo();
}

uint64_t MRAnalyticsCompositionForLocalDevice()
{
  return _MRAnalyticsCompositionForLocalDevice();
}

uint64_t MRAnalyticsDeviceCompositionDescription()
{
  return _MRAnalyticsDeviceCompositionDescription();
}

uint64_t MRAnalyticsSendEvent()
{
  return _MRAnalyticsSendEvent();
}

uint64_t MRAnalyticsTrackTopologyChangeEvent()
{
  return _MRAnalyticsTrackTopologyChangeEvent();
}

uint64_t MRBundlePermittedForGroupSessions()
{
  return _MRBundlePermittedForGroupSessions();
}

uint64_t MRComputeBaseGroupID()
{
  return _MRComputeBaseGroupID();
}

uint64_t MRComputeBaseRouteUID()
{
  return _MRComputeBaseRouteUID();
}

uint64_t MRComputeGroupContextID()
{
  return _MRComputeGroupContextID();
}

uint64_t MRContentItemCopyMinimalReadableDescription()
{
  return _MRContentItemCopyMinimalReadableDescription();
}

uint64_t MRContentItemCreateExternalRepresentation()
{
  return _MRContentItemCreateExternalRepresentation();
}

uint64_t MRContentItemCreateFromRequest()
{
  return _MRContentItemCreateFromRequest();
}

uint64_t MRContentItemEqualToItem()
{
  return _MRContentItemEqualToItem();
}

uint64_t MRContentItemGetAncestorIdentifier()
{
  return _MRContentItemGetAncestorIdentifier();
}

uint64_t MRContentItemGetArtworkData()
{
  return _MRContentItemGetArtworkData();
}

uint64_t MRContentItemGetElapsedTimeTimestamp()
{
  return _MRContentItemGetElapsedTimeTimestamp();
}

uint64_t MRContentItemGetPlaybackRate()
{
  return _MRContentItemGetPlaybackRate();
}

uint64_t MRContentItemIsEmpty()
{
  return _MRContentItemIsEmpty();
}

uint64_t MRContentItemSetArtworkData()
{
  return _MRContentItemSetArtworkData();
}

uint64_t MRContentItemsCopyMinimalReadableDescription()
{
  return _MRContentItemsCopyMinimalReadableDescription();
}

uint64_t MRContentItemsCreateFromRequest()
{
  return _MRContentItemsCreateFromRequest();
}

uint64_t MRCopyDeviceInfoPath()
{
  return _MRCopyDeviceInfoPath();
}

uint64_t MRCopyDeviceName()
{
  return _MRCopyDeviceName();
}

uint64_t MRCopyMediaRemoteLibraryDirectory()
{
  return _MRCopyMediaRemoteLibraryDirectory();
}

uint64_t MRCopyRegisteredTransactionDescriptions()
{
  return _MRCopyRegisteredTransactionDescriptions();
}

uint64_t MRCreateAppActivityFromXPCMessage()
{
  return _MRCreateAppActivityFromXPCMessage();
}

uint64_t MRCreateArrayFromData()
{
  return _MRCreateArrayFromData();
}

uint64_t MRCreateClientErrorFromXPCMessage()
{
  return _MRCreateClientErrorFromXPCMessage();
}

uint64_t MRCreateCommandResultFromXPCMessage()
{
  return _MRCreateCommandResultFromXPCMessage();
}

uint64_t MRCreateContentItemsFromXPCMessage()
{
  return _MRCreateContentItemsFromXPCMessage();
}

uint64_t MRCreateDataFromArray()
{
  return _MRCreateDataFromArray();
}

uint64_t MRCreateDataFromObject()
{
  return _MRCreateDataFromObject();
}

uint64_t MRCreateDataFromXPCMessage()
{
  return _MRCreateDataFromXPCMessage();
}

uint64_t MRCreateDecodedUserInfo()
{
  return _MRCreateDecodedUserInfo();
}

uint64_t MRCreateDiagnosticFromXPCMessage()
{
  return _MRCreateDiagnosticFromXPCMessage();
}

uint64_t MRCreateDonatedQosBlock()
{
  return _MRCreateDonatedQosBlock();
}

uint64_t MRCreateEncodedUserInfo()
{
  return _MRCreateEncodedUserInfo();
}

uint64_t MRCreateFromData()
{
  return _MRCreateFromData();
}

uint64_t MRCreateIndentedDebugDescriptionFromArray()
{
  return _MRCreateIndentedDebugDescriptionFromArray();
}

uint64_t MRCreateIndentedDebugDescriptionFromDictionary()
{
  return _MRCreateIndentedDebugDescriptionFromDictionary();
}

uint64_t MRCreateIndentedDebugDescriptionFromObject()
{
  return _MRCreateIndentedDebugDescriptionFromObject();
}

uint64_t MRCreateOriginFromXPCMessage()
{
  return _MRCreateOriginFromXPCMessage();
}

uint64_t MRCreatePlaybackQueueCapabilitiesFromXPCMessage()
{
  return _MRCreatePlaybackQueueCapabilitiesFromXPCMessage();
}

uint64_t MRCreatePlaybackQueueFromXPCMessage()
{
  return _MRCreatePlaybackQueueFromXPCMessage();
}

uint64_t MRCreatePlaybackQueueRequestFromXPCMessage()
{
  return _MRCreatePlaybackQueueRequestFromXPCMessage();
}

uint64_t MRCreatePlayerPathArrayFromXPCMessage()
{
  return _MRCreatePlayerPathArrayFromXPCMessage();
}

uint64_t MRCreatePlayerPathFromXPCMessage()
{
  return _MRCreatePlayerPathFromXPCMessage();
}

uint64_t MRCreatePropertyListFromXPCMessage()
{
  return _MRCreatePropertyListFromXPCMessage();
}

uint64_t MRCreateProtobufFromXPCMessage()
{
  return _MRCreateProtobufFromXPCMessage();
}

uint64_t MRCreateRequestDetailsFromXPCMessage()
{
  return _MRCreateRequestDetailsFromXPCMessage();
}

uint64_t MRCreateStringFromXPCMessage()
{
  return _MRCreateStringFromXPCMessage();
}

uint64_t MRCreateSupportedCommandsDataFromXPCMessage()
{
  return _MRCreateSupportedCommandsDataFromXPCMessage();
}

uint64_t MRCreateXPCMessage()
{
  return _MRCreateXPCMessage();
}

uint64_t MRDataCreateStringRepresentation()
{
  return _MRDataCreateStringRepresentation();
}

uint64_t MRDeviceSupportsExternalTouchBarUI()
{
  return _MRDeviceSupportsExternalTouchBarUI();
}

uint64_t MRDiagnosticCopyInfo()
{
  return _MRDiagnosticCopyInfo();
}

uint64_t MRDiagnosticCreate()
{
  return _MRDiagnosticCreate();
}

uint64_t MRDictionaryCalculateDeltas()
{
  return _MRDictionaryCalculateDeltas();
}

uint64_t MRExternalDeviceConnectOptionsCopyDescription()
{
  return _MRExternalDeviceConnectOptionsCopyDescription();
}

uint64_t MRExternalDeviceConnectionStateCopyDescription()
{
  return _MRExternalDeviceConnectionStateCopyDescription();
}

uint64_t MRExternalDeviceCopyCustomOrigin()
{
  return _MRExternalDeviceCopyCustomOrigin();
}

uint64_t MRExternalDeviceCopyName()
{
  return _MRExternalDeviceCopyName();
}

uint64_t MRGameControllerDigitizerCreateWithHIDTouchEvent()
{
  return _MRGameControllerDigitizerCreateWithHIDTouchEvent();
}

uint64_t MRGameControllerEventCreateWithDigitizer()
{
  return _MRGameControllerEventCreateWithDigitizer();
}

uint64_t MRGameControllerInputModeCreateDescription()
{
  return _MRGameControllerInputModeCreateDescription();
}

uint64_t MRGetClientFromUserInfo()
{
  return _MRGetClientFromUserInfo();
}

uint64_t MRGetContentItemsFromUserInfo()
{
  return _MRGetContentItemsFromUserInfo();
}

uint64_t MRGetDeviceInfoFromUserInfo()
{
  return _MRGetDeviceInfoFromUserInfo();
}

uint64_t MRGetOriginFromUserInfo()
{
  return _MRGetOriginFromUserInfo();
}

uint64_t MRGetPlayerPathFromUserInfo()
{
  return _MRGetPlayerPathFromUserInfo();
}

uint64_t MRGetSharedService()
{
  return _MRGetSharedService();
}

uint64_t MRGroupSessionNearbyContactDiscoveryEnabled()
{
  return _MRGroupSessionNearbyContactDiscoveryEnabled();
}

uint64_t MRGroupSessionRouteMakeName()
{
  return _MRGroupSessionRouteMakeName();
}

uint64_t MRGroupSessionRouteTypeDescription()
{
  return _MRGroupSessionRouteTypeDescription();
}

uint64_t MRGroupSessionRouteTypeForOutputDevices()
{
  return _MRGroupSessionRouteTypeForOutputDevices();
}

uint64_t MRGroupSessionRouteTypeToModelIdentifier()
{
  return _MRGroupSessionRouteTypeToModelIdentifier();
}

uint64_t MRGroupSessionSubsystemGetNotificationQueue()
{
  return _MRGroupSessionSubsystemGetNotificationQueue();
}

uint64_t MRGroupSessionSubsystemGetQueue()
{
  return _MRGroupSessionSubsystemGetQueue();
}

uint64_t MRGroupTopologyModificationRequestTypeDescription()
{
  return _MRGroupTopologyModificationRequestTypeDescription();
}

uint64_t MRIRRouteBuiltInSpeakerIdentifier()
{
  return _MRIRRouteBuiltInSpeakerIdentifier();
}

uint64_t MRInvalidateTransactions()
{
  return _MRInvalidateTransactions();
}

uint64_t MRLocalizedString()
{
  return _MRLocalizedString();
}

uint64_t MRLocalizedStringWithFormat()
{
  return _MRLocalizedStringWithFormat();
}

uint64_t MRLogCategoryConnections()
{
  return _MRLogCategoryConnections();
}

uint64_t MRLogCategoryDiscovery()
{
  return _MRLogCategoryDiscovery();
}

uint64_t MRLogCategoryDiscoveryOversize()
{
  return _MRLogCategoryDiscoveryOversize();
}

uint64_t MRLogCategoryDiscoveryUpdates()
{
  return _MRLogCategoryDiscoveryUpdates();
}

uint64_t MRLogCategoryMigrationOversize()
{
  return _MRLogCategoryMigrationOversize();
}

uint64_t MRLyricsEventCreateEnd()
{
  return _MRLyricsEventCreateEnd();
}

uint64_t MRLyricsEventGetEndDate()
{
  return _MRLyricsEventGetEndDate();
}

uint64_t MRLyricsEventGetStartDate()
{
  return _MRLyricsEventGetStartDate();
}

uint64_t MRLyricsEventGetToken()
{
  return _MRLyricsEventGetToken();
}

uint64_t MRLyricsItemTokenGetIdentifier()
{
  return _MRLyricsItemTokenGetIdentifier();
}

uint64_t MRMediaRemoteAVOutputDeviceIsLocalForAirPlay()
{
  return _MRMediaRemoteAVOutputDeviceIsLocalForAirPlay();
}

uint64_t MRMediaRemoteActiveEndpointChangeTypeCopyDescription()
{
  return _MRMediaRemoteActiveEndpointChangeTypeCopyDescription();
}

uint64_t MRMediaRemoteActiveEndpointTypeCopyDescription()
{
  return _MRMediaRemoteActiveEndpointTypeCopyDescription();
}

uint64_t MRMediaRemoteAddPlayerPathInvalidationHandler()
{
  return _MRMediaRemoteAddPlayerPathInvalidationHandler();
}

uint64_t MRMediaRemoteAirPlayReceiverCopyAirPlayGroupIdentity()
{
  return _MRMediaRemoteAirPlayReceiverCopyAirPlayGroupIdentity();
}

uint64_t MRMediaRemoteAirPlayReceiverCopyGroupIdentity()
{
  return _MRMediaRemoteAirPlayReceiverCopyGroupIdentity();
}

uint64_t MRMediaRemoteAirPlayReceiverCopyPairingIdentity()
{
  return _MRMediaRemoteAirPlayReceiverCopyPairingIdentity();
}

uint64_t MRMediaRemoteAirPlayReceiverGetIsGroupLeader()
{
  return _MRMediaRemoteAirPlayReceiverGetIsGroupLeader();
}

uint64_t MRMediaRemoteApplicationIsSystemAppleTVApplication()
{
  return _MRMediaRemoteApplicationIsSystemAppleTVApplication();
}

uint64_t MRMediaRemoteApplicationIsSystemApplication()
{
  return _MRMediaRemoteApplicationIsSystemApplication();
}

uint64_t MRMediaRemoteApplicationIsSystemBooksApplication()
{
  return _MRMediaRemoteApplicationIsSystemBooksApplication();
}

uint64_t MRMediaRemoteApplicationIsSystemMediaApplication()
{
  return _MRMediaRemoteApplicationIsSystemMediaApplication();
}

uint64_t MRMediaRemoteApplicationIsSystemPodcastApplication()
{
  return _MRMediaRemoteApplicationIsSystemPodcastApplication();
}

uint64_t MRMediaRemoteCommandCreateDescription()
{
  return _MRMediaRemoteCommandCreateDescription();
}

uint64_t MRMediaRemoteCommandIsNavigational()
{
  return _MRMediaRemoteCommandIsNavigational();
}

uint64_t MRMediaRemoteCommandOptionsToProtobuf()
{
  return _MRMediaRemoteCommandOptionsToProtobuf();
}

uint64_t MRMediaRemoteCommandSupportsAttribution()
{
  return _MRMediaRemoteCommandSupportsAttribution();
}

uint64_t MRMediaRemoteCommandToProtobuf()
{
  return _MRMediaRemoteCommandToProtobuf();
}

uint64_t MRMediaRemoteCopyCommandDescription()
{
  return _MRMediaRemoteCopyCommandDescription();
}

uint64_t MRMediaRemoteCopyDeviceUID()
{
  return _MRMediaRemoteCopyDeviceUID();
}

uint64_t MRMediaRemoteCopyEntitlements()
{
  return _MRMediaRemoteCopyEntitlements();
}

uint64_t MRMediaRemoteCopyHardwareRemoteBehaviorDescription()
{
  return _MRMediaRemoteCopyHardwareRemoteBehaviorDescription();
}

uint64_t MRMediaRemoteCopyLocalAirPlayGroupName()
{
  return _MRMediaRemoteCopyLocalAirPlayGroupName();
}

uint64_t MRMediaRemoteCopyLocalAirPlayReceiverClusterType()
{
  return _MRMediaRemoteCopyLocalAirPlayReceiverClusterType();
}

uint64_t MRMediaRemoteCopyLocalAirPlayReceiverTightSyncIdentity()
{
  return _MRMediaRemoteCopyLocalAirPlayReceiverTightSyncIdentity();
}

uint64_t MRMediaRemoteCopyLocalAirPlaySenderDefaultGroupIdentity()
{
  return _MRMediaRemoteCopyLocalAirPlaySenderDefaultGroupIdentity();
}

uint64_t MRMediaRemoteCopyLocalClusterID()
{
  return _MRMediaRemoteCopyLocalClusterID();
}

uint64_t MRMediaRemoteCopyLocalClusterLeaderIdentity()
{
  return _MRMediaRemoteCopyLocalClusterLeaderIdentity();
}

uint64_t MRMediaRemoteCopyLocalDeviceAirPlayReceiverBundleID()
{
  return _MRMediaRemoteCopyLocalDeviceAirPlayReceiverBundleID();
}

uint64_t MRMediaRemoteCopyLocalDeviceAirPlayReceiverDisplayID()
{
  return _MRMediaRemoteCopyLocalDeviceAirPlayReceiverDisplayID();
}

uint64_t MRMediaRemoteCopyLocalDeviceSystemBooksApplicationDisplayID()
{
  return _MRMediaRemoteCopyLocalDeviceSystemBooksApplicationDisplayID();
}

uint64_t MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID()
{
  return _MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID();
}

uint64_t MRMediaRemoteCopyLocalDeviceSystemPodcastApplicationDisplayID()
{
  return _MRMediaRemoteCopyLocalDeviceSystemPodcastApplicationDisplayID();
}

uint64_t MRMediaRemoteCopyLocalizedDisplayID()
{
  return _MRMediaRemoteCopyLocalizedDisplayID();
}

uint64_t MRMediaRemoteCopyPlaybackStateDescription()
{
  return _MRMediaRemoteCopyPlaybackStateDescription();
}

uint64_t MRMediaRemoteCopyReadableDictionaryDescription()
{
  return _MRMediaRemoteCopyReadableDictionaryDescription();
}

uint64_t MRMediaRemoteCopyRouteDiscoveryModeDescription()
{
  return _MRMediaRemoteCopyRouteDiscoveryModeDescription();
}

uint64_t MRMediaRemoteCopySenderDefaultGroupUID()
{
  return _MRMediaRemoteCopySenderDefaultGroupUID();
}

uint64_t MRMediaRemoteCopySetPickedRouteOptionsDescription()
{
  return _MRMediaRemoteCopySetPickedRouteOptionsDescription();
}

uint64_t MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands()
{
  return _MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands();
}

uint64_t MRMediaRemoteCreateError()
{
  return _MRMediaRemoteCreateError();
}

uint64_t MRMediaRemoteCreateErrorWithDescription()
{
  return _MRMediaRemoteCreateErrorWithDescription();
}

uint64_t MRMediaRemoteErrorCodeIsInformational()
{
  return _MRMediaRemoteErrorCodeIsInformational();
}

uint64_t MRMediaRemoteErrorCopyDescription()
{
  return _MRMediaRemoteErrorCopyDescription();
}

uint64_t MRMediaRemoteErrorFromCommandStatuses()
{
  return _MRMediaRemoteErrorFromCommandStatuses();
}

uint64_t MRMediaRemoteErrorIsInformational()
{
  return _MRMediaRemoteErrorIsInformational();
}

uint64_t MRMediaRemoteGetDeviceUIDWithRetryIntervals()
{
  return _MRMediaRemoteGetDeviceUIDWithRetryIntervals();
}

uint64_t MRMediaRemoteGetIsAirPlayActive()
{
  return _MRMediaRemoteGetIsAirPlayActive();
}

uint64_t MRMediaRemoteGetLocalClusterSize()
{
  return _MRMediaRemoteGetLocalClusterSize();
}

uint64_t MRMediaRemoteGetLocalGroupContainsDiscoverableGroupLeader()
{
  return _MRMediaRemoteGetLocalGroupContainsDiscoverableGroupLeader();
}

uint64_t MRMediaRemoteGetParentGroupContainsDiscoverableGroupLeader()
{
  return _MRMediaRemoteGetParentGroupContainsDiscoverableGroupLeader();
}

uint64_t MRMediaRemoteGetPickedRoutedVolumeControlCapabilities()
{
  return _MRMediaRemoteGetPickedRoutedVolumeControlCapabilities();
}

uint64_t MRMediaRemoteGetSupportedCommandsForClient()
{
  return _MRMediaRemoteGetSupportedCommandsForClient();
}

uint64_t MRMediaRemoteGetSupportedCommandsForPlayer()
{
  return _MRMediaRemoteGetSupportedCommandsForPlayer();
}

uint64_t MRMediaRemoteIsClusterLeader()
{
  return _MRMediaRemoteIsClusterLeader();
}

uint64_t MRMediaRemoteNowPlayingPing()
{
  return _MRMediaRemoteNowPlayingPing();
}

uint64_t MRMediaRemotePickedRouteVolumeControlCapabilitiesCopyDescription()
{
  return _MRMediaRemotePickedRouteVolumeControlCapabilitiesCopyDescription();
}

uint64_t MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer()
{
  return _MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer();
}

uint64_t MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequestForPlayer()
{
  return _MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequestForPlayer();
}

uint64_t MRMediaRemotePlaybackQueueDataSourceInvalidateWithPlaybackQueueForPlayer()
{
  return _MRMediaRemotePlaybackQueueDataSourceInvalidateWithPlaybackQueueForPlayer();
}

uint64_t MRMediaRemotePlaybackQueueDataSourceSetRequestCallback()
{
  return _MRMediaRemotePlaybackQueueDataSourceSetRequestCallback();
}

uint64_t MRMediaRemotePlaybackSessionMigrateForPlayer()
{
  return _MRMediaRemotePlaybackSessionMigrateForPlayer();
}

uint64_t MRMediaRemotePlaybackSessionRequest()
{
  return _MRMediaRemotePlaybackSessionRequest();
}

uint64_t MRMediaRemotePlaybackSessionSetMigrateBeginCallbackForOrigin()
{
  return _MRMediaRemotePlaybackSessionSetMigrateBeginCallbackForOrigin();
}

uint64_t MRMediaRemotePlaybackSessionSetMigrateEndCallbackForOrigin()
{
  return _MRMediaRemotePlaybackSessionSetMigrateEndCallbackForOrigin();
}

uint64_t MRMediaRemotePlaybackSessionSetRequestCallbackForOrigin()
{
  return _MRMediaRemotePlaybackSessionSetRequestCallbackForOrigin();
}

uint64_t MRMediaRemotePlaybackStateIsAdvancing()
{
  return _MRMediaRemotePlaybackStateIsAdvancing();
}

uint64_t MRMediaRemotePostClientNotification()
{
  return _MRMediaRemotePostClientNotification();
}

uint64_t MRMediaRemoteRegisterForNowPlayingNotifications()
{
  return _MRMediaRemoteRegisterForNowPlayingNotifications();
}

uint64_t MRMediaRemoteRemoteSendLyricsEvent()
{
  return _MRMediaRemoteRemoteSendLyricsEvent();
}

uint64_t MRMediaRemoteRemoveClientForOrigin()
{
  return _MRMediaRemoteRemoveClientForOrigin();
}

uint64_t MRMediaRemoteRemovePlayer()
{
  return _MRMediaRemoteRemovePlayer();
}

uint64_t MRMediaRemoteRemovePlayerPathInvalidationHandler()
{
  return _MRMediaRemoteRemovePlayerPathInvalidationHandler();
}

uint64_t MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync()
{
  return _MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync();
}

uint64_t MRMediaRemoteSendCommandErrorDescription()
{
  return _MRMediaRemoteSendCommandErrorDescription();
}

uint64_t MRMediaRemoteSendCommandForOrigin()
{
  return _MRMediaRemoteSendCommandForOrigin();
}

uint64_t MRMediaRemoteSendCommandForOriginWithReply()
{
  return _MRMediaRemoteSendCommandForOriginWithReply();
}

uint64_t MRMediaRemoteSendCommandToPlayer()
{
  return _MRMediaRemoteSendCommandToPlayer();
}

uint64_t MRMediaRemoteSendCommandToPlayerWithResult()
{
  return _MRMediaRemoteSendCommandToPlayerWithResult();
}

uint64_t MRMediaRemoteSendImplicitCommandsForOptions()
{
  return _MRMediaRemoteSendImplicitCommandsForOptions();
}

uint64_t MRMediaRemoteSendPlaybackSession()
{
  return _MRMediaRemoteSendPlaybackSession();
}

uint64_t MRMediaRemoteSendPlaybackSessionMigrateBegin()
{
  return _MRMediaRemoteSendPlaybackSessionMigrateBegin();
}

uint64_t MRMediaRemoteSendPlaybackSessionMigrateEnd()
{
  return _MRMediaRemoteSendPlaybackSessionMigrateEnd();
}

uint64_t MRMediaRemoteServicePresentRouteAuthorizationStatus()
{
  return _MRMediaRemoteServicePresentRouteAuthorizationStatus();
}

uint64_t MRMediaRemoteServicePromptRouteAuthorization()
{
  return _MRMediaRemoteServicePromptRouteAuthorization();
}

uint64_t MRMediaRemoteServiceSetOriginClientProperties()
{
  return _MRMediaRemoteServiceSetOriginClientProperties();
}

uint64_t MRMediaRemoteServiceSetPlayerClientProperties()
{
  return _MRMediaRemoteServiceSetPlayerClientProperties();
}

uint64_t MRMediaRemoteSetBeginLyricsEventCallback()
{
  return _MRMediaRemoteSetBeginLyricsEventCallback();
}

uint64_t MRMediaRemoteSetCanBeNowPlayingForPlayer()
{
  return _MRMediaRemoteSetCanBeNowPlayingForPlayer();
}

uint64_t MRMediaRemoteSetClientProperties()
{
  return _MRMediaRemoteSetClientProperties();
}

uint64_t MRMediaRemoteSetClusterLeader()
{
  return _MRMediaRemoteSetClusterLeader();
}

uint64_t MRMediaRemoteSetCommandHandler()
{
  return _MRMediaRemoteSetCommandHandler();
}

uint64_t MRMediaRemoteSetCommandHandlerCallbackForOrigin()
{
  return _MRMediaRemoteSetCommandHandlerCallbackForOrigin();
}

uint64_t MRMediaRemoteSetDefaultSupportedCommandsForClient()
{
  return _MRMediaRemoteSetDefaultSupportedCommandsForClient();
}

uint64_t MRMediaRemoteSetEndLyricsEventCallback()
{
  return _MRMediaRemoteSetEndLyricsEventCallback();
}

uint64_t MRMediaRemoteSetNowPlayingClientForOrigin()
{
  return _MRMediaRemoteSetNowPlayingClientForOrigin();
}

uint64_t MRMediaRemoteSetNowPlayingPlayer()
{
  return _MRMediaRemoteSetNowPlayingPlayer();
}

uint64_t MRMediaRemoteSetPickedRouteHasVolumeControlForOrigin()
{
  return _MRMediaRemoteSetPickedRouteHasVolumeControlForOrigin();
}

uint64_t MRMediaRemoteSetPickedRouteVolumeControlCapabilities()
{
  return _MRMediaRemoteSetPickedRouteVolumeControlCapabilities();
}

uint64_t MRMediaRemoteSetPlaybackQueue()
{
  return _MRMediaRemoteSetPlaybackQueue();
}

uint64_t MRMediaRemoteSetPlaybackQueueCapabilities()
{
  return _MRMediaRemoteSetPlaybackQueueCapabilities();
}

uint64_t MRMediaRemoteSetPlaybackStateForPlayer()
{
  return _MRMediaRemoteSetPlaybackStateForPlayer();
}

uint64_t MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp()
{
  return _MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp();
}

uint64_t MRMediaRemoteSetPlayerProperties()
{
  return _MRMediaRemoteSetPlayerProperties();
}

uint64_t MRMediaRemoteSetSupportedCommandsForPlayer()
{
  return _MRMediaRemoteSetSupportedCommandsForPlayer();
}

uint64_t MRMediaRemoteSetWantsNowPlayingNotifications()
{
  return _MRMediaRemoteSetWantsNowPlayingNotifications();
}

uint64_t MRMediaRemoteSetWantsVolumeControlNotifications()
{
  return _MRMediaRemoteSetWantsVolumeControlNotifications();
}

uint64_t MRMediaRemoteSyncClientProperties()
{
  return _MRMediaRemoteSyncClientProperties();
}

uint64_t MRMediaRemoteUnregisterForNowPlayingNotifications()
{
  return _MRMediaRemoteUnregisterForNowPlayingNotifications();
}

uint64_t MRMediaRemoteUpdateClientProperties()
{
  return _MRMediaRemoteUpdateClientProperties();
}

uint64_t MRMediaRemoteUpdatePlayerProperties()
{
  return _MRMediaRemoteUpdatePlayerProperties();
}

uint64_t MRMediaRemoteVolumeControlAdjustmentDescription()
{
  return _MRMediaRemoteVolumeControlAdjustmentDescription();
}

uint64_t MRMediaRemoteVolumeControlCapabilitiesDescription()
{
  return _MRMediaRemoteVolumeControlCapabilitiesDescription();
}

uint64_t MRMusicHandoffSessionGetQueue()
{
  return _MRMusicHandoffSessionGetQueue();
}

uint64_t MRNotificationServiceClientPostNotificationCallback()
{
  return _MRNotificationServiceClientPostNotificationCallback();
}

uint64_t MRNowPlayingClientCopyBundleIdentifierExtendedHierarchy()
{
  return _MRNowPlayingClientCopyBundleIdentifierExtendedHierarchy();
}

uint64_t MRNowPlayingPlayerPathEqualToPlayerPath()
{
  return _MRNowPlayingPlayerPathEqualToPlayerPath();
}

uint64_t MRNowPlayingPlayerPathResolveExternalDevicePlayerPath()
{
  return _MRNowPlayingPlayerPathResolveExternalDevicePlayerPath();
}

uint64_t MROutputDeviceSubtypeFromGroupSessionRoute()
{
  return _MROutputDeviceSubtypeFromGroupSessionRoute();
}

uint64_t MROutputDeviceTypeFromGroupSessionRoute()
{
  return _MROutputDeviceTypeFromGroupSessionRoute();
}

uint64_t MRPairedDeviceCopyDeltaDescription()
{
  return _MRPairedDeviceCopyDeltaDescription();
}

uint64_t MRPairedDeviceCopyDeltaMinimalDescription()
{
  return _MRPairedDeviceCopyDeltaMinimalDescription();
}

uint64_t MRPairedDeviceCopyDescription()
{
  return _MRPairedDeviceCopyDescription();
}

uint64_t MRPairedDeviceCopyMinimalDescription()
{
  return _MRPairedDeviceCopyMinimalDescription();
}

uint64_t MRPairedDeviceGetSharedQueueVersion()
{
  return _MRPairedDeviceGetSharedQueueVersion();
}

uint64_t MRPairedDeviceSetBluetoothAddress()
{
  return _MRPairedDeviceSetBluetoothAddress();
}

uint64_t MRPerformAsyncOperationsUntilError()
{
  return _MRPerformAsyncOperationsUntilError();
}

uint64_t MRPlaybackQueueCapabilitiesCopyDescription()
{
  return _MRPlaybackQueueCapabilitiesCopyDescription();
}

uint64_t MRPlaybackQueueCopyContentItems()
{
  return _MRPlaybackQueueCopyContentItems();
}

uint64_t MRPlaybackQueueCreateFromCache()
{
  return _MRPlaybackQueueCreateFromCache();
}

uint64_t MRPlaybackQueueCreateFromRequest()
{
  return _MRPlaybackQueueCreateFromRequest();
}

uint64_t MRPlaybackQueueGetContentItemAtOffset()
{
  return _MRPlaybackQueueGetContentItemAtOffset();
}

uint64_t MRPlaybackQueueToUserInfo()
{
  return _MRPlaybackQueueToUserInfo();
}

uint64_t MRPowerLogConnectionTransportTypeFromTransport()
{
  return _MRPowerLogConnectionTransportTypeFromTransport();
}

uint64_t MRPowerLogDeviceTypeFromDeviceInfo()
{
  return _MRPowerLogDeviceTypeFromDeviceInfo();
}

uint64_t MRProcessIDForApplication()
{
  return _MRProcessIDForApplication();
}

uint64_t MRProcessIsMediaServerDaemon()
{
  return _MRProcessIsMediaServerDaemon();
}

uint64_t MRProtobufFromSendCommandAppOptions()
{
  return _MRProtobufFromSendCommandAppOptions();
}

uint64_t MRRegisterTransaction()
{
  return _MRRegisterTransaction();
}

uint64_t MRServiceClientRemoteCommandCallback()
{
  return _MRServiceClientRemoteCommandCallback();
}

uint64_t MRSupportsMediaControlReceiver()
{
  return _MRSupportsMediaControlReceiver();
}

uint64_t MRSupportsSystemUIActivities()
{
  return _MRSupportsSystemUIActivities();
}

uint64_t MRSystemAppPlaybackQueueCreate()
{
  return _MRSystemAppPlaybackQueueCreate();
}

uint64_t MRSystemAppPlaybackQueueCreateExternalRepresentation()
{
  return _MRSystemAppPlaybackQueueCreateExternalRepresentation();
}

uint64_t MRTransactionNameGetDescription()
{
  return _MRTransactionNameGetDescription();
}

uint64_t MRTransactionPacketsCreateExternalRepresentation()
{
  return _MRTransactionPacketsCreateExternalRepresentation();
}

uint64_t MRTransactionPacketsCreateFromExternalRepresentation()
{
  return _MRTransactionPacketsCreateFromExternalRepresentation();
}

uint64_t MRTransactionPacketsGetKeys()
{
  return _MRTransactionPacketsGetKeys();
}

uint64_t MRVirtualVoiceInputDeviceDescriptorCreateFromExternalRepresentation()
{
  return _MRVirtualVoiceInputDeviceDescriptorCreateFromExternalRepresentation();
}

uint64_t MRVirtualVoiceInputProcessAudioData()
{
  return _MRVirtualVoiceInputProcessAudioData();
}

uint64_t MRVirtualVoiceInputRegisterDevice()
{
  return _MRVirtualVoiceInputRegisterDevice();
}

uint64_t MRVirtualVoiceInputSetRecordingStateCallback()
{
  return _MRVirtualVoiceInputSetRecordingStateCallback();
}

uint64_t MRVirtualVoiceInputUnregisterDevice()
{
  return _MRVirtualVoiceInputUnregisterDevice();
}

uint64_t MRVoiceRecordingStateCopyDescription()
{
  return _MRVoiceRecordingStateCopyDescription();
}

uint64_t MSVBundleIDForAuditToken()
{
  return _MSVBundleIDForAuditToken();
}

uint64_t MSVCopyLocalizedModelName()
{
  return _MSVCopyLocalizedModelName();
}

uint64_t MSVCopySystemBuildVersion()
{
  return _MSVCopySystemBuildVersion();
}

uint64_t MSVDeviceIsAppleTV()
{
  return _MSVDeviceIsAppleTV();
}

uint64_t MSVDeviceIsAudioAccessory()
{
  return _MSVDeviceIsAudioAccessory();
}

uint64_t MSVDeviceOSIsInternalInstall()
{
  return _MSVDeviceOSIsInternalInstall();
}

uint64_t MSVKeychainCopyKeychainValue()
{
  return _MSVKeychainCopyKeychainValue();
}

uint64_t MSVKeychainSetKeychainValue()
{
  return _MSVKeychainSetKeychainValue();
}

uint64_t MSVLaunchApplicationWithOptions()
{
  return _MSVLaunchApplicationWithOptions();
}

uint64_t MSVNanoIDCreateTaggedPointer()
{
  return _MSVNanoIDCreateTaggedPointer();
}

uint64_t MSVPropertyListDataClasses()
{
  return _MSVPropertyListDataClasses();
}

uint64_t MSVUnarchivedObjectOfClasses()
{
  return _MSVUnarchivedObjectOfClasses();
}

uint64_t MSVWeakLinkClass()
{
  return _MSVWeakLinkClass();
}

uint64_t MSVWeakLinkStringConstant()
{
  return _MSVWeakLinkStringConstant();
}

uint64_t MSVWeakLinkSymbol()
{
  return _MSVWeakLinkSymbol();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t NSStringFromMRAVDistantExternalDeviceCallbackFlags()
{
  return _NSStringFromMRAVDistantExternalDeviceCallbackFlags();
}

uint64_t NSStringFromMRAVDistantExternalDeviceNotificationFlags()
{
  return _NSStringFromMRAVDistantExternalDeviceNotificationFlags();
}

uint64_t NSStringFromMRClientVisibility()
{
  return _NSStringFromMRClientVisibility();
}

uint64_t NSStringFromMRPlayerAudioSessionType()
{
  return _NSStringFromMRPlayerAudioSessionType();
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t SBSIsSystemApertureAvailable()
{
  return _SBSIsSystemApertureAvailable();
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return _SecItemCopyMatching(query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return _SecItemDelete(query);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFBundleCopyBundleURLForExecutableURL()
{
  return __CFBundleCopyBundleURLForExecutableURL();
}

uint64_t _MRApplicationActivityCreateExternalRepresentation()
{
  return __MRApplicationActivityCreateExternalRepresentation();
}

uint64_t _MRDeviceInfoMessageProtobuf_DeviceClassFromModel()
{
  return __MRDeviceInfoMessageProtobuf_DeviceClassFromModel();
}

uint64_t _MRLogForCategory()
{
  return __MRLogForCategory();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t __memcpy_chk()
{
  return ___memcpy_chk();
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t abort_report_np()
{
  return _abort_report_np();
}

uint32_t arc4random(void)
{
  return _arc4random();
}

pid_t audit_token_to_pid(audit_token_t *atoken)
{
  return _audit_token_to_pid(atoken);
}

int audit_token_to_pidversion(audit_token_t *atoken)
{
  return _audit_token_to_pidversion(atoken);
}

void bzero(void *a1, size_t a2)
{
}

const char *__cdecl class_getName(Class cls)
{
  return _class_getName(cls);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async_and_wait(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_barrier_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return _dispatch_queue_create_with_target_V2(label, attr, target);
}

dispatch_qos_class_t dispatch_queue_get_qos_class(dispatch_queue_t queue, int *relative_priority_ptr)
{
  return _dispatch_queue_get_qos_class(queue, relative_priority_ptr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

void free(void *a1)
{
}

char *__cdecl getenv(const char *a1)
{
  return _getenv(a1);
}

pid_t getpid(void)
{
  return _getpid();
}

uid_t getuid(void)
{
  return _getuid();
}

uint64_t kdebug_trace()
{
  return _kdebug_trace();
}

ldiv_t ldiv(uint64_t a1, uint64_t a2)
{
  ldiv_t v4 = _ldiv(a1, a2);
  uint64_t rem = v4.rem;
  uint64_t quot = v4.quot;
  result.uint64_t rem = rem;
  result.uint64_t quot = quot;
  return result;
}

lldiv_t lldiv(uint64_t a1, uint64_t a2)
{
  lldiv_t v4 = _lldiv(a1, a2);
  uint64_t rem = v4.rem;
  uint64_t quot = v4.quot;
  result.uint64_t rem = rem;
  result.uint64_t quot = quot;
  return result;
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

uint64_t msv_dispatch_async_on_queue()
{
  return _msv_dispatch_async_on_queue();
}

uint64_t msv_dispatch_sync_on_queue()
{
  return _msv_dispatch_sync_on_queue();
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

BOOL notify_is_valid_token(int val)
{
  return _notify_is_valid_token(val);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

int proc_pidpath(int pid, void *buffer, uint32_t buffersize)
{
  return _proc_pidpath(pid, buffer, buffersize);
}

objc_method_description protocol_getMethodDescription(Protocol *p, SEL aSel, BOOL isRequiredMethod, BOOL isInstanceMethod)
{
  objc_method_description MethodDescription = _protocol_getMethodDescription(p, aSel, isRequiredMethod, isInstanceMethod);
  types = MethodDescription.types;
  name = MethodDescription.name;
  result.types = types;
  result.name = name;
  return result;
}

qos_class_t qos_class_self(void)
{
  return _qos_class_self();
}

int raise(int a1)
{
  return _raise(a1);
}

uint64_t sandbox_extension_issue_file_to_process()
{
  return _sandbox_extension_issue_file_to_process();
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return _sqlite3_bind_int64(a1, a2, a3);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return _sqlite3_bind_text(a1, a2, a3, a4, a5);
}

int sqlite3_close(sqlite3 *a1)
{
  return _sqlite3_close(a1);
}

int sqlite3_close_v2(sqlite3 *a1)
{
  return _sqlite3_close_v2(a1);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_int64(a1, iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_text(a1, iCol);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return _sqlite3_exec(a1, sql, callback, a4, errmsg);
}

int sqlite3_file_control(sqlite3 *a1, const char *zDbName, int op, void *a4)
{
  return _sqlite3_file_control(a1, zDbName, op, a4);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return _sqlite3_finalize(pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return _sqlite3_open_v2(filename, ppDb, flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return _sqlite3_prepare_v2(db, zSql, nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return _sqlite3_step(a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return _swift_isUniquelyReferenced_native();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return _xpc_array_get_count(xarray);
}

const char *__cdecl xpc_array_get_string(xpc_object_t xarray, size_t index)
{
  return _xpc_array_get_string(xarray, index);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return _xpc_connection_create_mach_service(name, targetq, flags);
}

uint64_t xpc_connection_get_audit_token()
{
  return _xpc_connection_get_audit_token();
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return _xpc_connection_get_pid(connection);
}

void xpc_connection_resume(xpc_connection_t connection)
{
}

void xpc_connection_send_barrier(xpc_connection_t connection, dispatch_block_t barrier)
{
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

uint64_t xpc_copy_code_signing_identity_for_token()
{
  return _xpc_copy_code_signing_identity_for_token();
}

uint64_t xpc_copy_entitlement_for_token()
{
  return _xpc_copy_entitlement_for_token();
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return _xpc_dictionary_apply(xdict, applier);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return _xpc_dictionary_create_reply(original);
}

xpc_object_t xpc_dictionary_get_array(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_array(xdict, key);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_BOOL(xdict, key);
}

const void *__cdecl xpc_dictionary_get_data(xpc_object_t xdict, const char *key, size_t *length)
{
  return _xpc_dictionary_get_data(xdict, key, length);
}

double xpc_dictionary_get_double(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_double(xdict, key);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_int64(xdict, key);
}

xpc_connection_t xpc_dictionary_get_remote_connection(xpc_object_t xdict)
{
  return _xpc_dictionary_get_remote_connection(xdict);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_uint64(xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_value(xdict, key);
}

uint64_t xpc_dictionary_handoff_reply()
{
  return _xpc_dictionary_handoff_reply();
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_data(xpc_object_t xdict, const char *key, const void *bytes, size_t length)
{
}

void xpc_dictionary_set_double(xpc_object_t xdict, const char *key, double value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return _xpc_get_type(object);
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
}

uint64_t xpc_transaction_exit_clean()
{
  return _xpc_transaction_exit_clean();
}

id objc_msgSend_GroupSessionRecentParticipant(void *a1, const char *a2, ...)
{
  return _[a1 GroupSessionRecentParticipant];
}

id objc_msgSend_ID(void *a1, const char *a2, ...)
{
  return _[a1 ID];
}

id objc_msgSend_MACAddress(void *a1, const char *a2, ...)
{
  return _[a1 MACAddress];
}

id objc_msgSend_MRHIDTouchEventValue(void *a1, const char *a2, ...)
{
  return _[a1 MRHIDTouchEventValue];
}

id objc_msgSend_MRUIClient(void *a1, const char *a2, ...)
{
  return _[a1 MRUIClient];
}

id objc_msgSend_Media(void *a1, const char *a2, ...)
{
  return _[a1 Media];
}

id objc_msgSend_MediaRemote(void *a1, const char *a2, ...)
{
  return _[a1 MediaRemote];
}

id objc_msgSend_Route(void *a1, const char *a2, ...)
{
  return _[a1 Route];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_WHAIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 WHAIdentifier];
}

id objc_msgSend__acquire(void *a1, const char *a2, ...)
{
  return _[a1 _acquire];
}

id objc_msgSend__activeSystemContext(void *a1, const char *a2, ...)
{
  return _[a1 _activeSystemContext];
}

id objc_msgSend__addAuthorizationCallbackForOutputDevice_destination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAuthorizationCallbackForOutputDevice:destination:session:");
}

id objc_msgSend__addEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addEntry:");
}

id objc_msgSend__addMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addMessageHandler:");
}

id objc_msgSend__addMessageHandlerForDevice_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addMessageHandlerForDevice:handler:");
}

id objc_msgSend__addNowPlayingNotification_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addNowPlayingNotification:selector:");
}

id objc_msgSend__addNowPlayingStateToMessage_forClient_withEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addNowPlayingStateToMessage:forClient:withEndpoint:");
}

id objc_msgSend__addOrigin_withDeviceInfo_emitNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOrigin:withDeviceInfo:emitNotification:");
}

id objc_msgSend__addOutputDevicesToMessage_forClient_withEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOutputDevicesToMessage:forClient:withEndpoint:");
}

id objc_msgSend__addSubscribedStateToMessage_forClient_nowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubscribedStateToMessage:forClient:nowPlayingClient:");
}

id objc_msgSend__addSubscribedStateToMessage_forClient_originClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubscribedStateToMessage:forClient:originClient:");
}

id objc_msgSend__addSubscribedStateToMessage_forClient_playerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubscribedStateToMessage:forClient:playerClient:");
}

id objc_msgSend__addToMessage_withAllClusterDeviceMembers_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addToMessage:withAllClusterDeviceMembers:block:");
}

id objc_msgSend__addUndiscoverableGroupLeaderFromDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addUndiscoverableGroupLeaderFromDeviceInfo:");
}

id objc_msgSend__addUndiscoveredOutputContextOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addUndiscoveredOutputContextOutputDevices:");
}

id objc_msgSend__addVolumeToMessage_forClient_outputDevice_withEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVolumeToMessage:forClient:outputDevice:withEndpoint:");
}

id objc_msgSend__addVolumeToMessage_forClient_withEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVolumeToMessage:forClient:withEndpoint:");
}

id objc_msgSend__addVolumeToMessage_forClient_withEndpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVolumeToMessage:forClient:withEndpoint:completion:");
}

id objc_msgSend__adjustContinuousPlaybackDetectionTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _adjustContinuousPlaybackDetectionTimerIfNeeded];
}

id objc_msgSend__adjustPlaybackTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _adjustPlaybackTimerIfNeeded];
}

id objc_msgSend__allExternalDeviceClients(void *a1, const char *a2, ...)
{
  return _[a1 _allExternalDeviceClients];
}

id objc_msgSend__appendDescribableArray_toString_withTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendDescribableArray:toString:withTitle:");
}

id objc_msgSend__appendDescribableArray_toString_withTitle_indentLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendDescribableArray:toString:withTitle:indentLevel:");
}

id objc_msgSend__appendDescribableArray_toString_withTitle_indentLevel_usingDebugDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendDescribableArray:toString:withTitle:indentLevel:usingDebugDescription:");
}

id objc_msgSend__appendNullableObjectDescription_toString_withTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendNullableObjectDescription:toString:withTitle:");
}

id objc_msgSend__appendNullableObjectDescription_toString_withTitle_usingDebugDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendNullableObjectDescription:toString:withTitle:usingDebugDescription:");
}

id objc_msgSend__appendSubheader_toString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendSubheader:toString:");
}

id objc_msgSend__applyDeviceInfoValuesToOutputDevices_withDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyDeviceInfoValuesToOutputDevices:withDeviceInfo:");
}

id objc_msgSend__applyLocalReservedOutputContextValuesToOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyLocalReservedOutputContextValuesToOutputDevices:");
}

id objc_msgSend__applyLocallySourcedValuesToOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyLocallySourcedValuesToOutputDevices:");
}

id objc_msgSend__applyOutputContextValuesToOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyOutputContextValuesToOutputDevices:");
}

id objc_msgSend__assertionForType_pid_bundleID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_assertionForType:pid:bundleID:name:");
}

id objc_msgSend__attributedCommand_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedCommand:forClient:");
}

id objc_msgSend__bestRecommendationIn_primaryBundleIdentifier_activeSystemEndpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bestRecommendationIn:primaryBundleIdentifier:activeSystemEndpoint:completion:");
}

id objc_msgSend__cachingPolicyForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachingPolicyForRequest:");
}

id objc_msgSend__calculateDesiredPredictedRouteOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 _calculateDesiredPredictedRouteOutputDeviceUIDs];
}

id objc_msgSend__calculateDevicesInGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateDevicesInGroup:");
}

id objc_msgSend__calculateEffectiveDiscoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 _calculateEffectiveDiscoveryMode];
}

id objc_msgSend__calculateHierarchy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateHierarchy:");
}

id objc_msgSend__calculateMemory(void *a1, const char *a2, ...)
{
  return _[a1 _calculateMemory];
}

id objc_msgSend__calculateOperationForEndpoint_outputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateOperationForEndpoint:outputDeviceUIDs:");
}

id objc_msgSend__calculateOperationTypeForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateOperationTypeForEndpoint:");
}

id objc_msgSend__calculateRelevantOutputDevicesInGroup_outputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateRelevantOutputDevicesInGroup:outputDeviceUIDs:");
}

id objc_msgSend__calculateUndiscoverableGroupLeaderFromDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateUndiscoverableGroupLeaderFromDeviceInfo:");
}

id objc_msgSend__callAllPendingCompletionsWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callAllPendingCompletionsWithError:");
}

id objc_msgSend__callClientAllowsPairingCallback(void *a1, const char *a2, ...)
{
  return _[a1 _callClientAllowsPairingCallback];
}

id objc_msgSend__callClientConnectionStateCallback_previousConnectionState_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callClientConnectionStateCallback:previousConnectionState:error:");
}

id objc_msgSend__callClientCustomDataCallback_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callClientCustomDataCallback:name:");
}

id objc_msgSend__callClientNameCallback(void *a1, const char *a2, ...)
{
  return _[a1 _callClientNameCallback];
}

id objc_msgSend__callDeviceInfoCallback_oldDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callDeviceInfoCallback:oldDeviceInfo:");
}

id objc_msgSend__callIsMutedCallback_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callIsMutedCallback:outputDeviceUID:");
}

id objc_msgSend__callOutputDevicesRemovedCallbackWithOutputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callOutputDevicesRemovedCallbackWithOutputDeviceUIDs:");
}

id objc_msgSend__callOutputDevicesUpdatedCallbackWithOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callOutputDevicesUpdatedCallbackWithOutputDevices:");
}

id objc_msgSend__callPendingCompletions(void *a1, const char *a2, ...)
{
  return _[a1 _callPendingCompletions];
}

id objc_msgSend__callVolumeCallback_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callVolumeCallback:outputDeviceUID:");
}

id objc_msgSend__callVolumeControlCapabilitiesCallback_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callVolumeControlCapabilitiesCallback:outputDeviceUID:");
}

id objc_msgSend__canSendMessage(void *a1, const char *a2, ...)
{
  return _[a1 _canSendMessage];
}

id objc_msgSend__checkAndMaybeUpdateNowPlayingAppStackPopRateLimitingWithInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndMaybeUpdateNowPlayingAppStackPopRateLimitingWithInterval:");
}

id objc_msgSend__checkConnectionStatus(void *a1, const char *a2, ...)
{
  return _[a1 _checkConnectionStatus];
}

id objc_msgSend__cleanUpPersistedSessionForSessionPreloadCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpPersistedSessionForSessionPreloadCommand:");
}

id objc_msgSend__cleanUpStreamsWithReason_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpStreamsWithReason:error:");
}

id objc_msgSend__cleanUpWithReason_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpWithReason:error:");
}

id objc_msgSend__cleanup(void *a1, const char *a2, ...)
{
  return _[a1 _cleanup];
}

id objc_msgSend__clearAllQueuedCommandsForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearAllQueuedCommandsForReason:");
}

id objc_msgSend__clearPasswordForOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearPasswordForOutputDevice:");
}

id objc_msgSend__clearPendingClusterLeaderOperations(void *a1, const char *a2, ...)
{
  return _[a1 _clearPendingClusterLeaderOperations];
}

id objc_msgSend__clearPendingGroupLeaderOperations(void *a1, const char *a2, ...)
{
  return _[a1 _clearPendingGroupLeaderOperations];
}

id objc_msgSend__clearQueuedBeginLoadingMessagesForApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearQueuedBeginLoadingMessagesForApp:");
}

id objc_msgSend__clearQueuedCommand_forUnavailableApplicationWithDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearQueuedCommand:forUnavailableApplicationWithDisplayID:");
}

id objc_msgSend__clearSecondaryConnectionsForDevicesNotInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearSecondaryConnectionsForDevicesNotInArray:");
}

id objc_msgSend__clientDidOpenConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientDidOpenConnection:");
}

id objc_msgSend__clientForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientForIdentifier:");
}

id objc_msgSend__clientForPairingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientForPairingSession:");
}

id objc_msgSend__clusterOutputDevicesFromUnclusteredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clusterOutputDevicesFromUnclusteredDevices:");
}

id objc_msgSend__collectDiagnosticFromClient_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_collectDiagnosticFromClient:completion:");
}

id objc_msgSend__commitLocalDeviceWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commitLocalDeviceWithReason:");
}

id objc_msgSend__completeGroupSessionRequestsWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeGroupSessionRequestsWithIdentifier:");
}

id objc_msgSend__completionHandler(void *a1, const char *a2, ...)
{
  return _[a1 _completionHandler];
}

id objc_msgSend__concludeSearchWithRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_concludeSearchWithRoute:");
}

id objc_msgSend__configurationForUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationForUID:");
}

id objc_msgSend__configurationFromDestination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationFromDestination:session:");
}

id objc_msgSend__configureNowPlayingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureNowPlayingController:");
}

id objc_msgSend__connectToAllOutputDevicesForReason_comparator_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectToAllOutputDevicesForReason:comparator:queue:completion:");
}

id objc_msgSend__connectToGroup_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectToGroup:reason:completion:");
}

id objc_msgSend__connectToOutputDevice_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectToOutputDevice:reason:completion:");
}

id objc_msgSend__connectedExternalDeviceClients(void *a1, const char *a2, ...)
{
  return _[a1 _connectedExternalDeviceClients];
}

id objc_msgSend__connectingExternalDeviceClients(void *a1, const char *a2, ...)
{
  return _[a1 _connectingExternalDeviceClients];
}

id objc_msgSend__connection_canReceiveUpdatesForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connection:canReceiveUpdatesForOrigin:");
}

id objc_msgSend__connection_canReceiveUpdatesForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connection:canReceiveUpdatesForPlayerPath:");
}

id objc_msgSend__connection_wasPreviouslySubscribedToPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connection:wasPreviouslySubscribedToPlayerPath:");
}

id objc_msgSend__connectionForSource_destination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionForSource:destination:session:");
}

id objc_msgSend__contextuallyAwareDestinationAppDisplayIDForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextuallyAwareDestinationAppDisplayIDForCommand:");
}

id objc_msgSend__copyWithZone_usingConcreteClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyWithZone:usingConcreteClass:");
}

id objc_msgSend__createAirPlaySecuritySettings(void *a1, const char *a2, ...)
{
  return _[a1 _createAirPlaySecuritySettings];
}

id objc_msgSend__createBroadcastCommandPlayerPathForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createBroadcastCommandPlayerPathForClient:");
}

id objc_msgSend__createBroadcastCommandResponseFromStatuses_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createBroadcastCommandResponseFromStatuses:forClient:");
}

id objc_msgSend__createConnectionWith_groupID_connectionType_shouldUseSystemAuthenticationPrompt_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createConnectionWith:groupID:connectionType:shouldUseSystemAuthenticationPrompt:userInfo:");
}

id objc_msgSend__createConnectionWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createConnectionWithUserInfo:");
}

id objc_msgSend__createDiscoveryChannelForIDSConnection_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDiscoveryChannelForIDSConnection:deviceInfo:");
}

id objc_msgSend__createEndpointForOutputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createEndpointForOutputDeviceUIDs:");
}

id objc_msgSend__createEndpointWithCurrentTopologyWithTimeout_details_previewCallback_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createEndpointWithCurrentTopologyWithTimeout:details:previewCallback:completion:");
}

id objc_msgSend__createGroupsFrom_availableOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createGroupsFrom:availableOutputDevices:");
}

id objc_msgSend__createHostedEndpointWithOutputDeviceUIDs_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createHostedEndpointWithOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend__createLocalizedOutputDevice_redactVolume_forClient_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createLocalizedOutputDevice:redactVolume:forClient:endpoint:");
}

id objc_msgSend__createLocalizedOutputDevices_redactVolume_forClient_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createLocalizedOutputDevices:redactVolume:forClient:endpoint:");
}

id objc_msgSend__createLockScreenRoutingController(void *a1, const char *a2, ...)
{
  return _[a1 _createLockScreenRoutingController];
}

id objc_msgSend__createMediaServerController(void *a1, const char *a2, ...)
{
  return _[a1 _createMediaServerController];
}

id objc_msgSend__createNativeGroupForLocalDeviceFromNativeOutputDevice_availableOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createNativeGroupForLocalDeviceFromNativeOutputDevice:availableOutputDevices:");
}

id objc_msgSend__createOptimizedEndpointWithOutputDeviceUIDs_timeout_details_previewCallback_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createOptimizedEndpointWithOutputDeviceUIDs:timeout:details:previewCallback:completion:");
}

id objc_msgSend__createPlayerAndWaitForCanBeNowPlaying_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlayerAndWaitForCanBeNowPlaying:completion:");
}

id objc_msgSend__createPlayerAndWaitForCanBeNowPlaying_deviceInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlayerAndWaitForCanBeNowPlaying:deviceInfo:completion:");
}

id objc_msgSend__createPlayerAndWaitForConnection_command_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlayerAndWaitForConnection:command:completion:");
}

id objc_msgSend__createPlayerAndWaitForConnection_command_deviceInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlayerAndWaitForConnection:command:deviceInfo:completion:");
}

id objc_msgSend__createPlayerForClient_playerPath_deviceInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlayerForClient:playerPath:deviceInfo:completion:");
}

id objc_msgSend__createProvider(void *a1, const char *a2, ...)
{
  return _[a1 _createProvider];
}

id objc_msgSend__createRemoteAlertHandleIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createRemoteAlertHandleIfNeeded];
}

id objc_msgSend__createRemoteControlChannelForIDSConnection_deviceInfo_destination_session_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRemoteControlChannelForIDSConnection:deviceInfo:destination:session:userInfo:");
}

id objc_msgSend__createRemoteHostedEndpointWithGroupLeaderOutputDeviceUID_withOutputDeviceUIDs_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRemoteHostedEndpointWithGroupLeaderOutputDeviceUID:withOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend__createResolvedPlayerPathFromPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createResolvedPlayerPathFromPlayerPath:");
}

id objc_msgSend__createStereoPairRepresentationFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createStereoPairRepresentationFrom:");
}

id objc_msgSend__currentDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _currentDeviceInfo];
}

id objc_msgSend__descriptionForDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_descriptionForDiscoveryMode:");
}

id objc_msgSend__destinationClientForRemoteControlCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationClientForRemoteControlCommand:");
}

id objc_msgSend__deviceInfoArchiveClasses(void *a1, const char *a2, ...)
{
  return _[a1 _deviceInfoArchiveClasses];
}

id objc_msgSend__deviceInfoDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _deviceInfoDidChange];
}

id objc_msgSend__deviceInfoDidChangeWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceInfoDidChangeWithDeviceInfo:");
}

id objc_msgSend__deviceInfoFilePath(void *a1, const char *a2, ...)
{
  return _[a1 _deviceInfoFilePath];
}

id objc_msgSend__didCloseCommunicationChannel_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didCloseCommunicationChannel:error:");
}

id objc_msgSend__didReceiveData_fromCommunicationChannel_connectionFactory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceiveData:fromCommunicationChannel:connectionFactory:");
}

id objc_msgSend__disconnectClient_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disconnectClient:withError:");
}

id objc_msgSend__discoverGroup_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_discoverGroup:reason:completion:");
}

id objc_msgSend__discoverOutputDevice_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_discoverOutputDevice:reason:completion:");
}

id objc_msgSend__discoverOutputDevices_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_discoverOutputDevices:completion:");
}

id objc_msgSend__doesRequestContainLocalDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doesRequestContainLocalDeviceUID:");
}

id objc_msgSend__effectiveContextIDForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectiveContextIDForCommand:");
}

id objc_msgSend__endSearch(void *a1, const char *a2, ...)
{
  return _[a1 _endSearch];
}

id objc_msgSend__endpoint(void *a1, const char *a2, ...)
{
  return _[a1 _endpoint];
}

id objc_msgSend__endpointIsSolo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endpointIsSolo:");
}

id objc_msgSend__endpointShouldNotifyClientsOfTopologyChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endpointShouldNotifyClientsOfTopologyChanges:");
}

id objc_msgSend__endpointShouldPostVolumeNotifications_outputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endpointShouldPostVolumeNotifications:outputDevice:");
}

id objc_msgSend__endpointSupportsVolumeControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endpointSupportsVolumeControl:");
}

id objc_msgSend__enqueueCommand_forApplication_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueCommand:forApplication:withCompletion:");
}

id objc_msgSend__enqueueCommand_forUnavailableApplicationWithDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueCommand:forUnavailableApplicationWithDisplayID:");
}

id objc_msgSend__enqueueCompletion_forUnavailableDestinationApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueCompletion:forUnavailableDestinationApp:");
}

id objc_msgSend__existingKeychainAccountForOutputDevice_password_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_existingKeychainAccountForOutputDevice:password:");
}

id objc_msgSend__expectedSuffixForNewEndpointWithGroupLeader_outputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_expectedSuffixForNewEndpointWithGroupLeader:outputDevices:");
}

id objc_msgSend__exportDescriptorForOutputDevice_endpoint_remoteControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_exportDescriptorForOutputDevice:endpoint:remoteControl:");
}

id objc_msgSend__extendedInfo(void *a1, const char *a2, ...)
{
  return _[a1 _extendedInfo];
}

id objc_msgSend__externalDeviceClientDidInvalidate_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_externalDeviceClientDidInvalidate:withError:");
}

id objc_msgSend__externalDeviceClientForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_externalDeviceClientForConnection:");
}

id objc_msgSend__fetchActiveSystemEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchActiveSystemEndpoint:");
}

id objc_msgSend__fetchActiveUserWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchActiveUserWithQueue:completion:");
}

id objc_msgSend__fetchAvailableOutputDevicesFromDiscoverySessions(void *a1, const char *a2, ...)
{
  return _[a1 _fetchAvailableOutputDevicesFromDiscoverySessions];
}

id objc_msgSend__findClientIf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findClientIf:");
}

id objc_msgSend__findEndpointContainingGroupID_andDeviceID_requestID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findEndpointContainingGroupID:andDeviceID:requestID:completion:");
}

id objc_msgSend__forwardCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forwardCommand:completion:");
}

id objc_msgSend__frontmostApplicationDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frontmostApplicationDidChange:");
}

id objc_msgSend__generateDeviceInfoWithDesignatedGroupLeader_outputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateDeviceInfoWithDesignatedGroupLeader:outputContext:");
}

id objc_msgSend__generateMessageID(void *a1, const char *a2, ...)
{
  return _[a1 _generateMessageID];
}

id objc_msgSend__generateSessionUID(void *a1, const char *a2, ...)
{
  return _[a1 _generateSessionUID];
}

id objc_msgSend__handleAddVirtualOutputDeviceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAddVirtualOutputDeviceMessage:fromClient:");
}

id objc_msgSend__handleAdjustSystemVolumeByStepMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAdjustSystemVolumeByStepMessage:fromClient:");
}

id objc_msgSend__handleAdjustSystemVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAdjustSystemVolumeMessage:fromClient:");
}

id objc_msgSend__handleAdjustVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAdjustVolumeMessage:fromClient:");
}

id objc_msgSend__handleApplicationConnectionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleApplicationConnectionMessage:fromClient:");
}

id objc_msgSend__handleApplicationConnectionProtocolMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleApplicationConnectionProtocolMessage:");
}

id objc_msgSend__handleAuthenticationFailureForRoute_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAuthenticationFailureForRoute:withOptions:");
}

id objc_msgSend__handleAuthorizationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAuthorizationRequest:");
}

id objc_msgSend__handleBeginApplicationActivityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBeginApplicationActivityMessage:fromClient:");
}

id objc_msgSend__handleBeginLoadingBrowsableContentMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBeginLoadingBrowsableContentMessage:fromClient:");
}

id objc_msgSend__handleBeginMusicHandoffSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBeginMusicHandoffSessionMessage:fromClient:");
}

id objc_msgSend__handleBroadcastCommandMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBroadcastCommandMessage:fromClient:");
}

id objc_msgSend__handleBrowsableContentDidFinishLoadingFromClient_indexPath_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBrowsableContentDidFinishLoadingFromClient:indexPath:withError:");
}

id objc_msgSend__handleClearAllAVRoutePasswordsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleClearAllAVRoutePasswordsMessage:fromClient:");
}

id objc_msgSend__handleClientUpdatesConfigMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleClientUpdatesConfigMessage:fromClient:");
}

id objc_msgSend__handleCloseApplicationConnectionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCloseApplicationConnectionMessage:fromClient:");
}

id objc_msgSend__handleClusterErrorStatus_forRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleClusterErrorStatus:forRoute:");
}

id objc_msgSend__handleCollectClientDiagnosticsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCollectClientDiagnosticsMessage:fromClient:");
}

id objc_msgSend__handleCollectClientDiagnosticsMessageWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCollectClientDiagnosticsMessageWithCompletion:");
}

id objc_msgSend__handleCollectDiagnosticMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCollectDiagnosticMessage:fromClient:");
}

id objc_msgSend__handleCompletePairingHandlerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCompletePairingHandlerMessage:fromClient:");
}

id objc_msgSend__handleCompletedOperation_forOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCompletedOperation:forOutputDeviceUID:");
}

id objc_msgSend__handleContentItemArtworkChangedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleContentItemArtworkChangedMessage:fromClient:");
}

id objc_msgSend__handleContentItemChangedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleContentItemChangedMessage:fromClient:");
}

id objc_msgSend__handleCreateApplicationConnectionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateApplicationConnectionMessage:fromClient:");
}

id objc_msgSend__handleCreateDirectEndpointForDevices_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateDirectEndpointForDevices:fromClient:");
}

id objc_msgSend__handleCreateEndpointWithDevices_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateEndpointWithDevices:fromClient:");
}

id objc_msgSend__handleCreateGroupSessionTokenMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateGroupSessionTokenMessage:fromClient:");
}

id objc_msgSend__handleCreateGroupWithDevices_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateGroupWithDevices:fromClient:");
}

id objc_msgSend__handleCreateHostedEndpointForDevices_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateHostedEndpointForDevices:fromClient:");
}

id objc_msgSend__handleCreateHostedEndpointRequestMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateHostedEndpointRequestMessage:fromClient:");
}

id objc_msgSend__handleCriticalSectionTransition_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCriticalSectionTransition:fromClient:");
}

id objc_msgSend__handleDeletePairedDeviceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeletePairedDeviceMessage:fromClient:");
}

id objc_msgSend__handleDeletePairingIdentityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeletePairingIdentityMessage:fromClient:");
}

id objc_msgSend__handleDeviceInfoChange_oldDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeviceInfoChange:oldDevice:");
}

id objc_msgSend__handleDeviceInfoRequest_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeviceInfoRequest:fromClient:");
}

id objc_msgSend__handleDeviceInfoUpdateMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeviceInfoUpdateMessage:");
}

id objc_msgSend__handleDeviceInfoUpdateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeviceInfoUpdateMessage:fromClient:");
}

id objc_msgSend__handleDiscoveryUpdateOutputDevicesMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDiscoveryUpdateOutputDevicesMessage:");
}

id objc_msgSend__handleDismissAllBannersMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDismissAllBannersMessage:fromClient:");
}

id objc_msgSend__handleDismissMediaControlsCommandMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDismissMediaControlsCommandMessage:fromClient:");
}

id objc_msgSend__handleEndApplicationActivityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleEndApplicationActivityMessage:fromClient:");
}

id objc_msgSend__handleErrorStatus_forRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleErrorStatus:forRoute:");
}

id objc_msgSend__handleFetchPlaybackQueueParticipantsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFetchPlaybackQueueParticipantsMessage:fromClient:");
}

id objc_msgSend__handleGenericMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGenericMessage:");
}

id objc_msgSend__handleGenericMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGenericMessage:fromClient:");
}

id objc_msgSend__handleGetActiveOriginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetActiveOriginMessage:fromClient:");
}

id objc_msgSend__handleGetActivePlayerPathsForLocalOriginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetActivePlayerPathsForLocalOriginMessage:fromClient:");
}

id objc_msgSend__handleGetActiveSystemEndpointUIDsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetActiveSystemEndpointUIDsMessage:fromClient:");
}

id objc_msgSend__handleGetAirPlaySecuritySettingsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAirPlaySecuritySettingsMessage:fromClient:");
}

id objc_msgSend__handleGetAirplayStatus_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAirplayStatus:fromClient:");
}

id objc_msgSend__handleGetAnyAppIsPlayingMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAnyAppIsPlayingMessage:fromClient:");
}

id objc_msgSend__handleGetApplicationActivityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetApplicationActivityMessage:fromClient:");
}

id objc_msgSend__handleGetAppsSupportingBrowsableContentAPIsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAppsSupportingBrowsableContentAPIsMessage:fromClient:");
}

id objc_msgSend__handleGetAudioFormatContentInfoForOriginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAudioFormatContentInfoForOriginMessage:fromClient:");
}

id objc_msgSend__handleGetAvailableOriginsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAvailableOriginsMessage:fromClient:");
}

id objc_msgSend__handleGetClientPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetClientPropertiesMessage:fromClient:");
}

id objc_msgSend__handleGetDeviceInfo_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetDeviceInfo:fromClient:");
}

id objc_msgSend__handleGetDeviceSupportsUIActivitiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetDeviceSupportsUIActivitiesMessage:fromClient:");
}

id objc_msgSend__handleGetDevicesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetDevicesMessage:fromClient:");
}

id objc_msgSend__handleGetElectedPlayerPathMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetElectedPlayerPathMessage:fromClient:");
}

id objc_msgSend__handleGetExternalDeviceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetExternalDeviceMessage:fromClient:");
}

id objc_msgSend__handleGetExternalScreenTypeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetExternalScreenTypeMessage:fromClient:");
}

id objc_msgSend__handleGetHostedRoutingXPCEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetHostedRoutingXPCEndpointMessage:fromClient:");
}

id objc_msgSend__handleGetImageDimensionsForArtworkDataMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetImageDimensionsForArtworkDataMessage:fromClient:");
}

id objc_msgSend__handleGetInputModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetInputModeMessage:fromClient:");
}

id objc_msgSend__handleGetIsBooksAppInstalledMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetIsBooksAppInstalledMessage:fromClient:");
}

id objc_msgSend__handleGetIsMusicAppInstalledMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetIsMusicAppInstalledMessage:fromClient:");
}

id objc_msgSend__handleGetKeyboardSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetKeyboardSessionMessage:fromClient:");
}

id objc_msgSend__handleGetLastPlayingDateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetLastPlayingDateMessage:fromClient:");
}

id objc_msgSend__handleGetNowPlayingClientMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetNowPlayingClientMessage:fromClient:");
}

id objc_msgSend__handleGetNowPlayingClientsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetNowPlayingClientsMessage:fromClient:");
}

id objc_msgSend__handleGetNowPlayingPlayerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetNowPlayingPlayerMessage:fromClient:");
}

id objc_msgSend__handleGetNowPlayingPlayersMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetNowPlayingPlayersMessage:fromClient:");
}

id objc_msgSend__handleGetOutputContextUIDMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetOutputContextUIDMessage:fromClient:");
}

id objc_msgSend__handleGetPairedDevicesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPairedDevicesMessage:fromClient:");
}

id objc_msgSend__handleGetPendingCommandsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPendingCommandsMessage:fromClient:");
}

id objc_msgSend__handleGetPickableRoutesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPickableRoutesMessage:fromClient:");
}

id objc_msgSend__handleGetPickedRouteHasVolumeControlMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPickedRouteHasVolumeControlMessage:fromClient:");
}

id objc_msgSend__handleGetPlaybackStateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPlaybackStateMessage:fromClient:");
}

id objc_msgSend__handleGetPlayerPictureInPictureEnabledMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPlayerPictureInPictureEnabledMessage:fromClient:");
}

id objc_msgSend__handleGetPlayerPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPlayerPropertiesMessage:fromClient:");
}

id objc_msgSend__handleGetRecentAVOutputDeviceUIDsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetRecentAVOutputDeviceUIDsMessage:fromClient:");
}

id objc_msgSend__handleGetRecommendRouteCandidatesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetRecommendRouteCandidatesMessage:fromClient:");
}

id objc_msgSend__handleGetRemoteTextInputSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetRemoteTextInputSessionMessage:fromClient:");
}

id objc_msgSend__handleGetSavedAVRoutePasswordMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSavedAVRoutePasswordMessage:fromClient:");
}

id objc_msgSend__handleGetSupportedBrowsableContentAPIsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSupportedBrowsableContentAPIsMessage:fromClient:");
}

id objc_msgSend__handleGetSupportedCommandsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSupportedCommandsMessage:fromClient:");
}

id objc_msgSend__handleGetSupportsSystemPairingMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSupportsSystemPairingMessage:fromClient:");
}

id objc_msgSend__handleGetSystemIsMutedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSystemIsMutedMessage:fromClient:");
}

id objc_msgSend__handleGetSystemVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSystemVolumeMessage:fromClient:");
}

id objc_msgSend__handleGetUIServerEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetUIServerEndpointMessage:fromClient:");
}

id objc_msgSend__handleGetUIServiceRelayEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetUIServiceRelayEndpointMessage:fromClient:");
}

id objc_msgSend__handleGetUserIdentityForDSIDMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetUserIdentityForDSIDMessage:fromClient:");
}

id objc_msgSend__handleGetUserIdentityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetUserIdentityMessage:fromClient:");
}

id objc_msgSend__handleGetVirtualOutputDevicesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetVirtualOutputDevicesMessage:fromClient:");
}

id objc_msgSend__handleGetVolumeControlCapabilitiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetVolumeControlCapabilitiesMessage:fromClient:");
}

id objc_msgSend__handleGetVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetVolumeMessage:fromClient:");
}

id objc_msgSend__handleGetVolumeMutedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetVolumeMutedMessage:fromClient:");
}

id objc_msgSend__handleGroupDevicesAndSendCommand_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGroupDevicesAndSendCommand:fromClient:");
}

id objc_msgSend__handleGroupSessionEventMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGroupSessionEventMessage:fromClient:");
}

id objc_msgSend__handleInputDeviceConnectedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInputDeviceConnectedMessage:fromClient:");
}

id objc_msgSend__handleInputDeviceDisconnectedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInputDeviceDisconnectedMessage:fromClient:");
}

id objc_msgSend__handleInvalidateApplicationConnectionMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInvalidateApplicationConnectionMessage:");
}

id objc_msgSend__handleInvalidateApplicationConnectionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInvalidateApplicationConnectionMessage:fromClient:");
}

id objc_msgSend__handleKeepAliveMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleKeepAliveMessage:fromClient:");
}

id objc_msgSend__handleLegacyVolumeControlCapabilitiesDidChangeMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLegacyVolumeControlCapabilitiesDidChangeMessage:");
}

id objc_msgSend__handleLyricsEventMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLyricsEventMessage:fromClient:");
}

id objc_msgSend__handleMaybeCanMigrateToLocalEndpointDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMaybeCanMigrateToLocalEndpointDidChange:");
}

id objc_msgSend__handleMigrateFromEndpointToEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMigrateFromEndpointToEndpointMessage:fromClient:");
}

id objc_msgSend__handleMigrateFromEndpointToOutputDevicesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMigrateFromEndpointToOutputDevicesMessage:fromClient:");
}

id objc_msgSend__handleModifyOutputContextMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleModifyOutputContextMessage:fromClient:");
}

id objc_msgSend__handleModifyOutputContextRequestMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleModifyOutputContextRequestMessage:fromClient:");
}

id objc_msgSend__handleMuteVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMuteVolumeMessage:fromClient:");
}

id objc_msgSend__handleNewConnection_forServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNewConnection:forServiceType:");
}

id objc_msgSend__handleNotificationMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNotificationMessage:");
}

id objc_msgSend__handleOutputDevicesRemovedMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleOutputDevicesRemovedMessage:");
}

id objc_msgSend__handleOutputDevicesUpdatedMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleOutputDevicesUpdatedMessage:");
}

id objc_msgSend__handlePauseOutputDeviceUIDsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePauseOutputDeviceUIDsMessage:fromClient:");
}

id objc_msgSend__handlePing_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePing:fromClient:");
}

id objc_msgSend__handlePlaybackQueueRequest_forPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackQueueRequest:forPlayerPath:completion:");
}

id objc_msgSend__handlePlaybackQueueRequestMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackQueueRequestMessage:fromClient:");
}

id objc_msgSend__handlePlaybackSessionMigrateBeginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateBeginMessage:fromClient:");
}

id objc_msgSend__handlePlaybackSessionMigrateBeginRequest_forPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateBeginRequest:forPlayerPath:completion:");
}

id objc_msgSend__handlePlaybackSessionMigrateEndMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateEndMessage:fromClient:");
}

id objc_msgSend__handlePlaybackSessionMigrateEndRequest_error_forPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateEndRequest:error:forPlayerPath:completion:");
}

id objc_msgSend__handlePlaybackSessionMigrateRequest_request_forPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateRequest:request:forPlayerPath:completion:");
}

id objc_msgSend__handlePlaybackSessionMigrateRequestMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateRequestMessage:fromClient:");
}

id objc_msgSend__handlePlaybackSessionRequest_forPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionRequest:forPlayerPath:completion:");
}

id objc_msgSend__handlePlaybackSessionRequest_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionRequest:fromClient:");
}

id objc_msgSend__handlePlaybackSessionRequestMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionRequestMessage:fromClient:");
}

id objc_msgSend__handlePlayerClientParticipantsUpdateMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlayerClientParticipantsUpdateMessage:");
}

id objc_msgSend__handlePostNotificationMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePostNotificationMessage:fromClient:");
}

id objc_msgSend__handlePredictGroupLeader_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePredictGroupLeader:fromClient:");
}

id objc_msgSend__handlePresentMediaControlsCommandMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePresentMediaControlsCommandMessage:fromClient:");
}

id objc_msgSend__handlePresentProximityCardMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePresentProximityCardMessage:fromClient:");
}

id objc_msgSend__handlePresentRouteAuthorizationStatusMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePresentRouteAuthorizationStatusMessage:");
}

id objc_msgSend__handlePresentRouteAuthorizationStatusMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePresentRouteAuthorizationStatusMessage:fromClient:");
}

id objc_msgSend__handlePrewarmMediaControlsCommandMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePrewarmMediaControlsCommandMessage:fromClient:");
}

id objc_msgSend__handlePromptForRouteAuthorizationMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePromptForRouteAuthorizationMessage:");
}

id objc_msgSend__handlePromptForRouteAuthorizationMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePromptForRouteAuthorizationMessage:fromClient:");
}

id objc_msgSend__handleReceivedButtonEvent_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReceivedButtonEvent:fromClient:");
}

id objc_msgSend__handleReceivedCommand_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReceivedCommand:fromClient:");
}

id objc_msgSend__handleReceivedVoiceInputMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReceivedVoiceInputMessage:fromClient:");
}

id objc_msgSend__handleRecommendRouteCandidateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRecommendRouteCandidateMessage:fromClient:");
}

id objc_msgSend__handleRecordingEndpointAvailabilityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRecordingEndpointAvailabilityMessage:fromClient:");
}

id objc_msgSend__handleRecordingStateChangedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRecordingStateChangedMessage:fromClient:");
}

id objc_msgSend__handleRegisterForWakingNowPlayingNotifications_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRegisterForWakingNowPlayingNotifications:fromClient:");
}

id objc_msgSend__handleRegisterGameControllerMessage_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRegisterGameControllerMessage:client:");
}

id objc_msgSend__handleRegisterHIDDeviceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRegisterHIDDeviceMessage:fromClient:");
}

id objc_msgSend__handleRegisterPairingHandlerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRegisterPairingHandlerMessage:fromClient:");
}

id objc_msgSend__handleRegisterVoiceInputDeviceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRegisterVoiceInputDeviceMessage:fromClient:");
}

id objc_msgSend__handleRemoteCommand_withOptions_playerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoteCommand:withOptions:playerPath:completion:");
}

id objc_msgSend__handleRemoteDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoteDeviceInfo:");
}

id objc_msgSend__handleRemoteTextInputMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoteTextInputMessage:fromClient:");
}

id objc_msgSend__handleRemoveClientMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoveClientMessage:");
}

id objc_msgSend__handleRemoveFromParentGroup_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoveFromParentGroup:fromClient:");
}

id objc_msgSend__handleRemoveNowPlayingClientMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoveNowPlayingClientMessage:fromClient:");
}

id objc_msgSend__handleRemoveNowPlayingPlayerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoveNowPlayingPlayerMessage:fromClient:");
}

id objc_msgSend__handleRemovePlayerMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemovePlayerMessage:");
}

id objc_msgSend__handleRequestAudioAmplitudeSamplesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestAudioAmplitudeSamplesMessage:fromClient:");
}

id objc_msgSend__handleRequestBlessMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestBlessMessage:fromClient:");
}

id objc_msgSend__handleRequestGroupSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestGroupSessionMessage:fromClient:");
}

id objc_msgSend__handleRequestPlaybackInitializationMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestPlaybackInitializationMessage:fromClient:");
}

id objc_msgSend__handleRequestPlaybackQueueCapabilities_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestPlaybackQueueCapabilities:fromClient:");
}

id objc_msgSend__handleRequestVideoThumbnailsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestVideoThumbnailsMessage:fromClient:");
}

id objc_msgSend__handleResetOutputContextMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResetOutputContextMessage:fromClient:");
}

id objc_msgSend__handleResetPlaybackQueueRequests_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResetPlaybackQueueRequests:fromClient:");
}

id objc_msgSend__handleResolvePlayerPath_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResolvePlayerPath:fromClient:");
}

id objc_msgSend__handleRestrictCommandClientsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRestrictCommandClientsMessage:fromClient:");
}

id objc_msgSend__handleResumeNowPlayingSession_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResumeNowPlayingSession:fromClient:");
}

id objc_msgSend__handleSearchEndpointsForOutputDeviceUIDsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSearchEndpointsForOutputDeviceUIDsMessage:fromClient:");
}

id objc_msgSend__handleSearchEndpointsForRoutingContextUIDMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSearchEndpointsForRoutingContextUIDMessage:fromClient:");
}

id objc_msgSend__handleSelectSourceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSelectSourceMessage:fromClient:");
}

id objc_msgSend__handleSendApplicationConnectionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendApplicationConnectionMessage:fromClient:");
}

id objc_msgSend__handleSendCommandMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendCommandMessage:fromClient:");
}

id objc_msgSend__handleSendCommandToEachEndpointContainingOutputDeviceUIDsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendCommandToEachEndpointContainingOutputDeviceUIDsMessage:fromClient:");
}

id objc_msgSend__handleSendCommandToNewGroupContainingOutputDeviceUIDsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendCommandToNewGroupContainingOutputDeviceUIDsMessage:fromClient:");
}

id objc_msgSend__handleSendLyricsEvent_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendLyricsEvent:fromClient:");
}

id objc_msgSend__handleSendMusicHandoffEventMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendMusicHandoffEventMessage:fromClient:");
}

id objc_msgSend__handleSendPlaybackSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendPlaybackSessionMessage:fromClient:");
}

id objc_msgSend__handleSendPlaybackSessionMigrateBeginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendPlaybackSessionMigrateBeginMessage:fromClient:");
}

id objc_msgSend__handleSendPlaybackSessionMigrateEndMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendPlaybackSessionMigrateEndMessage:fromClient:");
}

id objc_msgSend__handleSendTelevisionCustomDataMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendTelevisionCustomDataMessage:fromClient:");
}

id objc_msgSend__handleServerXPCMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleServerXPCMessage:fromClient:");
}

id objc_msgSend__handleSetActiveOriginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetActiveOriginMessage:fromClient:");
}

id objc_msgSend__handleSetApplicationPickedRoutes_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetApplicationPickedRoutes:fromClient:");
}

id objc_msgSend__handleSetCanBeNowPlayingAppMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetCanBeNowPlayingAppMessage:fromClient:");
}

id objc_msgSend__handleSetCanBeNowPlayingPlayerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetCanBeNowPlayingPlayerMessage:fromClient:");
}

id objc_msgSend__handleSetClientPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetClientPropertiesMessage:fromClient:");
}

id objc_msgSend__handleSetConnectionStateMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetConnectionStateMessage:");
}

id objc_msgSend__handleSetConnectionStateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetConnectionStateMessage:fromClient:");
}

id objc_msgSend__handleSetConversationDetectionEnabledMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetConversationDetectionEnabledMessage:fromClient:");
}

id objc_msgSend__handleSetDefaultSupportedCommandsMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetDefaultSupportedCommandsMessage:");
}

id objc_msgSend__handleSetDefaultSupportedCommandsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetDefaultSupportedCommandsMessage:fromClient:");
}

id objc_msgSend__handleSetDiscoveryModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetDiscoveryModeMessage:fromClient:");
}

id objc_msgSend__handleSetHardwareRemoteBehaviorMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetHardwareRemoteBehaviorMessage:fromClient:");
}

id objc_msgSend__handleSetHiliteModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetHiliteModeMessage:fromClient:");
}

id objc_msgSend__handleSetInputModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetInputModeMessage:fromClient:");
}

id objc_msgSend__handleSetListeningModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetListeningModeMessage:fromClient:");
}

id objc_msgSend__handleSetMessageLogging_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetMessageLogging:fromClient:");
}

id objc_msgSend__handleSetNearbyDevice_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNearbyDevice:fromClient:");
}

id objc_msgSend__handleSetNearbyDevicesToRemoteControlMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNearbyDevicesToRemoteControlMessage:fromClient:");
}

id objc_msgSend__handleSetNowPlayingAppOverrideMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNowPlayingAppOverrideMessage:fromClient:");
}

id objc_msgSend__handleSetNowPlayingClientMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNowPlayingClientMessage:");
}

id objc_msgSend__handleSetNowPlayingClientMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNowPlayingClientMessage:fromClient:");
}

id objc_msgSend__handleSetNowPlayingPlayerMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNowPlayingPlayerMessage:");
}

id objc_msgSend__handleSetNowPlayingPlayerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNowPlayingPlayerMessage:fromClient:");
}

id objc_msgSend__handleSetOriginClientPropertiesMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetOriginClientPropertiesMessage:");
}

id objc_msgSend__handleSetOriginClientPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetOriginClientPropertiesMessage:fromClient:");
}

id objc_msgSend__handleSetOverriddenNowPlayingAppMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetOverriddenNowPlayingAppMessage:fromClient:");
}

id objc_msgSend__handleSetPickedRouteHasVolumeControlMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPickedRouteHasVolumeControlMessage:fromClient:");
}

id objc_msgSend__handleSetPickedRouteMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPickedRouteMessage:fromClient:");
}

id objc_msgSend__handleSetPlaybackQueue_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlaybackQueue:fromClient:");
}

id objc_msgSend__handleSetPlaybackQueueCapabilities_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlaybackQueueCapabilities:fromClient:");
}

id objc_msgSend__handleSetPlaybackStateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlaybackStateMessage:fromClient:");
}

id objc_msgSend__handleSetPlayerClientPropertiesMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlayerClientPropertiesMessage:");
}

id objc_msgSend__handleSetPlayerClientPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlayerClientPropertiesMessage:fromClient:");
}

id objc_msgSend__handleSetPlayerPictureInPictureEnabledMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlayerPictureInPictureEnabledMessage:fromClient:");
}

id objc_msgSend__handleSetPlayerPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlayerPropertiesMessage:fromClient:");
}

id objc_msgSend__handleSetRecentAVOutputDeviceUIDMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetRecentAVOutputDeviceUIDMessage:fromClient:");
}

id objc_msgSend__handleSetRouteDiscoveryModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetRouteDiscoveryModeMessage:fromClient:");
}

id objc_msgSend__handleSetSavedAVRoutePasswordMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetSavedAVRoutePasswordMessage:fromClient:");
}

id objc_msgSend__handleSetStateMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetStateMessage:");
}

id objc_msgSend__handleSetSupportedBrowsableContentAPIsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetSupportedBrowsableContentAPIsMessage:fromClient:");
}

id objc_msgSend__handleSetSupportedCommandsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetSupportedCommandsMessage:fromClient:");
}

id objc_msgSend__handleSetSystemIsMutedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetSystemIsMutedMessage:fromClient:");
}

id objc_msgSend__handleSetSystemVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetSystemVolumeMessage:fromClient:");
}

id objc_msgSend__handleSetUIServiceRelayEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetUIServiceRelayEndpointMessage:fromClient:");
}

id objc_msgSend__handleSetVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetVolumeMessage:fromClient:");
}

id objc_msgSend__handleStartNowPlayingSession_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleStartNowPlayingSession:fromClient:");
}

id objc_msgSend__handleStopNowPlayingSession_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleStopNowPlayingSession:fromClient:");
}

id objc_msgSend__handleSupportedAPIsDidChangeForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSupportedAPIsDidChangeForClient:");
}

id objc_msgSend__handleSuspendDisconnectionPauseMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSuspendDisconnectionPauseMessage:fromClient:");
}

id objc_msgSend__handleTelevisionEndpointAvailableMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTelevisionEndpointAvailableMessage:fromClient:");
}

id objc_msgSend__handleTextInputMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTextInputMessage:fromClient:");
}

id objc_msgSend__handleTouchEvent_withDeviceID_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTouchEvent:withDeviceID:fromClient:");
}

id objc_msgSend__handleTriggerAudioFadeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTriggerAudioFadeMessage:fromClient:");
}

id objc_msgSend__handleUnpickAirPlayRoutesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUnpickAirPlayRoutesMessage:fromClient:");
}

id objc_msgSend__handleUnregisterPairingHandler_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUnregisterPairingHandler:fromClient:");
}

id objc_msgSend__handleUpdateActiveSystemEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateActiveSystemEndpoint:");
}

id objc_msgSend__handleUpdateActiveSystemEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateActiveSystemEndpointMessage:fromClient:");
}

id objc_msgSend__handleUpdateActiveSystemEndpointUIDMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateActiveSystemEndpointUIDMessage:fromClient:");
}

id objc_msgSend__handleUpdateClientMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateClientMessage:");
}

id objc_msgSend__handleUpdateClientPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateClientPropertiesMessage:fromClient:");
}

id objc_msgSend__handleUpdateContentItemsMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateContentItemsMessage:");
}

id objc_msgSend__handleUpdatePlayerMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatePlayerMessage:");
}

id objc_msgSend__handleUpdatePlayerPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatePlayerPropertiesMessage:fromClient:");
}

id objc_msgSend__handleVoiceDataReceivedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVoiceDataReceivedMessage:fromClient:");
}

id objc_msgSend__handleVolumeAvailabilityDidChangeNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVolumeAvailabilityDidChangeNotification:");
}

id objc_msgSend__handleVolumeControlCapabilitiesDidChangeMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVolumeControlCapabilitiesDidChangeMessage:");
}

id objc_msgSend__handleVolumeDidChangeMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVolumeDidChangeMessage:");
}

id objc_msgSend__handleVolumeMutedDidChangeMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVolumeMutedDidChangeMessage:");
}

id objc_msgSend__handleWakeMediaAppMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleWakeMediaAppMessage:fromClient:");
}

id objc_msgSend__handleWakePlayerServiceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleWakePlayerServiceMessage:fromClient:");
}

id objc_msgSend__handleWillStartPlayingInterruptMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleWillStartPlayingInterruptMessage:fromClient:");
}

id objc_msgSend__handleXPCMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleXPCMessage:");
}

id objc_msgSend__hasForwarderForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasForwarderForOrigin:");
}

id objc_msgSend__hasPersonalDeviceForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasPersonalDeviceForContext:");
}

id objc_msgSend__hostAssertionForType_pid_bundleID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hostAssertionForType:pid:bundleID:name:");
}

id objc_msgSend__idsPriorityFromPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_idsPriorityFromPriority:");
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _[a1 _init];
}

id objc_msgSend__initVolumeDataIfNeccessary(void *a1, const char *a2, ...)
{
  return _[a1 _initVolumeDataIfNeccessary];
}

id objc_msgSend__initWithLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithLabel:");
}

id objc_msgSend__initialize(void *a1, const char *a2, ...)
{
  return _[a1 _initialize];
}

id objc_msgSend__initializeBonjourServiceWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initializeBonjourServiceWithDeviceInfo:");
}

id objc_msgSend__initializeDatabaseSchema(void *a1, const char *a2, ...)
{
  return _[a1 _initializeDatabaseSchema];
}

id objc_msgSend__initializeDiscoverySessions(void *a1, const char *a2, ...)
{
  return _[a1 _initializeDiscoverySessions];
}

id objc_msgSend__initializeExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initializeExternalDevice:");
}

id objc_msgSend__initializeSystemEndpointInfo(void *a1, const char *a2, ...)
{
  return _[a1 _initializeSystemEndpointInfo];
}

id objc_msgSend__initializeWithIdentity_nearbyGroup_isHosted_hostSigningKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initializeWithIdentity:nearbyGroup:isHosted:hostSigningKey:");
}

id objc_msgSend__intializeClient_forRemoteControlChannel_authCallback_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intializeClient:forRemoteControlChannel:authCallback:completion:");
}

id objc_msgSend__invalidate(void *a1, const char *a2, ...)
{
  return _[a1 _invalidate];
}

id objc_msgSend__isACriticalSectionActive(void *a1, const char *a2, ...)
{
  return _[a1 _isACriticalSectionActive];
}

id objc_msgSend__isAllowedAccessToDataFromPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAllowedAccessToDataFromPlayerPath:");
}

id objc_msgSend__isAllowedToUpdateRecommendationForOutputDevice_recentlyDismissed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAllowedToUpdateRecommendationForOutputDevice:recentlyDismissed:");
}

id objc_msgSend__isCommandCacheCreating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCommandCacheCreating:");
}

id objc_msgSend__isCommandCacheable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCommandCacheable:");
}

id objc_msgSend__isMediaAppInstalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isMediaAppInstalled:");
}

id objc_msgSend__isRequestForCompanionOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRequestForCompanionOrigin:");
}

id objc_msgSend__isRequestForCurrentCongifuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRequestForCurrentCongifuration:");
}

id objc_msgSend__isRequestForLocalOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRequestForLocalOrigin:");
}

id objc_msgSend__joinGroupSessionWithToken_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_joinGroupSessionWithToken:completion:");
}

id objc_msgSend__launch(void *a1, const char *a2, ...)
{
  return _[a1 _launch];
}

id objc_msgSend__launchTVClusterSettings(void *a1, const char *a2, ...)
{
  return _[a1 _launchTVClusterSettings];
}

id objc_msgSend__loadDefaults(void *a1, const char *a2, ...)
{
  return _[a1 _loadDefaults];
}

id objc_msgSend__loadMostRecentlyPicked(void *a1, const char *a2, ...)
{
  return _[a1 _loadMostRecentlyPicked];
}

id objc_msgSend__loadTokenRecords(void *a1, const char *a2, ...)
{
  return _[a1 _loadTokenRecords];
}

id objc_msgSend__logChangesInModifyingOutputDevice_toOutputDevice_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logChangesInModifyingOutputDevice:toOutputDevice:reason:");
}

id objc_msgSend__logEndpointsChanged_oldEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logEndpointsChanged:oldEndpoints:");
}

id objc_msgSend__maybeAddNativeGroupToGroups_availableOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybeAddNativeGroupToGroups:availableOutputDevices:");
}

id objc_msgSend__maybeAttemptToDiscoverAndConnectToCompanionWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybeAttemptToDiscoverAndConnectToCompanionWithReason:");
}

id objc_msgSend__maybeBatchRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybeBatchRequest:");
}

id objc_msgSend__maybePostEndpointDidAddOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostEndpointDidAddOutputDevice:");
}

id objc_msgSend__maybePostEndpointDidChangeOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostEndpointDidChangeOutputDevice:");
}

id objc_msgSend__maybePostEndpointDidRemoveOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostEndpointDidRemoveOutputDevice:");
}

id objc_msgSend__maybePostVolumeControlCapabilitiesDidChange_outputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostVolumeControlCapabilitiesDidChange:outputDevice:");
}

id objc_msgSend__maybePostVolumeDidChange_outputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostVolumeDidChange:outputDevice:");
}

id objc_msgSend__maybePostVolumeIsMutedDidChange_outputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostVolumeIsMutedDidChange:outputDevice:");
}

id objc_msgSend__maybeSendCommandPreviewForOutputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybeSendCommandPreviewForOutputDeviceUID:details:");
}

id objc_msgSend__maybeWakeClient(void *a1, const char *a2, ...)
{
  return _[a1 _maybeWakeClient];
}

id objc_msgSend__mediaServerController(void *a1, const char *a2, ...)
{
  return _[a1 _mediaServerController];
}

id objc_msgSend__mergeDeviceInfo_intoProtobuf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeDeviceInfo:intoProtobuf:");
}

id objc_msgSend__mergeOutputDevice_intoProtobuf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeOutputDevice:intoProtobuf:");
}

id objc_msgSend__messageCanLaunchApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_messageCanLaunchApp:");
}

id objc_msgSend__messageRequiresMediaServerBlessing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_messageRequiresMediaServerBlessing:");
}

id objc_msgSend__modifyPredictedOutputDevicesWithRequest_outputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modifyPredictedOutputDevicesWithRequest:outputContext:");
}

id objc_msgSend__monitorForTermination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_monitorForTermination:");
}

id objc_msgSend__mostRecentlyUpdatedClient(void *a1, const char *a2, ...)
{
  return _[a1 _mostRecentlyUpdatedClient];
}

id objc_msgSend__mutableExternalDeviceClientsWithRegisteredCallbacks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mutableExternalDeviceClientsWithRegisteredCallbacks:");
}

id objc_msgSend__mutableExternalDeviceClientsWithRegisteredNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mutableExternalDeviceClientsWithRegisteredNotification:");
}

id objc_msgSend__netServiceTXTRecordDataWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_netServiceTXTRecordDataWithDeviceInfo:");
}

id objc_msgSend__newIOKitDeviceProperties(void *a1, const char *a2, ...)
{
  return _[a1 _newIOKitDeviceProperties];
}

id objc_msgSend__normalizeOutputDeviceUIDs_fromDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_normalizeOutputDeviceUIDs:fromDeviceInfo:");
}

id objc_msgSend__notifyActiveSessionMaybeWillBeHijackedByNativePlaybackFromOutputContextModification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyActiveSessionMaybeWillBeHijackedByNativePlaybackFromOutputContextModification:");
}

id objc_msgSend__notifyAndDisconnectClient_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyAndDisconnectClient:withError:");
}

id objc_msgSend__notifyAndDisconnectClients_withError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyAndDisconnectClients:withError:completion:");
}

id objc_msgSend__notifyDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDelegate];
}

id objc_msgSend__notifyDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegate:");
}

id objc_msgSend__notifyDelegateDidCloseWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegateDidCloseWithError:");
}

id objc_msgSend__notifyDelegateDidReceiveData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegateDidReceiveData:");
}

id objc_msgSend__notifyDelegateNowPlayingPlaybackStateDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDelegateNowPlayingPlaybackStateDidChange];
}

id objc_msgSend__notifyDelegateRoutesDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDelegateRoutesDidChange];
}

id objc_msgSend__notifyDelegateWithConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegateWithConnection:");
}

id objc_msgSend__notifyLocalDeviceDidChangeOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 _notifyLocalDeviceDidChangeOutputContext];
}

id objc_msgSend__nowPlayingControllerConfigurationForUID_topologyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nowPlayingControllerConfigurationForUID:topologyIdentifier:");
}

id objc_msgSend__nowPlayingPlaybackStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nowPlayingPlaybackStateDidChange:");
}

id objc_msgSend__oddsShimDataSource(void *a1, const char *a2, ...)
{
  return _[a1 _oddsShimDataSource];
}

id objc_msgSend__onCalloutQueue_notifyStatusDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onCalloutQueue_notifyStatusDidChange:");
}

id objc_msgSend__onIDSQueue_connectDiscoveryChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onIDSQueue_connectDiscoveryChannel:");
}

id objc_msgSend__onIDSQueue_disconnectDiscoveryChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onIDSQueue_disconnectDiscoveryChannel:");
}

id objc_msgSend__onIDSQueue_initializeDiscoveryChannel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onIDSQueue_initializeDiscoveryChannel");
}

id objc_msgSend__onQueue_activeOriginClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_activeOriginClient");
}

id objc_msgSend__onQueue_activePlayerClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_activePlayerClient");
}

id objc_msgSend__onQueue_addNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_addNowPlayingClient:");
}

id objc_msgSend__onQueue_addPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_addPlayer:");
}

id objc_msgSend__onQueue_adjustPlaybackTimerIfNeededForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_adjustPlaybackTimerIfNeededForPlayerPath:");
}

id objc_msgSend__onQueue_allNowPlayingInfoClients(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_allNowPlayingInfoClients");
}

id objc_msgSend__onQueue_anyPlayerIsPlaying(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_anyPlayerIsPlaying");
}

id objc_msgSend__onQueue_beginTimerWithInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_beginTimerWithInterval:");
}

id objc_msgSend__onQueue_calculateActiveNowPlayingClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateActiveNowPlayingClient");
}

id objc_msgSend__onQueue_calculateActiveNowPlayingPlayerClients(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateActiveNowPlayingPlayerClients");
}

id objc_msgSend__onQueue_calculateComputedNowPlayingClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateComputedNowPlayingClient");
}

id objc_msgSend__onQueue_calculateInferredNowPlayingClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateInferredNowPlayingClient");
}

id objc_msgSend__onQueue_calculateInferredPlaybackStateForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateInferredPlaybackStateForPlayer:");
}

id objc_msgSend__onQueue_calculateShouldShowLockScreenForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateShouldShowLockScreenForReason:");
}

id objc_msgSend__onQueue_canBeNowPlayingDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_canBeNowPlayingDidChange:");
}

id objc_msgSend__onQueue_clearLocalOriginForwaderWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_clearLocalOriginForwaderWithReason:");
}

id objc_msgSend__onQueue_companionOriginClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_companionOriginClient");
}

id objc_msgSend__onQueue_createAndActivateConnection_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_createAndActivateConnection:forClient:");
}

id objc_msgSend__onQueue_createRunningSessionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_createRunningSessionWithCompletion:");
}

id objc_msgSend__onQueue_createRunningSessionWithServiceToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_createRunningSessionWithServiceToken:");
}

id objc_msgSend__onQueue_destroyPlayerPathsForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_destroyPlayerPathsForOrigin:");
}

id objc_msgSend__onQueue_determineGroupLeaderForOutputDevices_availableOutputDevices_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_determineGroupLeaderForOutputDevices:availableOutputDevices:options:");
}

id objc_msgSend__onQueue_existingPlayerClientForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_existingPlayerClientForPlayer:");
}

id objc_msgSend__onQueue_forwardOriginToLocalOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_forwardOriginToLocalOrigin:");
}

id objc_msgSend__onQueue_initializeDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_initializeDisplayName");
}

id objc_msgSend__onQueue_initializeSessionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_initializeSessionWithCompletion:");
}

id objc_msgSend__onQueue_invalidateSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_invalidateSession");
}

id objc_msgSend__onQueue_isLockScreenWidgetVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_isLockScreenWidgetVisible");
}

id objc_msgSend__onQueue_isPlaying(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_isPlaying");
}

id objc_msgSend__onQueue_isPlayingDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_isPlayingDidChange:");
}

id objc_msgSend__onQueue_lastPlayingDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_lastPlayingDate");
}

id objc_msgSend__onQueue_makeExternalDeviceForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_makeExternalDeviceForEndpoint:");
}

id objc_msgSend__onQueue_makeExternalDeviceTransportForEndpoint_designatedGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_makeExternalDeviceTransportForEndpoint:designatedGroupLeader:");
}

id objc_msgSend__onQueue_makeHostedExternalDeviceForEndpoint_didCreate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_makeHostedExternalDeviceForEndpoint:didCreate:");
}

id objc_msgSend__onQueue_makeHostedExternalDeviceForEndpoint_didCreate_factory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_makeHostedExternalDeviceForEndpoint:didCreate:factory:");
}

id objc_msgSend__onQueue_makeLocalHostedExternalDeviceForEndpoint_didCreate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_makeLocalHostedExternalDeviceForEndpoint:didCreate:");
}

id objc_msgSend__onQueue_notifyObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_notifyObservers:");
}

id objc_msgSend__onQueue_originClientForDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_originClientForDeviceUID:");
}

id objc_msgSend__onQueue_originClientForGroupLeaderOfDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_originClientForGroupLeaderOfDeviceUID:");
}

id objc_msgSend__onQueue_originClientForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_originClientForOrigin:");
}

id objc_msgSend__onQueue_pictureInPictureEnabledDidChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_pictureInPictureEnabledDidChanged:");
}

id objc_msgSend__onQueue_playbackQueueCapabilitiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackQueueCapabilitiesDidChange:");
}

id objc_msgSend__onQueue_playbackQueueContentItemsArtworkDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackQueueContentItemsArtworkDidChange:");
}

id objc_msgSend__onQueue_playbackQueueContentItemsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackQueueContentItemsDidChange:");
}

id objc_msgSend__onQueue_playbackQueueDidChange_nowPlayingItemChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackQueueDidChange:nowPlayingItemChanged:");
}

id objc_msgSend__onQueue_playbackState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackState");
}

id objc_msgSend__onQueue_playbackStateDidChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackStateDidChanged:");
}

id objc_msgSend__onQueue_playerClientForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playerClientForPlayer:");
}

id objc_msgSend__onQueue_popState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_popState");
}

id objc_msgSend__onQueue_presentDialogWithTitle_message_defaultButtonTitle_alternateButtonTitle_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_presentDialogWithTitle:message:defaultButtonTitle:alternateButtonTitle:completion:");
}

id objc_msgSend__onQueue_pushState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_pushState");
}

id objc_msgSend__onQueue_queryExistingPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_queryExistingPlayerPath:");
}

id objc_msgSend__onQueue_recalculateStateForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_recalculateStateForReason:");
}

id objc_msgSend__onQueue_reevaluateRemoteControlState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reevaluateRemoteControlState");
}

id objc_msgSend__onQueue_reevaluateShouldShowLockScreenForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reevaluateShouldShowLockScreenForReason:");
}

id objc_msgSend__onQueue_reevaluateStateWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reevaluateStateWithReason:");
}

id objc_msgSend__onQueue_registerDisconnectionHandler_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_registerDisconnectionHandler:forClient:");
}

id objc_msgSend__onQueue_reloadEndpoints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reloadEndpoints");
}

id objc_msgSend__onQueue_reloadInferredStateFromDataSource_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reloadInferredStateFromDataSource:reason:");
}

id objc_msgSend__onQueue_reloadOutputDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reloadOutputDevices");
}

id objc_msgSend__onQueue_reloadWithOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reloadWithOutputDevices:");
}

id objc_msgSend__onQueue_removeNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_removeNowPlayingClient:");
}

id objc_msgSend__onQueue_savePersistentActiveOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_savePersistentActiveOrigin:");
}

id objc_msgSend__onQueue_sendPrepareForSetQueueTo_reason_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_sendPrepareForSetQueueTo:reason:type:");
}

id objc_msgSend__onQueue_setActiveOrigin_saveState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_setActiveOrigin:saveState:");
}

id objc_msgSend__onQueue_setActivePlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_setActivePlayerClient:");
}

id objc_msgSend__onQueue_simplifyToplogyOfPlayerPathIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_simplifyToplogyOfPlayerPathIfNeeded:");
}

id objc_msgSend__onQueue_stateForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_stateForPlayerPath:");
}

id objc_msgSend__onQueue_supportedCommandsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_supportedCommandsDidChange:");
}

id objc_msgSend__onQueue_updateActivityStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_updateActivityStatus:");
}

id objc_msgSend__onSerialQueue_addConnectedEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_addConnectedEndpoint:");
}

id objc_msgSend__onSerialQueue_calculateActiveEndpoint_event_reason_suppressPairedDeviceSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_calculateActiveEndpoint:event:reason:suppressPairedDeviceSync:");
}

id objc_msgSend__onSerialQueue_calculateProactiveEndpointForEvent_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_calculateProactiveEndpointForEvent:reason:");
}

id objc_msgSend__onSerialQueue_calculateProactiveRecommendedEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_calculateProactiveRecommendedEndpoint:");
}

id objc_msgSend__onSerialQueue_calculateRecommendedEndpointForEvent_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_calculateRecommendedEndpointForEvent:reason:");
}

id objc_msgSend__onSerialQueue_calculateUserSelectedEndpointForEvent_reason_suppressPairedDeviceSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_calculateUserSelectedEndpointForEvent:reason:suppressPairedDeviceSync:");
}

id objc_msgSend__onSerialQueue_clearActiveEndpointType_outputDeviceUID_event_reason_clientBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_clearActiveEndpointType:outputDeviceUID:event:reason:clientBundleIdentifier:");
}

id objc_msgSend__onSerialQueue_completeGroupSessionRequestsWithIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_completeGroupSessionRequestsWithIdentifier:error:");
}

id objc_msgSend__onSerialQueue_connectToEndpoint_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_connectToEndpoint:reason:queue:completion:");
}

id objc_msgSend__onSerialQueue_deviceInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_deviceInfo");
}

id objc_msgSend__onSerialQueue_isEndpointsDesignatedGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_isEndpointsDesignatedGroupLeader:");
}

id objc_msgSend__onSerialQueue_maybeSetupPlaybackTimerForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_maybeSetupPlaybackTimerForEvent:");
}

id objc_msgSend__onSerialQueue_maybeSetupUserSelectedTimerForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_maybeSetupUserSelectedTimerForEvent:");
}

id objc_msgSend__onSerialQueue_prepareToConnectWithOptions_userInfo_connectionAttemptDetails_connectionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_prepareToConnectWithOptions:userInfo:connectionAttemptDetails:connectionHandler:");
}

id objc_msgSend__onSerialQueue_reconnectToOutputDevice_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_reconnectToOutputDevice:queue:completion:");
}

id objc_msgSend__onSerialQueue_reevaluateActiveEndpoint_event_changeType_eventReason_clientBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_reevaluateActiveEndpoint:event:changeType:eventReason:clientBundleIdentifier:");
}

id objc_msgSend__onSerialQueue_reevaluateActiveEndpoint_event_eventReason_clientBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_reevaluateActiveEndpoint:event:eventReason:clientBundleIdentifier:");
}

id objc_msgSend__onSerialQueue_reevaluateVolumeControlCapabilitiesForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_reevaluateVolumeControlCapabilitiesForEndpoint:");
}

id objc_msgSend__onSerialQueue_restoreElectedPlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_restoreElectedPlayer");
}

id objc_msgSend__onSerialQueue_updateSystemEndpoint_event_eventReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_updateSystemEndpoint:event:eventReason:");
}

id objc_msgSend__onSyncSelf_calculateElectedPlayerForOriginClient_event_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSyncSelf_calculateElectedPlayerForOriginClient:event:reason:");
}

id objc_msgSend__onSyncSelf_maybeSetupPlaybackTimeoutTimerForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSyncSelf_maybeSetupPlaybackTimeoutTimerForEvent:");
}

id objc_msgSend__onSyncSelf_reevaluateElectedPlayerForEvent_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSyncSelf_reevaluateElectedPlayerForEvent:withReason:");
}

id objc_msgSend__onWorkerQueue_connectRemoteControlChannelForDestination_session_userInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_connectRemoteControlChannelForDestination:session:userInfo:completion:");
}

id objc_msgSend__onWorkerQueue_connectRemoteControlChannelForSource_destination_destinationGroupUID_session_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_connectRemoteControlChannelForSource:destination:destinationGroupUID:session:name:");
}

id objc_msgSend__onWorkerQueue_connectWithOptions_isRetry_userInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_connectWithOptions:isRetry:userInfo:completion:");
}

id objc_msgSend__onWorkerQueue_createClientConnectionWithTransport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_createClientConnectionWithTransport:");
}

id objc_msgSend__onWorkerQueue_disconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_disconnect:");
}

id objc_msgSend__onWorkerQueue_disconnectAllRemoteControlChannelsWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_disconnectAllRemoteControlChannelsWithError:");
}

id objc_msgSend__onWorkerQueue_disconnectDiscoveryChannel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_disconnectDiscoveryChannel");
}

id objc_msgSend__onWorkerQueue_disconnectRemoteControlChannelsForDestination_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_disconnectRemoteControlChannelsForDestination:error:");
}

id objc_msgSend__onWorkerQueue_disconnectRemoteControlChannelsWithError_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_disconnectRemoteControlChannelsWithError:predicate:");
}

id objc_msgSend__onWorkerQueue_initializeConnectionWithOptions_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_initializeConnectionWithOptions:userInfo:");
}

id objc_msgSend__onWorkerQueue_loadDeviceInfoWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_loadDeviceInfoWithUserInfo:");
}

id objc_msgSend__onWorkerQueue_maybeRetargetActiveOutputDeviceUIDForNativeOrAirPlayback_fromCurrentActiveEndpoint_withLocalDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_maybeRetargetActiveOutputDeviceUIDForNativeOrAirPlayback:fromCurrentActiveEndpoint:withLocalDeviceInfo:");
}

id objc_msgSend__onWorkerQueue_maybeRetargetActiveOutputDeviceUIDForRemoteEndpointChanges_fromCurrentActiveEndpoint_withDeviceInfo_previousDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_maybeRetargetActiveOutputDeviceUIDForRemoteEndpointChanges:fromCurrentActiveEndpoint:withDeviceInfo:previousDeviceInfo:");
}

id objc_msgSend__onWorkerQueue_reRegisterCustomOriginWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_reRegisterCustomOriginWithUserInfo:");
}

id objc_msgSend__onWorkerQueue_registerCustomOriginWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_registerCustomOriginWithUserInfo:");
}

id objc_msgSend__onWorkerQueue_sendBatchedMessages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_sendBatchedMessages");
}

id objc_msgSend__onWorkerQueue_sendEndpoint_toClient_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_sendEndpoint:toClient:options:");
}

id objc_msgSend__onWorkerQueue_syncClientStateWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_syncClientStateWithUserInfo:");
}

id objc_msgSend__openDatabase(void *a1, const char *a2, ...)
{
  return _[a1 _openDatabase];
}

id objc_msgSend__optionsDictionary(void *a1, const char *a2, ...)
{
  return _[a1 _optionsDictionary];
}

id objc_msgSend__origin_client_matchesSubscribedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_origin:client:matchesSubscribedPlayerPath:");
}

id objc_msgSend__origin_client_player_matchesSubscribedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_origin:client:player:matchesSubscribedPlayerPath:");
}

id objc_msgSend__origin_matchesSubscribedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_origin:matchesSubscribedPlayerPath:");
}

id objc_msgSend__passwordDialogForRouteWithName_usingInputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_passwordDialogForRouteWithName:usingInputType:");
}

id objc_msgSend__pauseOutputDeviceUIDs_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pauseOutputDeviceUIDs:details:queue:completion:");
}

id objc_msgSend__pausePredicatedRoutesSync(void *a1, const char *a2, ...)
{
  return _[a1 _pausePredicatedRoutesSync];
}

id objc_msgSend__performCommandProcessingAfterSend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performCommandProcessingAfterSend:");
}

id objc_msgSend__performOperation_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performOperation:details:completion:");
}

id objc_msgSend__persistConnectionRecordsToDisk(void *a1, const char *a2, ...)
{
  return _[a1 _persistConnectionRecordsToDisk];
}

id objc_msgSend__persistPlaybackSessionAndUpdateOptionsForSessionPreloadCommand_forClient_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_persistPlaybackSessionAndUpdateOptionsForSessionPreloadCommand:forClient:error:");
}

id objc_msgSend__platformHasNativeMuteSupport(void *a1, const char *a2, ...)
{
  return _[a1 _platformHasNativeMuteSupport];
}

id objc_msgSend__playerPath_matchesSubscribedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playerPath:matchesSubscribedPlayerPath:");
}

id objc_msgSend__playerPathForNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playerPathForNowPlayingClient:");
}

id objc_msgSend__popNowPlayingAppStack(void *a1, const char *a2, ...)
{
  return _[a1 _popNowPlayingAppStack];
}

id objc_msgSend__populateApplicationSpecificDataForPrepareForSetQueueCommand_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateApplicationSpecificDataForPrepareForSetQueueCommand:forClient:");
}

id objc_msgSend__postAppActivityNotificationNamed_withActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postAppActivityNotificationNamed:withActivity:");
}

id objc_msgSend__postNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postNotification:");
}

id objc_msgSend__postRouteStatusDidChangeNotificationForRoute_newStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postRouteStatusDidChangeNotificationForRoute:newStatus:");
}

id objc_msgSend__predictGroupLeaderForOutputDeviceIDs_options_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predictGroupLeaderForOutputDeviceIDs:options:details:");
}

id objc_msgSend__preferredIdentifierForMACAddress_identifier_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredIdentifierForMACAddress:identifier:name:");
}

id objc_msgSend__presentDialogWithTitle_message_defaultButtonTitle_alternateButtonTitle_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentDialogWithTitle:message:defaultButtonTitle:alternateButtonTitle:completion:");
}

id objc_msgSend__presentPasswordDialogForRoute_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPasswordDialogForRoute:withOptions:");
}

id objc_msgSend__presentRoutePickerWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentRoutePickerWithConfiguration:");
}

id objc_msgSend__prewarmMediaApps(void *a1, const char *a2, ...)
{
  return _[a1 _prewarmMediaApps];
}

id objc_msgSend__processCanMigrateToLocalEndpointEvent_timestamp_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processCanMigrateToLocalEndpointEvent:timestamp:error:");
}

id objc_msgSend__processDiscoveryObserverChanges(void *a1, const char *a2, ...)
{
  return _[a1 _processDiscoveryObserverChanges];
}

id objc_msgSend__pruneCache(void *a1, const char *a2, ...)
{
  return _[a1 _pruneCache];
}

id objc_msgSend__query_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_query:");
}

id objc_msgSend__readConnectionRecordsFromDisk(void *a1, const char *a2, ...)
{
  return _[a1 _readConnectionRecordsFromDisk];
}

id objc_msgSend__readDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _readDeviceInfo];
}

id objc_msgSend__readLegacyDeviceInfoIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _readLegacyDeviceInfoIdentifier];
}

id objc_msgSend__reevaluateCanBeNowPlaying(void *a1, const char *a2, ...)
{
  return _[a1 _reevaluateCanBeNowPlaying];
}

id objc_msgSend__reevaluateDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _reevaluateDeviceInfo];
}

id objc_msgSend__reevaluateEffectiveDiscoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 _reevaluateEffectiveDiscoveryMode];
}

id objc_msgSend__reevaluatePredictedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 _reevaluatePredictedRoutes];
}

id objc_msgSend__reevaluateSecondaryConnectionWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reevaluateSecondaryConnectionWithDeviceInfo:");
}

id objc_msgSend__reevaluateWithEndpoint_deviceInfo_previousDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reevaluateWithEndpoint:deviceInfo:previousDeviceInfo:");
}

id objc_msgSend__reevaluateWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reevaluateWithReason:");
}

id objc_msgSend__refreshActiveSystemEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshActiveSystemEndpoint:");
}

id objc_msgSend__registerAVSystemControllerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerAVSystemControllerNotifications];
}

id objc_msgSend__registerCallbacks(void *a1, const char *a2, ...)
{
  return _[a1 _registerCallbacks];
}

id objc_msgSend__registerCompanionLinkHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _registerCompanionLinkHandlers];
}

id objc_msgSend__registerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerNotifications];
}

id objc_msgSend__relaunch(void *a1, const char *a2, ...)
{
  return _[a1 _relaunch];
}

id objc_msgSend__relayMessage_toClientWithBundleIDAndReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_relayMessage:toClientWithBundleIDAndReply:");
}

id objc_msgSend__relayXPCMessage_andReply_resultCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_relayXPCMessage:andReply:resultCallback:");
}

id objc_msgSend__reloadCachedNowPlayingClients(void *a1, const char *a2, ...)
{
  return _[a1 _reloadCachedNowPlayingClients];
}

id objc_msgSend__reloadEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 _reloadEndpoint];
}

id objc_msgSend__reloadHostedExternalDeviceCallbacks(void *a1, const char *a2, ...)
{
  return _[a1 _reloadHostedExternalDeviceCallbacks];
}

id objc_msgSend__reloadHostedExternalDeviceNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _reloadHostedExternalDeviceNotifications];
}

id objc_msgSend__reloadHostedExternalDeviceSubscribedPlayerPaths(void *a1, const char *a2, ...)
{
  return _[a1 _reloadHostedExternalDeviceSubscribedPlayerPaths];
}

id objc_msgSend__reloadOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 _reloadOutputDevices];
}

id objc_msgSend__reloadVolumeDataWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadVolumeDataWithReason:");
}

id objc_msgSend__remoteControlContextForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteControlContextForCommand:");
}

id objc_msgSend__removeAuthorizationCallbackForOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeAuthorizationCallbackForOutputDevice:");
}

id objc_msgSend__removeClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeClient:");
}

id objc_msgSend__removeExternalDeviceWithEndpointIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeExternalDeviceWithEndpointIdentifier:error:");
}

id objc_msgSend__removeNowPlayingClient_forOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeNowPlayingClient:forOrigin:");
}

id objc_msgSend__removeNowPlayingNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _removeNowPlayingNotifications];
}

id objc_msgSend__reportStreamCountAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 _reportStreamCountAnalytics];
}

id objc_msgSend__requiresConnectionToUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requiresConnectionToUpdate:");
}

id objc_msgSend__requiresPlaybackToUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requiresPlaybackToUpdate:");
}

id objc_msgSend__resetPersistedConnections(void *a1, const char *a2, ...)
{
  return _[a1 _resetPersistedConnections];
}

id objc_msgSend__resolveChangeTypeWithOriginClient_forEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveChangeTypeWithOriginClient:forEvent:");
}

id objc_msgSend__resolveCommandBeforeSend_toClient_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveCommandBeforeSend:toClient:error:");
}

id objc_msgSend__resolveOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveOutputDevices:");
}

id objc_msgSend__resolveReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveReason:");
}

id objc_msgSend__resolveReason_uid_name_requestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveReason:uid:name:requestID:");
}

id objc_msgSend__resolveRequest_withCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveRequest:withCapabilities:");
}

id objc_msgSend__resolvedLocalDeviceDestinationAppDisplayIdentifierForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolvedLocalDeviceDestinationAppDisplayIdentifierForCommand:");
}

id objc_msgSend__restoreNowPlayingClientState(void *a1, const char *a2, ...)
{
  return _[a1 _restoreNowPlayingClientState];
}

id objc_msgSend__resumeConnectionWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resumeConnectionWithState:");
}

id objc_msgSend__saveMostRecentlyPicked(void *a1, const char *a2, ...)
{
  return _[a1 _saveMostRecentlyPicked];
}

id objc_msgSend__savedPasswordForOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_savedPasswordForOutputDevice:");
}

id objc_msgSend__scheduleAvailableOutputDevicesReload(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleAvailableOutputDevicesReload];
}

id objc_msgSend__scheduleEndProcessAssertionForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleEndProcessAssertionForClient:");
}

id objc_msgSend__searchForBuddyLeaderWithTimeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchForBuddyLeaderWithTimeout:details:completion:");
}

id objc_msgSend__searchForContextUID_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchForContextUID:timeout:details:completion:");
}

id objc_msgSend__searchForGroupUID_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchForGroupUID:timeout:details:completion:");
}

id objc_msgSend__sendClientMessage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendClientMessage:completion:");
}

id objc_msgSend__sendCommand_withOptions_toEachEndpointContainingOutputDeviceUIDs_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCommand:withOptions:toEachEndpointContainingOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend__sendCommand_withOptions_toNewEndpointContainingOutputDeviceUIDs_playerPath_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCommand:withOptions:toNewEndpointContainingOutputDeviceUIDs:playerPath:timeout:details:completion:");
}

id objc_msgSend__sendCommandPreview_options_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCommandPreview:options:playerPath:");
}

id objc_msgSend__sendEndpoint_toClient_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendEndpoint:toClient:options:");
}

id objc_msgSend__sendExternalCommand_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendExternalCommand:withCompletionHandler:");
}

id objc_msgSend__sendInitiatePlaybackMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendInitiatePlaybackMessage:");
}

id objc_msgSend__sendLocalCommand_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendLocalCommand:withCompletionHandler:");
}

id objc_msgSend__sendMediaRemoteCommand_withOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMediaRemoteCommand:withOrigin:");
}

id objc_msgSend__sendMessage_device_type_destination_session_options_priority_replyID_response_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessage:device:type:destination:session:options:priority:replyID:response:");
}

id objc_msgSend__sendMessageForPlayerPath_timeout_reason_factory_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessageForPlayerPath:timeout:reason:factory:completion:");
}

id objc_msgSend__sendMessageFromEndpoint_outputDevice_withSource_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessageFromEndpoint:outputDevice:withSource:handler:");
}

id objc_msgSend__sendMessageFromEndpoint_withSource_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessageFromEndpoint:withSource:handler:");
}

id objc_msgSend__sendQueuedBeginLoadingMessagesForAvailableApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendQueuedBeginLoadingMessagesForAvailableApp:");
}

id objc_msgSend__sendQueuedCommandsForDestinationClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendQueuedCommandsForDestinationClient:");
}

id objc_msgSend__sendRemoteControlCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRemoteControlCommand:completion:");
}

id objc_msgSend__sendRemoteControlCommand_toDestinationClient_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRemoteControlCommand:toDestinationClient:withCompletion:");
}

id objc_msgSend__sendRemoteControlCommand_toDestinationClient_withLegacyCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRemoteControlCommand:toDestinationClient:withLegacyCompletion:");
}

id objc_msgSend__sendStateUpdateMessageFromOrigin_source_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendStateUpdateMessageFromOrigin:source:handler:");
}

id objc_msgSend__sendStateUpdateMessageFromPlayerPath_source_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendStateUpdateMessageFromPlayerPath:source:handler:");
}

id objc_msgSend__setApplicationPickedRoutes_updateRoutes_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setApplicationPickedRoutes:updateRoutes:forClient:");
}

id objc_msgSend__setCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCompletionHandler:");
}

id objc_msgSend__setEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setEndpoint:");
}

id objc_msgSend__setGameControllerInputMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setGameControllerInputMode:");
}

id objc_msgSend__setPickedRoute_withPassword_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPickedRoute:withPassword:options:");
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setQueue:");
}

id objc_msgSend__setupNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _setupNotifications];
}

id objc_msgSend__setupStandaloneDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 _setupStandaloneDiscovery];
}

id objc_msgSend__shouldAttemptToDiscoverAndConnectToCompanion(void *a1, const char *a2, ...)
{
  return _[a1 _shouldAttemptToDiscoverAndConnectToCompanion];
}

id objc_msgSend__shouldCommitLocalDeviceWithReason_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldCommitLocalDeviceWithReason:deviceInfo:");
}

id objc_msgSend__shouldCreateClusterOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 _shouldCreateClusterOutputDevices];
}

id objc_msgSend__shouldHandleNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldHandleNotification:");
}

id objc_msgSend__shouldIgnoreCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldIgnoreCommand:completion:");
}

id objc_msgSend__shouldIgnorePortStatusFailureForRouteWithUID_previouslyCachedRouteUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldIgnorePortStatusFailureForRouteWithUID:previouslyCachedRouteUID:");
}

id objc_msgSend__shouldNotifyChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldNotifyChange:");
}

id objc_msgSend__shouldRemoveLocalDeviceWithReason_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldRemoveLocalDeviceWithReason:deviceInfo:");
}

id objc_msgSend__shouldSendCompanionLinkMessage(void *a1, const char *a2, ...)
{
  return _[a1 _shouldSendCompanionLinkMessage];
}

id objc_msgSend__shouldSendStateUpdateMessageFromSource_toClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldSendStateUpdateMessageFromSource:toClient:");
}

id objc_msgSend__shouldUseNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldUseNotification:");
}

id objc_msgSend__sortNativeGroupToEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortNativeGroupToEnd:");
}

id objc_msgSend__sortSnapshots_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortSnapshots:");
}

id objc_msgSend__startObservingNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _startObservingNotifications];
}

id objc_msgSend__stateFromDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stateFromDataSource:");
}

id objc_msgSend__stopObservingNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _stopObservingNotifications];
}

id objc_msgSend__storePassword_forOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storePassword:forOutputDevice:");
}

id objc_msgSend__storePassword_forRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storePassword:forRoute:");
}

id objc_msgSend__storeRecentlyDismissedRecommendationForOutputDeviceUID_disableDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeRecentlyDismissedRecommendationForOutputDeviceUID:disableDuration:");
}

id objc_msgSend__submitLaunchFailure(void *a1, const char *a2, ...)
{
  return _[a1 _submitLaunchFailure];
}

id objc_msgSend__submitRelaunchEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_submitRelaunchEvent:");
}

id objc_msgSend__submitTerminationEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_submitTerminationEvent:");
}

id objc_msgSend__syncClientStateToConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncClientStateToConnection:");
}

id objc_msgSend__syncStateToClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncStateToClient:");
}

id objc_msgSend__synchronized_setSessionUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synchronized_setSessionUID:");
}

id objc_msgSend__takeProcessAssertionForClient_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_takeProcessAssertionForClient:withReason:");
}

id objc_msgSend__tearDownNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _tearDownNotifications];
}

id objc_msgSend__tombstoneHostedExternalDevice_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tombstoneHostedExternalDevice:error:");
}

id objc_msgSend__transactionEnded(void *a1, const char *a2, ...)
{
  return _[a1 _transactionEnded];
}

id objc_msgSend__txtDataChanged(void *a1, const char *a2, ...)
{
  return _[a1 _txtDataChanged];
}

id objc_msgSend__txtDataChangedWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_txtDataChangedWithDeviceInfo:");
}

id objc_msgSend__txtDataChangedWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_txtDataChangedWithUserInfo:");
}

id objc_msgSend__unpair_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unpair:");
}

id objc_msgSend__unregisterAVSystemControllerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterAVSystemControllerNotifications];
}

id objc_msgSend__unregisterNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterNotifications];
}

id objc_msgSend__updateAllowedDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAllowedDestinations:");
}

id objc_msgSend__updateCapabilitiesValueCache(void *a1, const char *a2, ...)
{
  return _[a1 _updateCapabilitiesValueCache];
}

id objc_msgSend__updateIsMutedValueCache(void *a1, const char *a2, ...)
{
  return _[a1 _updateIsMutedValueCache];
}

id objc_msgSend__updateMediaControlsBlob_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateMediaControlsBlob:sender:");
}

id objc_msgSend__updateNowPlayingAudioFormatContentInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updateNowPlayingAudioFormatContentInfo];
}

id objc_msgSend__updateSuggestionCountIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateSuggestionCountIfNeeded];
}

id objc_msgSend__updateSystemRouteDiscoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 _updateSystemRouteDiscoveryMode];
}

id objc_msgSend__updateTransaction(void *a1, const char *a2, ...)
{
  return _[a1 _updateTransaction];
}

id objc_msgSend__updateVolumeValueCache(void *a1, const char *a2, ...)
{
  return _[a1 _updateVolumeValueCache];
}

id objc_msgSend__validate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_validate:");
}

id objc_msgSend__validateAuditTokens_pids_auditTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_validateAuditTokens:pids:auditTokens:");
}

id objc_msgSend__validateDatabase(void *a1, const char *a2, ...)
{
  return _[a1 _validateDatabase];
}

id objc_msgSend__verifyClientVersionCompatibility_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_verifyClientVersionCompatibility:withError:");
}

id objc_msgSend__volumeFromAVController(void *a1, const char *a2, ...)
{
  return _[a1 _volumeFromAVController];
}

id objc_msgSend__wantsLibraryCommands(void *a1, const char *a2, ...)
{
  return _[a1 _wantsLibraryCommands];
}

id objc_msgSend__willStartingPlaybackToOutputDevicesInterrupt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_willStartingPlaybackToOutputDevicesInterrupt:");
}

id objc_msgSend__workerQueue(void *a1, const char *a2, ...)
{
  return _[a1 _workerQueue];
}

id objc_msgSend__writeConnectionRecordsToDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeConnectionRecordsToDisk:");
}

id objc_msgSend__writeDeviceInfo_toPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeDeviceInfo:toPath:");
}

id objc_msgSend__writeSystemEndpointInfo_recentlyDismissedRecommendationsInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeSystemEndpointInfo:recentlyDismissedRecommendationsInfo:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_accountRegisteredURIs(void *a1, const char *a2, ...)
{
  return _[a1 accountRegisteredURIs];
}

id objc_msgSend_accountType(void *a1, const char *a2, ...)
{
  return _[a1 accountType];
}

id objc_msgSend_accounts(void *a1, const char *a2, ...)
{
  return _[a1 accounts];
}

id objc_msgSend_acknowledgeSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acknowledgeSession:");
}

id objc_msgSend_acquireContentProviderAssertionForType_slot_identifier_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireContentProviderAssertionForType:slot:identifier:errorHandler:");
}

id objc_msgSend_acquireGroupSessionLowPowerPlatterAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireGroupSessionLowPowerPlatterAssertionWithReply:");
}

id objc_msgSend_acquireGroupSessionNearbyAssertionForSession_withReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireGroupSessionNearbyAssertionForSession:withReply:");
}

id objc_msgSend_acquireLockScreenControlsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 acquireLockScreenControlsAssertion];
}

id objc_msgSend_acquireLockScreenControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireLockScreenControlsAssertionWithReply:");
}

id objc_msgSend_acquireQuickControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireQuickControlsAssertionWithReply:");
}

id objc_msgSend_acquireRouteRecommendationAssertionForIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireRouteRecommendationAssertionForIdentifiers:");
}

id objc_msgSend_acquireRouteRecommendationAssertionForIdentifiers_withReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireRouteRecommendationAssertionForIdentifiers:withReply:");
}

id objc_msgSend_acquireScreenMirroringQuickControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireScreenMirroringQuickControlsAssertionWithReply:");
}

id objc_msgSend_acquireWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireWithError:");
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _[a1 activate];
}

id objc_msgSend_activateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithCompletion:");
}

id objc_msgSend_activateWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithContext:");
}

id objc_msgSend_activeBackgroundActivities(void *a1, const char *a2, ...)
{
  return _[a1 activeBackgroundActivities];
}

id objc_msgSend_activeBackgroundActivityType(void *a1, const char *a2, ...)
{
  return _[a1 activeBackgroundActivityType];
}

id objc_msgSend_activeBannerState(void *a1, const char *a2, ...)
{
  return _[a1 activeBannerState];
}

id objc_msgSend_activeContent(void *a1, const char *a2, ...)
{
  return _[a1 activeContent];
}

id objc_msgSend_activeDialog(void *a1, const char *a2, ...)
{
  return _[a1 activeDialog];
}

id objc_msgSend_activeEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 activeEndpoint];
}

id objc_msgSend_activeNowPlayingClient(void *a1, const char *a2, ...)
{
  return _[a1 activeNowPlayingClient];
}

id objc_msgSend_activeOriginClient(void *a1, const char *a2, ...)
{
  return _[a1 activeOriginClient];
}

id objc_msgSend_activeOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 activeOutputContexts];
}

id objc_msgSend_activeOutputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 activeOutputDeviceUID];
}

id objc_msgSend_activeOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeOutputDeviceUID:");
}

id objc_msgSend_activePasswordDialog(void *a1, const char *a2, ...)
{
  return _[a1 activePasswordDialog];
}

id objc_msgSend_activePillBannerState(void *a1, const char *a2, ...)
{
  return _[a1 activePillBannerState];
}

id objc_msgSend_activePillRequest(void *a1, const char *a2, ...)
{
  return _[a1 activePillRequest];
}

id objc_msgSend_activePlayerClient(void *a1, const char *a2, ...)
{
  return _[a1 activePlayerClient];
}

id objc_msgSend_activePlayerClients(void *a1, const char *a2, ...)
{
  return _[a1 activePlayerClients];
}

id objc_msgSend_activePlayerIsPlaying(void *a1, const char *a2, ...)
{
  return _[a1 activePlayerIsPlaying];
}

id objc_msgSend_activePlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 activePlayerPath];
}

id objc_msgSend_activeRecommendationActivities(void *a1, const char *a2, ...)
{
  return _[a1 activeRecommendationActivities];
}

id objc_msgSend_activeRequest(void *a1, const char *a2, ...)
{
  return _[a1 activeRequest];
}

id objc_msgSend_activeSessionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeSessionDidChange:");
}

id objc_msgSend_activeStatusItems(void *a1, const char *a2, ...)
{
  return _[a1 activeStatusItems];
}

id objc_msgSend_activeStreamCount(void *a1, const char *a2, ...)
{
  return _[a1 activeStreamCount];
}

id objc_msgSend_activeSystemEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 activeSystemEndpoint];
}

id objc_msgSend_activeSystemEndpointLock(void *a1, const char *a2, ...)
{
  return _[a1 activeSystemEndpointLock];
}

id objc_msgSend_activeSystemEndpointOutputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 activeSystemEndpointOutputDeviceUID];
}

id objc_msgSend_activeSystemEndpointOutputDeviceUIDForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeSystemEndpointOutputDeviceUIDForType:");
}

id objc_msgSend_activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval(void *a1, const char *a2, ...)
{
  return _[a1 activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval];
}

id objc_msgSend_activeSystemEndpointUID(void *a1, const char *a2, ...)
{
  return _[a1 activeSystemEndpointUID];
}

id objc_msgSend_activeTelevisionRouteID(void *a1, const char *a2, ...)
{
  return _[a1 activeTelevisionRouteID];
}

id objc_msgSend_activeTopologyChangeIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 activeTopologyChangeIdentifiers];
}

id objc_msgSend_activeUserController(void *a1, const char *a2, ...)
{
  return _[a1 activeUserController];
}

id objc_msgSend_activeUserState(void *a1, const char *a2, ...)
{
  return _[a1 activeUserState];
}

id objc_msgSend_activeUserTimeoutInterval(void *a1, const char *a2, ...)
{
  return _[a1 activeUserTimeoutInterval];
}

id objc_msgSend_activity(void *a1, const char *a2, ...)
{
  return _[a1 activity];
}

id objc_msgSend_activityController(void *a1, const char *a2, ...)
{
  return _[a1 activityController];
}

id objc_msgSend_activityServer(void *a1, const char *a2, ...)
{
  return _[a1 activityServer];
}

id objc_msgSend_addArtworkFromItem_fromRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArtworkFromItem:fromRequest:");
}

id objc_msgSend_addAttribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttribution:");
}

id objc_msgSend_addAuthorizationCallbackForOutputDevice_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAuthorizationCallbackForOutputDevice:callback:");
}

id objc_msgSend_addAuthorizationCallbackForOutputDevice_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAuthorizationCallbackForOutputDevice:client:");
}

id objc_msgSend_addAuthorizationCallbackForRouteID_requestCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAuthorizationCallbackForRouteID:requestCallback:");
}

id objc_msgSend_addCachedAudioSession_forID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCachedAudioSession:forID:");
}

id objc_msgSend_addChannel_forDestination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChannel:forDestination:session:");
}

id objc_msgSend_addClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClient:");
}

id objc_msgSend_addClientObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClientObserver:");
}

id objc_msgSend_addDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDataSource:");
}

id objc_msgSend_addDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:queue:");
}

id objc_msgSend_addDelegate_withDelegateProperties_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:withDelegateProperties:queue:");
}

id objc_msgSend_addEndpointsAddedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEndpointsAddedCallback:");
}

id objc_msgSend_addEndpointsChangedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEndpointsChangedCallback:");
}

id objc_msgSend_addEndpointsModifiedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEndpointsModifiedCallback:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addEvent_forCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEvent:forCandidate:");
}

id objc_msgSend_addEvent_forRouteCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEvent:forRouteCandidate:");
}

id objc_msgSend_addGameController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGameController:");
}

id objc_msgSend_addHandlerForRouteUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHandlerForRouteUID:completion:");
}

id objc_msgSend_addHandlerReturnStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHandlerReturnStatus:");
}

id objc_msgSend_addHostedExternalDevice_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHostedExternalDevice:endpoint:");
}

id objc_msgSend_addLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 addLocalDevice];
}

id objc_msgSend_addLyricsEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLyricsEvent:");
}

id objc_msgSend_addMediaRemoteSeverStartedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMediaRemoteSeverStartedHandler:");
}

id objc_msgSend_addMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMessage:");
}

id objc_msgSend_addMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMessageHandler:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserver_selector_name_object_suspensionBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:suspensionBehavior:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutputDevice:");
}

id objc_msgSend_addOutputDevice_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutputDevice:options:completionHandler:");
}

id objc_msgSend_addOutputDevices_initiator_withReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutputDevices:initiator:withReplyQueue:completion:");
}

id objc_msgSend_addOutputDevicesChangedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutputDevicesChangedCallback:");
}

id objc_msgSend_addPendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPendingParticipant:");
}

id objc_msgSend_addPendingPlaybackSessionMigrateEvent_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPendingPlaybackSessionMigrateEvent:playerPath:");
}

id objc_msgSend_addRegisteredVirtualVoiceInputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRegisteredVirtualVoiceInputDevice:");
}

id objc_msgSend_addRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRequest:");
}

id objc_msgSend_addRoutedCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRoutedCommand:");
}

id objc_msgSend_addSessionObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSessionObserver:");
}

id objc_msgSend_addSharedAudioOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 addSharedAudioOutputContext];
}

id objc_msgSend_addTextField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTextField:");
}

id objc_msgSend_addVirtualTouchDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addVirtualTouchDevice:");
}

id objc_msgSend_addedOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 addedOutputDevices];
}

id objc_msgSend_addingOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 addingOutputDeviceUIDs];
}

id objc_msgSend_adjustMemory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustMemory:");
}

id objc_msgSend_adjustOutputDeviceVolume_outputDevice_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustOutputDeviceVolume:outputDevice:details:queue:completion:");
}

id objc_msgSend_adjustOutputDeviceVolume_outputDeviceUID_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustOutputDeviceVolume:outputDeviceUID:details:queue:completion:");
}

id objc_msgSend_adjustVolume_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustVolume:error:");
}

id objc_msgSend_adjustVolume_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustVolume:outputDeviceUID:details:");
}

id objc_msgSend_adjustVolumeWithStepAmount_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustVolumeWithStepAmount:error:");
}

id objc_msgSend_adjustment(void *a1, const char *a2, ...)
{
  return _[a1 adjustment];
}

id objc_msgSend_advertiser(void *a1, const char *a2, ...)
{
  return _[a1 advertiser];
}

id objc_msgSend_advertisingPreferenceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 advertisingPreferenceEnabled];
}

id objc_msgSend_airPlayGroupID(void *a1, const char *a2, ...)
{
  return _[a1 airPlayGroupID];
}

id objc_msgSend_airPlayGroupUID(void *a1, const char *a2, ...)
{
  return _[a1 airPlayGroupUID];
}

id objc_msgSend_airPlayRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airPlayRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_airPlayService(void *a1, const char *a2, ...)
{
  return _[a1 airPlayService];
}

id objc_msgSend_airPlayTo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airPlayTo:completion:");
}

id objc_msgSend_airplayActive(void *a1, const char *a2, ...)
{
  return _[a1 airplayActive];
}

id objc_msgSend_alertHeader(void *a1, const char *a2, ...)
{
  return _[a1 alertHeader];
}

id objc_msgSend_alertMessage(void *a1, const char *a2, ...)
{
  return _[a1 alertMessage];
}

id objc_msgSend_allClients(void *a1, const char *a2, ...)
{
  return _[a1 allClients];
}

id objc_msgSend_allClusterMembersOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 allClusterMembersOutputDevices];
}

id objc_msgSend_allClusteredDevices(void *a1, const char *a2, ...)
{
  return _[a1 allClusteredDevices];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allLocalNowPlayingInfoClients(void *a1, const char *a2, ...)
{
  return _[a1 allLocalNowPlayingInfoClients];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allSharedAudioOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 allSharedAudioOutputContexts];
}

id objc_msgSend_allStreams(void *a1, const char *a2, ...)
{
  return _[a1 allStreams];
}

id objc_msgSend_allStreamsExcludingLocal(void *a1, const char *a2, ...)
{
  return _[a1 allStreamsExcludingLocal];
}

id objc_msgSend_allUserStates(void *a1, const char *a2, ...)
{
  return _[a1 allUserStates];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowAllClientUIConnections(void *a1, const char *a2, ...)
{
  return _[a1 allowAllClientUIConnections];
}

id objc_msgSend_allowList(void *a1, const char *a2, ...)
{
  return _[a1 allowList];
}

id objc_msgSend_allowedAuditTokens(void *a1, const char *a2, ...)
{
  return _[a1 allowedAuditTokens];
}

id objc_msgSend_allowedContextUpdates(void *a1, const char *a2, ...)
{
  return _[a1 allowedContextUpdates];
}

id objc_msgSend_allowedDestinations(void *a1, const char *a2, ...)
{
  return _[a1 allowedDestinations];
}

id objc_msgSend_alwaysAllowUpdates(void *a1, const char *a2, ...)
{
  return _[a1 alwaysAllowUpdates];
}

id objc_msgSend_alwaysIgnoreDuringCall(void *a1, const char *a2, ...)
{
  return _[a1 alwaysIgnoreDuringCall];
}

id objc_msgSend_alwaysIgnoreDuringSharePlay(void *a1, const char *a2, ...)
{
  return _[a1 alwaysIgnoreDuringSharePlay];
}

id objc_msgSend_ambientVisible(void *a1, const char *a2, ...)
{
  return _[a1 ambientVisible];
}

id objc_msgSend_anonymousListener(void *a1, const char *a2, ...)
{
  return _[a1 anonymousListener];
}

id objc_msgSend_anyClient(void *a1, const char *a2, ...)
{
  return _[a1 anyClient];
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_anyOrigin(void *a1, const char *a2, ...)
{
  return _[a1 anyOrigin];
}

id objc_msgSend_anyPlayer(void *a1, const char *a2, ...)
{
  return _[a1 anyPlayer];
}

id objc_msgSend_anyPlayerIsPlaying(void *a1, const char *a2, ...)
{
  return _[a1 anyPlayerIsPlaying];
}

id objc_msgSend_anyPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 anyPlayerPath];
}

id objc_msgSend_appIcon(void *a1, const char *a2, ...)
{
  return _[a1 appIcon];
}

id objc_msgSend_appOptions(void *a1, const char *a2, ...)
{
  return _[a1 appOptions];
}

id objc_msgSend_appState(void *a1, const char *a2, ...)
{
  return _[a1 appState];
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appletvsEffected(void *a1, const char *a2, ...)
{
  return _[a1 appletvsEffected];
}

id objc_msgSend_applicationConnections(void *a1, const char *a2, ...)
{
  return _[a1 applicationConnections];
}

id objc_msgSend_applicationIsInstalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationIsInstalled:");
}

id objc_msgSend_applicationPickedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 applicationPickedRoutes];
}

id objc_msgSend_applicationProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationProxyForIdentifier:");
}

id objc_msgSend_applicationsSupportingAPIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationsSupportingAPIs:");
}

id objc_msgSend_approvePendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "approvePendingParticipant:");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_artwork(void *a1, const char *a2, ...)
{
  return _[a1 artwork];
}

id objc_msgSend_artworkCacheSize(void *a1, const char *a2, ...)
{
  return _[a1 artworkCacheSize];
}

id objc_msgSend_artworkHeight(void *a1, const char *a2, ...)
{
  return _[a1 artworkHeight];
}

id objc_msgSend_artworkWidth(void *a1, const char *a2, ...)
{
  return _[a1 artworkWidth];
}

id objc_msgSend_artworks(void *a1, const char *a2, ...)
{
  return _[a1 artworks];
}

id objc_msgSend_ase(void *a1, const char *a2, ...)
{
  return _[a1 ase];
}

id objc_msgSend_aseNowPlayingController(void *a1, const char *a2, ...)
{
  return _[a1 aseNowPlayingController];
}

id objc_msgSend_assertPublicAdvertisement(void *a1, const char *a2, ...)
{
  return _[a1 assertPublicAdvertisement];
}

id objc_msgSend_assertSessionManagementScreenVisible(void *a1, const char *a2, ...)
{
  return _[a1 assertSessionManagementScreenVisible];
}

id objc_msgSend_assertionManager(void *a1, const char *a2, ...)
{
  return _[a1 assertionManager];
}

id objc_msgSend_attemptLogicalDeviceRecovery(void *a1, const char *a2, ...)
{
  return _[a1 attemptLogicalDeviceRecovery];
}

id objc_msgSend_attributeForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeForKey:");
}

id objc_msgSend_attributeWithDomain_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeWithDomain:name:");
}

id objc_msgSend_attributionWithAuditToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributionWithAuditToken:");
}

id objc_msgSend_audioFormat(void *a1, const char *a2, ...)
{
  return _[a1 audioFormat];
}

id objc_msgSend_audioFormatContentInfoForApplication_cachedAudioFormatContentInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioFormatContentInfoForApplication:cachedAudioFormatContentInfo:");
}

id objc_msgSend_audioSessionID(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionID];
}

id objc_msgSend_audioSessionType(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionType];
}

id objc_msgSend_audioStatusItemController(void *a1, const char *a2, ...)
{
  return _[a1 audioStatusItemController];
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return _[a1 auditToken];
}

id objc_msgSend_augmentedUserInfoForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "augmentedUserInfoForPlayerPath:");
}

id objc_msgSend_authorizationRequestCallbackForRouteID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationRequestCallbackForRouteID:");
}

id objc_msgSend_authorizationTokenType(void *a1, const char *a2, ...)
{
  return _[a1 authorizationTokenType];
}

id objc_msgSend_autoConnectedEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 autoConnectedEndpoints];
}

id objc_msgSend_autoConnectingEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 autoConnectingEndpoints];
}

id objc_msgSend_automaticSharePlayPreferenceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 automaticSharePlayPreferenceEnabled];
}

id objc_msgSend_auxiliaryOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 auxiliaryOutputContext];
}

id objc_msgSend_avOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 avOutputContext];
}

id objc_msgSend_avOutputDevice(void *a1, const char *a2, ...)
{
  return _[a1 avOutputDevice];
}

id objc_msgSend_avOutputDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 avOutputDeviceIdentifier];
}

id objc_msgSend_availableArtworkFormats(void *a1, const char *a2, ...)
{
  return _[a1 availableArtworkFormats];
}

id objc_msgSend_availableDistantEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 availableDistantEndpoints];
}

id objc_msgSend_availableDistantOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 availableDistantOutputDevices];
}

id objc_msgSend_availableEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 availableEndpoints];
}

id objc_msgSend_availableEndpointsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availableEndpointsDidChange:");
}

id objc_msgSend_availableExternalDevices(void *a1, const char *a2, ...)
{
  return _[a1 availableExternalDevices];
}

id objc_msgSend_availableOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 availableOutputDevices];
}

id objc_msgSend_availableOutputDevicesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availableOutputDevicesDidChange:");
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return _[a1 background];
}

id objc_msgSend_backgroundActivityControllers(void *a1, const char *a2, ...)
{
  return _[a1 backgroundActivityControllers];
}

id objc_msgSend_backgroundActivityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 backgroundActivityIdentifier];
}

id objc_msgSend_bannerCenter(void *a1, const char *a2, ...)
{
  return _[a1 bannerCenter];
}

id objc_msgSend_bannerControllable(void *a1, const char *a2, ...)
{
  return _[a1 bannerControllable];
}

id objc_msgSend_bannerUIControllerWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerUIControllerWithDelegate:");
}

id objc_msgSend_bannerWithIdentifier_postedEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerWithIdentifier:postedEvent:");
}

id objc_msgSend_bannerWithRequestIdentifier_didReceiveEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerWithRequestIdentifier:didReceiveEvent:");
}

id objc_msgSend_bargeCalls(void *a1, const char *a2, ...)
{
  return _[a1 bargeCalls];
}

id objc_msgSend_baseGroupID(void *a1, const char *a2, ...)
{
  return _[a1 baseGroupID];
}

id objc_msgSend_baseParentGroupID(void *a1, const char *a2, ...)
{
  return _[a1 baseParentGroupID];
}

id objc_msgSend_basicIdentityWithIdentifier_displayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "basicIdentityWithIdentifier:displayName:");
}

id objc_msgSend_beginAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 beginAdvertising];
}

id objc_msgSend_beginLoadingUpdates(void *a1, const char *a2, ...)
{
  return _[a1 beginLoadingUpdates];
}

id objc_msgSend_beginMusicHandoffSessionWithSource_destination_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginMusicHandoffSessionWithSource:destination:completion:");
}

id objc_msgSend_beginObservingPrivacyAcknowledgementForIdentifier_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginObservingPrivacyAcknowledgementForIdentifier:handler:");
}

id objc_msgSend_beginObservingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginObservingSession:");
}

id objc_msgSend_beginProxyAdvertisingWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginProxyAdvertisingWithToken:");
}

id objc_msgSend_beginReceivingUpdatesForSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginReceivingUpdatesForSource:");
}

id objc_msgSend_beginSearchWithTimeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSearchWithTimeout:completion:");
}

id objc_msgSend_beginSearchWithTimeout_endpointsCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSearchWithTimeout:endpointsCompletion:");
}

id objc_msgSend_beginSearchWithTimeout_mapCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSearchWithTimeout:mapCompletion:");
}

id objc_msgSend_bestAvailableContent(void *a1, const char *a2, ...)
{
  return _[a1 bestAvailableContent];
}

id objc_msgSend_bestAvailableContentForConsolidatedSourceContentInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestAvailableContentForConsolidatedSourceContentInfo:");
}

id objc_msgSend_bestHostingStateForUserStates_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestHostingStateForUserStates:reason:");
}

id objc_msgSend_bestRecommendationIn_primaryBundleIdentifier_eligibleToShowRecommendationsOutsideApp_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestRecommendationIn:primaryBundleIdentifier:eligibleToShowRecommendationsOutsideApp:completion:");
}

id objc_msgSend_bestStreamToInterrupt(void *a1, const char *a2, ...)
{
  return _[a1 bestStreamToInterrupt];
}

id objc_msgSend_bluetoothAddress(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothAddress];
}

id objc_msgSend_bonjourRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bonjourRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_broadcastCommandWaitDuration(void *a1, const char *a2, ...)
{
  return _[a1 broadcastCommandWaitDuration];
}

id objc_msgSend_broadcastRemoteControlCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastRemoteControlCommand:completion:");
}

id objc_msgSend_buffer(void *a1, const char *a2, ...)
{
  return _[a1 buffer];
}

id objc_msgSend_buildVersion(void *a1, const char *a2, ...)
{
  return _[a1 buildVersion];
}

id objc_msgSend_bundle(void *a1, const char *a2, ...)
{
  return _[a1 bundle];
}

id objc_msgSend_bundleID(void *a1, const char *a2, ...)
{
  return _[a1 bundleID];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleIdentifierAffinity(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifierAffinity];
}

id objc_msgSend_bundleIdentifierPendingUpdate(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifierPendingUpdate];
}

id objc_msgSend_bundleType(void *a1, const char *a2, ...)
{
  return _[a1 bundleType];
}

id objc_msgSend_bundleVersion(void *a1, const char *a2, ...)
{
  return _[a1 bundleVersion];
}

id objc_msgSend_bundleWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithURL:");
}

id objc_msgSend_bundlesInFocus(void *a1, const char *a2, ...)
{
  return _[a1 bundlesInFocus];
}

id objc_msgSend_buttonEvent(void *a1, const char *a2, ...)
{
  return _[a1 buttonEvent];
}

id objc_msgSend_buttonIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 buttonIdentifier];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cachedDeviceInfoForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedDeviceInfoForOrigin:");
}

id objc_msgSend_cachedEligibilityOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedEligibilityOf:");
}

id objc_msgSend_cachedStateLoaded(void *a1, const char *a2, ...)
{
  return _[a1 cachedStateLoaded];
}

id objc_msgSend_cachingPolicy(void *a1, const char *a2, ...)
{
  return _[a1 cachingPolicy];
}

id objc_msgSend_callCenterWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callCenterWithQueue:");
}

id objc_msgSend_callControllerWillHandleCommandForBargeCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callControllerWillHandleCommandForBargeCalls:");
}

id objc_msgSend_callInvalidationHandlerWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callInvalidationHandlerWithReason:");
}

id objc_msgSend_callback(void *a1, const char *a2, ...)
{
  return _[a1 callback];
}

id objc_msgSend_calloutQueue(void *a1, const char *a2, ...)
{
  return _[a1 calloutQueue];
}

id objc_msgSend_calls(void *a1, const char *a2, ...)
{
  return _[a1 calls];
}

id objc_msgSend_canAccessAppleMusic(void *a1, const char *a2, ...)
{
  return _[a1 canAccessAppleMusic];
}

id objc_msgSend_canAccessRemoteAssets(void *a1, const char *a2, ...)
{
  return _[a1 canAccessRemoteAssets];
}

id objc_msgSend_canAccessiCloudMusicLibrary(void *a1, const char *a2, ...)
{
  return _[a1 canAccessiCloudMusicLibrary];
}

id objc_msgSend_canActivateStreamWithPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canActivateStreamWithPlayerPath:");
}

id objc_msgSend_canBeClusterMember(void *a1, const char *a2, ...)
{
  return _[a1 canBeClusterMember];
}

id objc_msgSend_canBeGrouped(void *a1, const char *a2, ...)
{
  return _[a1 canBeGrouped];
}

id objc_msgSend_canBeNowPlaying(void *a1, const char *a2, ...)
{
  return _[a1 canBeNowPlaying];
}

id objc_msgSend_canBeNowPlayingClients(void *a1, const char *a2, ...)
{
  return _[a1 canBeNowPlayingClients];
}

id objc_msgSend_canBeNowPlayingForPlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canBeNowPlayingForPlayerClient:");
}

id objc_msgSend_canBeNowPlayingPlayer(void *a1, const char *a2, ...)
{
  return _[a1 canBeNowPlayingPlayer];
}

id objc_msgSend_canBeNowPlayingPlayerTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 canBeNowPlayingPlayerTimestamp];
}

id objc_msgSend_canDiscoverGroupSessions(void *a1, const char *a2, ...)
{
  return _[a1 canDiscoverGroupSessions];
}

id objc_msgSend_canMigrateToEndpoint_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canMigrateToEndpoint:queue:completion:");
}

id objc_msgSend_canRelayCommunicationChannel(void *a1, const char *a2, ...)
{
  return _[a1 canRelayCommunicationChannel];
}

id objc_msgSend_canSendMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSendMessage:");
}

id objc_msgSend_canSetVolume(void *a1, const char *a2, ...)
{
  return _[a1 canSetVolume];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAcknowledgeResetTimerForSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAcknowledgeResetTimerForSessionIdentifier:");
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllOperations];
}

id objc_msgSend_cancelPrewarmedIdentifier_forIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPrewarmedIdentifier:forIdentity:");
}

id objc_msgSend_cancelSearch(void *a1, const char *a2, ...)
{
  return _[a1 cancelSearch];
}

id objc_msgSend_cancellationReason(void *a1, const char *a2, ...)
{
  return _[a1 cancellationReason];
}

id objc_msgSend_candidate(void *a1, const char *a2, ...)
{
  return _[a1 candidate];
}

id objc_msgSend_candidateIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 candidateIdentifier];
}

id objc_msgSend_candidateResults(void *a1, const char *a2, ...)
{
  return _[a1 candidateResults];
}

id objc_msgSend_capabilities(void *a1, const char *a2, ...)
{
  return _[a1 capabilities];
}

id objc_msgSend_carStatus(void *a1, const char *a2, ...)
{
  return _[a1 carStatus];
}

id objc_msgSend_changeActiveCategoryVolumeBy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeActiveCategoryVolumeBy:");
}

id objc_msgSend_changeDescriptionTo_keyBlock_isUpdatedBlock_descriptionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeDescriptionTo:keyBlock:isUpdatedBlock:descriptionBlock:");
}

id objc_msgSend_changeOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeOutputDevice:");
}

id objc_msgSend_changeType(void *a1, const char *a2, ...)
{
  return _[a1 changeType];
}

id objc_msgSend_changedOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 changedOutputDevices];
}

id objc_msgSend_channelCount(void *a1, const char *a2, ...)
{
  return _[a1 channelCount];
}

id objc_msgSend_channelForDestination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "channelForDestination:session:");
}

id objc_msgSend_characterCount(void *a1, const char *a2, ...)
{
  return _[a1 characterCount];
}

id objc_msgSend_checkCanJoinGroupSessionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkCanJoinGroupSessionWithError:");
}

id objc_msgSend_checkXPCConnectionStatusDefaultInterval(void *a1, const char *a2, ...)
{
  return _[a1 checkXPCConnectionStatusDefaultInterval];
}

id objc_msgSend_checkXPCConnectionStatusDefaultResponseTimeout(void *a1, const char *a2, ...)
{
  return _[a1 checkXPCConnectionStatusDefaultResponseTimeout];
}

id objc_msgSend_classification(void *a1, const char *a2, ...)
{
  return _[a1 classification];
}

id objc_msgSend_cleanUp(void *a1, const char *a2, ...)
{
  return _[a1 cleanUp];
}

id objc_msgSend_cleanupExistingSessionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 cleanupExistingSessionIfNeeded];
}

id objc_msgSend_cleanupForwarding(void *a1, const char *a2, ...)
{
  return _[a1 cleanupForwarding];
}

id objc_msgSend_clearArtworkForContentItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearArtworkForContentItems:");
}

id objc_msgSend_clearArtworkForItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearArtworkForItems:");
}

id objc_msgSend_clearContextsForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearContextsForClient:");
}

id objc_msgSend_clearDefaultSupportedCommandsData(void *a1, const char *a2, ...)
{
  return _[a1 clearDefaultSupportedCommandsData];
}

id objc_msgSend_clearDiscoveredSessions(void *a1, const char *a2, ...)
{
  return _[a1 clearDiscoveredSessions];
}

id objc_msgSend_clearEndpointForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearEndpointForClient:");
}

id objc_msgSend_clearExpiredTokenRecords(void *a1, const char *a2, ...)
{
  return _[a1 clearExpiredTokenRecords];
}

id objc_msgSend_clearHostedSessionState(void *a1, const char *a2, ...)
{
  return _[a1 clearHostedSessionState];
}

id objc_msgSend_clearNowPlayingClientForXPCClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearNowPlayingClientForXPCClient:");
}

id objc_msgSend_clearPendingCompletions(void *a1, const char *a2, ...)
{
  return _[a1 clearPendingCompletions];
}

id objc_msgSend_clearRecordingEndpointsForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearRecordingEndpointsForClient:");
}

id objc_msgSend_clearRegisteredDevicesForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearRegisteredDevicesForClient:");
}

id objc_msgSend_clearUnusedAutoRoute(void *a1, const char *a2, ...)
{
  return _[a1 clearUnusedAutoRoute];
}

id objc_msgSend_client(void *a1, const char *a2, ...)
{
  return _[a1 client];
}

id objc_msgSend_clientBoundMessageHandler(void *a1, const char *a2, ...)
{
  return _[a1 clientBoundMessageHandler];
}

id objc_msgSend_clientBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 clientBundleIdentifier];
}

id objc_msgSend_clientConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientConnected:");
}

id objc_msgSend_clientConnection(void *a1, const char *a2, ...)
{
  return _[a1 clientConnection];
}

id objc_msgSend_clientConnection_didReceiveMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientConnection:didReceiveMessage:");
}

id objc_msgSend_clientDisconnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientDisconnected:");
}

id objc_msgSend_clientForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientForBundleIdentifier:");
}

id objc_msgSend_clientForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientForConnection:");
}

id objc_msgSend_clientForPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientForPID:");
}

id objc_msgSend_clientForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientForPlayerPath:");
}

id objc_msgSend_clientIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 clientIdentifier];
}

id objc_msgSend_clientInterface(void *a1, const char *a2, ...)
{
  return _[a1 clientInterface];
}

id objc_msgSend_clientObservers(void *a1, const char *a2, ...)
{
  return _[a1 clientObservers];
}

id objc_msgSend_clientProperties(void *a1, const char *a2, ...)
{
  return _[a1 clientProperties];
}

id objc_msgSend_clientWithRegisteredCustomOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientWithRegisteredCustomOrigin:");
}

id objc_msgSend_clients(void *a1, const char *a2, ...)
{
  return _[a1 clients];
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _[a1 close];
}

id objc_msgSend_closeAll(void *a1, const char *a2, ...)
{
  return _[a1 closeAll];
}

id objc_msgSend_closeForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeForClient:");
}

id objc_msgSend_closeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeWithError:");
}

id objc_msgSend_clusterComposition(void *a1, const char *a2, ...)
{
  return _[a1 clusterComposition];
}

id objc_msgSend_clusterCompositionMembers(void *a1, const char *a2, ...)
{
  return _[a1 clusterCompositionMembers];
}

id objc_msgSend_clusterCompositionOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 clusterCompositionOutputDevices];
}

id objc_msgSend_clusterID(void *a1, const char *a2, ...)
{
  return _[a1 clusterID];
}

id objc_msgSend_clusterLeaderID(void *a1, const char *a2, ...)
{
  return _[a1 clusterLeaderID];
}

id objc_msgSend_clusterLeaderOperations(void *a1, const char *a2, ...)
{
  return _[a1 clusterLeaderOperations];
}

id objc_msgSend_clusterLeaderUID(void *a1, const char *a2, ...)
{
  return _[a1 clusterLeaderUID];
}

id objc_msgSend_clusterStatus(void *a1, const char *a2, ...)
{
  return _[a1 clusterStatus];
}

id objc_msgSend_clusterType(void *a1, const char *a2, ...)
{
  return _[a1 clusterType];
}

id objc_msgSend_clusteredDevices(void *a1, const char *a2, ...)
{
  return _[a1 clusteredDevices];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collaborationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 collaborationAllowed];
}

id objc_msgSend_collectDiagnostic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectDiagnostic:");
}

id objc_msgSend_color(void *a1, const char *a2, ...)
{
  return _[a1 color];
}

id objc_msgSend_combinedSuppressedBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 combinedSuppressedBundleIdentifiers];
}

id objc_msgSend_command(void *a1, const char *a2, ...)
{
  return _[a1 command];
}

id objc_msgSend_commandClientsRestriction(void *a1, const char *a2, ...)
{
  return _[a1 commandClientsRestriction];
}

id objc_msgSend_commandDictionary(void *a1, const char *a2, ...)
{
  return _[a1 commandDictionary];
}

id objc_msgSend_commandID(void *a1, const char *a2, ...)
{
  return _[a1 commandID];
}

id objc_msgSend_commandInfosFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandInfosFromData:");
}

id objc_msgSend_commandResult(void *a1, const char *a2, ...)
{
  return _[a1 commandResult];
}

id objc_msgSend_commandResultWithSendError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandResultWithSendError:");
}

id objc_msgSend_commandResultWithSendError_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandResultWithSendError:description:");
}

id objc_msgSend_commandType(void *a1, const char *a2, ...)
{
  return _[a1 commandType];
}

id objc_msgSend_commitOutputDeviceToContextIfNeededWithReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commitOutputDeviceToContextIfNeededWithReason:completion:");
}

id objc_msgSend_companionEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 companionEndpoint];
}

id objc_msgSend_companionLinkDevices(void *a1, const char *a2, ...)
{
  return _[a1 companionLinkDevices];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _[a1 completion];
}

id objc_msgSend_completionBlock(void *a1, const char *a2, ...)
{
  return _[a1 completionBlock];
}

id objc_msgSend_completionBlockDictionary(void *a1, const char *a2, ...)
{
  return _[a1 completionBlockDictionary];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_computeDevicePlaybackSessionID(void *a1, const char *a2, ...)
{
  return _[a1 computeDevicePlaybackSessionID];
}

id objc_msgSend_computeHostsByGroupIDForOutputDevices_unclusteredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "computeHostsByGroupIDForOutputDevices:unclusteredDevices:");
}

id objc_msgSend_computeNowPlayingApplication(void *a1, const char *a2, ...)
{
  return _[a1 computeNowPlayingApplication];
}

id objc_msgSend_concreteEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 concreteEndpoint];
}

id objc_msgSend_concreteOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 concreteOutputDevices];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationForDefaultMainDisplayMonitor(void *a1, const char *a2, ...)
{
  return _[a1 configurationForDefaultMainDisplayMonitor];
}

id objc_msgSend_configurationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithCompletion:");
}

id objc_msgSend_configurationWithEndpointFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithEndpointFeatures:");
}

id objc_msgSend_configureConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureConnection:");
}

id objc_msgSend_configuredClusterSize(void *a1, const char *a2, ...)
{
  return _[a1 configuredClusterSize];
}

id objc_msgSend_connect(void *a1, const char *a2, ...)
{
  return _[a1 connect];
}

id objc_msgSend_connectForBannerPresentation_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectForBannerPresentation:reply:");
}

id objc_msgSend_connectOptions(void *a1, const char *a2, ...)
{
  return _[a1 connectOptions];
}

id objc_msgSend_connectTimeoutGuard(void *a1, const char *a2, ...)
{
  return _[a1 connectTimeoutGuard];
}

id objc_msgSend_connectToAllEndpointsWhenAnyEndpointBeginsPlayback(void *a1, const char *a2, ...)
{
  return _[a1 connectToAllEndpointsWhenAnyEndpointBeginsPlayback];
}

id objc_msgSend_connectToAllOutputDevicesForReason_comparator_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToAllOutputDevicesForReason:comparator:queue:completion:");
}

id objc_msgSend_connectToEndpointContainingOutputDeviceUID_options_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToEndpointContainingOutputDeviceUID:options:details:completion:");
}

id objc_msgSend_connectToEndpointWhenBeginsPlayback(void *a1, const char *a2, ...)
{
  return _[a1 connectToEndpointWhenBeginsPlayback];
}

id objc_msgSend_connectToExternalDeviceWithOptions_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToExternalDeviceWithOptions:details:completion:");
}

id objc_msgSend_connectToExternalDeviceWithOptions_userInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToExternalDeviceWithOptions:userInfo:completion:");
}

id objc_msgSend_connectToExternalDeviceWithUserInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToExternalDeviceWithUserInfo:completion:");
}

id objc_msgSend_connectToOutputDevice_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToOutputDevice:reason:queue:completion:");
}

id objc_msgSend_connectToTransientExternalDevice(void *a1, const char *a2, ...)
{
  return _[a1 connectToTransientExternalDevice];
}

id objc_msgSend_connectToUserSelectedEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 connectToUserSelectedEndpoint];
}

id objc_msgSend_connectUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 connectUserInfo];
}

id objc_msgSend_connectWithOptions_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectWithOptions:userInfo:");
}

id objc_msgSend_connectWithOptions_userInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectWithOptions:userInfo:completion:");
}

id objc_msgSend_connected(void *a1, const char *a2, ...)
{
  return _[a1 connected];
}

id objc_msgSend_connectedClientAuditTokens(void *a1, const char *a2, ...)
{
  return _[a1 connectedClientAuditTokens];
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return _[a1 connection];
}

id objc_msgSend_connectionDidInvalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionDidInvalidate:");
}

id objc_msgSend_connectionDidResume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionDidResume:");
}

id objc_msgSend_connectionForOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionForOutputDeviceUID:");
}

id objc_msgSend_connectionHandler(void *a1, const char *a2, ...)
{
  return _[a1 connectionHandler];
}

id objc_msgSend_connectionState(void *a1, const char *a2, ...)
{
  return _[a1 connectionState];
}

id objc_msgSend_connectionStateCallbackQueue(void *a1, const char *a2, ...)
{
  return _[a1 connectionStateCallbackQueue];
}

id objc_msgSend_connectionStateError(void *a1, const char *a2, ...)
{
  return _[a1 connectionStateError];
}

id objc_msgSend_connectionType(void *a1, const char *a2, ...)
{
  return _[a1 connectionType];
}

id objc_msgSend_connectionWithEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionWithEndpoint:");
}

id objc_msgSend_connections(void *a1, const char *a2, ...)
{
  return _[a1 connections];
}

id objc_msgSend_considerLocalOriginAsSeperateStream(void *a1, const char *a2, ...)
{
  return _[a1 considerLocalOriginAsSeperateStream];
}

id objc_msgSend_consolidatedSourceContentInfo(void *a1, const char *a2, ...)
{
  return _[a1 consolidatedSourceContentInfo];
}

id objc_msgSend_containsActiveStream(void *a1, const char *a2, ...)
{
  return _[a1 containsActiveStream];
}

id objc_msgSend_containsDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsDevice:");
}

id objc_msgSend_containsLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 containsLocalDevice];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsOutputDeviceWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsOutputDeviceWithUID:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_containsUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsUID:");
}

id objc_msgSend_contentController(void *a1, const char *a2, ...)
{
  return _[a1 contentController];
}

id objc_msgSend_contentInfoForConsolidatedSourceContentInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInfoForConsolidatedSourceContentInfo:");
}

id objc_msgSend_contentItem(void *a1, const char *a2, ...)
{
  return _[a1 contentItem];
}

id objc_msgSend_contentItemForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentItemForIdentifier:");
}

id objc_msgSend_contentItemWithOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentItemWithOffset:");
}

id objc_msgSend_contentItems(void *a1, const char *a2, ...)
{
  return _[a1 contentItems];
}

id objc_msgSend_contentItemsArtwork(void *a1, const char *a2, ...)
{
  return _[a1 contentItemsArtwork];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_contextForActivityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextForActivityIdentifier:");
}

id objc_msgSend_contextID(void *a1, const char *a2, ...)
{
  return _[a1 contextID];
}

id objc_msgSend_contextIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 contextIdentifier];
}

id objc_msgSend_continuousPlaybackDetected(void *a1, const char *a2, ...)
{
  return _[a1 continuousPlaybackDetected];
}

id objc_msgSend_continuousPlaybackDetectionInterval(void *a1, const char *a2, ...)
{
  return _[a1 continuousPlaybackDetectionInterval];
}

id objc_msgSend_continuousPlaybackDetectionTimer(void *a1, const char *a2, ...)
{
  return _[a1 continuousPlaybackDetectionTimer];
}

id objc_msgSend_controlCenterForegrounded(void *a1, const char *a2, ...)
{
  return _[a1 controlCenterForegrounded];
}

id objc_msgSend_controlCenterVisible(void *a1, const char *a2, ...)
{
  return _[a1 controlCenterVisible];
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return _[a1 controller];
}

id objc_msgSend_controller_didDiscoverCompanion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller:didDiscoverCompanion:");
}

id objc_msgSend_controllerDidUndiscoverCompanion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerDidUndiscoverCompanion:");
}

id objc_msgSend_controllerForBackgroundActivityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerForBackgroundActivityIdentifier:");
}

id objc_msgSend_controllerForStatusItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerForStatusItemIdentifier:");
}

id objc_msgSend_controllerForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerForType:");
}

id objc_msgSend_controllerID(void *a1, const char *a2, ...)
{
  return _[a1 controllerID];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyWithType_outputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithType:outputDeviceUIDs:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countryCode(void *a1, const char *a2, ...)
{
  return _[a1 countryCode];
}

id objc_msgSend_create(void *a1, const char *a2, ...)
{
  return _[a1 create];
}

id objc_msgSend_createAssertion(void *a1, const char *a2, ...)
{
  return _[a1 createAssertion];
}

id objc_msgSend_createAssertionWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createAssertionWithReason:");
}

id objc_msgSend_createConnectionWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createConnectionWithUserInfo:");
}

id objc_msgSend_createCustomOriginClientForOrigin_routingContextID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createCustomOriginClientForOrigin:routingContextID:");
}

id objc_msgSend_createDelocalizedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDelocalizedPlayerPath:");
}

id objc_msgSend_createDiagnosticInfo(void *a1, const char *a2, ...)
{
  return _[a1 createDiagnosticInfo];
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 createEndpoint];
}

id objc_msgSend_createEndpointForOutputDeviceIDs_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEndpointForOutputDeviceIDs:details:completion:");
}

id objc_msgSend_createEndpointForOutputDeviceIDs_options_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEndpointForOutputDeviceIDs:options:details:completion:");
}

id objc_msgSend_createEndpointWithCurrentTopology(void *a1, const char *a2, ...)
{
  return _[a1 createEndpointWithCurrentTopology];
}

id objc_msgSend_createEndpointWithCurrentTopologyWithTimeout_details_previewCallback_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEndpointWithCurrentTopologyWithTimeout:details:previewCallback:completion:");
}

id objc_msgSend_createEndpointWithOutputDeviceUIDs_options_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEndpointWithOutputDeviceUIDs:options:queue:completion:");
}

id objc_msgSend_createEndpointWithOutputDeviceUIDs_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEndpointWithOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend_createForHomePodWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createForHomePodWithDelegate:");
}

id objc_msgSend_createHostedEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 createHostedEndpoint];
}

id objc_msgSend_createHostedEndpointWithOutputDeviceUIDs_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createHostedEndpointWithOutputDeviceUIDs:queue:completion:");
}

id objc_msgSend_createHostedEndpointWithOutputDeviceUIDs_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createHostedEndpointWithOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend_createLocalizedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createLocalizedPlayerPath:");
}

id objc_msgSend_createNewApplicationConnectionCallback(void *a1, const char *a2, ...)
{
  return _[a1 createNewApplicationConnectionCallback];
}

id objc_msgSend_createNowPlayingClient(void *a1, const char *a2, ...)
{
  return _[a1 createNowPlayingClient];
}

id objc_msgSend_createOptimizedEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 createOptimizedEndpoint];
}

id objc_msgSend_createOptimizedEndpointWithOutputDeviceUIDs_timeout_details_previewCallback_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createOptimizedEndpointWithOutputDeviceUIDs:timeout:details:previewCallback:completion:");
}

id objc_msgSend_createOutputContextWithUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createOutputContextWithUniqueIdentifier:");
}

id objc_msgSend_createPartialEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 createPartialEndpoint];
}

id objc_msgSend_createPlaybackQueueForRequest_cachingPolicy_playerPath_partiallyCachedItems_capabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPlaybackQueueForRequest:cachingPolicy:playerPath:partiallyCachedItems:capabilities:");
}

id objc_msgSend_createRemoteControlSessionWithNearbyGroup_nearbyInvitation_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRemoteControlSessionWithNearbyGroup:nearbyInvitation:identity:");
}

id objc_msgSend_createRemoteHostedEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 createRemoteHostedEndpoint];
}

id objc_msgSend_createRemoteHostedEndpointWithGroupLeaderOutputDeviceUID_withOutputDeviceUIDs_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRemoteHostedEndpointWithGroupLeaderOutputDeviceUID:withOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend_createSessionWithNearbyGroup_asUser_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSessionWithNearbyGroup:asUser:delegate:");
}

id objc_msgSend_createTransientEndpointForOutputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTransientEndpointForOutputDeviceUID:details:");
}

id objc_msgSend_createTransientExternalDevice(void *a1, const char *a2, ...)
{
  return _[a1 createTransientExternalDevice];
}

id objc_msgSend_createWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createWithCompletion:");
}

id objc_msgSend_createWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createWithDelegate:");
}

id objc_msgSend_createWithNearbyGroup_displayName_routeType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createWithNearbyGroup:displayName:routeType:completion:");
}

id objc_msgSend_creatorProcessID(void *a1, const char *a2, ...)
{
  return _[a1 creatorProcessID];
}

id objc_msgSend_cryptoEnabled(void *a1, const char *a2, ...)
{
  return _[a1 cryptoEnabled];
}

id objc_msgSend_cryptoSession(void *a1, const char *a2, ...)
{
  return _[a1 cryptoSession];
}

id objc_msgSend_currentActivitiesInfo(void *a1, const char *a2, ...)
{
  return _[a1 currentActivitiesInfo];
}

id objc_msgSend_currentClientUpdatesConfigMessage(void *a1, const char *a2, ...)
{
  return _[a1 currentClientUpdatesConfigMessage];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return _[a1 currentConnection];
}

id objc_msgSend_currentData(void *a1, const char *a2, ...)
{
  return _[a1 currentData];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentMediaUserState(void *a1, const char *a2, ...)
{
  return _[a1 currentMediaUserState];
}

id objc_msgSend_currentPersonalDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 currentPersonalDeviceUIDs];
}

id objc_msgSend_currentPlaybackSessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 currentPlaybackSessionIdentifier];
}

id objc_msgSend_currentPlaybackSessionTypes(void *a1, const char *a2, ...)
{
  return _[a1 currentPlaybackSessionTypes];
}

id objc_msgSend_currentProcess(void *a1, const char *a2, ...)
{
  return _[a1 currentProcess];
}

id objc_msgSend_currentProtocolVersion(void *a1, const char *a2, ...)
{
  return _[a1 currentProtocolVersion];
}

id objc_msgSend_currentRouteHasVolumeControl(void *a1, const char *a2, ...)
{
  return _[a1 currentRouteHasVolumeControl];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 currentRunLoop];
}

id objc_msgSend_currentSession(void *a1, const char *a2, ...)
{
  return _[a1 currentSession];
}

id objc_msgSend_currentSettings(void *a1, const char *a2, ...)
{
  return _[a1 currentSettings];
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _[a1 currentState];
}

id objc_msgSend_currentTaskAssertion(void *a1, const char *a2, ...)
{
  return _[a1 currentTaskAssertion];
}

id objc_msgSend_currentUser(void *a1, const char *a2, ...)
{
  return _[a1 currentUser];
}

id objc_msgSend_customOrigin(void *a1, const char *a2, ...)
{
  return _[a1 customOrigin];
}

id objc_msgSend_daemonClient(void *a1, const char *a2, ...)
{
  return _[a1 daemonClient];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataForKey:");
}

id objc_msgSend_dataFromDeviceInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromDeviceInfos:");
}

id objc_msgSend_dataFromTXTRecordDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromTXTRecordDictionary:");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataSource_didUpdateParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSource:didUpdateParticipants:");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateCreated(void *a1, const char *a2, ...)
{
  return _[a1 dateCreated];
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_debouncer(void *a1, const char *a2, ...)
{
  return _[a1 debouncer];
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _[a1 debugDescription];
}

id objc_msgSend_debugName(void *a1, const char *a2, ...)
{
  return _[a1 debugName];
}

id objc_msgSend_debugRouteWithDebugIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugRouteWithDebugIdentifier:");
}

id objc_msgSend_decodeEntries(void *a1, const char *a2, ...)
{
  return _[a1 decodeEntries];
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultPlaybackQueueRequest(void *a1, const char *a2, ...)
{
  return _[a1 defaultPlaybackQueueRequest];
}

id objc_msgSend_defaultPlaybackQueueRequestWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultPlaybackQueueRequestWithRange:");
}

id objc_msgSend_defaultPlayer(void *a1, const char *a2, ...)
{
  return _[a1 defaultPlayer];
}

id objc_msgSend_defaultRequest(void *a1, const char *a2, ...)
{
  return _[a1 defaultRequest];
}

id objc_msgSend_defaultSize(void *a1, const char *a2, ...)
{
  return _[a1 defaultSize];
}

id objc_msgSend_defaultSupportedCommands(void *a1, const char *a2, ...)
{
  return _[a1 defaultSupportedCommands];
}

id objc_msgSend_defaultSupportedCommandsData(void *a1, const char *a2, ...)
{
  return _[a1 defaultSupportedCommandsData];
}

id objc_msgSend_defaultSupportedCommandsDataForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSupportedCommandsDataForClient:");
}

id objc_msgSend_defaultSupportedCommandsForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSupportedCommandsForClient:");
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_defaultsContext(void *a1, const char *a2, ...)
{
  return _[a1 defaultsContext];
}

id objc_msgSend_delayCreateAssertion(void *a1, const char *a2, ...)
{
  return _[a1 delayCreateAssertion];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_delegateQueue(void *a1, const char *a2, ...)
{
  return _[a1 delegateQueue];
}

id objc_msgSend_deleteEventsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEventsPassingTest:");
}

id objc_msgSend_deleteIdentityWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteIdentityWithError:");
}

id objc_msgSend_demoteWhenSyncingToCompanion(void *a1, const char *a2, ...)
{
  return _[a1 demoteWhenSyncingToCompanion];
}

id objc_msgSend_demotionController(void *a1, const char *a2, ...)
{
  return _[a1 demotionController];
}

id objc_msgSend_demotionPolicyWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "demotionPolicyWithContext:");
}

id objc_msgSend_denyPendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "denyPendingParticipant:");
}

id objc_msgSend_dequeueNextPendingRequest(void *a1, const char *a2, ...)
{
  return _[a1 dequeueNextPendingRequest];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptor(void *a1, const char *a2, ...)
{
  return _[a1 descriptor];
}

id objc_msgSend_designatedGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 designatedGroupLeader];
}

id objc_msgSend_designatedProxyGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 designatedProxyGroupLeader];
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _[a1 destination];
}

id objc_msgSend_destinationAppDisplayID(void *a1, const char *a2, ...)
{
  return _[a1 destinationAppDisplayID];
}

id objc_msgSend_destinationAppProcessID(void *a1, const char *a2, ...)
{
  return _[a1 destinationAppProcessID];
}

id objc_msgSend_destinationEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 destinationEndpoint];
}

id objc_msgSend_destinationGroupUID(void *a1, const char *a2, ...)
{
  return _[a1 destinationGroupUID];
}

id objc_msgSend_destinationOrigin(void *a1, const char *a2, ...)
{
  return _[a1 destinationOrigin];
}

id objc_msgSend_destinationOutputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 destinationOutputDeviceUID];
}

id objc_msgSend_destinationPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 destinationPlayerPath];
}

id objc_msgSend_destroyPlayersForClient_origin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destroyPlayersForClient:origin:");
}

id objc_msgSend_details(void *a1, const char *a2, ...)
{
  return _[a1 details];
}

id objc_msgSend_determineGroupLeaderForOutputDevices_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "determineGroupLeaderForOutputDevices:options:");
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return _[a1 device];
}

id objc_msgSend_deviceClass(void *a1, const char *a2, ...)
{
  return _[a1 deviceClass];
}

id objc_msgSend_deviceDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 deviceDescriptor];
}

id objc_msgSend_deviceEnclosureColor(void *a1, const char *a2, ...)
{
  return _[a1 deviceEnclosureColor];
}

id objc_msgSend_deviceForFromID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceForFromID:");
}

id objc_msgSend_deviceForUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceForUID:");
}

id objc_msgSend_deviceID(void *a1, const char *a2, ...)
{
  return _[a1 deviceID];
}

id objc_msgSend_deviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 deviceInfo];
}

id objc_msgSend_deviceInfoDataSource(void *a1, const char *a2, ...)
{
  return _[a1 deviceInfoDataSource];
}

id objc_msgSend_deviceInfoForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceInfoForOrigin:");
}

id objc_msgSend_deviceInfoForOrigin_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceInfoForOrigin:queue:completion:");
}

id objc_msgSend_deviceIsActiveTelevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIsActiveTelevision:");
}

id objc_msgSend_deviceName(void *a1, const char *a2, ...)
{
  return _[a1 deviceName];
}

id objc_msgSend_devicePlaybackSessionID(void *a1, const char *a2, ...)
{
  return _[a1 devicePlaybackSessionID];
}

id objc_msgSend_devicePresenceDetected(void *a1, const char *a2, ...)
{
  return _[a1 devicePresenceDetected];
}

id objc_msgSend_deviceProperties(void *a1, const char *a2, ...)
{
  return _[a1 deviceProperties];
}

id objc_msgSend_deviceState(void *a1, const char *a2, ...)
{
  return _[a1 deviceState];
}

id objc_msgSend_deviceSubtype(void *a1, const char *a2, ...)
{
  return _[a1 deviceSubtype];
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _[a1 deviceType];
}

id objc_msgSend_deviceUID(void *a1, const char *a2, ...)
{
  return _[a1 deviceUID];
}

id objc_msgSend_devices(void *a1, const char *a2, ...)
{
  return _[a1 devices];
}

id objc_msgSend_devicesForcedRemoved(void *a1, const char *a2, ...)
{
  return _[a1 devicesForcedRemoved];
}

id objc_msgSend_devicesInGroup(void *a1, const char *a2, ...)
{
  return _[a1 devicesInGroup];
}

id objc_msgSend_devicesPaused(void *a1, const char *a2, ...)
{
  return _[a1 devicesPaused];
}

id objc_msgSend_devicesRemoved(void *a1, const char *a2, ...)
{
  return _[a1 devicesRemoved];
}

id objc_msgSend_devicesUpdated(void *a1, const char *a2, ...)
{
  return _[a1 devicesUpdated];
}

id objc_msgSend_diagnosticDescription(void *a1, const char *a2, ...)
{
  return _[a1 diagnosticDescription];
}

id objc_msgSend_diagnosticInfo(void *a1, const char *a2, ...)
{
  return _[a1 diagnosticInfo];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryForKey:");
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didCancelRoutePicking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didCancelRoutePicking:");
}

id objc_msgSend_didReceiveNewRecommendations_forBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveNewRecommendations:forBundleIdentifier:");
}

id objc_msgSend_didSwitchRouteToDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSwitchRouteToDevice:");
}

id objc_msgSend_differenceFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "differenceFrom:");
}

id objc_msgSend_disableDuration(void *a1, const char *a2, ...)
{
  return _[a1 disableDuration];
}

id objc_msgSend_disablePairedDeviceActiveEndpointSync(void *a1, const char *a2, ...)
{
  return _[a1 disablePairedDeviceActiveEndpointSync];
}

id objc_msgSend_disarm(void *a1, const char *a2, ...)
{
  return _[a1 disarm];
}

id objc_msgSend_disconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnect:");
}

id objc_msgSend_disconnectInterval(void *a1, const char *a2, ...)
{
  return _[a1 disconnectInterval];
}

id objc_msgSend_disconnectOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectOrigin:");
}

id objc_msgSend_disconnectTimer(void *a1, const char *a2, ...)
{
  return _[a1 disconnectTimer];
}

id objc_msgSend_disconnectUndiscoverableEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectUndiscoverableEndpoints:");
}

id objc_msgSend_disconnectWhenUndiscoverable(void *a1, const char *a2, ...)
{
  return _[a1 disconnectWhenUndiscoverable];
}

id objc_msgSend_disconnectWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectWithError:");
}

id objc_msgSend_disconnected(void *a1, const char *a2, ...)
{
  return _[a1 disconnected];
}

id objc_msgSend_discoverCompanionDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoverCompanionDevices];
}

id objc_msgSend_discoverEndpointTimeoutInterval(void *a1, const char *a2, ...)
{
  return _[a1 discoverEndpointTimeoutInterval];
}

id objc_msgSend_discoverGroup(void *a1, const char *a2, ...)
{
  return _[a1 discoverGroup];
}

id objc_msgSend_discoverGroup_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverGroup:reason:queue:completion:");
}

id objc_msgSend_discoverOutputDevice_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverOutputDevice:reason:queue:completion:");
}

id objc_msgSend_discoverOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoverOutputDevices];
}

id objc_msgSend_discoveredConcreteOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoveredConcreteOutputDevices];
}

id objc_msgSend_discoveredSession(void *a1, const char *a2, ...)
{
  return _[a1 discoveredSession];
}

id objc_msgSend_discoveredSessions(void *a1, const char *a2, ...)
{
  return _[a1 discoveredSessions];
}

id objc_msgSend_discoveredSessionsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoveredSessionsDidChange:");
}

id objc_msgSend_discoveryChannel(void *a1, const char *a2, ...)
{
  return _[a1 discoveryChannel];
}

id objc_msgSend_discoveryDescription(void *a1, const char *a2, ...)
{
  return _[a1 discoveryDescription];
}

id objc_msgSend_discoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 discoveryMode];
}

id objc_msgSend_discoveryModeForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoveryModeForConfiguration:");
}

id objc_msgSend_discoveryOutputDevicesChanged_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoveryOutputDevicesChanged:forConfiguration:");
}

id objc_msgSend_discoverySession(void *a1, const char *a2, ...)
{
  return _[a1 discoverySession];
}

id objc_msgSend_discoverySessionConfigurationsResults(void *a1, const char *a2, ...)
{
  return _[a1 discoverySessionConfigurationsResults];
}

id objc_msgSend_discoverySessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverySessionWithConfiguration:");
}

id objc_msgSend_discoverySessionWithEndpointFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverySessionWithEndpointFeatures:");
}

id objc_msgSend_discoveryTokenForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoveryTokenForConfiguration:");
}

id objc_msgSend_discoveryTokens(void *a1, const char *a2, ...)
{
  return _[a1 discoveryTokens];
}

id objc_msgSend_discoveryTransaction(void *a1, const char *a2, ...)
{
  return _[a1 discoveryTransaction];
}

id objc_msgSend_dismiss(void *a1, const char *a2, ...)
{
  return _[a1 dismiss];
}

id objc_msgSend_dismissAllBannerRequests(void *a1, const char *a2, ...)
{
  return _[a1 dismissAllBannerRequests];
}

id objc_msgSend_dismissAllBanners(void *a1, const char *a2, ...)
{
  return _[a1 dismissAllBanners];
}

id objc_msgSend_dismissAllDiscoveredSessions(void *a1, const char *a2, ...)
{
  return _[a1 dismissAllDiscoveredSessions];
}

id objc_msgSend_dismissBannerRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissBannerRequest:");
}

id objc_msgSend_dismissBannerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissBannerWithIdentifier:");
}

id objc_msgSend_dismissConnectedBanner(void *a1, const char *a2, ...)
{
  return _[a1 dismissConnectedBanner];
}

id objc_msgSend_dismissDiscoveredSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissDiscoveredSession:");
}

id objc_msgSend_dismissJoinRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissJoinRequest:");
}

id objc_msgSend_dismissPillBannerRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPillBannerRequest:");
}

id objc_msgSend_dismissPillWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPillWithReason:");
}

id objc_msgSend_dismissProximityCard(void *a1, const char *a2, ...)
{
  return _[a1 dismissProximityCard];
}

id objc_msgSend_dismissSystemAperturePillWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissSystemAperturePillWithReason:");
}

id objc_msgSend_dispatchHIDEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatchHIDEvent:");
}

id objc_msgSend_displayBacklightLevel(void *a1, const char *a2, ...)
{
  return _[a1 displayBacklightLevel];
}

id objc_msgSend_displayDiscoveredSession_dismissalHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayDiscoveredSession:dismissalHandler:");
}

id objc_msgSend_displayJoinRequest_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayJoinRequest:handler:");
}

id objc_msgSend_displayMonitor(void *a1, const char *a2, ...)
{
  return _[a1 displayMonitor];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayNameAccepted(void *a1, const char *a2, ...)
{
  return _[a1 displayNameAccepted];
}

id objc_msgSend_displayOn(void *a1, const char *a2, ...)
{
  return _[a1 displayOn];
}

id objc_msgSend_distance(void *a1, const char *a2, ...)
{
  return _[a1 distance];
}

id objc_msgSend_distantEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 distantEndpoint];
}

id objc_msgSend_distantFuture(void *a1, const char *a2, ...)
{
  return _[a1 distantFuture];
}

id objc_msgSend_distantPast(void *a1, const char *a2, ...)
{
  return _[a1 distantPast];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_donateActiveEndpointOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateActiveEndpointOfType:");
}

id objc_msgSend_donateActiveRoutesToBiome(void *a1, const char *a2, ...)
{
  return _[a1 donateActiveRoutesToBiome];
}

id objc_msgSend_donateApprovedIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateApprovedIdentity:");
}

id objc_msgSend_donateAsCandidate(void *a1, const char *a2, ...)
{
  return _[a1 donateAsCandidate];
}

id objc_msgSend_donateAttribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateAttribution:");
}

id objc_msgSend_donateRemovedIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateRemovedIdentity:");
}

id objc_msgSend_donationQueue(void *a1, const char *a2, ...)
{
  return _[a1 donationQueue];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_dsid(void *a1, const char *a2, ...)
{
  return _[a1 dsid];
}

id objc_msgSend_dsidToPendingCompletionMap(void *a1, const char *a2, ...)
{
  return _[a1 dsidToPendingCompletionMap];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_effectiveBoolValueForSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveBoolValueForSetting:");
}

id objc_msgSend_effectiveIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 effectiveIdentifier];
}

id objc_msgSend_effectiveParentGroupContainsDiscoverableGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 effectiveParentGroupContainsDiscoverableGroupLeader];
}

id objc_msgSend_effectiveValuesForUnionSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveValuesForUnionSetting:");
}

id objc_msgSend_elapsedTimeTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 elapsedTimeTimestamp];
}

id objc_msgSend_electedPlayer(void *a1, const char *a2, ...)
{
  return _[a1 electedPlayer];
}

id objc_msgSend_electedPlayerController(void *a1, const char *a2, ...)
{
  return _[a1 electedPlayerController];
}

id objc_msgSend_electedPlayerInterval(void *a1, const char *a2, ...)
{
  return _[a1 electedPlayerInterval];
}

id objc_msgSend_electedPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 electedPlayerPath];
}

id objc_msgSend_elements(void *a1, const char *a2, ...)
{
  return _[a1 elements];
}

id objc_msgSend_eligibilityMonitor(void *a1, const char *a2, ...)
{
  return _[a1 eligibilityMonitor];
}

id objc_msgSend_eligibilityMonitor_eligibilityStatusDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eligibilityMonitor:eligibilityStatusDidChange:");
}

id objc_msgSend_eligibilityStatus(void *a1, const char *a2, ...)
{
  return _[a1 eligibilityStatus];
}

id objc_msgSend_enableDeltaRouteRecommendations(void *a1, const char *a2, ...)
{
  return _[a1 enableDeltaRouteRecommendations];
}

id objc_msgSend_enableQueueHandOffForRouteRecommendations(void *a1, const char *a2, ...)
{
  return _[a1 enableQueueHandOffForRouteRecommendations];
}

id objc_msgSend_enableRouteRecommendations(void *a1, const char *a2, ...)
{
  return _[a1 enableRouteRecommendations];
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return _[a1 enabled];
}

id objc_msgSend_encodeEntries(void *a1, const char *a2, ...)
{
  return _[a1 encodeEntries];
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encryptedMessageWithState_text_attributes_usingCryptoSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encryptedMessageWithState:text:attributes:usingCryptoSession:");
}

id objc_msgSend_encryptionType(void *a1, const char *a2, ...)
{
  return _[a1 encryptionType];
}

id objc_msgSend_end(void *a1, const char *a2, ...)
{
  return _[a1 end];
}

id objc_msgSend_endAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 endAdvertising];
}

id objc_msgSend_endEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEvent:");
}

id objc_msgSend_endEvent_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEvent:withError:");
}

id objc_msgSend_endGroupSessionLowPowerPlatterActivity(void *a1, const char *a2, ...)
{
  return _[a1 endGroupSessionLowPowerPlatterActivity];
}

id objc_msgSend_endGroupSessionNearbyActivity(void *a1, const char *a2, ...)
{
  return _[a1 endGroupSessionNearbyActivity];
}

id objc_msgSend_endLoadingUpdates(void *a1, const char *a2, ...)
{
  return _[a1 endLoadingUpdates];
}

id objc_msgSend_endMirroringActivity(void *a1, const char *a2, ...)
{
  return _[a1 endMirroringActivity];
}

id objc_msgSend_endNowPlayingActivity(void *a1, const char *a2, ...)
{
  return _[a1 endNowPlayingActivity];
}

id objc_msgSend_endProxyAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 endProxyAdvertising];
}

id objc_msgSend_endRouteRecommendationActivityFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endRouteRecommendationActivityFor:");
}

id objc_msgSend_endWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endWithError:");
}

id objc_msgSend_endpoint(void *a1, const char *a2, ...)
{
  return _[a1 endpoint];
}

id objc_msgSend_endpointFeatures(void *a1, const char *a2, ...)
{
  return _[a1 endpointFeatures];
}

id objc_msgSend_endpointForDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpointForDeviceUID:");
}

id objc_msgSend_endpointForMachName_service_instance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpointForMachName:service:instance:");
}

id objc_msgSend_endpointRecentlyUserSelectedInterval(void *a1, const char *a2, ...)
{
  return _[a1 endpointRecentlyUserSelectedInterval];
}

id objc_msgSend_endpoints(void *a1, const char *a2, ...)
{
  return _[a1 endpoints];
}

id objc_msgSend_endpointsForcedRemoved(void *a1, const char *a2, ...)
{
  return _[a1 endpointsForcedRemoved];
}

id objc_msgSend_endpointsPaused(void *a1, const char *a2, ...)
{
  return _[a1 endpointsPaused];
}

id objc_msgSend_endpointsRemoved(void *a1, const char *a2, ...)
{
  return _[a1 endpointsRemoved];
}

id objc_msgSend_endpointsSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 endpointsSnapshot];
}

id objc_msgSend_enqueueRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueRequest:completion:");
}

id objc_msgSend_enterLowPowerModeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enterLowPowerModeWithCompletion:");
}

id objc_msgSend_entitlements(void *a1, const char *a2, ...)
{
  return _[a1 entitlements];
}

id objc_msgSend_enumerateFilteredContentItemsBySubscriptionsForContentItems_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateFilteredContentItemsBySubscriptionsForContentItems:block:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_equivalentMediaIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 equivalentMediaIdentifier];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorForCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 errorForCurrentState];
}

id objc_msgSend_errorHandler(void *a1, const char *a2, ...)
{
  return _[a1 errorHandler];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_euid(void *a1, const char *a2, ...)
{
  return _[a1 euid];
}

id objc_msgSend_evaluateRecommendations_localOutputContextHasAirPlay_primaryBundleIdentifier_activeSystemEndpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateRecommendations:localOutputContextHasAirPlay:primaryBundleIdentifier:activeSystemEndpoint:completion:");
}

id objc_msgSend_evaluateShouldDisconnectWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateShouldDisconnectWithReason:");
}

id objc_msgSend_evaluateState(void *a1, const char *a2, ...)
{
  return _[a1 evaluateState];
}

id objc_msgSend_event(void *a1, const char *a2, ...)
{
  return _[a1 event];
}

id objc_msgSend_eventBody(void *a1, const char *a2, ...)
{
  return _[a1 eventBody];
}

id objc_msgSend_eventReason(void *a1, const char *a2, ...)
{
  return _[a1 eventReason];
}

id objc_msgSend_events(void *a1, const char *a2, ...)
{
  return _[a1 events];
}

id objc_msgSend_eventuallyCommitOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventuallyCommitOutputDevice:");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_excessiveTaskAssertionsABC(void *a1, const char *a2, ...)
{
  return _[a1 excessiveTaskAssertionsABC];
}

id objc_msgSend_existingNowPlayingClientForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingNowPlayingClientForClient:");
}

id objc_msgSend_existingNowPlayingClientForPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingNowPlayingClientForPid:");
}

id objc_msgSend_existingNowPlayingClientForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingNowPlayingClientForPlayerPath:");
}

id objc_msgSend_existingOriginClientRequestsForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingOriginClientRequestsForPlayerPath:");
}

id objc_msgSend_existingPlayerClientForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingPlayerClientForPlayer:");
}

id objc_msgSend_existingPlayerClientForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingPlayerClientForPlayerPath:");
}

id objc_msgSend_existingSubscriptionControllerForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingSubscriptionControllerForPlayerPath:");
}

id objc_msgSend_exitEvent(void *a1, const char *a2, ...)
{
  return _[a1 exitEvent];
}

id objc_msgSend_exitLowPowerModeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exitLowPowerModeWithCompletion:");
}

id objc_msgSend_expanseSessionActive(void *a1, const char *a2, ...)
{
  return _[a1 expanseSessionActive];
}

id objc_msgSend_expanseSessionHasActiveActivity(void *a1, const char *a2, ...)
{
  return _[a1 expanseSessionHasActiveActivity];
}

id objc_msgSend_expectedClientAuditTokens(void *a1, const char *a2, ...)
{
  return _[a1 expectedClientAuditTokens];
}

id objc_msgSend_expectedIdentifierForUserIdentity_withRandomData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectedIdentifierForUserIdentity:withRandomData:");
}

id objc_msgSend_expirationDate(void *a1, const char *a2, ...)
{
  return _[a1 expirationDate];
}

id objc_msgSend_exportContentItemArtworkUpdates_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportContentItemArtworkUpdates:forPlayerPath:");
}

id objc_msgSend_exportContentItems_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportContentItems:forPlayerPath:");
}

id objc_msgSend_exportEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportEndpoint:");
}

id objc_msgSend_exportNowPlayingState_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportNowPlayingState:forPlayerPath:");
}

id objc_msgSend_exportOutputDevice_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportOutputDevice:endpoint:");
}

id objc_msgSend_exportOutputDevices_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportOutputDevices:endpoint:");
}

id objc_msgSend_exportPlaybackQueue_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportPlaybackQueue:forPlayerPath:");
}

id objc_msgSend_exportSupportedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportSupportedCommands:");
}

id objc_msgSend_exportedInterface(void *a1, const char *a2, ...)
{
  return _[a1 exportedInterface];
}

id objc_msgSend_extendedInfo(void *a1, const char *a2, ...)
{
  return _[a1 extendedInfo];
}

id objc_msgSend_externalDevice(void *a1, const char *a2, ...)
{
  return _[a1 externalDevice];
}

id objc_msgSend_externalDeviceArtificalConnectionDelay(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceArtificalConnectionDelay];
}

id objc_msgSend_externalDeviceClient_gameController_propertiesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalDeviceClient:gameController:propertiesChanged:");
}

id objc_msgSend_externalDeviceDisconnectSleepDuration(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceDisconnectSleepDuration];
}

id objc_msgSend_externalDeviceDisconnectWaitDuration(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceDisconnectWaitDuration];
}

id objc_msgSend_externalDeviceForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalDeviceForEndpoint:");
}

id objc_msgSend_externalDeviceListenerEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceListenerEndpoint];
}

id objc_msgSend_externalDeviceServer(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceServer];
}

id objc_msgSend_externalDeviceSleepAssertionOnClientConnectDuration(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceSleepAssertionOnClientConnectDuration];
}

id objc_msgSend_externalDeviceTimeoutDuration(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceTimeoutDuration];
}

id objc_msgSend_externalOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 externalOutputContext];
}

id objc_msgSend_externalScreenType(void *a1, const char *a2, ...)
{
  return _[a1 externalScreenType];
}

id objc_msgSend_fadeAudio(void *a1, const char *a2, ...)
{
  return _[a1 fadeAudio];
}

id objc_msgSend_fadeType(void *a1, const char *a2, ...)
{
  return _[a1 fadeType];
}

id objc_msgSend_fastSyncSession(void *a1, const char *a2, ...)
{
  return _[a1 fastSyncSession];
}

id objc_msgSend_features(void *a1, const char *a2, ...)
{
  return _[a1 features];
}

id objc_msgSend_fetchActiveEndpointOnQueue_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActiveEndpointOnQueue:withCompletion:");
}

id objc_msgSend_fetchActiveUserWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActiveUserWithQueue:completion:");
}

id objc_msgSend_fetchServiceTokenWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchServiceTokenWithCompletion:");
}

id objc_msgSend_fetchUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchUserIdentity:");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_filterOutputDevices_remoteControllableOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterOutputDevices:remoteControllableOnly:");
}

id objc_msgSend_filteredContentItemsBySubscriptionsForContentItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredContentItemsBySubscriptionsForContentItems:");
}

id objc_msgSend_findEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 findEndpoint];
}

id objc_msgSend_findMyGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 findMyGroupLeader];
}

id objc_msgSend_finish(void *a1, const char *a2, ...)
{
  return _[a1 finish];
}

id objc_msgSend_finishRemoteControlGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishRemoteControlGroupSession:");
}

id objc_msgSend_finishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithError:");
}

id objc_msgSend_finishedWaitingForCloudStateDSIDs(void *a1, const char *a2, ...)
{
  return _[a1 finishedWaitingForCloudStateDSIDs];
}

id objc_msgSend_firewall(void *a1, const char *a2, ...)
{
  return _[a1 firewall];
}

id objc_msgSend_first(void *a1, const char *a2, ...)
{
  return _[a1 first];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_fittedArtworkDataForContentItem_withRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fittedArtworkDataForContentItem:withRequest:");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_flushLyricsEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushLyricsEvents:");
}

id objc_msgSend_flushPendingPlaybackSessionMigrateEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushPendingPlaybackSessionMigrateEvents:");
}

id objc_msgSend_focusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 focusMonitor];
}

id objc_msgSend_followupOutputContextModification(void *a1, const char *a2, ...)
{
  return _[a1 followupOutputContextModification];
}

id objc_msgSend_forceDeviceInfoDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 forceDeviceInfoDiscovery];
}

id objc_msgSend_forceEnableCECVolume(void *a1, const char *a2, ...)
{
  return _[a1 forceEnableCECVolume];
}

id objc_msgSend_forceNowPlayingSessionFailure(void *a1, const char *a2, ...)
{
  return _[a1 forceNowPlayingSessionFailure];
}

id objc_msgSend_forwardParticipantDataSourceIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 forwardParticipantDataSourceIfNeeded];
}

id objc_msgSend_frameworkState(void *a1, const char *a2, ...)
{
  return _[a1 frameworkState];
}

id objc_msgSend_fromObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromObject:");
}

id objc_msgSend_frontmostClient(void *a1, const char *a2, ...)
{
  return _[a1 frontmostClient];
}

id objc_msgSend_gain(void *a1, const char *a2, ...)
{
  return _[a1 gain];
}

id objc_msgSend_gameControllerWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gameControllerWithID:");
}

id objc_msgSend_getActivePairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 getActivePairedDevice];
}

id objc_msgSend_getBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBytes:length:");
}

id objc_msgSend_getClusterStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getClusterStatus:");
}

id objc_msgSend_getSessionWithLatestConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSessionWithLatestConfiguration:");
}

id objc_msgSend_getVolume_forCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getVolume:forCategory:");
}

id objc_msgSend_groupContainsDiscoverableGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 groupContainsDiscoverableGroupLeader];
}

id objc_msgSend_groupContainsGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 groupContainsGroupLeader];
}

id objc_msgSend_groupContextID(void *a1, const char *a2, ...)
{
  return _[a1 groupContextID];
}

id objc_msgSend_groupID(void *a1, const char *a2, ...)
{
  return _[a1 groupID];
}

id objc_msgSend_groupLeader(void *a1, const char *a2, ...)
{
  return _[a1 groupLeader];
}

id objc_msgSend_groupLeaderOperations(void *a1, const char *a2, ...)
{
  return _[a1 groupLeaderOperations];
}

id objc_msgSend_groupSession(void *a1, const char *a2, ...)
{
  return _[a1 groupSession];
}

id objc_msgSend_groupSessionASEAssertionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionASEAssertionEnabled];
}

id objc_msgSend_groupSessionAttributionValidityDuration(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionAttributionValidityDuration];
}

id objc_msgSend_groupSessionBoopAdvertisementEnabled(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionBoopAdvertisementEnabled];
}

id objc_msgSend_groupSessionBoopAdvertisementEnabledDidChangeNotification(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionBoopAdvertisementEnabledDidChangeNotification];
}

id objc_msgSend_groupSessionCapableStatus(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionCapableStatus];
}

id objc_msgSend_groupSessionEndAfterPauseInterval(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionEndAfterPauseInterval];
}

id objc_msgSend_groupSessionEndpointDiscoveryInterval(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionEndpointDiscoveryInterval];
}

id objc_msgSend_groupSessionGenerateSharedSecret(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionGenerateSharedSecret];
}

id objc_msgSend_groupSessionInfo(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionInfo];
}

id objc_msgSend_groupSessionListenForProxyJoinRequests(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionListenForProxyJoinRequests];
}

id objc_msgSend_groupSessionNearbyGroupCreateTimeout(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionNearbyGroupCreateTimeout];
}

id objc_msgSend_groupSessionNearbyInvitationCreateTimeout(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionNearbyInvitationCreateTimeout];
}

id objc_msgSend_groupSessionRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupSessionRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_groupSessionServer(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionServer];
}

id objc_msgSend_groupSessionStartRequestAssertionDuration(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionStartRequestAssertionDuration];
}

id objc_msgSend_groupSessionToken(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionToken];
}

id objc_msgSend_groupSessionsSupportedForAccountRegion(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionsSupportedForAccountRegion];
}

id objc_msgSend_groupUID(void *a1, const char *a2, ...)
{
  return _[a1 groupUID];
}

id objc_msgSend_groupedDevices(void *a1, const char *a2, ...)
{
  return _[a1 groupedDevices];
}

id objc_msgSend_guest(void *a1, const char *a2, ...)
{
  return _[a1 guest];
}

id objc_msgSend_h(void *a1, const char *a2, ...)
{
  return _[a1 h];
}

id objc_msgSend_handOffQueueOrAirPlay_sourceEndpoint_destinationEndpoint_playerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handOffQueueOrAirPlay:sourceEndpoint:destinationEndpoint:playerPath:completion:");
}

id objc_msgSend_handle(void *a1, const char *a2, ...)
{
  return _[a1 handle];
}

id objc_msgSend_handleApprovedJoinRequest_isGuest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleApprovedJoinRequest:isGuest:");
}

id objc_msgSend_handleAutoRouteResult_forRoute_primaryBundleIdentifier_isOutsideApp_contextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAutoRouteResult:forRoute:primaryBundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_handleClientBoundApplicationConnectionMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleClientBoundApplicationConnectionMessage:");
}

id objc_msgSend_handleClientBoundMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleClientBoundMessage:");
}

id objc_msgSend_handleContentItemTransaction_packets_group_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleContentItemTransaction:packets:group:");
}

id objc_msgSend_handleDeltaResult_forRoute_devicesToAdd_sourceEndpoint_primaryBundleIdentifier_isOutsideApp_contextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeltaResult:forRoute:devicesToAdd:sourceEndpoint:primaryBundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_handleDidReceiveResetConnectionRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleDidReceiveResetConnectionRequest];
}

id objc_msgSend_handleEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEvent:");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_handleFirstLaunchAfterBootIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 handleFirstLaunchAfterBootIfNeeded];
}

id objc_msgSend_handleForIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleForIdentifier:error:");
}

id objc_msgSend_handleGetGroupSessionServerEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleGetGroupSessionServerEndpointMessage:fromClient:");
}

id objc_msgSend_handleGroupSessionEvent_withOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleGroupSessionEvent:withOptions:completion:");
}

id objc_msgSend_handleGroupSessionSelectionEvent_forDiscoveredSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleGroupSessionSelectionEvent:forDiscoveredSession:completion:");
}

id objc_msgSend_handleHandoffEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHandoffEvent:");
}

id objc_msgSend_handleIncomingMessage_type_destination_session_messageID_replyID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleIncomingMessage:type:destination:session:messageID:replyID:");
}

id objc_msgSend_handleInvalidateApplicationConnectionMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInvalidateApplicationConnectionMessage:");
}

id objc_msgSend_handleJoinGroupSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleJoinGroupSessionMessage:fromClient:");
}

id objc_msgSend_handleJoinRequest_isGuest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleJoinRequest:isGuest:completion:");
}

id objc_msgSend_handleLeaveGroupSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLeaveGroupSessionMessage:fromClient:");
}

id objc_msgSend_handleMediaRemoteCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMediaRemoteCommand:completion:");
}

id objc_msgSend_handleMediaRemoteCommand_sourceIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMediaRemoteCommand:sourceIdentifier:completion:");
}

id objc_msgSend_handleMediaRemoteCommandForBargeCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMediaRemoteCommandForBargeCalls:");
}

id objc_msgSend_handleNowPlayingOriginClient_deviceInfoDidChange_previousDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNowPlayingOriginClient:deviceInfoDidChange:previousDeviceInfo:");
}

id objc_msgSend_handlePlaybackQueueRequest_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePlaybackQueueRequest:fromClient:");
}

id objc_msgSend_handlePlaybackQueueRequestTransaction_packets_group_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePlaybackQueueRequestTransaction:packets:group:");
}

id objc_msgSend_handlePlaybackStartForEndpoint_bundleIdentifier_eligibleForRecommendationsOutsideApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePlaybackStartForEndpoint:bundleIdentifier:eligibleForRecommendationsOutsideApp:");
}

id objc_msgSend_handleResult_forRoute_devices_endpoint_primaryBundleIdentifier_isOutsideApp_contextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleResult:forRoute:devices:endpoint:primaryBundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_handleServerBoundApplicationConnectionMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleServerBoundApplicationConnectionMessage:");
}

id objc_msgSend_handleServerBoundMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleServerBoundMessage:");
}

id objc_msgSend_handleSetConnectionStateMessage_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSetConnectionStateMessage:forClient:");
}

id objc_msgSend_handleSetDiscoveryModeMessage_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSetDiscoveryModeMessage:forClient:");
}

id objc_msgSend_handleTouchEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleTouchEvent:");
}

id objc_msgSend_handleUpdateOutputDevicesMessage_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateOutputDevicesMessage:forClient:");
}

id objc_msgSend_handleUserInteractionsWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUserInteractionsWithBlock:");
}

id objc_msgSend_handleXPCMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleXPCMessage:fromClient:");
}

id objc_msgSend_handlerReturnStatuses(void *a1, const char *a2, ...)
{
  return _[a1 handlerReturnStatuses];
}

id objc_msgSend_handoffSessions(void *a1, const char *a2, ...)
{
  return _[a1 handoffSessions];
}

id objc_msgSend_hasASmartDevice(void *a1, const char *a2, ...)
{
  return _[a1 hasASmartDevice];
}

id objc_msgSend_hasAcceptedDisplayNameAcknowledgement(void *a1, const char *a2, ...)
{
  return _[a1 hasAcceptedDisplayNameAcknowledgement];
}

id objc_msgSend_hasAcceptedPrivacyAcknowledgement(void *a1, const char *a2, ...)
{
  return _[a1 hasAcceptedPrivacyAcknowledgement];
}

id objc_msgSend_hasAccessToPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAccessToPlayerPath:");
}

id objc_msgSend_hasArtworkAvailable(void *a1, const char *a2, ...)
{
  return _[a1 hasArtworkAvailable];
}

id objc_msgSend_hasAuxiliaryProperties(void *a1, const char *a2, ...)
{
  return _[a1 hasAuxiliaryProperties];
}

id objc_msgSend_hasCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCapability:");
}

id objc_msgSend_hasDeferredDisconnectionDueToDeviceState(void *a1, const char *a2, ...)
{
  return _[a1 hasDeferredDisconnectionDueToDeviceState];
}

id objc_msgSend_hasDiscoveredSessionForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasDiscoveredSessionForIdentifier:");
}

id objc_msgSend_hasElapsedTimeTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 hasElapsedTimeTimestamp];
}

id objc_msgSend_hasElectedPlayer(void *a1, const char *a2, ...)
{
  return _[a1 hasElectedPlayer];
}

id objc_msgSend_hasEnded(void *a1, const char *a2, ...)
{
  return _[a1 hasEnded];
}

id objc_msgSend_hasGroupSessionLowPowerAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasGroupSessionLowPowerAssertion];
}

id objc_msgSend_hasGroupSessionLowPowerPlatterAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasGroupSessionLowPowerPlatterAssertion];
}

id objc_msgSend_hasGroupSessionNearbyAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasGroupSessionNearbyAssertion];
}

id objc_msgSend_hasLength(void *a1, const char *a2, ...)
{
  return _[a1 hasLength];
}

id objc_msgSend_hasLocation(void *a1, const char *a2, ...)
{
  return _[a1 hasLocation];
}

id objc_msgSend_hasLockScreenAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasLockScreenAssertion];
}

id objc_msgSend_hasLockScreenControlsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasLockScreenControlsAssertion];
}

id objc_msgSend_hasNowPlayingActivityAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasNowPlayingActivityAssertion];
}

id objc_msgSend_hasNowPlayingAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasNowPlayingAssertion];
}

id objc_msgSend_hasNowPlayingData(void *a1, const char *a2, ...)
{
  return _[a1 hasNowPlayingData];
}

id objc_msgSend_hasPlaceholder(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaceholder];
}

id objc_msgSend_hasPlaceholderGroupSession(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaceholderGroupSession];
}

id objc_msgSend_hasPlaybackRate(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaybackRate];
}

id objc_msgSend_hasPlaybackStateTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaybackStateTimestamp];
}

id objc_msgSend_hasPlayedRecently(void *a1, const char *a2, ...)
{
  return _[a1 hasPlayedRecently];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasPresentedForCurrentPersonalDevices(void *a1, const char *a2, ...)
{
  return _[a1 hasPresentedForCurrentPersonalDevices];
}

id objc_msgSend_hasQuickControlsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasQuickControlsAssertion];
}

id objc_msgSend_hasRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRequest:");
}

id objc_msgSend_hasRequestedLegacyNowPlayingInfo(void *a1, const char *a2, ...)
{
  return _[a1 hasRequestedLegacyNowPlayingInfo];
}

id objc_msgSend_hasRequestedSupportedCommands(void *a1, const char *a2, ...)
{
  return _[a1 hasRequestedSupportedCommands];
}

id objc_msgSend_hasRouteRecommendationAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasRouteRecommendationAssertion];
}

id objc_msgSend_hasScreenMirroringAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasScreenMirroringAssertion];
}

id objc_msgSend_hasScreenMirroringQuickControlsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasScreenMirroringQuickControlsAssertion];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasTriggered(void *a1, const char *a2, ...)
{
  return _[a1 hasTriggered];
}

id objc_msgSend_hasUIAssertions(void *a1, const char *a2, ...)
{
  return _[a1 hasUIAssertions];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hashForIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashForIdentity:");
}

id objc_msgSend_hashedUserIdentityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hashedUserIdentityIdentifier];
}

id objc_msgSend_hidden(void *a1, const char *a2, ...)
{
  return _[a1 hidden];
}

id objc_msgSend_homeKitUserIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 homeKitUserIdentifiers];
}

id objc_msgSend_homePodListener(void *a1, const char *a2, ...)
{
  return _[a1 homePodListener];
}

id objc_msgSend_homeScreenVisible(void *a1, const char *a2, ...)
{
  return _[a1 homeScreenVisible];
}

id objc_msgSend_homeUserIDs(void *a1, const char *a2, ...)
{
  return _[a1 homeUserIDs];
}

id objc_msgSend_homepodDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 homepodDemoMode];
}

id objc_msgSend_homepodsEffected(void *a1, const char *a2, ...)
{
  return _[a1 homepodsEffected];
}

id objc_msgSend_homes(void *a1, const char *a2, ...)
{
  return _[a1 homes];
}

id objc_msgSend_hostInfo(void *a1, const char *a2, ...)
{
  return _[a1 hostInfo];
}

id objc_msgSend_hostProcess(void *a1, const char *a2, ...)
{
  return _[a1 hostProcess];
}

id objc_msgSend_hostedDiscoverySessionDidInvalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedDiscoverySessionDidInvalidate:");
}

id objc_msgSend_hostedExternalDeviceConnectionStateDidChange_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceConnectionStateDidChange:withError:");
}

id objc_msgSend_hostedExternalDeviceDeviceInfoDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceDeviceInfoDidChange:");
}

id objc_msgSend_hostedExternalDeviceDidAddOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceDidAddOutputDevice:");
}

id objc_msgSend_hostedExternalDeviceDidChangeOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceDidChangeOutputDevice:");
}

id objc_msgSend_hostedExternalDeviceDidReceiveCustomData_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceDidReceiveCustomData:withName:");
}

id objc_msgSend_hostedExternalDeviceDidRemoveOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceDidRemoveOutputDevice:");
}

id objc_msgSend_hostedExternalDeviceEndpointDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceEndpointDidChange:");
}

id objc_msgSend_hostedExternalDeviceForEndpointIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceForEndpointIdentifier:");
}

id objc_msgSend_hostedExternalDeviceIsMutedDidChange_forOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceIsMutedDidChange:forOutputDevice:");
}

id objc_msgSend_hostedExternalDeviceManagerDidUpdateExternalDeviceMapping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceManagerDidUpdateExternalDeviceMapping:");
}

id objc_msgSend_hostedExternalDeviceVolumeCapabilitiesDidChange_forOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceVolumeCapabilitiesDidChange:forOutputDevice:");
}

id objc_msgSend_hostedExternalDeviceVolumeDidChange_forOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceVolumeDidChange:forOutputDevice:");
}

id objc_msgSend_hostedRoutingController(void *a1, const char *a2, ...)
{
  return _[a1 hostedRoutingController];
}

id objc_msgSend_hostedRoutingController_availableEndpointsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedRoutingController:availableEndpointsDidChange:");
}

id objc_msgSend_hostedRoutingController_endpointsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedRoutingController:endpointsDidChange:");
}

id objc_msgSend_hostedRoutingController_outputDevicesDidChange_forFeature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedRoutingController:outputDevicesDidChange:forFeature:");
}

id objc_msgSend_hostedRoutingService(void *a1, const char *a2, ...)
{
  return _[a1 hostedRoutingService];
}

id objc_msgSend_hostedSessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hostedSessionIdentifier];
}

id objc_msgSend_hostingStateForEligibilityStatus_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostingStateForEligibilityStatus:reason:");
}

id objc_msgSend_hostingStateForUserState_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostingStateForUserState:reason:");
}

id objc_msgSend_iTunesAudioContext(void *a1, const char *a2, ...)
{
  return _[a1 iTunesAudioContext];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifierWithPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifierWithPid:");
}

id objc_msgSend_identifyingMACAddress(void *a1, const char *a2, ...)
{
  return _[a1 identifyingMACAddress];
}

id objc_msgSend_identity(void *a1, const char *a2, ...)
{
  return _[a1 identity];
}

id objc_msgSend_identityForAngelJobLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForAngelJobLabel:");
}

id objc_msgSend_identityForApplicationJobLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForApplicationJobLabel:");
}

id objc_msgSend_identityForHomeUserIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForHomeUserIdentifier:");
}

id objc_msgSend_identityForUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForUserState:");
}

id objc_msgSend_identityStringsForApplicationWithBundleIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityStringsForApplicationWithBundleIdentifier:error:");
}

id objc_msgSend_identitySupportsCollaboration(void *a1, const char *a2, ...)
{
  return _[a1 identitySupportsCollaboration];
}

id objc_msgSend_idsAccountIsValid(void *a1, const char *a2, ...)
{
  return _[a1 idsAccountIsValid];
}

id objc_msgSend_idsCompanionRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsCompanionRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_idsIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 idsIdentifier];
}

id objc_msgSend_idsRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_idsService(void *a1, const char *a2, ...)
{
  return _[a1 idsService];
}

id objc_msgSend_imageData(void *a1, const char *a2, ...)
{
  return _[a1 imageData];
}

id objc_msgSend_imageDimensionsForImageData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageDimensionsForImageData:error:");
}

id objc_msgSend_inactiveOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 inactiveOutputContexts];
}

id objc_msgSend_includeArtwork(void *a1, const char *a2, ...)
{
  return _[a1 includeArtwork];
}

id objc_msgSend_inconsistentPlaybackQueueCacheABC(void *a1, const char *a2, ...)
{
  return _[a1 inconsistentPlaybackQueueCacheABC];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObject_inRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:inRange:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexPathData(void *a1, const char *a2, ...)
{
  return _[a1 indexPathData];
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_inferredNowPlayingClient(void *a1, const char *a2, ...)
{
  return _[a1 inferredNowPlayingClient];
}

id objc_msgSend_info(void *a1, const char *a2, ...)
{
  return _[a1 info];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_infoFromGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoFromGroupSession:");
}

id objc_msgSend_ingestConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ingestConnection:");
}

id objc_msgSend_ingestData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ingestData:");
}

id objc_msgSend_ingestMockedRecommendation_classification_isCallToAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ingestMockedRecommendation:classification:isCallToAction:");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initFromTransactionName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFromTransactionName:");
}

id objc_msgSend_initLazily(void *a1, const char *a2, ...)
{
  return _[a1 initLazily];
}

id objc_msgSend_initSiblingSession_auditToken_clientIdentifier_autoReconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initSiblingSession:auditToken:clientIdentifier:autoReconnect:");
}

id objc_msgSend_initWithAPCommunicationChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAPCommunicationChannel:");
}

id objc_msgSend_initWithAVOutputContext_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAVOutputContext:type:");
}

id objc_msgSend_initWithAVOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAVOutputDevice:");
}

id objc_msgSend_initWithAVOutputDevice_sourceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAVOutputDevice:sourceInfo:");
}

id objc_msgSend_initWithAdjustment_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAdjustment:outputDeviceUID:details:");
}

id objc_msgSend_initWithAllSupportedMessages(void *a1, const char *a2, ...)
{
  return _[a1 initWithAllSupportedMessages];
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithArray_copyItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:copyItems:");
}

id objc_msgSend_initWithBackgroundActivityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBackgroundActivityIdentifier:");
}

id objc_msgSend_initWithBackgroundActivityIdentifier_activityAttribution_showsWhenForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBackgroundActivityIdentifier:activityAttribution:showsWhenForeground:");
}

id objc_msgSend_initWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBlock:");
}

id objc_msgSend_initWithBundleID_indexPathData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleID:indexPathData:");
}

id objc_msgSend_initWithBundleIDs_states_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIDs:states:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:options:");
}

id objc_msgSend_initWithButtonEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithButtonEvent:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:encoding:");
}

id objc_msgSend_initWithBytesNoCopy_length_encoding_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytesNoCopy:length:encoding:freeWhenDone:");
}

id objc_msgSend_initWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCString:encoding:");
}

id objc_msgSend_initWithCandidateIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCandidateIdentifier:");
}

id objc_msgSend_initWithCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapabilities:");
}

id objc_msgSend_initWithCapabilities_endpointUID_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapabilities:endpointUID:outputDeviceUID:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClient:");
}

id objc_msgSend_initWithClientObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientObject:");
}

id objc_msgSend_initWithClientObject_invalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientObject:invalidationHandler:");
}

id objc_msgSend_initWithClusterLeaderID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClusterLeaderID:");
}

id objc_msgSend_initWithClusterType_modelID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClusterType:modelID:");
}

id objc_msgSend_initWithCommand_options_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommand:options:playerPath:");
}

id objc_msgSend_initWithCommand_routedApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommand:routedApp:");
}

id objc_msgSend_initWithCommandID_commandResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommandID:commandResult:");
}

id objc_msgSend_initWithCommandType_playerPath_unresolvedPlayerPath_senderAppDisplayID_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommandType:playerPath:unresolvedPlayerPath:senderAppDisplayID:options:");
}

id objc_msgSend_initWithCommandType_playerPath_unresolvedPlayerPath_senderAppDisplayID_optionsData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommandType:playerPath:unresolvedPlayerPath:senderAppDisplayID:optionsData:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithConfiguration_shouldObserveRoutingContextUIDChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:shouldObserveRoutingContextUIDChanges:");
}

id objc_msgSend_initWithConfigurationData_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfigurationData:endpoint:");
}

id objc_msgSend_initWithConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:");
}

id objc_msgSend_initWithConnection_bundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:bundleID:");
}

id objc_msgSend_initWithConnection_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:deviceInfo:");
}

id objc_msgSend_initWithConnection_hostedRoutingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:hostedRoutingController:");
}

id objc_msgSend_initWithConnection_label_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:label:");
}

id objc_msgSend_initWithConnection_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:queue:");
}

id objc_msgSend_initWithConnection_queue_defaultReplyQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:queue:defaultReplyQueue:");
}

id objc_msgSend_initWithConnection_type_destination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:type:destination:session:");
}

id objc_msgSend_initWithConnectionContext_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnectionContext:error:");
}

id objc_msgSend_initWithConnectionContext_requestInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnectionContext:requestInfo:");
}

id objc_msgSend_initWithConnectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnectionState:");
}

id objc_msgSend_initWithContentItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentItems:");
}

id objc_msgSend_initWithContentItems_forPlayerPath_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentItems:forPlayerPath:encoding:");
}

id objc_msgSend_initWithContentItems_location_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentItems:location:");
}

id objc_msgSend_initWithContentItems_location_withPropertiesFromPlaybackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentItems:location:withPropertiesFromPlaybackQueue:");
}

id objc_msgSend_initWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:");
}

id objc_msgSend_initWithContextID_originatingAppDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContextID:originatingAppDisplayID:");
}

id objc_msgSend_initWithControllerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithControllerID:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithData_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:forKey:");
}

id objc_msgSend_initWithDataSource_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:delegate:");
}

id objc_msgSend_initWithDeallocHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeallocHandler:");
}

id objc_msgSend_initWithDefaultSupportedCommands_forPlayerPath_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDefaultSupportedCommands:forPlayerPath:encoding:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_queue_routeRecommender_routeRecommendationStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:queue:routeRecommender:routeRecommendationStore:");
}

id objc_msgSend_initWithDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDescriptor:");
}

id objc_msgSend_initWithDescriptor_xpcEndpointListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDescriptor:xpcEndpointListener:");
}

id objc_msgSend_initWithDesignatedGroupLeader_outputDevices_preferredSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDesignatedGroupLeader:outputDevices:preferredSuffix:");
}

id objc_msgSend_initWithDesignatedGroupLeader_outputDevices_preferredSuffix_connectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDesignatedGroupLeader:outputDevices:preferredSuffix:connectionType:");
}

id objc_msgSend_initWithDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDestination:");
}

id objc_msgSend_initWithDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDetails:");
}

id objc_msgSend_initWithDetails_deviceInfo_numberOfRequestedOutputDeviceUIDs_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDetails:deviceInfo:numberOfRequestedOutputDeviceUIDs:timeout:");
}

id objc_msgSend_initWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevice:");
}

id objc_msgSend_initWithDeviceDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceDescriptor:");
}

id objc_msgSend_initWithDeviceFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceFeatures:");
}

id objc_msgSend_initWithDeviceID_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceID:errorCode:");
}

id objc_msgSend_initWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceInfo:");
}

id objc_msgSend_initWithDeviceInfo_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceInfo:client:");
}

id objc_msgSend_initWithDeviceInfoDataSource_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceInfoDataSource:delegate:");
}

id objc_msgSend_initWithDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceUID:");
}

id objc_msgSend_initWithDeviceUID_sessionUID_targetDevice_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceUID:sessionUID:targetDevice:error:");
}

id objc_msgSend_initWithDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevices:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionaryRepresentation:");
}

id objc_msgSend_initWithDiscoveredSession_autoConnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDiscoveredSession:autoConnect:");
}

id objc_msgSend_initWithDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDispatchQueue:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithDomain_type_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:type:name:");
}

id objc_msgSend_initWithEligibilityMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEligibilityMonitor:");
}

id objc_msgSend_initWithEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEndpoint:");
}

id objc_msgSend_initWithEndpoint_externalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEndpoint:externalDevice:");
}

id objc_msgSend_initWithEndpointFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEndpointFeatures:");
}

id objc_msgSend_initWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithError:");
}

id objc_msgSend_initWithErrorCode_deviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithErrorCode:deviceIdentifier:");
}

id objc_msgSend_initWithEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEvent:");
}

id objc_msgSend_initWithEventType_eventSubType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEventType:eventSubType:");
}

id objc_msgSend_initWithExplanation_target_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExplanation:target:attributes:");
}

id objc_msgSend_initWithExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExternalDevice:");
}

id objc_msgSend_initWithFadeDuration_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFadeDuration:error:");
}

id objc_msgSend_initWithFirst_second_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFirst:second:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithGameControllerProperties_controllerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGameControllerProperties:controllerID:");
}

id objc_msgSend_initWithGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupID:");
}

id objc_msgSend_initWithGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupSession:");
}

id objc_msgSend_initWithGroupSession_participant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupSession:participant:");
}

id objc_msgSend_initWithGroupSessionManager_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupSessionManager:delegate:");
}

id objc_msgSend_initWithGroupUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupUID:");
}

id objc_msgSend_initWithHandlerStatuses_sendError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandlerStatuses:sendError:");
}

id objc_msgSend_initWithHashedUserIdentityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHashedUserIdentityIdentifier:");
}

id objc_msgSend_initWithHiliteMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHiliteMode:");
}

id objc_msgSend_initWithID_data_device_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithID:data:device:service:");
}

id objc_msgSend_initWithIdentifier_hostInfo_isHosted_equivalentMediaIdentifier_isPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:hostInfo:isHosted:equivalentMediaIdentifier:isPlaceholder:");
}

id objc_msgSend_initWithIdentifier_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:identity:");
}

id objc_msgSend_initWithIdentifier_identity_connected_guest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:identity:connected:guest:");
}

id objc_msgSend_initWithIdentifier_identity_connected_guest_hidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:identity:connected:guest:hidden:");
}

id objc_msgSend_initWithIdentifier_identity_oobKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:identity:oobKeys:");
}

id objc_msgSend_initWithIdentifier_service_destinationPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:service:destinationPlayerPath:");
}

id objc_msgSend_initWithIdentifier_sourcePlayerPath_destinationPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:sourcePlayerPath:destinationPlayerPath:");
}

id objc_msgSend_initWithIdentifier_type_displayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:type:displayName:");
}

id objc_msgSend_initWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifiers:");
}

id objc_msgSend_initWithIdentityString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentityString:");
}

id objc_msgSend_initWithImageData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageData:");
}

id objc_msgSend_initWithImageData_height_width_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageData:height:width:");
}

id objc_msgSend_initWithInitiator_requestID_reason_userInitiated_originatingBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInitiator:requestID:reason:userInitiated:originatingBundleID:");
}

id objc_msgSend_initWithInputMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInputMode:");
}

id objc_msgSend_initWithInputStream_outputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInputStream:outputStream:");
}

id objc_msgSend_initWithInterval_name_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInterval:name:queue:block:");
}

id objc_msgSend_initWithInterval_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInterval:queue:block:");
}

id objc_msgSend_initWithInterval_repeats_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInterval:repeats:queue:block:");
}

id objc_msgSend_initWithInvitationData_sharedSecret_sessionIdentifier_equivalentMediaIdentifier_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInvitationData:sharedSecret:sessionIdentifier:equivalentMediaIdentifier:version:");
}

id objc_msgSend_initWithJoinMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithJoinMode:");
}

id objc_msgSend_initWithKey_ascending_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:ascending:selector:");
}

id objc_msgSend_initWithKey_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:data:");
}

id objc_msgSend_initWithKeyOptions_valueOptions_capacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyOptions:valueOptions:capacity:");
}

id objc_msgSend_initWithLastPlayingDate_devicePlaybackSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLastPlayingDate:devicePlaybackSessionID:");
}

id objc_msgSend_initWithLastSupportedMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLastSupportedMessageType:");
}

id objc_msgSend_initWithListenerEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithListenerEndpoint:");
}

id objc_msgSend_initWithListeningMode_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithListeningMode:outputDeviceUID:");
}

id objc_msgSend_initWithLocalEndpoint_activeSystemEndpoint_eligibleToShowRecommendationsOutsideApp_eligibleToShowDeltaBanners_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocalEndpoint:activeSystemEndpoint:eligibleToShowRecommendationsOutsideApp:eligibleToShowDeltaBanners:");
}

id objc_msgSend_initWithMRError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMRError:");
}

id objc_msgSend_initWithMRError_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMRError:description:");
}

id objc_msgSend_initWithMRError_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMRError:format:");
}

id objc_msgSend_initWithMRError_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMRError:userInfo:");
}

id objc_msgSend_initWithMaximumCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMaximumCapacity:");
}

id objc_msgSend_initWithMessage_connectionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMessage:connectionContext:");
}

id objc_msgSend_initWithMode_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMode:configuration:");
}

id objc_msgSend_initWithMode_features_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMode:features:");
}

id objc_msgSend_initWithMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMuted:");
}

id objc_msgSend_initWithMuted_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMuted:outputDeviceUID:");
}

id objc_msgSend_initWithMuted_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMuted:outputDeviceUID:details:");
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:");
}

id objc_msgSend_initWithName_fromMessage_withDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:fromMessage:withDelegate:");
}

id objc_msgSend_initWithName_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:playerPath:");
}

id objc_msgSend_initWithName_requestID_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:requestID:reason:");
}

id objc_msgSend_initWithName_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:timeout:");
}

id objc_msgSend_initWithNearbyGroup_identity_hostSigningKey_joinToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNearbyGroup:identity:hostSigningKey:joinToken:");
}

id objc_msgSend_initWithNearbyGroup_nearbyInvitation_identity_hostSigningKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNearbyGroup:nearbyInvitation:identity:hostSigningKey:");
}

id objc_msgSend_initWithNetServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNetServiceType:");
}

id objc_msgSend_initWithNotification_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotification:userInfo:");
}

id objc_msgSend_initWithNowPlayingServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNowPlayingServer:");
}

id objc_msgSend_initWithNowPlayingState_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNowPlayingState:encoding:");
}

id objc_msgSend_initWithNowPlayingUpdates_artworkUpdates_volumeUpdates_keyboardUpdates_outputDeviceUpdates_systemEndpointUpdates_subscribedPlayerPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNowPlayingUpdates:artworkUpdates:volumeUpdates:keyboardUpdates:outputDeviceUpdates:systemEndpointUpdates:subscribedPlayerPaths:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:");
}

id objc_msgSend_initWithOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:");
}

id objc_msgSend_initWithOrigin_bundleIdentifier_player_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:bundleIdentifier:player:");
}

id objc_msgSend_initWithOrigin_client_player_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:client:player:");
}

id objc_msgSend_initWithOrigin_destinationOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:destinationOrigin:");
}

id objc_msgSend_initWithOrigin_deviceInfo_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:deviceInfo:delegate:");
}

id objc_msgSend_initWithOrigin_deviceInfo_deviceInfoDataSource_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:deviceInfo:deviceInfoDataSource:delegate:");
}

id objc_msgSend_initWithOrigin_outputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:outputContext:");
}

id objc_msgSend_initWithOriginClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOriginClient:");
}

id objc_msgSend_initWithOutputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputContext:");
}

id objc_msgSend_initWithOutputContextCommunicationChannel_outputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputContextCommunicationChannel:outputContext:");
}

id objc_msgSend_initWithOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevice:");
}

id objc_msgSend_initWithOutputDevice_date_disableDuration_devicePlaybackSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevice:date:disableDuration:devicePlaybackSessionID:");
}

id objc_msgSend_initWithOutputDevice_groupID_connectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevice:groupID:connectionType:");
}

id objc_msgSend_initWithOutputDevice_proxyOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevice:proxyOutputDevice:");
}

id objc_msgSend_initWithOutputDeviceID_type_subType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceID:type:subType:");
}

id objc_msgSend_initWithOutputDeviceID_type_subType_clusterType_flattenedClusterLeafMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceID:type:subType:clusterType:flattenedClusterLeafMembers:");
}

id objc_msgSend_initWithOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUID:");
}

id objc_msgSend_initWithOutputDeviceUID_enabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUID:enabled:");
}

id objc_msgSend_initWithOutputDeviceUID_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUID:reason:");
}

id objc_msgSend_initWithOutputDeviceUID_type_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUID:type:reason:");
}

id objc_msgSend_initWithOutputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUIDs:");
}

id objc_msgSend_initWithOutputDeviceUIDs_outputDeviceGroupID_features_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUIDs:outputDeviceGroupID:features:");
}

id objc_msgSend_initWithOutputDeviceUIDs_outputDeviceGroupID_features_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUIDs:outputDeviceGroupID:features:details:");
}

id objc_msgSend_initWithOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevices:");
}

id objc_msgSend_initWithOutputDevices_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevices:configuration:");
}

id objc_msgSend_initWithOutputDevices_requestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevices:requestID:");
}

id objc_msgSend_initWithOwningClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOwningClient:");
}

id objc_msgSend_initWithPID_audioSessionID_mxSessionIDs_isEligible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPID:audioSessionID:mxSessionIDs:isEligible:");
}

id objc_msgSend_initWithPairingData_status_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPairingData:status:");
}

id objc_msgSend_initWithParentGroupID_isAirplayActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithParentGroupID:isAirplayActive:");
}

id objc_msgSend_initWithPid_bundleID_audioSessionID_audioFormat_channelCount_bestAvailableContent_isEligibleForSpatialization_isSpatialized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPid:bundleID:audioSessionID:audioFormat:channelCount:bestAvailableContent:isEligibleForSpatialization:isSpatialized:");
}

id objc_msgSend_initWithPlaybackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlaybackQueue:");
}

id objc_msgSend_initWithPlaybackSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlaybackSession:");
}

id objc_msgSend_initWithPlaybackSession_request_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlaybackSession:request:forPlayerPath:");
}

id objc_msgSend_initWithPlaybackState_date_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlaybackState:date:");
}

id objc_msgSend_initWithPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayerPath:");
}

id objc_msgSend_initWithPlayerPath_lastPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayerPath:lastPlayingDate:");
}

id objc_msgSend_initWithPlayerPath_participants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayerPath:participants:");
}

id objc_msgSend_initWithPrefixedURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrefixedURI:");
}

id objc_msgSend_initWithPrimaryBundleIdentifier_recommendationType_isASELocal_localOutputContextHasAirPlay_isSourceEndpointPlaying_isTargetEndpointPlaying_targetNowPlayingBundleIdentifier_targetEndpointContainsDiscoverableGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrimaryBundleIdentifier:recommendationType:isASELocal:localOutputContextHasAirPlay:isSourceEndpointPlaying:isTargetEndpointPlaying:targetNowPlayingBundleIdentifier:targetEndpointContainsDiscoverableGroupLeader:");
}

id objc_msgSend_initWithPrimaryOutputDevice_members_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrimaryOutputDevice:members:");
}

id objc_msgSend_initWithProcessIdentifier_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProcessIdentifier:bundleIdentifier:");
}

id objc_msgSend_initWithProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProperties:");
}

id objc_msgSend_initWithProtobuf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProtobuf:");
}

id objc_msgSend_initWithProtobufData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProtobufData:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRange:");
}

id objc_msgSend_initWithRecordingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordingState:");
}

id objc_msgSend_initWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:");
}

id objc_msgSend_initWithRequest_error_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:error:playerPath:");
}

id objc_msgSend_initWithRequest_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:forPlayerPath:");
}

id objc_msgSend_initWithRequest_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:playerPath:");
}

id objc_msgSend_initWithRequestDetails_type_outputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestDetails:type:outputDeviceUIDs:");
}

id objc_msgSend_initWithRequestDetails_type_outputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestDetails:type:outputDevices:");
}

id objc_msgSend_initWithRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestID:");
}

id objc_msgSend_initWithResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResponse:");
}

id objc_msgSend_initWithResult_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResult:format:");
}

id objc_msgSend_initWithResult_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResult:reason:");
}

id objc_msgSend_initWithRole_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRole:device:");
}

id objc_msgSend_initWithRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoute:");
}

id objc_msgSend_initWithRoute_inputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoute:inputType:");
}

id objc_msgSend_initWithRoute_inputType_responseCallback_cancelCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoute:inputType:responseCallback:cancelCallback:");
}

id objc_msgSend_initWithRoute_status_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoute:status:");
}

id objc_msgSend_initWithRouteType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRouteType:");
}

id objc_msgSend_initWithRouteType_displayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRouteType:displayName:");
}

id objc_msgSend_initWithRouteType_groupLeaderOutputDeviceID_isRemoteControl_outputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRouteType:groupLeaderOutputDeviceID:isRemoteControl:outputDevices:");
}

id objc_msgSend_initWithRouteUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRouteUID:");
}

id objc_msgSend_initWithRoutingContextUID_multipleBuiltInDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoutingContextUID:multipleBuiltInDevices:");
}

id objc_msgSend_initWithRoutingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoutingController:");
}

id objc_msgSend_initWithRoutingDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoutingDataSource:");
}

id objc_msgSend_initWithRoutingDataSource_hostedRoutingService_systemEndpointController_autoConnectionController_homeServer_avOutputDeviceAuthorizationSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoutingDataSource:hostedRoutingService:systemEndpointController:autoConnectionController:homeServer:avOutputDeviceAuthorizationSession:");
}

id objc_msgSend_initWithSceneProvidingProcess_configurationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSceneProvidingProcess:configurationIdentifier:");
}

id objc_msgSend_initWithService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:");
}

id objc_msgSend_initWithServiceName_viewControllerClassName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceName:viewControllerClassName:");
}

id objc_msgSend_initWithServiceToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceToken:");
}

id objc_msgSend_initWithServiceType_sourceOutputDeviceUID_sourceOutputDeviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceType:sourceOutputDeviceUID:sourceOutputDeviceName:");
}

id objc_msgSend_initWithSessionManager_eligibilityMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSessionManager:eligibilityMonitor:");
}

id objc_msgSend_initWithSource_destination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSource:destination:");
}

id objc_msgSend_initWithStartDate_endDate_maxEvents_lastN_reversed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartDate:endDate:maxEvents:lastN:reversed:");
}

id objc_msgSend_initWithStatusItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStatusItemIdentifier:");
}

id objc_msgSend_initWithStatusItemIdentifier_activityAttribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStatusItemIdentifier:activityAttribution:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithSystemEndpointController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSystemEndpointController:");
}

id objc_msgSend_initWithTargetQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTargetQueue:");
}

id objc_msgSend_initWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_initWithTimeout_interruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeout:interruptionHandler:");
}

id objc_msgSend_initWithTimeout_reason_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeout:reason:handler:");
}

id objc_msgSend_initWithTimeout_reason_queue_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeout:reason:queue:handler:");
}

id objc_msgSend_initWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:");
}

id objc_msgSend_initWithTransport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransport:");
}

id objc_msgSend_initWithType_pid_bundleID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:pid:bundleID:name:");
}

id objc_msgSend_initWithType_pid_bundleID_name_invalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:pid:bundleID:name:invalidationHandler:");
}

id objc_msgSend_initWithURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURI:");
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUTF8String:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUnderlyingCodableMessage_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnderlyingCodableMessage:error:");
}

id objc_msgSend_initWithUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUniqueIdentifier:");
}

id objc_msgSend_initWithUnresolvedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnresolvedPlayerPath:");
}

id objc_msgSend_initWithUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserState:");
}

id objc_msgSend_initWithVersion_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVersion:data:");
}

id objc_msgSend_initWithVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVolume:");
}

id objc_msgSend_initWithVolume_endpointUID_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVolume:endpointUID:outputDeviceUID:");
}

id objc_msgSend_initWithVolume_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVolume:outputDeviceUID:details:");
}

id objc_msgSend_initWithW_h_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithW:h:");
}

id objc_msgSend_initWithWithSendError_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWithSendError:description:");
}

id objc_msgSend_initWithXPCConnection_label_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithXPCConnection:label:");
}

id objc_msgSend_initialStateFromSession_token_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialStateFromSession:token:");
}

id objc_msgSend_initializeBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 initializeBundleIdentifier];
}

id objc_msgSend_initializeDestinationOriginWithSourceOriginData(void *a1, const char *a2, ...)
{
  return _[a1 initializeDestinationOriginWithSourceOriginData];
}

id objc_msgSend_initializeDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 initializeDisplayName];
}

id objc_msgSend_initializeObserversAndState(void *a1, const char *a2, ...)
{
  return _[a1 initializeObserversAndState];
}

id objc_msgSend_initializeServer(void *a1, const char *a2, ...)
{
  return _[a1 initializeServer];
}

id objc_msgSend_initializeSessionIfNeededWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeSessionIfNeededWithCompletion:");
}

id objc_msgSend_initiator(void *a1, const char *a2, ...)
{
  return _[a1 initiator];
}

id objc_msgSend_inputType(void *a1, const char *a2, ...)
{
  return _[a1 inputType];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_installInvalidationObserversAndCheckForPostActivationInvalidations(void *a1, const char *a2, ...)
{
  return _[a1 installInvalidationObserversAndCheckForPostActivationInvalidations];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interfaceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithIdentifier:");
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_internalClients(void *a1, const char *a2, ...)
{
  return _[a1 internalClients];
}

id objc_msgSend_interruptBestStreamIfNecessaryToActivateStreamWithPlayerPath_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interruptBestStreamIfNecessaryToActivateStreamWithPlayerPath:reason:completion:");
}

id objc_msgSend_interruptions(void *a1, const char *a2, ...)
{
  return _[a1 interruptions];
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectSet:");
}

id objc_msgSend_intersectsSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectsSet:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate:");
}

id objc_msgSend_invalidateCriticalSectionAssertionForRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateCriticalSectionAssertionForRequestID:");
}

id objc_msgSend_invalidateInDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateInDuration:");
}

id objc_msgSend_invalidatePlaybackTimeoutTimerWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidatePlaybackTimeoutTimerWithReason:");
}

id objc_msgSend_invalidateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateWithError:");
}

id objc_msgSend_invalidateWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateWithReason:");
}

id objc_msgSend_invalidated(void *a1, const char *a2, ...)
{
  return _[a1 invalidated];
}

id objc_msgSend_invalidationHandler(void *a1, const char *a2, ...)
{
  return _[a1 invalidationHandler];
}

id objc_msgSend_invitationData(void *a1, const char *a2, ...)
{
  return _[a1 invitationData];
}

id objc_msgSend_invokeWithTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeWithTarget:");
}

id objc_msgSend_irCandidateFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "irCandidateFor:");
}

id objc_msgSend_isAVRCPCommand(void *a1, const char *a2, ...)
{
  return _[a1 isAVRCPCommand];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isActiveStream(void *a1, const char *a2, ...)
{
  return _[a1 isActiveStream];
}

id objc_msgSend_isActivityActive(void *a1, const char *a2, ...)
{
  return _[a1 isActivityActive];
}

id objc_msgSend_isAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 isAdvertising];
}

id objc_msgSend_isAirPlayActive(void *a1, const char *a2, ...)
{
  return _[a1 isAirPlayActive];
}

id objc_msgSend_isAirPlayReceiverSessionActive(void *a1, const char *a2, ...)
{
  return _[a1 isAirPlayReceiverSessionActive];
}

id objc_msgSend_isAllowedAccessToDataFromPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAllowedAccessToDataFromPlayerPath:");
}

id objc_msgSend_isAllowedToSendCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAllowedToSendCommand:");
}

id objc_msgSend_isAllowedToSendMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAllowedToSendMessageType:");
}

id objc_msgSend_isAsserting(void *a1, const char *a2, ...)
{
  return _[a1 isAsserting];
}

id objc_msgSend_isAuxiliary(void *a1, const char *a2, ...)
{
  return _[a1 isAuxiliary];
}

id objc_msgSend_isAwareOfCluster_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAwareOfCluster:");
}

id objc_msgSend_isB238Device(void *a1, const char *a2, ...)
{
  return _[a1 isB238Device];
}

id objc_msgSend_isB620Device(void *a1, const char *a2, ...)
{
  return _[a1 isB620Device];
}

id objc_msgSend_isBackgroundActivityActive(void *a1, const char *a2, ...)
{
  return _[a1 isBackgroundActivityActive];
}

id objc_msgSend_isCallToAction(void *a1, const char *a2, ...)
{
  return _[a1 isCallToAction];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 isCarPlay];
}

id objc_msgSend_isClusterLeader(void *a1, const char *a2, ...)
{
  return _[a1 isClusterLeader];
}

id objc_msgSend_isCompanion(void *a1, const char *a2, ...)
{
  return _[a1 isCompanion];
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return _[a1 isConnected];
}

id objc_msgSend_isConservativeFiltered(void *a1, const char *a2, ...)
{
  return _[a1 isConservativeFiltered];
}

id objc_msgSend_isConservativelyFiltered(void *a1, const char *a2, ...)
{
  return _[a1 isConservativelyFiltered];
}

id objc_msgSend_isContextSensitive(void *a1, const char *a2, ...)
{
  return _[a1 isContextSensitive];
}

id objc_msgSend_isCrash(void *a1, const char *a2, ...)
{
  return _[a1 isCrash];
}

id objc_msgSend_isDestinationLocal(void *a1, const char *a2, ...)
{
  return _[a1 isDestinationLocal];
}

id objc_msgSend_isDirectConnectedToOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDirectConnectedToOutputDeviceUID:");
}

id objc_msgSend_isEligible(void *a1, const char *a2, ...)
{
  return _[a1 isEligible];
}

id objc_msgSend_isEligibleForCallToAction(void *a1, const char *a2, ...)
{
  return _[a1 isEligibleForCallToAction];
}

id objc_msgSend_isEligibleForHostingGroupSessionExcludingAcknowledgements(void *a1, const char *a2, ...)
{
  return _[a1 isEligibleForHostingGroupSessionExcludingAcknowledgements];
}

id objc_msgSend_isEligibleForSpatialization(void *a1, const char *a2, ...)
{
  return _[a1 isEligibleForSpatialization];
}

id objc_msgSend_isEntitledFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEntitledFor:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToData:");
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDate:");
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDictionary:");
}

id objc_msgSend_isEqualToOrderedSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToOrderedSet:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isEqualToUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToUserState:");
}

id objc_msgSend_isFirstLaunchAfterBoot(void *a1, const char *a2, ...)
{
  return _[a1 isFirstLaunchAfterBoot];
}

id objc_msgSend_isForegrounded(void *a1, const char *a2, ...)
{
  return _[a1 isForegrounded];
}

id objc_msgSend_isFullSubscriber(void *a1, const char *a2, ...)
{
  return _[a1 isFullSubscriber];
}

id objc_msgSend_isGizmo(void *a1, const char *a2, ...)
{
  return _[a1 isGizmo];
}

id objc_msgSend_isGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 isGroupLeader];
}

id objc_msgSend_isGroupable(void *a1, const char *a2, ...)
{
  return _[a1 isGroupable];
}

id objc_msgSend_isHomepodDemoApplication(void *a1, const char *a2, ...)
{
  return _[a1 isHomepodDemoApplication];
}

id objc_msgSend_isHosted(void *a1, const char *a2, ...)
{
  return _[a1 isHosted];
}

id objc_msgSend_isInCriticalSection(void *a1, const char *a2, ...)
{
  return _[a1 isInCriticalSection];
}

id objc_msgSend_isInformational(void *a1, const char *a2, ...)
{
  return _[a1 isInformational];
}

id objc_msgSend_isIntegratedDisplay(void *a1, const char *a2, ...)
{
  return _[a1 isIntegratedDisplay];
}

id objc_msgSend_isJetsam(void *a1, const char *a2, ...)
{
  return _[a1 isJetsam];
}

id objc_msgSend_isJoiningSession(void *a1, const char *a2, ...)
{
  return _[a1 isJoiningSession];
}

id objc_msgSend_isLegacyNowPlayingInfoRequest(void *a1, const char *a2, ...)
{
  return _[a1 isLegacyNowPlayingInfoRequest];
}

id objc_msgSend_isLocal(void *a1, const char *a2, ...)
{
  return _[a1 isLocal];
}

id objc_msgSend_isLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 isLocalDevice];
}

id objc_msgSend_isLocalEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 isLocalEndpoint];
}

id objc_msgSend_isLocalOrigin(void *a1, const char *a2, ...)
{
  return _[a1 isLocalOrigin];
}

id objc_msgSend_isLocallyHosted(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyHosted];
}

id objc_msgSend_isLockScreenControl(void *a1, const char *a2, ...)
{
  return _[a1 isLockScreenControl];
}

id objc_msgSend_isLockScreenRecommendationActive(void *a1, const char *a2, ...)
{
  return _[a1 isLockScreenRecommendationActive];
}

id objc_msgSend_isLockScreenWidgetActive(void *a1, const char *a2, ...)
{
  return _[a1 isLockScreenWidgetActive];
}

id objc_msgSend_isLockScreenWidgetVisible(void *a1, const char *a2, ...)
{
  return _[a1 isLockScreenWidgetVisible];
}

id objc_msgSend_isLowPowerMode(void *a1, const char *a2, ...)
{
  return _[a1 isLowPowerMode];
}

id objc_msgSend_isManateeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isManateeEnabled];
}

id objc_msgSend_isMediaRemoteDaemon(void *a1, const char *a2, ...)
{
  return _[a1 isMediaRemoteDaemon];
}

id objc_msgSend_isMemberOfActiveSystemEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 isMemberOfActiveSystemEndpoint];
}

id objc_msgSend_isMinor(void *a1, const char *a2, ...)
{
  return _[a1 isMinor];
}

id objc_msgSend_isMinorAccountHolder(void *a1, const char *a2, ...)
{
  return _[a1 isMinorAccountHolder];
}

id objc_msgSend_isMultiplayerAware(void *a1, const char *a2, ...)
{
  return _[a1 isMultiplayerAware];
}

id objc_msgSend_isMultiplayerHost(void *a1, const char *a2, ...)
{
  return _[a1 isMultiplayerHost];
}

id objc_msgSend_isMusicAppInstalled(void *a1, const char *a2, ...)
{
  return _[a1 isMusicAppInstalled];
}

id objc_msgSend_isMuted(void *a1, const char *a2, ...)
{
  return _[a1 isMuted];
}

id objc_msgSend_isNavigational(void *a1, const char *a2, ...)
{
  return _[a1 isNavigational];
}

id objc_msgSend_isOutputContextInUse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOutputContextInUse:");
}

id objc_msgSend_isPairedDeviceSync(void *a1, const char *a2, ...)
{
  return _[a1 isPairedDeviceSync];
}

id objc_msgSend_isPairingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isPairingAllowed];
}

id objc_msgSend_isPersonalRoute(void *a1, const char *a2, ...)
{
  return _[a1 isPersonalRoute];
}

id objc_msgSend_isPicked(void *a1, const char *a2, ...)
{
  return _[a1 isPicked];
}

id objc_msgSend_isPictureInPictureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isPictureInPictureEnabled];
}

id objc_msgSend_isPlaying(void *a1, const char *a2, ...)
{
  return _[a1 isPlaying];
}

id objc_msgSend_isPresentingBackgroundActivity(void *a1, const char *a2, ...)
{
  return _[a1 isPresentingBackgroundActivity];
}

id objc_msgSend_isPresentingBanner(void *a1, const char *a2, ...)
{
  return _[a1 isPresentingBanner];
}

id objc_msgSend_isPresentingConnectedPill(void *a1, const char *a2, ...)
{
  return _[a1 isPresentingConnectedPill];
}

id objc_msgSend_isPresentingProximityCard(void *a1, const char *a2, ...)
{
  return _[a1 isPresentingProximityCard];
}

id objc_msgSend_isPrimaryLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 isPrimaryLocalDevice];
}

id objc_msgSend_isProxyAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 isProxyAdvertising];
}

id objc_msgSend_isProxyGroupPlayer(void *a1, const char *a2, ...)
{
  return _[a1 isProxyGroupPlayer];
}

id objc_msgSend_isQuerying(void *a1, const char *a2, ...)
{
  return _[a1 isQuerying];
}

id objc_msgSend_isRemoteControllable(void *a1, const char *a2, ...)
{
  return _[a1 isRemoteControllable];
}

id objc_msgSend_isRemoteEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 isRemoteEndpoint];
}

id objc_msgSend_isResolved(void *a1, const char *a2, ...)
{
  return _[a1 isResolved];
}

id objc_msgSend_isRoutePlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRoutePlaying:");
}

id objc_msgSend_isScreening(void *a1, const char *a2, ...)
{
  return _[a1 isScreening];
}

id objc_msgSend_isSilentPrimary(void *a1, const char *a2, ...)
{
  return _[a1 isSilentPrimary];
}

id objc_msgSend_isSmartDevice(void *a1, const char *a2, ...)
{
  return _[a1 isSmartDevice];
}

id objc_msgSend_isSpatialized(void *a1, const char *a2, ...)
{
  return _[a1 isSpatialized];
}

id objc_msgSend_isSpeakerRoute(void *a1, const char *a2, ...)
{
  return _[a1 isSpeakerRoute];
}

id objc_msgSend_isStartingNowPlayingSession(void *a1, const char *a2, ...)
{
  return _[a1 isStartingNowPlayingSession];
}

id objc_msgSend_isStartingSession(void *a1, const char *a2, ...)
{
  return _[a1 isStartingSession];
}

id objc_msgSend_isSubsetOfSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubsetOfSet:");
}

id objc_msgSend_isSupported(void *a1, const char *a2, ...)
{
  return _[a1 isSupported];
}

id objc_msgSend_isSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSupported:");
}

id objc_msgSend_isSystemMediaApplication(void *a1, const char *a2, ...)
{
  return _[a1 isSystemMediaApplication];
}

id objc_msgSend_isSystemPodcastsApplication(void *a1, const char *a2, ...)
{
  return _[a1 isSystemPodcastsApplication];
}

id objc_msgSend_isThrottled(void *a1, const char *a2, ...)
{
  return _[a1 isThrottled];
}

id objc_msgSend_isUIApplicationElement(void *a1, const char *a2, ...)
{
  return _[a1 isUIApplicationElement];
}

id objc_msgSend_isUpdatingLowPowerMode(void *a1, const char *a2, ...)
{
  return _[a1 isUpdatingLowPowerMode];
}

id objc_msgSend_isUsingJSONProtocol(void *a1, const char *a2, ...)
{
  return _[a1 isUsingJSONProtocol];
}

id objc_msgSend_isUsingWifi(void *a1, const char *a2, ...)
{
  return _[a1 isUsingWifi];
}

id objc_msgSend_isUsingWiredEthernet(void *a1, const char *a2, ...)
{
  return _[a1 isUsingWiredEthernet];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_isVideoApp(void *a1, const char *a2, ...)
{
  return _[a1 isVideoApp];
}

id objc_msgSend_isWaking(void *a1, const char *a2, ...)
{
  return _[a1 isWaking];
}

id objc_msgSend_joinGroupSessionViaEquivalentWHAEndpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinGroupSessionViaEquivalentWHAEndpoint:completion:");
}

id objc_msgSend_joinGroupSessionWithNearbyGroup_hostSigningKey_joinToken_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinGroupSessionWithNearbyGroup:hostSigningKey:joinToken:completion:");
}

id objc_msgSend_joinGroupSessionWithToken_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinGroupSessionWithToken:completion:");
}

id objc_msgSend_joinSessionWithNearbyGroup_asUser_hostSigningKey_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinSessionWithNearbyGroup:asUser:hostSigningKey:delegate:");
}

id objc_msgSend_joinToken(void *a1, const char *a2, ...)
{
  return _[a1 joinToken];
}

id objc_msgSend_joinURLString(void *a1, const char *a2, ...)
{
  return _[a1 joinURLString];
}

id objc_msgSend_joiningStateForEligibilityStatus_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joiningStateForEligibilityStatus:reason:");
}

id objc_msgSend_keepAlive(void *a1, const char *a2, ...)
{
  return _[a1 keepAlive];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 keyEnumerator];
}

id objc_msgSend_keyboardUpdates(void *a1, const char *a2, ...)
{
  return _[a1 keyboardUpdates];
}

id objc_msgSend_knownDevices(void *a1, const char *a2, ...)
{
  return _[a1 knownDevices];
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _[a1 label];
}

id objc_msgSend_lastASEEvent(void *a1, const char *a2, ...)
{
  return _[a1 lastASEEvent];
}

id objc_msgSend_lastBootUUID(void *a1, const char *a2, ...)
{
  return _[a1 lastBootUUID];
}

id objc_msgSend_lastConnectionError(void *a1, const char *a2, ...)
{
  return _[a1 lastConnectionError];
}

id objc_msgSend_lastDonatedPickerChoice(void *a1, const char *a2, ...)
{
  return _[a1 lastDonatedPickerChoice];
}

id objc_msgSend_lastFetchAttemptToken(void *a1, const char *a2, ...)
{
  return _[a1 lastFetchAttemptToken];
}

id objc_msgSend_lastKnownBluetoothAddress(void *a1, const char *a2, ...)
{
  return _[a1 lastKnownBluetoothAddress];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastPlaybackStates(void *a1, const char *a2, ...)
{
  return _[a1 lastPlaybackStates];
}

id objc_msgSend_lastPlayingDate(void *a1, const char *a2, ...)
{
  return _[a1 lastPlayingDate];
}

id objc_msgSend_lastPlayingDateForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPlayingDateForPlayerPath:");
}

id objc_msgSend_lastPlayingDeviceThresholdInterval(void *a1, const char *a2, ...)
{
  return _[a1 lastPlayingDeviceThresholdInterval];
}

id objc_msgSend_lastReportedClientIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 lastReportedClientIdentifiers];
}

id objc_msgSend_lastSessionEventDate(void *a1, const char *a2, ...)
{
  return _[a1 lastSessionEventDate];
}

id objc_msgSend_lastSupportedMessageType(void *a1, const char *a2, ...)
{
  return _[a1 lastSupportedMessageType];
}

id objc_msgSend_lastUnusedAutoRoute(void *a1, const char *a2, ...)
{
  return _[a1 lastUnusedAutoRoute];
}

id objc_msgSend_lastUnusedAutoRouteBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 lastUnusedAutoRouteBundleIdentifier];
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_launch(void *a1, const char *a2, ...)
{
  return _[a1 launch];
}

id objc_msgSend_launchApplicationTimeoutInterval(void *a1, const char *a2, ...)
{
  return _[a1 launchApplicationTimeoutInterval];
}

id objc_msgSend_layoutMonitor_didUpdateDisplayLayout_withContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutMonitor:didUpdateDisplayLayout:withContext:");
}

id objc_msgSend_layoutRole(void *a1, const char *a2, ...)
{
  return _[a1 layoutRole];
}

id objc_msgSend_leader(void *a1, const char *a2, ...)
{
  return _[a1 leader];
}

id objc_msgSend_leaderDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 leaderDeviceInfo];
}

id objc_msgSend_leaderParticipant(void *a1, const char *a2, ...)
{
  return _[a1 leaderParticipant];
}

id objc_msgSend_leaveRemoteControlGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveRemoteControlGroupSession:");
}

id objc_msgSend_leaveSessionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 leaveSessionIfNeeded];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lifetimeController(void *a1, const char *a2, ...)
{
  return _[a1 lifetimeController];
}

id objc_msgSend_listener(void *a1, const char *a2, ...)
{
  return _[a1 listener];
}

id objc_msgSend_listenerForSessionWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listenerForSessionWithIdentifier:");
}

id objc_msgSend_listeningMode(void *a1, const char *a2, ...)
{
  return _[a1 listeningMode];
}

id objc_msgSend_loadFromStorage(void *a1, const char *a2, ...)
{
  return _[a1 loadFromStorage];
}

id objc_msgSend_loadLocalIdentities(void *a1, const char *a2, ...)
{
  return _[a1 loadLocalIdentities];
}

id objc_msgSend_loadMediaServerState(void *a1, const char *a2, ...)
{
  return _[a1 loadMediaServerState];
}

id objc_msgSend_loadMediaServerStateWithController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadMediaServerStateWithController:");
}

id objc_msgSend_localActiveClientBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localActiveClientBundleIdentifier];
}

id objc_msgSend_localActiveIdentity(void *a1, const char *a2, ...)
{
  return _[a1 localActiveIdentity];
}

id objc_msgSend_localActivePlayerClient(void *a1, const char *a2, ...)
{
  return _[a1 localActivePlayerClient];
}

id objc_msgSend_localActivePlayerIsPlaying(void *a1, const char *a2, ...)
{
  return _[a1 localActivePlayerIsPlaying];
}

id objc_msgSend_localActivePlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 localActivePlayerPath];
}

id objc_msgSend_localActiveUserState(void *a1, const char *a2, ...)
{
  return _[a1 localActiveUserState];
}

id objc_msgSend_localClient(void *a1, const char *a2, ...)
{
  return _[a1 localClient];
}

id objc_msgSend_localDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceInfo];
}

id objc_msgSend_localDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceUID];
}

id objc_msgSend_localEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 localEndpoint];
}

id objc_msgSend_localEndpointConnection(void *a1, const char *a2, ...)
{
  return _[a1 localEndpointConnection];
}

id objc_msgSend_localIdentity(void *a1, const char *a2, ...)
{
  return _[a1 localIdentity];
}

id objc_msgSend_localIdentityMap(void *a1, const char *a2, ...)
{
  return _[a1 localIdentityMap];
}

id objc_msgSend_localLastPlayingDate(void *a1, const char *a2, ...)
{
  return _[a1 localLastPlayingDate];
}

id objc_msgSend_localMusicIdentity(void *a1, const char *a2, ...)
{
  return _[a1 localMusicIdentity];
}

id objc_msgSend_localNowPlayingClient(void *a1, const char *a2, ...)
{
  return _[a1 localNowPlayingClient];
}

id objc_msgSend_localNowPlayingController(void *a1, const char *a2, ...)
{
  return _[a1 localNowPlayingController];
}

id objc_msgSend_localOrigin(void *a1, const char *a2, ...)
{
  return _[a1 localOrigin];
}

id objc_msgSend_localOriginClient(void *a1, const char *a2, ...)
{
  return _[a1 localOriginClient];
}

id objc_msgSend_localOutputContextHasDeviceOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localOutputContextHasDeviceOfType:");
}

id objc_msgSend_localParticipant(void *a1, const char *a2, ...)
{
  return _[a1 localParticipant];
}

id objc_msgSend_localPlaybackState(void *a1, const char *a2, ...)
{
  return _[a1 localPlaybackState];
}

id objc_msgSend_localPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 localPlayerPath];
}

id objc_msgSend_localPlayersForXpcClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localPlayersForXpcClient:");
}

id objc_msgSend_localRouteController(void *a1, const char *a2, ...)
{
  return _[a1 localRouteController];
}

id objc_msgSend_localSystemEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 localSystemEndpoint];
}

id objc_msgSend_localUserIdentities(void *a1, const char *a2, ...)
{
  return _[a1 localUserIdentities];
}

id objc_msgSend_localUserStates(void *a1, const char *a2, ...)
{
  return _[a1 localUserStates];
}

id objc_msgSend_localizeDestinationOrigin_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizeDestinationOrigin:completion:");
}

id objc_msgSend_localizeDestinationPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizeDestinationPlayerPath:completion:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return _[a1 localizedFailureReason];
}

id objc_msgSend_localizedModelName(void *a1, const char *a2, ...)
{
  return _[a1 localizedModelName];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedSessionName(void *a1, const char *a2, ...)
{
  return _[a1 localizedSessionName];
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return _[a1 lock];
}

id objc_msgSend_lockScreenContentControllerStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockScreenContentControllerStateDidChange:");
}

id objc_msgSend_lockScreenController(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenController];
}

id objc_msgSend_lockScreenForegrounded(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenForegrounded];
}

id objc_msgSend_lockScreenPlatterActive(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenPlatterActive];
}

id objc_msgSend_lockScreenPlatterHasContent(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenPlatterHasContent];
}

id objc_msgSend_lockScreenRoutingController(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenRoutingController];
}

id objc_msgSend_lockScreenUIControllerWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockScreenUIControllerWithDelegate:");
}

id objc_msgSend_lockScreenVisible(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenVisible];
}

id objc_msgSend_logEvent_withInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEvent:withInfo:");
}

id objc_msgSend_logMessage_label_deviceInfo_protocolMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logMessage:label:deviceInfo:protocolMessage:");
}

id objc_msgSend_logOutputDevicesChanged_oldOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logOutputDevicesChanged:oldOutputDevices:");
}

id objc_msgSend_logicalDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 logicalDeviceID];
}

id objc_msgSend_logicalOutputDeviceCount(void *a1, const char *a2, ...)
{
  return _[a1 logicalOutputDeviceCount];
}

id objc_msgSend_loginID(void *a1, const char *a2, ...)
{
  return _[a1 loginID];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_lowPowerDeferralTimer(void *a1, const char *a2, ...)
{
  return _[a1 lowPowerDeferralTimer];
}

id objc_msgSend_lowPowerError(void *a1, const char *a2, ...)
{
  return _[a1 lowPowerError];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_maintainReason(void *a1, const char *a2, ...)
{
  return _[a1 maintainReason];
}

id objc_msgSend_makeControllerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeControllerWithIdentifier:");
}

id objc_msgSend_makeEndpointWithOutputDeviceUIDs_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeEndpointWithOutputDeviceUIDs:options:");
}

id objc_msgSend_makeEndpointWithOutputDevices_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeEndpointWithOutputDevices:options:");
}

id objc_msgSend_makeTransientExternalDeviceToOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeTransientExternalDeviceToOutputDevice:");
}

id objc_msgSend_managedConfigurationDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 managedConfigurationDeviceIdentifier];
}

id objc_msgSend_manager_activeSessionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:activeSessionDidChange:");
}

id objc_msgSend_manager_didEndHostedGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:didEndHostedGroupSession:");
}

id objc_msgSend_manager_didJoinRemoteGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:didJoinRemoteGroupSession:");
}

id objc_msgSend_manager_didLeaveRemoteGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:didLeaveRemoteGroupSession:");
}

id objc_msgSend_manager_didStartHostedGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:didStartHostedGroupSession:");
}

id objc_msgSend_manager_discoveredSessionsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:discoveredSessionsDidChange:");
}

id objc_msgSend_manateeAvailable(void *a1, const char *a2, ...)
{
  return _[a1 manateeAvailable];
}

id objc_msgSend_markAsUsed(void *a1, const char *a2, ...)
{
  return _[a1 markAsUsed];
}

id objc_msgSend_markParticipantAsGuestIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markParticipantAsGuestIfNeeded:");
}

id objc_msgSend_match_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "match:");
}

id objc_msgSend_matchesUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchesUniqueIdentifier:");
}

id objc_msgSend_maxStreamCapacity(void *a1, const char *a2, ...)
{
  return _[a1 maxStreamCapacity];
}

id objc_msgSend_maxTransactionMemorySize(void *a1, const char *a2, ...)
{
  return _[a1 maxTransactionMemorySize];
}

id objc_msgSend_maybeCommitLocalDeviceWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maybeCommitLocalDeviceWithReason:");
}

id objc_msgSend_maybePostDistributedNotifications(void *a1, const char *a2, ...)
{
  return _[a1 maybePostDistributedNotifications];
}

id objc_msgSend_mediaAccountHostingState(void *a1, const char *a2, ...)
{
  return _[a1 mediaAccountHostingState];
}

id objc_msgSend_mediaAccountJoiningState(void *a1, const char *a2, ...)
{
  return _[a1 mediaAccountJoiningState];
}

id objc_msgSend_mediaActivityManager(void *a1, const char *a2, ...)
{
  return _[a1 mediaActivityManager];
}

id objc_msgSend_mediaApplicationsInFocus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaApplicationsInFocus:");
}

id objc_msgSend_mediaBundlesInFocus(void *a1, const char *a2, ...)
{
  return _[a1 mediaBundlesInFocus];
}

id objc_msgSend_mediaRecentlyPlayedInterval(void *a1, const char *a2, ...)
{
  return _[a1 mediaRecentlyPlayedInterval];
}

id objc_msgSend_mediaRouteEventForType_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaRouteEventForType:endpoint:");
}

id objc_msgSend_mediaRouteID(void *a1, const char *a2, ...)
{
  return _[a1 mediaRouteID];
}

id objc_msgSend_mediaRouteIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mediaRouteIdentifier];
}

id objc_msgSend_mediaServerController(void *a1, const char *a2, ...)
{
  return _[a1 mediaServerController];
}

id objc_msgSend_mediaSuggestionDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 mediaSuggestionDeviceID];
}

id objc_msgSend_mediaSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaSuggestions:");
}

id objc_msgSend_mediaType(void *a1, const char *a2, ...)
{
  return _[a1 mediaType];
}

id objc_msgSend_mediaUserStates(void *a1, const char *a2, ...)
{
  return _[a1 mediaUserStates];
}

id objc_msgSend_members(void *a1, const char *a2, ...)
{
  return _[a1 members];
}

id objc_msgSend_mergeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFrom:");
}

id objc_msgSend_mergingVolumeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergingVolumeFrom:");
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _[a1 message];
}

id objc_msgSend_messageHandler(void *a1, const char *a2, ...)
{
  return _[a1 messageHandler];
}

id objc_msgSend_messageProxy(void *a1, const char *a2, ...)
{
  return _[a1 messageProxy];
}

id objc_msgSend_messageQueue(void *a1, const char *a2, ...)
{
  return _[a1 messageQueue];
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _[a1 metadata];
}

id objc_msgSend_migrateToEndpointOrModifyTopology_migrationRequest_topologyModificationRequest_withReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrateToEndpointOrModifyTopology:migrationRequest:topologyModificationRequest:withReplyQueue:completion:");
}

id objc_msgSend_minimalReadableDescription(void *a1, const char *a2, ...)
{
  return _[a1 minimalReadableDescription];
}

id objc_msgSend_minimumSupportedHangdogApplicationVersion(void *a1, const char *a2, ...)
{
  return _[a1 minimumSupportedHangdogApplicationVersion];
}

id objc_msgSend_minimumSupportedProtocolVersion(void *a1, const char *a2, ...)
{
  return _[a1 minimumSupportedProtocolVersion];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return _[a1 mode];
}

id objc_msgSend_modelID(void *a1, const char *a2, ...)
{
  return _[a1 modelID];
}

id objc_msgSend_modelIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 modelIdentifier];
}

id objc_msgSend_modelName(void *a1, const char *a2, ...)
{
  return _[a1 modelName];
}

id objc_msgSend_modifyOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 modifyOutputContext];
}

id objc_msgSend_modifyTopologyWithRequest_withReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modifyTopologyWithRequest:withReplyQueue:completion:");
}

id objc_msgSend_modifyWithOutputContext_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modifyWithOutputContext:queue:completion:");
}

id objc_msgSend_monitorForDeath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorForDeath:");
}

id objc_msgSend_monitorWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorWithConfiguration:");
}

id objc_msgSend_mostRecentEvent(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentEvent];
}

id objc_msgSend_mostRecentEventReason(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentEventReason];
}

id objc_msgSend_mostRecentPlayers(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentPlayers];
}

id objc_msgSend_mostRecentSelectionReason(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentSelectionReason];
}

id objc_msgSend_mrRelayRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mrRelayRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_mr_activeGroupSessionAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_activeGroupSessionAccount");
}

id objc_msgSend_mr_all_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_all:");
}

id objc_msgSend_mr_allAirPlayDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_allAirPlayDevices");
}

id objc_msgSend_mr_allOutputDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_allOutputDevices");
}

id objc_msgSend_mr_any_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_any:");
}

id objc_msgSend_mr_compactMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_compactMap:");
}

id objc_msgSend_mr_containsVideoOutputDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_containsVideoOutputDevice");
}

id objc_msgSend_mr_deviceInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_deviceInfo");
}

id objc_msgSend_mr_errorByEnvelopingWithMRError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_errorByEnvelopingWithMRError:");
}

id objc_msgSend_mr_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_filter:");
}

id objc_msgSend_mr_first_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_first:");
}

id objc_msgSend_mr_formattedDebugDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_formattedDebugDescription");
}

id objc_msgSend_mr_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_map:");
}

id objc_msgSend_mr_origin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_origin");
}

id objc_msgSend_mr_previousDeviceInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_previousDeviceInfo");
}

id objc_msgSend_mr_redactClusterMembers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_redactClusterMembers");
}

id objc_msgSend_mr_sharedGroupSessionService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_sharedGroupSessionService");
}

id objc_msgSend_mr_sharedGroupSessionServiceName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_sharedGroupSessionServiceName");
}

id objc_msgSend_mr_sharedIDSService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_sharedIDSService");
}

id objc_msgSend_msv_compactMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_compactMap:");
}

id objc_msgSend_msv_errorWithDomain_code_debugDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_errorWithDomain:code:debugDescription:");
}

id objc_msgSend_msv_errorWithDomain_code_underlyingError_debugDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_errorWithDomain:code:underlyingError:debugDescription:");
}

id objc_msgSend_msv_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_filter:");
}

id objc_msgSend_msv_firstWhere_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_firstWhere:");
}

id objc_msgSend_msv_flatMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_flatMap:");
}

id objc_msgSend_msv_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_map:");
}

id objc_msgSend_msv_suffixFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_suffixFromIndex:");
}

id objc_msgSend_multipleBuiltInDevices(void *a1, const char *a2, ...)
{
  return _[a1 multipleBuiltInDevices];
}

id objc_msgSend_music(void *a1, const char *a2, ...)
{
  return _[a1 music];
}

id objc_msgSend_musicApplicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 musicApplicationBundleIdentifier];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_muteOutputDeviceVolume_outputDevice_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteOutputDeviceVolume:outputDevice:details:queue:completion:");
}

id objc_msgSend_muteOutputDeviceVolume_outputDeviceUID_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteOutputDeviceVolume:outputDeviceUID:details:queue:completion:");
}

id objc_msgSend_muteUntilFinished(void *a1, const char *a2, ...)
{
  return _[a1 muteUntilFinished];
}

id objc_msgSend_muteVolume_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteVolume:outputDeviceUID:details:");
}

id objc_msgSend_mxSessionIDs(void *a1, const char *a2, ...)
{
  return _[a1 mxSessionIDs];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nativeOutputDevice(void *a1, const char *a2, ...)
{
  return _[a1 nativeOutputDevice];
}

id objc_msgSend_nearbyDeviceIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 nearbyDeviceIdentifiers];
}

id objc_msgSend_nearbyDevices(void *a1, const char *a2, ...)
{
  return _[a1 nearbyDevices];
}

id objc_msgSend_nearbyDevicesIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 nearbyDevicesIdentifiers];
}

id objc_msgSend_nearbyGroup(void *a1, const char *a2, ...)
{
  return _[a1 nearbyGroup];
}

id objc_msgSend_nearbyGroupSessionDismissed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nearbyGroupSessionDismissed:");
}

id objc_msgSend_nearbyInvitation(void *a1, const char *a2, ...)
{
  return _[a1 nearbyInvitation];
}

id objc_msgSend_needsAcknowledgement(void *a1, const char *a2, ...)
{
  return _[a1 needsAcknowledgement];
}

id objc_msgSend_needsCommandRedirection(void *a1, const char *a2, ...)
{
  return _[a1 needsCommandRedirection];
}

id objc_msgSend_needsMXApplications(void *a1, const char *a2, ...)
{
  return _[a1 needsMXApplications];
}

id objc_msgSend_networkIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 networkIdentifier];
}

id objc_msgSend_networkMonitor(void *a1, const char *a2, ...)
{
  return _[a1 networkMonitor];
}

id objc_msgSend_newHandleWithDefinition_configurationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newHandleWithDefinition:configurationContext:");
}

id objc_msgSend_nodes(void *a1, const char *a2, ...)
{
  return _[a1 nodes];
}

id objc_msgSend_notAdvertisingReason(void *a1, const char *a2, ...)
{
  return _[a1 notAdvertisingReason];
}

id objc_msgSend_notProxyAdvertisingReason(void *a1, const char *a2, ...)
{
  return _[a1 notProxyAdvertisingReason];
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _[a1 notification];
}

id objc_msgSend_notificationClient(void *a1, const char *a2, ...)
{
  return _[a1 notificationClient];
}

id objc_msgSend_notificationOperationQueue(void *a1, const char *a2, ...)
{
  return _[a1 notificationOperationQueue];
}

id objc_msgSend_notificationQueue(void *a1, const char *a2, ...)
{
  return _[a1 notificationQueue];
}

id objc_msgSend_notificationRequiresTaskAssertionForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationRequiresTaskAssertionForPlayerPath:");
}

id objc_msgSend_notificationToken(void *a1, const char *a2, ...)
{
  return _[a1 notificationToken];
}

id objc_msgSend_notifications(void *a1, const char *a2, ...)
{
  return _[a1 notifications];
}

id objc_msgSend_notifyActiveSessionStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 notifyActiveSessionStateChanged];
}

id objc_msgSend_notifyArtworkChangedForContentItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyArtworkChangedForContentItems:");
}

id objc_msgSend_notifyDelegate(void *a1, const char *a2, ...)
{
  return _[a1 notifyDelegate];
}

id objc_msgSend_notifyDelegateOfSleepWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegateOfSleepWithCompletion:");
}

id objc_msgSend_notifyDelegateOfWake(void *a1, const char *a2, ...)
{
  return _[a1 notifyDelegateOfWake];
}

id objc_msgSend_notifyDevicesInHomeThatPlaybackStarted(void *a1, const char *a2, ...)
{
  return _[a1 notifyDevicesInHomeThatPlaybackStarted];
}

id objc_msgSend_notifyDiscoveryOutputDevicesChanged_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDiscoveryOutputDevicesChanged:forConfiguration:");
}

id objc_msgSend_notifyEndpointsChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyEndpointsChanged:");
}

id objc_msgSend_notifyObserversWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserversWithBlock:");
}

id objc_msgSend_notifyOutputDevicesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyOutputDevicesChanged:");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_nowPlayingActivityAssertionEndDate(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingActivityAssertionEndDate];
}

id objc_msgSend_nowPlayingActivityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingActivityIdentifier];
}

id objc_msgSend_nowPlayingActivityUserIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingActivityUserIdentifier];
}

id objc_msgSend_nowPlayingAirPlaySession(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingAirPlaySession];
}

id objc_msgSend_nowPlayingApp(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApp];
}

id objc_msgSend_nowPlayingAppStackEligible(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingAppStackEligible];
}

id objc_msgSend_nowPlayingAppStackFailedPlayInterval(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingAppStackFailedPlayInterval];
}

id objc_msgSend_nowPlayingApplicationDisplayID(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplicationDisplayID];
}

id objc_msgSend_nowPlayingApplicationIsInterrupted(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplicationIsInterrupted];
}

id objc_msgSend_nowPlayingApplicationIsPlaying(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplicationIsPlaying];
}

id objc_msgSend_nowPlayingApplicationPID(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplicationPID];
}

id objc_msgSend_nowPlayingApplicationTimeout(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplicationTimeout];
}

id objc_msgSend_nowPlayingApplications(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplications];
}

id objc_msgSend_nowPlayingApplicationsFromSessionsArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingApplicationsFromSessionsArray:");
}

id objc_msgSend_nowPlayingAudioFormatContentInfos(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingAudioFormatContentInfos];
}

id objc_msgSend_nowPlayingAudioFormatContentInfosFromNowPlayingApplications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingAudioFormatContentInfosFromNowPlayingApplications:");
}

id objc_msgSend_nowPlayingClient(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingClient];
}

id objc_msgSend_nowPlayingClient_activePlayerDidChangeFromPlayerClient_toPlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClient:activePlayerDidChangeFromPlayerClient:toPlayerClient:");
}

id objc_msgSend_nowPlayingClient_applicationDidForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClient:applicationDidForeground:");
}

id objc_msgSend_nowPlayingClient_clientStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClient:clientStateDidChange:");
}

id objc_msgSend_nowPlayingClient_playerDidRegister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClient:playerDidRegister:");
}

id objc_msgSend_nowPlayingClient_playerDidUnregister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClient:playerDidUnregister:");
}

id objc_msgSend_nowPlayingClientForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClientForClient:");
}

id objc_msgSend_nowPlayingClientForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClientForPlayerPath:");
}

id objc_msgSend_nowPlayingClientRequests(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingClientRequests];
}

id objc_msgSend_nowPlayingClients(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingClients];
}

id objc_msgSend_nowPlayingContentItem(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingContentItem];
}

id objc_msgSend_nowPlayingController(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingController];
}

id objc_msgSend_nowPlayingDataSource(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingDataSource];
}

id objc_msgSend_nowPlayingDataSourceNowPlayingApplicationDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingDataSourceNowPlayingApplicationDidChange:");
}

id objc_msgSend_nowPlayingDataSourceNowPlayingApplicationPlaybackStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingDataSourceNowPlayingApplicationPlaybackStateDidChange:");
}

id objc_msgSend_nowPlayingDataSourceNowPlayingApplicationsPlaybackStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingDataSourceNowPlayingApplicationsPlaybackStateDidChange:");
}

id objc_msgSend_nowPlayingDataSourceNowPlayingAudioFormatContentInfosDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingDataSourceNowPlayingAudioFormatContentInfosDidChange:");
}

id objc_msgSend_nowPlayingDataSourceNowPlayingSessionsPlaybackStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingDataSourceNowPlayingSessionsPlaybackStateDidChange:");
}

id objc_msgSend_nowPlayingLauncher_shouldRelaunch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingLauncher:shouldRelaunch:");
}

id objc_msgSend_nowPlayingObserverCoalesceInterval(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingObserverCoalesceInterval];
}

id objc_msgSend_nowPlayingOriginClient_activePlayerClientsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:activePlayerClientsDidChange:");
}

id objc_msgSend_nowPlayingOriginClient_activePlayerPathDidChange_withPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:activePlayerPathDidChange:withPlaybackState:");
}

id objc_msgSend_nowPlayingOriginClient_applicationActivityDidBegin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:applicationActivityDidBegin:");
}

id objc_msgSend_nowPlayingOriginClient_applicationActivityDidEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:applicationActivityDidEnd:");
}

id objc_msgSend_nowPlayingOriginClient_applicationActivityStatusDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:applicationActivityStatusDidChange:");
}

id objc_msgSend_nowPlayingOriginClient_clientDidRegister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:clientDidRegister:");
}

id objc_msgSend_nowPlayingOriginClient_clientDidUnregister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:clientDidUnregister:");
}

id objc_msgSend_nowPlayingOriginClient_currentRouteIsMutedDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:currentRouteIsMutedDidChange:");
}

id objc_msgSend_nowPlayingOriginClient_currentRouteVolumeControlCapabilitiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:currentRouteVolumeControlCapabilitiesDidChange:");
}

id objc_msgSend_nowPlayingOriginClient_currentRouteVolumeDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:currentRouteVolumeDidChange:");
}

id objc_msgSend_nowPlayingOriginClient_deviceInfoDidChange_previousDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:deviceInfoDidChange:previousDeviceInfo:");
}

id objc_msgSend_nowPlayingOriginClientDidChangeAudioFormatContentInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClientDidChangeAudioFormatContentInfo:");
}

id objc_msgSend_nowPlayingOriginClientPlaybackDidTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClientPlaybackDidTimeout:");
}

id objc_msgSend_nowPlayingPlayerClient_clientCanBeNowPlayingDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:clientCanBeNowPlayingDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_isPlayingDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:isPlayingDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_pictureInPictureEnabledDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:pictureInPictureEnabledDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackQueueArtworkContentItemsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackQueueArtworkContentItemsDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackQueueCapabilitiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackQueueCapabilitiesDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackQueueContentItemsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackQueueContentItemsDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackQueueDidChange_nowPlayingItemDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackQueueDidChange:nowPlayingItemDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackQueueParticipantsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackQueueParticipantsDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackStateDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playerCanBeNowPlayingDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playerCanBeNowPlayingDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playerStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playerStateDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_supportedCommandsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:supportedCommandsDidChange:");
}

id objc_msgSend_nowPlayingServer(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingServer];
}

id objc_msgSend_nowPlayingServer_activeOriginDidChangeFromOriginClient_toOriginClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingServer:activeOriginDidChangeFromOriginClient:toOriginClient:");
}

id objc_msgSend_nowPlayingSessions(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingSessions];
}

id objc_msgSend_nowPlayingState(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingState];
}

id objc_msgSend_nowPlayingStateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingStateMonitor];
}

id objc_msgSend_nowPlayingUIWakingPlayerEventAssertionDuration(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingUIWakingPlayerEventAssertionDuration];
}

id objc_msgSend_nowPlayingUpdates(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingUpdates];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numberOfActivePhoneCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfActivePhoneCalls:");
}

id objc_msgSend_numberOfEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 numberOfEndpoints];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedChar:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLong:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_objCType(void *a1, const char *a2, ...)
{
  return _[a1 objCType];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 objectEnumerator];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objects(void *a1, const char *a2, ...)
{
  return _[a1 objects];
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsAtIndexes:");
}

id objc_msgSend_objectsForKeys_notFoundMarker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsForKeys:notFoundMarker:");
}

id objc_msgSend_observeActiveUserWithQueue_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeActiveUserWithQueue:handler:");
}

id objc_msgSend_observer(void *a1, const char *a2, ...)
{
  return _[a1 observer];
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return _[a1 observers];
}

id objc_msgSend_observersForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observersForSelector:");
}

id objc_msgSend_onQueue_controller_didLoadResponse_retry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueue_controller:didLoadResponse:retry:");
}

id objc_msgSend_onQueue_lastPlaybackStateForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueue_lastPlaybackStateForEndpoint:");
}

id objc_msgSend_onQueue_resolveExistingPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueue_resolveExistingPlayerPath:");
}

id objc_msgSend_onQueue_setLastPlaybackState_bundleIdentifier_forEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueue_setLastPlaybackState:bundleIdentifier:forEndpoint:");
}

id objc_msgSend_oobKeys(void *a1, const char *a2, ...)
{
  return _[a1 oobKeys];
}

id objc_msgSend_open(void *a1, const char *a2, ...)
{
  return _[a1 open];
}

id objc_msgSend_openApplication_withOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplication:withOptions:completion:");
}

id objc_msgSend_openMusicForDiscoveredSession_foreground_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openMusicForDiscoveredSession:foreground:completion:");
}

id objc_msgSend_openMusicParticipantManagementWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openMusicParticipantManagementWithCompletion:");
}

id objc_msgSend_openRoutePicker(void *a1, const char *a2, ...)
{
  return _[a1 openRoutePicker];
}

id objc_msgSend_openRoutePickerForRouteUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openRoutePickerForRouteUID:");
}

id objc_msgSend_operationCount(void *a1, const char *a2, ...)
{
  return _[a1 operationCount];
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return _[a1 operations];
}

id objc_msgSend_optimisticDevices(void *a1, const char *a2, ...)
{
  return _[a1 optimisticDevices];
}

id objc_msgSend_optimisticRoute(void *a1, const char *a2, ...)
{
  return _[a1 optimisticRoute];
}

id objc_msgSend_optionValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optionValueForKey:");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_optionsData(void *a1, const char *a2, ...)
{
  return _[a1 optionsData];
}

id objc_msgSend_optionsWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optionsWithDictionary:");
}

id objc_msgSend_origin(void *a1, const char *a2, ...)
{
  return _[a1 origin];
}

id objc_msgSend_originClient(void *a1, const char *a2, ...)
{
  return _[a1 originClient];
}

id objc_msgSend_originClientForDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originClientForDeviceUID:");
}

id objc_msgSend_originClientForGroupLeaderOfDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originClientForGroupLeaderOfDeviceUID:");
}

id objc_msgSend_originClientForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originClientForOrigin:");
}

id objc_msgSend_originClientRequestsForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originClientRequestsForPlayerPath:");
}

id objc_msgSend_originClients(void *a1, const char *a2, ...)
{
  return _[a1 originClients];
}

id objc_msgSend_originForward(void *a1, const char *a2, ...)
{
  return _[a1 originForward];
}

id objc_msgSend_originatedFromAccessory(void *a1, const char *a2, ...)
{
  return _[a1 originatedFromAccessory];
}

id objc_msgSend_originatingAppDisplayID(void *a1, const char *a2, ...)
{
  return _[a1 originatingAppDisplayID];
}

id objc_msgSend_outOfMemoryWaitDuration(void *a1, const char *a2, ...)
{
  return _[a1 outOfMemoryWaitDuration];
}

id objc_msgSend_outputContext(void *a1, const char *a2, ...)
{
  return _[a1 outputContext];
}

id objc_msgSend_outputContextForOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputContextForOutputDevice:");
}

id objc_msgSend_outputContextForOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputContextForOutputDeviceUID:");
}

id objc_msgSend_outputContextForOutputDeviceUIDs_strict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputContextForOutputDeviceUIDs:strict:");
}

id objc_msgSend_outputContextManagerForAllOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 outputContextManagerForAllOutputContexts];
}

id objc_msgSend_outputContexts(void *a1, const char *a2, ...)
{
  return _[a1 outputContexts];
}

id objc_msgSend_outputDevice(void *a1, const char *a2, ...)
{
  return _[a1 outputDevice];
}

id objc_msgSend_outputDeviceForGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDeviceForGroupSession:");
}

id objc_msgSend_outputDeviceModifications(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceModifications];
}

id objc_msgSend_outputDeviceMute(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceMute];
}

id objc_msgSend_outputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceUID];
}

id objc_msgSend_outputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceUIDs];
}

id objc_msgSend_outputDeviceUpdates(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceUpdates];
}

id objc_msgSend_outputDeviceVolume(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceVolume];
}

id objc_msgSend_outputDeviceVolume_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDeviceVolume:queue:completion:");
}

id objc_msgSend_outputDeviceVolumeCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceVolumeCapabilities];
}

id objc_msgSend_outputDeviceVolumeControlCapabilities_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDeviceVolumeControlCapabilities:queue:completion:");
}

id objc_msgSend_outputDeviceVolumeMuted_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDeviceVolumeMuted:queue:completion:");
}

id objc_msgSend_outputDeviceWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDeviceWithUID:");
}

id objc_msgSend_outputDevices(void *a1, const char *a2, ...)
{
  return _[a1 outputDevices];
}

id objc_msgSend_outputDevicesChanged_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDevicesChanged:forConfiguration:");
}

id objc_msgSend_outputDevicesForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDevicesForEndpoint:");
}

id objc_msgSend_outputDevicesMatchingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDevicesMatchingPredicate:");
}

id objc_msgSend_overrideClient(void *a1, const char *a2, ...)
{
  return _[a1 overrideClient];
}

id objc_msgSend_overrideTimer(void *a1, const char *a2, ...)
{
  return _[a1 overrideTimer];
}

id objc_msgSend_owningClient(void *a1, const char *a2, ...)
{
  return _[a1 owningClient];
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return _[a1 pairedDevices];
}

id objc_msgSend_pairingHandler(void *a1, const char *a2, ...)
{
  return _[a1 pairingHandler];
}

id objc_msgSend_pairingManager(void *a1, const char *a2, ...)
{
  return _[a1 pairingManager];
}

id objc_msgSend_parentApplicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 parentApplicationBundleIdentifier];
}

id objc_msgSend_parentGroupContainsDiscoverableGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 parentGroupContainsDiscoverableGroupLeader];
}

id objc_msgSend_parentGroupContainsDiscoverableLeader(void *a1, const char *a2, ...)
{
  return _[a1 parentGroupContainsDiscoverableLeader];
}

id objc_msgSend_parentGroupID(void *a1, const char *a2, ...)
{
  return _[a1 parentGroupID];
}

id objc_msgSend_parentGroupIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 parentGroupIdentifier];
}

id objc_msgSend_parentUID(void *a1, const char *a2, ...)
{
  return _[a1 parentUID];
}

id objc_msgSend_participant(void *a1, const char *a2, ...)
{
  return _[a1 participant];
}

id objc_msgSend_participantDataSource(void *a1, const char *a2, ...)
{
  return _[a1 participantDataSource];
}

id objc_msgSend_participants(void *a1, const char *a2, ...)
{
  return _[a1 participants];
}

id objc_msgSend_password(void *a1, const char *a2, ...)
{
  return _[a1 password];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pauseNotifications(void *a1, const char *a2, ...)
{
  return _[a1 pauseNotifications];
}

id objc_msgSend_pauseOperation(void *a1, const char *a2, ...)
{
  return _[a1 pauseOperation];
}

id objc_msgSend_pauseOutputDeviceUIDs_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseOutputDeviceUIDs:details:queue:completion:");
}

id objc_msgSend_pausePredictedRoutesTimer(void *a1, const char *a2, ...)
{
  return _[a1 pausePredictedRoutesTimer];
}

id objc_msgSend_pbsVolumeControlCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 pbsVolumeControlCapabilities];
}

id objc_msgSend_pendingCompletions(void *a1, const char *a2, ...)
{
  return _[a1 pendingCompletions];
}

id objc_msgSend_pendingCompletionsPerOutputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 pendingCompletionsPerOutputDeviceUID];
}

id objc_msgSend_pendingJoinCompletions(void *a1, const char *a2, ...)
{
  return _[a1 pendingJoinCompletions];
}

id objc_msgSend_pendingParticipants(void *a1, const char *a2, ...)
{
  return _[a1 pendingParticipants];
}

id objc_msgSend_pendingParticipantsMap(void *a1, const char *a2, ...)
{
  return _[a1 pendingParticipantsMap];
}

id objc_msgSend_pendingRelayEndpointReplies(void *a1, const char *a2, ...)
{
  return _[a1 pendingRelayEndpointReplies];
}

id objc_msgSend_pendingRequests(void *a1, const char *a2, ...)
{
  return _[a1 pendingRequests];
}

id objc_msgSend_pepper(void *a1, const char *a2, ...)
{
  return _[a1 pepper];
}

id objc_msgSend_pepperExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 pepperExpirationDate];
}

id objc_msgSend_perPlayerCanBeNowPlaying(void *a1, const char *a2, ...)
{
  return _[a1 perPlayerCanBeNowPlaying];
}

id objc_msgSend_perform_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "perform:completion:");
}

id objc_msgSend_performHandlerForRouteUID_passcode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performHandlerForRouteUID:passcode:");
}

id objc_msgSend_performMigrationToEndpoint_request_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performMigrationToEndpoint:request:queue:completion:");
}

id objc_msgSend_performMigrationToOutputDevices_request_initiator_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performMigrationToOutputDevices:request:initiator:queue:completion:");
}

id objc_msgSend_performRequestWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRequestWithCompletion:");
}

id objc_msgSend_performTopologyModificationToRoute_devices_endpoint_requestName_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTopologyModificationToRoute:devices:endpoint:requestName:completion:");
}

id objc_msgSend_performWithPreferences_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithPreferences:completion:");
}

id objc_msgSend_persistentDiscoveryABCDuration(void *a1, const char *a2, ...)
{
  return _[a1 persistentDiscoveryABCDuration];
}

id objc_msgSend_personalDeviceController(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceController];
}

id objc_msgSend_personalDeviceControllerStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personalDeviceControllerStateDidChange:");
}

id objc_msgSend_personalDeviceLockScreenTimeout(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceLockScreenTimeout];
}

id objc_msgSend_personalDeviceState(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceState];
}

id objc_msgSend_personalDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceUIDs];
}

id objc_msgSend_personalDeviceWasRecentlyAttached(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceWasRecentlyAttached];
}

id objc_msgSend_personalOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 personalOutputDevices];
}

id objc_msgSend_phoneCallObserver_callDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCallObserver:callDidChange:");
}

id objc_msgSend_pickCachedRouteWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickCachedRouteWithUID:");
}

id objc_msgSend_pickableRoutesForCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickableRoutesForCategory:");
}

id objc_msgSend_pickableRoutesForCategory_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickableRoutesForCategory:source:");
}

id objc_msgSend_pickedRoute(void *a1, const char *a2, ...)
{
  return _[a1 pickedRoute];
}

id objc_msgSend_pickedRouteForCategory_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickedRouteForCategory:source:");
}

id objc_msgSend_pickedRouteType(void *a1, const char *a2, ...)
{
  return _[a1 pickedRouteType];
}

id objc_msgSend_pickedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 pickedRoutes];
}

id objc_msgSend_pickedRoutesForCategory_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickedRoutesForCategory:source:");
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _[a1 pid];
}

id objc_msgSend_pillCenter(void *a1, const char *a2, ...)
{
  return _[a1 pillCenter];
}

id objc_msgSend_pillCompletion(void *a1, const char *a2, ...)
{
  return _[a1 pillCompletion];
}

id objc_msgSend_pillTypeWithEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pillTypeWithEndpoint:");
}

id objc_msgSend_pinPairingDialogDidClose_forClient_userCancelled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pinPairingDialogDidClose:forClient:userCancelled:");
}

id objc_msgSend_pinPairingToken(void *a1, const char *a2, ...)
{
  return _[a1 pinPairingToken];
}

id objc_msgSend_ping_callback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ping:callback:withQueue:");
}

id objc_msgSend_playbackQueue(void *a1, const char *a2, ...)
{
  return _[a1 playbackQueue];
}

id objc_msgSend_playbackQueueCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 playbackQueueCapabilities];
}

id objc_msgSend_playbackQueueForRequest_cachingPolicy_playerPath_partiallyCachedItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playbackQueueForRequest:cachingPolicy:playerPath:partiallyCachedItems:");
}

id objc_msgSend_playbackQueueRequests(void *a1, const char *a2, ...)
{
  return _[a1 playbackQueueRequests];
}

id objc_msgSend_playbackRate(void *a1, const char *a2, ...)
{
  return _[a1 playbackRate];
}

id objc_msgSend_playbackSession(void *a1, const char *a2, ...)
{
  return _[a1 playbackSession];
}

id objc_msgSend_playbackSessionData(void *a1, const char *a2, ...)
{
  return _[a1 playbackSessionData];
}

id objc_msgSend_playbackState(void *a1, const char *a2, ...)
{
  return _[a1 playbackState];
}

id objc_msgSend_playbackStateForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playbackStateForPlayerPath:");
}

id objc_msgSend_playbackStateTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 playbackStateTimestamp];
}

id objc_msgSend_playbackTimeoutTimer(void *a1, const char *a2, ...)
{
  return _[a1 playbackTimeoutTimer];
}

id objc_msgSend_playbackTimer(void *a1, const char *a2, ...)
{
  return _[a1 playbackTimer];
}

id objc_msgSend_playbackTimers(void *a1, const char *a2, ...)
{
  return _[a1 playbackTimers];
}

id objc_msgSend_player(void *a1, const char *a2, ...)
{
  return _[a1 player];
}

id objc_msgSend_playerClient(void *a1, const char *a2, ...)
{
  return _[a1 playerClient];
}

id objc_msgSend_playerClientForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerClientForPlayer:");
}

id objc_msgSend_playerClients(void *a1, const char *a2, ...)
{
  return _[a1 playerClients];
}

id objc_msgSend_playerPath(void *a1, const char *a2, ...)
{
  return _[a1 playerPath];
}

id objc_msgSend_playerPathByRedirectingToOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerPathByRedirectingToOrigin:");
}

id objc_msgSend_playerPlaybackState(void *a1, const char *a2, ...)
{
  return _[a1 playerPlaybackState];
}

id objc_msgSend_playerProperties(void *a1, const char *a2, ...)
{
  return _[a1 playerProperties];
}

id objc_msgSend_popNowPlayingAppStack(void *a1, const char *a2, ...)
{
  return _[a1 popNowPlayingAppStack];
}

id objc_msgSend_popNowPlayingAppStack_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popNowPlayingAppStack:forReason:");
}

id objc_msgSend_populatedOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 populatedOutputContexts];
}

id objc_msgSend_postActiveOriginDidChange_withPlaybackState_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postActiveOriginDidChange:withPlaybackState:handler:");
}

id objc_msgSend_postActivePlayerDidChangeForPlayerPath_withPlaybackState_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postActivePlayerDidChangeForPlayerPath:withPlaybackState:handler:");
}

id objc_msgSend_postActivePlayerPathsDidChangeForOrigin_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postActivePlayerPathsDidChangeForOrigin:handler:");
}

id objc_msgSend_postAudioFormatContentInfoDidChangeForOrigin_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postAudioFormatContentInfoDidChangeForOrigin:handler:");
}

id objc_msgSend_postAutoRouteBannerRequestForRoute_devices_endpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postAutoRouteBannerRequestForRoute:devices:endpoint:completion:");
}

id objc_msgSend_postBannerRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postBannerRequest:");
}

id objc_msgSend_postBannerRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postBannerRequest:completion:");
}

id objc_msgSend_postClientDidRegisterCanBeNowPlayingForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientDidRegisterCanBeNowPlayingForPlayerPath:handler:");
}

id objc_msgSend_postClientDidRegisterForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientDidRegisterForPlayerPath:handler:");
}

id objc_msgSend_postClientDidUnregisterCanBeNowPlayingForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientDidUnregisterCanBeNowPlayingForPlayerPath:handler:");
}

id objc_msgSend_postClientDidUnregisterForPlayerPath_hasDefaultSupportedCommands_canBeNowPlaying_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientDidUnregisterForPlayerPath:hasDefaultSupportedCommands:canBeNowPlaying:handler:");
}

id objc_msgSend_postClientNotificationNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNotificationNamed:");
}

id objc_msgSend_postClientNotificationNamed_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNotificationNamed:predicate:");
}

id objc_msgSend_postClientNotificationNamed_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNotificationNamed:userInfo:");
}

id objc_msgSend_postClientNotificationNamed_userInfo_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNotificationNamed:userInfo:predicate:");
}

id objc_msgSend_postClientNowPlayingNotificationNamed_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNowPlayingNotificationNamed:userInfo:");
}

id objc_msgSend_postClientNowPlayingNotificationNamed_userInfo_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNowPlayingNotificationNamed:userInfo:predicate:");
}

id objc_msgSend_postCloudStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 postCloudStateChanged];
}

id objc_msgSend_postConnectedBannerRequestForRoute_devices_endpoint_remoteControl_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postConnectedBannerRequestForRoute:devices:endpoint:remoteControl:completion:");
}

id objc_msgSend_postDeltaBannerRequestForRoute_devices_endpoint_activeSystemEndpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postDeltaBannerRequestForRoute:devices:endpoint:activeSystemEndpoint:completion:");
}

id objc_msgSend_postDeviceInfoDidChange_previousDeviceInfo_forOrigin_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postDeviceInfoDidChange:previousDeviceInfo:forOrigin:handler:");
}

id objc_msgSend_postIsMutedDidChange_isMuted_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postIsMutedDidChange:isMuted:handler:");
}

id objc_msgSend_postIsPlayingDidChange_lastPlayingTimestamp_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postIsPlayingDidChange:lastPlayingTimestamp:forPlayerPath:handler:");
}

id objc_msgSend_postLockScreenControlsDidChangeDistributedNotification(void *a1, const char *a2, ...)
{
  return _[a1 postLockScreenControlsDidChangeDistributedNotification];
}

id objc_msgSend_postNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotification:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_postNowPlayingApplicationDidChangeForPlayerPath_withPlaybackState_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNowPlayingApplicationDidChangeForPlayerPath:withPlaybackState:handler:");
}

id objc_msgSend_postNowPlayingClientStateDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNowPlayingClientStateDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postNowPlayingPlayerStateDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNowPlayingPlayerStateDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postOneTapSuggestionBannerRequestForRoute_devices_endpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postOneTapSuggestionBannerRequestForRoute:devices:endpoint:completion:");
}

id objc_msgSend_postOriginDidRegister_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postOriginDidRegister:handler:");
}

id objc_msgSend_postOriginDidUnRegister_deviceInfo_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postOriginDidUnRegister:deviceInfo:handler:");
}

id objc_msgSend_postPictureInPictureDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPictureInPictureDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPillBannerRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPillBannerRequest:completion:");
}

id objc_msgSend_postPlaybackQueueCapabilitiesDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackQueueCapabilitiesDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlaybackQueueContentItemsArtworkDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackQueueContentItemsArtworkDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlaybackQueueContentItemsDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackQueueContentItemsDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlaybackQueueDidChange_nowPlayingItemDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackQueueDidChange:nowPlayingItemDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlaybackQueueParticipantsDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackQueueParticipantsDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlaybackStateDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackStateDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlayerDidRegisterCanBeNowPlayingForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlayerDidRegisterCanBeNowPlayingForPlayerPath:handler:");
}

id objc_msgSend_postPlayerDidRegisterForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlayerDidRegisterForPlayerPath:handler:");
}

id objc_msgSend_postPlayerDidUnregisterCanBeNowPlayingForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlayerDidUnregisterCanBeNowPlayingForPlayerPath:handler:");
}

id objc_msgSend_postPlayerDidUnregisterWithPlaybackState_canBeNowPlaying_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlayerDidUnregisterWithPlaybackState:canBeNowPlaying:forPlayerPath:handler:");
}

id objc_msgSend_postSupportedCommandsDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postSupportedCommandsDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postSystemEndpointDeviceChange_type_originClient_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postSystemEndpointDeviceChange:type:originClient:handler:");
}

id objc_msgSend_postVolumeCapabilitiesDidChange_capabilities_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postVolumeCapabilitiesDidChange:capabilities:handler:");
}

id objc_msgSend_postVolumeDidChange_volume_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postVolumeDidChange:volume:handler:");
}

id objc_msgSend_predicateMatchingHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateMatchingHandle:");
}

id objc_msgSend_predictedOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 predictedOutputDeviceUIDs];
}

id objc_msgSend_preemptiveRemoteControlConnectionManager_didConnectToGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preemptiveRemoteControlConnectionManager:didConnectToGroupLeader:");
}

id objc_msgSend_preemptiveRemoteControlConnectionManager_didConnectToPreferredClusterLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preemptiveRemoteControlConnectionManager:didConnectToPreferredClusterLeader:");
}

id objc_msgSend_preferRoutesMatchingMediaType(void *a1, const char *a2, ...)
{
  return _[a1 preferRoutesMatchingMediaType];
}

id objc_msgSend_preferredClusterLeader(void *a1, const char *a2, ...)
{
  return _[a1 preferredClusterLeader];
}

id objc_msgSend_preferredEncoding(void *a1, const char *a2, ...)
{
  return _[a1 preferredEncoding];
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguages];
}

id objc_msgSend_prepareForAddedMember(void *a1, const char *a2, ...)
{
  return _[a1 prepareForAddedMember];
}

id objc_msgSend_present(void *a1, const char *a2, ...)
{
  return _[a1 present];
}

id objc_msgSend_presentAudioBluePill_remoteControl_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAudioBluePill:remoteControl:reason:");
}

id objc_msgSend_presentBluePillWithPlainType_pulseType_route_remoteControl_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentBluePillWithPlainType:pulseType:route:remoteControl:reason:");
}

id objc_msgSend_presentControlCenterCallToActionVideo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentControlCenterCallToActionVideo:completion:");
}

id objc_msgSend_presentProximityCardWithDeviceName_modelIdentifier_color_url_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentProximityCardWithDeviceName:modelIdentifier:color:url:error:");
}

id objc_msgSend_presentSystemApertureBluePill_remoteControl_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentSystemApertureBluePill:remoteControl:reason:");
}

id objc_msgSend_presentVideoBluePill_remoteControl_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentVideoBluePill:remoteControl:reason:");
}

id objc_msgSend_presentWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentWithCompletion:");
}

id objc_msgSend_presentedBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 presentedBundleIdentifiers];
}

id objc_msgSend_presentingConnectedPillFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingConnectedPillFor:");
}

id objc_msgSend_previousClusterLeaderID(void *a1, const char *a2, ...)
{
  return _[a1 previousClusterLeaderID];
}

id objc_msgSend_previousGroupID(void *a1, const char *a2, ...)
{
  return _[a1 previousGroupID];
}

id objc_msgSend_previousMaintainReason(void *a1, const char *a2, ...)
{
  return _[a1 previousMaintainReason];
}

id objc_msgSend_previousPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 previousPlayerPath];
}

id objc_msgSend_prewarmApp_origin_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmApp:origin:deviceInfo:");
}

id objc_msgSend_prewarmForIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmForIdentity:");
}

id objc_msgSend_prewarmPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 prewarmPodcasts];
}

id objc_msgSend_prewarmSoon(void *a1, const char *a2, ...)
{
  return _[a1 prewarmSoon];
}

id objc_msgSend_primaryID(void *a1, const char *a2, ...)
{
  return _[a1 primaryID];
}

id objc_msgSend_primaryUIApplicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 primaryUIApplicationBundleIdentifier];
}

id objc_msgSend_priority(void *a1, const char *a2, ...)
{
  return _[a1 priority];
}

id objc_msgSend_privacyAcknowledgementRequiredForMusic(void *a1, const char *a2, ...)
{
  return _[a1 privacyAcknowledgementRequiredForMusic];
}

id objc_msgSend_processHandle(void *a1, const char *a2, ...)
{
  return _[a1 processHandle];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processName(void *a1, const char *a2, ...)
{
  return _[a1 processName];
}

id objc_msgSend_processOutputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processOutputContext:");
}

id objc_msgSend_properties(void *a1, const char *a2, ...)
{
  return _[a1 properties];
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_protobuf(void *a1, const char *a2, ...)
{
  return _[a1 protobuf];
}

id objc_msgSend_protobufData(void *a1, const char *a2, ...)
{
  return _[a1 protobufData];
}

id objc_msgSend_protocol(void *a1, const char *a2, ...)
{
  return _[a1 protocol];
}

id objc_msgSend_protocolForProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protocolForProtocol:");
}

id objc_msgSend_protocolMessageWithProtobufData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protocolMessageWithProtobufData:error:");
}

id objc_msgSend_protocolVersion(void *a1, const char *a2, ...)
{
  return _[a1 protocolVersion];
}

id objc_msgSend_provider(void *a1, const char *a2, ...)
{
  return _[a1 provider];
}

id objc_msgSend_proxyForObjects_protocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proxyForObjects:protocol:");
}

id objc_msgSend_proxyWithObject_protocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proxyWithObject:protocol:");
}

id objc_msgSend_pruner(void *a1, const char *a2, ...)
{
  return _[a1 pruner];
}

id objc_msgSend_publicSigningKeyData(void *a1, const char *a2, ...)
{
  return _[a1 publicSigningKeyData];
}

id objc_msgSend_publish(void *a1, const char *a2, ...)
{
  return _[a1 publish];
}

id objc_msgSend_publishToOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishToOutputDevices:");
}

id objc_msgSend_publishWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishWithOptions:");
}

id objc_msgSend_publisherWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherWithOptions:");
}

id objc_msgSend_purgeUnusedDiscoverySessions(void *a1, const char *a2, ...)
{
  return _[a1 purgeUnusedDiscoverySessions];
}

id objc_msgSend_pushStateCanBeNowPlayingPlayer(void *a1, const char *a2, ...)
{
  return _[a1 pushStateCanBeNowPlayingPlayer];
}

id objc_msgSend_pushStateHasNowPlayingData(void *a1, const char *a2, ...)
{
  return _[a1 pushStateHasNowPlayingData];
}

id objc_msgSend_pushStateIsPlaying(void *a1, const char *a2, ...)
{
  return _[a1 pushStateIsPlaying];
}

id objc_msgSend_pushStatePictureInPictureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 pushStatePictureInPictureEnabled];
}

id objc_msgSend_pushStatePlaybackState(void *a1, const char *a2, ...)
{
  return _[a1 pushStatePlaybackState];
}

id objc_msgSend_pushStatePlayer(void *a1, const char *a2, ...)
{
  return _[a1 pushStatePlayer];
}

id objc_msgSend_queryEligibilityOf_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryEligibilityOf:completionHandler:");
}

id objc_msgSend_queryEligibilityOfAll_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryEligibilityOfAll:completionHandler:");
}

id objc_msgSend_queryExistingPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryExistingPlayerPath:");
}

id objc_msgSend_queryExistingPlayerPathForXPCMessage_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryExistingPlayerPathForXPCMessage:forClient:");
}

id objc_msgSend_queryPlayerPath_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryPlayerPath:forClient:");
}

id objc_msgSend_queryPlayerPathForXPCMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryPlayerPathForXPCMessage:fromClient:");
}

id objc_msgSend_queryQueue(void *a1, const char *a2, ...)
{
  return _[a1 queryQueue];
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_queuedCommandsTimeoutInterval(void *a1, const char *a2, ...)
{
  return _[a1 queuedCommandsTimeoutInterval];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return _[a1 range];
}

id objc_msgSend_rangeContainsNowPlayingItem(void *a1, const char *a2, ...)
{
  return _[a1 rangeContainsNowPlayingItem];
}

id objc_msgSend_rapportIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 rapportIdentifier];
}

id objc_msgSend_rapportRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rapportRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_realToken(void *a1, const char *a2, ...)
{
  return _[a1 realToken];
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _[a1 reason];
}

id objc_msgSend_reasonWithType_string_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reasonWithType:string:");
}

id objc_msgSend_rebuildParticipants(void *a1, const char *a2, ...)
{
  return _[a1 rebuildParticipants];
}

id objc_msgSend_recentGroupSessionParticipantsPepper(void *a1, const char *a2, ...)
{
  return _[a1 recentGroupSessionParticipantsPepper];
}

id objc_msgSend_recentlyDismissedRecommendationsInfo(void *a1, const char *a2, ...)
{
  return _[a1 recentlyDismissedRecommendationsInfo];
}

id objc_msgSend_recentlyPlayingInterval(void *a1, const char *a2, ...)
{
  return _[a1 recentlyPlayingInterval];
}

id objc_msgSend_recommendationController(void *a1, const char *a2, ...)
{
  return _[a1 recommendationController];
}

id objc_msgSend_recommendationType(void *a1, const char *a2, ...)
{
  return _[a1 recommendationType];
}

id objc_msgSend_recommender(void *a1, const char *a2, ...)
{
  return _[a1 recommender];
}

id objc_msgSend_recon(void *a1, const char *a2, ...)
{
  return _[a1 recon];
}

id objc_msgSend_recordingEndpointClients(void *a1, const char *a2, ...)
{
  return _[a1 recordingEndpointClients];
}

id objc_msgSend_reevaluateAdvertisement(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateAdvertisement];
}

id objc_msgSend_reevaluateAfterInterval_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reevaluateAfterInterval:withReason:");
}

id objc_msgSend_reevaluateClientsForActiveCriticalSection(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateClientsForActiveCriticalSection];
}

id objc_msgSend_reevaluateDiscoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateDiscoveryMode];
}

id objc_msgSend_reevaluateGroupSessionService(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateGroupSessionService];
}

id objc_msgSend_reevaluateLowPowerMode(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateLowPowerMode];
}

id objc_msgSend_reevaluatePillsWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reevaluatePillsWithReason:");
}

id objc_msgSend_reevaluatePlaybackState(void *a1, const char *a2, ...)
{
  return _[a1 reevaluatePlaybackState];
}

id objc_msgSend_reevaluateProxyAdvertisement(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateProxyAdvertisement];
}

id objc_msgSend_reevaluateState(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateState];
}

id objc_msgSend_reevaluateSystemStateWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reevaluateSystemStateWithReason:");
}

id objc_msgSend_registerCommunicationChannelForOutputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerCommunicationChannelForOutputContext:");
}

id objc_msgSend_registerCommunicationsChannels(void *a1, const char *a2, ...)
{
  return _[a1 registerCommunicationsChannels];
}

id objc_msgSend_registerConnectionFailureForWHAIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerConnectionFailureForWHAIdentifier:");
}

id objc_msgSend_registerCreateNewApplicationConnectionCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerCreateNewApplicationConnectionCallback:");
}

id objc_msgSend_registerDestinationOriginCallbacksToRelayToSourceOrigin(void *a1, const char *a2, ...)
{
  return _[a1 registerDestinationOriginCallbacksToRelayToSourceOrigin];
}

id objc_msgSend_registerDiscoveryTokenForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDiscoveryTokenForConfiguration:");
}

id objc_msgSend_registerEvent_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerEvent:callback:");
}

id objc_msgSend_registerForChanges(void *a1, const char *a2, ...)
{
  return _[a1 registerForChanges];
}

id objc_msgSend_registerForNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerForNotifications];
}

id objc_msgSend_registerForOutputContextNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForOutputContextNotifications:");
}

id objc_msgSend_registerHandoffSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerHandoffSession:");
}

id objc_msgSend_registerIncomingApplicationConnection_clientBoundMessageHandler_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerIncomingApplicationConnection:clientBoundMessageHandler:completion:");
}

id objc_msgSend_registerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerNotifications];
}

id objc_msgSend_registerObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerObserver:");
}

id objc_msgSend_registerOrigin_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerOrigin:deviceInfo:");
}

id objc_msgSend_registerOriginForwarder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerOriginForwarder:");
}

id objc_msgSend_registerOutputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerOutputContext:");
}

id objc_msgSend_registerRequest_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerRequest:callback:");
}

id objc_msgSend_registerSourceOriginNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerSourceOriginNotifications];
}

id objc_msgSend_registeredCallbacks(void *a1, const char *a2, ...)
{
  return _[a1 registeredCallbacks];
}

id objc_msgSend_registeredDeviceWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registeredDeviceWithID:");
}

id objc_msgSend_registeredKeyboardUpdates(void *a1, const char *a2, ...)
{
  return _[a1 registeredKeyboardUpdates];
}

id objc_msgSend_registeredToNowPlayingUpdates(void *a1, const char *a2, ...)
{
  return _[a1 registeredToNowPlayingUpdates];
}

id objc_msgSend_registeredToOutputDeviceUpdates(void *a1, const char *a2, ...)
{
  return _[a1 registeredToOutputDeviceUpdates];
}

id objc_msgSend_registeredToSystemEndpointUpdates(void *a1, const char *a2, ...)
{
  return _[a1 registeredToSystemEndpointUpdates];
}

id objc_msgSend_registeredToVolumeUpdates(void *a1, const char *a2, ...)
{
  return _[a1 registeredToVolumeUpdates];
}

id objc_msgSend_registeredVirtualVoiceInputDevices(void *a1, const char *a2, ...)
{
  return _[a1 registeredVirtualVoiceInputDevices];
}

id objc_msgSend_registrationDate(void *a1, const char *a2, ...)
{
  return _[a1 registrationDate];
}

id objc_msgSend_relayArtworkRequest_forContentItems_withMessage_fromNowPlayingClient_andNotifyXPCClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayArtworkRequest:forContentItems:withMessage:fromNowPlayingClient:andNotifyXPCClient:");
}

id objc_msgSend_relayConnectionManager_didIngestNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayConnectionManager:didIngestNewConnection:");
}

id objc_msgSend_relayConnectionsToSecondaries(void *a1, const char *a2, ...)
{
  return _[a1 relayConnectionsToSecondaries];
}

id objc_msgSend_relayPlaybackQueueRequest_withMessage_toNowPlayingClient_backToXpcClient_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayPlaybackQueueRequest:withMessage:toNowPlayingClient:backToXpcClient:completion:");
}

id objc_msgSend_relayXPCMessage_andReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayXPCMessage:andReply:");
}

id objc_msgSend_relayXPCMessage_andReply_resultCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayXPCMessage:andReply:resultCallback:");
}

id objc_msgSend_releaseGroupSessionLowPowerPlatterAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseGroupSessionLowPowerPlatterAssertionWithReply:");
}

id objc_msgSend_releaseGroupSessionNearbyAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseGroupSessionNearbyAssertionWithReply:");
}

id objc_msgSend_releaseLockScreenControlsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseLockScreenControlsAssertion];
}

id objc_msgSend_releaseLockScreenControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseLockScreenControlsAssertionWithReply:");
}

id objc_msgSend_releaseQuickControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseQuickControlsAssertionWithReply:");
}

id objc_msgSend_releaseRouteRecommendationAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseRouteRecommendationAssertion];
}

id objc_msgSend_releaseRouteRecommendationAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseRouteRecommendationAssertionWithReply:");
}

id objc_msgSend_releaseScreenMirroringQuickControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseScreenMirroringQuickControlsAssertionWithReply:");
}

id objc_msgSend_releaseSessionManagementScreenVisibleAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseSessionManagementScreenVisibleAssertion];
}

id objc_msgSend_releaseTimeBasedNowPlayingActivityAssertions(void *a1, const char *a2, ...)
{
  return _[a1 releaseTimeBasedNowPlayingActivityAssertions];
}

id objc_msgSend_relevantOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 relevantOutputDeviceUIDs];
}

id objc_msgSend_relevantOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 relevantOutputDevices];
}

id objc_msgSend_reloadDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 reloadDeviceInfo];
}

id objc_msgSend_reloadDeviceInfoImmediately(void *a1, const char *a2, ...)
{
  return _[a1 reloadDeviceInfoImmediately];
}

id objc_msgSend_reloadOutputContextData(void *a1, const char *a2, ...)
{
  return _[a1 reloadOutputContextData];
}

id objc_msgSend_reloadOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 reloadOutputContexts];
}

id objc_msgSend_remainingDuration(void *a1, const char *a2, ...)
{
  return _[a1 remainingDuration];
}

id objc_msgSend_remainingStreamCapacity(void *a1, const char *a2, ...)
{
  return _[a1 remainingStreamCapacity];
}

id objc_msgSend_remoteASEDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 remoteASEDeviceInfo];
}

id objc_msgSend_remoteApprovePendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteApprovePendingParticipant:");
}

id objc_msgSend_remoteControl_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteControl:completion:");
}

id objc_msgSend_remoteControlClients(void *a1, const char *a2, ...)
{
  return _[a1 remoteControlClients];
}

id objc_msgSend_remoteControlInterfaceID(void *a1, const char *a2, ...)
{
  return _[a1 remoteControlInterfaceID];
}

id objc_msgSend_remoteControlServer(void *a1, const char *a2, ...)
{
  return _[a1 remoteControlServer];
}

id objc_msgSend_remoteControlService(void *a1, const char *a2, ...)
{
  return _[a1 remoteControlService];
}

id objc_msgSend_remoteControlService_didAcceptClientConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteControlService:didAcceptClientConnection:");
}

id objc_msgSend_remoteControlSessionForExistingSessionWithNearbyGroup_identity_hostSigningKey_joinToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteControlSessionForExistingSessionWithNearbyGroup:identity:hostSigningKey:joinToken:");
}

id objc_msgSend_remoteDeviceIdleDisconnection(void *a1, const char *a2, ...)
{
  return _[a1 remoteDeviceIdleDisconnection];
}

id objc_msgSend_remoteDeviceIdleDisconnectionInterval(void *a1, const char *a2, ...)
{
  return _[a1 remoteDeviceIdleDisconnectionInterval];
}

id objc_msgSend_remoteIdentityMap(void *a1, const char *a2, ...)
{
  return _[a1 remoteIdentityMap];
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectProxy];
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_remoteParticipantDataSource(void *a1, const char *a2, ...)
{
  return _[a1 remoteParticipantDataSource];
}

id objc_msgSend_remotePendingParticipants(void *a1, const char *a2, ...)
{
  return _[a1 remotePendingParticipants];
}

id objc_msgSend_remoteRejectPendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteRejectPendingParticipant:");
}

id objc_msgSend_remoteRemoveAllParticipants(void *a1, const char *a2, ...)
{
  return _[a1 remoteRemoveAllParticipants];
}

id objc_msgSend_remoteRemoveParticipantWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteRemoveParticipantWithIdentifier:");
}

id objc_msgSend_remoteTargetWithLaunchingAssertionAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteTargetWithLaunchingAssertionAttributes:");
}

id objc_msgSend_remoteUIService(void *a1, const char *a2, ...)
{
  return _[a1 remoteUIService];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAllParticipants(void *a1, const char *a2, ...)
{
  return _[a1 removeAllParticipants];
}

id objc_msgSend_removeAttribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAttribution:");
}

id objc_msgSend_removeAuthorizationCallbackForRouteID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAuthorizationCallbackForRouteID:");
}

id objc_msgSend_removeChannelForDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeChannelForDestination:");
}

id objc_msgSend_removeClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeClient:");
}

id objc_msgSend_removeClientForPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeClientForPID:");
}

id objc_msgSend_removeDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDelegate:");
}

id objc_msgSend_removeEndpointsChangedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEndpointsChangedCallback:");
}

id objc_msgSend_removeFirstObject(void *a1, const char *a2, ...)
{
  return _[a1 removeFirstObject];
}

id objc_msgSend_removeGameController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeGameController:");
}

id objc_msgSend_removeHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHandler:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 removeLocalDevice];
}

id objc_msgSend_removeLyricsEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLyricsEvent:");
}

id objc_msgSend_removeMessageHandlerForType_destination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeMessageHandlerForType:destination:session:");
}

id objc_msgSend_removeNowPlayingClientForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeNowPlayingClientForClient:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectIdenticalTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectIdenticalTo:");
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsForKeys:");
}

id objc_msgSend_removeObjectsInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInRange:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOrigin:");
}

id objc_msgSend_removeOriginRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOriginRequests:");
}

id objc_msgSend_removeOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevice:");
}

id objc_msgSend_removeOutputDevice_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevice:options:completionHandler:");
}

id objc_msgSend_removeOutputDeviceFromParentGroup_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDeviceFromParentGroup:queue:completion:");
}

id objc_msgSend_removeOutputDeviceUIDsFromParentGroup_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDeviceUIDsFromParentGroup:details:completion:");
}

id objc_msgSend_removeOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevices:");
}

id objc_msgSend_removeOutputDevices_initiator_withCallbackQueue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevices:initiator:withCallbackQueue:block:");
}

id objc_msgSend_removeOutputDevices_initiator_withReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevices:initiator:withReplyQueue:completion:");
}

id objc_msgSend_removeOutputDevicesChangedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevicesChangedCallback:");
}

id objc_msgSend_removeParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeParticipant:");
}

id objc_msgSend_removeParticipantWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeParticipantWithIdentifier:");
}

id objc_msgSend_removePeer(void *a1, const char *a2, ...)
{
  return _[a1 removePeer];
}

id objc_msgSend_removePendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePendingParticipant:");
}

id objc_msgSend_removePendingPlaybackSessionMigrateEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePendingPlaybackSessionMigrateEvent:");
}

id objc_msgSend_removePlayerClientForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePlayerClientForPlayer:");
}

id objc_msgSend_removeRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRequest:");
}

id objc_msgSend_removeUndesiredDevicesOutputContextModification(void *a1, const char *a2, ...)
{
  return _[a1 removeUndesiredDevicesOutputContextModification];
}

id objc_msgSend_removeVirtualOutputDevicesForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeVirtualOutputDevicesForClient:");
}

id objc_msgSend_removedOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 removedOutputDevices];
}

id objc_msgSend_removingOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 removingOutputDeviceUIDs];
}

id objc_msgSend_renderingMode(void *a1, const char *a2, ...)
{
  return _[a1 renderingMode];
}

id objc_msgSend_replaceDonatedEntriesWithEntries_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceDonatedEntriesWithEntries:withCompletion:");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_replyIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 replyIdentifier];
}

id objc_msgSend_replyWithData_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replyWithData:priority:");
}

id objc_msgSend_replyWithMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replyWithMessage:");
}

id objc_msgSend_representedBundleID(void *a1, const char *a2, ...)
{
  return _[a1 representedBundleID];
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _[a1 request];
}

id objc_msgSend_requestByRemovingArtwork(void *a1, const char *a2, ...)
{
  return _[a1 requestByRemovingArtwork];
}

id objc_msgSend_requestConnectedDestinationEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestConnectedDestinationEndpoint:");
}

id objc_msgSend_requestCurrentContext(void *a1, const char *a2, ...)
{
  return _[a1 requestCurrentContext];
}

id objc_msgSend_requestCurrentContextWithBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestCurrentContextWithBundleID:");
}

id objc_msgSend_requestDestinationEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestDestinationEndpoint:");
}

id objc_msgSend_requestDetails(void *a1, const char *a2, ...)
{
  return _[a1 requestDetails];
}

id objc_msgSend_requestEligibilityMonitoring(void *a1, const char *a2, ...)
{
  return _[a1 requestEligibilityMonitoring];
}

id objc_msgSend_requestForSubscribedContentItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestForSubscribedContentItemIdentifier:");
}

id objc_msgSend_requestGroupSessionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestGroupSessionWithCompletion:");
}

id objc_msgSend_requestGroupSessionWithDetails_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestGroupSessionWithDetails:queue:completion:");
}

id objc_msgSend_requestID(void *a1, const char *a2, ...)
{
  return _[a1 requestID];
}

id objc_msgSend_requestIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 requestIdentifier];
}

id objc_msgSend_requestInfo(void *a1, const char *a2, ...)
{
  return _[a1 requestInfo];
}

id objc_msgSend_requestReasonID(void *a1, const char *a2, ...)
{
  return _[a1 requestReasonID];
}

id objc_msgSend_requestToJoinDiscoveredSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestToJoinDiscoveredSession:completion:");
}

id objc_msgSend_requestToJoinSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestToJoinSession:completion:");
}

id objc_msgSend_requestWithStaticRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithStaticRequest:");
}

id objc_msgSend_requestedArtworkFormats(void *a1, const char *a2, ...)
{
  return _[a1 requestedArtworkFormats];
}

id objc_msgSend_requester(void *a1, const char *a2, ...)
{
  return _[a1 requester];
}

id objc_msgSend_requiresAuthorization(void *a1, const char *a2, ...)
{
  return _[a1 requiresAuthorization];
}

id objc_msgSend_requiresCustomPairing(void *a1, const char *a2, ...)
{
  return _[a1 requiresCustomPairing];
}

id objc_msgSend_requiresPIN(void *a1, const char *a2, ...)
{
  return _[a1 requiresPIN];
}

id objc_msgSend_requiresPreflightForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiresPreflightForApplication:");
}

id objc_msgSend_reregisterOrigin_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reregisterOrigin:deviceInfo:");
}

id objc_msgSend_reserveSlotForLocal(void *a1, const char *a2, ...)
{
  return _[a1 reserveSlotForLocal];
}

id objc_msgSend_reservedOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 reservedOutputContexts];
}

id objc_msgSend_resetAcknowledgementForSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetAcknowledgementForSessionIdentifier:");
}

id objc_msgSend_resetConnection(void *a1, const char *a2, ...)
{
  return _[a1 resetConnection];
}

id objc_msgSend_resetMediaServerState(void *a1, const char *a2, ...)
{
  return _[a1 resetMediaServerState];
}

id objc_msgSend_resetWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetWithError:");
}

id objc_msgSend_resizeImageData_forFittingSize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizeImageData:forFittingSize:error:");
}

id objc_msgSend_resolvableIdentityWithIdentifier_displayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvableIdentityWithIdentifier:displayName:");
}

id objc_msgSend_resolveActiveSystemEndpointWithType_timeout_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveActiveSystemEndpointWithType:timeout:queue:completion:");
}

id objc_msgSend_resolveExistingPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveExistingPlayerPath:");
}

id objc_msgSend_resolveOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveOutputDevices:");
}

id objc_msgSend_resolvePlaceholdersForDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvePlaceholdersForDeviceInfo:");
}

id objc_msgSend_resolvePlayerPath_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvePlayerPath:fromClient:");
}

id objc_msgSend_resolvePlayerPath_fromClient_useDefaultPlayerIfNoneSpecified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvePlayerPath:fromClient:useDefaultPlayerIfNoneSpecified:");
}

id objc_msgSend_resolvedAvailableEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 resolvedAvailableEndpoints];
}

id objc_msgSend_resolvedOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 resolvedOutputDevices];
}

id objc_msgSend_respondWithAuthorizationToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondWithAuthorizationToken:");
}

id objc_msgSend_respondWithAuthorizationToken_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondWithAuthorizationToken:completionHandler:");
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return _[a1 response];
}

id objc_msgSend_restoreClientDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreClientDeviceInfo:");
}

id objc_msgSend_restoreClientState_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreClientState:handler:");
}

id objc_msgSend_restoreClientSystemEndpointWithType_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreClientSystemEndpointWithType:handler:");
}

id objc_msgSend_restoreDeviceInfoToClient_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreDeviceInfoToClient:handler:");
}

id objc_msgSend_restoreStateFromController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreStateFromController:");
}

id objc_msgSend_restrictedTo_by_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restrictedTo:by:");
}

id objc_msgSend_result(void *a1, const char *a2, ...)
{
  return _[a1 result];
}

id objc_msgSend_resultStatuses(void *a1, const char *a2, ...)
{
  return _[a1 resultStatuses];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_resumeNotifications(void *a1, const char *a2, ...)
{
  return _[a1 resumeNotifications];
}

id objc_msgSend_resumeNowPlayingSesion(void *a1, const char *a2, ...)
{
  return _[a1 resumeNowPlayingSesion];
}

id objc_msgSend_retrieveFirewallWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveFirewallWithQueue:completion:");
}

id objc_msgSend_retrieveSessionWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveSessionWithID:");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_revision(void *a1, const char *a2, ...)
{
  return _[a1 revision];
}

id objc_msgSend_revokeAllBannersWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokeAllBannersWithReply:");
}

id objc_msgSend_revokeAutoApprovalForAllParticipants(void *a1, const char *a2, ...)
{
  return _[a1 revokeAutoApprovalForAllParticipants];
}

id objc_msgSend_revokeAutoApprovalForParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokeAutoApprovalForParticipant:");
}

id objc_msgSend_revokeBannerWithIdentifier_withReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokeBannerWithIdentifier:withReply:");
}

id objc_msgSend_rotatingSessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 rotatingSessionIdentifier];
}

id objc_msgSend_route(void *a1, const char *a2, ...)
{
  return _[a1 route];
}

id objc_msgSend_route_endpoint_bundleIdentifier_emittedEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "route:endpoint:bundleIdentifier:emittedEvent:");
}

id objc_msgSend_routeDiscoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 routeDiscoveryMode];
}

id objc_msgSend_routeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 routeIdentifier];
}

id objc_msgSend_routeIsValidForHosting(void *a1, const char *a2, ...)
{
  return _[a1 routeIsValidForHosting];
}

id objc_msgSend_routePickerVisible(void *a1, const char *a2, ...)
{
  return _[a1 routePickerVisible];
}

id objc_msgSend_routeRecommendationActivities(void *a1, const char *a2, ...)
{
  return _[a1 routeRecommendationActivities];
}

id objc_msgSend_routeRecommendationDismissed(void *a1, const char *a2, ...)
{
  return _[a1 routeRecommendationDismissed];
}

id objc_msgSend_routeRecommendationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 routeRecommendationIdentifiers];
}

id objc_msgSend_routeSymbolName(void *a1, const char *a2, ...)
{
  return _[a1 routeSymbolName];
}

id objc_msgSend_routeType(void *a1, const char *a2, ...)
{
  return _[a1 routeType];
}

id objc_msgSend_routeUID(void *a1, const char *a2, ...)
{
  return _[a1 routeUID];
}

id objc_msgSend_routeWithCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeWithCandidate:");
}

id objc_msgSend_routeWithEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeWithEndpoint:");
}

id objc_msgSend_routeWithOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeWithOutputDevices:");
}

id objc_msgSend_routedAppDisplayID(void *a1, const char *a2, ...)
{
  return _[a1 routedAppDisplayID];
}

id objc_msgSend_routedBackgroundActivityManager(void *a1, const char *a2, ...)
{
  return _[a1 routedBackgroundActivityManager];
}

id objc_msgSend_routedCommands(void *a1, const char *a2, ...)
{
  return _[a1 routedCommands];
}

id objc_msgSend_routingContextID(void *a1, const char *a2, ...)
{
  return _[a1 routingContextID];
}

id objc_msgSend_routingContextUID(void *a1, const char *a2, ...)
{
  return _[a1 routingContextUID];
}

id objc_msgSend_routingDataSource(void *a1, const char *a2, ...)
{
  return _[a1 routingDataSource];
}

id objc_msgSend_routingServer(void *a1, const char *a2, ...)
{
  return _[a1 routingServer];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _[a1 run];
}

id objc_msgSend_runSession_withMode_andServiceToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runSession:withMode:andServiceToken:");
}

id objc_msgSend_runWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runWithConfiguration:");
}

id objc_msgSend_saveToStorage(void *a1, const char *a2, ...)
{
  return _[a1 saveToStorage];
}

id objc_msgSend_scheduleLayoutChangeForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleLayoutChangeForReason:");
}

id objc_msgSend_scheduleSendBarrierBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleSendBarrierBlock:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_screenSize(void *a1, const char *a2, ...)
{
  return _[a1 screenSize];
}

id objc_msgSend_searchEndpointsForCompanionWithTimeout_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForCompanionWithTimeout:reason:queue:completion:");
}

id objc_msgSend_searchEndpointsForGroupUID_timeout_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForGroupUID:timeout:reason:queue:completion:");
}

id objc_msgSend_searchEndpointsForLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 searchEndpointsForLocalDevice];
}

id objc_msgSend_searchEndpointsForLocalDeviceWithTimeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForLocalDeviceWithTimeout:details:completion:");
}

id objc_msgSend_searchEndpointsForMyGroupLeaderWithTimeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForMyGroupLeaderWithTimeout:details:completion:");
}

id objc_msgSend_searchEndpointsForOutputDeviceUID_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForOutputDeviceUID:timeout:details:completion:");
}

id objc_msgSend_searchEndpointsForOutputDeviceUID_timeout_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForOutputDeviceUID:timeout:details:queue:completion:");
}

id objc_msgSend_searchEndpointsForOutputDeviceUID_timeout_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForOutputDeviceUID:timeout:reason:queue:completion:");
}

id objc_msgSend_searchEndpointsForRoutingContextUID_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForRoutingContextUID:timeout:details:completion:");
}

id objc_msgSend_searchEndpointsWithPredicate_timeout_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsWithPredicate:timeout:reason:queue:completion:");
}

id objc_msgSend_searchForBuddy(void *a1, const char *a2, ...)
{
  return _[a1 searchForBuddy];
}

id objc_msgSend_searchForGroupUID(void *a1, const char *a2, ...)
{
  return _[a1 searchForGroupUID];
}

id objc_msgSend_searchForOutputDevices_categories_timeout_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchForOutputDevices:categories:timeout:reason:queue:completion:");
}

id objc_msgSend_searchOutputDevices_reason_timeout_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchOutputDevices:reason:timeout:queue:completion:");
}

id objc_msgSend_second(void *a1, const char *a2, ...)
{
  return _[a1 second];
}

id objc_msgSend_selectionReason(void *a1, const char *a2, ...)
{
  return _[a1 selectionReason];
}

id objc_msgSend_selector(void *a1, const char *a2, ...)
{
  return _[a1 selector];
}

id objc_msgSend_send_toConnection_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "send:toConnection:completion:");
}

id objc_msgSend_sendButtonEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendButtonEvent:");
}

id objc_msgSend_sendClientUpdatesConfigMessage(void *a1, const char *a2, ...)
{
  return _[a1 sendClientUpdatesConfigMessage];
}

id objc_msgSend_sendClientUpdatesConfigMessageWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendClientUpdatesConfigMessageWithCompletion:");
}

id objc_msgSend_sendCommand(void *a1, const char *a2, ...)
{
  return _[a1 sendCommand];
}

id objc_msgSend_sendCommand_options_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommand:options:queue:completion:");
}

id objc_msgSend_sendCommand_withOptions_toEachEndpointContainingOutputDeviceUIDs_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommand:withOptions:toEachEndpointContainingOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend_sendCommand_withOptions_toNewEndpointContainingOutputDeviceUIDs_playerPath_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommand:withOptions:toNewEndpointContainingOutputDeviceUIDs:playerPath:timeout:details:completion:");
}

id objc_msgSend_sendCommands(void *a1, const char *a2, ...)
{
  return _[a1 sendCommands];
}

id objc_msgSend_sendContentItemTransaction_request_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendContentItemTransaction:request:playerPath:");
}

id objc_msgSend_sendCustomData_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCustomData:withName:");
}

id objc_msgSend_sendError(void *a1, const char *a2, ...)
{
  return _[a1 sendError];
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:");
}

id objc_msgSend_sendEvent_destination_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:destination:userInfo:");
}

id objc_msgSend_sendEvent_toDevicesOfHomeUser_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:toDevicesOfHomeUser:userInfo:");
}

id objc_msgSend_sendEventForAutoRouteBannerResult_routeCandidate_bundleIdentifier_isOutsideApp_contextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEventForAutoRouteBannerResult:routeCandidate:bundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_sendEventForCallToActionForRouteCandidate_bundleIdentifier_isOutsideApp_contextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEventForCallToActionForRouteCandidate:bundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_sendEventForOneTapSuggestionBannerResult_routeCandidate_bundleIdentifier_isOutsideApp_contextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEventForOneTapSuggestionBannerResult:routeCandidate:bundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_sendEventToCompanion_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEventToCompanion:userInfo:");
}

id objc_msgSend_sendEventToHome_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEventToHome:userInfo:");
}

id objc_msgSend_sendGameControllerEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendGameControllerEvent:");
}

id objc_msgSend_sendLastPlayingDeviceToHome(void *a1, const char *a2, ...)
{
  return _[a1 sendLastPlayingDeviceToHome];
}

id objc_msgSend_sendMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:");
}

id objc_msgSend_sendMessage_queue_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:queue:reply:");
}

id objc_msgSend_sendMessage_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:reply:");
}

id objc_msgSend_sendMessage_timeout_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:timeout:reply:");
}

id objc_msgSend_sendMessage_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:toDestinations:priority:options:identifier:error:");
}

id objc_msgSend_sendMessage_type_destination_session_options_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:type:destination:session:options:priority:");
}

id objc_msgSend_sendMessage_type_destination_session_options_priority_response_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:type:destination:session:options:priority:response:");
}

id objc_msgSend_sendMessageData_toParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessageData:toParticipants:");
}

id objc_msgSend_sendMessageWithType_playerPath_timeout_reason_factory_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessageWithType:playerPath:timeout:reason:factory:completion:");
}

id objc_msgSend_sendPlaybackQueueResponse_forRequest_withMessage_fromNowPlayingClient_toXpcClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPlaybackQueueResponse:forRequest:withMessage:fromNowPlayingClient:toXpcClient:");
}

id objc_msgSend_sendPlaybackSessionUpdateToCompanionCoalesceInterval(void *a1, const char *a2, ...)
{
  return _[a1 sendPlaybackSessionUpdateToCompanionCoalesceInterval];
}

id objc_msgSend_sendProactivePFSQAfterBoot(void *a1, const char *a2, ...)
{
  return _[a1 sendProactivePFSQAfterBoot];
}

id objc_msgSend_sendProactivePFSQOnProactiveASEChange(void *a1, const char *a2, ...)
{
  return _[a1 sendProactivePFSQOnProactiveASEChange];
}

id objc_msgSend_sendProactivePFSQOnUserSelectedASEChange(void *a1, const char *a2, ...)
{
  return _[a1 sendProactivePFSQOnUserSelectedASEChange];
}

id objc_msgSend_sendRemoteControlCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRemoteControlCommand:completion:");
}

id objc_msgSend_sendRemoteControlCommand_toClients_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRemoteControlCommand:toClients:completion:");
}

id objc_msgSend_sendRemoteControlCommand_withCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRemoteControlCommand:withCompletionBlock:");
}

id objc_msgSend_sendRemoteControlMessage_to_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRemoteControlMessage:to:completion:");
}

id objc_msgSend_sendTransportData_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendTransportData:options:");
}

id objc_msgSend_senderAppDisplayID(void *a1, const char *a2, ...)
{
  return _[a1 senderAppDisplayID];
}

id objc_msgSend_senderDefaultGroupUID(void *a1, const char *a2, ...)
{
  return _[a1 senderDefaultGroupUID];
}

id objc_msgSend_senderID(void *a1, const char *a2, ...)
{
  return _[a1 senderID];
}

id objc_msgSend_serialQueue(void *a1, const char *a2, ...)
{
  return _[a1 serialQueue];
}

id objc_msgSend_server(void *a1, const char *a2, ...)
{
  return _[a1 server];
}

id objc_msgSend_serverBoundMessageHandler(void *a1, const char *a2, ...)
{
  return _[a1 serverBoundMessageHandler];
}

id objc_msgSend_serverDiscoveryModeForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverDiscoveryModeForConfiguration:");
}

id objc_msgSend_service(void *a1, const char *a2, ...)
{
  return _[a1 service];
}

id objc_msgSend_serviceConnection(void *a1, const char *a2, ...)
{
  return _[a1 serviceConnection];
}

id objc_msgSend_serviceEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 serviceEndpoint];
}

id objc_msgSend_serviceInterface(void *a1, const char *a2, ...)
{
  return _[a1 serviceInterface];
}

id objc_msgSend_serviceToken(void *a1, const char *a2, ...)
{
  return _[a1 serviceToken];
}

id objc_msgSend_serviceTokenForServiceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceTokenForServiceIdentifier:");
}

id objc_msgSend_serviceType(void *a1, const char *a2, ...)
{
  return _[a1 serviceType];
}

id objc_msgSend_serviceWithDefaultShellEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 serviceWithDefaultShellEndpoint];
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return _[a1 session];
}

id objc_msgSend_session_didChangeState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didChangeState:");
}

id objc_msgSend_session_didConnectWithInitialState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didConnectWithInitialState:");
}

id objc_msgSend_session_didInvalidateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didInvalidateWithError:");
}

id objc_msgSend_session_didReceiveMessageData_fromParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didReceiveMessageData:fromParticipant:");
}

id objc_msgSend_session_didUpdateMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didUpdateMembers:");
}

id objc_msgSend_session_didUpdateParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didUpdateParticipants:");
}

id objc_msgSend_session_didUpdatePendingParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didUpdatePendingParticipants:");
}

id objc_msgSend_session_didUpdateSynchronizedMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didUpdateSynchronizedMetadata:");
}

id objc_msgSend_sessionDidRemoveAllParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionDidRemoveAllParticipants:");
}

id objc_msgSend_sessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sessionIdentifier];
}

id objc_msgSend_sessionManagementScreenVisible(void *a1, const char *a2, ...)
{
  return _[a1 sessionManagementScreenVisible];
}

id objc_msgSend_sessionManager(void *a1, const char *a2, ...)
{
  return _[a1 sessionManager];
}

id objc_msgSend_sessionSecret(void *a1, const char *a2, ...)
{
  return _[a1 sessionSecret];
}

id objc_msgSend_sessionUID(void *a1, const char *a2, ...)
{
  return _[a1 sessionUID];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setASEToLocal(void *a1, const char *a2, ...)
{
  return _[a1 setASEToLocal];
}

id objc_msgSend_setActionImageName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionImageName:");
}

id objc_msgSend_setActivatingForSiri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivatingForSiri:");
}

id objc_msgSend_setActivationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationHandler:");
}

id objc_msgSend_setActiveBannerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveBannerState:");
}

id objc_msgSend_setActiveCategoryVolumeTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveCategoryVolumeTo:");
}

id objc_msgSend_setActiveClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveClients:");
}

id objc_msgSend_setActiveDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveDialog:");
}

id objc_msgSend_setActiveEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveEndpoint:");
}

id objc_msgSend_setActiveOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveOrigin:");
}

id objc_msgSend_setActiveOriginClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveOriginClient:");
}

id objc_msgSend_setActivePasswordDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivePasswordDialog:");
}

id objc_msgSend_setActivePillBannerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivePillBannerState:");
}

id objc_msgSend_setActivePillRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivePillRequest:");
}

id objc_msgSend_setActivePlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivePlayerClient:");
}

id objc_msgSend_setActiveRecommendationActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveRecommendationActivities:");
}

id objc_msgSend_setActiveRecommendations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveRecommendations:");
}

id objc_msgSend_setActiveRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveRequest:");
}

id objc_msgSend_setActiveSession_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveSession:identity:");
}

id objc_msgSend_setActiveSessionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveSessionDidChange:");
}

id objc_msgSend_setActiveSystemEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveSystemEndpoint:");
}

id objc_msgSend_setActiveSystemEndpointOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveSystemEndpointOutputDeviceUID:");
}

id objc_msgSend_setActiveSystemEndpointUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveSystemEndpointUID:");
}

id objc_msgSend_setActiveTransactions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveTransactions:");
}

id objc_msgSend_setActiveUserChangedTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveUserChangedTimer:");
}

id objc_msgSend_setActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivity:");
}

id objc_msgSend_setActivityServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityServer:");
}

id objc_msgSend_setAdvertisingPreferenceEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdvertisingPreferenceEnabled:");
}

id objc_msgSend_setAirPlayActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirPlayActive:");
}

id objc_msgSend_setAirPlayGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirPlayGroupID:");
}

id objc_msgSend_setAirPlayGroupUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirPlayGroupUID:");
}

id objc_msgSend_setAirPlayReceivers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirPlayReceivers:");
}

id objc_msgSend_setAirplayActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirplayActive:");
}

id objc_msgSend_setAirplaySecuritySettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirplaySecuritySettings:");
}

id objc_msgSend_setAlertHeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertHeader:");
}

id objc_msgSend_setAlertMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertMessage:");
}

id objc_msgSend_setAllClusterMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllClusterMembers:");
}

id objc_msgSend_setAllClusteredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllClusteredDevices:");
}

id objc_msgSend_setAllowedAuditTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedAuditTokens:");
}

id objc_msgSend_setAllowedContextUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedContextUpdates:");
}

id objc_msgSend_setAllowedDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedDestinations:");
}

id objc_msgSend_setAllowedTransactionMemory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedTransactionMemory:");
}

id objc_msgSend_setAlternateButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlternateButtonTitle:");
}

id objc_msgSend_setAlwaysAllowUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysAllowUpdates:");
}

id objc_msgSend_setAlwaysLogUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysLogUpdates:");
}

id objc_msgSend_setAmbientForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAmbientForegrounded:");
}

id objc_msgSend_setAppOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppOptions:");
}

id objc_msgSend_setArtwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtwork:");
}

id objc_msgSend_setArtworkHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkHeight:");
}

id objc_msgSend_setArtworkURLTemplates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkURLTemplates:");
}

id objc_msgSend_setArtworkWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkWidth:");
}

id objc_msgSend_setArtworks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworks:");
}

id objc_msgSend_setAse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAse:");
}

id objc_msgSend_setAseNowPlayingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAseNowPlayingController:");
}

id objc_msgSend_setAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssertion:");
}

id objc_msgSend_setAttribute_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttribute:forKey:error:");
}

id objc_msgSend_setAudioStatusItemController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioStatusItemController:");
}

id objc_msgSend_setAutoConnectedEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoConnectedEndpoints:");
}

id objc_msgSend_setAutoConnectingEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoConnectingEndpoints:");
}

id objc_msgSend_setAutomaticRemoteControlConnections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticRemoteControlConnections:");
}

id objc_msgSend_setAvOutpuDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvOutpuDeviceIdentifier:");
}

id objc_msgSend_setAvailableOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvailableOutputDevices:");
}

id objc_msgSend_setBannerCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerCenter:");
}

id objc_msgSend_setBannerControllable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerControllable:");
}

id objc_msgSend_setBannerType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerType:");
}

id objc_msgSend_setBatchedNowPlayingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatchedNowPlayingState:");
}

id objc_msgSend_setBluetoothAddressChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothAddressChangedHandler:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBuildVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuildVersion:");
}

id objc_msgSend_setBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleID:");
}

id objc_msgSend_setBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifier:");
}

id objc_msgSend_setBundleIdentifierAffinity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifierAffinity:");
}

id objc_msgSend_setBundleIdentifierPendingUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifierPendingUpdate:");
}

id objc_msgSend_setBundleVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleVersion:");
}

id objc_msgSend_setBundles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundles:");
}

id objc_msgSend_setBundlesInFocus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundlesInFocus:");
}

id objc_msgSend_setByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromArray:");
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromSet:");
}

id objc_msgSend_setCachedNowPlayingClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedNowPlayingClients:");
}

id objc_msgSend_setCachedNowPlayingContentItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedNowPlayingContentItem:");
}

id objc_msgSend_setCallToAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallToAction:");
}

id objc_msgSend_setCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallback:");
}

id objc_msgSend_setCanAccessAppleMusic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanAccessAppleMusic:");
}

id objc_msgSend_setCanAccessRemoteAssets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanAccessRemoteAssets:");
}

id objc_msgSend_setCanAccessiCloudMusicLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanAccessiCloudMusicLibrary:");
}

id objc_msgSend_setCanBeNowPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanBeNowPlaying:");
}

id objc_msgSend_setCanBeNowPlayingPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanBeNowPlayingPlayer:");
}

id objc_msgSend_setCanBeNowPlayingPlayerTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanBeNowPlayingPlayerTimestamp:");
}

id objc_msgSend_setCanBeNowPlayingTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanBeNowPlayingTimestamp:");
}

id objc_msgSend_setChangeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangeType:");
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClasses:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setClassification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassification:");
}

id objc_msgSend_setClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClient:");
}

id objc_msgSend_setClientBoundMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientBoundMessageHandler:");
}

id objc_msgSend_setClientBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientBundleIdentifier:");
}

id objc_msgSend_setClientConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientConnection:");
}

id objc_msgSend_setClientMessageCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientMessageCallback:");
}

id objc_msgSend_setClientMessagingExpectation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientMessagingExpectation:");
}

id objc_msgSend_setClientProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientProperties:");
}

id objc_msgSend_setClusterAware_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterAware:");
}

id objc_msgSend_setClusterID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterID:");
}

id objc_msgSend_setClusterLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterLeader:");
}

id objc_msgSend_setClusterLeaderID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterLeaderID:");
}

id objc_msgSend_setClusterLeaderOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterLeaderOperations:");
}

id objc_msgSend_setClusterStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterStatus:");
}

id objc_msgSend_setClusterType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterType:");
}

id objc_msgSend_setClusteredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusteredDevices:");
}

id objc_msgSend_setCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommand:");
}

id objc_msgSend_setCommandClientsRestriction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandClientsRestriction:");
}

id objc_msgSend_setCommandDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandDictionary:");
}

id objc_msgSend_setCommandString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandString:");
}

id objc_msgSend_setCommandType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandType:");
}

id objc_msgSend_setCommunicationChannelDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommunicationChannelDelegate:");
}

id objc_msgSend_setCompanionEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionEndpoint:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setCompletionBlockDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlockDictionary:");
}

id objc_msgSend_setComputedNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setComputedNowPlayingClient:");
}

id objc_msgSend_setComputerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setComputerName:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConfiguredClusterSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguredClusterSize:");
}

id objc_msgSend_setConnectOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectOptions:");
}

id objc_msgSend_setConnectUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectUserInfo:");
}

id objc_msgSend_setConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnected:");
}

id objc_msgSend_setConnectedClientAuditTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectedClientAuditTokens:");
}

id objc_msgSend_setConnectedExternalDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectedExternalDevices:");
}

id objc_msgSend_setConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnection:");
}

id objc_msgSend_setConnectionAttemptDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionAttemptDate:");
}

id objc_msgSend_setConnectionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionError:");
}

id objc_msgSend_setConnectionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionHandler:");
}

id objc_msgSend_setConnectionRecoveryBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionRecoveryBehavior:");
}

id objc_msgSend_setConnectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionState:");
}

id objc_msgSend_setConnectionState_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionState:error:");
}

id objc_msgSend_setConnectionStateCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionStateCallback:");
}

id objc_msgSend_setConnectionStateCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionStateCallback:withQueue:");
}

id objc_msgSend_setConnectionStateError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionStateError:");
}

id objc_msgSend_setConnections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnections:");
}

id objc_msgSend_setConservativelyFiltered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConservativelyFiltered:");
}

id objc_msgSend_setContainsLeaderInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainsLeaderInfo:");
}

id objc_msgSend_setContentItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentItem:");
}

id objc_msgSend_setContentItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentItems:");
}

id objc_msgSend_setContentItemsArtwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentItemsArtwork:");
}

id objc_msgSend_setContextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextIdentifier:");
}

id objc_msgSend_setContinuousPlaybackDetectionTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContinuousPlaybackDetectionTimer:");
}

id objc_msgSend_setControlCenterForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlCenterForegrounded:");
}

id objc_msgSend_setConversationDetectionEnabled_outputDeviceUID_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConversationDetectionEnabled:outputDeviceUID:queue:completion:");
}

id objc_msgSend_setCryptoEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCryptoEnabled:");
}

id objc_msgSend_setCurrentGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentGroupSession:");
}

id objc_msgSend_setCurrentMediaUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentMediaUserState:");
}

id objc_msgSend_setCurrentPersonalDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPersonalDeviceUIDs:");
}

id objc_msgSend_setCurrentPlaybackSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPlaybackSessionIdentifier:");
}

id objc_msgSend_setCurrentPlaybackSessionTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPlaybackSessionTypes:");
}

id objc_msgSend_setCurrentTaskAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTaskAssertion:");
}

id objc_msgSend_setCustomDataCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomDataCallback:");
}

id objc_msgSend_setCustomDataCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomDataCallback:withQueue:");
}

id objc_msgSend_setCustomOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomOrigin:");
}

id objc_msgSend_setDaemonClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDaemonClient:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDate:");
}

id objc_msgSend_setDateCreated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateCreated:");
}

id objc_msgSend_setDeclaringAirplayActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeclaringAirplayActive:");
}

id objc_msgSend_setDefaultButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultButtonTitle:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:queue:");
}

id objc_msgSend_setDelegateQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegateQueue:");
}

id objc_msgSend_setDemoteWhenSyncingToCompanion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDemoteWhenSyncingToCompanion:");
}

id objc_msgSend_setDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescriptor:");
}

id objc_msgSend_setDesignatedGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesignatedGroupLeader:");
}

id objc_msgSend_setDesignatedGroupLeaderWhenContextEmpty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesignatedGroupLeaderWhenContextEmpty:");
}

id objc_msgSend_setDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestination:");
}

id objc_msgSend_setDestinationAppDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationAppDisplayID:");
}

id objc_msgSend_setDestinationAppProcessID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationAppProcessID:");
}

id objc_msgSend_setDestinationEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationEndpoint:");
}

id objc_msgSend_setDestinationGroupUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationGroupUID:");
}

id objc_msgSend_setDestinationOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationOutputDeviceUID:");
}

id objc_msgSend_setDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevice:");
}

id objc_msgSend_setDeviceClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceClass:");
}

id objc_msgSend_setDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceID:");
}

id objc_msgSend_setDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceInfo:");
}

id objc_msgSend_setDeviceInfoCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceInfoCallback:");
}

id objc_msgSend_setDeviceInfoChangedCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceInfoChangedCallback:withQueue:");
}

id objc_msgSend_setDeviceLost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceLost:");
}

id objc_msgSend_setDeviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceName:");
}

id objc_msgSend_setDevicePlaybackSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevicePlaybackSessionID:");
}

id objc_msgSend_setDeviceSpecificUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceSpecificUserInfo:");
}

id objc_msgSend_setDeviceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceState:");
}

id objc_msgSend_setDeviceSubType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceSubType:");
}

id objc_msgSend_setDeviceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceType:");
}

id objc_msgSend_setDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceUID:");
}

id objc_msgSend_setDeviceUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceUpdated:");
}

id objc_msgSend_setDevicesInGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevicesInGroup:");
}

id objc_msgSend_setDiagnosticInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiagnosticInfo:");
}

id objc_msgSend_setDisableDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableDuration:");
}

id objc_msgSend_setDisconnectTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisconnectTimer:");
}

id objc_msgSend_setDisconnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisconnected:");
}

id objc_msgSend_setDiscoverableGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverableGroupLeader:");
}

id objc_msgSend_setDiscoveredSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveredSession:");
}

id objc_msgSend_setDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:");
}

id objc_msgSend_setDiscoveryMode_forClientIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:forClientIdentifiers:");
}

id objc_msgSend_setDiscoveryMode_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:forConfiguration:");
}

id objc_msgSend_setDiscoveryMode_forToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:forToken:");
}

id objc_msgSend_setDiscoveryOutputDevicesChangedCallback_forToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryOutputDevicesChangedCallback:forToken:");
}

id objc_msgSend_setDiscoverySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverySession:");
}

id objc_msgSend_setDiscoverySessionConfigurationsResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverySessionConfigurationsResults:");
}

id objc_msgSend_setDiscoverySessions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverySessions:");
}

id objc_msgSend_setDiscoveryToken_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryToken:forConfiguration:");
}

id objc_msgSend_setDiscoveryTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryTransaction:");
}

id objc_msgSend_setDismissHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissHandler:");
}

id objc_msgSend_setDismissOverlaysOnLockscreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissOverlaysOnLockscreen:");
}

id objc_msgSend_setDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDispatchQueue:");
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayName:");
}

id objc_msgSend_setDisplayOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayOn:");
}

id objc_msgSend_setDistantPersonalOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistantPersonalOutputDevices:");
}

id objc_msgSend_setDonatingAppBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDonatingAppBundleID:");
}

id objc_msgSend_setDonatingAppEligible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDonatingAppEligible:");
}

id objc_msgSend_setDonationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDonationQueue:");
}

id objc_msgSend_setDsidToPendingCompletionMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDsidToPendingCompletionMap:");
}

id objc_msgSend_setElectedPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setElectedPlayer:");
}

id objc_msgSend_setElectedPlayerReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setElectedPlayerReason:");
}

id objc_msgSend_setEligibilityStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEligibilityStatus:");
}

id objc_msgSend_setEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndDate:");
}

id objc_msgSend_setEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpoint:");
}

id objc_msgSend_setEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpoints:");
}

id objc_msgSend_setEnqueuedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnqueuedCommands:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setError:");
}

id objc_msgSend_setEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEvent:");
}

id objc_msgSend_setEventReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventReason:");
}

id objc_msgSend_setEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEvents:");
}

id objc_msgSend_setExpectedClientAuditTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpectedClientAuditTokens:");
}

id objc_msgSend_setExpirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpirationDate:");
}

id objc_msgSend_setExplicitNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExplicitNowPlayingClient:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalDevice:");
}

id objc_msgSend_setExternalDeviceListenerEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalDeviceListenerEndpoint:");
}

id objc_msgSend_setFirewall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirewall:");
}

id objc_msgSend_setFocusMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFocusMonitor:");
}

id objc_msgSend_setForceModalAlertAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceModalAlertAppearance:");
}

id objc_msgSend_setFrontmostClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrontmostClient:");
}

id objc_msgSend_setGroupContainsDiscoverableGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupContainsDiscoverableGroupLeader:");
}

id objc_msgSend_setGroupContainsGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupContainsGroupLeader:");
}

id objc_msgSend_setGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupID:");
}

id objc_msgSend_setGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupLeader:");
}

id objc_msgSend_setGroupLeaderOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupLeaderOperations:");
}

id objc_msgSend_setGroupLogicalDeviceCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupLogicalDeviceCount:");
}

id objc_msgSend_setGroupName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupName:");
}

id objc_msgSend_setGroupSessionCoordinatorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSessionCoordinatorState:");
}

id objc_msgSend_setGroupSessionDiscoveryEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSessionDiscoveryEnabled:");
}

id objc_msgSend_setGroupSessionManagerAdvertiseReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSessionManagerAdvertiseReason:");
}

id objc_msgSend_setGroupSessionsSupportedForAccountRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSessionsSupportedForAccountRegion:");
}

id objc_msgSend_setGroupUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupUID:");
}

id objc_msgSend_setGroupedDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupedDevices:");
}

id objc_msgSend_setHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandle:");
}

id objc_msgSend_setHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandler:");
}

id objc_msgSend_setHardwareRemoteBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHardwareRemoteBehavior:");
}

id objc_msgSend_setHasAcceptedDisplayNameAcknowledgement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasAcceptedDisplayNameAcknowledgement:");
}

id objc_msgSend_setHasAcceptedPrivacyAcknowledgement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasAcceptedPrivacyAcknowledgement:");
}

id objc_msgSend_setHasAttemptedToConnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasAttemptedToConnect:");
}

id objc_msgSend_setHasConnectionAttemptCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasConnectionAttemptCompleted:");
}

id objc_msgSend_setHasDeferredDisconnectionDueToDeviceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasDeferredDisconnectionDueToDeviceState:");
}

id objc_msgSend_setHasGroupSessionLowPowerAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasGroupSessionLowPowerAssertion:");
}

id objc_msgSend_setHasGroupSessionLowPowerPlatterAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasGroupSessionLowPowerPlatterAssertion:");
}

id objc_msgSend_setHasGroupSessionNearbyAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasGroupSessionNearbyAssertion:");
}

id objc_msgSend_setHasIsVolumeControlAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasIsVolumeControlAvailable:");
}

id objc_msgSend_setHasLockScreenAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasLockScreenAssertion:");
}

id objc_msgSend_setHasLockScreenControlsAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasLockScreenControlsAssertion:");
}

id objc_msgSend_setHasLockScreenRecommendationAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasLockScreenRecommendationAssertion:");
}

id objc_msgSend_setHasNowPlayingActivityAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasNowPlayingActivityAssertion:");
}

id objc_msgSend_setHasPresentedForCurrentPersonalDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPresentedForCurrentPersonalDevices:");
}

id objc_msgSend_setHasQuickControlsAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasQuickControlsAssertion:");
}

id objc_msgSend_setHasRequestedLegacyNowPlayingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasRequestedLegacyNowPlayingInfo:");
}

id objc_msgSend_setHasRequestedSupportedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasRequestedSupportedCommands:");
}

id objc_msgSend_setHasRouteRecommendationAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasRouteRecommendationAssertion:");
}

id objc_msgSend_setHasScreenMirroringAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasScreenMirroringAssertion:");
}

id objc_msgSend_setHasScreenMirroringQuickControlsAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasScreenMirroringQuickControlsAssertion:");
}

id objc_msgSend_setHasTriggered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasTriggered:");
}

id objc_msgSend_setHasVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasVolume:");
}

id objc_msgSend_setHasVolumeCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasVolumeCapabilities:");
}

id objc_msgSend_setHasVolumeMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasVolumeMuted:");
}

id objc_msgSend_setHomeScreenForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeScreenForegrounded:");
}

id objc_msgSend_setHomepodDemoMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomepodDemoMode:");
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHost:");
}

id objc_msgSend_setHostDeviceClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostDeviceClass:");
}

id objc_msgSend_setHostedDiscoverySessions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostedDiscoverySessions:");
}

id objc_msgSend_setHostedExternalDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostedExternalDevices:");
}

id objc_msgSend_setHostedRouteDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostedRouteDiscoveryMode:");
}

id objc_msgSend_setHostedSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostedSessionIdentifier:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentity:");
}

id objc_msgSend_setIdentityCreatedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentityCreatedHandler:");
}

id objc_msgSend_setIdentityDeletedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentityDeletedHandler:");
}

id objc_msgSend_setIdentitySupportsCollaboration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentitySupportsCollaboration:");
}

id objc_msgSend_setIdsAccountIsValid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsAccountIsValid:");
}

id objc_msgSend_setIdsIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsIdentifier:");
}

id objc_msgSend_setIncludeMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludeMetadata:");
}

id objc_msgSend_setIncludesPeerToPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesPeerToPeer:");
}

id objc_msgSend_setInferredNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInferredNowPlayingClient:");
}

id objc_msgSend_setInferredPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInferredPlaybackState:");
}

id objc_msgSend_setInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterface:");
}

id objc_msgSend_setInterfaceTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterfaceTarget:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInvalidated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidated:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setIsAdvertising_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAdvertising:");
}

id objc_msgSend_setIsAirPlayReceiverSessionActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAirPlayReceiverSessionActive:");
}

id objc_msgSend_setIsBackgroundActivityActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsBackgroundActivityActive:");
}

id objc_msgSend_setIsCallingClientCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsCallingClientCallback:");
}

id objc_msgSend_setIsEligibleApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleApp:");
}

id objc_msgSend_setIsEligibleForHostingGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleForHostingGroupSession:");
}

id objc_msgSend_setIsEligibleForHostingGroupSessionExcludingAcknowledgements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleForHostingGroupSessionExcludingAcknowledgements:");
}

id objc_msgSend_setIsEligibleForJoiningGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleForJoiningGroupSession:");
}

id objc_msgSend_setIsFullSubscriber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFullSubscriber:");
}

id objc_msgSend_setIsGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsGroupLeader:");
}

id objc_msgSend_setIsLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLocal:");
}

id objc_msgSend_setIsLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLocalDevice:");
}

id objc_msgSend_setIsLowPowerMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLowPowerMode:");
}

id objc_msgSend_setIsManateeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsManateeEnabled:");
}

id objc_msgSend_setIsMinor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMinor:");
}

id objc_msgSend_setIsMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMuted:");
}

id objc_msgSend_setIsMuted_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMuted:error:");
}

id objc_msgSend_setIsOutsideApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsOutsideApp:");
}

id objc_msgSend_setIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPlaying:");
}

id objc_msgSend_setIsProxyAdvertising_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsProxyAdvertising:");
}

id objc_msgSend_setIsProxyGroupPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsProxyGroupPlayer:");
}

id objc_msgSend_setIsQuerying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsQuerying:");
}

id objc_msgSend_setIsRemoteControllable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsRemoteControllable:");
}

id objc_msgSend_setIsStatusItemActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsStatusItemActive:");
}

id objc_msgSend_setIsUpdatingLowPowerMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUpdatingLowPowerMode:");
}

id objc_msgSend_setIsVolumeControlAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsVolumeControlAvailable:");
}

id objc_msgSend_setJoiningSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setJoiningSession:");
}

id objc_msgSend_setKeyboardType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardType:");
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabel:");
}

id objc_msgSend_setLastASEEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastASEEvent:");
}

id objc_msgSend_setLastBootUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastBootUUID:");
}

id objc_msgSend_setLastConnectionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastConnectionError:");
}

id objc_msgSend_setLastDonatedPickerChoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastDonatedPickerChoice:");
}

id objc_msgSend_setLastFetchAttemptToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastFetchAttemptToken:");
}

id objc_msgSend_setLastKnownBluetoothAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastKnownBluetoothAddress:");
}

id objc_msgSend_setLastNotPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastNotPlayingDate:");
}

id objc_msgSend_setLastPlaybackStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPlaybackStates:");
}

id objc_msgSend_setLastPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPlayingDate:");
}

id objc_msgSend_setLastSessionEventDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSessionEventDate:");
}

id objc_msgSend_setLastSupportedClusterType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSupportedClusterType:");
}

id objc_msgSend_setLastSupportedProtocolMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSupportedProtocolMessageType:");
}

id objc_msgSend_setLastUnusedAutoRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUnusedAutoRoute:");
}

id objc_msgSend_setLastUnusedAutoRouteBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUnusedAutoRouteBundleIdentifier:");
}

id objc_msgSend_setLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeader:");
}

id objc_msgSend_setLegacyAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLegacyAssertion:");
}

id objc_msgSend_setLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLength:");
}

id objc_msgSend_setLinkAgent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkAgent:");
}

id objc_msgSend_setListeningMode_outputDeviceUID_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListeningMode:outputDeviceUID:queue:completion:");
}

id objc_msgSend_setLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocal:");
}

id objc_msgSend_setLocalEndpointConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalEndpointConnection:");
}

id objc_msgSend_setLocalHostedInvalidationPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalHostedInvalidationPlayerPath:");
}

id objc_msgSend_setLocalInvalidationXPCClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalInvalidationXPCClient:");
}

id objc_msgSend_setLocalLastPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalLastPlayingDate:");
}

id objc_msgSend_setLocalMusicIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalMusicIdentity:");
}

id objc_msgSend_setLocalNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalNowPlayingClient:");
}

id objc_msgSend_setLocalNowPlayingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalNowPlayingController:");
}

id objc_msgSend_setLocalOriginClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalOriginClient:");
}

id objc_msgSend_setLocalPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalPlaybackState:");
}

id objc_msgSend_setLocalReceiverPairingIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalReceiverPairingIdentity:");
}

id objc_msgSend_setLocalSystemEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalSystemEndpoint:");
}

id objc_msgSend_setLocalizedModelName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedModelName:");
}

id objc_msgSend_setLocallyHosted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocallyHosted:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setLockScreenControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenControl:");
}

id objc_msgSend_setLockScreenForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenForegrounded:");
}

id objc_msgSend_setLockScreenPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenPlayerPath:");
}

id objc_msgSend_setLockScreenVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenVisible:");
}

id objc_msgSend_setLockScreenWidgetActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenWidgetActive:");
}

id objc_msgSend_setLockScreenWidgetVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenWidgetVisible:");
}

id objc_msgSend_setLowPowerDeferralTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLowPowerDeferralTimer:");
}

id objc_msgSend_setLowPowerError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLowPowerError:");
}

id objc_msgSend_setMaintainReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaintainReason:");
}

id objc_msgSend_setManagedConfigurationDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManagedConfigurationDeviceIdentifier:");
}

id objc_msgSend_setManateeChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManateeChangedHandler:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMediaAccountHostingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaAccountHostingState:");
}

id objc_msgSend_setMediaAccountJoiningState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaAccountJoiningState:");
}

id objc_msgSend_setMediaBundlesInFocus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaBundlesInFocus:");
}

id objc_msgSend_setMediaControls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaControls:");
}

id objc_msgSend_setMediaRemoteData_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaRemoteData:completionHandler:");
}

id objc_msgSend_setMediaServerController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaServerController:");
}

id objc_msgSend_setMediaSuggestionDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaSuggestionDeviceID:");
}

id objc_msgSend_setMediaUserStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaUserStates:");
}

id objc_msgSend_setMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMembers:");
}

id objc_msgSend_setMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageHandler:");
}

id objc_msgSend_setMessageHandler_forType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageHandler:forType:");
}

id objc_msgSend_setMessageHandler_forType_destination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageHandler:forType:destination:session:");
}

id objc_msgSend_setMessageProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageProxy:");
}

id objc_msgSend_setMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadata:");
}

id objc_msgSend_setMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMode:");
}

id objc_msgSend_setModelID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelID:");
}

id objc_msgSend_setModifyOutputContextImplementation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifyOutputContextImplementation:");
}

id objc_msgSend_setMuteUntilFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMuteUntilFinished:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNameCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameCallback:");
}

id objc_msgSend_setNativeOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNativeOutputDevice:");
}

id objc_msgSend_setNotAdvertisingReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotAdvertisingReason:");
}

id objc_msgSend_setNotProxyAdvertisingReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotProxyAdvertisingReason:");
}

id objc_msgSend_setNotificationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationQueue:");
}

id objc_msgSend_setNotificationToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationToken:");
}

id objc_msgSend_setNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotifications:");
}

id objc_msgSend_setNowPlayingActivityAssertionEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingActivityAssertionEndDate:");
}

id objc_msgSend_setNowPlayingActivityAssertionEndTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingActivityAssertionEndTimer:");
}

id objc_msgSend_setNowPlayingActivityUserIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingActivityUserIdentifier:");
}

id objc_msgSend_setNowPlayingAirPlaySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingAirPlaySession:");
}

id objc_msgSend_setNowPlayingAppBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingAppBundleID:");
}

id objc_msgSend_setNowPlayingApplicationDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingApplicationDisplayID:");
}

id objc_msgSend_setNowPlayingApplicationIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingApplicationIsPlaying:");
}

id objc_msgSend_setNowPlayingApplicationPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingApplicationPID:");
}

id objc_msgSend_setNowPlayingApplications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingApplications:");
}

id objc_msgSend_setNowPlayingAudioFormatContentInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingAudioFormatContentInfos:");
}

id objc_msgSend_setNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingClient:");
}

id objc_msgSend_setNowPlayingDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingDataSource:");
}

id objc_msgSend_setNowPlayingPlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingPlayerClient:");
}

id objc_msgSend_setNowPlayingSessions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingSessions:");
}

id objc_msgSend_setNowPlayingStateMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingStateMonitor:");
}

id objc_msgSend_setNumberOfDevicesOnLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfDevicesOnLocal:");
}

id objc_msgSend_setNumberOfDiscoveredOutputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfDiscoveredOutputDeviceUIDs:");
}

id objc_msgSend_setNumberOfEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfEndpoints:");
}

id objc_msgSend_setNumberOfErrorsAtCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfErrorsAtCompletion:");
}

id objc_msgSend_setNumberOfErrorsAtTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfErrorsAtTimeout:");
}

id objc_msgSend_setNumberOfMissingOutputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfMissingOutputDeviceUIDs:");
}

id objc_msgSend_setNumberOfPendingAtTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfPendingAtTimeout:");
}

id objc_msgSend_setNumberOfSuccessAtCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfSuccessAtCompletion:");
}

id objc_msgSend_setNumberOfSuccessAtTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfSuccessAtTimeout:");
}

id objc_msgSend_setNumberOfUndesiredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfUndesiredDevices:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObjects:");
}

id objc_msgSend_setObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObserver:");
}

id objc_msgSend_setObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservers:");
}

id objc_msgSend_setOobKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOobKeys:");
}

id objc_msgSend_setOperationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationType:");
}

id objc_msgSend_setOperationTypeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationTypeString:");
}

id objc_msgSend_setOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperations:");
}

id objc_msgSend_setOptimisticDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptimisticDevices:");
}

id objc_msgSend_setOptimisticRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptimisticRoute:");
}

id objc_msgSend_setOptionValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptionValue:forKey:");
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptions:");
}

id objc_msgSend_setOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrigin:");
}

id objc_msgSend_setOriginClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginClient:");
}

id objc_msgSend_setOriginClient_withChangeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginClient:withChangeType:");
}

id objc_msgSend_setOriginClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginClients:");
}

id objc_msgSend_setOriginForwarders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginForwarders:");
}

id objc_msgSend_setOriginUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginUID:");
}

id objc_msgSend_setOutputContextForLocalDeviceDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputContextForLocalDeviceDataSource:");
}

id objc_msgSend_setOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevice:");
}

id objc_msgSend_setOutputDevice_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevice:options:");
}

id objc_msgSend_setOutputDevice_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevice:options:completionHandler:");
}

id objc_msgSend_setOutputDeviceModifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceModifications:");
}

id objc_msgSend_setOutputDeviceMute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceMute:");
}

id objc_msgSend_setOutputDeviceNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceNames:");
}

id objc_msgSend_setOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceUID:");
}

id objc_msgSend_setOutputDeviceVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceVolume:");
}

id objc_msgSend_setOutputDeviceVolume_outputDevice_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceVolume:outputDevice:details:queue:completion:");
}

id objc_msgSend_setOutputDeviceVolume_outputDeviceUID_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceVolume:outputDeviceUID:details:queue:completion:");
}

id objc_msgSend_setOutputDeviceVolumeCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceVolumeCapabilities:");
}

id objc_msgSend_setOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevices:");
}

id objc_msgSend_setOutputDevices_initiator_withCallbackQueue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevices:initiator:withCallbackQueue:block:");
}

id objc_msgSend_setOutputDevices_initiator_withReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevices:initiator:withReplyQueue:completion:");
}

id objc_msgSend_setOutputDevices_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevices:options:completionHandler:");
}

id objc_msgSend_setOutputDevicesRemovedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevicesRemovedCallback:");
}

id objc_msgSend_setOutputDevicesRemovedCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevicesRemovedCallback:withQueue:");
}

id objc_msgSend_setOutputDevicesUpdatedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevicesUpdatedCallback:");
}

id objc_msgSend_setOutputDevicesUpdatedCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevicesUpdatedCallback:withQueue:");
}

id objc_msgSend_setOverrideClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideClient:");
}

id objc_msgSend_setOverrideTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideTimer:");
}

id objc_msgSend_setPairedDeviceSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedDeviceSync:");
}

id objc_msgSend_setPairedPeerRemovedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedPeerRemovedHandler:");
}

id objc_msgSend_setPairingAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingAllowed:");
}

id objc_msgSend_setPairingAllowedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingAllowedCallback:");
}

id objc_msgSend_setPairingCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingCallback:");
}

id objc_msgSend_setParentGroupContainsDiscoverableGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentGroupContainsDiscoverableGroupLeader:");
}

id objc_msgSend_setParentGroupContainsDiscoverableLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentGroupContainsDiscoverableLeader:");
}

id objc_msgSend_setParentGroupIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentGroupIdentifier:");
}

id objc_msgSend_setParticipantDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantDataSource:");
}

id objc_msgSend_setParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipants:");
}

id objc_msgSend_setPauseOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPauseOperation:");
}

id objc_msgSend_setPausePredictedRoutesTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPausePredictedRoutesTimer:");
}

id objc_msgSend_setPending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPending:");
}

id objc_msgSend_setPendingCompletionsPerOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingCompletionsPerOutputDeviceUID:");
}

id objc_msgSend_setPendingRelayEndpointReplies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingRelayEndpointReplies:");
}

id objc_msgSend_setPepper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPepper:");
}

id objc_msgSend_setPepperExpirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPepperExpirationDate:");
}

id objc_msgSend_setPepperExpirationTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPepperExpirationTimer:");
}

id objc_msgSend_setPerPlayerCanBeNowPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerPlayerCanBeNowPlaying:");
}

id objc_msgSend_setPersonalDeviceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalDeviceState:");
}

id objc_msgSend_setPersonalDeviceWasRecentlyAttached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalDeviceWasRecentlyAttached:");
}

id objc_msgSend_setPickedRoute_withPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickedRoute:withPassword:");
}

id objc_msgSend_setPickedRoute_withPassword_forSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickedRoute:withPassword:forSource:");
}

id objc_msgSend_setPickedRoute_withPassword_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickedRoute:withPassword:options:");
}

id objc_msgSend_setPickedSystemRoute_withPassword_forSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickedSystemRoute:withPassword:forSource:");
}

id objc_msgSend_setPictureInPictureEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPictureInPictureEnabled:");
}

id objc_msgSend_setPillCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPillCenter:");
}

id objc_msgSend_setPillCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPillCompletion:");
}

id objc_msgSend_setPinPairingToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPinPairingToken:");
}

id objc_msgSend_setPlaybackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackQueue:");
}

id objc_msgSend_setPlaybackQueueCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackQueueCapabilities:");
}

id objc_msgSend_setPlaybackSessionMigrateRequestCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackSessionMigrateRequestCallback:");
}

id objc_msgSend_setPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackState:");
}

id objc_msgSend_setPlaybackStateTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackStateTimestamp:");
}

id objc_msgSend_setPlaybackTimeoutTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackTimeoutTimer:");
}

id objc_msgSend_setPlaybackTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackTimer:");
}

id objc_msgSend_setPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayer:");
}

id objc_msgSend_setPlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayerClient:");
}

id objc_msgSend_setPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayerPath:");
}

id objc_msgSend_setPlayerPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayerPlaybackState:");
}

id objc_msgSend_setPlayerProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayerProperties:");
}

id objc_msgSend_setPopulatesExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPopulatesExternalDevice:");
}

id objc_msgSend_setPredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicates:");
}

id objc_msgSend_setPreferredClusterLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredClusterLeader:");
}

id objc_msgSend_setPresentedBundleIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentedBundleIdentifiers:");
}

id objc_msgSend_setPresentingAppBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentingAppBundleID:");
}

id objc_msgSend_setPreviousClusterLeaderID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousClusterLeaderID:");
}

id objc_msgSend_setPreviousGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousGroupID:");
}

id objc_msgSend_setPreviousMaintainReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousMaintainReason:");
}

id objc_msgSend_setPreviousPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousPlayerPath:");
}

id objc_msgSend_setPrimaryUIApplicationBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryUIApplicationBundleIdentifier:");
}

id objc_msgSend_setPrimaryUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryUID:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setPrivacyObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrivacyObserver:");
}

id objc_msgSend_setProcessHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessHandle:");
}

id objc_msgSend_setProcessIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessIdentifier:");
}

id objc_msgSend_setProcessSuspended_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessSuspended:");
}

id objc_msgSend_setProcessUserIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessUserIdentifier:");
}

id objc_msgSend_setProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProtocol:");
}

id objc_msgSend_setProtocolVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProtocolVersion:");
}

id objc_msgSend_setProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProvider:");
}

id objc_msgSend_setProxyGroupPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxyGroupPlayer:");
}

id objc_msgSend_setPushStateActivePlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStateActivePlayerClient:");
}

id objc_msgSend_setPushStateClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStateClient:");
}

id objc_msgSend_setPushStateHasNowPlayingData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStateHasNowPlayingData:");
}

id objc_msgSend_setPushStateIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStateIsPlaying:");
}

id objc_msgSend_setPushStatePictureInPictureEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStatePictureInPictureEnabled:");
}

id objc_msgSend_setPushStatePlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStatePlaybackState:");
}

id objc_msgSend_setPushStatePlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStatePlayer:");
}

id objc_msgSend_setQos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQos:");
}

id objc_msgSend_setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueue:");
}

id objc_msgSend_setRapportIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRapportIdentifier:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setRecentlyDismissedSystemEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecentlyDismissedSystemEndpoints:");
}

id objc_msgSend_setRecommendationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecommendationType:");
}

id objc_msgSend_setRecommendedRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecommendedRoutes:");
}

id objc_msgSend_setRecordingEndpointClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordingEndpointClients:");
}

id objc_msgSend_setRecordingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordingState:");
}

id objc_msgSend_setRegisteredCallbacks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredCallbacks:");
}

id objc_msgSend_setRegisteredKeyboardUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredKeyboardUpdates:");
}

id objc_msgSend_setRegisteredToNowPlayingUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredToNowPlayingUpdates:");
}

id objc_msgSend_setRegisteredToOutputDeviceUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredToOutputDeviceUpdates:");
}

id objc_msgSend_setRegisteredToSystemEndpointUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredToSystemEndpointUpdates:");
}

id objc_msgSend_setRegisteredToVolumeUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredToVolumeUpdates:");
}

id objc_msgSend_setRelayConnectionsToSecondaries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelayConnectionsToSecondaries:");
}

id objc_msgSend_setRelevantOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelevantOutputDevices:");
}

id objc_msgSend_setRemoteASEDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteASEDeviceInfo:");
}

id objc_msgSend_setRemoteASEState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteASEState:");
}

id objc_msgSend_setRemoteArtworks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteArtworks:");
}

id objc_msgSend_setRemoteControlContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteControlContexts:");
}

id objc_msgSend_setRemoteControlInterfaceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteControlInterfaceID:");
}

id objc_msgSend_setRemoteControlService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteControlService:");
}

id objc_msgSend_setRemoteInvalidationExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteInvalidationExternalDevice:");
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteObjectInterface:");
}

id objc_msgSend_setRemotePendingParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemotePendingParticipants:");
}

id objc_msgSend_setRemoteUIService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteUIService:");
}

id objc_msgSend_setRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRenderingMode:");
}

id objc_msgSend_setReplyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReplyIdentifier:");
}

id objc_msgSend_setRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequest:");
}

id objc_msgSend_setRequestClientProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestClientProperties:");
}

id objc_msgSend_setRequestContainsLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestContainsLocal:");
}

id objc_msgSend_setRequestContainsLocalDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestContainsLocalDeviceUID:");
}

id objc_msgSend_setRequestForCompanionOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestForCompanionOrigin:");
}

id objc_msgSend_setRequestForCurrentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestForCurrentConfiguration:");
}

id objc_msgSend_setRequestForLocalOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestForLocalOrigin:");
}

id objc_msgSend_setRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestID:");
}

id objc_msgSend_setRequestIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestIdentifier:");
}

id objc_msgSend_setRequestLastPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestLastPlayingDate:");
}

id objc_msgSend_setRequestPlaybackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestPlaybackQueue:");
}

id objc_msgSend_setRequestPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestPlaybackState:");
}

id objc_msgSend_setRequestSupportedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestSupportedCommands:");
}

id objc_msgSend_setRequester_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequester:");
}

id objc_msgSend_setReturnPartialResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnPartialResults:");
}

id objc_msgSend_setRotatingSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRotatingSessionIdentifier:");
}

id objc_msgSend_setRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoute:");
}

id objc_msgSend_setRouteDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteDiscoveryMode:");
}

id objc_msgSend_setRouteIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteIdentifier:");
}

id objc_msgSend_setRouteIsValidForHosting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteIsValidForHosting:");
}

id objc_msgSend_setRoutePickerForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoutePickerForegrounded:");
}

id objc_msgSend_setRouteRecommendationActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteRecommendationActivities:");
}

id objc_msgSend_setRouteRecommendationIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteRecommendationIdentifiers:");
}

id objc_msgSend_setRouteRecommendationRelevanceScore_activityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteRecommendationRelevanceScore:activityIdentifier:");
}

id objc_msgSend_setRouteSymbolName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteSymbolName:");
}

id objc_msgSend_setRouteType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteType:");
}

id objc_msgSend_setRouteUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteUID:");
}

id objc_msgSend_setRoutedBackgroundActivityManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoutedBackgroundActivityManager:");
}

id objc_msgSend_setRoutingContextID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoutingContextID:");
}

id objc_msgSend_setRoutingContextUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoutingContextUID:");
}

id objc_msgSend_setSearchEndpointsForOutputDeviceUIDImplementation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchEndpointsForOutputDeviceUIDImplementation:");
}

id objc_msgSend_setSecure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecure:");
}

id objc_msgSend_setSelectionReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionReason:");
}

id objc_msgSend_setSenderAppDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSenderAppDisplayID:");
}

id objc_msgSend_setSenderDefaultGroupUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSenderDefaultGroupUID:");
}

id objc_msgSend_setServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServer:");
}

id objc_msgSend_setServerBoundMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerBoundMessageHandler:");
}

id objc_msgSend_setServerDiscoveryMode_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerDiscoveryMode:forConfiguration:");
}

id objc_msgSend_setServiceEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceEndpoint:");
}

id objc_msgSend_setServiceQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceQuality:");
}

id objc_msgSend_setSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSession:");
}

id objc_msgSend_setSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionIdentifier:");
}

id objc_msgSend_setSessionUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionUID:");
}

id objc_msgSend_setSharedQueueVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedQueueVersion:");
}

id objc_msgSend_setShouldConsiderSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldConsiderSuggestions:");
}

id objc_msgSend_setShouldFinishPresentationForCurrentPersonalDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldFinishPresentationForCurrentPersonalDevices:");
}

id objc_msgSend_setShouldLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldLog:");
}

id objc_msgSend_setShouldModifyPredictedRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldModifyPredictedRoutes:");
}

id objc_msgSend_setShouldNotPauseIfLastDeviceRemoved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldNotPauseIfLastDeviceRemoved:");
}

id objc_msgSend_setShouldRun_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldRun:");
}

id objc_msgSend_setShouldUseSystemAuthenticationPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldUseSystemAuthenticationPrompt:");
}

id objc_msgSend_setShouldVerboselyLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldVerboselyLog:");
}

id objc_msgSend_setShouldWaitForUnanimousEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldWaitForUnanimousEndpoints:");
}

id objc_msgSend_setShowAsTopmost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowAsTopmost:");
}

id objc_msgSend_setShowOnLockscreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowOnLockscreen:");
}

id objc_msgSend_setSignpostIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignpostIds:");
}

id objc_msgSend_setSiriForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriForegrounded:");
}

id objc_msgSend_setSoloDeviceEnclosureColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoloDeviceEnclosureColor:");
}

id objc_msgSend_setSoloModelID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoloModelID:");
}

id objc_msgSend_setSortByIsVideoRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortByIsVideoRoute:");
}

id objc_msgSend_setSortingHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortingHint:");
}

id objc_msgSend_setSourceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceUID:");
}

id objc_msgSend_setStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartDate:");
}

id objc_msgSend_setStartingNowPlayingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartingNowPlayingSession:");
}

id objc_msgSend_setStartingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartingSession:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setStateDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateDescriptor:");
}

id objc_msgSend_setStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatus:");
}

id objc_msgSend_setStorefrontCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStorefrontCountryCode:");
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setString:");
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStyle:");
}

id objc_msgSend_setSubscribedPlayerPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubscribedPlayerPaths:");
}

id objc_msgSend_setSuggestionCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestionCount:");
}

id objc_msgSend_setSupportedAPIs_forApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedAPIs:forApplication:");
}

id objc_msgSend_setSupportedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedCommands:");
}

id objc_msgSend_setSupportedMessages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedMessages:");
}

id objc_msgSend_setSupportedPlaybackSessionTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedPlaybackSessionTypes:");
}

id objc_msgSend_setSupportedRemoteControlCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedRemoteControlCommands:");
}

id objc_msgSend_setSupportedRemoteControlCommandsData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedRemoteControlCommandsData:");
}

id objc_msgSend_setSupportsACL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsACL:");
}

id objc_msgSend_setSupportsExtendedMotion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsExtendedMotion:");
}

id objc_msgSend_setSupportsIdleReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsIdleReset:");
}

id objc_msgSend_setSupportsMultiplayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsMultiplayer:");
}

id objc_msgSend_setSupportsOutputContextSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsOutputContextSync:");
}

id objc_msgSend_setSupportsSharedQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsSharedQueue:");
}

id objc_msgSend_setSupportsSystemPairing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsSystemPairing:");
}

id objc_msgSend_setSuppressErrorDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressErrorDialog:");
}

id objc_msgSend_setSuppressPairedDeviceSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressPairedDeviceSync:");
}

id objc_msgSend_setSystemActiveEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemActiveEndpoints:");
}

id objc_msgSend_setSystemBooksApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemBooksApplication:");
}

id objc_msgSend_setSystemDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemDiscoveryMode:");
}

id objc_msgSend_setSystemMediaApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemMediaApplication:");
}

id objc_msgSend_setSystemMediaClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemMediaClient:");
}

id objc_msgSend_setSystemPodcastApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemPodcastApplication:");
}

id objc_msgSend_setTXTRecordData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTXTRecordData:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setTelevisionEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTelevisionEndpoints:");
}

id objc_msgSend_setThrottled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThrottled:");
}

id objc_msgSend_setTightSyncUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTightSyncUID:");
}

id objc_msgSend_setTimeoutTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutTimer:");
}

id objc_msgSend_setToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToken:");
}

id objc_msgSend_setTracked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTracked:");
}

id objc_msgSend_setTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransaction:");
}

id objc_msgSend_setTransactions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransactions:");
}

id objc_msgSend_setTransitionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionHandler:");
}

id objc_msgSend_setTransport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransport:");
}

id objc_msgSend_setTransportOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransportOptions:");
}

id objc_msgSend_setTransportType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransportType:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setUiActivitiesInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUiActivitiesInfo:");
}

id objc_msgSend_setUnclusteredOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnclusteredOutputDevices:");
}

id objc_msgSend_setUnderlyingQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlyingQueue:");
}

id objc_msgSend_setUndiscoverableGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUndiscoverableGroupLeader:");
}

id objc_msgSend_setUndiscoverableGroupLeaderHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUndiscoverableGroupLeaderHandle:");
}

id objc_msgSend_setUndoTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUndoTimer:");
}

id objc_msgSend_setUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUniqueIdentifier:");
}

id objc_msgSend_setUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateHandler:");
}

id objc_msgSend_setUseOutputDeviceCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseOutputDeviceCache:");
}

id objc_msgSend_setUseWeakMatching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseWeakMatching:");
}

id objc_msgSend_setUsedTransactionMemory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsedTransactionMemory:");
}

id objc_msgSend_setUserData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserData:");
}

id objc_msgSend_setUserDefaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserDefaults:");
}

id objc_msgSend_setUserDisplayPreferencesDidChangeCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserDisplayPreferencesDidChangeCallback:");
}

id objc_msgSend_setUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserIdentity:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setUserInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInitiated:");
}

id objc_msgSend_setUserSelectedDeviceNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserSelectedDeviceNames:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:");
}

id objc_msgSend_setVideoStatusItemController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoStatusItemController:");
}

id objc_msgSend_setVisibleMediaApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisibleMediaApps:");
}

id objc_msgSend_setVoiceRecordingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceRecordingState:");
}

id objc_msgSend_setVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolume:");
}

id objc_msgSend_setVolume_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolume:error:");
}

id objc_msgSend_setVolume_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolume:outputDeviceUID:details:");
}

id objc_msgSend_setVolumeCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeCallback:");
}

id objc_msgSend_setVolumeCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeCapabilities:");
}

id objc_msgSend_setVolumeChangedCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeChangedCallback:withQueue:");
}

id objc_msgSend_setVolumeControlCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeControlCapabilities:");
}

id objc_msgSend_setVolumeControlCapabilitiesCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeControlCapabilitiesCallback:");
}

id objc_msgSend_setVolumeControlCapabilitiesCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeControlCapabilitiesCallback:withQueue:");
}

id objc_msgSend_setVolumeController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeController:");
}

id objc_msgSend_setVolumeMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeMuted:");
}

id objc_msgSend_setVolumeMutedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeMutedCallback:");
}

id objc_msgSend_setVolumeMutedChangedCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeMutedChangedCallback:withQueue:");
}

id objc_msgSend_setVolumeTo_forCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeTo:forCategory:");
}

id objc_msgSend_setWaitForCompleteClusters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitForCompleteClusters:");
}

id objc_msgSend_setWaking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaking:");
}

id objc_msgSend_setWantsAssertionsForNotificationsWithPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsAssertionsForNotificationsWithPlayerPath:");
}

id objc_msgSend_setWantsCrossAccountMessaging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsCrossAccountMessaging:");
}

id objc_msgSend_setWantsEndpointChangeNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsEndpointChangeNotifications:");
}

id objc_msgSend_setWantsNowPlayingNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsNowPlayingNotifications:");
}

id objc_msgSend_setWantsOutputDeviceNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsOutputDeviceNotifications:");
}

id objc_msgSend_setWantsSystemEndpointNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsSystemEndpointNotifications:");
}

id objc_msgSend_setWantsVolumeNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsVolumeNotifications:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithCapacity:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_setXpcClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXpcClient:");
}

id objc_msgSend_setXpcEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXpcEndpoint:");
}

id objc_msgSend_settingOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 settingOutputDeviceUIDs];
}

id objc_msgSend_setup(void *a1, const char *a2, ...)
{
  return _[a1 setup];
}

id objc_msgSend_setupTimerForRoute_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupTimerForRoute:bundleIdentifier:");
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedAVSystemController(void *a1, const char *a2, ...)
{
  return _[a1 sharedAVSystemController];
}

id objc_msgSend_sharedAudioPresentationContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedAudioPresentationContext];
}

id objc_msgSend_sharedAudioPresentationOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedAudioPresentationOutputContext];
}

id objc_msgSend_sharedAuthorizationSession(void *a1, const char *a2, ...)
{
  return _[a1 sharedAuthorizationSession];
}

id objc_msgSend_sharedCenter(void *a1, const char *a2, ...)
{
  return _[a1 sharedCenter];
}

id objc_msgSend_sharedCompanionLinkClient(void *a1, const char *a2, ...)
{
  return _[a1 sharedCompanionLinkClient];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedConnectionController(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnectionController];
}

id objc_msgSend_sharedController(void *a1, const char *a2, ...)
{
  return _[a1 sharedController];
}

id objc_msgSend_sharedDataSource(void *a1, const char *a2, ...)
{
  return _[a1 sharedDataSource];
}

id objc_msgSend_sharedIDSCompanionLinkClient(void *a1, const char *a2, ...)
{
  return _[a1 sharedIDSCompanionLinkClient];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 sharedLocalDevice];
}

id objc_msgSend_sharedLocalEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 sharedLocalEndpoint];
}

id objc_msgSend_sharedLocalEndpointForRoutingContextWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedLocalEndpointForRoutingContextWithUID:");
}

id objc_msgSend_sharedLogger(void *a1, const char *a2, ...)
{
  return _[a1 sharedLogger];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedMonitor(void *a1, const char *a2, ...)
{
  return _[a1 sharedMonitor];
}

id objc_msgSend_sharedPrivacyInfo(void *a1, const char *a2, ...)
{
  return _[a1 sharedPrivacyInfo];
}

id objc_msgSend_sharedPrivacyInfoForUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedPrivacyInfoForUserIdentity:");
}

id objc_msgSend_sharedQueueVersion(void *a1, const char *a2, ...)
{
  return _[a1 sharedQueueVersion];
}

id objc_msgSend_sharedSecret(void *a1, const char *a2, ...)
{
  return _[a1 sharedSecret];
}

id objc_msgSend_sharedServer(void *a1, const char *a2, ...)
{
  return _[a1 sharedServer];
}

id objc_msgSend_sharedService(void *a1, const char *a2, ...)
{
  return _[a1 sharedService];
}

id objc_msgSend_sharedServiceClient(void *a1, const char *a2, ...)
{
  return _[a1 sharedServiceClient];
}

id objc_msgSend_sharedSystemAudioContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedSystemAudioContext];
}

id objc_msgSend_sharedSystemScreenContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedSystemScreenContext];
}

id objc_msgSend_shortDescription(void *a1, const char *a2, ...)
{
  return _[a1 shortDescription];
}

id objc_msgSend_shortValue(void *a1, const char *a2, ...)
{
  return _[a1 shortValue];
}

id objc_msgSend_shouldAutoApproveIdentity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutoApproveIdentity:completion:");
}

id objc_msgSend_shouldAutoApproveOOBKeys_withSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutoApproveOOBKeys:withSession:completion:");
}

id objc_msgSend_shouldAutoApproveRequest_withSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutoApproveRequest:withSession:completion:");
}

id objc_msgSend_shouldBeLocallyHosted(void *a1, const char *a2, ...)
{
  return _[a1 shouldBeLocallyHosted];
}

id objc_msgSend_shouldClearPredictedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 shouldClearPredictedRoutes];
}

id objc_msgSend_shouldConnectToLocalEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 shouldConnectToLocalEndpoint];
}

id objc_msgSend_shouldConsiderSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 shouldConsiderSuggestions];
}

id objc_msgSend_shouldDemote(void *a1, const char *a2, ...)
{
  return _[a1 shouldDemote];
}

id objc_msgSend_shouldDonate(void *a1, const char *a2, ...)
{
  return _[a1 shouldDonate];
}

id objc_msgSend_shouldFinishPresentationForCurrentPersonalDevices(void *a1, const char *a2, ...)
{
  return _[a1 shouldFinishPresentationForCurrentPersonalDevices];
}

id objc_msgSend_shouldIgnorePredictedRoutesSync(void *a1, const char *a2, ...)
{
  return _[a1 shouldIgnorePredictedRoutesSync];
}

id objc_msgSend_shouldImplicitlyLaunchApplication(void *a1, const char *a2, ...)
{
  return _[a1 shouldImplicitlyLaunchApplication];
}

id objc_msgSend_shouldInitializeGenericBonjourService(void *a1, const char *a2, ...)
{
  return _[a1 shouldInitializeGenericBonjourService];
}

id objc_msgSend_shouldInitializeIDSService(void *a1, const char *a2, ...)
{
  return _[a1 shouldInitializeIDSService];
}

id objc_msgSend_shouldInitializeMRRelayService(void *a1, const char *a2, ...)
{
  return _[a1 shouldInitializeMRRelayService];
}

id objc_msgSend_shouldInitializeRapportService(void *a1, const char *a2, ...)
{
  return _[a1 shouldInitializeRapportService];
}

id objc_msgSend_shouldInitializeTelevisionBonjourService(void *a1, const char *a2, ...)
{
  return _[a1 shouldInitializeTelevisionBonjourService];
}

id objc_msgSend_shouldLogPairingSetupCode(void *a1, const char *a2, ...)
{
  return _[a1 shouldLogPairingSetupCode];
}

id objc_msgSend_shouldModifyPredictedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 shouldModifyPredictedRoutes];
}

id objc_msgSend_shouldNotPauseIfLastDeviceRemoved(void *a1, const char *a2, ...)
{
  return _[a1 shouldNotPauseIfLastDeviceRemoved];
}

id objc_msgSend_shouldNotifyForSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldNotifyForSessionIdentifier:");
}

id objc_msgSend_shouldRun(void *a1, const char *a2, ...)
{
  return _[a1 shouldRun];
}

id objc_msgSend_shouldSendCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSendCommand:");
}

id objc_msgSend_shouldSendCommandsDuringPhoneCall(void *a1, const char *a2, ...)
{
  return _[a1 shouldSendCommandsDuringPhoneCall];
}

id objc_msgSend_shouldSuppress(void *a1, const char *a2, ...)
{
  return _[a1 shouldSuppress];
}

id objc_msgSend_shouldUseDeviceInfoForLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 shouldUseDeviceInfoForLocalDevice];
}

id objc_msgSend_shouldUseVideoSymbolForDevices_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseVideoSymbolForDevices:bundleIdentifier:");
}

id objc_msgSend_shouldWakeDeviceForRemoteControlCommands(void *a1, const char *a2, ...)
{
  return _[a1 shouldWakeDeviceForRemoteControlCommands];
}

id objc_msgSend_showBluePill(void *a1, const char *a2, ...)
{
  return _[a1 showBluePill];
}

id objc_msgSend_showRouteRecommendationsOutsideApps(void *a1, const char *a2, ...)
{
  return _[a1 showRouteRecommendationsOutsideApps];
}

id objc_msgSend_showUncommitedDevices(void *a1, const char *a2, ...)
{
  return _[a1 showUncommitedDevices];
}

id objc_msgSend_showWithPin_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showWithPin:forClient:");
}

id objc_msgSend_signatureWithObjCTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signatureWithObjCTypes:");
}

id objc_msgSend_signpostEndWillShowBanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signpostEndWillShowBanner:");
}

id objc_msgSend_signpostIds(void *a1, const char *a2, ...)
{
  return _[a1 signpostIds];
}

id objc_msgSend_sinkWithCompletion_shouldContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sinkWithCompletion:shouldContinue:");
}

id objc_msgSend_siriVisible(void *a1, const char *a2, ...)
{
  return _[a1 siriVisible];
}

id objc_msgSend_skeleton(void *a1, const char *a2, ...)
{
  return _[a1 skeleton];
}

id objc_msgSend_sleepObserverSystemDidWake_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sleepObserverSystemDidWake:");
}

id objc_msgSend_sleepObserverSystemWillSleep_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sleepObserverSystemWillSleep:completion:");
}

id objc_msgSend_snapshotForIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotForIsPlaying:");
}

id objc_msgSend_snapshotWithDomain_type_subType_context_triggerThresholdValues_events_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:");
}

id objc_msgSend_snapshotsForIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotsForIsPlaying:");
}

id objc_msgSend_socialProfile(void *a1, const char *a2, ...)
{
  return _[a1 socialProfile];
}

id objc_msgSend_socialProfileID(void *a1, const char *a2, ...)
{
  return _[a1 socialProfileID];
}

id objc_msgSend_sortCandidateResults_contextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortCandidateResults:contextIdentifier:");
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sortUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingDescriptors:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingDescriptors:");
}

id objc_msgSend_sortingHint(void *a1, const char *a2, ...)
{
  return _[a1 sortingHint];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_sourceInfo(void *a1, const char *a2, ...)
{
  return _[a1 sourceInfo];
}

id objc_msgSend_sourceOrigin(void *a1, const char *a2, ...)
{
  return _[a1 sourceOrigin];
}

id objc_msgSend_sourceOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 sourceOutputContext];
}

id objc_msgSend_sourceOutputDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 sourceOutputDeviceName];
}

id objc_msgSend_sourceOutputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 sourceOutputDeviceUID];
}

id objc_msgSend_sourcePlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 sourcePlayerPath];
}

id objc_msgSend_sourceRecommendationsPlattersFromIR(void *a1, const char *a2, ...)
{
  return _[a1 sourceRecommendationsPlattersFromIR];
}

id objc_msgSend_sourceUID(void *a1, const char *a2, ...)
{
  return _[a1 sourceUID];
}

id objc_msgSend_specificAccountWithDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specificAccountWithDSID:");
}

id objc_msgSend_standardCredentials(void *a1, const char *a2, ...)
{
  return _[a1 standardCredentials];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAcknowledgeResetTimerForSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAcknowledgeResetTimerForSessionIdentifier:");
}

id objc_msgSend_startContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startContext:");
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _[a1 startDate];
}

id objc_msgSend_startEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startEvent:");
}

id objc_msgSend_startGroupSessionLowPowerPlatterActivity(void *a1, const char *a2, ...)
{
  return _[a1 startGroupSessionLowPowerPlatterActivity];
}

id objc_msgSend_startGroupSessionNearbyActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startGroupSessionNearbyActivity:");
}

id objc_msgSend_startGroupSessionsForAllRoutes(void *a1, const char *a2, ...)
{
  return _[a1 startGroupSessionsForAllRoutes];
}

id objc_msgSend_startMirroringActivity(void *a1, const char *a2, ...)
{
  return _[a1 startMirroringActivity];
}

id objc_msgSend_startMonitoringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMonitoringWithOptions:");
}

id objc_msgSend_startNowPlayingActivityWithPreferredState_suppressedBundleIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startNowPlayingActivityWithPreferredState:suppressedBundleIdentifiers:");
}

id objc_msgSend_startNowPlayingSessionABC(void *a1, const char *a2, ...)
{
  return _[a1 startNowPlayingSessionABC];
}

id objc_msgSend_startNowPlayingSessionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startNowPlayingSessionWithCompletion:");
}

id objc_msgSend_startObservationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 startObservationIfNeeded];
}

id objc_msgSend_startRemoteControlGroupSessionWithRouteType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRemoteControlGroupSessionWithRouteType:completion:");
}

id objc_msgSend_startRouteRecommendationActivityFor_relevanceScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRouteRecommendationActivityFor:relevanceScore:");
}

id objc_msgSend_startWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startWithQueue:");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateCenter(void *a1, const char *a2, ...)
{
  return _[a1 stateCenter];
}

id objc_msgSend_stateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 stateMonitor];
}

id objc_msgSend_stateObserver_didReceiveClientDidUnregister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveClientDidUnregister:");
}

id objc_msgSend_stateObserver_didReceiveCoalescedNowPlayingStateChange_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveCoalescedNowPlayingStateChange:playerPath:");
}

id objc_msgSend_stateObserver_didReceiveDefaultSupportedCommandsChange_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveDefaultSupportedCommandsChange:playerPath:");
}

id objc_msgSend_stateObserver_didReceiveNowPlayingClientChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveNowPlayingClientChange:");
}

id objc_msgSend_stateObserver_didReceiveNowPlayingPlayerChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveNowPlayingPlayerChange:");
}

id objc_msgSend_stateObserver_didReceivePlayerDidUnregister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceivePlayerDidUnregister:");
}

id objc_msgSend_stateObserver_didReceiveVolumeControlCapabilitiesChange_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveVolumeControlCapabilitiesChange:playerPath:");
}

id objc_msgSend_staticRequest(void *a1, const char *a2, ...)
{
  return _[a1 staticRequest];
}

id objc_msgSend_staticRequestForRoute_devices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "staticRequestForRoute:devices:");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _[a1 status];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopAirPlayingAndRemoteControlling(void *a1, const char *a2, ...)
{
  return _[a1 stopAirPlayingAndRemoteControlling];
}

id objc_msgSend_stopNowPlayingSesion(void *a1, const char *a2, ...)
{
  return _[a1 stopNowPlayingSesion];
}

id objc_msgSend_stopObserving(void *a1, const char *a2, ...)
{
  return _[a1 stopObserving];
}

id objc_msgSend_stopObservingNowPlayingInfo(void *a1, const char *a2, ...)
{
  return _[a1 stopObservingNowPlayingInfo];
}

id objc_msgSend_stopReceivingUpdatesForSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopReceivingUpdatesForSource:");
}

id objc_msgSend_storage(void *a1, const char *a2, ...)
{
  return _[a1 storage];
}

id objc_msgSend_storefrontCountryCode(void *a1, const char *a2, ...)
{
  return _[a1 storefrontCountryCode];
}

id objc_msgSend_streamsActivelyUsingSlot(void *a1, const char *a2, ...)
{
  return _[a1 streamsActivelyUsingSlot];
}

id objc_msgSend_streamsThatCountTowardsCapacity(void *a1, const char *a2, ...)
{
  return _[a1 streamsThatCountTowardsCapacity];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingLastPathComponent];
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_strongToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 strongToStrongObjectsMapTable];
}

id objc_msgSend_subscribeToNotifications_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscribeToNotifications:error:");
}

id objc_msgSend_subscribeToPlaybackQueue_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscribeToPlaybackQueue:forRequest:");
}

id objc_msgSend_subscribedPlayerPaths(void *a1, const char *a2, ...)
{
  return _[a1 subscribedPlayerPaths];
}

id objc_msgSend_subscriptionControllerForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscriptionControllerForPlayerPath:");
}

id objc_msgSend_subscriptionStatus(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionStatus];
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_suggestionCount(void *a1, const char *a2, ...)
{
  return _[a1 suggestionCount];
}

id objc_msgSend_suggestionPreferences(void *a1, const char *a2, ...)
{
  return _[a1 suggestionPreferences];
}

id objc_msgSend_suggestionsDisabledInContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestionsDisabledInContext:");
}

id objc_msgSend_supportASERetargetting(void *a1, const char *a2, ...)
{
  return _[a1 supportASERetargetting];
}

id objc_msgSend_supportAirPlayLeaderInfoSync(void *a1, const char *a2, ...)
{
  return _[a1 supportAirPlayLeaderInfoSync];
}

id objc_msgSend_supportAirplayStereoPairPersistentConnections(void *a1, const char *a2, ...)
{
  return _[a1 supportAirplayStereoPairPersistentConnections];
}

id objc_msgSend_supportCoordinatedVolume(void *a1, const char *a2, ...)
{
  return _[a1 supportCoordinatedVolume];
}

id objc_msgSend_supportElectedPlayer(void *a1, const char *a2, ...)
{
  return _[a1 supportElectedPlayer];
}

id objc_msgSend_supportExpanseMigration(void *a1, const char *a2, ...)
{
  return _[a1 supportExpanseMigration];
}

id objc_msgSend_supportGenericAudioGroup(void *a1, const char *a2, ...)
{
  return _[a1 supportGenericAudioGroup];
}

id objc_msgSend_supportGroupSession(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSession];
}

id objc_msgSend_supportGroupSessionAttribution(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionAttribution];
}

id objc_msgSend_supportGroupSessionAutoApproval(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionAutoApproval];
}

id objc_msgSend_supportGroupSessionHome(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionHome];
}

id objc_msgSend_supportGroupSessionHomePodBoop(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionHomePodBoop];
}

id objc_msgSend_supportGroupSessionLowPowerMode(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionLowPowerMode];
}

id objc_msgSend_supportGroupSessionOfframp(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionOfframp];
}

id objc_msgSend_supportIDSDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 supportIDSDiscovery];
}

id objc_msgSend_supportLastPlayingDevice(void *a1, const char *a2, ...)
{
  return _[a1 supportLastPlayingDevice];
}

id objc_msgSend_supportLockscreenPlatterDisplayForPersonalDevice(void *a1, const char *a2, ...)
{
  return _[a1 supportLockscreenPlatterDisplayForPersonalDevice];
}

id objc_msgSend_supportMRRelay(void *a1, const char *a2, ...)
{
  return _[a1 supportMRRelay];
}

id objc_msgSend_supportManyRecommendationsPlatters(void *a1, const char *a2, ...)
{
  return _[a1 supportManyRecommendationsPlatters];
}

id objc_msgSend_supportMultiplayerHost(void *a1, const char *a2, ...)
{
  return _[a1 supportMultiplayerHost];
}

id objc_msgSend_supportNanoLinkAgent(void *a1, const char *a2, ...)
{
  return _[a1 supportNanoLinkAgent];
}

id objc_msgSend_supportNanoStandalone(void *a1, const char *a2, ...)
{
  return _[a1 supportNanoStandalone];
}

id objc_msgSend_supportNativeToAirPlayASERetargetting(void *a1, const char *a2, ...)
{
  return _[a1 supportNativeToAirPlayASERetargetting];
}

id objc_msgSend_supportNowPlayingPIP(void *a1, const char *a2, ...)
{
  return _[a1 supportNowPlayingPIP];
}

id objc_msgSend_supportNowPlayingSessionDataSource(void *a1, const char *a2, ...)
{
  return _[a1 supportNowPlayingSessionDataSource];
}

id objc_msgSend_supportOutputContextPrewarming(void *a1, const char *a2, ...)
{
  return _[a1 supportOutputContextPrewarming];
}

id objc_msgSend_supportOutputContextSync(void *a1, const char *a2, ...)
{
  return _[a1 supportOutputContextSync];
}

id objc_msgSend_supportPTOTRefactorPart1(void *a1, const char *a2, ...)
{
  return _[a1 supportPTOTRefactorPart1];
}

id objc_msgSend_supportPredictedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 supportPredictedRoutes];
}

id objc_msgSend_supportRouteRecommendations(void *a1, const char *a2, ...)
{
  return _[a1 supportRouteRecommendations];
}

id objc_msgSend_supportRoutingContinuity(void *a1, const char *a2, ...)
{
  return _[a1 supportRoutingContinuity];
}

id objc_msgSend_supportSessionBasedLockScreenPlatter(void *a1, const char *a2, ...)
{
  return _[a1 supportSessionBasedLockScreenPlatter];
}

id objc_msgSend_supportSystemEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 supportSystemEndpoints];
}

id objc_msgSend_supportTopologyHealing(void *a1, const char *a2, ...)
{
  return _[a1 supportTopologyHealing];
}

id objc_msgSend_supportedAPIsForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedAPIsForApplication:");
}

id objc_msgSend_supportedCommands(void *a1, const char *a2, ...)
{
  return _[a1 supportedCommands];
}

id objc_msgSend_supportedMessages(void *a1, const char *a2, ...)
{
  return _[a1 supportedMessages];
}

id objc_msgSend_supportedPlaybackSessionTypes(void *a1, const char *a2, ...)
{
  return _[a1 supportedPlaybackSessionTypes];
}

id objc_msgSend_supportedProtocolMessages(void *a1, const char *a2, ...)
{
  return _[a1 supportedProtocolMessages];
}

id objc_msgSend_supportedRemoteControlCommands(void *a1, const char *a2, ...)
{
  return _[a1 supportedRemoteControlCommands];
}

id objc_msgSend_supportedRemoteControlCommandsData(void *a1, const char *a2, ...)
{
  return _[a1 supportedRemoteControlCommandsData];
}

id objc_msgSend_supportsBackgroundAudio(void *a1, const char *a2, ...)
{
  return _[a1 supportsBackgroundAudio];
}

id objc_msgSend_supportsBluetoothSharing(void *a1, const char *a2, ...)
{
  return _[a1 supportsBluetoothSharing];
}

id objc_msgSend_supportsCustomSystemAperturePill(void *a1, const char *a2, ...)
{
  return _[a1 supportsCustomSystemAperturePill];
}

id objc_msgSend_supportsDesignatedGroupLeaderUpdates(void *a1, const char *a2, ...)
{
  return _[a1 supportsDesignatedGroupLeaderUpdates];
}

id objc_msgSend_supportsIdleDisconnection(void *a1, const char *a2, ...)
{
  return _[a1 supportsIdleDisconnection];
}

id objc_msgSend_supportsIdleReset(void *a1, const char *a2, ...)
{
  return _[a1 supportsIdleReset];
}

id objc_msgSend_supportsImplicitChangeShuffleAndRepeatModeInSetPlaybackQueueCommandOptions(void *a1, const char *a2, ...)
{
  return _[a1 supportsImplicitChangeShuffleAndRepeatModeInSetPlaybackQueueCommandOptions];
}

id objc_msgSend_supportsMultiplayer(void *a1, const char *a2, ...)
{
  return _[a1 supportsMultiplayer];
}

id objc_msgSend_supportsMultipleOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 supportsMultipleOutputDevices];
}

id objc_msgSend_supportsNativeThirdPartyApps(void *a1, const char *a2, ...)
{
  return _[a1 supportsNativeThirdPartyApps];
}

id objc_msgSend_supportsOutputContextSync(void *a1, const char *a2, ...)
{
  return _[a1 supportsOutputContextSync];
}

id objc_msgSend_supportsReconnection(void *a1, const char *a2, ...)
{
  return _[a1 supportsReconnection];
}

id objc_msgSend_supportsSharedQueue(void *a1, const char *a2, ...)
{
  return _[a1 supportsSharedQueue];
}

id objc_msgSend_supportsTwoHop(void *a1, const char *a2, ...)
{
  return _[a1 supportsTwoHop];
}

id objc_msgSend_suppressErrorDialog(void *a1, const char *a2, ...)
{
  return _[a1 suppressErrorDialog];
}

id objc_msgSend_suppressPairedDeviceSync(void *a1, const char *a2, ...)
{
  return _[a1 suppressPairedDeviceSync];
}

id objc_msgSend_suppressionController(void *a1, const char *a2, ...)
{
  return _[a1 suppressionController];
}

id objc_msgSend_suppressionPolicyWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suppressionPolicyWithContext:");
}

id objc_msgSend_symbolNameForOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "symbolNameForOutputDevices:");
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_synchronousRemoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronousRemoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_synchronousServer(void *a1, const char *a2, ...)
{
  return _[a1 synchronousServer];
}

id objc_msgSend_systemBooksApplication(void *a1, const char *a2, ...)
{
  return _[a1 systemBooksApplication];
}

id objc_msgSend_systemEndpointController(void *a1, const char *a2, ...)
{
  return _[a1 systemEndpointController];
}

id objc_msgSend_systemEndpointController_activeSystemEndpointDidChangeForRequest_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemEndpointController:activeSystemEndpointDidChangeForRequest:type:");
}

id objc_msgSend_systemEndpointInfo(void *a1, const char *a2, ...)
{
  return _[a1 systemEndpointInfo];
}

id objc_msgSend_systemEndpointUpdates(void *a1, const char *a2, ...)
{
  return _[a1 systemEndpointUpdates];
}

id objc_msgSend_systemMediaAppPlayerPathForNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemMediaAppPlayerPathForNotification:");
}

id objc_msgSend_systemMediaApplication(void *a1, const char *a2, ...)
{
  return _[a1 systemMediaApplication];
}

id objc_msgSend_systemMediaBundleIDForBundle_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemMediaBundleIDForBundle:type:");
}

id objc_msgSend_systemMediaBundleIDForBundleID_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemMediaBundleIDForBundleID:type:");
}

id objc_msgSend_systemMediaClient(void *a1, const char *a2, ...)
{
  return _[a1 systemMediaClient];
}

id objc_msgSend_systemPodcastApplication(void *a1, const char *a2, ...)
{
  return _[a1 systemPodcastApplication];
}

id objc_msgSend_takeAssertion_forReason_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeAssertion:forReason:duration:");
}

id objc_msgSend_takeAssertionAndBlessForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeAssertionAndBlessForReason:");
}

id objc_msgSend_takeCriticalSectionAssertionForRequestID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeCriticalSectionAssertionForRequestID:completion:");
}

id objc_msgSend_takelockScreenAssertion(void *a1, const char *a2, ...)
{
  return _[a1 takelockScreenAssertion];
}

id objc_msgSend_targetWithPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetWithPid:");
}

id objc_msgSend_targetWithProcessIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetWithProcessIdentity:");
}

id objc_msgSend_taskState(void *a1, const char *a2, ...)
{
  return _[a1 taskState];
}

id objc_msgSend_textFieldValues(void *a1, const char *a2, ...)
{
  return _[a1 textFieldValues];
}

id objc_msgSend_tightSyncID(void *a1, const char *a2, ...)
{
  return _[a1 tightSyncID];
}

id objc_msgSend_tightSyncUID(void *a1, const char *a2, ...)
{
  return _[a1 tightSyncUID];
}

id objc_msgSend_time(void *a1, const char *a2, ...)
{
  return _[a1 time];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timeRemaining(void *a1, const char *a2, ...)
{
  return _[a1 timeRemaining];
}

id objc_msgSend_timeSincePlaybackStarted(void *a1, const char *a2, ...)
{
  return _[a1 timeSincePlaybackStarted];
}

id objc_msgSend_timeSincePlaying(void *a1, const char *a2, ...)
{
  return _[a1 timeSincePlaying];
}

id objc_msgSend_timeSincePlayingForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeSincePlayingForPlayerPath:");
}

id objc_msgSend_timeoutTimer(void *a1, const char *a2, ...)
{
  return _[a1 timeoutTimer];
}

id objc_msgSend_timerWithInterval_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerWithInterval:queue:block:");
}

id objc_msgSend_timerWithInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerWithInterval:repeats:block:");
}

id objc_msgSend_timerWithInterval_repeats_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerWithInterval:repeats:queue:block:");
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _[a1 tintColor];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_toggleActiveCategoryMuted(void *a1, const char *a2, ...)
{
  return _[a1 toggleActiveCategoryMuted];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_tokenForCurrentProcess(void *a1, const char *a2, ...)
{
  return _[a1 tokenForCurrentProcess];
}

id objc_msgSend_tombstoneWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tombstoneWithError:");
}

id objc_msgSend_topOfNowPlayingAppStack(void *a1, const char *a2, ...)
{
  return _[a1 topOfNowPlayingAppStack];
}

id objc_msgSend_track(void *a1, const char *a2, ...)
{
  return _[a1 track];
}

id objc_msgSend_trackJoinResponseApproved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackJoinResponseApproved:");
}

id objc_msgSend_trackWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackWithError:");
}

id objc_msgSend_tracked(void *a1, const char *a2, ...)
{
  return _[a1 tracked];
}

id objc_msgSend_transaction(void *a1, const char *a2, ...)
{
  return _[a1 transaction];
}

id objc_msgSend_transaction_didReceivePackets_receivedSize_requestedSize_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transaction:didReceivePackets:receivedSize:requestedSize:queue:completion:");
}

id objc_msgSend_transactionDidEnd_bytesRemaining_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionDidEnd:bytesRemaining:");
}

id objc_msgSend_transactionRequestingMemorySize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionRequestingMemorySize:");
}

id objc_msgSend_transactionWaitDurationOnNetworkSend(void *a1, const char *a2, ...)
{
  return _[a1 transactionWaitDurationOnNetworkSend];
}

id objc_msgSend_transactionWaitDurationOnOutOfMemory(void *a1, const char *a2, ...)
{
  return _[a1 transactionWaitDurationOnOutOfMemory];
}

id objc_msgSend_transactionWaitDurationOnXpcSend(void *a1, const char *a2, ...)
{
  return _[a1 transactionWaitDurationOnXpcSend];
}

id objc_msgSend_transitionToState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToState:");
}

id objc_msgSend_transport(void *a1, const char *a2, ...)
{
  return _[a1 transport];
}

id objc_msgSend_transportParticipants_forSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transportParticipants:forSession:");
}

id objc_msgSend_transportType(void *a1, const char *a2, ...)
{
  return _[a1 transportType];
}

id objc_msgSend_triggerAudioFadeInWithReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerAudioFadeInWithReplyQueue:completion:");
}

id objc_msgSend_triggerAudioFadeOutForNowPlayingApplicationWithReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerAudioFadeOutForNowPlayingApplicationWithReplyQueue:completion:");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_uiController(void *a1, const char *a2, ...)
{
  return _[a1 uiController];
}

id objc_msgSend_uiManager(void *a1, const char *a2, ...)
{
  return _[a1 uiManager];
}

id objc_msgSend_uiServer(void *a1, const char *a2, ...)
{
  return _[a1 uiServer];
}

id objc_msgSend_uid(void *a1, const char *a2, ...)
{
  return _[a1 uid];
}

id objc_msgSend_unarchivedDictionaryWithKeysOfClass_objectsOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedDictionaryWithKeysOfClass:objectsOfClass:fromData:error:");
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_unclusteredOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 unclusteredOutputDevices];
}

id objc_msgSend_undiscoverableGroupLeaderHandle(void *a1, const char *a2, ...)
{
  return _[a1 undiscoverableGroupLeaderHandle];
}

id objc_msgSend_undoTimer(void *a1, const char *a2, ...)
{
  return _[a1 undoTimer];
}

id objc_msgSend_undoUnusedAutoRouteTimerDuration(void *a1, const char *a2, ...)
{
  return _[a1 undoUnusedAutoRouteTimerDuration];
}

id objc_msgSend_undoUnusedAutoRoutes(void *a1, const char *a2, ...)
{
  return _[a1 undoUnusedAutoRoutes];
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_uniqueIDOverride(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIDOverride];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_unlock(void *a1, const char *a2, ...)
{
  return _[a1 unlock];
}

id objc_msgSend_unpickAirPlayRoutes(void *a1, const char *a2, ...)
{
  return _[a1 unpickAirPlayRoutes];
}

id objc_msgSend_unregisterAllVirtualVoiceInputDevices(void *a1, const char *a2, ...)
{
  return _[a1 unregisterAllVirtualVoiceInputDevices];
}

id objc_msgSend_unregisterConnectionFailureForWHAIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterConnectionFailureForWHAIdentifier:");
}

id objc_msgSend_unregisterDiscoveryToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterDiscoveryToken:");
}

id objc_msgSend_unregisterForChanges(void *a1, const char *a2, ...)
{
  return _[a1 unregisterForChanges];
}

id objc_msgSend_unregisterObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterObserver:");
}

id objc_msgSend_unregisterOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterOrigin:");
}

id objc_msgSend_unregisterOriginForwarder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterOriginForwarder:");
}

id objc_msgSend_unresolvedPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 unresolvedPlayerPath];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_update(void *a1, const char *a2, ...)
{
  return _[a1 update];
}

id objc_msgSend_updateASEAssertionForRemoteDeviceID_isAsserting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateASEAssertionForRemoteDeviceID:isAsserting:");
}

id objc_msgSend_updateActiveBackgroundActivityWithType_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateActiveBackgroundActivityWithType:reason:");
}

id objc_msgSend_updateActiveUser(void *a1, const char *a2, ...)
{
  return _[a1 updateActiveUser];
}

id objc_msgSend_updateCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCandidate:");
}

id objc_msgSend_updateCandidates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCandidates:");
}

id objc_msgSend_updateClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateClient:");
}

id objc_msgSend_updateDefaultSupportedCommandsData_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDefaultSupportedCommandsData:forClient:");
}

id objc_msgSend_updateDesignatedGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDesignatedGroupLeader:");
}

id objc_msgSend_updateDeviceInfo_origin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDeviceInfo:origin:");
}

id objc_msgSend_updateIsMusicAppInstalled(void *a1, const char *a2, ...)
{
  return _[a1 updateIsMusicAppInstalled];
}

id objc_msgSend_updateLastPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLastPlayingDate:");
}

id objc_msgSend_updateNodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNodes:");
}

id objc_msgSend_updateNowPlayingActivityState_suppressedBundleIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNowPlayingActivityState:suppressedBundleIdentifiers:");
}

id objc_msgSend_updateOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateOutputDevices:");
}

id objc_msgSend_updateParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateParticipants:");
}

id objc_msgSend_updatePeer(void *a1, const char *a2, ...)
{
  return _[a1 updatePeer];
}

id objc_msgSend_updatePepperIfNeededWithSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePepperIfNeededWithSession:");
}

id objc_msgSend_updatePlaybackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlaybackQueue:");
}

id objc_msgSend_updatePlaybackQueue_fromRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlaybackQueue:fromRequest:");
}

id objc_msgSend_updatePlaybackQueueWithContentItems_fromRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlaybackQueueWithContentItems:fromRequest:");
}

id objc_msgSend_updatePlaybackState_date_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlaybackState:date:");
}

id objc_msgSend_updatePlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlayer:");
}

id objc_msgSend_updateRouteCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRouteCandidate:");
}

id objc_msgSend_updateRouteCandidates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRouteCandidates:");
}

id objc_msgSend_updateSystemEndpointForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemEndpointForRequest:");
}

id objc_msgSend_updateSystemEndpointForRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemEndpointForRequest:completion:");
}

id objc_msgSend_updateSystemEndpointForRequest_event_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemEndpointForRequest:event:completion:");
}

id objc_msgSend_updateSystemEndpointForRequest_event_eventReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemEndpointForRequest:event:eventReason:completion:");
}

id objc_msgSend_updateVolatileData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVolatileData:completion:");
}

id objc_msgSend_updateVolume_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVolume:outputDeviceUID:");
}

id objc_msgSend_updateVolumeControlCapabilities_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVolumeControlCapabilities:outputDeviceUID:");
}

id objc_msgSend_updateVolumeMuted_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVolumeMuted:outputDeviceUID:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_useAPSyncAPI(void *a1, const char *a2, ...)
{
  return _[a1 useAPSyncAPI];
}

id objc_msgSend_useClusterDevices(void *a1, const char *a2, ...)
{
  return _[a1 useClusterDevices];
}

id objc_msgSend_useExternalDeviceSystemPairing(void *a1, const char *a2, ...)
{
  return _[a1 useExternalDeviceSystemPairing];
}

id objc_msgSend_useOutputDeviceCache(void *a1, const char *a2, ...)
{
  return _[a1 useOutputDeviceCache];
}

id objc_msgSend_usePeerToPeerExternalDeviceConnections(void *a1, const char *a2, ...)
{
  return _[a1 usePeerToPeerExternalDeviceConnections];
}

id objc_msgSend_useProactivePFSQSender(void *a1, const char *a2, ...)
{
  return _[a1 useProactivePFSQSender];
}

id objc_msgSend_userCancelledPickingRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userCancelledPickingRoute:");
}

id objc_msgSend_userData(void *a1, const char *a2, ...)
{
  return _[a1 userData];
}

id objc_msgSend_userDefaults(void *a1, const char *a2, ...)
{
  return _[a1 userDefaults];
}

id objc_msgSend_userIdentity(void *a1, const char *a2, ...)
{
  return _[a1 userIdentity];
}

id objc_msgSend_userIdentityForDSID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userIdentityForDSID:completion:");
}

id objc_msgSend_userIdentityWithDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userIdentityWithDisplayName:");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInitiated(void *a1, const char *a2, ...)
{
  return _[a1 userInitiated];
}

id objc_msgSend_userProfile(void *a1, const char *a2, ...)
{
  return _[a1 userProfile];
}

id objc_msgSend_userSelectedEndpointController(void *a1, const char *a2, ...)
{
  return _[a1 userSelectedEndpointController];
}

id objc_msgSend_userState(void *a1, const char *a2, ...)
{
  return _[a1 userState];
}

id objc_msgSend_validateAirPlayConfigurationForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAirPlayConfigurationForReason:");
}

id objc_msgSend_validator(void *a1, const char *a2, ...)
{
  return _[a1 validator];
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForEntitlement:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKeyPath:");
}

id objc_msgSend_valueWithMRHIDTouchEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithMRHIDTouchEvent:");
}

id objc_msgSend_verboseConnectionMonitorLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseConnectionMonitorLogging];
}

id objc_msgSend_verboseHostedDiscoverySessionLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseHostedDiscoverySessionLogging];
}

id objc_msgSend_verboseHostedExternalDeviceClientLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseHostedExternalDeviceClientLogging];
}

id objc_msgSend_verboseMRDMediaRemoteClientLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseMRDMediaRemoteClientLogging];
}

id objc_msgSend_verboseNowPlayingStateObserver(void *a1, const char *a2, ...)
{
  return _[a1 verboseNowPlayingStateObserver];
}

id objc_msgSend_verboseOriginForwarderLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseOriginForwarderLogging];
}

id objc_msgSend_verboseRemoteControlDiscoveryLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseRemoteControlDiscoveryLogging];
}

id objc_msgSend_verifyConnectionStatusAndMaybeDisconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyConnectionStatusAndMaybeDisconnect:");
}

id objc_msgSend_verifyCreatedPlayerPath_forClient_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyCreatedPlayerPath:forClient:error:");
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _[a1 version];
}

id objc_msgSend_videoStatusItemController(void *a1, const char *a2, ...)
{
  return _[a1 videoStatusItemController];
}

id objc_msgSend_virtualAudioInputServer_didUpdateRecordingState_forDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "virtualAudioInputServer:didUpdateRecordingState:forDevice:");
}

id objc_msgSend_virtualDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 virtualDeviceID];
}

id objc_msgSend_virtualOutputDeviceDictionary(void *a1, const char *a2, ...)
{
  return _[a1 virtualOutputDeviceDictionary];
}

id objc_msgSend_virtualTouchDeviceWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "virtualTouchDeviceWithID:");
}

id objc_msgSend_visibility(void *a1, const char *a2, ...)
{
  return _[a1 visibility];
}

id objc_msgSend_visibleMediaApps(void *a1, const char *a2, ...)
{
  return _[a1 visibleMediaApps];
}

id objc_msgSend_voiceRecordingState(void *a1, const char *a2, ...)
{
  return _[a1 voiceRecordingState];
}

id objc_msgSend_volume(void *a1, const char *a2, ...)
{
  return _[a1 volume];
}

id objc_msgSend_volumeCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 volumeCapabilities];
}

id objc_msgSend_volumeCategoryForAudioCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeCategoryForAudioCategory:");
}

id objc_msgSend_volumeControlCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 volumeControlCapabilities];
}

id objc_msgSend_volumeControlCapabilitiesForOutputDeviceUID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeControlCapabilitiesForOutputDeviceUID:error:");
}

id objc_msgSend_volumeForOutputDeviceUID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeForOutputDeviceUID:error:");
}

id objc_msgSend_volumeUpdates(void *a1, const char *a2, ...)
{
  return _[a1 volumeUpdates];
}

id objc_msgSend_w(void *a1, const char *a2, ...)
{
  return _[a1 w];
}

id objc_msgSend_waitForCompletion(void *a1, const char *a2, ...)
{
  return _[a1 waitForCompletion];
}

id objc_msgSend_waitForConnectionWithOutputDeviceUID_timeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForConnectionWithOutputDeviceUID:timeout:completion:");
}

id objc_msgSend_waitForPlaybackWithTimeout_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForPlaybackWithTimeout:queue:completion:");
}

id objc_msgSend_waitUntilForwardingOperationsHaveFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntilForwardingOperationsHaveFinished:");
}

id objc_msgSend_wakeDeviceIfNecessaryForNowPlayingPlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wakeDeviceIfNecessaryForNowPlayingPlayerClient:");
}

id objc_msgSend_wakingPlayerPathAssertionDuration(void *a1, const char *a2, ...)
{
  return _[a1 wakingPlayerPathAssertionDuration];
}

id objc_msgSend_wantsNowPlayingArtworkNotifications(void *a1, const char *a2, ...)
{
  return _[a1 wantsNowPlayingArtworkNotifications];
}

id objc_msgSend_wantsNowPlayingNotifications(void *a1, const char *a2, ...)
{
  return _[a1 wantsNowPlayingNotifications];
}

id objc_msgSend_wantsOutputDeviceNotifications(void *a1, const char *a2, ...)
{
  return _[a1 wantsOutputDeviceNotifications];
}

id objc_msgSend_wantsSystemEndpointNotifications(void *a1, const char *a2, ...)
{
  return _[a1 wantsSystemEndpointNotifications];
}

id objc_msgSend_wantsVolumeNotifications(void *a1, const char *a2, ...)
{
  return _[a1 wantsVolumeNotifications];
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 weakObjectsHashTable];
}

id objc_msgSend_weakProxyWithObject_protocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weakProxyWithObject:protocol:");
}

id objc_msgSend_weakToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 weakToStrongObjectsMapTable];
}

id objc_msgSend_weakToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 weakToWeakObjectsMapTable];
}

id objc_msgSend_whaConnect(void *a1, const char *a2, ...)
{
  return _[a1 whaConnect];
}

id objc_msgSend_willBeLocallyHosted(void *a1, const char *a2, ...)
{
  return _[a1 willBeLocallyHosted];
}

id objc_msgSend_willStartingPlaybackToOutputDevicesInterrupt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willStartingPlaybackToOutputDevicesInterrupt:");
}

id objc_msgSend_workerQueue(void *a1, const char *a2, ...)
{
  return _[a1 workerQueue];
}

id objc_msgSend_writeToFile_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:options:error:");
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_xpcClient(void *a1, const char *a2, ...)
{
  return _[a1 xpcClient];
}

id objc_msgSend_xpcClientForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcClientForPlayerPath:");
}

id objc_msgSend_xpcConnection(void *a1, const char *a2, ...)
{
  return _[a1 xpcConnection];
}

id objc_msgSend_xpcEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 xpcEndpoint];
}

id objc_msgSend_xpcMessage(void *a1, const char *a2, ...)
{
  return _[a1 xpcMessage];
}